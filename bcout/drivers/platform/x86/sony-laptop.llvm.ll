; ModuleID = '../bcout/drivers/platform/x86/sony-laptop.llvm.bc'
source_filename = "drivers/platform/x86/sony-laptop.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_sony_laptop_init6:\09\09\09"
module asm ".long\09sony_laptop_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.sony_pic_dev = type { %struct.acpi_device*, %struct.sony_pic_irq*, %struct.sony_pic_ioport*, %struct.list_head, %struct.list_head, %struct.mutex, %struct.sonypi_eventtypes*, i32 (i8, i8)*, i32, i16, i8, i8, i8 }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.71 }
%struct.anon.71 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.73, i32, i32, %struct.list_head }
%struct.anon.73 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_irq = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.74, i8, i8, i32 }
%struct.anon.74 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.acpi_gpio_mapping = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.sony_pic_irq = type { %struct.acpi_resource_irq, %struct.list_head }
%struct.acpi_resource_irq = type { i8, i8, i8, i8, i8, i8, [1 x i8] }
%struct.sony_pic_ioport = type { %struct.acpi_resource_io, %struct.acpi_resource_io, %struct.list_head }
%struct.acpi_resource_io = type <{ i8, i8, i8, i16, i16 }>
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.sonypi_eventtypes = type { i8, i64, %struct.sonypi_event* }
%struct.sonypi_event = type { i8, i8 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.sony_nc_value = type { i8*, i8**, i8**, i32 (i32, i32)*, i32, i32, i32, %struct.device_attribute }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.platform_driver = type { i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)*, void (%struct.platform_device*)*, i32 (%struct.platform_device*, i32)*, i32 (%struct.platform_device*)*, %struct.device_driver, %struct.platform_device_id*, i8 }
%struct.sony_laptop_input_s = type { %struct.atomic_t, %struct.input_dev*, %struct.input_dev*, %struct.kfifo, %struct.spinlock, %struct.timer_list }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon.75 }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon.75 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.input_dev_poller = type opaque
%struct.input_mt = type opaque
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.kfifo = type { %union.anon.76, [0 x i8] }
%union.anon.76 = type { %struct.__kfifo }
%struct.__kfifo = type { i32, i32, i32, i32, i8* }
%struct.acpi_buffer = type { i64, i8* }
%struct.sony_nc_handles = type { [16 x i16], %struct.device_attribute }
%struct.touchpad_control = type { %struct.device_attribute, i32 }
%struct.battery_care_control = type { [2 x %struct.device_attribute], i32 }
%struct.snc_lid_resume_control = type { [3 x %struct.device_attribute], i32, i32 }
%struct.snc_thermal_ctrl = type { i32, i32, %struct.device_attribute, %struct.device_attribute }
%struct.snc_gfx_switch_control = type { %struct.device_attribute, i32 }
%struct.rfkill = type opaque
%struct.rfkill_ops = type { void (%struct.rfkill*, i8*)*, void (%struct.rfkill*, i8*)*, i32 (i8*, i1)* }
%struct.kbd_backlight = type { i32, i32, i32, i32, i32, %struct.device_attribute, %struct.device_attribute }
%struct.backlight_ops = type { i32, i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*, %struct.fb_info*)* }
%struct.backlight_device = type { %struct.backlight_properties, %struct.mutex, %struct.mutex, %struct.backlight_ops*, %struct.notifier_block, %struct.list_head, %struct.device, [32 x i8], i32 }
%struct.backlight_properties = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.fb_info = type { %struct.atomic_t, i32, i32, i32, %struct.mutex, %struct.mutex, %struct.fb_var_screeninfo, %struct.fb_fix_screeninfo, %struct.fb_monspecs, %struct.work_struct, %struct.fb_pixmap, %struct.fb_pixmap, %struct.fb_cmap, %struct.list_head, %struct.fb_videomode*, %struct.backlight_device*, %struct.mutex, [128 x i8], %struct.delayed_work, %struct.fb_deferred_io*, %struct.fb_ops*, %struct.device*, %struct.device*, i32, %struct.fb_tile_ops*, %union.anon.77, i64, i8*, i32, i8*, i8*, %struct.apertures_struct*, i8 }
%struct.fb_var_screeninfo = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, %struct.fb_bitfield, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.fb_bitfield = type { i32, i32, i32 }
%struct.fb_fix_screeninfo = type { [16 x i8], i64, i32, i32, i32, i32, i16, i16, i16, i32, i64, i32, i32, i16, [2 x i16] }
%struct.fb_monspecs = type { %struct.fb_chroma, %struct.fb_videomode*, [4 x i8], [14 x i8], [14 x i8], [14 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, i16, i8, i8, i8, i8 }
%struct.fb_chroma = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fb_pixmap = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.fb_info*, i8*, i8*, i32)*, void (%struct.fb_info*, i8*, i8*, i32)* }
%struct.fb_cmap = type { i32, i32, i16*, i16*, i16*, i16* }
%struct.fb_videomode = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.fb_deferred_io = type { i64, %struct.mutex, %struct.list_head, void (%struct.fb_info*)*, void (%struct.fb_info*, %struct.list_head*)* }
%struct.fb_ops = type { %struct.module*, i32 (%struct.fb_info*, i32)*, i32 (%struct.fb_info*, i32)*, i64 (%struct.fb_info*, i8*, i64, i64*)*, i64 (%struct.fb_info*, i8*, i64, i64*)*, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)*, i32 (%struct.fb_info*)*, i32 (i32, i32, i32, i32, i32, %struct.fb_info*)*, i32 (%struct.fb_cmap*, %struct.fb_info*)*, i32 (i32, %struct.fb_info*)*, i32 (%struct.fb_var_screeninfo*, %struct.fb_info*)*, void (%struct.fb_info*, %struct.fb_fillrect*)*, void (%struct.fb_info*, %struct.fb_copyarea*)*, void (%struct.fb_info*, %struct.fb_image*)*, i32 (%struct.fb_info*, %struct.fb_cursor*)*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*, i32, i64)*, i32 (%struct.fb_info*, i32, i64)*, i32 (%struct.fb_info*, %struct.vm_area_struct*)*, void (%struct.fb_info*, %struct.fb_blit_caps*, %struct.fb_var_screeninfo*)*, void (%struct.fb_info*)*, i32 (%struct.fb_info*)*, i32 (%struct.fb_info*)* }
%struct.fb_fillrect = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_copyarea = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_image = type { i32, i32, i32, i32, i32, i32, i8, i8*, %struct.fb_cmap }
%struct.fb_cursor = type { i16, i16, i16, i8*, %struct.fbcurpos, %struct.fb_image }
%struct.fbcurpos = type { i16, i16 }
%struct.fb_blit_caps = type { i32, i32, i32, i32 }
%struct.fb_tile_ops = type { void (%struct.fb_info*, %struct.fb_tilemap*)*, void (%struct.fb_info*, %struct.fb_tilearea*)*, void (%struct.fb_info*, %struct.fb_tilerect*)*, void (%struct.fb_info*, %struct.fb_tileblit*)*, void (%struct.fb_info*, %struct.fb_tilecursor*)*, i32 (%struct.fb_info*)* }
%struct.fb_tilemap = type { i32, i32, i32, i32, i8* }
%struct.fb_tilearea = type { i32, i32, i32, i32, i32, i32 }
%struct.fb_tilerect = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fb_tileblit = type { i32, i32, i32, i32, i32, i32, i32, i32* }
%struct.fb_tilecursor = type { i32, i32, i32, i32, i32, i32 }
%union.anon.77 = type { i8* }
%struct.apertures_struct = type { i32, [0 x %struct.aperture] }
%struct.aperture = type { i64, i64 }
%struct.sony_backlight_props = type { %struct.backlight_device*, i32, i32, i8, i8 }
%struct.sony_nc_event = type { i8, i8 }
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.acpi_device_info = type { i32, i32, i32, i8, i16, i8, [4 x i8], [5 x i8], i64, %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id_list }
%struct.acpi_pnp_device_id = type { i32, i8* }
%struct.acpi_pnp_device_id_list = type { i32, i32, [0 x %struct.acpi_pnp_device_id] }
%struct.sony_laptop_keypress = type { %struct.input_dev*, i32 }
%struct.anon.68 = type { i32, i32, i8* }
%struct.anon.66 = type { i32, i64 }
%struct.acpi_object_list = type { i32, %union.acpi_object* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.78, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.78 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.anon.79 = type { %struct.acpi_resource, %struct.acpi_resource, %struct.acpi_resource, %struct.acpi_resource }
%struct.acpi_resource = type { i32, i32, %union.acpi_resource_data }
%union.acpi_resource_data = type { %struct.acpi_resource_vendor_typed, [40 x i8] }
%struct.acpi_resource_vendor_typed = type { i16, i8, [16 x i8], [1 x i8] }

@__UNIQUE_ID_author245 = internal constant [47 x i8] c"sony_laptop.author=Stelian Pop, Mattia Dongili\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description246 = internal constant [77 x i8] c"sony_laptop.description=Sony laptop extras driver (SPIC and SNC ACPI device)\00", section ".modinfo", align 1, !dbg !4790
@__UNIQUE_ID_file247 = internal constant [50 x i8] c"sony_laptop.file=drivers/platform/x86/sony-laptop\00", section ".modinfo", align 1, !dbg !4795
@__UNIQUE_ID_license248 = internal constant [24 x i8] c"sony_laptop.license=GPL\00", section ".modinfo", align 1, !dbg !4800
@__param_str_debug = internal constant [18 x i8] c"sony_laptop.debug\00", align 16, !dbg !4948
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 0, align 4, !dbg !4938
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !4805
@__UNIQUE_ID_debugtype249 = internal constant [31 x i8] c"sony_laptop.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !4857
@__UNIQUE_ID_debug250 = internal constant [99 x i8] c"sony_laptop.parm=debug:set this to 1 (and RTFM) if you want to help the development of this driver\00", section ".modinfo", align 1, !dbg !4862
@__param_str_no_spic = internal constant [20 x i8] c"sony_laptop.no_spic\00", align 16, !dbg !4953
@no_spic = internal global i32 0, align 4, !dbg !4940
@__param_no_spic = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_no_spic, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @no_spic to i8*) } }, section "__param", align 8, !dbg !4867
@__UNIQUE_ID_no_spictype251 = internal constant [33 x i8] c"sony_laptop.parmtype=no_spic:int\00", section ".modinfo", align 1, !dbg !4869
@__UNIQUE_ID_no_spic252 = internal constant [78 x i8] c"sony_laptop.parm=no_spic:set this if you don't want to enable the SPIC device\00", section ".modinfo", align 1, !dbg !4874
@__param_str_compat = internal constant [19 x i8] c"sony_laptop.compat\00", align 16, !dbg !4956
@compat = internal global i32 0, align 4, !dbg !4942
@__param_compat = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_compat, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @compat to i8*) } }, section "__param", align 8, !dbg !4879
@__UNIQUE_ID_compattype253 = internal constant [32 x i8] c"sony_laptop.parmtype=compat:int\00", section ".modinfo", align 1, !dbg !4881
@__UNIQUE_ID_compat254 = internal constant [83 x i8] c"sony_laptop.parm=compat:set this if you want to enable backward compatibility mode\00", section ".modinfo", align 1, !dbg !4884
@__param_str_mask = internal constant [17 x i8] c"sony_laptop.mask\00", align 16, !dbg !4961
@param_ops_ulong = external dso_local constant %struct.kernel_param_ops, align 8
@mask = internal global i64 4294967295, align 8, !dbg !4966
@__param_mask = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_mask, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ulong, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i64* @mask to i8*) } }, section "__param", align 8, !dbg !4889
@__UNIQUE_ID_masktype255 = internal constant [32 x i8] c"sony_laptop.parmtype=mask:ulong\00", section ".modinfo", align 1, !dbg !4891
@__UNIQUE_ID_mask256 = internal constant [81 x i8] c"sony_laptop.parm=mask:set this to the mask of event you want to enable (see doc)\00", section ".modinfo", align 1, !dbg !4893
@__param_str_camera = internal constant [19 x i8] c"sony_laptop.camera\00", align 16, !dbg !4968
@camera = internal global i32 0, align 4, !dbg !4944
@__param_camera = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_camera, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @camera to i8*) } }, section "__param", align 8, !dbg !4898
@__UNIQUE_ID_cameratype257 = internal constant [32 x i8] c"sony_laptop.parmtype=camera:int\00", section ".modinfo", align 1, !dbg !4900
@__UNIQUE_ID_camera258 = internal constant [122 x i8] c"sony_laptop.parm=camera:set this to 1 to enable Motion Eye camera controls (only use it if you have a C1VE or C1VN model)\00", section ".modinfo", align 1, !dbg !4902
@__param_str_kbd_backlight = internal constant [26 x i8] c"sony_laptop.kbd_backlight\00", align 16, !dbg !4970
@kbd_backlight = internal global i32 -1, align 4, !dbg !4975
@__param_kbd_backlight = internal constant %struct.kernel_param { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__param_str_kbd_backlight, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @kbd_backlight to i8*) } }, section "__param", align 8, !dbg !4907
@__UNIQUE_ID_kbd_backlighttype259 = internal constant [39 x i8] c"sony_laptop.parmtype=kbd_backlight:int\00", section ".modinfo", align 1, !dbg !4909
@__UNIQUE_ID_kbd_backlight260 = internal constant [181 x i8] c"sony_laptop.parm=kbd_backlight:set this to 0 to disable keyboard backlight, 1 to enable it with automatic control and 2 to have it always on (default: no change from current value)\00", section ".modinfo", align 1, !dbg !4914
@__param_str_kbd_backlight_timeout = internal constant [34 x i8] c"sony_laptop.kbd_backlight_timeout\00", align 16, !dbg !4977
@kbd_backlight_timeout = internal global i32 -1, align 4, !dbg !4982
@__param_kbd_backlight_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__param_str_kbd_backlight_timeout, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @kbd_backlight_timeout to i8*) } }, section "__param", align 8, !dbg !4919
@__UNIQUE_ID_kbd_backlight_timeouttype261 = internal constant [47 x i8] c"sony_laptop.parmtype=kbd_backlight_timeout:int\00", section ".modinfo", align 1, !dbg !4921
@__UNIQUE_ID_kbd_backlight_timeout262 = internal constant [153 x i8] c"sony_laptop.parm=kbd_backlight_timeout:meaningful values vary from 0 to 3 and their meaning depends on the model (default: no change from current value)\00", section ".modinfo", align 1, !dbg !4926
@spic_dev = internal global %struct.sony_pic_dev { %struct.acpi_device* null, %struct.sony_pic_irq* null, %struct.sony_pic_ioport* null, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*), i64 24) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*), i64 24) to %struct.list_head*) }, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*), i64 40) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*), i64 40) to %struct.list_head*) }, %struct.mutex zeroinitializer, %struct.sonypi_eventtypes* null, i32 (i8, i8)* null, i32 0, i16 0, i8 0, i8 0, i8 0 }, align 8, !dbg !4984
@.str = private unnamed_addr constant [52 x i8] c"\014sony_laptop: command failed at %s : %s (line %d)\0A\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"drivers/platform/x86/sony-laptop.c\00", align 1
@__func__.sony_pic_camera_command = private unnamed_addr constant [24 x i8] c"sony_pic_camera_command\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"\013sony_laptop: sony_pic_camera_command invalid: %d\0A\00", align 1
@sony_nc_driver = internal global %struct.acpi_driver { [80 x i8] c"Sony Notebook Control Driver\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [80 x i8] c"sony-nc\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.acpi_device_id* getelementptr inbounds ([2 x %struct.acpi_device_id], [2 x %struct.acpi_device_id]* @sony_nc_device_ids, i32 0, i32 0), i32 0, %struct.acpi_device_ops { i32 (%struct.acpi_device*)* @sony_nc_add, i32 (%struct.acpi_device*)* @sony_nc_remove, void (%struct.acpi_device*, i32)* @sony_nc_notify }, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @sony_nc_pm, void (%struct.device*)* null, %struct.driver_private* null }, %struct.module* null }, align 8, !dbg !4986
@spic_drv_registered = internal global i32 0, align 4, !dbg !4946
@sony_pic_driver = internal global %struct.acpi_driver { [80 x i8] c"Sony Programmable IO Control Driver\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [80 x i8] c"sony-pic\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.acpi_device_id* getelementptr inbounds ([2 x %struct.acpi_device_id], [2 x %struct.acpi_device_id]* @sony_pic_device_ids, i32 0, i32 0), i32 0, %struct.acpi_device_ops { i32 (%struct.acpi_device*)* @sony_pic_add, i32 (%struct.acpi_device*)* @sony_pic_remove, void (%struct.acpi_device*, i32)* null }, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @sony_pic_pm, void (%struct.device*)* null, %struct.driver_private* null }, %struct.module* null }, align 8, !dbg !5548
@__UNIQUE_ID___addressable_sony_laptop_init284 = internal global i8* bitcast (i32 ()* @sony_laptop_init to i8*), section ".discard.addressable", align 8, !dbg !4931
@__exitcall_sony_laptop_exit = internal global void ()* @sony_laptop_exit, section ".exitcall.exit", align 8, !dbg !4933
@.str.3 = private unnamed_addr constant [43 x i8] c"\014sony_laptop: camera control not enabled\0A\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"\014sony_laptop: failed to power on camera\0A\00", align 1
@__func__.__sony_pic_camera_on = private unnamed_addr constant [21 x i8] c"__sony_pic_camera_on\00", align 1
@__func__.sony_pic_call2 = private unnamed_addr constant [15 x i8] c"sony_pic_call2\00", align 1
@.str.5 = private unnamed_addr constant [56 x i8] c"\014sony_laptop: sony_pic_call2(0x%.2x - 0x%.2x): 0x%.4x\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@__func__.sony_pic_call1 = private unnamed_addr constant [15 x i8] c"sony_pic_call1\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"\014sony_laptop: sony_pic_call1(0x%.2x): 0x%.4x\0A\00", align 1
@__func__.__sony_pic_camera_off = private unnamed_addr constant [22 x i8] c"__sony_pic_camera_off\00", align 1
@__func__.sony_pic_call3 = private unnamed_addr constant [15 x i8] c"sony_pic_call3\00", align 1
@.str.7 = private unnamed_addr constant [65 x i8] c"\014sony_laptop: sony_pic_call3(0x%.2x - 0x%.2x - 0x%.2x): 0x%.4x\0A\00", align 1
@sony_nc_device_ids = internal constant [2 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"SNY5001\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !4988
@sony_nc_pm = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* @sony_nc_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* @sony_nc_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* @sony_nc_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !5546
@sony_nc_acpi_device = internal global %struct.acpi_device* null, align 8, !dbg !4991
@.str.8 = private unnamed_addr constant [12 x i8] c"sony/hotkey\00", align 1
@sony_nc_acpi_handle = internal global i8* null, align 8, !dbg !4993
@.str.9 = private unnamed_addr constant [35 x i8] c"\014sony_laptop: Device not present\0A\00", align 1
@.str.10 = private unnamed_addr constant [46 x i8] c"\014sony_laptop: unable to walk acpi resources\0A\00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"\013sony_laptop: Unable to create input devices\0A\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"ECON\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"\014sony_laptop: ECON Method failed\0A\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"SN00\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"\014sony_laptop: Doing SNC setup\0A\00", align 1
@sony_pf_device = internal global %struct.platform_device* null, align 8, !dbg !5376
@sony_nc_values = internal global [13 x %struct.sony_nc_value] [%struct.sony_nc_value { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.100, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_brightness_def_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_brightness_def_set, i32 0, i32 0), i32 (i32, i32)* @brightness_default_validate, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.100, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_fnkey_get, i32 0, i32 0), i8** null, i32 (i32, i32)* null, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_cdpower_get, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @snc_cdpower_set, i32 0, i32 0), i32 (i32, i32)* @boolean_validate, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_audiopower_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_audiopower_set, i32 0, i32 0), i32 (i32, i32)* @boolean_validate, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_lanpower_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_lanpower_set, i32 0, i32 0), i32 (i32, i32)* @boolean_validate, i32 0, i32 0, i32 1, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.104, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_lidstate_get, i32 0, i32 0), i8** null, i32 (i32, i32)* @boolean_validate, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_indicatorlamp_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_indicatorlamp_set, i32 0, i32 0), i32 (i32, i32)* @boolean_validate, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_gainbass_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_gainbass_set, i32 0, i32 0), i32 (i32, i32)* @boolean_validate, i32 0, i32 0, i32 0, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.107, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_PID_get, i32 0, i32 0), i8** null, i32 (i32, i32)* null, i32 0, i32 0, i32 1, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_CTR_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_CTR_set, i32 0, i32 0), i32 (i32, i32)* null, i32 0, i32 0, i32 1, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_PCR_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_PCR_set, i32 0, i32 0), i32 (i32, i32)* null, i32 0, i32 0, i32 1, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_CMI_get, i32 0, i32 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @snc_CMI_set, i32 0, i32 0), i32 (i32, i32)* null, i32 0, i32 0, i32 1, %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i16 0 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_sysfs_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_sysfs_store } }, %struct.sony_nc_value zeroinitializer], align 16, !dbg !5479
@.str.16 = private unnamed_addr constant [36 x i8] c"\014sony_laptop: Found %s getter: %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [36 x i8] c"\014sony_laptop: Found %s setter: %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"\016sony_laptop: SNC setup done.\0A\00", align 1
@sony_pf_users = internal global %struct.atomic_t zeroinitializer, align 4, !dbg !4995
@sony_pf_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* null, i32 (%struct.platform_device*)* null, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* null, i32 (%struct.platform_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !4997
@.str.19 = private unnamed_addr constant [12 x i8] c"sony-laptop\00", align 1
@.str.20 = private unnamed_addr constant [45 x i8] c"\014sony_laptop: method: name: %4.4s, args %X\0A\00", align 1
@sony_laptop_input = internal global %struct.sony_laptop_input_s zeroinitializer, align 8, !dbg !5055
@.str.21 = private unnamed_addr constant [35 x i8] c"\013sony_laptop: kfifo_alloc failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"Sony Vaio Keys\00", align 1
@sony_laptop_input_keycode_map = internal global [60 x i32] [i32 212, i32 0, i32 0, i32 0, i32 465, i32 466, i32 467, i32 468, i32 469, i32 470, i32 471, i32 472, i32 473, i32 474, i32 475, i32 476, i32 477, i32 478, i32 479, i32 480, i32 481, i32 482, i32 483, i32 484, i32 237, i32 148, i32 149, i32 202, i32 158, i32 237, i32 237, i32 138, i32 464, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 372, i32 289, i32 0, i32 0, i32 0, i32 0, i32 238, i32 238, i32 418, i32 419, i32 161, i32 183, i32 203, i32 184, i32 185, i32 115, i32 114, i32 226, i32 360], align 16, !dbg !5363
@.str.23 = private unnamed_addr constant [18 x i8] c"Sony Vaio Jogdial\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.24 = private unnamed_addr constant [45 x i8] c"\014sony_laptop: Unexpected acpi_object: 0x%x\0A\00", align 1
@__const.__call_snc_method.output = private unnamed_addr constant %struct.acpi_buffer { i64 -1, i8* null }, align 8
@.str.25 = private unnamed_addr constant [51 x i8] c"\014sony_laptop: __call_snc_method: [%s:0x%.8x%.8x]\0A\00", align 1
@.str.26 = private unnamed_addr constant [40 x i8] c"\014sony_laptop: __call_snc_method: [%s]\0A\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"\013sony_laptop: Failed to evaluate [%s]\0A\00", align 1
@.str.28 = private unnamed_addr constant [38 x i8] c"\014sony_laptop: No return object [%s]\0A\00", align 1
@handles = internal global %struct.sony_nc_handles* null, align 8, !dbg !5368
@.str.29 = private unnamed_addr constant [55 x i8] c"\014sony_laptop: caching handle 0x%.4x (offset: 0x%.2x)\0A\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"handles\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.31 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"0x%.4x \00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"\014sony_laptop: setting up handle 0x%.4x\0A\00", align 1
@.str.35 = private unnamed_addr constant [63 x i8] c"\013sony_laptop: couldn't set up touchpad control function (%d)\0A\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"\013sony_laptop: couldn't set up battery care function (%d)\0A\00", align 1
@.str.37 = private unnamed_addr constant [57 x i8] c"\013sony_laptop: couldn't set up lid resume function (%d)\0A\00", align 1
@.str.38 = private unnamed_addr constant [62 x i8] c"\013sony_laptop: couldn't set up thermal profile function (%d)\0A\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"\013sony_laptop: couldn't set up GFX Switch status (%d)\0A\00", align 1
@.str.40 = private unnamed_addr constant [66 x i8] c"\013sony_laptop: couldn't set up high speed charging function (%d)\0A\00", align 1
@.str.41 = private unnamed_addr constant [52 x i8] c"\013sony_laptop: couldn't set up rfkill support (%d)\0A\00", align 1
@.str.42 = private unnamed_addr constant [65 x i8] c"\013sony_laptop: couldn't set up keyboard backlight function (%d)\0A\00", align 1
@.str.43 = private unnamed_addr constant [58 x i8] c"\013sony_laptop: couldn't set up low battery function (%d)\0A\00", align 1
@.str.44 = private unnamed_addr constant [56 x i8] c"\013sony_laptop: couldn't set up fan speed function (%d)\0A\00", align 1
@.str.45 = private unnamed_addr constant [56 x i8] c"\013sony_laptop: couldn't set up USB charge support (%d)\0A\00", align 1
@.str.46 = private unnamed_addr constant [55 x i8] c"\013sony_laptop: couldn't set up panel ID function (%d)\0A\00", align 1
@.str.47 = private unnamed_addr constant [59 x i8] c"\013sony_laptop: couldn't set up smart connect support (%d)\0A\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"SN02\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"SN07\00", align 1
@.str.50 = private unnamed_addr constant [57 x i8] c"\014sony_laptop: called SN07 with 0x%.4x (result: 0x%.4x)\0A\00", align 1
@.str.51 = private unnamed_addr constant [53 x i8] c"\014sony_laptop: found handle 0x%.4x (offset: 0x%.2x)\0A\00", align 1
@.str.52 = private unnamed_addr constant [40 x i8] c"\014sony_laptop: handle 0x%.4x not found\0A\00", align 1
@tp_ctl = internal global %struct.touchpad_control* null, align 8, !dbg !5378
@.str.53 = private unnamed_addr constant [9 x i8] c"touchpad\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@bcare_ctl = internal global %struct.battery_care_control* null, align 8, !dbg !5385
@.str.55 = private unnamed_addr constant [21 x i8] c"battery_care_limiter\00", align 1
@.str.56 = private unnamed_addr constant [20 x i8] c"battery_care_health\00", align 1
@lid_ctl = internal global %struct.snc_lid_resume_control* null, align 8, !dbg !5393
@.str.57 = private unnamed_addr constant [14 x i8] c"lid_resume_S5\00", align 1
@.str.58 = private unnamed_addr constant [14 x i8] c"lid_resume_S4\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"lid_resume_S3\00", align 1
@th_handle = internal global %struct.snc_thermal_ctrl* null, align 8, !dbg !5402
@.str.60 = private unnamed_addr constant [54 x i8] c"\014sony_laptop: couldn't to read the thermal profiles\0A\00", align 1
@.str.61 = private unnamed_addr constant [60 x i8] c"\014sony_laptop: couldn't to read the current thermal profile\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"thermal_profiles\00", align 1
@.str.63 = private unnamed_addr constant [16 x i8] c"thermal_control\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@snc_thermal_profiles = internal constant [3 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.67, i32 0, i32 0)], align 16, !dbg !5411
@.str.65 = private unnamed_addr constant [9 x i8] c"balanced\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"silent\00", align 1
@.str.67 = private unnamed_addr constant [12 x i8] c"performance\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@gfxs_ctl = internal global %struct.snc_gfx_switch_control* null, align 8, !dbg !5415
@.str.69 = private unnamed_addr constant [18 x i8] c"gfx_switch_status\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"speed\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"stamina\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"\014sony_laptop: GFX Status: 0x%x\0A\00", align 1
@.str.75 = private unnamed_addr constant [56 x i8] c"\016sony_laptop: No High Speed Charging capability found\0A\00", align 1
@hsc_handle = internal global %struct.device_attribute* null, align 8, !dbg !5422
@.str.76 = private unnamed_addr constant [27 x i8] c"battery_highspeed_charging\00", align 1
@sony_rfkill_handle = internal global i32 0, align 4, !dbg !5424
@.str.77 = private unnamed_addr constant [5 x i8] c"SN06\00", align 1
@.str.78 = private unnamed_addr constant [44 x i8] c"\014sony_laptop: Radio devices, found 0x%.2x\0A\00", align 1
@sony_rfkill_devices = internal global [4 x %struct.rfkill*] zeroinitializer, align 16, !dbg !5426
@.str.79 = private unnamed_addr constant [10 x i8] c"sony-wifi\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"sony-bluetooth\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"sony-wwan\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"sony-wimax\00", align 1
@sony_rfkill_ops = internal constant %struct.rfkill_ops { void (%struct.rfkill*, i8*)* null, void (%struct.rfkill*, i8*)* null, i32 (i8*, i1)* @sony_nc_rfkill_set }, align 8, !dbg !5432
@sony_rfkill_address = internal global [4 x i32] [i32 768, i32 1280, i32 1792, i32 2304], align 16, !dbg !5446
@kbdbl_ctl = internal global %struct.kbd_backlight* null, align 8, !dbg !5449
@.str.83 = private unnamed_addr constant [80 x i8] c"\014sony_laptop: handle 0x%.4x: keyboard backlight setup already done for 0x%.4x\0A\00", align 1
@.str.84 = private unnamed_addr constant [44 x i8] c"\014sony_laptop: no backlight keyboard found\0A\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c"kbd_backlight\00", align 1
@.str.86 = private unnamed_addr constant [22 x i8] c"kbd_backlight_timeout\00", align 1
@lowbatt_handle = internal global %struct.device_attribute* null, align 8, !dbg !5461
@.str.87 = private unnamed_addr constant [18 x i8] c"lowbatt_hibernate\00", align 1
@fan_handle = internal global %struct.device_attribute* null, align 8, !dbg !5463
@hsf_handle = internal global %struct.device_attribute* null, align 8, !dbg !5465
@.str.88 = private unnamed_addr constant [9 x i8] c"fanspeed\00", align 1
@.str.89 = private unnamed_addr constant [11 x i8] c"fan_forced\00", align 1
@.str.90 = private unnamed_addr constant [47 x i8] c"\016sony_laptop: No USB Charge capability found\0A\00", align 1
@uc_handle = internal global %struct.device_attribute* null, align 8, !dbg !5467
@.str.91 = private unnamed_addr constant [11 x i8] c"usb_charge\00", align 1
@panel_handle = internal global %struct.device_attribute* null, align 8, !dbg !5469
@.str.92 = private unnamed_addr constant [9 x i8] c"panel_id\00", align 1
@sc_handle = internal global %struct.device_attribute* null, align 8, !dbg !5471
@.str.93 = private unnamed_addr constant [14 x i8] c"smart_connect\00", align 1
@sony_backlight_ng_ops = internal constant %struct.backlight_ops { i32 1, i32 (%struct.backlight_device*)* @sony_nc_update_status_ng, i32 (%struct.backlight_device*)* @sony_nc_get_brightness_ng, i32 (%struct.backlight_device*, %struct.fb_info*)* null }, align 8, !dbg !5473
@sony_bl_props = internal global %struct.sony_backlight_props zeroinitializer, align 8, !dbg !5475
@.str.94 = private unnamed_addr constant [5 x i8] c"GBRT\00", align 1
@sony_backlight_ops = internal constant %struct.backlight_ops { i32 1, i32 (%struct.backlight_device*)* @sony_backlight_update_status, i32 (%struct.backlight_device*)* @sony_backlight_get_brightness, i32 (%struct.backlight_device*, %struct.fb_info*)* null }, align 8, !dbg !5477
@.str.95 = private unnamed_addr constant [5 x i8] c"sony\00", align 1
@.str.96 = private unnamed_addr constant [52 x i8] c"\014sony_laptop: unable to register backlight device\0A\00", align 1
@.str.97 = private unnamed_addr constant [37 x i8] c"\014sony_laptop: Brightness level: %d\0A\00", align 1
@.str.98 = private unnamed_addr constant [49 x i8] c"\014sony_laptop: Brightness levels: min=%d max=%d\0A\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"SBRT\00", align 1
@.str.100 = private unnamed_addr constant [19 x i8] c"brightness_default\00", align 1
@snc_brightness_def_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.112, i32 0, i32 0), i8* null], align 16, !dbg !5484
@snc_brightness_def_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i8* null], align 16, !dbg !5487
@.str.101 = private unnamed_addr constant [6 x i8] c"fnkey\00", align 1
@snc_fnkey_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i32 0, i32 0), i8* null], align 16, !dbg !5489
@.str.102 = private unnamed_addr constant [8 x i8] c"cdpower\00", align 1
@snc_cdpower_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.115, i32 0, i32 0), i8* null], align 16, !dbg !5491
@snc_cdpower_set = internal global [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.117, i32 0, i32 0), i8* null], align 16, !dbg !5493
@.str.103 = private unnamed_addr constant [11 x i8] c"audiopower\00", align 1
@snc_audiopower_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.118, i32 0, i32 0), i8* null], align 16, !dbg !5495
@snc_audiopower_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.119, i32 0, i32 0), i8* null], align 16, !dbg !5497
@.str.104 = private unnamed_addr constant [9 x i8] c"lanpower\00", align 1
@snc_lanpower_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.120, i32 0, i32 0), i8* null], align 16, !dbg !5499
@snc_lanpower_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), i8* null], align 16, !dbg !5501
@.str.105 = private unnamed_addr constant [9 x i8] c"lidstate\00", align 1
@snc_lidstate_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.122, i32 0, i32 0), i8* null], align 16, !dbg !5503
@.str.106 = private unnamed_addr constant [14 x i8] c"indicatorlamp\00", align 1
@snc_indicatorlamp_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.123, i32 0, i32 0), i8* null], align 16, !dbg !5505
@snc_indicatorlamp_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0), i8* null], align 16, !dbg !5507
@.str.107 = private unnamed_addr constant [9 x i8] c"gainbass\00", align 1
@snc_gainbass_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.125, i32 0, i32 0), i8* null], align 16, !dbg !5509
@snc_gainbass_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0), i8* null], align 16, !dbg !5511
@.str.108 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@snc_PID_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.127, i32 0, i32 0), i8* null], align 16, !dbg !5513
@.str.109 = private unnamed_addr constant [4 x i8] c"CTR\00", align 1
@snc_CTR_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.128, i32 0, i32 0), i8* null], align 16, !dbg !5515
@snc_CTR_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), i8* null], align 16, !dbg !5517
@.str.110 = private unnamed_addr constant [4 x i8] c"PCR\00", align 1
@snc_PCR_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), i8* null], align 16, !dbg !5519
@snc_PCR_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i32 0, i32 0), i8* null], align 16, !dbg !5521
@.str.111 = private unnamed_addr constant [4 x i8] c"CMI\00", align 1
@snc_CMI_get = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.132, i32 0, i32 0), i8* null], align 16, !dbg !5523
@snc_CMI_set = internal global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.133, i32 0, i32 0), i8* null], align 16, !dbg !5525
@.str.112 = private unnamed_addr constant [5 x i8] c"GPBR\00", align 1
@.str.113 = private unnamed_addr constant [5 x i8] c"SPBR\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"GHKE\00", align 1
@.str.115 = private unnamed_addr constant [5 x i8] c"GCDP\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"SCDP\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"CDPW\00", align 1
@.str.118 = private unnamed_addr constant [5 x i8] c"GAZP\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"AZPW\00", align 1
@.str.120 = private unnamed_addr constant [5 x i8] c"GLNP\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"LNPW\00", align 1
@.str.122 = private unnamed_addr constant [5 x i8] c"GLID\00", align 1
@.str.123 = private unnamed_addr constant [5 x i8] c"GILS\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"SILS\00", align 1
@.str.125 = private unnamed_addr constant [5 x i8] c"GMGB\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"CMGB\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"GPID\00", align 1
@.str.128 = private unnamed_addr constant [5 x i8] c"GCTR\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"SCTR\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"GPCR\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"SPCR\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"GCMI\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"SCMI\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"SN01\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"SN03\00", align 1
@.str.136 = private unnamed_addr constant [54 x i8] c"\014sony_laptop: Sony Notebook Control Driver removed.\0A\00", align 1
@.str.137 = private unnamed_addr constant [46 x i8] c"\014sony_laptop: sony_nc_notify, event: 0x%.2x\0A\00", align 1
@.str.138 = private unnamed_addr constant [56 x i8] c"\013sony_laptop: Event 0x%x outside of capabilities list\0A\00", align 1
@.str.139 = private unnamed_addr constant [55 x i8] c"\014sony_laptop: GFX switch event received (reason: %s)\0A\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"switch change\00", align 1
@.str.141 = private unnamed_addr constant [14 x i8] c"output switch\00", align 1
@.str.142 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.143 = private unnamed_addr constant [51 x i8] c"\014sony_laptop: Unknown event 0x%x for handle 0x%x\0A\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"SN05\00", align 1
@.str.145 = private unnamed_addr constant [53 x i8] c"\014sony_laptop: Unable to decode event 0x%.2x 0x%.2x\0A\00", align 1
@sony_100_events = internal global [43 x %struct.sony_nc_event] [%struct.sony_nc_event { i8 -112, i8 32 }, %struct.sony_nc_event { i8 16, i8 56 }, %struct.sony_nc_event { i8 -111, i8 33 }, %struct.sony_nc_event { i8 17, i8 56 }, %struct.sony_nc_event { i8 -127, i8 12 }, %struct.sony_nc_event { i8 1, i8 59 }, %struct.sony_nc_event { i8 -126, i8 13 }, %struct.sony_nc_event { i8 2, i8 59 }, %struct.sony_nc_event { i8 -125, i8 14 }, %struct.sony_nc_event { i8 3, i8 59 }, %struct.sony_nc_event { i8 -124, i8 15 }, %struct.sony_nc_event { i8 4, i8 59 }, %struct.sony_nc_event { i8 -123, i8 16 }, %struct.sony_nc_event { i8 5, i8 59 }, %struct.sony_nc_event { i8 -122, i8 17 }, %struct.sony_nc_event { i8 6, i8 59 }, %struct.sony_nc_event { i8 -121, i8 18 }, %struct.sony_nc_event { i8 7, i8 59 }, %struct.sony_nc_event { i8 -120, i8 19 }, %struct.sony_nc_event { i8 8, i8 59 }, %struct.sony_nc_event { i8 -119, i8 20 }, %struct.sony_nc_event { i8 9, i8 59 }, %struct.sony_nc_event { i8 -118, i8 21 }, %struct.sony_nc_event { i8 10, i8 59 }, %struct.sony_nc_event { i8 -117, i8 22 }, %struct.sony_nc_event { i8 11, i8 59 }, %struct.sony_nc_event { i8 -116, i8 23 }, %struct.sony_nc_event { i8 12, i8 59 }, %struct.sony_nc_event { i8 -99, i8 50 }, %struct.sony_nc_event { i8 29, i8 56 }, %struct.sony_nc_event { i8 -97, i8 64 }, %struct.sony_nc_event { i8 31, i8 56 }, %struct.sony_nc_event { i8 -95, i8 72 }, %struct.sony_nc_event { i8 33, i8 56 }, %struct.sony_nc_event { i8 -92, i8 64 }, %struct.sony_nc_event { i8 36, i8 56 }, %struct.sony_nc_event { i8 -91, i8 73 }, %struct.sony_nc_event { i8 37, i8 56 }, %struct.sony_nc_event { i8 -90, i8 40 }, %struct.sony_nc_event { i8 38, i8 56 }, %struct.sony_nc_event { i8 -88, i8 24 }, %struct.sony_nc_event { i8 40, i8 56 }, %struct.sony_nc_event zeroinitializer], align 16, !dbg !5527
@sony_127_events = internal global [15 x %struct.sony_nc_event] [%struct.sony_nc_event { i8 -127, i8 65 }, %struct.sony_nc_event { i8 1, i8 56 }, %struct.sony_nc_event { i8 -126, i8 32 }, %struct.sony_nc_event { i8 2, i8 56 }, %struct.sony_nc_event { i8 -125, i8 33 }, %struct.sony_nc_event { i8 3, i8 56 }, %struct.sony_nc_event { i8 -124, i8 34 }, %struct.sony_nc_event { i8 4, i8 56 }, %struct.sony_nc_event { i8 -123, i8 66 }, %struct.sony_nc_event { i8 5, i8 56 }, %struct.sony_nc_event { i8 -122, i8 67 }, %struct.sony_nc_event { i8 6, i8 56 }, %struct.sony_nc_event { i8 -121, i8 68 }, %struct.sony_nc_event { i8 7, i8 56 }, %struct.sony_nc_event zeroinitializer], align 16, !dbg !5536
@.str.146 = private unnamed_addr constant [61 x i8] c"\016sony_laptop: Unknown hotkey 0x%.2x/0x%.2x (handle 0x%.2x)\0A\00", align 1
@.str.147 = private unnamed_addr constant [68 x i8] c"\014sony_laptop: sony_laptop_report_input_event, event not known: %d\0A\00", align 1
@sony_laptop_input_index = internal constant [74 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 -1, i32 -1, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 -1, i32 -1, i32 -1, i32 -1, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 -1, i32 58, i32 59], align 16, !dbg !5541
@.str.148 = private unnamed_addr constant [41 x i8] c"\014sony_laptop: unknown input event %.2x\0A\00", align 1
@.str.149 = private unnamed_addr constant [23 x i8] c"\013sony_laptop: %s: %d\0A\00", align 1
@__func__.sony_nc_resume = private unnamed_addr constant [15 x i8] c"sony_nc_resume\00", align 1
@.str.150 = private unnamed_addr constant [36 x i8] c"\014sony_laptop: Resuming SNC device\0A\00", align 1
@sony_pic_device_ids = internal constant [2 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"SNY6001\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !5550
@sony_pic_pm = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @sony_pic_suspend, i32 (%struct.device*)* @sony_pic_resume, i32 (%struct.device*)* @sony_pic_suspend, i32 (%struct.device*)* @sony_pic_resume, i32 (%struct.device*)* @sony_pic_suspend, i32 (%struct.device*)* @sony_pic_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !5619
@sony_pic_add.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5552
@.str.151 = private unnamed_addr constant [15 x i8] c"&spic_dev.lock\00", align 1
@.str.152 = private unnamed_addr constant [50 x i8] c"\013sony_laptop: Unable to read possible resources\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.153 = private unnamed_addr constant [29 x i8] c"Sony Programmable I/O Device\00", align 1
@.str.154 = private unnamed_addr constant [52 x i8] c"\014sony_laptop: I/O port1: 0x%.4x (0x%.4x) + 0x%.2x\0A\00", align 1
@.str.155 = private unnamed_addr constant [52 x i8] c"\014sony_laptop: I/O port2: 0x%.4x (0x%.4x) + 0x%.2x\0A\00", align 1
@.str.156 = private unnamed_addr constant [66 x i8] c"\014sony_laptop: Unable to get I/O port2: 0x%.4x (0x%.4x) + 0x%.2x\0A\00", align 1
@.str.157 = private unnamed_addr constant [41 x i8] c"\013sony_laptop: Failed to request_region\0A\00", align 1
@.str.158 = private unnamed_addr constant [66 x i8] c"\014sony_laptop: IRQ: %d - triggering: %d - polarity: %d - shr: %d\0A\00", align 1
@.str.159 = private unnamed_addr constant [38 x i8] c"\013sony_laptop: Failed to request_irq\0A\00", align 1
@.str.160 = private unnamed_addr constant [39 x i8] c"\013sony_laptop: Couldn't enable device\0A\00", align 1
@spic_attribute_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([4 x %struct.attribute*], [4 x %struct.attribute*]* @spic_attributes, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !5608
@.str.161 = private unnamed_addr constant [33 x i8] c"\016sony_laptop: SPIC setup done.\0A\00", align 1
@type1_events = internal global [11 x %struct.sonypi_eventtypes] [%struct.sonypi_eventtypes { i8 0, i64 4294967295, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_releaseev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 112, i64 1024, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_meyeev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 48, i64 128, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_lidev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 96, i64 2, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_captureev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 16, i64 1, %struct.sonypi_event* getelementptr inbounds ([14 x %struct.sonypi_event], [14 x %struct.sonypi_event]* @sonypi_joggerev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 32, i64 4, %struct.sonypi_event* getelementptr inbounds ([23 x %struct.sonypi_event], [23 x %struct.sonypi_event]* @sonypi_fnkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 48, i64 8, %struct.sonypi_event* getelementptr inbounds ([4 x %struct.sonypi_event], [4 x %struct.sonypi_event]* @sonypi_blueev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 64, i64 16, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_pkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 48, i64 2048, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_memorystickev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 64, i64 4096, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_batteryev, i32 0, i32 0) }, %struct.sonypi_eventtypes zeroinitializer], align 16, !dbg !5555
@type2_events = internal global [15 x %struct.sonypi_eventtypes] [%struct.sonypi_eventtypes { i8 0, i64 4294967295, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_releaseev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 56, i64 128, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_lidev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 17, i64 1, %struct.sonypi_event* getelementptr inbounds ([14 x %struct.sonypi_event], [14 x %struct.sonypi_event]* @sonypi_joggerev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 97, i64 2, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_captureev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 33, i64 4, %struct.sonypi_event* getelementptr inbounds ([23 x %struct.sonypi_event], [23 x %struct.sonypi_event]* @sonypi_fnkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 49, i64 8, %struct.sonypi_event* getelementptr inbounds ([4 x %struct.sonypi_event], [4 x %struct.sonypi_event]* @sonypi_blueev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 8, i64 16, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_pkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 17, i64 32, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_backev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 33, i64 64, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_helpev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 33, i64 256, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_zoomev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 32, i64 512, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_thumbphraseev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 49, i64 2048, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_memorystickev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 65, i64 4096, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_batteryev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 49, i64 16, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_pkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes zeroinitializer], align 16, !dbg !5588
@type3_events = internal global [12 x %struct.sonypi_eventtypes] [%struct.sonypi_eventtypes { i8 0, i64 4294967295, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_releaseev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 33, i64 4, %struct.sonypi_event* getelementptr inbounds ([23 x %struct.sonypi_event], [23 x %struct.sonypi_event]* @sonypi_fnkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 49, i64 8192, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_wlessev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 49, i64 2048, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_memorystickev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 65, i64 4096, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_batteryev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 49, i64 16, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_pkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 5, i64 16, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_pkeyev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 5, i64 256, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_zoomev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 5, i64 2, %struct.sonypi_event* getelementptr inbounds ([5 x %struct.sonypi_event], [5 x %struct.sonypi_event]* @sonypi_captureev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 5, i64 16, %struct.sonypi_event* getelementptr inbounds ([3 x %struct.sonypi_event], [3 x %struct.sonypi_event]* @sonypi_volumeev, i32 0, i32 0) }, %struct.sonypi_eventtypes { i8 5, i64 16, %struct.sonypi_event* getelementptr inbounds ([2 x %struct.sonypi_event], [2 x %struct.sonypi_event]* @sonypi_brightnessev, i32 0, i32 0) }, %struct.sonypi_eventtypes zeroinitializer], align 16, !dbg !5599
@.str.162 = private unnamed_addr constant [38 x i8] c"\016sony_laptop: detected Type%d model\0A\00", align 1
@sonypi_releaseev = internal global [2 x %struct.sonypi_event] [%struct.sonypi_event { i8 0, i8 56 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5560
@sonypi_meyeev = internal global [3 x %struct.sonypi_event] [%struct.sonypi_event { i8 0, i8 52 }, %struct.sonypi_event { i8 1, i8 53 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5563
@sonypi_lidev = internal global [3 x %struct.sonypi_event] [%struct.sonypi_event { i8 81, i8 36 }, %struct.sonypi_event { i8 80, i8 37 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5566
@sonypi_captureev = internal global [5 x %struct.sonypi_event] [%struct.sonypi_event { i8 5, i8 9 }, %struct.sonypi_event { i8 7, i8 7 }, %struct.sonypi_event { i8 64, i8 7 }, %struct.sonypi_event { i8 1, i8 10 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5568
@sonypi_joggerev = internal global [14 x %struct.sonypi_event] [%struct.sonypi_event { i8 31, i8 2 }, %struct.sonypi_event { i8 1, i8 1 }, %struct.sonypi_event { i8 95, i8 4 }, %struct.sonypi_event { i8 65, i8 3 }, %struct.sonypi_event { i8 30, i8 43 }, %struct.sonypi_event { i8 2, i8 42 }, %struct.sonypi_event { i8 94, i8 45 }, %struct.sonypi_event { i8 66, i8 44 }, %struct.sonypi_event { i8 29, i8 47 }, %struct.sonypi_event { i8 3, i8 46 }, %struct.sonypi_event { i8 93, i8 49 }, %struct.sonypi_event { i8 67, i8 48 }, %struct.sonypi_event { i8 64, i8 5 }, %struct.sonypi_event zeroinitializer], align 16, !dbg !5571
@sonypi_fnkeyev = internal global [23 x %struct.sonypi_event] [%struct.sonypi_event { i8 16, i8 11 }, %struct.sonypi_event { i8 17, i8 12 }, %struct.sonypi_event { i8 18, i8 13 }, %struct.sonypi_event { i8 19, i8 14 }, %struct.sonypi_event { i8 20, i8 15 }, %struct.sonypi_event { i8 21, i8 16 }, %struct.sonypi_event { i8 22, i8 17 }, %struct.sonypi_event { i8 23, i8 18 }, %struct.sonypi_event { i8 24, i8 19 }, %struct.sonypi_event { i8 25, i8 20 }, %struct.sonypi_event { i8 26, i8 21 }, %struct.sonypi_event { i8 27, i8 22 }, %struct.sonypi_event { i8 28, i8 23 }, %struct.sonypi_event { i8 31, i8 59 }, %struct.sonypi_event { i8 33, i8 24 }, %struct.sonypi_event { i8 34, i8 25 }, %struct.sonypi_event { i8 49, i8 26 }, %struct.sonypi_event { i8 50, i8 27 }, %struct.sonypi_event { i8 51, i8 28 }, %struct.sonypi_event { i8 52, i8 29 }, %struct.sonypi_event { i8 53, i8 30 }, %struct.sonypi_event { i8 54, i8 41 }, %struct.sonypi_event zeroinitializer], align 16, !dbg !5574
@sonypi_blueev = internal global [4 x %struct.sonypi_event] [%struct.sonypi_event { i8 85, i8 31 }, %struct.sonypi_event { i8 89, i8 38 }, %struct.sonypi_event { i8 90, i8 39 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5579
@sonypi_pkeyev = internal global [5 x %struct.sonypi_event] [%struct.sonypi_event { i8 1, i8 32 }, %struct.sonypi_event { i8 2, i8 33 }, %struct.sonypi_event { i8 4, i8 34 }, %struct.sonypi_event { i8 32, i8 32 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5582
@sonypi_memorystickev = internal global [3 x %struct.sonypi_event] [%struct.sonypi_event { i8 83, i8 54 }, %struct.sonypi_event { i8 84, i8 55 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5584
@sonypi_batteryev = internal global [3 x %struct.sonypi_event] [%struct.sonypi_event { i8 32, i8 57 }, %struct.sonypi_event { i8 48, i8 58 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5586
@sonypi_backev = internal global [2 x %struct.sonypi_event] [%struct.sonypi_event { i8 32, i8 35 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5591
@sonypi_helpev = internal global [2 x %struct.sonypi_event] [%struct.sonypi_event { i8 59, i8 40 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5593
@sonypi_zoomev = internal global [5 x %struct.sonypi_event] [%struct.sonypi_event { i8 57, i8 50 }, %struct.sonypi_event { i8 16, i8 62 }, %struct.sonypi_event { i8 32, i8 63 }, %struct.sonypi_event { i8 4, i8 50 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5595
@sonypi_thumbphraseev = internal global [2 x %struct.sonypi_event] [%struct.sonypi_event { i8 58, i8 51 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5597
@sonypi_wlessev = internal global [3 x %struct.sonypi_event] [%struct.sonypi_event { i8 89, i8 0 }, %struct.sonypi_event { i8 90, i8 0 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5602
@sonypi_volumeev = internal global [3 x %struct.sonypi_event] [%struct.sonypi_event { i8 1, i8 69 }, %struct.sonypi_event { i8 2, i8 70 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5604
@sonypi_brightnessev = internal global [2 x %struct.sonypi_event] [%struct.sonypi_event { i8 -128, i8 71 }, %struct.sonypi_event zeroinitializer], align 1, !dbg !5606
@.str.163 = private unnamed_addr constant [32 x i8] c"\014sony_laptop: Evaluating _STA\0A\00", align 1
@.str.164 = private unnamed_addr constant [38 x i8] c"\014sony_laptop: Unable to read status\0A\00", align 1
@.str.165 = private unnamed_addr constant [32 x i8] c"\014sony_laptop: Device disabled\0A\00", align 1
@.str.166 = private unnamed_addr constant [31 x i8] c"\014sony_laptop: Device enabled\0A\00", align 1
@.str.167 = private unnamed_addr constant [30 x i8] c"\014sony_laptop: Evaluating %s\0A\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"_PRS\00", align 1
@.str.169 = private unnamed_addr constant [38 x i8] c"\014sony_laptop: Failure evaluating %s\0A\00", align 1
@.str.170 = private unnamed_addr constant [35 x i8] c"\014sony_laptop: Blank IRQ resource\0A\00", align 1
@.str.171 = private unnamed_addr constant [31 x i8] c"\014sony_laptop: Invalid IRQ %d\0A\00", align 1
@.str.172 = private unnamed_addr constant [34 x i8] c"\014sony_laptop: Blank IO resource\0A\00", align 1
@.str.173 = private unnamed_addr constant [39 x i8] c"\014sony_laptop: IO1 at 0x%.4x (0x%.2x)\0A\00", align 1
@.str.174 = private unnamed_addr constant [39 x i8] c"\014sony_laptop: IO2 at 0x%.4x (0x%.2x)\0A\00", align 1
@.str.175 = private unnamed_addr constant [56 x i8] c"\013sony_laptop: Unknown SPIC Type, more than 2 IO Ports\0A\00", align 1
@.str.176 = private unnamed_addr constant [56 x i8] c"\014sony_laptop: Resource %d isn't an IRQ nor an IO port\0A\00", align 1
@.str.177 = private unnamed_addr constant [62 x i8] c"\014sony_laptop: event ([%.2x] [%.2x]) at port 0x%.4x(+0x%.2x)\0A\00", align 1
@.str.178 = private unnamed_addr constant [70 x i8] c"\014sony_laptop: unknown event ([%.2x] [%.2x]) at port 0x%.4x(+0x%.2x)\0A\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"\014sony_laptop: Evaluating _SRS\0A\00", align 1
@.str.180 = private unnamed_addr constant [38 x i8] c"\013sony_laptop: Error evaluating _SRS\0A\00", align 1
@spic_attributes = internal global [4 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @spic_attr_bluetoothpower, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @spic_attr_wwanpower, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @spic_attr_fanspeed, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !5610
@spic_attr_bluetoothpower = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_pic_bluetoothpower_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_pic_bluetoothpower_store }, align 8, !dbg !5613
@spic_attr_wwanpower = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.182, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_pic_wwanpower_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_pic_wwanpower_store }, align 8, !dbg !5615
@spic_attr_fanspeed = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_pic_fanspeed_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_pic_fanspeed_store }, align 8, !dbg !5617
@.str.181 = private unnamed_addr constant [15 x i8] c"bluetoothpower\00", align 1
@.str.182 = private unnamed_addr constant [10 x i8] c"wwanpower\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"_DIS\00", align 1
@.str.184 = private unnamed_addr constant [40 x i8] c"\013sony_laptop: Couldn't disable device\0A\00", align 1
@.str.185 = private unnamed_addr constant [61 x i8] c"\014sony_laptop: Sony Programmable IO Control Driver removed.\0A\00", align 1
@.str.186 = private unnamed_addr constant [47 x i8] c"\013sony_laptop: Unable to register SPIC driver\0A\00", align 1
@.str.187 = private unnamed_addr constant [46 x i8] c"\013sony_laptop: Unable to register SNC driver\0A\00", align 1
@.str.188 = private unnamed_addr constant [10 x i8] c"Sony Vaio\00", align 1
@sonypi_dmi_table = internal constant [3 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Sony Corporation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"PCG-\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.188, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Sony Corporation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"VGN-\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], section ".init.rodata", align 16, !dbg !5621
@llvm.used = appending global [28 x i8*] [i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_author245, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_description246, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_file247, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_license248, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_debugtype249, i32 0, i32 0), i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__UNIQUE_ID_debug250, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_no_spic to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_no_spictype251, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__UNIQUE_ID_no_spic252, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_compat to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_compattype253, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @__UNIQUE_ID_compat254, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_mask to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_masktype255, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__UNIQUE_ID_mask256, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_camera to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_cameratype257, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @__UNIQUE_ID_camera258, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_kbd_backlight to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_kbd_backlighttype259, i32 0, i32 0), i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__UNIQUE_ID_kbd_backlight260, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_kbd_backlight_timeout to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_kbd_backlight_timeouttype261, i32 0, i32 0), i8* getelementptr inbounds ([153 x i8], [153 x i8]* @__UNIQUE_ID_kbd_backlight_timeout262, i32 0, i32 0), i8* bitcast (void ()* @sony_laptop_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_sony_laptop_init284 to i8*), i8* bitcast (void ()** @__exitcall_sony_laptop_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @sony_pic_camera_command(i32 %command, i8 zeroext %value) #0 !dbg !5650 {
entry:
  %retval = alloca i32, align 4
  %command.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  %n = alloca i32, align 4
  %n17 = alloca i32, align 4
  %n38 = alloca i32, align 4
  %n59 = alloca i32, align 4
  %n80 = alloca i32, align 4
  %n101 = alloca i32, align 4
  %n122 = alloca i32, align 4
  store i32 %command, i32* %command.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %command.addr, metadata !5653, metadata !DIExpression()), !dbg !5654
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !5655, metadata !DIExpression()), !dbg !5656
  %0 = load i32, i32* @camera, align 4, !dbg !5657
  %tobool = icmp ne i32 %0, 0, !dbg !5657
  br i1 %tobool, label %if.end, label %if.then, !dbg !5659

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !5660
  br label %return, !dbg !5660

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !5661
  %1 = load i32, i32* %command.addr, align 4, !dbg !5662
  switch i32 %1, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb5
    i32 6, label %sw.bb16
    i32 8, label %sw.bb37
    i32 10, label %sw.bb58
    i32 12, label %sw.bb79
    i32 14, label %sw.bb100
    i32 16, label %sw.bb121
  ], !dbg !5663

sw.bb:                                            ; preds = %if.end
  %2 = load i8, i8* %value.addr, align 1, !dbg !5664
  %tobool1 = icmp ne i8 %2, 0, !dbg !5664
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5667

if.then2:                                         ; preds = %sw.bb
  %call = call i32 @__sony_pic_camera_on() #11, !dbg !5668
  br label %if.end4, !dbg !5668

if.else:                                          ; preds = %sw.bb
  %call3 = call i32 @__sony_pic_camera_off() #11, !dbg !5669
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  br label %sw.epilog, !dbg !5670

sw.bb5:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5671, metadata !DIExpression()), !dbg !5673
  store i32 10, i32* %n, align 4, !dbg !5673
  br label %while.cond, !dbg !5673

while.cond:                                       ; preds = %while.body, %sw.bb5
  %3 = load i32, i32* %n, align 4, !dbg !5673
  %dec = add i32 %3, -1, !dbg !5673
  store i32 %dec, i32* %n, align 4, !dbg !5673
  %tobool6 = icmp ne i32 %dec, 0, !dbg !5673
  br i1 %tobool6, label %land.rhs, label %land.end, !dbg !5673

land.rhs:                                         ; preds = %while.cond
  %4 = load i8, i8* %value.addr, align 1, !dbg !5673
  %call7 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 0, i8 zeroext %4) #11, !dbg !5673
  %conv = zext i8 %call7 to i32, !dbg !5673
  %tobool8 = icmp ne i32 %conv, 0, !dbg !5673
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %tobool8, %land.rhs ], !dbg !5674
  br i1 %5, label %while.body, label %while.end, !dbg !5673

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 4295) #11, !dbg !5675
  br label %while.cond, !dbg !5673, !llvm.loop !5680

while.end:                                        ; preds = %land.end
  %6 = load i32, i32* %n, align 4, !dbg !5681
  %tobool9 = icmp ne i32 %6, 0, !dbg !5681
  br i1 %tobool9, label %if.end15, label %if.then10, !dbg !5673

if.then10:                                        ; preds = %while.end
  br label %do.body, !dbg !5681

do.body:                                          ; preds = %if.then10
  %7 = load i32, i32* @debug, align 4, !dbg !5683
  %tobool11 = icmp ne i32 %7, 0, !dbg !5683
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !5686

if.then12:                                        ; preds = %do.body
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3852) #12, !dbg !5683
  br label %if.end14, !dbg !5683

if.end14:                                         ; preds = %if.then12, %do.body
  br label %do.end, !dbg !5686

do.end:                                           ; preds = %if.end14
  br label %if.end15, !dbg !5686

if.end15:                                         ; preds = %do.end, %while.end
  br label %sw.epilog, !dbg !5687

sw.bb16:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n17, metadata !5688, metadata !DIExpression()), !dbg !5690
  store i32 10, i32* %n17, align 4, !dbg !5690
  br label %while.cond18, !dbg !5690

while.cond18:                                     ; preds = %while.body26, %sw.bb16
  %8 = load i32, i32* %n17, align 4, !dbg !5690
  %dec19 = add i32 %8, -1, !dbg !5690
  store i32 %dec19, i32* %n17, align 4, !dbg !5690
  %tobool20 = icmp ne i32 %dec19, 0, !dbg !5690
  br i1 %tobool20, label %land.rhs21, label %land.end25, !dbg !5690

land.rhs21:                                       ; preds = %while.cond18
  %9 = load i8, i8* %value.addr, align 1, !dbg !5690
  %call22 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 1, i8 zeroext %9) #11, !dbg !5690
  %conv23 = zext i8 %call22 to i32, !dbg !5690
  %tobool24 = icmp ne i32 %conv23, 0, !dbg !5690
  br label %land.end25

land.end25:                                       ; preds = %land.rhs21, %while.cond18
  %10 = phi i1 [ false, %while.cond18 ], [ %tobool24, %land.rhs21 ], !dbg !5691
  br i1 %10, label %while.body26, label %while.end27, !dbg !5690

while.body26:                                     ; preds = %land.end25
  call void @__const_udelay(i64 4295) #11, !dbg !5692
  br label %while.cond18, !dbg !5690, !llvm.loop !5697

while.end27:                                      ; preds = %land.end25
  %11 = load i32, i32* %n17, align 4, !dbg !5698
  %tobool28 = icmp ne i32 %11, 0, !dbg !5698
  br i1 %tobool28, label %if.end36, label %if.then29, !dbg !5690

if.then29:                                        ; preds = %while.end27
  br label %do.body30, !dbg !5698

do.body30:                                        ; preds = %if.then29
  %12 = load i32, i32* @debug, align 4, !dbg !5700
  %tobool31 = icmp ne i32 %12, 0, !dbg !5700
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !5703

if.then32:                                        ; preds = %do.body30
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3856) #12, !dbg !5700
  br label %if.end34, !dbg !5700

if.end34:                                         ; preds = %if.then32, %do.body30
  br label %do.end35, !dbg !5703

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !5703

if.end36:                                         ; preds = %do.end35, %while.end27
  br label %sw.epilog, !dbg !5704

sw.bb37:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n38, metadata !5705, metadata !DIExpression()), !dbg !5707
  store i32 10, i32* %n38, align 4, !dbg !5707
  br label %while.cond39, !dbg !5707

while.cond39:                                     ; preds = %while.body47, %sw.bb37
  %13 = load i32, i32* %n38, align 4, !dbg !5707
  %dec40 = add i32 %13, -1, !dbg !5707
  store i32 %dec40, i32* %n38, align 4, !dbg !5707
  %tobool41 = icmp ne i32 %dec40, 0, !dbg !5707
  br i1 %tobool41, label %land.rhs42, label %land.end46, !dbg !5707

land.rhs42:                                       ; preds = %while.cond39
  %14 = load i8, i8* %value.addr, align 1, !dbg !5707
  %call43 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 2, i8 zeroext %14) #11, !dbg !5707
  %conv44 = zext i8 %call43 to i32, !dbg !5707
  %tobool45 = icmp ne i32 %conv44, 0, !dbg !5707
  br label %land.end46

land.end46:                                       ; preds = %land.rhs42, %while.cond39
  %15 = phi i1 [ false, %while.cond39 ], [ %tobool45, %land.rhs42 ], !dbg !5708
  br i1 %15, label %while.body47, label %while.end48, !dbg !5707

while.body47:                                     ; preds = %land.end46
  call void @__const_udelay(i64 4295) #11, !dbg !5709
  br label %while.cond39, !dbg !5707, !llvm.loop !5714

while.end48:                                      ; preds = %land.end46
  %16 = load i32, i32* %n38, align 4, !dbg !5715
  %tobool49 = icmp ne i32 %16, 0, !dbg !5715
  br i1 %tobool49, label %if.end57, label %if.then50, !dbg !5707

if.then50:                                        ; preds = %while.end48
  br label %do.body51, !dbg !5715

do.body51:                                        ; preds = %if.then50
  %17 = load i32, i32* @debug, align 4, !dbg !5717
  %tobool52 = icmp ne i32 %17, 0, !dbg !5717
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !5720

if.then53:                                        ; preds = %do.body51
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3860) #12, !dbg !5717
  br label %if.end55, !dbg !5717

if.end55:                                         ; preds = %if.then53, %do.body51
  br label %do.end56, !dbg !5720

do.end56:                                         ; preds = %if.end55
  br label %if.end57, !dbg !5720

if.end57:                                         ; preds = %do.end56, %while.end48
  br label %sw.epilog, !dbg !5721

sw.bb58:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n59, metadata !5722, metadata !DIExpression()), !dbg !5724
  store i32 10, i32* %n59, align 4, !dbg !5724
  br label %while.cond60, !dbg !5724

while.cond60:                                     ; preds = %while.body68, %sw.bb58
  %18 = load i32, i32* %n59, align 4, !dbg !5724
  %dec61 = add i32 %18, -1, !dbg !5724
  store i32 %dec61, i32* %n59, align 4, !dbg !5724
  %tobool62 = icmp ne i32 %dec61, 0, !dbg !5724
  br i1 %tobool62, label %land.rhs63, label %land.end67, !dbg !5724

land.rhs63:                                       ; preds = %while.cond60
  %19 = load i8, i8* %value.addr, align 1, !dbg !5724
  %call64 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 3, i8 zeroext %19) #11, !dbg !5724
  %conv65 = zext i8 %call64 to i32, !dbg !5724
  %tobool66 = icmp ne i32 %conv65, 0, !dbg !5724
  br label %land.end67

land.end67:                                       ; preds = %land.rhs63, %while.cond60
  %20 = phi i1 [ false, %while.cond60 ], [ %tobool66, %land.rhs63 ], !dbg !5725
  br i1 %20, label %while.body68, label %while.end69, !dbg !5724

while.body68:                                     ; preds = %land.end67
  call void @__const_udelay(i64 4295) #11, !dbg !5726
  br label %while.cond60, !dbg !5724, !llvm.loop !5731

while.end69:                                      ; preds = %land.end67
  %21 = load i32, i32* %n59, align 4, !dbg !5732
  %tobool70 = icmp ne i32 %21, 0, !dbg !5732
  br i1 %tobool70, label %if.end78, label %if.then71, !dbg !5724

if.then71:                                        ; preds = %while.end69
  br label %do.body72, !dbg !5732

do.body72:                                        ; preds = %if.then71
  %22 = load i32, i32* @debug, align 4, !dbg !5734
  %tobool73 = icmp ne i32 %22, 0, !dbg !5734
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !5737

if.then74:                                        ; preds = %do.body72
  %call75 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3864) #12, !dbg !5734
  br label %if.end76, !dbg !5734

if.end76:                                         ; preds = %if.then74, %do.body72
  br label %do.end77, !dbg !5737

do.end77:                                         ; preds = %if.end76
  br label %if.end78, !dbg !5737

if.end78:                                         ; preds = %do.end77, %while.end69
  br label %sw.epilog, !dbg !5738

sw.bb79:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n80, metadata !5739, metadata !DIExpression()), !dbg !5741
  store i32 10, i32* %n80, align 4, !dbg !5741
  br label %while.cond81, !dbg !5741

while.cond81:                                     ; preds = %while.body89, %sw.bb79
  %23 = load i32, i32* %n80, align 4, !dbg !5741
  %dec82 = add i32 %23, -1, !dbg !5741
  store i32 %dec82, i32* %n80, align 4, !dbg !5741
  %tobool83 = icmp ne i32 %dec82, 0, !dbg !5741
  br i1 %tobool83, label %land.rhs84, label %land.end88, !dbg !5741

land.rhs84:                                       ; preds = %while.cond81
  %24 = load i8, i8* %value.addr, align 1, !dbg !5741
  %call85 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 4, i8 zeroext %24) #11, !dbg !5741
  %conv86 = zext i8 %call85 to i32, !dbg !5741
  %tobool87 = icmp ne i32 %conv86, 0, !dbg !5741
  br label %land.end88

land.end88:                                       ; preds = %land.rhs84, %while.cond81
  %25 = phi i1 [ false, %while.cond81 ], [ %tobool87, %land.rhs84 ], !dbg !5742
  br i1 %25, label %while.body89, label %while.end90, !dbg !5741

while.body89:                                     ; preds = %land.end88
  call void @__const_udelay(i64 4295) #11, !dbg !5743
  br label %while.cond81, !dbg !5741, !llvm.loop !5748

while.end90:                                      ; preds = %land.end88
  %26 = load i32, i32* %n80, align 4, !dbg !5749
  %tobool91 = icmp ne i32 %26, 0, !dbg !5749
  br i1 %tobool91, label %if.end99, label %if.then92, !dbg !5741

if.then92:                                        ; preds = %while.end90
  br label %do.body93, !dbg !5749

do.body93:                                        ; preds = %if.then92
  %27 = load i32, i32* @debug, align 4, !dbg !5751
  %tobool94 = icmp ne i32 %27, 0, !dbg !5751
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !5754

if.then95:                                        ; preds = %do.body93
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3868) #12, !dbg !5751
  br label %if.end97, !dbg !5751

if.end97:                                         ; preds = %if.then95, %do.body93
  br label %do.end98, !dbg !5754

do.end98:                                         ; preds = %if.end97
  br label %if.end99, !dbg !5754

if.end99:                                         ; preds = %do.end98, %while.end90
  br label %sw.epilog, !dbg !5755

sw.bb100:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n101, metadata !5756, metadata !DIExpression()), !dbg !5758
  store i32 10, i32* %n101, align 4, !dbg !5758
  br label %while.cond102, !dbg !5758

while.cond102:                                    ; preds = %while.body110, %sw.bb100
  %28 = load i32, i32* %n101, align 4, !dbg !5758
  %dec103 = add i32 %28, -1, !dbg !5758
  store i32 %dec103, i32* %n101, align 4, !dbg !5758
  %tobool104 = icmp ne i32 %dec103, 0, !dbg !5758
  br i1 %tobool104, label %land.rhs105, label %land.end109, !dbg !5758

land.rhs105:                                      ; preds = %while.cond102
  %29 = load i8, i8* %value.addr, align 1, !dbg !5758
  %call106 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 5, i8 zeroext %29) #11, !dbg !5758
  %conv107 = zext i8 %call106 to i32, !dbg !5758
  %tobool108 = icmp ne i32 %conv107, 0, !dbg !5758
  br label %land.end109

land.end109:                                      ; preds = %land.rhs105, %while.cond102
  %30 = phi i1 [ false, %while.cond102 ], [ %tobool108, %land.rhs105 ], !dbg !5759
  br i1 %30, label %while.body110, label %while.end111, !dbg !5758

while.body110:                                    ; preds = %land.end109
  call void @__const_udelay(i64 4295) #11, !dbg !5760
  br label %while.cond102, !dbg !5758, !llvm.loop !5765

while.end111:                                     ; preds = %land.end109
  %31 = load i32, i32* %n101, align 4, !dbg !5766
  %tobool112 = icmp ne i32 %31, 0, !dbg !5766
  br i1 %tobool112, label %if.end120, label %if.then113, !dbg !5758

if.then113:                                       ; preds = %while.end111
  br label %do.body114, !dbg !5766

do.body114:                                       ; preds = %if.then113
  %32 = load i32, i32* @debug, align 4, !dbg !5768
  %tobool115 = icmp ne i32 %32, 0, !dbg !5768
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !5771

if.then116:                                       ; preds = %do.body114
  %call117 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3872) #12, !dbg !5768
  br label %if.end118, !dbg !5768

if.end118:                                        ; preds = %if.then116, %do.body114
  br label %do.end119, !dbg !5771

do.end119:                                        ; preds = %if.end118
  br label %if.end120, !dbg !5771

if.end120:                                        ; preds = %do.end119, %while.end111
  br label %sw.epilog, !dbg !5772

sw.bb121:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %n122, metadata !5773, metadata !DIExpression()), !dbg !5775
  store i32 10, i32* %n122, align 4, !dbg !5775
  br label %while.cond123, !dbg !5775

while.cond123:                                    ; preds = %while.body131, %sw.bb121
  %33 = load i32, i32* %n122, align 4, !dbg !5775
  %dec124 = add i32 %33, -1, !dbg !5775
  store i32 %dec124, i32* %n122, align 4, !dbg !5775
  %tobool125 = icmp ne i32 %dec124, 0, !dbg !5775
  br i1 %tobool125, label %land.rhs126, label %land.end130, !dbg !5775

land.rhs126:                                      ; preds = %while.cond123
  %34 = load i8, i8* %value.addr, align 1, !dbg !5775
  %call127 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 6, i8 zeroext %34) #11, !dbg !5775
  %conv128 = zext i8 %call127 to i32, !dbg !5775
  %tobool129 = icmp ne i32 %conv128, 0, !dbg !5775
  br label %land.end130

land.end130:                                      ; preds = %land.rhs126, %while.cond123
  %35 = phi i1 [ false, %while.cond123 ], [ %tobool129, %land.rhs126 ], !dbg !5776
  br i1 %35, label %while.body131, label %while.end132, !dbg !5775

while.body131:                                    ; preds = %land.end130
  call void @__const_udelay(i64 4295) #11, !dbg !5777
  br label %while.cond123, !dbg !5775, !llvm.loop !5782

while.end132:                                     ; preds = %land.end130
  %36 = load i32, i32* %n122, align 4, !dbg !5783
  %tobool133 = icmp ne i32 %36, 0, !dbg !5783
  br i1 %tobool133, label %if.end141, label %if.then134, !dbg !5775

if.then134:                                       ; preds = %while.end132
  br label %do.body135, !dbg !5783

do.body135:                                       ; preds = %if.then134
  %37 = load i32, i32* @debug, align 4, !dbg !5785
  %tobool136 = icmp ne i32 %37, 0, !dbg !5785
  br i1 %tobool136, label %if.then137, label %if.end139, !dbg !5788

if.then137:                                       ; preds = %do.body135
  %call138 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.sony_pic_camera_command, i64 0, i64 0), i32 3876) #12, !dbg !5785
  br label %if.end139, !dbg !5785

if.end139:                                        ; preds = %if.then137, %do.body135
  br label %do.end140, !dbg !5788

do.end140:                                        ; preds = %if.end139
  br label %if.end141, !dbg !5788

if.end141:                                        ; preds = %do.end140, %while.end132
  br label %sw.epilog, !dbg !5789

sw.default:                                       ; preds = %if.end
  %38 = load i32, i32* %command.addr, align 4, !dbg !5790
  %call142 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i32 %38) #12, !dbg !5790
  br label %sw.epilog, !dbg !5791

sw.epilog:                                        ; preds = %sw.default, %if.end141, %if.end120, %if.end99, %if.end78, %if.end57, %if.end36, %if.end15, %if.end4
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !5792
  store i32 0, i32* %retval, align 4, !dbg !5793
  br label %return, !dbg !5793

return:                                           ; preds = %sw.epilog, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !5794
  ret i32 %39, !dbg !5794
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__sony_pic_camera_on() #0 !dbg !5795 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %n = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5800, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5802, metadata !DIExpression()), !dbg !5803
  %0 = load i32, i32* @camera, align 4, !dbg !5804
  %tobool = icmp ne i32 %0, 0, !dbg !5804
  br i1 %tobool, label %if.end, label %if.then, !dbg !5806

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !5807
  store i32 -19, i32* %retval, align 4, !dbg !5809
  br label %return, !dbg !5809

if.end:                                           ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 10), align 2, !dbg !5810
  %tobool1 = icmp ne i8 %1, 0, !dbg !5812
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5813

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5814
  br label %return, !dbg !5814

if.end3:                                          ; preds = %if.end
  store i32 5, i32* %j, align 4, !dbg !5815
  br label %for.cond, !dbg !5817

for.cond:                                         ; preds = %for.inc23, %if.end3
  %2 = load i32, i32* %j, align 4, !dbg !5818
  %cmp = icmp sgt i32 %2, 0, !dbg !5820
  br i1 %cmp, label %for.body, label %for.end25, !dbg !5821

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !5822
  br label %for.cond4, !dbg !5825

for.cond4:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %x, align 4, !dbg !5826
  %cmp5 = icmp slt i32 %3, 100, !dbg !5828
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !5829

land.rhs:                                         ; preds = %for.cond4
  %call6 = call zeroext i8 @sony_pic_call2(i8 zeroext -111, i8 zeroext 1) #11, !dbg !5830
  %conv = zext i8 %call6 to i32, !dbg !5830
  %tobool7 = icmp ne i32 %conv, 0, !dbg !5829
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond4
  %4 = phi i1 [ false, %for.cond4 ], [ %tobool7, %land.rhs ], !dbg !5831
  br i1 %4, label %for.body8, label %for.end, !dbg !5832

for.body8:                                        ; preds = %land.end
  call void @msleep(i32 10) #11, !dbg !5833
  br label %for.inc, !dbg !5833

for.inc:                                          ; preds = %for.body8
  %5 = load i32, i32* %x, align 4, !dbg !5834
  %inc = add i32 %5, 1, !dbg !5834
  store i32 %inc, i32* %x, align 4, !dbg !5834
  br label %for.cond4, !dbg !5835, !llvm.loop !5836

for.end:                                          ; preds = %land.end
  %call9 = call zeroext i8 @sony_pic_call1(i8 zeroext -109) #11, !dbg !5838
  store i32 400, i32* %i, align 4, !dbg !5839
  br label %for.cond10, !dbg !5841

for.cond10:                                       ; preds = %for.inc18, %for.end
  %6 = load i32, i32* %i, align 4, !dbg !5842
  %cmp11 = icmp sgt i32 %6, 0, !dbg !5844
  br i1 %cmp11, label %for.body13, label %for.end19, !dbg !5845

for.body13:                                       ; preds = %for.cond10
  %call14 = call i32 @__sony_pic_camera_ready() #11, !dbg !5846
  %tobool15 = icmp ne i32 %call14, 0, !dbg !5846
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5849

if.then16:                                        ; preds = %for.body13
  br label %for.end19, !dbg !5850

if.end17:                                         ; preds = %for.body13
  call void @msleep(i32 10) #11, !dbg !5851
  br label %for.inc18, !dbg !5852

for.inc18:                                        ; preds = %if.end17
  %7 = load i32, i32* %i, align 4, !dbg !5853
  %dec = add i32 %7, -1, !dbg !5853
  store i32 %dec, i32* %i, align 4, !dbg !5853
  br label %for.cond10, !dbg !5854, !llvm.loop !5855

for.end19:                                        ; preds = %if.then16, %for.cond10
  %8 = load i32, i32* %i, align 4, !dbg !5857
  %tobool20 = icmp ne i32 %8, 0, !dbg !5857
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !5859

if.then21:                                        ; preds = %for.end19
  br label %for.end25, !dbg !5860

if.end22:                                         ; preds = %for.end19
  br label %for.inc23, !dbg !5861

for.inc23:                                        ; preds = %if.end22
  %9 = load i32, i32* %j, align 4, !dbg !5862
  %dec24 = add i32 %9, -1, !dbg !5862
  store i32 %dec24, i32* %j, align 4, !dbg !5862
  br label %for.cond, !dbg !5863, !llvm.loop !5864

for.end25:                                        ; preds = %if.then21, %for.cond
  %10 = load i32, i32* %j, align 4, !dbg !5866
  %cmp26 = icmp eq i32 %10, 0, !dbg !5868
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !5869

if.then28:                                        ; preds = %for.end25
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !5870
  store i32 -19, i32* %retval, align 4, !dbg !5872
  br label %return, !dbg !5872

if.end30:                                         ; preds = %for.end25
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5873, metadata !DIExpression()), !dbg !5875
  store i32 10, i32* %n, align 4, !dbg !5875
  br label %while.cond, !dbg !5875

while.cond:                                       ; preds = %while.body, %if.end30
  %11 = load i32, i32* %n, align 4, !dbg !5875
  %dec31 = add i32 %11, -1, !dbg !5875
  store i32 %dec31, i32* %n, align 4, !dbg !5875
  %tobool32 = icmp ne i32 %dec31, 0, !dbg !5875
  br i1 %tobool32, label %land.rhs33, label %land.end37, !dbg !5875

land.rhs33:                                       ; preds = %while.cond
  %call34 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 16, i8 zeroext 90) #11, !dbg !5875
  %conv35 = zext i8 %call34 to i32, !dbg !5875
  %tobool36 = icmp ne i32 %conv35, 0, !dbg !5875
  br label %land.end37

land.end37:                                       ; preds = %land.rhs33, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %tobool36, %land.rhs33 ], !dbg !5876
  br i1 %12, label %while.body, label %while.end, !dbg !5875

while.body:                                       ; preds = %land.end37
  call void @__const_udelay(i64 4295) #11, !dbg !5877
  br label %while.cond, !dbg !5875, !llvm.loop !5882

while.end:                                        ; preds = %land.end37
  %13 = load i32, i32* %n, align 4, !dbg !5883
  %tobool38 = icmp ne i32 %13, 0, !dbg !5883
  br i1 %tobool38, label %if.end44, label %if.then39, !dbg !5875

if.then39:                                        ; preds = %while.end
  br label %do.body, !dbg !5883

do.body:                                          ; preds = %if.then39
  %14 = load i32, i32* @debug, align 4, !dbg !5885
  %tobool40 = icmp ne i32 %14, 0, !dbg !5885
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !5888

if.then41:                                        ; preds = %do.body
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__sony_pic_camera_on, i64 0, i64 0), i32 3829) #12, !dbg !5885
  br label %if.end43, !dbg !5885

if.end43:                                         ; preds = %if.then41, %do.body
  br label %do.end, !dbg !5888

do.end:                                           ; preds = %if.end43
  br label %if.end44, !dbg !5888

if.end44:                                         ; preds = %do.end, %while.end
  store i8 1, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 10), align 2, !dbg !5889
  store i32 0, i32* %retval, align 4, !dbg !5890
  br label %return, !dbg !5890

return:                                           ; preds = %if.end44, %if.then28, %if.then2, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !5891
  ret i32 %15, !dbg !5891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__sony_pic_camera_off() #0 !dbg !5892 {
entry:
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  %0 = load i32, i32* @camera, align 4, !dbg !5893
  %tobool = icmp ne i32 %0, 0, !dbg !5893
  br i1 %tobool, label %if.end, label %if.then, !dbg !5895

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !5896
  store i32 -19, i32* %retval, align 4, !dbg !5898
  br label %return, !dbg !5898

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5899, metadata !DIExpression()), !dbg !5901
  store i32 10, i32* %n, align 4, !dbg !5901
  br label %while.cond, !dbg !5901

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load i32, i32* %n, align 4, !dbg !5901
  %dec = add i32 %1, -1, !dbg !5901
  store i32 %dec, i32* %n, align 4, !dbg !5901
  %tobool1 = icmp ne i32 %dec, 0, !dbg !5901
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !5901

land.rhs:                                         ; preds = %while.cond
  %call2 = call zeroext i8 @sony_pic_call3(i8 zeroext -112, i8 zeroext 5, i8 zeroext 64) #11, !dbg !5901
  %conv = zext i8 %call2 to i32, !dbg !5901
  %tobool3 = icmp ne i32 %conv, 0, !dbg !5901
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %tobool3, %land.rhs ], !dbg !5902
  br i1 %2, label %while.body, label %while.end, !dbg !5901

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 4295) #11, !dbg !5903
  br label %while.cond, !dbg !5901, !llvm.loop !5908

while.end:                                        ; preds = %land.end
  %3 = load i32, i32* %n, align 4, !dbg !5909
  %tobool4 = icmp ne i32 %3, 0, !dbg !5909
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !5901

if.then5:                                         ; preds = %while.end
  br label %do.body, !dbg !5909

do.body:                                          ; preds = %if.then5
  %4 = load i32, i32* @debug, align 4, !dbg !5911
  %tobool6 = icmp ne i32 %4, 0, !dbg !5911
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !5914

if.then7:                                         ; preds = %do.body
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.__sony_pic_camera_off, i64 0, i64 0), i32 3786) #12, !dbg !5911
  br label %if.end9, !dbg !5911

if.end9:                                          ; preds = %if.then7, %do.body
  br label %do.end, !dbg !5914

do.end:                                           ; preds = %if.end9
  br label %if.end10, !dbg !5914

if.end10:                                         ; preds = %do.end, %while.end
  %5 = load i8, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 10), align 2, !dbg !5915
  %tobool11 = icmp ne i8 %5, 0, !dbg !5917
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !5918

if.then12:                                        ; preds = %if.end10
  %call13 = call zeroext i8 @sony_pic_call2(i8 zeroext -111, i8 zeroext 0) #11, !dbg !5919
  store i8 0, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 10), align 2, !dbg !5921
  br label %if.end14, !dbg !5922

if.end14:                                         ; preds = %if.then12, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !5923
  br label %return, !dbg !5923

return:                                           ; preds = %if.end14, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5924
  ret i32 %6, !dbg !5924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @sony_pic_call3(i8 zeroext %dev, i8 zeroext %fn, i8 zeroext %v) #0 !dbg !5925 {
entry:
  %dev.addr = alloca i8, align 1
  %fn.addr = alloca i8, align 1
  %v.addr = alloca i8, align 1
  %v1 = alloca i8, align 1
  %n = alloca i32, align 4
  %n12 = alloca i32, align 4
  %n40 = alloca i32, align 4
  store i8 %dev, i8* %dev.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dev.addr, metadata !5928, metadata !DIExpression()), !dbg !5929
  store i8 %fn, i8* %fn.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fn.addr, metadata !5930, metadata !DIExpression()), !dbg !5931
  store i8 %v, i8* %v.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %v.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.declare(metadata i8* %v1, metadata !5934, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5936, metadata !DIExpression()), !dbg !5938
  store i32 10000, i32* %n, align 4, !dbg !5938
  br label %while.cond, !dbg !5938

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %n, align 4, !dbg !5938
  %dec = add i32 %0, -1, !dbg !5938
  store i32 %dec, i32* %n, align 4, !dbg !5938
  %tobool = icmp ne i32 %dec, 0, !dbg !5938
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5938

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !5938
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %1, i32 0, i32 0, !dbg !5938
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !5938
  %2 = load i16, i16* %minimum, align 1, !dbg !5938
  %conv = zext i16 %2 to i32, !dbg !5938
  %add = add i32 %conv, 4, !dbg !5938
  %call = call zeroext i8 @inb_p(i32 %add) #11, !dbg !5938
  %conv1 = zext i8 %call to i32, !dbg !5938
  %and = and i32 %conv1, 2, !dbg !5938
  %tobool2 = icmp ne i32 %and, 0, !dbg !5938
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool2, %land.rhs ], !dbg !5939
  br i1 %3, label %while.body, label %while.end, !dbg !5938

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 4295) #11, !dbg !5940
  br label %while.cond, !dbg !5938, !llvm.loop !5945

while.end:                                        ; preds = %land.end
  %4 = load i32, i32* %n, align 4, !dbg !5946
  %tobool3 = icmp ne i32 %4, 0, !dbg !5946
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !5938

if.then:                                          ; preds = %while.end
  br label %do.body, !dbg !5946

do.body:                                          ; preds = %if.then
  %5 = load i32, i32* @debug, align 4, !dbg !5948
  %tobool4 = icmp ne i32 %5, 0, !dbg !5948
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5951

if.then5:                                         ; preds = %do.body
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_pic_call3, i64 0, i64 0), i32 3638) #12, !dbg !5948
  br label %if.end, !dbg !5948

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !5951

do.end:                                           ; preds = %if.end
  br label %if.end7, !dbg !5951

if.end7:                                          ; preds = %do.end, %while.end
  %6 = load i8, i8* %dev.addr, align 1, !dbg !5952
  %7 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !5953
  %io18 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %7, i32 0, i32 0, !dbg !5954
  %minimum9 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io18, i32 0, i32 3, !dbg !5955
  %8 = load i16, i16* %minimum9, align 1, !dbg !5955
  %conv10 = zext i16 %8 to i32, !dbg !5956
  %add11 = add i32 %conv10, 4, !dbg !5957
  call void @outb(i8 zeroext %6, i32 %add11) #11, !dbg !5958
  call void @llvm.dbg.declare(metadata i32* %n12, metadata !5959, metadata !DIExpression()), !dbg !5961
  store i32 10000, i32* %n12, align 4, !dbg !5961
  br label %while.cond13, !dbg !5961

while.cond13:                                     ; preds = %while.body26, %if.end7
  %9 = load i32, i32* %n12, align 4, !dbg !5961
  %dec14 = add i32 %9, -1, !dbg !5961
  store i32 %dec14, i32* %n12, align 4, !dbg !5961
  %tobool15 = icmp ne i32 %dec14, 0, !dbg !5961
  br i1 %tobool15, label %land.rhs16, label %land.end25, !dbg !5961

land.rhs16:                                       ; preds = %while.cond13
  %10 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !5961
  %io117 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %10, i32 0, i32 0, !dbg !5961
  %minimum18 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io117, i32 0, i32 3, !dbg !5961
  %11 = load i16, i16* %minimum18, align 1, !dbg !5961
  %conv19 = zext i16 %11 to i32, !dbg !5961
  %add20 = add i32 %conv19, 4, !dbg !5961
  %call21 = call zeroext i8 @inb_p(i32 %add20) #11, !dbg !5961
  %conv22 = zext i8 %call21 to i32, !dbg !5961
  %and23 = and i32 %conv22, 2, !dbg !5961
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5961
  br label %land.end25

land.end25:                                       ; preds = %land.rhs16, %while.cond13
  %12 = phi i1 [ false, %while.cond13 ], [ %tobool24, %land.rhs16 ], !dbg !5962
  br i1 %12, label %while.body26, label %while.end27, !dbg !5961

while.body26:                                     ; preds = %land.end25
  call void @__const_udelay(i64 4295) #11, !dbg !5963
  br label %while.cond13, !dbg !5961, !llvm.loop !5968

while.end27:                                      ; preds = %land.end25
  %13 = load i32, i32* %n12, align 4, !dbg !5969
  %tobool28 = icmp ne i32 %13, 0, !dbg !5969
  br i1 %tobool28, label %if.end36, label %if.then29, !dbg !5961

if.then29:                                        ; preds = %while.end27
  br label %do.body30, !dbg !5969

do.body30:                                        ; preds = %if.then29
  %14 = load i32, i32* @debug, align 4, !dbg !5971
  %tobool31 = icmp ne i32 %14, 0, !dbg !5971
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !5974

if.then32:                                        ; preds = %do.body30
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_pic_call3, i64 0, i64 0), i32 3640) #12, !dbg !5971
  br label %if.end34, !dbg !5971

if.end34:                                         ; preds = %if.then32, %do.body30
  br label %do.end35, !dbg !5974

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !5974

if.end36:                                         ; preds = %do.end35, %while.end27
  %15 = load i8, i8* %fn.addr, align 1, !dbg !5975
  %16 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !5976
  %io137 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %16, i32 0, i32 0, !dbg !5977
  %minimum38 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io137, i32 0, i32 3, !dbg !5978
  %17 = load i16, i16* %minimum38, align 1, !dbg !5978
  %conv39 = zext i16 %17 to i32, !dbg !5979
  call void @outb(i8 zeroext %15, i32 %conv39) #11, !dbg !5980
  call void @llvm.dbg.declare(metadata i32* %n40, metadata !5981, metadata !DIExpression()), !dbg !5983
  store i32 10000, i32* %n40, align 4, !dbg !5983
  br label %while.cond41, !dbg !5983

while.cond41:                                     ; preds = %while.body54, %if.end36
  %18 = load i32, i32* %n40, align 4, !dbg !5983
  %dec42 = add i32 %18, -1, !dbg !5983
  store i32 %dec42, i32* %n40, align 4, !dbg !5983
  %tobool43 = icmp ne i32 %dec42, 0, !dbg !5983
  br i1 %tobool43, label %land.rhs44, label %land.end53, !dbg !5983

land.rhs44:                                       ; preds = %while.cond41
  %19 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !5983
  %io145 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %19, i32 0, i32 0, !dbg !5983
  %minimum46 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io145, i32 0, i32 3, !dbg !5983
  %20 = load i16, i16* %minimum46, align 1, !dbg !5983
  %conv47 = zext i16 %20 to i32, !dbg !5983
  %add48 = add i32 %conv47, 4, !dbg !5983
  %call49 = call zeroext i8 @inb_p(i32 %add48) #11, !dbg !5983
  %conv50 = zext i8 %call49 to i32, !dbg !5983
  %and51 = and i32 %conv50, 2, !dbg !5983
  %tobool52 = icmp ne i32 %and51, 0, !dbg !5983
  br label %land.end53

land.end53:                                       ; preds = %land.rhs44, %while.cond41
  %21 = phi i1 [ false, %while.cond41 ], [ %tobool52, %land.rhs44 ], !dbg !5984
  br i1 %21, label %while.body54, label %while.end55, !dbg !5983

while.body54:                                     ; preds = %land.end53
  call void @__const_udelay(i64 4295) #11, !dbg !5985
  br label %while.cond41, !dbg !5983, !llvm.loop !5990

while.end55:                                      ; preds = %land.end53
  %22 = load i32, i32* %n40, align 4, !dbg !5991
  %tobool56 = icmp ne i32 %22, 0, !dbg !5991
  br i1 %tobool56, label %if.end64, label %if.then57, !dbg !5983

if.then57:                                        ; preds = %while.end55
  br label %do.body58, !dbg !5991

do.body58:                                        ; preds = %if.then57
  %23 = load i32, i32* @debug, align 4, !dbg !5993
  %tobool59 = icmp ne i32 %23, 0, !dbg !5993
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !5996

if.then60:                                        ; preds = %do.body58
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_pic_call3, i64 0, i64 0), i32 3642) #12, !dbg !5993
  br label %if.end62, !dbg !5993

if.end62:                                         ; preds = %if.then60, %do.body58
  br label %do.end63, !dbg !5996

do.end63:                                         ; preds = %if.end62
  br label %if.end64, !dbg !5996

if.end64:                                         ; preds = %do.end63, %while.end55
  %24 = load i8, i8* %v.addr, align 1, !dbg !5997
  %25 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !5998
  %io165 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %25, i32 0, i32 0, !dbg !5999
  %minimum66 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io165, i32 0, i32 3, !dbg !6000
  %26 = load i16, i16* %minimum66, align 1, !dbg !6000
  %conv67 = zext i16 %26 to i32, !dbg !6001
  call void @outb(i8 zeroext %24, i32 %conv67) #11, !dbg !6002
  %27 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6003
  %io168 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %27, i32 0, i32 0, !dbg !6004
  %minimum69 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io168, i32 0, i32 3, !dbg !6005
  %28 = load i16, i16* %minimum69, align 1, !dbg !6005
  %conv70 = zext i16 %28 to i32, !dbg !6006
  %call71 = call zeroext i8 @inb_p(i32 %conv70) #11, !dbg !6007
  store i8 %call71, i8* %v1, align 1, !dbg !6008
  br label %do.body72, !dbg !6009

do.body72:                                        ; preds = %if.end64
  %29 = load i32, i32* @debug, align 4, !dbg !6010
  %tobool73 = icmp ne i32 %29, 0, !dbg !6010
  br i1 %tobool73, label %if.then74, label %if.end80, !dbg !6013

if.then74:                                        ; preds = %do.body72
  %30 = load i8, i8* %dev.addr, align 1, !dbg !6010
  %conv75 = zext i8 %30 to i32, !dbg !6010
  %31 = load i8, i8* %fn.addr, align 1, !dbg !6010
  %conv76 = zext i8 %31 to i32, !dbg !6010
  %32 = load i8, i8* %v.addr, align 1, !dbg !6010
  %conv77 = zext i8 %32 to i32, !dbg !6010
  %33 = load i8, i8* %v1, align 1, !dbg !6010
  %conv78 = zext i8 %33 to i32, !dbg !6010
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.7, i64 0, i64 0), i32 %conv75, i32 %conv76, i32 %conv77, i32 %conv78) #12, !dbg !6010
  br label %if.end80, !dbg !6010

if.end80:                                         ; preds = %if.then74, %do.body72
  br label %do.end81, !dbg !6013

do.end81:                                         ; preds = %if.end80
  %34 = load i8, i8* %v1, align 1, !dbg !6014
  ret i8 %34, !dbg !6015
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @sony_laptop_exit() #4 section ".exit.text" !dbg !6016 {
entry:
  call void @acpi_bus_unregister_driver(%struct.acpi_driver* @sony_nc_driver) #11, !dbg !6017
  %0 = load i32, i32* @spic_drv_registered, align 4, !dbg !6018
  %tobool = icmp ne i32 %0, 0, !dbg !6018
  br i1 %tobool, label %if.then, label %if.end, !dbg !6020

if.then:                                          ; preds = %entry
  call void @acpi_bus_unregister_driver(%struct.acpi_driver* @sony_pic_driver) #11, !dbg !6021
  br label %if.end, !dbg !6021

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6022
}

; Function Attrs: noredzone
declare dso_local void @acpi_bus_unregister_driver(%struct.acpi_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_laptop_init() #4 section ".init.text" !dbg !6023 {
entry:
  %retval = alloca i32, align 4
  %result = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6024, metadata !DIExpression()), !dbg !6025
  %0 = load i32, i32* @no_spic, align 4, !dbg !6026
  %tobool = icmp ne i32 %0, 0, !dbg !6026
  br i1 %tobool, label %if.end6, label %land.lhs.true, !dbg !6028

land.lhs.true:                                    ; preds = %entry
  %call = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([3 x %struct.dmi_system_id], [3 x %struct.dmi_system_id]* bitcast ([3 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @sonypi_dmi_table to [3 x %struct.dmi_system_id]*), i64 0, i64 0)) #11, !dbg !6029
  %tobool1 = icmp ne i32 %call, 0, !dbg !6029
  br i1 %tobool1, label %if.then, label %if.end6, !dbg !6030

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i32 @acpi_bus_register_driver(%struct.acpi_driver* @sony_pic_driver) #11, !dbg !6031
  store i32 %call2, i32* %result, align 4, !dbg !6033
  %1 = load i32, i32* %result, align 4, !dbg !6034
  %tobool3 = icmp ne i32 %1, 0, !dbg !6034
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6036

if.then4:                                         ; preds = %if.then
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.186, i64 0, i64 0)) #12, !dbg !6037
  br label %out, !dbg !6039

if.end:                                           ; preds = %if.then
  store i32 1, i32* @spic_drv_registered, align 4, !dbg !6040
  br label %if.end6, !dbg !6041

if.end6:                                          ; preds = %if.end, %land.lhs.true, %entry
  %call7 = call i32 @acpi_bus_register_driver(%struct.acpi_driver* @sony_nc_driver) #11, !dbg !6042
  store i32 %call7, i32* %result, align 4, !dbg !6043
  %2 = load i32, i32* %result, align 4, !dbg !6044
  %tobool8 = icmp ne i32 %2, 0, !dbg !6044
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !6046

if.then9:                                         ; preds = %if.end6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.187, i64 0, i64 0)) #12, !dbg !6047
  br label %out_unregister_pic, !dbg !6049

if.end11:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !6050
  br label %return, !dbg !6050

out_unregister_pic:                               ; preds = %if.then9
  call void @llvm.dbg.label(metadata !6051), !dbg !6052
  %3 = load i32, i32* @spic_drv_registered, align 4, !dbg !6053
  %tobool12 = icmp ne i32 %3, 0, !dbg !6053
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6055

if.then13:                                        ; preds = %out_unregister_pic
  call void @acpi_bus_unregister_driver(%struct.acpi_driver* @sony_pic_driver) #11, !dbg !6056
  br label %if.end14, !dbg !6056

if.end14:                                         ; preds = %if.then13, %out_unregister_pic
  br label %out, !dbg !6053

out:                                              ; preds = %if.end14, %if.then4
  call void @llvm.dbg.label(metadata !6057), !dbg !6058
  %4 = load i32, i32* %result, align 4, !dbg !6059
  store i32 %4, i32* %retval, align 4, !dbg !6060
  br label %return, !dbg !6060

return:                                           ; preds = %out, %if.end11
  %5 = load i32, i32* %retval, align 4, !dbg !6061
  ret i32 %5, !dbg !6061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @sony_pic_call2(i8 zeroext %dev, i8 zeroext %fn) #0 !dbg !6062 {
entry:
  %dev.addr = alloca i8, align 1
  %fn.addr = alloca i8, align 1
  %v1 = alloca i8, align 1
  %n = alloca i32, align 4
  %n12 = alloca i32, align 4
  store i8 %dev, i8* %dev.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dev.addr, metadata !6065, metadata !DIExpression()), !dbg !6066
  store i8 %fn, i8* %fn.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fn.addr, metadata !6067, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.declare(metadata i8* %v1, metadata !6069, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6071, metadata !DIExpression()), !dbg !6073
  store i32 10000, i32* %n, align 4, !dbg !6073
  br label %while.cond, !dbg !6073

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %n, align 4, !dbg !6073
  %dec = add i32 %0, -1, !dbg !6073
  store i32 %dec, i32* %n, align 4, !dbg !6073
  %tobool = icmp ne i32 %dec, 0, !dbg !6073
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6073

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6073
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %1, i32 0, i32 0, !dbg !6073
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !6073
  %2 = load i16, i16* %minimum, align 1, !dbg !6073
  %conv = zext i16 %2 to i32, !dbg !6073
  %add = add i32 %conv, 4, !dbg !6073
  %call = call zeroext i8 @inb_p(i32 %add) #11, !dbg !6073
  %conv1 = zext i8 %call to i32, !dbg !6073
  %and = and i32 %conv1, 2, !dbg !6073
  %tobool2 = icmp ne i32 %and, 0, !dbg !6073
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool2, %land.rhs ], !dbg !6074
  br i1 %3, label %while.body, label %while.end, !dbg !6073

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 4295) #11, !dbg !6075
  br label %while.cond, !dbg !6073, !llvm.loop !6080

while.end:                                        ; preds = %land.end
  %4 = load i32, i32* %n, align 4, !dbg !6081
  %tobool3 = icmp ne i32 %4, 0, !dbg !6081
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !6073

if.then:                                          ; preds = %while.end
  br label %do.body, !dbg !6081

do.body:                                          ; preds = %if.then
  %5 = load i32, i32* @debug, align 4, !dbg !6083
  %tobool4 = icmp ne i32 %5, 0, !dbg !6083
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6086

if.then5:                                         ; preds = %do.body
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_pic_call2, i64 0, i64 0), i32 3624) #12, !dbg !6083
  br label %if.end, !dbg !6083

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !6086

do.end:                                           ; preds = %if.end
  br label %if.end7, !dbg !6086

if.end7:                                          ; preds = %do.end, %while.end
  %6 = load i8, i8* %dev.addr, align 1, !dbg !6087
  %7 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6088
  %io18 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %7, i32 0, i32 0, !dbg !6089
  %minimum9 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io18, i32 0, i32 3, !dbg !6090
  %8 = load i16, i16* %minimum9, align 1, !dbg !6090
  %conv10 = zext i16 %8 to i32, !dbg !6091
  %add11 = add i32 %conv10, 4, !dbg !6092
  call void @outb(i8 zeroext %6, i32 %add11) #11, !dbg !6093
  call void @llvm.dbg.declare(metadata i32* %n12, metadata !6094, metadata !DIExpression()), !dbg !6096
  store i32 10000, i32* %n12, align 4, !dbg !6096
  br label %while.cond13, !dbg !6096

while.cond13:                                     ; preds = %while.body26, %if.end7
  %9 = load i32, i32* %n12, align 4, !dbg !6096
  %dec14 = add i32 %9, -1, !dbg !6096
  store i32 %dec14, i32* %n12, align 4, !dbg !6096
  %tobool15 = icmp ne i32 %dec14, 0, !dbg !6096
  br i1 %tobool15, label %land.rhs16, label %land.end25, !dbg !6096

land.rhs16:                                       ; preds = %while.cond13
  %10 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6096
  %io117 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %10, i32 0, i32 0, !dbg !6096
  %minimum18 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io117, i32 0, i32 3, !dbg !6096
  %11 = load i16, i16* %minimum18, align 1, !dbg !6096
  %conv19 = zext i16 %11 to i32, !dbg !6096
  %add20 = add i32 %conv19, 4, !dbg !6096
  %call21 = call zeroext i8 @inb_p(i32 %add20) #11, !dbg !6096
  %conv22 = zext i8 %call21 to i32, !dbg !6096
  %and23 = and i32 %conv22, 2, !dbg !6096
  %tobool24 = icmp ne i32 %and23, 0, !dbg !6096
  br label %land.end25

land.end25:                                       ; preds = %land.rhs16, %while.cond13
  %12 = phi i1 [ false, %while.cond13 ], [ %tobool24, %land.rhs16 ], !dbg !6097
  br i1 %12, label %while.body26, label %while.end27, !dbg !6096

while.body26:                                     ; preds = %land.end25
  call void @__const_udelay(i64 4295) #11, !dbg !6098
  br label %while.cond13, !dbg !6096, !llvm.loop !6103

while.end27:                                      ; preds = %land.end25
  %13 = load i32, i32* %n12, align 4, !dbg !6104
  %tobool28 = icmp ne i32 %13, 0, !dbg !6104
  br i1 %tobool28, label %if.end36, label %if.then29, !dbg !6096

if.then29:                                        ; preds = %while.end27
  br label %do.body30, !dbg !6104

do.body30:                                        ; preds = %if.then29
  %14 = load i32, i32* @debug, align 4, !dbg !6106
  %tobool31 = icmp ne i32 %14, 0, !dbg !6106
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !6109

if.then32:                                        ; preds = %do.body30
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_pic_call2, i64 0, i64 0), i32 3627) #12, !dbg !6106
  br label %if.end34, !dbg !6106

if.end34:                                         ; preds = %if.then32, %do.body30
  br label %do.end35, !dbg !6109

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !6109

if.end36:                                         ; preds = %do.end35, %while.end27
  %15 = load i8, i8* %fn.addr, align 1, !dbg !6110
  %16 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6111
  %io137 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %16, i32 0, i32 0, !dbg !6112
  %minimum38 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io137, i32 0, i32 3, !dbg !6113
  %17 = load i16, i16* %minimum38, align 1, !dbg !6113
  %conv39 = zext i16 %17 to i32, !dbg !6114
  call void @outb(i8 zeroext %15, i32 %conv39) #11, !dbg !6115
  %18 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6116
  %io140 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %18, i32 0, i32 0, !dbg !6117
  %minimum41 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io140, i32 0, i32 3, !dbg !6118
  %19 = load i16, i16* %minimum41, align 1, !dbg !6118
  %conv42 = zext i16 %19 to i32, !dbg !6119
  %call43 = call zeroext i8 @inb_p(i32 %conv42) #11, !dbg !6120
  store i8 %call43, i8* %v1, align 1, !dbg !6121
  br label %do.body44, !dbg !6122

do.body44:                                        ; preds = %if.end36
  %20 = load i32, i32* @debug, align 4, !dbg !6123
  %tobool45 = icmp ne i32 %20, 0, !dbg !6123
  br i1 %tobool45, label %if.then46, label %if.end51, !dbg !6126

if.then46:                                        ; preds = %do.body44
  %21 = load i8, i8* %dev.addr, align 1, !dbg !6123
  %conv47 = zext i8 %21 to i32, !dbg !6123
  %22 = load i8, i8* %fn.addr, align 1, !dbg !6123
  %conv48 = zext i8 %22 to i32, !dbg !6123
  %23 = load i8, i8* %v1, align 1, !dbg !6123
  %conv49 = zext i8 %23 to i32, !dbg !6123
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0), i32 %conv47, i32 %conv48, i32 %conv49) #12, !dbg !6123
  br label %if.end51, !dbg !6123

if.end51:                                         ; preds = %if.then46, %do.body44
  br label %do.end52, !dbg !6126

do.end52:                                         ; preds = %if.end51
  %24 = load i8, i8* %v1, align 1, !dbg !6127
  ret i8 %24, !dbg !6128
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @sony_pic_call1(i8 zeroext %dev) #0 !dbg !6129 {
entry:
  %dev.addr = alloca i8, align 1
  %v1 = alloca i8, align 1
  %v2 = alloca i8, align 1
  %n = alloca i32, align 4
  store i8 %dev, i8* %dev.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dev.addr, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.declare(metadata i8* %v1, metadata !6134, metadata !DIExpression()), !dbg !6135
  call void @llvm.dbg.declare(metadata i8* %v2, metadata !6136, metadata !DIExpression()), !dbg !6137
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6138, metadata !DIExpression()), !dbg !6140
  store i32 10000, i32* %n, align 4, !dbg !6140
  br label %while.cond, !dbg !6140

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %n, align 4, !dbg !6140
  %dec = add i32 %0, -1, !dbg !6140
  store i32 %dec, i32* %n, align 4, !dbg !6140
  %tobool = icmp ne i32 %dec, 0, !dbg !6140
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6140

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6140
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %1, i32 0, i32 0, !dbg !6140
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !6140
  %2 = load i16, i16* %minimum, align 1, !dbg !6140
  %conv = zext i16 %2 to i32, !dbg !6140
  %add = add i32 %conv, 4, !dbg !6140
  %call = call zeroext i8 @inb_p(i32 %add) #11, !dbg !6140
  %conv1 = zext i8 %call to i32, !dbg !6140
  %and = and i32 %conv1, 2, !dbg !6140
  %tobool2 = icmp ne i32 %and, 0, !dbg !6140
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %tobool2, %land.rhs ], !dbg !6141
  br i1 %3, label %while.body, label %while.end, !dbg !6140

while.body:                                       ; preds = %land.end
  call void @__const_udelay(i64 4295) #11, !dbg !6142
  br label %while.cond, !dbg !6140, !llvm.loop !6147

while.end:                                        ; preds = %land.end
  %4 = load i32, i32* %n, align 4, !dbg !6148
  %tobool3 = icmp ne i32 %4, 0, !dbg !6148
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !6140

if.then:                                          ; preds = %while.end
  br label %do.body, !dbg !6148

do.body:                                          ; preds = %if.then
  %5 = load i32, i32* @debug, align 4, !dbg !6150
  %tobool4 = icmp ne i32 %5, 0, !dbg !6150
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6153

if.then5:                                         ; preds = %do.body
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_pic_call1, i64 0, i64 0), i32 3611) #12, !dbg !6150
  br label %if.end, !dbg !6150

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !6153

do.end:                                           ; preds = %if.end
  br label %if.end7, !dbg !6153

if.end7:                                          ; preds = %do.end, %while.end
  %6 = load i8, i8* %dev.addr, align 1, !dbg !6154
  %7 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6155
  %io18 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %7, i32 0, i32 0, !dbg !6156
  %minimum9 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io18, i32 0, i32 3, !dbg !6157
  %8 = load i16, i16* %minimum9, align 1, !dbg !6157
  %conv10 = zext i16 %8 to i32, !dbg !6158
  %add11 = add i32 %conv10, 4, !dbg !6159
  call void @outb(i8 zeroext %6, i32 %add11) #11, !dbg !6160
  %9 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6161
  %io112 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %9, i32 0, i32 0, !dbg !6162
  %minimum13 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io112, i32 0, i32 3, !dbg !6163
  %10 = load i16, i16* %minimum13, align 1, !dbg !6163
  %conv14 = zext i16 %10 to i32, !dbg !6164
  %add15 = add i32 %conv14, 4, !dbg !6165
  %call16 = call zeroext i8 @inb_p(i32 %add15) #11, !dbg !6166
  store i8 %call16, i8* %v1, align 1, !dbg !6167
  %11 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !6168
  %io117 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %11, i32 0, i32 0, !dbg !6169
  %minimum18 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io117, i32 0, i32 3, !dbg !6170
  %12 = load i16, i16* %minimum18, align 1, !dbg !6170
  %conv19 = zext i16 %12 to i32, !dbg !6171
  %call20 = call zeroext i8 @inb_p(i32 %conv19) #11, !dbg !6172
  store i8 %call20, i8* %v2, align 1, !dbg !6173
  br label %do.body21, !dbg !6174

do.body21:                                        ; preds = %if.end7
  %13 = load i32, i32* @debug, align 4, !dbg !6175
  %tobool22 = icmp ne i32 %13, 0, !dbg !6175
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !6178

if.then23:                                        ; preds = %do.body21
  %14 = load i8, i8* %dev.addr, align 1, !dbg !6175
  %conv24 = zext i8 %14 to i32, !dbg !6175
  %15 = load i8, i8* %v2, align 1, !dbg !6175
  %conv25 = zext i8 %15 to i32, !dbg !6175
  %shl = shl i32 %conv25, 8, !dbg !6175
  %16 = load i8, i8* %v1, align 1, !dbg !6175
  %conv26 = zext i8 %16 to i32, !dbg !6175
  %or = or i32 %shl, %conv26, !dbg !6175
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 %conv24, i32 %or) #12, !dbg !6175
  br label %if.end28, !dbg !6175

if.end28:                                         ; preds = %if.then23, %do.body21
  br label %do.end29, !dbg !6178

do.end29:                                         ; preds = %if.end28
  %17 = load i8, i8* %v2, align 1, !dbg !6179
  ret i8 %17, !dbg !6180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__sony_pic_camera_ready() #0 !dbg !6181 {
entry:
  %v = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %v, metadata !6182, metadata !DIExpression()), !dbg !6183
  %call = call zeroext i8 @sony_pic_call2(i8 zeroext -113, i8 zeroext 7) #11, !dbg !6184
  store i8 %call, i8* %v, align 1, !dbg !6185
  %0 = load i8, i8* %v, align 1, !dbg !6186
  %conv = zext i8 %0 to i32, !dbg !6186
  %cmp = icmp ne i32 %conv, 255, !dbg !6187
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6188

land.rhs:                                         ; preds = %entry
  %1 = load i8, i8* %v, align 1, !dbg !6189
  %conv2 = zext i8 %1 to i32, !dbg !6189
  %and = and i32 %conv2, 2, !dbg !6190
  %tobool = icmp ne i32 %and, 0, !dbg !6188
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !6191
  %land.ext = zext i1 %2 to i32, !dbg !6188
  ret i32 %land.ext, !dbg !6192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb_p(i32 %port) #0 !dbg !6193 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.declare(metadata i8* %value, metadata !6199, metadata !DIExpression()), !dbg !6198
  %0 = load i32, i32* %port.addr, align 4, !dbg !6198
  %call = call zeroext i8 @inb(i32 %0) #11, !dbg !6198
  store i8 %call, i8* %value, align 1, !dbg !6198
  call void @slow_down_io() #11, !dbg !6198
  %1 = load i8, i8* %value, align 1, !dbg !6198
  ret i8 %1, !dbg !6198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !6200 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6205, metadata !DIExpression()), !dbg !6204
  %0 = load i8, i8* %value.addr, align 1, !dbg !6204
  %1 = load i32, i32* %port.addr, align 4, !dbg !6204
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #7, !dbg !6204, !srcloc !6206
  ret void, !dbg !6204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #0 !dbg !6207 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  call void @llvm.dbg.declare(metadata i8* %value, metadata !6210, metadata !DIExpression()), !dbg !6209
  %0 = load i32, i32* %port.addr, align 4, !dbg !6209
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !6209, !srcloc !6211
  store i8 %1, i8* %value, align 1, !dbg !6209
  %2 = load i8, i8* %value, align 1, !dbg !6209
  ret i8 %2, !dbg !6209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @slow_down_io() #0 !dbg !6212 {
entry:
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 2, i32 0), align 8, !dbg !6214
  call void %0() #11, !dbg !6215
  ret void, !dbg !6216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_add(%struct.acpi_device* %device) #0 !dbg !6217 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %status = alloca i32, align 4
  %result = alloca i32, align 4
  %item = alloca %struct.sony_nc_value*, align 8
  %arg = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6218, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6220, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6222, metadata !DIExpression()), !dbg !6223
  store i32 0, i32* %result, align 4, !dbg !6223
  call void @llvm.dbg.declare(metadata %struct.sony_nc_value** %item, metadata !6224, metadata !DIExpression()), !dbg !6225
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6226
  store %struct.acpi_device* %0, %struct.acpi_device** @sony_nc_acpi_device, align 8, !dbg !6227
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6228
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 10, !dbg !6228
  %device_class = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 6, !dbg !6228
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %device_class, i64 0, i64 0, !dbg !6228
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !6229
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6230
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 1, !dbg !6231
  %3 = load i8*, i8** %handle, align 8, !dbg !6231
  store i8* %3, i8** @sony_nc_acpi_handle, align 8, !dbg !6232
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6233
  %call1 = call i32 @acpi_bus_get_status(%struct.acpi_device* %4) #11, !dbg !6234
  store i32 %call1, i32* %result, align 4, !dbg !6235
  %5 = load i32, i32* %result, align 4, !dbg !6236
  %tobool = icmp ne i32 %5, 0, !dbg !6236
  br i1 %tobool, label %if.end7, label %land.lhs.true, !dbg !6238

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6239
  %status2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 8, !dbg !6240
  %7 = bitcast %struct.acpi_device_status* %status2 to i32*, !dbg !6241
  %bf.load = load i32, i32* %7, align 8, !dbg !6241
  %bf.clear = and i32 %bf.load, 1, !dbg !6241
  %tobool3 = icmp ne i32 %bf.clear, 0, !dbg !6239
  br i1 %tobool3, label %if.end7, label %if.then, !dbg !6242

if.then:                                          ; preds = %land.lhs.true
  br label %do.body, !dbg !6243

do.body:                                          ; preds = %if.then
  %8 = load i32, i32* @debug, align 4, !dbg !6245
  %tobool4 = icmp ne i32 %8, 0, !dbg !6245
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6248

if.then5:                                         ; preds = %do.body
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !6245
  br label %if.end, !dbg !6245

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !6248

do.end:                                           ; preds = %if.end
  store i32 -19, i32* %result, align 4, !dbg !6249
  br label %outwalk, !dbg !6250

if.end7:                                          ; preds = %land.lhs.true, %entry
  %call8 = call i32 @sony_pf_add() #11, !dbg !6251
  store i32 %call8, i32* %result, align 4, !dbg !6252
  %9 = load i32, i32* %result, align 4, !dbg !6253
  %tobool9 = icmp ne i32 %9, 0, !dbg !6253
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6255

if.then10:                                        ; preds = %if.end7
  br label %outpresent, !dbg !6256

if.end11:                                         ; preds = %if.end7
  %10 = load i32, i32* @debug, align 4, !dbg !6257
  %tobool12 = icmp ne i32 %10, 0, !dbg !6257
  br i1 %tobool12, label %if.then13, label %if.end19, !dbg !6259

if.then13:                                        ; preds = %if.end11
  %11 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6260
  %call14 = call i32 @acpi_walk_namespace(i32 8, i8* %11, i32 1, i32 (i8*, i32, i8*, i8**)* @sony_walk_callback, i32 (i8*, i32, i8*, i8**)* null, i8* null, i8** null) #11, !dbg !6262
  store i32 %call14, i32* %status, align 4, !dbg !6263
  %12 = load i32, i32* %status, align 4, !dbg !6264
  %tobool15 = icmp ne i32 %12, 0, !dbg !6264
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !6266

if.then16:                                        ; preds = %if.then13
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !6267
  store i32 -19, i32* %result, align 4, !dbg !6269
  br label %outpresent, !dbg !6270

if.end18:                                         ; preds = %if.then13
  br label %if.end19, !dbg !6271

if.end19:                                         ; preds = %if.end18, %if.end11
  %13 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6272
  %call20 = call i32 @sony_laptop_setup_input(%struct.acpi_device* %13) #11, !dbg !6273
  store i32 %call20, i32* %result, align 4, !dbg !6274
  %14 = load i32, i32* %result, align 4, !dbg !6275
  %tobool21 = icmp ne i32 %14, 0, !dbg !6275
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6277

if.then22:                                        ; preds = %if.end19
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !6278
  br label %outplatform, !dbg !6280

if.end24:                                         ; preds = %if.end19
  %15 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6281
  %call25 = call zeroext i1 @acpi_has_method(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !6283
  br i1 %call25, label %if.then26, label %if.end37, !dbg !6284

if.then26:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !6285, metadata !DIExpression()), !dbg !6287
  store i32 1, i32* %arg, align 4, !dbg !6287
  %16 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6288
  %call27 = call i32 @sony_nc_int_call(i8* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i32* %arg, i32* null) #11, !dbg !6290
  %tobool28 = icmp ne i32 %call27, 0, !dbg !6290
  br i1 %tobool28, label %if.then29, label %if.end36, !dbg !6291

if.then29:                                        ; preds = %if.then26
  br label %do.body30, !dbg !6292

do.body30:                                        ; preds = %if.then29
  %17 = load i32, i32* @debug, align 4, !dbg !6293
  %tobool31 = icmp ne i32 %17, 0, !dbg !6293
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !6296

if.then32:                                        ; preds = %do.body30
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !6293
  br label %if.end34, !dbg !6293

if.end34:                                         ; preds = %if.then32, %do.body30
  br label %do.end35, !dbg !6296

do.end35:                                         ; preds = %if.end34
  br label %if.end36, !dbg !6296

if.end36:                                         ; preds = %do.end35, %if.then26
  br label %if.end37, !dbg !6297

if.end37:                                         ; preds = %if.end36, %if.end24
  %18 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6298
  %call38 = call zeroext i1 @acpi_has_method(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !6300
  br i1 %call38, label %if.then39, label %if.end50, !dbg !6301

if.then39:                                        ; preds = %if.end37
  br label %do.body40, !dbg !6302

do.body40:                                        ; preds = %if.then39
  %19 = load i32, i32* @debug, align 4, !dbg !6304
  %tobool41 = icmp ne i32 %19, 0, !dbg !6304
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !6307

if.then42:                                        ; preds = %do.body40
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !6304
  br label %if.end44, !dbg !6304

if.end44:                                         ; preds = %if.then42, %do.body40
  br label %do.end45, !dbg !6307

do.end45:                                         ; preds = %if.end44
  %20 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6308
  %call46 = call i32 @sony_nc_handles_setup(%struct.platform_device* %20) #11, !dbg !6309
  store i32 %call46, i32* %result, align 4, !dbg !6310
  %21 = load i32, i32* %result, align 4, !dbg !6311
  %tobool47 = icmp ne i32 %21, 0, !dbg !6311
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !6313

if.then48:                                        ; preds = %do.end45
  %22 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6314
  %23 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6315
  call void @sony_nc_function_setup(%struct.acpi_device* %22, %struct.platform_device* %23) #11, !dbg !6316
  br label %if.end49, !dbg !6316

if.end49:                                         ; preds = %if.then48, %do.end45
  br label %if.end50, !dbg !6317

if.end50:                                         ; preds = %if.end49, %if.end37
  %call51 = call i32 @acpi_video_get_backlight_type() #11, !dbg !6318
  %cmp = icmp eq i32 %call51, 2, !dbg !6320
  br i1 %cmp, label %if.then52, label %if.end53, !dbg !6321

if.then52:                                        ; preds = %if.end50
  call void @sony_nc_backlight_setup() #11, !dbg !6322
  br label %if.end53, !dbg !6322

if.end53:                                         ; preds = %if.then52, %if.end50
  store %struct.sony_nc_value* getelementptr inbounds ([13 x %struct.sony_nc_value], [13 x %struct.sony_nc_value]* @sony_nc_values, i64 0, i64 0), %struct.sony_nc_value** %item, align 8, !dbg !6323
  br label %for.cond, !dbg !6325

for.cond:                                         ; preds = %for.inc121, %if.end53
  %24 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6326
  %name = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %24, i32 0, i32 0, !dbg !6328
  %25 = load i8*, i8** %name, align 8, !dbg !6328
  %tobool54 = icmp ne i8* %25, null, !dbg !6329
  br i1 %tobool54, label %for.body, label %for.end123, !dbg !6329

for.body:                                         ; preds = %for.cond
  %26 = load i32, i32* @debug, align 4, !dbg !6330
  %tobool55 = icmp ne i32 %26, 0, !dbg !6330
  br i1 %tobool55, label %if.end59, label %land.lhs.true56, !dbg !6333

land.lhs.true56:                                  ; preds = %for.body
  %27 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6334
  %debug = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %27, i32 0, i32 6, !dbg !6335
  %28 = load i32, i32* %debug, align 8, !dbg !6335
  %tobool57 = icmp ne i32 %28, 0, !dbg !6334
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !6336

if.then58:                                        ; preds = %land.lhs.true56
  br label %for.inc121, !dbg !6337

if.end59:                                         ; preds = %land.lhs.true56, %for.body
  br label %for.cond60, !dbg !6338

for.cond60:                                       ; preds = %for.inc, %if.end59
  %29 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6339
  %acpiget = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %29, i32 0, i32 1, !dbg !6342
  %30 = load i8**, i8*** %acpiget, align 8, !dbg !6342
  %tobool61 = icmp ne i8** %30, null, !dbg !6339
  br i1 %tobool61, label %land.rhs, label %land.end, !dbg !6343

land.rhs:                                         ; preds = %for.cond60
  %31 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6344
  %acpiget62 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %31, i32 0, i32 1, !dbg !6345
  %32 = load i8**, i8*** %acpiget62, align 8, !dbg !6345
  %33 = load i8*, i8** %32, align 8, !dbg !6346
  %tobool63 = icmp ne i8* %33, null, !dbg !6343
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond60
  %34 = phi i1 [ false, %for.cond60 ], [ %tobool63, %land.rhs ], !dbg !6347
  br i1 %34, label %for.body64, label %for.end, !dbg !6348

for.body64:                                       ; preds = %land.end
  %35 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6349
  %36 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6352
  %acpiget65 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %36, i32 0, i32 1, !dbg !6353
  %37 = load i8**, i8*** %acpiget65, align 8, !dbg !6353
  %38 = load i8*, i8** %37, align 8, !dbg !6354
  %call66 = call zeroext i1 @acpi_has_method(i8* %35, i8* %38) #11, !dbg !6355
  br i1 %call66, label %if.then67, label %if.end77, !dbg !6356

if.then67:                                        ; preds = %for.body64
  br label %do.body68, !dbg !6357

do.body68:                                        ; preds = %if.then67
  %39 = load i32, i32* @debug, align 4, !dbg !6359
  %tobool69 = icmp ne i32 %39, 0, !dbg !6359
  br i1 %tobool69, label %if.then70, label %if.end74, !dbg !6362

if.then70:                                        ; preds = %do.body68
  %40 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6359
  %name71 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %40, i32 0, i32 0, !dbg !6359
  %41 = load i8*, i8** %name71, align 8, !dbg !6359
  %42 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6359
  %acpiget72 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %42, i32 0, i32 1, !dbg !6359
  %43 = load i8**, i8*** %acpiget72, align 8, !dbg !6359
  %44 = load i8*, i8** %43, align 8, !dbg !6359
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0), i8* %41, i8* %44) #12, !dbg !6359
  br label %if.end74, !dbg !6359

if.end74:                                         ; preds = %if.then70, %do.body68
  br label %do.end75, !dbg !6362

do.end75:                                         ; preds = %if.end74
  %45 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6363
  %devattr = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %45, i32 0, i32 7, !dbg !6364
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %devattr, i32 0, i32 0, !dbg !6365
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 1, !dbg !6366
  %46 = load i16, i16* %mode, align 8, !dbg !6367
  %conv = zext i16 %46 to i32, !dbg !6367
  %or = or i32 %conv, 292, !dbg !6367
  %conv76 = trunc i32 %or to i16, !dbg !6367
  store i16 %conv76, i16* %mode, align 8, !dbg !6367
  br label %for.end, !dbg !6368

if.end77:                                         ; preds = %for.body64
  br label %for.inc, !dbg !6369

for.inc:                                          ; preds = %if.end77
  %47 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6370
  %acpiget78 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %47, i32 0, i32 1, !dbg !6371
  %48 = load i8**, i8*** %acpiget78, align 8, !dbg !6372
  %incdec.ptr = getelementptr i8*, i8** %48, i32 1, !dbg !6372
  store i8** %incdec.ptr, i8*** %acpiget78, align 8, !dbg !6372
  br label %for.cond60, !dbg !6373, !llvm.loop !6374

for.end:                                          ; preds = %do.end75, %land.end
  br label %for.cond79, !dbg !6376

for.cond79:                                       ; preds = %for.inc104, %for.end
  %49 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6377
  %acpiset = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %49, i32 0, i32 2, !dbg !6380
  %50 = load i8**, i8*** %acpiset, align 8, !dbg !6380
  %tobool80 = icmp ne i8** %50, null, !dbg !6377
  br i1 %tobool80, label %land.rhs81, label %land.end84, !dbg !6381

land.rhs81:                                       ; preds = %for.cond79
  %51 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6382
  %acpiset82 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %51, i32 0, i32 2, !dbg !6383
  %52 = load i8**, i8*** %acpiset82, align 8, !dbg !6383
  %53 = load i8*, i8** %52, align 8, !dbg !6384
  %tobool83 = icmp ne i8* %53, null, !dbg !6381
  br label %land.end84

land.end84:                                       ; preds = %land.rhs81, %for.cond79
  %54 = phi i1 [ false, %for.cond79 ], [ %tobool83, %land.rhs81 ], !dbg !6385
  br i1 %54, label %for.body85, label %for.end107, !dbg !6386

for.body85:                                       ; preds = %land.end84
  %55 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6387
  %56 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6390
  %acpiset86 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %56, i32 0, i32 2, !dbg !6391
  %57 = load i8**, i8*** %acpiset86, align 8, !dbg !6391
  %58 = load i8*, i8** %57, align 8, !dbg !6392
  %call87 = call zeroext i1 @acpi_has_method(i8* %55, i8* %58) #11, !dbg !6393
  br i1 %call87, label %if.then88, label %if.end103, !dbg !6394

if.then88:                                        ; preds = %for.body85
  br label %do.body89, !dbg !6395

do.body89:                                        ; preds = %if.then88
  %59 = load i32, i32* @debug, align 4, !dbg !6397
  %tobool90 = icmp ne i32 %59, 0, !dbg !6397
  br i1 %tobool90, label %if.then91, label %if.end95, !dbg !6400

if.then91:                                        ; preds = %do.body89
  %60 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6397
  %name92 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %60, i32 0, i32 0, !dbg !6397
  %61 = load i8*, i8** %name92, align 8, !dbg !6397
  %62 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6397
  %acpiset93 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %62, i32 0, i32 2, !dbg !6397
  %63 = load i8**, i8*** %acpiset93, align 8, !dbg !6397
  %64 = load i8*, i8** %63, align 8, !dbg !6397
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17, i64 0, i64 0), i8* %61, i8* %64) #12, !dbg !6397
  br label %if.end95, !dbg !6397

if.end95:                                         ; preds = %if.then91, %do.body89
  br label %do.end96, !dbg !6400

do.end96:                                         ; preds = %if.end95
  %65 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6401
  %devattr97 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %65, i32 0, i32 7, !dbg !6402
  %attr98 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %devattr97, i32 0, i32 0, !dbg !6403
  %mode99 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr98, i32 0, i32 1, !dbg !6404
  %66 = load i16, i16* %mode99, align 8, !dbg !6405
  %conv100 = zext i16 %66 to i32, !dbg !6405
  %or101 = or i32 %conv100, 128, !dbg !6405
  %conv102 = trunc i32 %or101 to i16, !dbg !6405
  store i16 %conv102, i16* %mode99, align 8, !dbg !6405
  br label %for.end107, !dbg !6406

if.end103:                                        ; preds = %for.body85
  br label %for.inc104, !dbg !6407

for.inc104:                                       ; preds = %if.end103
  %67 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6408
  %acpiset105 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %67, i32 0, i32 2, !dbg !6409
  %68 = load i8**, i8*** %acpiset105, align 8, !dbg !6410
  %incdec.ptr106 = getelementptr i8*, i8** %68, i32 1, !dbg !6410
  store i8** %incdec.ptr106, i8*** %acpiset105, align 8, !dbg !6410
  br label %for.cond79, !dbg !6411, !llvm.loop !6412

for.end107:                                       ; preds = %do.end96, %land.end84
  %69 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6414
  %devattr108 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %69, i32 0, i32 7, !dbg !6416
  %attr109 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %devattr108, i32 0, i32 0, !dbg !6417
  %mode110 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr109, i32 0, i32 1, !dbg !6418
  %70 = load i16, i16* %mode110, align 8, !dbg !6418
  %conv111 = zext i16 %70 to i32, !dbg !6414
  %cmp112 = icmp ne i32 %conv111, 0, !dbg !6419
  br i1 %cmp112, label %if.then114, label %if.end120, !dbg !6420

if.then114:                                       ; preds = %for.end107
  %71 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6421
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %71, i32 0, i32 3, !dbg !6423
  %72 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6424
  %devattr115 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %72, i32 0, i32 7, !dbg !6425
  %call116 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %devattr115) #11, !dbg !6426
  store i32 %call116, i32* %result, align 4, !dbg !6427
  %73 = load i32, i32* %result, align 4, !dbg !6428
  %tobool117 = icmp ne i32 %73, 0, !dbg !6428
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !6430

if.then118:                                       ; preds = %if.then114
  br label %out_sysfs, !dbg !6431

if.end119:                                        ; preds = %if.then114
  br label %if.end120, !dbg !6432

if.end120:                                        ; preds = %if.end119, %for.end107
  br label %for.inc121, !dbg !6433

for.inc121:                                       ; preds = %if.end120, %if.then58
  %74 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6434
  %incdec.ptr122 = getelementptr %struct.sony_nc_value, %struct.sony_nc_value* %74, i32 1, !dbg !6434
  store %struct.sony_nc_value* %incdec.ptr122, %struct.sony_nc_value** %item, align 8, !dbg !6434
  br label %for.cond, !dbg !6435, !llvm.loop !6436

for.end123:                                       ; preds = %for.cond
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !6438
  store i32 0, i32* %retval, align 4, !dbg !6439
  br label %return, !dbg !6439

out_sysfs:                                        ; preds = %if.then118
  call void @llvm.dbg.label(metadata !6440), !dbg !6441
  store %struct.sony_nc_value* getelementptr inbounds ([13 x %struct.sony_nc_value], [13 x %struct.sony_nc_value]* @sony_nc_values, i64 0, i64 0), %struct.sony_nc_value** %item, align 8, !dbg !6442
  br label %for.cond125, !dbg !6444

for.cond125:                                      ; preds = %for.inc131, %out_sysfs
  %75 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6445
  %name126 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %75, i32 0, i32 0, !dbg !6447
  %76 = load i8*, i8** %name126, align 8, !dbg !6447
  %tobool127 = icmp ne i8* %76, null, !dbg !6448
  br i1 %tobool127, label %for.body128, label %for.end133, !dbg !6448

for.body128:                                      ; preds = %for.cond125
  %77 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6449
  %dev129 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %77, i32 0, i32 3, !dbg !6451
  %78 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6452
  %devattr130 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %78, i32 0, i32 7, !dbg !6453
  call void @device_remove_file(%struct.device* %dev129, %struct.device_attribute* %devattr130) #11, !dbg !6454
  br label %for.inc131, !dbg !6455

for.inc131:                                       ; preds = %for.body128
  %79 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6456
  %incdec.ptr132 = getelementptr %struct.sony_nc_value, %struct.sony_nc_value* %79, i32 1, !dbg !6456
  store %struct.sony_nc_value* %incdec.ptr132, %struct.sony_nc_value** %item, align 8, !dbg !6456
  br label %for.cond125, !dbg !6457, !llvm.loop !6458

for.end133:                                       ; preds = %for.cond125
  call void @sony_nc_backlight_cleanup() #11, !dbg !6460
  %80 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6461
  call void @sony_nc_function_cleanup(%struct.platform_device* %80) #11, !dbg !6462
  %81 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6463
  %call134 = call i32 @sony_nc_handles_cleanup(%struct.platform_device* %81) #11, !dbg !6464
  br label %outplatform, !dbg !6464

outplatform:                                      ; preds = %for.end133, %if.then22
  call void @llvm.dbg.label(metadata !6465), !dbg !6466
  call void @sony_laptop_remove_input() #11, !dbg !6467
  br label %outpresent, !dbg !6467

outpresent:                                       ; preds = %outplatform, %if.then16, %if.then10
  call void @llvm.dbg.label(metadata !6468), !dbg !6469
  call void @sony_pf_remove() #11, !dbg !6470
  br label %outwalk, !dbg !6470

outwalk:                                          ; preds = %outpresent, %do.end
  call void @llvm.dbg.label(metadata !6471), !dbg !6472
  call void @sony_nc_rfkill_cleanup() #11, !dbg !6473
  %82 = load i32, i32* %result, align 4, !dbg !6474
  store i32 %82, i32* %retval, align 4, !dbg !6475
  br label %return, !dbg !6475

return:                                           ; preds = %outwalk, %for.end123
  %83 = load i32, i32* %retval, align 4, !dbg !6476
  ret i32 %83, !dbg !6476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_remove(%struct.acpi_device* %device) #0 !dbg !6477 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %item = alloca %struct.sony_nc_value*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.declare(metadata %struct.sony_nc_value** %item, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @sony_nc_backlight_cleanup() #11, !dbg !6482
  store %struct.acpi_device* null, %struct.acpi_device** @sony_nc_acpi_device, align 8, !dbg !6483
  store %struct.sony_nc_value* getelementptr inbounds ([13 x %struct.sony_nc_value], [13 x %struct.sony_nc_value]* @sony_nc_values, i64 0, i64 0), %struct.sony_nc_value** %item, align 8, !dbg !6484
  br label %for.cond, !dbg !6486

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6487
  %name = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %0, i32 0, i32 0, !dbg !6489
  %1 = load i8*, i8** %name, align 8, !dbg !6489
  %tobool = icmp ne i8* %1, null, !dbg !6490
  br i1 %tobool, label %for.body, label %for.end, !dbg !6490

for.body:                                         ; preds = %for.cond
  %2 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6491
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %2, i32 0, i32 3, !dbg !6493
  %3 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6494
  %devattr = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %3, i32 0, i32 7, !dbg !6495
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %devattr) #11, !dbg !6496
  br label %for.inc, !dbg !6497

for.inc:                                          ; preds = %for.body
  %4 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !6498
  %incdec.ptr = getelementptr %struct.sony_nc_value, %struct.sony_nc_value* %4, i32 1, !dbg !6498
  store %struct.sony_nc_value* %incdec.ptr, %struct.sony_nc_value** %item, align 8, !dbg !6498
  br label %for.cond, !dbg !6499, !llvm.loop !6500

for.end:                                          ; preds = %for.cond
  %5 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6502
  call void @sony_nc_function_cleanup(%struct.platform_device* %5) #11, !dbg !6503
  %6 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6504
  %call = call i32 @sony_nc_handles_cleanup(%struct.platform_device* %6) #11, !dbg !6505
  call void @sony_pf_remove() #11, !dbg !6506
  call void @sony_laptop_remove_input() #11, !dbg !6507
  br label %do.body, !dbg !6508

do.body:                                          ; preds = %for.end
  %7 = load i32, i32* @debug, align 4, !dbg !6509
  %tobool1 = icmp ne i32 %7, 0, !dbg !6509
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6512

if.then:                                          ; preds = %do.body
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.136, i64 0, i64 0)) #12, !dbg !6509
  br label %if.end, !dbg !6509

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6512

do.end:                                           ; preds = %if.end
  ret i32 0, !dbg !6513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_notify(%struct.acpi_device* %device, i32 %event) #0 !dbg !6514 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %event.addr = alloca i32, align 4
  %real_ev = alloca i32, align 4
  %ev_type = alloca i8, align 1
  %ret = alloca i32, align 4
  %result = alloca i32, align 4
  %arg = alloca i32, align 4
  %handle = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i32* %real_ev, metadata !6519, metadata !DIExpression()), !dbg !6520
  %0 = load i32, i32* %event.addr, align 4, !dbg !6521
  store i32 %0, i32* %real_ev, align 4, !dbg !6520
  call void @llvm.dbg.declare(metadata i8* %ev_type, metadata !6522, metadata !DIExpression()), !dbg !6523
  store i8 0, i8* %ev_type, align 1, !dbg !6523
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6524, metadata !DIExpression()), !dbg !6525
  br label %do.body, !dbg !6526

do.body:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !6527
  %tobool = icmp ne i32 %1, 0, !dbg !6527
  br i1 %tobool, label %if.then, label %if.end, !dbg !6530

if.then:                                          ; preds = %do.body
  %2 = load i32, i32* %event.addr, align 4, !dbg !6527
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.137, i64 0, i64 0), i32 %2) #12, !dbg !6527
  br label %if.end, !dbg !6527

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6530

do.end:                                           ; preds = %if.end
  %3 = load i32, i32* %event.addr, align 4, !dbg !6531
  %cmp = icmp uge i32 %3, 144, !dbg !6533
  br i1 %cmp, label %if.then1, label %if.else, !dbg !6534

if.then1:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6535, metadata !DIExpression()), !dbg !6537
  store i32 0, i32* %result, align 4, !dbg !6537
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !6538, metadata !DIExpression()), !dbg !6539
  store i32 0, i32* %arg, align 4, !dbg !6539
  call void @llvm.dbg.declare(metadata i32* %handle, metadata !6540, metadata !DIExpression()), !dbg !6541
  store i32 0, i32* %handle, align 4, !dbg !6541
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6542, metadata !DIExpression()), !dbg !6543
  %4 = load i32, i32* %event.addr, align 4, !dbg !6544
  %sub = sub i32 %4, 144, !dbg !6545
  store i32 %sub, i32* %offset, align 4, !dbg !6543
  %5 = load i32, i32* %offset, align 4, !dbg !6546
  %conv = zext i32 %5 to i64, !dbg !6546
  %cmp2 = icmp uge i64 %conv, 16, !dbg !6548
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !6549

if.then4:                                         ; preds = %if.then1
  %6 = load i32, i32* %event.addr, align 4, !dbg !6550
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.138, i64 0, i64 0), i32 %6) #12, !dbg !6550
  br label %return, !dbg !6552

if.end6:                                          ; preds = %if.then1
  %7 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !6553
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %7, i32 0, i32 0, !dbg !6554
  %8 = load i32, i32* %offset, align 4, !dbg !6555
  %idxprom = zext i32 %8 to i64, !dbg !6553
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !6553
  %9 = load i16, i16* %arrayidx, align 2, !dbg !6553
  %conv7 = zext i16 %9 to i32, !dbg !6553
  store i32 %conv7, i32* %handle, align 4, !dbg !6556
  %10 = load i32, i32* %handle, align 4, !dbg !6557
  switch i32 %10, label %sw.default [
    i32 256, label %sw.bb
    i32 295, label %sw.bb
    i32 292, label %sw.bb14
    i32 309, label %sw.bb14
    i32 296, label %sw.bb20
    i32 326, label %sw.bb20
    i32 347, label %sw.bb40
  ], !dbg !6558

sw.bb:                                            ; preds = %if.end6, %if.end6
  store i8 1, i8* %ev_type, align 1, !dbg !6559
  %11 = load i32, i32* %event.addr, align 4, !dbg !6561
  %12 = load i32, i32* %handle, align 4, !dbg !6562
  %call8 = call i32 @sony_nc_hotkeys_decode(i32 %11, i32 %12) #11, !dbg !6563
  store i32 %call8, i32* %ret, align 4, !dbg !6564
  %13 = load i32, i32* %ret, align 4, !dbg !6565
  %cmp9 = icmp sgt i32 %13, 0, !dbg !6567
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !6568

if.then11:                                        ; preds = %sw.bb
  %14 = load i32, i32* %ret, align 4, !dbg !6569
  %conv12 = trunc i32 %14 to i8, !dbg !6569
  call void @sony_laptop_report_input_event(i8 zeroext %conv12) #11, !dbg !6571
  %15 = load i32, i32* %ret, align 4, !dbg !6572
  store i32 %15, i32* %real_ev, align 4, !dbg !6573
  br label %if.end13, !dbg !6574

if.end13:                                         ; preds = %if.then11, %sw.bb
  br label %sw.epilog, !dbg !6575

sw.bb14:                                          ; preds = %if.end6, %if.end6
  store i8 2, i8* %ev_type, align 1, !dbg !6576
  %16 = load i32, i32* %handle, align 4, !dbg !6577
  %call15 = call i32 @sony_call_snc_handle(i32 %16, i32 256, i32* %result) #11, !dbg !6578
  %17 = load i32, i32* %result, align 4, !dbg !6579
  %and = and i32 %17, 3, !dbg !6580
  store i32 %and, i32* %real_ev, align 4, !dbg !6581
  %18 = load i32, i32* %real_ev, align 4, !dbg !6582
  %cmp16 = icmp eq i32 %18, 1, !dbg !6584
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !6585

if.then18:                                        ; preds = %sw.bb14
  call void @sony_nc_rfkill_update() #11, !dbg !6586
  br label %if.end19, !dbg !6586

if.end19:                                         ; preds = %if.then18, %sw.bb14
  br label %sw.epilog, !dbg !6587

sw.bb20:                                          ; preds = %if.end6, %if.end6
  %19 = load i32, i32* %handle, align 4, !dbg !6588
  %call21 = call i32 @sony_call_snc_handle(i32 %19, i32 0, i32* %result) #11, !dbg !6589
  br label %do.body22, !dbg !6590

do.body22:                                        ; preds = %sw.bb20
  %20 = load i32, i32* @debug, align 4, !dbg !6591
  %tobool23 = icmp ne i32 %20, 0, !dbg !6591
  br i1 %tobool23, label %if.then24, label %if.end37, !dbg !6594

if.then24:                                        ; preds = %do.body22
  %21 = load i32, i32* %result, align 4, !dbg !6591
  %cmp25 = icmp eq i32 %21, 1, !dbg !6591
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !6591

cond.true:                                        ; preds = %if.then24
  br label %cond.end34, !dbg !6591

cond.false:                                       ; preds = %if.then24
  %22 = load i32, i32* %result, align 4, !dbg !6591
  %cmp27 = icmp eq i32 %22, 2, !dbg !6591
  br i1 %cmp27, label %cond.true29, label %cond.false30, !dbg !6591

cond.true29:                                      ; preds = %cond.false
  br label %cond.end, !dbg !6591

cond.false30:                                     ; preds = %cond.false
  %23 = load i32, i32* %result, align 4, !dbg !6591
  %cmp31 = icmp eq i32 %23, 3, !dbg !6591
  %24 = zext i1 %cmp31 to i64, !dbg !6591
  %cond = select i1 %cmp31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.142, i64 0, i64 0), !dbg !6591
  br label %cond.end, !dbg !6591

cond.end:                                         ; preds = %cond.false30, %cond.true29
  %cond33 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.141, i64 0, i64 0), %cond.true29 ], [ %cond, %cond.false30 ], !dbg !6591
  br label %cond.end34, !dbg !6591

cond.end34:                                       ; preds = %cond.end, %cond.true
  %cond35 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i64 0, i64 0), %cond.true ], [ %cond33, %cond.end ], !dbg !6591
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.139, i64 0, i64 0), i8* %cond35) #12, !dbg !6591
  br label %if.end37, !dbg !6591

if.end37:                                         ; preds = %cond.end34, %do.body22
  br label %do.end38, !dbg !6594

do.end38:                                         ; preds = %if.end37
  store i8 3, i8* %ev_type, align 1, !dbg !6595
  %call39 = call i32 @__sony_nc_gfx_switch_status_get() #11, !dbg !6596
  store i32 %call39, i32* %real_ev, align 4, !dbg !6597
  br label %sw.epilog, !dbg !6598

sw.bb40:                                          ; preds = %if.end6
  store i8 3, i8* %ev_type, align 1, !dbg !6599
  %call41 = call i32 @__sony_nc_gfx_switch_status_get() #11, !dbg !6600
  store i32 %call41, i32* %real_ev, align 4, !dbg !6601
  br label %sw.epilog, !dbg !6602

sw.default:                                       ; preds = %if.end6
  br label %do.body42, !dbg !6603

do.body42:                                        ; preds = %sw.default
  %25 = load i32, i32* @debug, align 4, !dbg !6604
  %tobool43 = icmp ne i32 %25, 0, !dbg !6604
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !6607

if.then44:                                        ; preds = %do.body42
  %26 = load i32, i32* %event.addr, align 4, !dbg !6604
  %27 = load i32, i32* %handle, align 4, !dbg !6604
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.143, i64 0, i64 0), i32 %26, i32 %27) #12, !dbg !6604
  br label %if.end46, !dbg !6604

if.end46:                                         ; preds = %if.then44, %do.body42
  br label %do.end47, !dbg !6607

do.end47:                                         ; preds = %if.end46
  br label %sw.epilog, !dbg !6608

sw.epilog:                                        ; preds = %do.end47, %sw.bb40, %do.end38, %if.end19, %if.end13
  %28 = load i32, i32* %offset, align 4, !dbg !6609
  %shl = shl i32 1, %28, !dbg !6610
  store i32 %shl, i32* %arg, align 4, !dbg !6611
  %29 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !6612
  %call48 = call i32 @sony_nc_int_call(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i64 0, i64 0), i32* %arg, i32* %result) #11, !dbg !6613
  br label %if.end50, !dbg !6614

if.else:                                          ; preds = %do.end
  store i8 1, i8* %ev_type, align 1, !dbg !6615
  %30 = load i32, i32* %real_ev, align 4, !dbg !6617
  %conv49 = trunc i32 %30 to i8, !dbg !6617
  call void @sony_laptop_report_input_event(i8 zeroext %conv49) #11, !dbg !6618
  br label %if.end50

if.end50:                                         ; preds = %if.else, %sw.epilog
  %31 = load %struct.acpi_device*, %struct.acpi_device** @sony_nc_acpi_device, align 8, !dbg !6619
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %31, i32 0, i32 10, !dbg !6620
  %device_class = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 6, !dbg !6621
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %device_class, i64 0, i64 0, !dbg !6619
  %32 = load %struct.acpi_device*, %struct.acpi_device** @sony_nc_acpi_device, align 8, !dbg !6622
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %32, i32 0, i32 21, !dbg !6623
  %call51 = call i8* @dev_name(%struct.device* %dev) #11, !dbg !6624
  %33 = load i8, i8* %ev_type, align 1, !dbg !6625
  %34 = load i32, i32* %real_ev, align 4, !dbg !6626
  %call52 = call i32 @acpi_bus_generate_netlink_event(i8* %arraydecay, i8* %call51, i8 zeroext %33, i32 %34) #11, !dbg !6627
  br label %return, !dbg !6628

return:                                           ; preds = %if.end50, %if.then4
  ret void, !dbg !6628
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_get_status(%struct.acpi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pf_add() #0 !dbg !6629 {
entry:
  %v.addr.i1.i12 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i12, metadata !6630, metadata !DIExpression()), !dbg !6636
  %v.addr.i.i13 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i13, metadata !6641, metadata !DIExpression()), !dbg !6649
  %size.addr.i.i14 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i14, metadata !6651, metadata !DIExpression()), !dbg !6652
  %v.addr.i15 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i15, metadata !6653, metadata !DIExpression()), !dbg !6654
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6655, metadata !DIExpression()), !dbg !6659
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6664, metadata !DIExpression()), !dbg !6665
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !6666, metadata !DIExpression()), !dbg !6668
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6641, metadata !DIExpression()), !dbg !6669
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6651, metadata !DIExpression()), !dbg !6671
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6672, metadata !DIExpression()), !dbg !6673
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6674, metadata !DIExpression()), !dbg !6675
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6676, metadata !DIExpression()), !dbg !6677
  store i32 0, i32* %ret, align 4, !dbg !6677
  store i32 1, i32* %i.addr.i, align 4
  store %struct.atomic_t* @sony_pf_users, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6678
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6678
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6679
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6680
  %conv.i.i = trunc i64 %3 to i32, !dbg !6680
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %2, i32 %conv.i.i) #13, !dbg !6681
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6682
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6682
  call void @kcsan_check_access(i8* %4, i64 %5, i32 7) #13, !dbg !6682
  %6 = load i32, i32* %i.addr.i, align 4, !dbg !6683
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6684
  store i32 %6, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load i32, i32* %i.addr.i.i, align 4, !dbg !6685
  %9 = load i32, i32* %i.addr.i.i, align 4, !dbg !6668
  store i32 %9, i32* %__ret.i.i, align 4, !dbg !6668
  %10 = load i32, i32* %__ret.i.i, align 4, !dbg !6668
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6668
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !6668
  %12 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %10, i32* %counter.i.i) #7, !dbg !6668, !srcloc !6686
  store i32 %12, i32* %__ret.i.i, align 4, !dbg !6668
  %13 = load i32, i32* %__ret.i.i, align 4, !dbg !6668
  store i32 %13, i32* %tmp.i.i, align 4, !dbg !6668
  %14 = load i32, i32* %tmp.i.i, align 4, !dbg !6668
  %add.i.i = add i32 %8, %14, !dbg !6687
  %cmp = icmp sgt i32 %add.i.i, 1, !dbg !6688
  br i1 %cmp, label %if.then, label %if.end, !dbg !6689

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6690
  br label %return, !dbg !6690

if.end:                                           ; preds = %entry
  %call1 = call i32 @__platform_driver_register(%struct.platform_driver* @sony_pf_driver, %struct.module* null) #11, !dbg !6691
  store i32 %call1, i32* %ret, align 4, !dbg !6692
  %15 = load i32, i32* %ret, align 4, !dbg !6693
  %tobool = icmp ne i32 %15, 0, !dbg !6693
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !6695

if.then2:                                         ; preds = %if.end
  br label %out, !dbg !6696

if.end3:                                          ; preds = %if.end
  %call4 = call %struct.platform_device* @platform_device_alloc(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i32 -1) #11, !dbg !6697
  store %struct.platform_device* %call4, %struct.platform_device** @sony_pf_device, align 8, !dbg !6698
  %16 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6699
  %tobool5 = icmp ne %struct.platform_device* %16, null, !dbg !6699
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6701

if.then6:                                         ; preds = %if.end3
  store i32 -12, i32* %ret, align 4, !dbg !6702
  br label %out_platform_registered, !dbg !6704

if.end7:                                          ; preds = %if.end3
  %17 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6705
  %call8 = call i32 @platform_device_add(%struct.platform_device* %17) #11, !dbg !6706
  store i32 %call8, i32* %ret, align 4, !dbg !6707
  %18 = load i32, i32* %ret, align 4, !dbg !6708
  %tobool9 = icmp ne i32 %18, 0, !dbg !6708
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6710

if.then10:                                        ; preds = %if.end7
  br label %out_platform_alloced, !dbg !6711

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !6712
  br label %return, !dbg !6712

out_platform_alloced:                             ; preds = %if.then10
  call void @llvm.dbg.label(metadata !6713), !dbg !6714
  %19 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !6715
  call void @platform_device_put(%struct.platform_device* %19) #11, !dbg !6716
  store %struct.platform_device* null, %struct.platform_device** @sony_pf_device, align 8, !dbg !6717
  br label %out_platform_registered, !dbg !6718

out_platform_registered:                          ; preds = %out_platform_alloced, %if.then6
  call void @llvm.dbg.label(metadata !6719), !dbg !6720
  call void @platform_driver_unregister(%struct.platform_driver* @sony_pf_driver) #11, !dbg !6721
  br label %out, !dbg !6721

out:                                              ; preds = %out_platform_registered, %if.then2
  call void @llvm.dbg.label(metadata !6722), !dbg !6723
  store %struct.atomic_t* @sony_pf_users, %struct.atomic_t** %v.addr.i15, align 8
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i15, align 8, !dbg !6724
  %21 = bitcast %struct.atomic_t* %20 to i8*, !dbg !6724
  store i8* %21, i8** %v.addr.i.i13, align 8
  store i64 4, i64* %size.addr.i.i14, align 8
  %22 = load i8*, i8** %v.addr.i.i13, align 8, !dbg !6725
  %23 = load i64, i64* %size.addr.i.i14, align 8, !dbg !6726
  %conv.i.i16 = trunc i64 %23 to i32, !dbg !6726
  %call.i.i17 = call zeroext i1 @kasan_check_write(i8* %22, i32 %conv.i.i16) #13, !dbg !6727
  %24 = load i8*, i8** %v.addr.i.i13, align 8, !dbg !6728
  %25 = load i64, i64* %size.addr.i.i14, align 8, !dbg !6728
  call void @kcsan_check_access(i8* %24, i64 %25, i32 7) #13, !dbg !6728
  %26 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i15, align 8, !dbg !6729
  store %struct.atomic_t* %26, %struct.atomic_t** %v.addr.i1.i12, align 8
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i12, align 8, !dbg !6730
  %counter.i.i18 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %27, i32 0, i32 0, !dbg !6731
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i18, i32* %counter.i.i18) #7, !dbg !6732, !srcloc !6733
  %28 = load i32, i32* %ret, align 4, !dbg !6734
  store i32 %28, i32* %retval, align 4, !dbg !6735
  br label %return, !dbg !6735

return:                                           ; preds = %out, %if.end11, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !6736
  ret i32 %29, !dbg !6736
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_namespace(i32, i8*, i32, i32 (i8*, i32, i8*, i8**)*, i32 (i8*, i32, i8*, i8**)*, i8*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_walk_callback(i8* %handle, i32 %level, i8* %context, i8** %return_value) #0 !dbg !6737 {
entry:
  %handle.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %return_value.addr = alloca i8**, align 8
  %info = alloca %struct.acpi_device_info*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6740, metadata !DIExpression()), !dbg !6741
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !6742, metadata !DIExpression()), !dbg !6743
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  store i8** %return_value, i8*** %return_value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %return_value.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.declare(metadata %struct.acpi_device_info** %info, metadata !6748, metadata !DIExpression()), !dbg !6777
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !6778
  %call = call i32 @acpi_get_object_info(i8* %0, %struct.acpi_device_info** %info) #11, !dbg !6778
  %tobool = icmp ne i32 %call, 0, !dbg !6778
  br i1 %tobool, label %if.end, label %if.then, !dbg !6780

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6781
  %name = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %1, i32 0, i32 1, !dbg !6781
  %2 = bitcast i32* %name to i8*, !dbg !6781
  %3 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6781
  %param_count = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %3, i32 0, i32 3, !dbg !6781
  %4 = load i8, i8* %param_count, align 4, !dbg !6781
  %conv = zext i8 %4 to i32, !dbg !6781
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.20, i64 0, i64 0), i8* %2, i32 %conv) #12, !dbg !6781
  %5 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6783
  %6 = bitcast %struct.acpi_device_info* %5 to i8*, !dbg !6783
  call void @kfree(i8* %6) #11, !dbg !6784
  br label %if.end, !dbg !6785

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !6786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_laptop_setup_input(%struct.acpi_device* %acpi_device) #0 !dbg !6787 {
entry:
  %v.addr.i1.i42 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i42, metadata !6630, metadata !DIExpression()), !dbg !6788
  %v.addr.i.i43 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i43, metadata !6641, metadata !DIExpression()), !dbg !6791
  %size.addr.i.i44 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i44, metadata !6651, metadata !DIExpression()), !dbg !6793
  %v.addr.i45 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i45, metadata !6653, metadata !DIExpression()), !dbg !6794
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6795, metadata !DIExpression()), !dbg !6801
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !6655, metadata !DIExpression()), !dbg !6804
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6664, metadata !DIExpression()), !dbg !6808
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !6666, metadata !DIExpression()), !dbg !6809
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6641, metadata !DIExpression()), !dbg !6810
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6651, metadata !DIExpression()), !dbg !6812
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !6672, metadata !DIExpression()), !dbg !6813
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6674, metadata !DIExpression()), !dbg !6814
  %retval = alloca i32, align 4
  %acpi_device.addr = alloca %struct.acpi_device*, align 8
  %jog_dev = alloca %struct.input_dev*, align 8
  %key_dev = alloca %struct.input_dev*, align 8
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %__tmp = alloca %struct.kfifo*, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp = alloca i32, align 4
  %__tmp39 = alloca %struct.kfifo*, align 8
  %__kfifo40 = alloca %struct.__kfifo*, align 8
  store %struct.acpi_device* %acpi_device, %struct.acpi_device** %acpi_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %acpi_device.addr, metadata !6815, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.declare(metadata %struct.input_dev** %jog_dev, metadata !6817, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata %struct.input_dev** %key_dev, metadata !6819, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6821, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6823, metadata !DIExpression()), !dbg !6824
  store i32 1, i32* %i.addr.i, align 4
  store %struct.atomic_t* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 0), %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6825
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !6825
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6826
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !6827
  %conv.i.i = trunc i64 %3 to i32, !dbg !6827
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %2, i32 %conv.i.i) #13, !dbg !6828
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6829
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !6829
  call void @kcsan_check_access(i8* %4, i64 %5, i32 7) #13, !dbg !6829
  %6 = load i32, i32* %i.addr.i, align 4, !dbg !6830
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6831
  store i32 %6, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load i32, i32* %i.addr.i.i, align 4, !dbg !6832
  %9 = load i32, i32* %i.addr.i.i, align 4, !dbg !6809
  store i32 %9, i32* %__ret.i.i, align 4, !dbg !6809
  %10 = load i32, i32* %__ret.i.i, align 4, !dbg !6809
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6809
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !6809
  %12 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %10, i32* %counter.i.i) #7, !dbg !6809, !srcloc !6686
  store i32 %12, i32* %__ret.i.i, align 4, !dbg !6809
  %13 = load i32, i32* %__ret.i.i, align 4, !dbg !6809
  store i32 %13, i32* %tmp.i.i, align 4, !dbg !6809
  %14 = load i32, i32* %tmp.i.i, align 4, !dbg !6809
  %add.i.i = add i32 %8, %14, !dbg !6833
  %cmp = icmp sgt i32 %add.i.i, 1, !dbg !6834
  br i1 %cmp, label %if.then, label %if.end, !dbg !6835

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6836
  br label %return, !dbg !6836

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6837

do.body:                                          ; preds = %if.end
  store %struct.spinlock* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 4), %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6838
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !6839
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !6839
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6840
  %rlock = bitcast %union.anon.0* %17 to %struct.raw_spinlock*, !dbg !6840
  %18 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.spinlock* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 4) to i8*), i8* align 1 %18, i64 0, i1 false), !dbg !6840
  br label %do.end, !dbg !6840

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmp, metadata !6841, metadata !DIExpression()), !dbg !6844
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmp, align 8, !dbg !6844
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !6845, metadata !DIExpression()), !dbg !6844
  %19 = load %struct.kfifo*, %struct.kfifo** %__tmp, align 8, !dbg !6844
  %20 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %19, i32 0, i32 0, !dbg !6844
  %kfifo = bitcast %union.anon.76* %20 to %struct.__kfifo*, !dbg !6844
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !6844
  %21 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !6844
  %call2 = call i32 @__kfifo_alloc(%struct.__kfifo* %21, i32 128, i64 1, i32 3264) #11, !dbg !6844
  store i32 %call2, i32* %tmp, align 4, !dbg !6844
  %22 = load i32, i32* %tmp, align 4, !dbg !6844
  %call3 = call i32 @__kfifo_int_must_check_helper(i32 %22) #11, !dbg !6847
  store i32 %call3, i32* %error, align 4, !dbg !6848
  %23 = load i32, i32* %error, align 4, !dbg !6849
  %tobool = icmp ne i32 %23, 0, !dbg !6849
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !6851

if.then4:                                         ; preds = %do.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !6852
  br label %err_dec_users, !dbg !6854

if.end6:                                          ; preds = %do.end
  call void @init_timer_key(%struct.timer_list* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 5), void (%struct.timer_list*)* @do_sony_laptop_release_key, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !6855
  %call7 = call %struct.input_dev* @input_allocate_device() #11, !dbg !6856
  store %struct.input_dev* %call7, %struct.input_dev** %key_dev, align 8, !dbg !6857
  %24 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6858
  %tobool8 = icmp ne %struct.input_dev* %24, null, !dbg !6858
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6860

if.then9:                                         ; preds = %if.end6
  store i32 -12, i32* %error, align 4, !dbg !6861
  br label %err_free_kfifo, !dbg !6863

if.end10:                                         ; preds = %if.end6
  %25 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6864
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 0, !dbg !6865
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i8** %name, align 8, !dbg !6866
  %26 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6867
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %26, i32 0, i32 3, !dbg !6868
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0, !dbg !6869
  store i16 16, i16* %bustype, align 8, !dbg !6870
  %27 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6871
  %id11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %27, i32 0, i32 3, !dbg !6872
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id11, i32 0, i32 1, !dbg !6873
  store i16 4173, i16* %vendor, align 2, !dbg !6874
  %28 = load %struct.acpi_device*, %struct.acpi_device** %acpi_device.addr, align 8, !dbg !6875
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %28, i32 0, i32 21, !dbg !6876
  %29 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6877
  %dev12 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %29, i32 0, i32 40, !dbg !6878
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 1, !dbg !6879
  store %struct.device* %dev, %struct.device** %parent, align 8, !dbg !6880
  %30 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6881
  call void @input_set_capability(%struct.input_dev* %30, i32 4, i32 4) #11, !dbg !6882
  %31 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6883
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %31, i32 0, i32 5, !dbg !6884
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6883
  call void @__set_bit(i64 1, i64* %arraydecay) #11, !dbg !6885
  %32 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6886
  %keycodesize = getelementptr inbounds %struct.input_dev, %struct.input_dev* %32, i32 0, i32 16, !dbg !6887
  store i32 4, i32* %keycodesize, align 8, !dbg !6888
  %33 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6889
  %keycodemax = getelementptr inbounds %struct.input_dev, %struct.input_dev* %33, i32 0, i32 15, !dbg !6890
  store i32 60, i32* %keycodemax, align 4, !dbg !6891
  %34 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6892
  %keycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %34, i32 0, i32 17, !dbg !6893
  store i8* bitcast ([60 x i32]* @sony_laptop_input_keycode_map to i8*), i8** %keycode, align 8, !dbg !6894
  store i32 0, i32* %i, align 4, !dbg !6895
  br label %for.cond, !dbg !6897

for.cond:                                         ; preds = %for.inc, %if.end10
  %35 = load i32, i32* %i, align 4, !dbg !6898
  %conv = sext i32 %35 to i64, !dbg !6898
  %cmp13 = icmp ult i64 %conv, 60, !dbg !6900
  br i1 %cmp13, label %for.body, label %for.end, !dbg !6901

for.body:                                         ; preds = %for.cond
  %36 = load i32, i32* %i, align 4, !dbg !6902
  %idxprom = sext i32 %36 to i64, !dbg !6903
  %arrayidx = getelementptr [60 x i32], [60 x i32]* @sony_laptop_input_keycode_map, i64 0, i64 %idxprom, !dbg !6903
  %37 = load i32, i32* %arrayidx, align 4, !dbg !6903
  %conv15 = sext i32 %37 to i64, !dbg !6903
  %38 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6904
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %38, i32 0, i32 6, !dbg !6905
  %arraydecay16 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !6904
  call void @__set_bit(i64 %conv15, i64* %arraydecay16) #11, !dbg !6906
  br label %for.inc, !dbg !6906

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !dbg !6907
  %inc = add i32 %39, 1, !dbg !6907
  store i32 %inc, i32* %i, align 4, !dbg !6907
  br label %for.cond, !dbg !6908, !llvm.loop !6909

for.end:                                          ; preds = %for.cond
  %40 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6911
  %keybit17 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %40, i32 0, i32 6, !dbg !6912
  %arraydecay18 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit17, i64 0, i64 0, !dbg !6911
  call void @__clear_bit(i64 0, i64* %arraydecay18) #11, !dbg !6913
  %41 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6914
  %call19 = call i32 @input_register_device(%struct.input_dev* %41) #11, !dbg !6915
  store i32 %call19, i32* %error, align 4, !dbg !6916
  %42 = load i32, i32* %error, align 4, !dbg !6917
  %tobool20 = icmp ne i32 %42, 0, !dbg !6917
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !6919

if.then21:                                        ; preds = %for.end
  br label %err_free_keydev, !dbg !6920

if.end22:                                         ; preds = %for.end
  %43 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6921
  store %struct.input_dev* %43, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 2), align 8, !dbg !6922
  %call23 = call %struct.input_dev* @input_allocate_device() #11, !dbg !6923
  store %struct.input_dev* %call23, %struct.input_dev** %jog_dev, align 8, !dbg !6924
  %44 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6925
  %tobool24 = icmp ne %struct.input_dev* %44, null, !dbg !6925
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !6927

if.then25:                                        ; preds = %if.end22
  store i32 -12, i32* %error, align 4, !dbg !6928
  br label %err_unregister_keydev, !dbg !6930

if.end26:                                         ; preds = %if.end22
  %45 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6931
  %name27 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %45, i32 0, i32 0, !dbg !6932
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8** %name27, align 8, !dbg !6933
  %46 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6934
  %id28 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %46, i32 0, i32 3, !dbg !6935
  %bustype29 = getelementptr inbounds %struct.input_id, %struct.input_id* %id28, i32 0, i32 0, !dbg !6936
  store i16 16, i16* %bustype29, align 8, !dbg !6937
  %47 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6938
  %id30 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %47, i32 0, i32 3, !dbg !6939
  %vendor31 = getelementptr inbounds %struct.input_id, %struct.input_id* %id30, i32 0, i32 1, !dbg !6940
  store i16 4173, i16* %vendor31, align 2, !dbg !6941
  %48 = load %struct.acpi_device*, %struct.acpi_device** %acpi_device.addr, align 8, !dbg !6942
  %dev32 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %48, i32 0, i32 21, !dbg !6943
  %49 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6944
  %dev33 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %49, i32 0, i32 40, !dbg !6945
  %parent34 = getelementptr inbounds %struct.device, %struct.device* %dev33, i32 0, i32 1, !dbg !6946
  store %struct.device* %dev32, %struct.device** %parent34, align 8, !dbg !6947
  %50 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6948
  call void @input_set_capability(%struct.input_dev* %50, i32 1, i32 274) #11, !dbg !6949
  %51 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6950
  call void @input_set_capability(%struct.input_dev* %51, i32 2, i32 8) #11, !dbg !6951
  %52 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6952
  %call35 = call i32 @input_register_device(%struct.input_dev* %52) #11, !dbg !6953
  store i32 %call35, i32* %error, align 4, !dbg !6954
  %53 = load i32, i32* %error, align 4, !dbg !6955
  %tobool36 = icmp ne i32 %53, 0, !dbg !6955
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6957

if.then37:                                        ; preds = %if.end26
  br label %err_free_jogdev, !dbg !6958

if.end38:                                         ; preds = %if.end26
  %54 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6959
  store %struct.input_dev* %54, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 1), align 8, !dbg !6960
  store i32 0, i32* %retval, align 4, !dbg !6961
  br label %return, !dbg !6961

err_free_jogdev:                                  ; preds = %if.then37
  call void @llvm.dbg.label(metadata !6962), !dbg !6963
  %55 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !6964
  call void @input_free_device(%struct.input_dev* %55) #11, !dbg !6965
  br label %err_unregister_keydev, !dbg !6965

err_unregister_keydev:                            ; preds = %err_free_jogdev, %if.then25
  call void @llvm.dbg.label(metadata !6966), !dbg !6967
  %56 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6968
  call void @input_unregister_device(%struct.input_dev* %56) #11, !dbg !6969
  store %struct.input_dev* null, %struct.input_dev** %key_dev, align 8, !dbg !6970
  br label %err_free_keydev, !dbg !6971

err_free_keydev:                                  ; preds = %err_unregister_keydev, %if.then21
  call void @llvm.dbg.label(metadata !6972), !dbg !6973
  %57 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !6974
  call void @input_free_device(%struct.input_dev* %57) #11, !dbg !6975
  br label %err_free_kfifo, !dbg !6975

err_free_kfifo:                                   ; preds = %err_free_keydev, %if.then9
  call void @llvm.dbg.label(metadata !6976), !dbg !6977
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmp39, metadata !6978, metadata !DIExpression()), !dbg !6980
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmp39, align 8, !dbg !6980
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo40, metadata !6981, metadata !DIExpression()), !dbg !6980
  %58 = load %struct.kfifo*, %struct.kfifo** %__tmp39, align 8, !dbg !6980
  %59 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %58, i32 0, i32 0, !dbg !6980
  %kfifo41 = bitcast %union.anon.76* %59 to %struct.__kfifo*, !dbg !6980
  store %struct.__kfifo* %kfifo41, %struct.__kfifo** %__kfifo40, align 8, !dbg !6980
  %60 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo40, align 8, !dbg !6982
  call void @__kfifo_free(%struct.__kfifo* %60) #11, !dbg !6982
  br label %err_dec_users, !dbg !6984

err_dec_users:                                    ; preds = %err_free_kfifo, %if.then4
  call void @llvm.dbg.label(metadata !6985), !dbg !6986
  store %struct.atomic_t* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 0), %struct.atomic_t** %v.addr.i45, align 8
  %61 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i45, align 8, !dbg !6987
  %62 = bitcast %struct.atomic_t* %61 to i8*, !dbg !6987
  store i8* %62, i8** %v.addr.i.i43, align 8
  store i64 4, i64* %size.addr.i.i44, align 8
  %63 = load i8*, i8** %v.addr.i.i43, align 8, !dbg !6988
  %64 = load i64, i64* %size.addr.i.i44, align 8, !dbg !6989
  %conv.i.i46 = trunc i64 %64 to i32, !dbg !6989
  %call.i.i47 = call zeroext i1 @kasan_check_write(i8* %63, i32 %conv.i.i46) #13, !dbg !6990
  %65 = load i8*, i8** %v.addr.i.i43, align 8, !dbg !6991
  %66 = load i64, i64* %size.addr.i.i44, align 8, !dbg !6991
  call void @kcsan_check_access(i8* %65, i64 %66, i32 7) #13, !dbg !6991
  %67 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i45, align 8, !dbg !6992
  store %struct.atomic_t* %67, %struct.atomic_t** %v.addr.i1.i42, align 8
  %68 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i42, align 8, !dbg !6993
  %counter.i.i48 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %68, i32 0, i32 0, !dbg !6994
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i48, i32* %counter.i.i48) #7, !dbg !6995, !srcloc !6733
  %69 = load i32, i32* %error, align 4, !dbg !6996
  store i32 %69, i32* %retval, align 4, !dbg !6997
  br label %return, !dbg !6997

return:                                           ; preds = %err_dec_users, %if.end38, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !6998
  ret i32 %70, !dbg !6998
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_has_method(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_int_call(i8* %handle, i8* %name, i32* %value, i32* %result) #0 !dbg !6999 {
entry:
  %handle.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i32*, align 8
  %result.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %v = alloca i64, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7004, metadata !DIExpression()), !dbg !7005
  store i32* %value, i32** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %value.addr, metadata !7006, metadata !DIExpression()), !dbg !7007
  store i32* %result, i32** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %result.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load i32*, i32** %value.addr, align 8, !dbg !7012
  %tobool = icmp ne i32* %0, null, !dbg !7012
  br i1 %tobool, label %if.then, label %if.else, !dbg !7014

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7015, metadata !DIExpression()), !dbg !7017
  %1 = load i32*, i32** %value.addr, align 8, !dbg !7018
  %2 = load i32, i32* %1, align 4, !dbg !7019
  %conv = sext i32 %2 to i64, !dbg !7019
  store i64 %conv, i64* %v, align 8, !dbg !7017
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !7020
  %4 = load i8*, i8** %name.addr, align 8, !dbg !7021
  %5 = load i32*, i32** %result.addr, align 8, !dbg !7022
  %6 = bitcast i32* %5 to i8*, !dbg !7022
  %call = call i32 @sony_nc_buffer_call(i8* %3, i8* %4, i64* %v, i8* %6, i64 4) #11, !dbg !7023
  store i32 %call, i32* %ret, align 4, !dbg !7024
  br label %if.end, !dbg !7025

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %handle.addr, align 8, !dbg !7026
  %8 = load i8*, i8** %name.addr, align 8, !dbg !7028
  %9 = load i32*, i32** %result.addr, align 8, !dbg !7029
  %10 = bitcast i32* %9 to i8*, !dbg !7029
  %call1 = call i32 @sony_nc_buffer_call(i8* %7, i8* %8, i64* null, i8* %10, i64 4) #11, !dbg !7030
  store i32 %call1, i32* %ret, align 4, !dbg !7031
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !7032
  ret i32 %11, !dbg !7033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_handles_setup(%struct.platform_device* %pd) #0 !dbg !7034 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %result = alloca i32, align 4
  %arg = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !7035, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.declare(metadata i32* %r, metadata !7039, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7041, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !7043, metadata !DIExpression()), !dbg !7044
  %call = call i8* @kzalloc(i64 64, i32 3264) #11, !dbg !7045
  %0 = bitcast i8* %call to %struct.sony_nc_handles*, !dbg !7045
  store %struct.sony_nc_handles* %0, %struct.sony_nc_handles** @handles, align 8, !dbg !7046
  %1 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7047
  %tobool = icmp ne %struct.sony_nc_handles* %1, null, !dbg !7047
  br i1 %tobool, label %if.end, label %if.then, !dbg !7049

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7050
  br label %return, !dbg !7050

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7051
  br label %for.cond, !dbg !7053

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !7054
  %conv = sext i32 %2 to i64, !dbg !7054
  %cmp = icmp ult i64 %conv, 16, !dbg !7056
  br i1 %cmp, label %for.body, label %for.end, !dbg !7057

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !7058
  %add = add i32 %3, 32, !dbg !7060
  store i32 %add, i32* %arg, align 4, !dbg !7061
  %4 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !7062
  %call2 = call i32 @sony_nc_int_call(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32* %arg, i32* %result) #11, !dbg !7063
  store i32 %call2, i32* %r, align 4, !dbg !7064
  %5 = load i32, i32* %r, align 4, !dbg !7065
  %tobool3 = icmp ne i32 %5, 0, !dbg !7065
  br i1 %tobool3, label %if.end10, label %if.then4, !dbg !7067

if.then4:                                         ; preds = %for.body
  br label %do.body, !dbg !7068

do.body:                                          ; preds = %if.then4
  %6 = load i32, i32* @debug, align 4, !dbg !7070
  %tobool5 = icmp ne i32 %6, 0, !dbg !7070
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7073

if.then6:                                         ; preds = %do.body
  %7 = load i32, i32* %result, align 4, !dbg !7070
  %8 = load i32, i32* %i, align 4, !dbg !7070
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 %7, i32 %8) #12, !dbg !7070
  br label %if.end8, !dbg !7070

if.end8:                                          ; preds = %if.then6, %do.body
  br label %do.end, !dbg !7073

do.end:                                           ; preds = %if.end8
  %9 = load i32, i32* %result, align 4, !dbg !7074
  %conv9 = trunc i32 %9 to i16, !dbg !7074
  %10 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7075
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %10, i32 0, i32 0, !dbg !7076
  %11 = load i32, i32* %i, align 4, !dbg !7077
  %idxprom = sext i32 %11 to i64, !dbg !7075
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !7075
  store i16 %conv9, i16* %arrayidx, align 2, !dbg !7078
  br label %if.end10, !dbg !7079

if.end10:                                         ; preds = %do.end, %for.body
  br label %for.inc, !dbg !7080

for.inc:                                          ; preds = %if.end10
  %12 = load i32, i32* %i, align 4, !dbg !7081
  %inc = add i32 %12, 1, !dbg !7081
  store i32 %inc, i32* %i, align 4, !dbg !7081
  br label %for.cond, !dbg !7082, !llvm.loop !7083

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* @debug, align 4, !dbg !7085
  %tobool11 = icmp ne i32 %13, 0, !dbg !7085
  br i1 %tobool11, label %if.then12, label %if.end23, !dbg !7087

if.then12:                                        ; preds = %for.end
  br label %do.body13, !dbg !7088

do.body13:                                        ; preds = %if.then12
  br label %do.end14, !dbg !7090

do.end14:                                         ; preds = %do.body13
  %14 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7092
  %devattr = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %14, i32 0, i32 1, !dbg !7093
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %devattr, i32 0, i32 0, !dbg !7094
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !7095
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i8** %name, align 8, !dbg !7096
  %15 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7097
  %devattr15 = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %15, i32 0, i32 1, !dbg !7098
  %attr16 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %devattr15, i32 0, i32 0, !dbg !7099
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr16, i32 0, i32 1, !dbg !7100
  store i16 292, i16* %mode, align 8, !dbg !7101
  %16 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7102
  %devattr17 = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %16, i32 0, i32 1, !dbg !7103
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %devattr17, i32 0, i32 1, !dbg !7104
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_handles_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !7105
  %17 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7106
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %17, i32 0, i32 3, !dbg !7108
  %18 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7109
  %devattr18 = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %18, i32 0, i32 1, !dbg !7110
  %call19 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %devattr18) #11, !dbg !7111
  %tobool20 = icmp ne i32 %call19, 0, !dbg !7111
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !7112

if.then21:                                        ; preds = %do.end14
  %19 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7113
  %20 = bitcast %struct.sony_nc_handles* %19 to i8*, !dbg !7113
  call void @kfree(i8* %20) #11, !dbg !7115
  store %struct.sony_nc_handles* null, %struct.sony_nc_handles** @handles, align 8, !dbg !7116
  store i32 -1, i32* %retval, align 4, !dbg !7117
  br label %return, !dbg !7117

if.end22:                                         ; preds = %do.end14
  br label %if.end23, !dbg !7118

if.end23:                                         ; preds = %if.end22, %for.end
  store i32 0, i32* %retval, align 4, !dbg !7119
  br label %return, !dbg !7119

return:                                           ; preds = %if.end23, %if.then21, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7120
  ret i32 %21, !dbg !7120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_function_setup(%struct.acpi_device* %device, %struct.platform_device* %pf_device) #0 !dbg !7121 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %pf_device.addr = alloca %struct.platform_device*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %bitmask = alloca i32, align 4
  %arg = alloca i32, align 4
  %handle = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !7124, metadata !DIExpression()), !dbg !7125
  store %struct.platform_device* %pf_device, %struct.platform_device** %pf_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pf_device.addr, metadata !7126, metadata !DIExpression()), !dbg !7127
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7128, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata i32* %bitmask, metadata !7132, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !7134, metadata !DIExpression()), !dbg !7135
  %0 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7136
  %tobool = icmp ne %struct.sony_nc_handles* %0, null, !dbg !7136
  br i1 %tobool, label %if.end, label %if.then, !dbg !7138

if.then:                                          ; preds = %entry
  br label %if.end94, !dbg !7139

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7140
  br label %for.cond, !dbg !7142

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !7143
  %conv = zext i32 %1 to i64, !dbg !7143
  %cmp = icmp ult i64 %conv, 16, !dbg !7145
  br i1 %cmp, label %for.body, label %for.end, !dbg !7146

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %handle, metadata !7147, metadata !DIExpression()), !dbg !7149
  %2 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7150
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %2, i32 0, i32 0, !dbg !7151
  %3 = load i32, i32* %i, align 4, !dbg !7152
  %idxprom = zext i32 %3 to i64, !dbg !7150
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !7150
  %4 = load i16, i16* %arrayidx, align 2, !dbg !7150
  %conv2 = zext i16 %4 to i32, !dbg !7150
  store i32 %conv2, i32* %handle, align 4, !dbg !7149
  %5 = load i32, i32* %handle, align 4, !dbg !7153
  %tobool3 = icmp ne i32 %5, 0, !dbg !7153
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7155

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !7156

if.end5:                                          ; preds = %for.body
  br label %do.body, !dbg !7157

do.body:                                          ; preds = %if.end5
  %6 = load i32, i32* @debug, align 4, !dbg !7158
  %tobool6 = icmp ne i32 %6, 0, !dbg !7158
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7161

if.then7:                                         ; preds = %do.body
  %7 = load i32, i32* %handle, align 4, !dbg !7158
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i64 0, i64 0), i32 %7) #12, !dbg !7158
  br label %if.end8, !dbg !7158

if.end8:                                          ; preds = %if.then7, %do.body
  br label %do.end, !dbg !7161

do.end:                                           ; preds = %if.end8
  %8 = load i32, i32* %handle, align 4, !dbg !7162
  switch i32 %8, label %sw.default [
    i32 256, label %sw.bb
    i32 257, label %sw.bb
    i32 295, label %sw.bb
    i32 258, label %sw.bb10
    i32 261, label %sw.bb12
    i32 328, label %sw.bb12
    i32 277, label %sw.bb18
    i32 310, label %sw.bb18
    i32 319, label %sw.bb18
    i32 281, label %sw.bb24
    i32 349, label %sw.bb24
    i32 290, label %sw.bb30
    i32 296, label %sw.bb36
    i32 326, label %sw.bb36
    i32 347, label %sw.bb36
    i32 305, label %sw.bb42
    i32 292, label %sw.bb48
    i32 309, label %sw.bb48
    i32 311, label %sw.bb54
    i32 323, label %sw.bb54
    i32 331, label %sw.bb54
    i32 332, label %sw.bb54
    i32 339, label %sw.bb54
    i32 355, label %sw.bb54
    i32 289, label %sw.bb60
    i32 329, label %sw.bb66
    i32 341, label %sw.bb72
    i32 285, label %sw.bb78
    i32 360, label %sw.bb84
  ], !dbg !7163

sw.bb:                                            ; preds = %do.end, %do.end, %do.end
  %9 = load i32, i32* %handle, align 4, !dbg !7164
  %call9 = call i32 @sony_call_snc_handle(i32 %9, i32 0, i32* %result) #11, !dbg !7166
  br label %sw.epilog, !dbg !7167

sw.bb10:                                          ; preds = %do.end
  %10 = load i32, i32* %handle, align 4, !dbg !7168
  %call11 = call i32 @sony_call_snc_handle(i32 %10, i32 256, i32* %result) #11, !dbg !7169
  br label %sw.epilog, !dbg !7170

sw.bb12:                                          ; preds = %do.end, %do.end
  %11 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7171
  %12 = load i32, i32* %handle, align 4, !dbg !7172
  %call13 = call i32 @sony_nc_touchpad_setup(%struct.platform_device* %11, i32 %12) #11, !dbg !7173
  store i32 %call13, i32* %result, align 4, !dbg !7174
  %13 = load i32, i32* %result, align 4, !dbg !7175
  %tobool14 = icmp ne i32 %13, 0, !dbg !7175
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !7177

if.then15:                                        ; preds = %sw.bb12
  %14 = load i32, i32* %result, align 4, !dbg !7178
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.35, i64 0, i64 0), i32 %14) #12, !dbg !7178
  br label %if.end17, !dbg !7178

if.end17:                                         ; preds = %if.then15, %sw.bb12
  br label %sw.epilog, !dbg !7179

sw.bb18:                                          ; preds = %do.end, %do.end, %do.end
  %15 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7180
  %16 = load i32, i32* %handle, align 4, !dbg !7181
  %call19 = call i32 @sony_nc_battery_care_setup(%struct.platform_device* %15, i32 %16) #11, !dbg !7182
  store i32 %call19, i32* %result, align 4, !dbg !7183
  %17 = load i32, i32* %result, align 4, !dbg !7184
  %tobool20 = icmp ne i32 %17, 0, !dbg !7184
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !7186

if.then21:                                        ; preds = %sw.bb18
  %18 = load i32, i32* %result, align 4, !dbg !7187
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 %18) #12, !dbg !7187
  br label %if.end23, !dbg !7187

if.end23:                                         ; preds = %if.then21, %sw.bb18
  br label %sw.epilog, !dbg !7188

sw.bb24:                                          ; preds = %do.end, %do.end
  %19 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7189
  %20 = load i32, i32* %handle, align 4, !dbg !7190
  %call25 = call i32 @sony_nc_lid_resume_setup(%struct.platform_device* %19, i32 %20) #11, !dbg !7191
  store i32 %call25, i32* %result, align 4, !dbg !7192
  %21 = load i32, i32* %result, align 4, !dbg !7193
  %tobool26 = icmp ne i32 %21, 0, !dbg !7193
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !7195

if.then27:                                        ; preds = %sw.bb24
  %22 = load i32, i32* %result, align 4, !dbg !7196
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.37, i64 0, i64 0), i32 %22) #12, !dbg !7196
  br label %if.end29, !dbg !7196

if.end29:                                         ; preds = %if.then27, %sw.bb24
  br label %sw.epilog, !dbg !7197

sw.bb30:                                          ; preds = %do.end
  %23 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7198
  %call31 = call i32 @sony_nc_thermal_setup(%struct.platform_device* %23) #11, !dbg !7199
  store i32 %call31, i32* %result, align 4, !dbg !7200
  %24 = load i32, i32* %result, align 4, !dbg !7201
  %tobool32 = icmp ne i32 %24, 0, !dbg !7201
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !7203

if.then33:                                        ; preds = %sw.bb30
  %25 = load i32, i32* %result, align 4, !dbg !7204
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.38, i64 0, i64 0), i32 %25) #12, !dbg !7204
  br label %if.end35, !dbg !7204

if.end35:                                         ; preds = %if.then33, %sw.bb30
  br label %sw.epilog, !dbg !7205

sw.bb36:                                          ; preds = %do.end, %do.end, %do.end
  %26 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7206
  %27 = load i32, i32* %handle, align 4, !dbg !7207
  %call37 = call i32 @sony_nc_gfx_switch_setup(%struct.platform_device* %26, i32 %27) #11, !dbg !7208
  store i32 %call37, i32* %result, align 4, !dbg !7209
  %28 = load i32, i32* %result, align 4, !dbg !7210
  %tobool38 = icmp ne i32 %28, 0, !dbg !7210
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !7212

if.then39:                                        ; preds = %sw.bb36
  %29 = load i32, i32* %result, align 4, !dbg !7213
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0), i32 %29) #12, !dbg !7213
  br label %if.end41, !dbg !7213

if.end41:                                         ; preds = %if.then39, %sw.bb36
  br label %sw.epilog, !dbg !7214

sw.bb42:                                          ; preds = %do.end
  %30 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7215
  %call43 = call i32 @sony_nc_highspeed_charging_setup(%struct.platform_device* %30) #11, !dbg !7216
  store i32 %call43, i32* %result, align 4, !dbg !7217
  %31 = load i32, i32* %result, align 4, !dbg !7218
  %tobool44 = icmp ne i32 %31, 0, !dbg !7218
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !7220

if.then45:                                        ; preds = %sw.bb42
  %32 = load i32, i32* %result, align 4, !dbg !7221
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.40, i64 0, i64 0), i32 %32) #12, !dbg !7221
  br label %if.end47, !dbg !7221

if.end47:                                         ; preds = %if.then45, %sw.bb42
  br label %sw.epilog, !dbg !7222

sw.bb48:                                          ; preds = %do.end, %do.end
  %33 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7223
  %34 = load i32, i32* %handle, align 4, !dbg !7224
  %call49 = call i32 @sony_nc_rfkill_setup(%struct.acpi_device* %33, i32 %34) #11, !dbg !7225
  store i32 %call49, i32* %result, align 4, !dbg !7226
  %35 = load i32, i32* %result, align 4, !dbg !7227
  %tobool50 = icmp ne i32 %35, 0, !dbg !7227
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !7229

if.then51:                                        ; preds = %sw.bb48
  %36 = load i32, i32* %result, align 4, !dbg !7230
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.41, i64 0, i64 0), i32 %36) #12, !dbg !7230
  br label %if.end53, !dbg !7230

if.end53:                                         ; preds = %if.then51, %sw.bb48
  br label %sw.epilog, !dbg !7231

sw.bb54:                                          ; preds = %do.end, %do.end, %do.end, %do.end, %do.end, %do.end
  %37 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7232
  %38 = load i32, i32* %handle, align 4, !dbg !7233
  %call55 = call i32 @sony_nc_kbd_backlight_setup(%struct.platform_device* %37, i32 %38) #11, !dbg !7234
  store i32 %call55, i32* %result, align 4, !dbg !7235
  %39 = load i32, i32* %result, align 4, !dbg !7236
  %tobool56 = icmp ne i32 %39, 0, !dbg !7236
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !7238

if.then57:                                        ; preds = %sw.bb54
  %40 = load i32, i32* %result, align 4, !dbg !7239
  %call58 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.42, i64 0, i64 0), i32 %40) #12, !dbg !7239
  br label %if.end59, !dbg !7239

if.end59:                                         ; preds = %if.then57, %sw.bb54
  br label %sw.epilog, !dbg !7240

sw.bb60:                                          ; preds = %do.end
  %41 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7241
  %call61 = call i32 @sony_nc_lowbatt_setup(%struct.platform_device* %41) #11, !dbg !7242
  store i32 %call61, i32* %result, align 4, !dbg !7243
  %42 = load i32, i32* %result, align 4, !dbg !7244
  %tobool62 = icmp ne i32 %42, 0, !dbg !7244
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !7246

if.then63:                                        ; preds = %sw.bb60
  %43 = load i32, i32* %result, align 4, !dbg !7247
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.43, i64 0, i64 0), i32 %43) #12, !dbg !7247
  br label %if.end65, !dbg !7247

if.end65:                                         ; preds = %if.then63, %sw.bb60
  br label %sw.epilog, !dbg !7248

sw.bb66:                                          ; preds = %do.end
  %44 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7249
  %call67 = call i32 @sony_nc_fanspeed_setup(%struct.platform_device* %44) #11, !dbg !7250
  store i32 %call67, i32* %result, align 4, !dbg !7251
  %45 = load i32, i32* %result, align 4, !dbg !7252
  %tobool68 = icmp ne i32 %45, 0, !dbg !7252
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !7254

if.then69:                                        ; preds = %sw.bb66
  %46 = load i32, i32* %result, align 4, !dbg !7255
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.44, i64 0, i64 0), i32 %46) #12, !dbg !7255
  br label %if.end71, !dbg !7255

if.end71:                                         ; preds = %if.then69, %sw.bb66
  br label %sw.epilog, !dbg !7256

sw.bb72:                                          ; preds = %do.end
  %47 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7257
  %call73 = call i32 @sony_nc_usb_charge_setup(%struct.platform_device* %47) #11, !dbg !7258
  store i32 %call73, i32* %result, align 4, !dbg !7259
  %48 = load i32, i32* %result, align 4, !dbg !7260
  %tobool74 = icmp ne i32 %48, 0, !dbg !7260
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !7262

if.then75:                                        ; preds = %sw.bb72
  %49 = load i32, i32* %result, align 4, !dbg !7263
  %call76 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.45, i64 0, i64 0), i32 %49) #12, !dbg !7263
  br label %if.end77, !dbg !7263

if.end77:                                         ; preds = %if.then75, %sw.bb72
  br label %sw.epilog, !dbg !7264

sw.bb78:                                          ; preds = %do.end
  %50 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7265
  %call79 = call i32 @sony_nc_panelid_setup(%struct.platform_device* %50) #11, !dbg !7266
  store i32 %call79, i32* %result, align 4, !dbg !7267
  %51 = load i32, i32* %result, align 4, !dbg !7268
  %tobool80 = icmp ne i32 %51, 0, !dbg !7268
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !7270

if.then81:                                        ; preds = %sw.bb78
  %52 = load i32, i32* %result, align 4, !dbg !7271
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.46, i64 0, i64 0), i32 %52) #12, !dbg !7271
  br label %if.end83, !dbg !7271

if.end83:                                         ; preds = %if.then81, %sw.bb78
  br label %sw.epilog, !dbg !7272

sw.bb84:                                          ; preds = %do.end
  %53 = load %struct.platform_device*, %struct.platform_device** %pf_device.addr, align 8, !dbg !7273
  %call85 = call i32 @sony_nc_smart_conn_setup(%struct.platform_device* %53) #11, !dbg !7274
  store i32 %call85, i32* %result, align 4, !dbg !7275
  %54 = load i32, i32* %result, align 4, !dbg !7276
  %tobool86 = icmp ne i32 %54, 0, !dbg !7276
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !7278

if.then87:                                        ; preds = %sw.bb84
  %55 = load i32, i32* %result, align 4, !dbg !7279
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.47, i64 0, i64 0), i32 %55) #12, !dbg !7279
  br label %if.end89, !dbg !7279

if.end89:                                         ; preds = %if.then87, %sw.bb84
  br label %sw.epilog, !dbg !7280

sw.default:                                       ; preds = %do.end
  br label %for.inc, !dbg !7281

sw.epilog:                                        ; preds = %if.end89, %if.end83, %if.end77, %if.end71, %if.end65, %if.end59, %if.end53, %if.end47, %if.end41, %if.end35, %if.end29, %if.end23, %if.end17, %sw.bb10, %sw.bb
  br label %for.inc, !dbg !7282

for.inc:                                          ; preds = %sw.epilog, %sw.default, %if.then4
  %56 = load i32, i32* %i, align 4, !dbg !7283
  %inc = add i32 %56, 1, !dbg !7283
  store i32 %inc, i32* %i, align 4, !dbg !7283
  br label %for.cond, !dbg !7284, !llvm.loop !7285

for.end:                                          ; preds = %for.cond
  store i32 16, i32* %arg, align 4, !dbg !7287
  %57 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !7288
  %call90 = call i32 @sony_nc_int_call(i8* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32* %arg, i32* %bitmask) #11, !dbg !7290
  %tobool91 = icmp ne i32 %call90, 0, !dbg !7290
  br i1 %tobool91, label %if.end94, label %if.then92, !dbg !7291

if.then92:                                        ; preds = %for.end
  %58 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !7292
  %call93 = call i32 @sony_nc_int_call(i8* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i32* %bitmask, i32* %result) #11, !dbg !7293
  br label %if.end94, !dbg !7293

if.end94:                                         ; preds = %if.then, %if.then92, %for.end
  ret void, !dbg !7294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_video_get_backlight_type() #0 !dbg !7295 {
entry:
  ret i32 2, !dbg !7298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_backlight_setup() #0 !dbg !7299 {
entry:
  %max_brightness = alloca i32, align 4
  %ops = alloca %struct.backlight_ops*, align 8
  %props = alloca %struct.backlight_properties, align 4
  call void @llvm.dbg.declare(metadata i32* %max_brightness, metadata !7300, metadata !DIExpression()), !dbg !7301
  store i32 0, i32* %max_brightness, align 4, !dbg !7301
  call void @llvm.dbg.declare(metadata %struct.backlight_ops** %ops, metadata !7302, metadata !DIExpression()), !dbg !7303
  store %struct.backlight_ops* null, %struct.backlight_ops** %ops, align 8, !dbg !7303
  call void @llvm.dbg.declare(metadata %struct.backlight_properties* %props, metadata !7304, metadata !DIExpression()), !dbg !7305
  %call = call i32 @sony_find_snc_handle(i32 303) #11, !dbg !7306
  %cmp = icmp sge i32 %call, 0, !dbg !7308
  br i1 %cmp, label %if.then, label %if.else, !dbg !7309

if.then:                                          ; preds = %entry
  store %struct.backlight_ops* @sony_backlight_ng_ops, %struct.backlight_ops** %ops, align 8, !dbg !7310
  store i32 256, i32* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 2), align 4, !dbg !7312
  call void @sony_nc_backlight_ng_read_limits(i32 303, %struct.sony_backlight_props* @sony_bl_props) #11, !dbg !7313
  %0 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 4), align 1, !dbg !7314
  %conv = zext i8 %0 to i32, !dbg !7315
  %1 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 3), align 8, !dbg !7316
  %conv1 = zext i8 %1 to i32, !dbg !7317
  %sub = sub i32 %conv, %conv1, !dbg !7318
  store i32 %sub, i32* %max_brightness, align 4, !dbg !7319
  br label %if.end41, !dbg !7320

if.else:                                          ; preds = %entry
  %call2 = call i32 @sony_find_snc_handle(i32 311) #11, !dbg !7321
  %cmp3 = icmp sge i32 %call2, 0, !dbg !7323
  br i1 %cmp3, label %if.then5, label %if.else9, !dbg !7324

if.then5:                                         ; preds = %if.else
  store %struct.backlight_ops* @sony_backlight_ng_ops, %struct.backlight_ops** %ops, align 8, !dbg !7325
  store i32 256, i32* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 2), align 4, !dbg !7327
  call void @sony_nc_backlight_ng_read_limits(i32 311, %struct.sony_backlight_props* @sony_bl_props) #11, !dbg !7328
  %2 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 4), align 1, !dbg !7329
  %conv6 = zext i8 %2 to i32, !dbg !7330
  %3 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 3), align 8, !dbg !7331
  %conv7 = zext i8 %3 to i32, !dbg !7332
  %sub8 = sub i32 %conv6, %conv7, !dbg !7333
  store i32 %sub8, i32* %max_brightness, align 4, !dbg !7334
  br label %if.end40, !dbg !7335

if.else9:                                         ; preds = %if.else
  %call10 = call i32 @sony_find_snc_handle(i32 323) #11, !dbg !7336
  %cmp11 = icmp sge i32 %call10, 0, !dbg !7338
  br i1 %cmp11, label %if.then13, label %if.else17, !dbg !7339

if.then13:                                        ; preds = %if.else9
  store %struct.backlight_ops* @sony_backlight_ng_ops, %struct.backlight_ops** %ops, align 8, !dbg !7340
  store i32 12288, i32* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 2), align 4, !dbg !7342
  call void @sony_nc_backlight_ng_read_limits(i32 323, %struct.sony_backlight_props* @sony_bl_props) #11, !dbg !7343
  %4 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 4), align 1, !dbg !7344
  %conv14 = zext i8 %4 to i32, !dbg !7345
  %5 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 3), align 8, !dbg !7346
  %conv15 = zext i8 %5 to i32, !dbg !7347
  %sub16 = sub i32 %conv14, %conv15, !dbg !7348
  store i32 %sub16, i32* %max_brightness, align 4, !dbg !7349
  br label %if.end39, !dbg !7350

if.else17:                                        ; preds = %if.else9
  %call18 = call i32 @sony_find_snc_handle(i32 331) #11, !dbg !7351
  %cmp19 = icmp sge i32 %call18, 0, !dbg !7353
  br i1 %cmp19, label %if.then21, label %if.else25, !dbg !7354

if.then21:                                        ; preds = %if.else17
  store %struct.backlight_ops* @sony_backlight_ng_ops, %struct.backlight_ops** %ops, align 8, !dbg !7355
  store i32 12288, i32* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 2), align 4, !dbg !7357
  call void @sony_nc_backlight_ng_read_limits(i32 331, %struct.sony_backlight_props* @sony_bl_props) #11, !dbg !7358
  %6 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 4), align 1, !dbg !7359
  %conv22 = zext i8 %6 to i32, !dbg !7360
  %7 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 3), align 8, !dbg !7361
  %conv23 = zext i8 %7 to i32, !dbg !7362
  %sub24 = sub i32 %conv22, %conv23, !dbg !7363
  store i32 %sub24, i32* %max_brightness, align 4, !dbg !7364
  br label %if.end38, !dbg !7365

if.else25:                                        ; preds = %if.else17
  %call26 = call i32 @sony_find_snc_handle(i32 332) #11, !dbg !7366
  %cmp27 = icmp sge i32 %call26, 0, !dbg !7368
  br i1 %cmp27, label %if.then29, label %if.else33, !dbg !7369

if.then29:                                        ; preds = %if.else25
  store %struct.backlight_ops* @sony_backlight_ng_ops, %struct.backlight_ops** %ops, align 8, !dbg !7370
  store i32 12288, i32* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 2), align 4, !dbg !7372
  call void @sony_nc_backlight_ng_read_limits(i32 332, %struct.sony_backlight_props* @sony_bl_props) #11, !dbg !7373
  %8 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 4), align 1, !dbg !7374
  %conv30 = zext i8 %8 to i32, !dbg !7375
  %9 = load i8, i8* getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 3), align 8, !dbg !7376
  %conv31 = zext i8 %9 to i32, !dbg !7377
  %sub32 = sub i32 %conv30, %conv31, !dbg !7378
  store i32 %sub32, i32* %max_brightness, align 4, !dbg !7379
  br label %if.end37, !dbg !7380

if.else33:                                        ; preds = %if.else25
  %10 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !7381
  %call34 = call zeroext i1 @acpi_has_method(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i64 0, i64 0)) #11, !dbg !7383
  br i1 %call34, label %if.then35, label %if.else36, !dbg !7384

if.then35:                                        ; preds = %if.else33
  store %struct.backlight_ops* @sony_backlight_ops, %struct.backlight_ops** %ops, align 8, !dbg !7385
  store i32 7, i32* %max_brightness, align 4, !dbg !7387
  br label %if.end, !dbg !7388

if.else36:                                        ; preds = %if.else33
  br label %if.end50, !dbg !7389

if.end:                                           ; preds = %if.then35
  br label %if.end37

if.end37:                                         ; preds = %if.end, %if.then29
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then21
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then13
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then5
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then
  %11 = bitcast %struct.backlight_properties* %props to i8*, !dbg !7390
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 28, i1 false), !dbg !7390
  %type = getelementptr inbounds %struct.backlight_properties, %struct.backlight_properties* %props, i32 0, i32 4, !dbg !7391
  store i32 2, i32* %type, align 4, !dbg !7392
  %12 = load i32, i32* %max_brightness, align 4, !dbg !7393
  %max_brightness42 = getelementptr inbounds %struct.backlight_properties, %struct.backlight_properties* %props, i32 0, i32 1, !dbg !7394
  store i32 %12, i32* %max_brightness42, align 4, !dbg !7395
  %13 = load %struct.backlight_ops*, %struct.backlight_ops** %ops, align 8, !dbg !7396
  %call43 = call %struct.backlight_device* @backlight_device_register(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0), %struct.device* null, i8* bitcast (%struct.sony_backlight_props* @sony_bl_props to i8*), %struct.backlight_ops* %13, %struct.backlight_properties* %props) #11, !dbg !7397
  store %struct.backlight_device* %call43, %struct.backlight_device** getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 0), align 8, !dbg !7398
  %14 = load %struct.backlight_device*, %struct.backlight_device** getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 0), align 8, !dbg !7399
  %15 = bitcast %struct.backlight_device* %14 to i8*, !dbg !7401
  %call44 = call zeroext i1 @IS_ERR(i8* %15) #11, !dbg !7402
  br i1 %call44, label %if.then45, label %if.else47, !dbg !7403

if.then45:                                        ; preds = %if.end41
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.96, i64 0, i64 0)) #12, !dbg !7404
  store %struct.backlight_device* null, %struct.backlight_device** getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 0), align 8, !dbg !7406
  br label %if.end50, !dbg !7407

if.else47:                                        ; preds = %if.end41
  %16 = load %struct.backlight_ops*, %struct.backlight_ops** %ops, align 8, !dbg !7408
  %get_brightness = getelementptr inbounds %struct.backlight_ops, %struct.backlight_ops* %16, i32 0, i32 2, !dbg !7409
  %17 = load i32 (%struct.backlight_device*)*, i32 (%struct.backlight_device*)** %get_brightness, align 8, !dbg !7409
  %18 = load %struct.backlight_device*, %struct.backlight_device** getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 0), align 8, !dbg !7410
  %call48 = call i32 %17(%struct.backlight_device* %18) #11, !dbg !7408
  %19 = load %struct.backlight_device*, %struct.backlight_device** getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 0), align 8, !dbg !7411
  %props49 = getelementptr inbounds %struct.backlight_device, %struct.backlight_device* %19, i32 0, i32 0, !dbg !7412
  %brightness = getelementptr inbounds %struct.backlight_properties, %struct.backlight_properties* %props49, i32 0, i32 0, !dbg !7413
  store i32 %call48, i32* %brightness, align 8, !dbg !7414
  br label %if.end50

if.end50:                                         ; preds = %if.else36, %if.else47, %if.then45
  ret void, !dbg !7415
}

; Function Attrs: noredzone
declare dso_local i32 @device_create_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @device_remove_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_backlight_cleanup() #0 !dbg !7416 {
entry:
  %0 = load %struct.backlight_device*, %struct.backlight_device** getelementptr inbounds (%struct.sony_backlight_props, %struct.sony_backlight_props* @sony_bl_props, i32 0, i32 0), align 8, !dbg !7417
  call void @backlight_device_unregister(%struct.backlight_device* %0) #11, !dbg !7418
  ret void, !dbg !7419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_function_cleanup(%struct.platform_device* %pd) #0 !dbg !7420 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %bitmask = alloca i32, align 4
  %handle = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7423, metadata !DIExpression()), !dbg !7424
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7425, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.declare(metadata i32* %bitmask, metadata !7427, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.declare(metadata i32* %handle, metadata !7429, metadata !DIExpression()), !dbg !7430
  %0 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7431
  %tobool = icmp ne %struct.sony_nc_handles* %0, null, !dbg !7431
  br i1 %tobool, label %if.end, label %if.then, !dbg !7433

if.then:                                          ; preds = %entry
  br label %return, !dbg !7434

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !7435
  %call = call i32 @sony_nc_int_call(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), i32* null, i32* %bitmask) #11, !dbg !7436
  %2 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !7437
  %call1 = call i32 @sony_nc_int_call(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i64 0, i64 0), i32* %bitmask, i32* %result) #11, !dbg !7438
  store i32 0, i32* %i, align 4, !dbg !7439
  br label %for.cond, !dbg !7441

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !7442
  %conv = zext i32 %3 to i64, !dbg !7442
  %cmp = icmp ult i64 %conv, 16, !dbg !7444
  br i1 %cmp, label %for.body, label %for.end, !dbg !7445

for.body:                                         ; preds = %for.cond
  %4 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7446
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %4, i32 0, i32 0, !dbg !7448
  %5 = load i32, i32* %i, align 4, !dbg !7449
  %idxprom = zext i32 %5 to i64, !dbg !7446
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !7446
  %6 = load i16, i16* %arrayidx, align 2, !dbg !7446
  %conv3 = zext i16 %6 to i32, !dbg !7446
  store i32 %conv3, i32* %handle, align 4, !dbg !7450
  %7 = load i32, i32* %handle, align 4, !dbg !7451
  %tobool4 = icmp ne i32 %7, 0, !dbg !7451
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7453

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !7454

if.end6:                                          ; preds = %for.body
  %8 = load i32, i32* %handle, align 4, !dbg !7455
  switch i32 %8, label %sw.default [
    i32 261, label %sw.bb
    i32 328, label %sw.bb
    i32 277, label %sw.bb7
    i32 310, label %sw.bb7
    i32 319, label %sw.bb7
    i32 281, label %sw.bb8
    i32 349, label %sw.bb8
    i32 290, label %sw.bb9
    i32 296, label %sw.bb10
    i32 326, label %sw.bb10
    i32 347, label %sw.bb10
    i32 305, label %sw.bb11
    i32 292, label %sw.bb12
    i32 309, label %sw.bb12
    i32 311, label %sw.bb13
    i32 323, label %sw.bb13
    i32 331, label %sw.bb13
    i32 332, label %sw.bb13
    i32 339, label %sw.bb13
    i32 355, label %sw.bb13
    i32 289, label %sw.bb14
    i32 329, label %sw.bb15
    i32 341, label %sw.bb16
    i32 285, label %sw.bb17
    i32 360, label %sw.bb18
  ], !dbg !7456

sw.bb:                                            ; preds = %if.end6, %if.end6
  %9 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7457
  call void @sony_nc_touchpad_cleanup(%struct.platform_device* %9) #11, !dbg !7459
  br label %sw.epilog, !dbg !7460

sw.bb7:                                           ; preds = %if.end6, %if.end6, %if.end6
  %10 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7461
  call void @sony_nc_battery_care_cleanup(%struct.platform_device* %10) #11, !dbg !7462
  br label %sw.epilog, !dbg !7463

sw.bb8:                                           ; preds = %if.end6, %if.end6
  %11 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7464
  call void @sony_nc_lid_resume_cleanup(%struct.platform_device* %11) #11, !dbg !7465
  br label %sw.epilog, !dbg !7466

sw.bb9:                                           ; preds = %if.end6
  %12 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7467
  call void @sony_nc_thermal_cleanup(%struct.platform_device* %12) #11, !dbg !7468
  br label %sw.epilog, !dbg !7469

sw.bb10:                                          ; preds = %if.end6, %if.end6, %if.end6
  %13 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7470
  call void @sony_nc_gfx_switch_cleanup(%struct.platform_device* %13) #11, !dbg !7471
  br label %sw.epilog, !dbg !7472

sw.bb11:                                          ; preds = %if.end6
  %14 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7473
  call void @sony_nc_highspeed_charging_cleanup(%struct.platform_device* %14) #11, !dbg !7474
  br label %sw.epilog, !dbg !7475

sw.bb12:                                          ; preds = %if.end6, %if.end6
  call void @sony_nc_rfkill_cleanup() #11, !dbg !7476
  br label %sw.epilog, !dbg !7477

sw.bb13:                                          ; preds = %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6
  %15 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7478
  %16 = load i32, i32* %handle, align 4, !dbg !7479
  call void @sony_nc_kbd_backlight_cleanup(%struct.platform_device* %15, i32 %16) #11, !dbg !7480
  br label %sw.epilog, !dbg !7481

sw.bb14:                                          ; preds = %if.end6
  %17 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7482
  call void @sony_nc_lowbatt_cleanup(%struct.platform_device* %17) #11, !dbg !7483
  br label %sw.epilog, !dbg !7484

sw.bb15:                                          ; preds = %if.end6
  %18 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7485
  call void @sony_nc_fanspeed_cleanup(%struct.platform_device* %18) #11, !dbg !7486
  br label %sw.epilog, !dbg !7487

sw.bb16:                                          ; preds = %if.end6
  %19 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7488
  call void @sony_nc_usb_charge_cleanup(%struct.platform_device* %19) #11, !dbg !7489
  br label %sw.epilog, !dbg !7490

sw.bb17:                                          ; preds = %if.end6
  %20 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7491
  call void @sony_nc_panelid_cleanup(%struct.platform_device* %20) #11, !dbg !7492
  br label %sw.epilog, !dbg !7493

sw.bb18:                                          ; preds = %if.end6
  %21 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7494
  call void @sony_nc_smart_conn_cleanup(%struct.platform_device* %21) #11, !dbg !7495
  br label %sw.epilog, !dbg !7496

sw.default:                                       ; preds = %if.end6
  br label %for.inc, !dbg !7497

sw.epilog:                                        ; preds = %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb
  br label %for.inc, !dbg !7498

for.inc:                                          ; preds = %sw.epilog, %sw.default, %if.then5
  %22 = load i32, i32* %i, align 4, !dbg !7499
  %inc = add i32 %22, 1, !dbg !7499
  store i32 %inc, i32* %i, align 4, !dbg !7499
  br label %for.cond, !dbg !7500, !llvm.loop !7501

for.end:                                          ; preds = %for.cond
  %23 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7503
  %call19 = call i32 @sony_nc_handles_cleanup(%struct.platform_device* %23) #11, !dbg !7504
  br label %return, !dbg !7505

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !7505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_handles_cleanup(%struct.platform_device* %pd) #0 !dbg !7506 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  %0 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7509
  %tobool = icmp ne %struct.sony_nc_handles* %0, null, !dbg !7509
  br i1 %tobool, label %if.then, label %if.end3, !dbg !7511

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !7512
  %tobool1 = icmp ne i32 %1, 0, !dbg !7512
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7515

if.then2:                                         ; preds = %if.then
  %2 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !7516
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %2, i32 0, i32 3, !dbg !7517
  %3 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7518
  %devattr = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %3, i32 0, i32 1, !dbg !7519
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %devattr) #11, !dbg !7520
  br label %if.end, !dbg !7520

if.end:                                           ; preds = %if.then2, %if.then
  %4 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !7521
  %5 = bitcast %struct.sony_nc_handles* %4 to i8*, !dbg !7521
  call void @kfree(i8* %5) #11, !dbg !7522
  store %struct.sony_nc_handles* null, %struct.sony_nc_handles** @handles, align 8, !dbg !7523
  br label %if.end3, !dbg !7524

if.end3:                                          ; preds = %if.end, %entry
  ret i32 0, !dbg !7525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_laptop_remove_input() #0 !dbg !7526 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7527, metadata !DIExpression()), !dbg !7531
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !7536, metadata !DIExpression()), !dbg !7538
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6641, metadata !DIExpression()), !dbg !7539
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6651, metadata !DIExpression()), !dbg !7541
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7542, metadata !DIExpression()), !dbg !7543
  %kp = alloca %struct.sony_laptop_keypress, align 8
  %__tmp = alloca %struct.kfifo*, align 8
  %__buf = alloca i8*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp = alloca i32, align 4
  %__tmp9 = alloca %struct.kfifo*, align 8
  %__kfifo10 = alloca %struct.__kfifo*, align 8
  call void @llvm.dbg.declare(metadata %struct.sony_laptop_keypress* %kp, metadata !7544, metadata !DIExpression()), !dbg !7549
  %0 = bitcast %struct.sony_laptop_keypress* %kp to i8*, !dbg !7549
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7549
  store %struct.atomic_t* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 0), %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7550
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7550
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7551
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7552
  %conv.i.i = trunc i64 %4 to i32, !dbg !7552
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !7553
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7554
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7554
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !7554
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7555
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7538
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !7538
  %9 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !7538, !srcloc !7556
  store i8 %9, i8* %c.i.i, align 1, !dbg !7538
  %10 = load i8, i8* %c.i.i, align 1, !dbg !7538
  %tobool.i.i = trunc i8 %10 to i1, !dbg !7538
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !7538
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !7538
  %11 = load i8, i8* %tmp.i.i, align 1, !dbg !7538
  %tobool1.i.i = trunc i8 %11 to i1, !dbg !7538
  br i1 %tobool1.i.i, label %if.end, label %if.then, !dbg !7557

if.then:                                          ; preds = %entry
  br label %return, !dbg !7558

if.end:                                           ; preds = %entry
  %call1 = call i32 @del_timer(%struct.timer_list* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 5)) #11, !dbg !7559
  br label %while.cond, !dbg !7560

while.cond:                                       ; preds = %while.body, %if.end
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmp, metadata !7561, metadata !DIExpression()), !dbg !7563
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmp, align 8, !dbg !7563
  call void @llvm.dbg.declare(metadata i8** %__buf, metadata !7564, metadata !DIExpression()), !dbg !7563
  %12 = bitcast %struct.sony_laptop_keypress* %kp to i8*, !dbg !7563
  store i8* %12, i8** %__buf, align 8, !dbg !7563
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !7565, metadata !DIExpression()), !dbg !7563
  store i64 16, i64* %__n, align 8, !dbg !7563
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !7566, metadata !DIExpression()), !dbg !7563
  store i64 0, i64* %__recsize, align 8, !dbg !7563
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !7568, metadata !DIExpression()), !dbg !7563
  %13 = load %struct.kfifo*, %struct.kfifo** %__tmp, align 8, !dbg !7563
  %14 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %13, i32 0, i32 0, !dbg !7563
  %kfifo = bitcast %union.anon.76* %14 to %struct.__kfifo*, !dbg !7563
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !7563
  %15 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !7563
  %16 = load i8*, i8** %__buf, align 8, !dbg !7563
  %17 = load i64, i64* %__n, align 8, !dbg !7563
  %conv = trunc i64 %17 to i32, !dbg !7563
  %call2 = call i32 @__kfifo_out(%struct.__kfifo* %15, i8* %16, i32 %conv) #11, !dbg !7563
  store i32 %call2, i32* %tmp, align 4, !dbg !7563
  %18 = load i32, i32* %tmp, align 4, !dbg !7563
  %call3 = call i32 @__kfifo_uint_must_check_helper(i32 %18) #11, !dbg !7569
  %conv4 = zext i32 %call3 to i64, !dbg !7569
  %cmp = icmp eq i64 %conv4, 16, !dbg !7570
  br i1 %cmp, label %while.body, label %while.end, !dbg !7560

while.body:                                       ; preds = %while.cond
  %dev = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !7571
  %19 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7571
  %key = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 1, !dbg !7573
  %20 = load i32, i32* %key, align 8, !dbg !7573
  call void @input_report_key(%struct.input_dev* %19, i32 %20, i32 0) #11, !dbg !7574
  %dev6 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !7575
  %21 = load %struct.input_dev*, %struct.input_dev** %dev6, align 8, !dbg !7575
  call void @input_sync(%struct.input_dev* %21) #11, !dbg !7576
  br label %while.cond, !dbg !7560, !llvm.loop !7577

while.end:                                        ; preds = %while.cond
  %22 = load %struct.input_dev*, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 2), align 8, !dbg !7579
  call void @input_unregister_device(%struct.input_dev* %22) #11, !dbg !7580
  store %struct.input_dev* null, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 2), align 8, !dbg !7581
  %23 = load %struct.input_dev*, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 1), align 8, !dbg !7582
  %tobool = icmp ne %struct.input_dev* %23, null, !dbg !7584
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !7585

if.then7:                                         ; preds = %while.end
  %24 = load %struct.input_dev*, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 1), align 8, !dbg !7586
  call void @input_unregister_device(%struct.input_dev* %24) #11, !dbg !7588
  store %struct.input_dev* null, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 1), align 8, !dbg !7589
  br label %if.end8, !dbg !7590

if.end8:                                          ; preds = %if.then7, %while.end
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmp9, metadata !7591, metadata !DIExpression()), !dbg !7593
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmp9, align 8, !dbg !7593
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo10, metadata !7594, metadata !DIExpression()), !dbg !7593
  %25 = load %struct.kfifo*, %struct.kfifo** %__tmp9, align 8, !dbg !7593
  %26 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %25, i32 0, i32 0, !dbg !7593
  %kfifo11 = bitcast %union.anon.76* %26 to %struct.__kfifo*, !dbg !7593
  store %struct.__kfifo* %kfifo11, %struct.__kfifo** %__kfifo10, align 8, !dbg !7593
  %27 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo10, align 8, !dbg !7595
  call void @__kfifo_free(%struct.__kfifo* %27) #11, !dbg !7595
  br label %return, !dbg !7597

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !7597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_pf_remove() #0 !dbg !7598 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7527, metadata !DIExpression()), !dbg !7599
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !7536, metadata !DIExpression()), !dbg !7603
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6641, metadata !DIExpression()), !dbg !7604
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6651, metadata !DIExpression()), !dbg !7606
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7542, metadata !DIExpression()), !dbg !7607
  store %struct.atomic_t* @sony_pf_users, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7608
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !7608
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7609
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !7610
  %conv.i.i = trunc i64 %3 to i32, !dbg !7610
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %2, i32 %conv.i.i) #13, !dbg !7611
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7612
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7612
  call void @kcsan_check_access(i8* %4, i64 %5, i32 7) #13, !dbg !7612
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7613
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7603
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !7603
  %8 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !7603, !srcloc !7556
  store i8 %8, i8* %c.i.i, align 1, !dbg !7603
  %9 = load i8, i8* %c.i.i, align 1, !dbg !7603
  %tobool.i.i = trunc i8 %9 to i1, !dbg !7603
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !7603
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !7603
  %10 = load i8, i8* %tmp.i.i, align 1, !dbg !7603
  %tobool1.i.i = trunc i8 %10 to i1, !dbg !7603
  br i1 %tobool1.i.i, label %if.end, label %if.then, !dbg !7614

if.then:                                          ; preds = %entry
  br label %return, !dbg !7615

if.end:                                           ; preds = %entry
  %11 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !7616
  call void @platform_device_unregister(%struct.platform_device* %11) #11, !dbg !7617
  call void @platform_driver_unregister(%struct.platform_driver* @sony_pf_driver) #11, !dbg !7618
  br label %return, !dbg !7619

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_rfkill_cleanup() #0 !dbg !7620 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7621, metadata !DIExpression()), !dbg !7622
  store i32 0, i32* %i, align 4, !dbg !7623
  br label %for.cond, !dbg !7625

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7626
  %cmp = icmp slt i32 %0, 4, !dbg !7628
  br i1 %cmp, label %for.body, label %for.end, !dbg !7629

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !7630
  %idxprom = sext i32 %1 to i64, !dbg !7633
  %arrayidx = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom, !dbg !7633
  %2 = load %struct.rfkill*, %struct.rfkill** %arrayidx, align 8, !dbg !7633
  %tobool = icmp ne %struct.rfkill* %2, null, !dbg !7633
  br i1 %tobool, label %if.then, label %if.end, !dbg !7634

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !7635
  %idxprom1 = sext i32 %3 to i64, !dbg !7637
  %arrayidx2 = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom1, !dbg !7637
  %4 = load %struct.rfkill*, %struct.rfkill** %arrayidx2, align 8, !dbg !7637
  call void @rfkill_unregister(%struct.rfkill* %4) #11, !dbg !7638
  %5 = load i32, i32* %i, align 4, !dbg !7639
  %idxprom3 = sext i32 %5 to i64, !dbg !7640
  %arrayidx4 = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom3, !dbg !7640
  %6 = load %struct.rfkill*, %struct.rfkill** %arrayidx4, align 8, !dbg !7640
  call void @rfkill_destroy(%struct.rfkill* %6) #11, !dbg !7641
  br label %if.end, !dbg !7642

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7643

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !7644
  %inc = add i32 %7, 1, !dbg !7644
  store i32 %inc, i32* %i, align 4, !dbg !7644
  br label %for.cond, !dbg !7645, !llvm.loop !7646

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7648
}

; Function Attrs: noredzone
declare dso_local i32 @__platform_driver_register(%struct.platform_driver*, %struct.module*) #2

; Function Attrs: noredzone
declare dso_local %struct.platform_device* @platform_device_alloc(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @platform_device_add(%struct.platform_device*) #2

; Function Attrs: noredzone
declare dso_local void @platform_device_put(%struct.platform_device*) #2

; Function Attrs: noredzone
declare dso_local void @platform_driver_unregister(%struct.platform_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7649 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  ret i1 true, !dbg !7657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7658 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7662, metadata !DIExpression()), !dbg !7663
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7664, metadata !DIExpression()), !dbg !7665
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7666, metadata !DIExpression()), !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_object_info(i8*, %struct.acpi_device_info**) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__kfifo_int_must_check_helper(i32 %val) #0 !dbg !7669 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7670, metadata !DIExpression()), !dbg !7671
  %0 = load i32, i32* %val.addr, align 4, !dbg !7672
  ret i32 %0, !dbg !7673
}

; Function Attrs: noredzone
declare dso_local i32 @__kfifo_alloc(%struct.__kfifo*, i32, i64, i32) #2

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_sony_laptop_release_key(%struct.timer_list* %unused) #0 !dbg !7674 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7675, metadata !DIExpression()), !dbg !7680
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !7683, metadata !DIExpression()), !dbg !7687
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7689, metadata !DIExpression()), !dbg !7690
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6795, metadata !DIExpression()), !dbg !7691
  %unused.addr = alloca %struct.timer_list*, align 8
  %kp = alloca %struct.sony_laptop_keypress, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__tmp = alloca %struct.kfifo*, align 8
  %__buf = alloca i8*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp19 = alloca i32, align 4
  %__tmpl = alloca %struct.kfifo*, align 8
  %tmp27 = alloca i32, align 4
  store %struct.timer_list* %unused, %struct.timer_list** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %unused.addr, metadata !7698, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.declare(metadata %struct.sony_laptop_keypress* %kp, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7702, metadata !DIExpression()), !dbg !7703
  br label %do.body, !dbg !7704

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7705

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7706, metadata !DIExpression()), !dbg !7708
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7709, metadata !DIExpression()), !dbg !7708
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7708
  %conv = zext i1 %cmp to i32, !dbg !7708
  store i32 1, i32* %tmp, align 4, !dbg !7708
  %0 = load i32, i32* %tmp, align 4, !dbg !7708
  br label %do.body2, !dbg !7710

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7711

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7712

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7714, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7718, metadata !DIExpression()), !dbg !7717
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7717
  %conv8 = zext i1 %cmp7 to i32, !dbg !7717
  store i32 1, i32* %tmp9, align 4, !dbg !7717
  %1 = load i32, i32* %tmp9, align 4, !dbg !7717
  %call = call i64 @arch_local_irq_save() #11, !dbg !7719
  store i64 %call, i64* %flags, align 8, !dbg !7719
  br label %do.end, !dbg !7719

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7712

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7711

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7720, !srcloc !7721
  br label %do.body12, !dbg !7720

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 4), %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7722
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !7723
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !7723
  br label %do.end14, !dbg !7724

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7720

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7711

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7710

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7705

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmp, metadata !7725, metadata !DIExpression()), !dbg !7728
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmp, align 8, !dbg !7728
  call void @llvm.dbg.declare(metadata i8** %__buf, metadata !7729, metadata !DIExpression()), !dbg !7728
  %4 = bitcast %struct.sony_laptop_keypress* %kp to i8*, !dbg !7728
  store i8* %4, i8** %__buf, align 8, !dbg !7728
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !7730, metadata !DIExpression()), !dbg !7728
  store i64 16, i64* %__n, align 8, !dbg !7728
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !7731, metadata !DIExpression()), !dbg !7728
  store i64 0, i64* %__recsize, align 8, !dbg !7728
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !7732, metadata !DIExpression()), !dbg !7728
  %5 = load %struct.kfifo*, %struct.kfifo** %__tmp, align 8, !dbg !7728
  %6 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %5, i32 0, i32 0, !dbg !7728
  %kfifo = bitcast %union.anon.76* %6 to %struct.__kfifo*, !dbg !7728
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !7728
  %7 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !7728
  %8 = load i8*, i8** %__buf, align 8, !dbg !7728
  %9 = load i64, i64* %__n, align 8, !dbg !7728
  %conv20 = trunc i64 %9 to i32, !dbg !7728
  %call21 = call i32 @__kfifo_out(%struct.__kfifo* %7, i8* %8, i32 %conv20) #11, !dbg !7728
  store i32 %call21, i32* %tmp19, align 4, !dbg !7728
  %10 = load i32, i32* %tmp19, align 4, !dbg !7728
  %call22 = call i32 @__kfifo_uint_must_check_helper(i32 %10) #11, !dbg !7733
  %conv23 = zext i32 %call22 to i64, !dbg !7733
  %cmp24 = icmp eq i64 %conv23, 16, !dbg !7734
  br i1 %cmp24, label %if.then, label %if.end, !dbg !7735

if.then:                                          ; preds = %do.end18
  %dev = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !7736
  %11 = load %struct.input_dev*, %struct.input_dev** %dev, align 8, !dbg !7736
  %key = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 1, !dbg !7738
  %12 = load i32, i32* %key, align 8, !dbg !7738
  call void @input_report_key(%struct.input_dev* %11, i32 %12, i32 0) #11, !dbg !7739
  %dev26 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !7740
  %13 = load %struct.input_dev*, %struct.input_dev** %dev26, align 8, !dbg !7740
  call void @input_sync(%struct.input_dev* %13) #11, !dbg !7741
  br label %if.end, !dbg !7742

if.end:                                           ; preds = %if.then, %do.end18
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmpl, metadata !7743, metadata !DIExpression()), !dbg !7745
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmpl, align 8, !dbg !7745
  %14 = load %struct.kfifo*, %struct.kfifo** %__tmpl, align 8, !dbg !7745
  %15 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %14, i32 0, i32 0, !dbg !7745
  %kfifo28 = bitcast %union.anon.76* %15 to %struct.__kfifo*, !dbg !7745
  %in = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo28, i32 0, i32 0, !dbg !7745
  %16 = load i32, i32* %in, align 8, !dbg !7745
  %17 = load %struct.kfifo*, %struct.kfifo** %__tmpl, align 8, !dbg !7745
  %18 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %17, i32 0, i32 0, !dbg !7745
  %kfifo29 = bitcast %union.anon.76* %18 to %struct.__kfifo*, !dbg !7745
  %out = getelementptr inbounds %struct.__kfifo, %struct.__kfifo* %kfifo29, i32 0, i32 1, !dbg !7745
  %19 = load i32, i32* %out, align 4, !dbg !7745
  %sub = sub i32 %16, %19, !dbg !7745
  store i32 %sub, i32* %tmp27, align 4, !dbg !7745
  %20 = load i32, i32* %tmp27, align 4, !dbg !7745
  %cmp30 = icmp ne i32 %20, 0, !dbg !7746
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !7747

if.then32:                                        ; preds = %if.end
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !7748
  store i32 10, i32* %m.addr.i, align 4
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !7749
  %23 = call i1 @llvm.is.constant.i32(i32 %22) #7, !dbg !7751
  br i1 %23, label %if.then.i, label %if.else.i, !dbg !7752

if.then.i:                                        ; preds = %if.then32
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !7753
  %cmp.i = icmp slt i32 %24, 0, !dbg !7756
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7757

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7758
  br label %msecs_to_jiffies.exit, !dbg !7758

if.end.i:                                         ; preds = %if.then.i
  %25 = load i32, i32* %m.addr.i, align 4, !dbg !7759
  %call.i = call i64 @_msecs_to_jiffies(i32 %25) #13, !dbg !7760
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7761
  br label %msecs_to_jiffies.exit, !dbg !7761

if.else.i:                                        ; preds = %if.then32
  %26 = load i32, i32* %m.addr.i, align 4, !dbg !7762
  %call2.i = call i64 @__msecs_to_jiffies(i32 %26) #13, !dbg !7764
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7765
  br label %msecs_to_jiffies.exit, !dbg !7765

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %27 = load i64, i64* %retval.i, align 8, !dbg !7766
  %add = add i64 %21, %27, !dbg !7767
  %call34 = call i32 @mod_timer(%struct.timer_list* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 5), i64 %add) #11, !dbg !7768
  br label %if.end35, !dbg !7768

if.end35:                                         ; preds = %msecs_to_jiffies.exit, %if.end
  %28 = load i64, i64* %flags, align 8, !dbg !7769
  store %struct.spinlock* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 4), %struct.spinlock** %lock.addr.i36, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !299, metadata !7770, metadata !DIExpression()) #7, !dbg !7773
  call void @llvm.dbg.declare(metadata !299, metadata !7774, metadata !DIExpression()) #7, !dbg !7773
  store i32 1, i32* %tmp.i, align 4, !dbg !7773
  %29 = load i32, i32* %tmp.i, align 4, !dbg !7773
  call void @llvm.dbg.declare(metadata !299, metadata !7775, metadata !DIExpression()) #7, !dbg !7780
  call void @llvm.dbg.declare(metadata !299, metadata !7781, metadata !DIExpression()) #7, !dbg !7780
  store i32 1, i32* %tmp8.i, align 4, !dbg !7780
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !7780
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !7782
  call void @arch_local_irq_restore(i64 %31) #13, !dbg !7782
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7783, !srcloc !7785
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !7786
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !7786
  %rlock.i37 = bitcast %union.anon.0* %33 to %struct.raw_spinlock*, !dbg !7786
  ret void, !dbg !7788
}

; Function Attrs: noredzone
declare dso_local %struct.input_dev* @input_allocate_device() #2

; Function Attrs: noredzone
declare dso_local void @input_set_capability(%struct.input_dev*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !7789 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7795, metadata !DIExpression()), !dbg !7798
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7800, metadata !DIExpression()), !dbg !7801
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7802, metadata !DIExpression()), !dbg !7804
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7806, metadata !DIExpression()), !dbg !7807
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7808, metadata !DIExpression()), !dbg !7809
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7810, metadata !DIExpression()), !dbg !7811
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7812
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7813
  %div = sdiv i64 %1, 64, !dbg !7813
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7814
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7812
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7815
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7816
  %conv.i = trunc i64 %4 to i32, !dbg !7816
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7817
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7818
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7818
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !7818
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7819
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7820
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7821
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7822
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !7823, !srcloc !7824
  ret void, !dbg !7825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !7826 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7827, metadata !DIExpression()), !dbg !7829
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7831, metadata !DIExpression()), !dbg !7832
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7802, metadata !DIExpression()), !dbg !7833
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7806, metadata !DIExpression()), !dbg !7835
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7836, metadata !DIExpression()), !dbg !7837
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7838, metadata !DIExpression()), !dbg !7839
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7840
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7841
  %div = sdiv i64 %1, 64, !dbg !7841
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7842
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7840
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7843
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7844
  %conv.i = trunc i64 %4 to i32, !dbg !7844
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7845
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7846
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7846
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !7846
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7847
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7848
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7849
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7850
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !7851, !srcloc !7852
  ret void, !dbg !7853
}

; Function Attrs: noredzone
declare dso_local i32 @input_register_device(%struct.input_dev*) #2

; Function Attrs: noredzone
declare dso_local void @input_free_device(%struct.input_dev*) #2

; Function Attrs: noredzone
declare dso_local void @input_unregister_device(%struct.input_dev*) #2

; Function Attrs: noredzone
declare dso_local void @__kfifo_free(%struct.__kfifo*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7854 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7857, metadata !DIExpression()), !dbg !7858
  %call = call i64 @arch_local_save_flags() #11, !dbg !7859
  store i64 %call, i64* %f, align 8, !dbg !7860
  call void @arch_local_irq_disable() #11, !dbg !7861
  %0 = load i64, i64* %f, align 8, !dbg !7862
  ret i64 %0, !dbg !7863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__kfifo_uint_must_check_helper(i32 %val) #0 !dbg !7864 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7867, metadata !DIExpression()), !dbg !7868
  %0 = load i32, i32* %val.addr, align 4, !dbg !7869
  ret i32 %0, !dbg !7870
}

; Function Attrs: noredzone
declare dso_local i32 @__kfifo_out(%struct.__kfifo*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_key(%struct.input_dev* %dev, i32 %code, i32 %value) #0 !dbg !7871 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7880
  %1 = load i32, i32* %code.addr, align 4, !dbg !7881
  %2 = load i32, i32* %value.addr, align 4, !dbg !7882
  %tobool = icmp ne i32 %2, 0, !dbg !7883
  %lnot = xor i1 %tobool, true, !dbg !7883
  %lnot1 = xor i1 %lnot, true, !dbg !7884
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7884
  call void @input_event(%struct.input_dev* %0, i32 1, i32 %1, i32 %lnot.ext) #11, !dbg !7885
  ret void, !dbg !7886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_sync(%struct.input_dev* %dev) #0 !dbg !7887 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7888, metadata !DIExpression()), !dbg !7889
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7890
  call void @input_event(%struct.input_dev* %0, i32 0, i32 0, i32 0) #11, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7893 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7894, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7897, metadata !DIExpression()), !dbg !7896
  %0 = load i64, i64* %__edi, align 8, !dbg !7896
  store i64 %0, i64* %__edi, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7898, metadata !DIExpression()), !dbg !7896
  %1 = load i64, i64* %__esi, align 8, !dbg !7896
  store i64 %1, i64* %__esi, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7899, metadata !DIExpression()), !dbg !7896
  %2 = load i64, i64* %__edx, align 8, !dbg !7896
  store i64 %2, i64* %__edx, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7900, metadata !DIExpression()), !dbg !7896
  %3 = load i64, i64* %__ecx, align 8, !dbg !7896
  store i64 %3, i64* %__ecx, align 8, !dbg !7896
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7901, metadata !DIExpression()), !dbg !7896
  %4 = load i64, i64* %__eax, align 8, !dbg !7896
  store i64 %4, i64* %__eax, align 8, !dbg !7896
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7896
  %6 = call i64 @llvm.read_register.i64(metadata !5644), !dbg !7902
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !7902, !srcloc !7905
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7902
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7902
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7902
  call void @llvm.write_register.i64(metadata !5644, i64 %asmresult1), !dbg !7902
  %8 = load i64, i64* %__eax, align 8, !dbg !7902
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7906, metadata !DIExpression()), !dbg !7908
  store i64 -1, i64* %__mask, align 8, !dbg !7908
  %9 = load i64, i64* %__mask, align 8, !dbg !7908
  store i64 %9, i64* %tmp, align 8, !dbg !7908
  %10 = load i64, i64* %tmp, align 8, !dbg !7908
  %and = and i64 %8, %10, !dbg !7902
  store i64 %and, i64* %__ret, align 8, !dbg !7902
  %11 = load i64, i64* %__ret, align 8, !dbg !7896
  store i64 %11, i64* %tmp2, align 8, !dbg !7909
  %12 = load i64, i64* %tmp2, align 8, !dbg !7896
  ret i64 %12, !dbg !7910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7911 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7912, metadata !DIExpression()), !dbg !7914
  %0 = load i64, i64* %__edi, align 8, !dbg !7914
  store i64 %0, i64* %__edi, align 8, !dbg !7914
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7915, metadata !DIExpression()), !dbg !7914
  %1 = load i64, i64* %__esi, align 8, !dbg !7914
  store i64 %1, i64* %__esi, align 8, !dbg !7914
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7916, metadata !DIExpression()), !dbg !7914
  %2 = load i64, i64* %__edx, align 8, !dbg !7914
  store i64 %2, i64* %__edx, align 8, !dbg !7914
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7917, metadata !DIExpression()), !dbg !7914
  %3 = load i64, i64* %__ecx, align 8, !dbg !7914
  store i64 %3, i64* %__ecx, align 8, !dbg !7914
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7918, metadata !DIExpression()), !dbg !7914
  %4 = load i64, i64* %__eax, align 8, !dbg !7914
  store i64 %4, i64* %__eax, align 8, !dbg !7914
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7914
  %6 = call i64 @llvm.read_register.i64(metadata !5644), !dbg !7914
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !7914, !srcloc !7919
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7914
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7914
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7914
  call void @llvm.write_register.i64(metadata !5644, i64 %asmresult1), !dbg !7914
  ret void, !dbg !7920
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noredzone
declare dso_local void @input_event(%struct.input_dev*, i32, i32, i32) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !7921 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !7922, metadata !DIExpression()), !dbg !7923
  %0 = load i32, i32* %m.addr, align 4, !dbg !7924
  %conv = zext i32 %0 to i64, !dbg !7924
  %add = add i64 %conv, 4, !dbg !7925
  %sub = sub i64 %add, 1, !dbg !7926
  %div = sdiv i64 %sub, 4, !dbg !7927
  ret i64 %div, !dbg !7928
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7929 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7934, metadata !DIExpression()), !dbg !7936
  %0 = load i64, i64* %__edi, align 8, !dbg !7936
  store i64 %0, i64* %__edi, align 8, !dbg !7936
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7937, metadata !DIExpression()), !dbg !7936
  %1 = load i64, i64* %__esi, align 8, !dbg !7936
  store i64 %1, i64* %__esi, align 8, !dbg !7936
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7938, metadata !DIExpression()), !dbg !7936
  %2 = load i64, i64* %__edx, align 8, !dbg !7936
  store i64 %2, i64* %__edx, align 8, !dbg !7936
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7939, metadata !DIExpression()), !dbg !7936
  %3 = load i64, i64* %__ecx, align 8, !dbg !7936
  store i64 %3, i64* %__ecx, align 8, !dbg !7936
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7940, metadata !DIExpression()), !dbg !7936
  %4 = load i64, i64* %__eax, align 8, !dbg !7936
  store i64 %4, i64* %__eax, align 8, !dbg !7936
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7936
  %6 = call i64 @llvm.read_register.i64(metadata !5644), !dbg !7936
  %7 = load i64, i64* %f.addr, align 8, !dbg !7936
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !7936, !srcloc !7941
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7936
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7936
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7936
  call void @llvm.write_register.i64(metadata !5644, i64 %asmresult1), !dbg !7936
  ret void, !dbg !7942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_buffer_call(i8* %handle, i8* %name, i64* %value, i8* %buffer, i64 %buflen) #0 !dbg !7943 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %value.addr = alloca i64*, align 8
  %buffer.addr = alloca i8*, align 8
  %buflen.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %len = alloca i64, align 8
  %object = alloca %union.acpi_object*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !7946, metadata !DIExpression()), !dbg !7947
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  store i64* %value, i64** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  store i64 %buflen, i64* %buflen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buflen.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7956, metadata !DIExpression()), !dbg !7957
  store i32 0, i32* %ret, align 4, !dbg !7957
  call void @llvm.dbg.declare(metadata i64* %len, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata %union.acpi_object** %object, metadata !7960, metadata !DIExpression()), !dbg !7961
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !7962
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7963
  %2 = load i64*, i64** %value.addr, align 8, !dbg !7964
  %call = call %union.acpi_object* @__call_snc_method(i8* %0, i8* %1, i64* %2) #11, !dbg !7965
  store %union.acpi_object* %call, %union.acpi_object** %object, align 8, !dbg !7961
  %3 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !7966
  %tobool = icmp ne %union.acpi_object* %3, null, !dbg !7966
  br i1 %tobool, label %if.end, label %if.then, !dbg !7968

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7969
  br label %return, !dbg !7969

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !7970
  %tobool1 = icmp ne i8* %4, null, !dbg !7970
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !7972

if.then2:                                         ; preds = %if.end
  br label %if.end28, !dbg !7973

if.else:                                          ; preds = %if.end
  %5 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !7975
  %type = bitcast %union.acpi_object* %5 to i32*, !dbg !7977
  %6 = load i32, i32* %type, align 8, !dbg !7977
  %cmp = icmp eq i32 %6, 3, !dbg !7978
  br i1 %cmp, label %if.then3, label %if.else11, !dbg !7979

if.then3:                                         ; preds = %if.else
  %7 = load i64, i64* %buflen.addr, align 8, !dbg !7980
  %8 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !7980
  %buffer4 = bitcast %union.acpi_object* %8 to %struct.anon.68*, !dbg !7980
  %length = getelementptr inbounds %struct.anon.68, %struct.anon.68* %buffer4, i32 0, i32 1, !dbg !7980
  %9 = load i32, i32* %length, align 4, !dbg !7980
  %conv = zext i32 %9 to i64, !dbg !7980
  %cmp5 = icmp ugt i64 %7, %conv, !dbg !7980
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !7980

cond.true:                                        ; preds = %if.then3
  %10 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !7980
  %buffer7 = bitcast %union.acpi_object* %10 to %struct.anon.68*, !dbg !7980
  %length8 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %buffer7, i32 0, i32 1, !dbg !7980
  %11 = load i32, i32* %length8, align 4, !dbg !7980
  %conv9 = zext i32 %11 to i64, !dbg !7980
  br label %cond.end, !dbg !7980

cond.false:                                       ; preds = %if.then3
  %12 = load i64, i64* %buflen.addr, align 8, !dbg !7980
  br label %cond.end, !dbg !7980

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv9, %cond.true ], [ %12, %cond.false ], !dbg !7980
  store i64 %cond, i64* %len, align 8, !dbg !7982
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !7983
  %14 = load i64, i64* %buflen.addr, align 8, !dbg !7984
  call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 %14, i1 false), !dbg !7985
  %15 = load i8*, i8** %buffer.addr, align 8, !dbg !7986
  %16 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !7987
  %buffer10 = bitcast %union.acpi_object* %16 to %struct.anon.68*, !dbg !7988
  %pointer = getelementptr inbounds %struct.anon.68, %struct.anon.68* %buffer10, i32 0, i32 2, !dbg !7989
  %17 = load i8*, i8** %pointer, align 8, !dbg !7989
  %18 = load i64, i64* %len, align 8, !dbg !7990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %17, i64 %18, i1 false), !dbg !7991
  br label %if.end27, !dbg !7992

if.else11:                                        ; preds = %if.else
  %19 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !7993
  %type12 = bitcast %union.acpi_object* %19 to i32*, !dbg !7995
  %20 = load i32, i32* %type12, align 8, !dbg !7995
  %cmp13 = icmp eq i32 %20, 1, !dbg !7996
  br i1 %cmp13, label %if.then15, label %if.else23, !dbg !7997

if.then15:                                        ; preds = %if.else11
  %21 = load i64, i64* %buflen.addr, align 8, !dbg !7998
  %cmp16 = icmp ugt i64 %21, 8, !dbg !7998
  br i1 %cmp16, label %cond.true18, label %cond.false19, !dbg !7998

cond.true18:                                      ; preds = %if.then15
  br label %cond.end20, !dbg !7998

cond.false19:                                     ; preds = %if.then15
  %22 = load i64, i64* %buflen.addr, align 8, !dbg !7998
  br label %cond.end20, !dbg !7998

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi i64 [ 8, %cond.true18 ], [ %22, %cond.false19 ], !dbg !7998
  store i64 %cond21, i64* %len, align 8, !dbg !8000
  %23 = load i8*, i8** %buffer.addr, align 8, !dbg !8001
  %24 = load i64, i64* %buflen.addr, align 8, !dbg !8002
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 %24, i1 false), !dbg !8003
  %25 = load i8*, i8** %buffer.addr, align 8, !dbg !8004
  %26 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !8005
  %integer = bitcast %union.acpi_object* %26 to %struct.anon.66*, !dbg !8006
  %value22 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %integer, i32 0, i32 1, !dbg !8007
  %27 = bitcast i64* %value22 to i8*, !dbg !8008
  %28 = load i64, i64* %len, align 8, !dbg !8009
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 8 %27, i64 %28, i1 false), !dbg !8008
  br label %if.end26, !dbg !8010

if.else23:                                        ; preds = %if.else11
  %29 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !8011
  %type24 = bitcast %union.acpi_object* %29 to i32*, !dbg !8011
  %30 = load i32, i32* %type24, align 8, !dbg !8011
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.24, i64 0, i64 0), i32 %30) #12, !dbg !8011
  store i32 -22, i32* %ret, align 4, !dbg !8013
  br label %if.end26

if.end26:                                         ; preds = %if.else23, %cond.end20
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %cond.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then2
  %31 = load %union.acpi_object*, %union.acpi_object** %object, align 8, !dbg !8014
  %32 = bitcast %union.acpi_object* %31 to i8*, !dbg !8014
  call void @kfree(i8* %32) #11, !dbg !8015
  %33 = load i32, i32* %ret, align 4, !dbg !8016
  store i32 %33, i32* %retval, align 4, !dbg !8017
  br label %return, !dbg !8017

return:                                           ; preds = %if.end28, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !8018
  ret i32 %34, !dbg !8018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %union.acpi_object* @__call_snc_method(i8* %handle, i8* %method, i64* %value) #0 !dbg !8019 {
entry:
  %retval = alloca %union.acpi_object*, align 8
  %handle.addr = alloca i8*, align 8
  %method.addr = alloca i8*, align 8
  %value.addr = alloca i64*, align 8
  %result = alloca %union.acpi_object*, align 8
  %output = alloca %struct.acpi_buffer, align 8
  %status = alloca i32, align 4
  %params = alloca %struct.acpi_object_list, align 8
  %in = alloca %union.acpi_object, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  store i8* %method, i8** %method.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %method.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  store i64* %value, i64** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value.addr, metadata !8026, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.declare(metadata %union.acpi_object** %result, metadata !8028, metadata !DIExpression()), !dbg !8029
  store %union.acpi_object* null, %union.acpi_object** %result, align 8, !dbg !8029
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %output, metadata !8030, metadata !DIExpression()), !dbg !8036
  %0 = bitcast %struct.acpi_buffer* %output to i8*, !dbg !8036
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.acpi_buffer* @__const.__call_snc_method.output to i8*), i64 16, i1 false), !dbg !8036
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8037, metadata !DIExpression()), !dbg !8038
  %1 = load i64*, i64** %value.addr, align 8, !dbg !8039
  %tobool = icmp ne i64* %1, null, !dbg !8039
  br i1 %tobool, label %if.then, label %if.else, !dbg !8041

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.acpi_object_list* %params, metadata !8042, metadata !DIExpression()), !dbg !8048
  call void @llvm.dbg.declare(metadata %union.acpi_object* %in, metadata !8049, metadata !DIExpression()), !dbg !8050
  %type = bitcast %union.acpi_object* %in to i32*, !dbg !8051
  store i32 1, i32* %type, align 8, !dbg !8052
  %2 = load i64*, i64** %value.addr, align 8, !dbg !8053
  %3 = load i64, i64* %2, align 8, !dbg !8054
  %integer = bitcast %union.acpi_object* %in to %struct.anon.66*, !dbg !8055
  %value1 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %integer, i32 0, i32 1, !dbg !8056
  store i64 %3, i64* %value1, align 8, !dbg !8057
  %count = getelementptr inbounds %struct.acpi_object_list, %struct.acpi_object_list* %params, i32 0, i32 0, !dbg !8058
  store i32 1, i32* %count, align 8, !dbg !8059
  %pointer = getelementptr inbounds %struct.acpi_object_list, %struct.acpi_object_list* %params, i32 0, i32 1, !dbg !8060
  store %union.acpi_object* %in, %union.acpi_object** %pointer, align 8, !dbg !8061
  %4 = load i8*, i8** %handle.addr, align 8, !dbg !8062
  %5 = load i8*, i8** %method.addr, align 8, !dbg !8063
  %call = call i32 @acpi_evaluate_object(i8* %4, i8* %5, %struct.acpi_object_list* %params, %struct.acpi_buffer* %output) #11, !dbg !8064
  store i32 %call, i32* %status, align 4, !dbg !8065
  br label %do.body, !dbg !8066

do.body:                                          ; preds = %if.then
  %6 = load i32, i32* @debug, align 4, !dbg !8067
  %tobool2 = icmp ne i32 %6, 0, !dbg !8067
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8070

if.then3:                                         ; preds = %do.body
  %7 = load i8*, i8** %method.addr, align 8, !dbg !8067
  %8 = load i64*, i64** %value.addr, align 8, !dbg !8067
  %9 = load i64, i64* %8, align 8, !dbg !8067
  %shr = lshr i64 %9, 32, !dbg !8067
  %conv = trunc i64 %shr to i32, !dbg !8067
  %10 = load i64*, i64** %value.addr, align 8, !dbg !8067
  %11 = load i64, i64* %10, align 8, !dbg !8067
  %conv4 = trunc i64 %11 to i32, !dbg !8067
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.25, i64 0, i64 0), i8* %7, i32 %conv, i32 %conv4) #12, !dbg !8067
  br label %if.end, !dbg !8067

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !8070

do.end:                                           ; preds = %if.end
  br label %if.end13, !dbg !8071

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %handle.addr, align 8, !dbg !8072
  %13 = load i8*, i8** %method.addr, align 8, !dbg !8074
  %call6 = call i32 @acpi_evaluate_object(i8* %12, i8* %13, %struct.acpi_object_list* null, %struct.acpi_buffer* %output) #11, !dbg !8075
  store i32 %call6, i32* %status, align 4, !dbg !8076
  br label %do.body7, !dbg !8077

do.body7:                                         ; preds = %if.else
  %14 = load i32, i32* @debug, align 4, !dbg !8078
  %tobool8 = icmp ne i32 %14, 0, !dbg !8078
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !8081

if.then9:                                         ; preds = %do.body7
  %15 = load i8*, i8** %method.addr, align 8, !dbg !8078
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.26, i64 0, i64 0), i8* %15) #12, !dbg !8078
  br label %if.end11, !dbg !8078

if.end11:                                         ; preds = %if.then9, %do.body7
  br label %do.end12, !dbg !8081

do.end12:                                         ; preds = %if.end11
  br label %if.end13

if.end13:                                         ; preds = %do.end12, %do.end
  %16 = load i32, i32* %status, align 4, !dbg !8082
  %tobool14 = icmp ne i32 %16, 0, !dbg !8082
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !8084

if.then15:                                        ; preds = %if.end13
  %17 = load i8*, i8** %method.addr, align 8, !dbg !8085
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0), i8* %17) #12, !dbg !8085
  store %union.acpi_object* null, %union.acpi_object** %retval, align 8, !dbg !8087
  br label %return, !dbg !8087

if.end17:                                         ; preds = %if.end13
  %pointer18 = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %output, i32 0, i32 1, !dbg !8088
  %18 = load i8*, i8** %pointer18, align 8, !dbg !8088
  %19 = bitcast i8* %18 to %union.acpi_object*, !dbg !8089
  store %union.acpi_object* %19, %union.acpi_object** %result, align 8, !dbg !8090
  %20 = load %union.acpi_object*, %union.acpi_object** %result, align 8, !dbg !8091
  %tobool19 = icmp ne %union.acpi_object* %20, null, !dbg !8091
  br i1 %tobool19, label %if.end27, label %if.then20, !dbg !8093

if.then20:                                        ; preds = %if.end17
  br label %do.body21, !dbg !8094

do.body21:                                        ; preds = %if.then20
  %21 = load i32, i32* @debug, align 4, !dbg !8095
  %tobool22 = icmp ne i32 %21, 0, !dbg !8095
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8098

if.then23:                                        ; preds = %do.body21
  %22 = load i8*, i8** %method.addr, align 8, !dbg !8095
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.28, i64 0, i64 0), i8* %22) #12, !dbg !8095
  br label %if.end25, !dbg !8095

if.end25:                                         ; preds = %if.then23, %do.body21
  br label %do.end26, !dbg !8098

do.end26:                                         ; preds = %if.end25
  br label %if.end27, !dbg !8098

if.end27:                                         ; preds = %do.end26, %if.end17
  %23 = load %union.acpi_object*, %union.acpi_object** %result, align 8, !dbg !8099
  store %union.acpi_object* %23, %union.acpi_object** %retval, align 8, !dbg !8100
  br label %return, !dbg !8100

return:                                           ; preds = %if.end27, %if.then15
  %24 = load %union.acpi_object*, %union.acpi_object** %retval, align 8, !dbg !8101
  ret %union.acpi_object* %24, !dbg !8101
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_object(i8*, i8*, %struct.acpi_object_list*, %struct.acpi_buffer*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !8102 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !8105, metadata !DIExpression()), !dbg !8109
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !8115, metadata !DIExpression()), !dbg !8116
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !8117, metadata !DIExpression()), !dbg !8118
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !8119, metadata !DIExpression()), !dbg !8120
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !8121, metadata !DIExpression()), !dbg !8125
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !8127, metadata !DIExpression()), !dbg !8131
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !8133, metadata !DIExpression()), !dbg !8137
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !8142, metadata !DIExpression()), !dbg !8143
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !8144, metadata !DIExpression()), !dbg !8145
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8146, metadata !DIExpression()), !dbg !8147
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !8148, metadata !DIExpression()), !dbg !8149
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !8150, metadata !DIExpression()), !dbg !8151
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8152, metadata !DIExpression()), !dbg !8153
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !8154, metadata !DIExpression()), !dbg !8155
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !8156, metadata !DIExpression()), !dbg !8157
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  %0 = load i64, i64* %size.addr, align 8, !dbg !8162
  %1 = load i32, i32* %flags.addr, align 4, !dbg !8163
  %or = or i32 %1, 256, !dbg !8164
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8165
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !8166
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !8167

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8168
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !8169
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8170

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !8171
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !8172
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8173
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !8174
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8151
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !8175
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8176
  %10 = load i32, i32* %order.i.i, align 4, !dbg !8177
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8178
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8179
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8180
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !8181
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8181
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8181
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8181
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !8181
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8182
  br label %kmalloc.exit, !dbg !8182

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !8183
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8184
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !8184
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8186

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8187
  br label %kmalloc_index.exit.i, !dbg !8187

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8188
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !8190
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8191

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8192
  br label %kmalloc_index.exit.i, !dbg !8192

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8193
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !8195
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8196

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8197
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !8198
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8199

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8200
  br label %kmalloc_index.exit.i, !dbg !8200

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8201
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !8203
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8204

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8205
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !8206
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8207

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8208
  br label %kmalloc_index.exit.i, !dbg !8208

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8209
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !8211
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8212

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8213
  br label %kmalloc_index.exit.i, !dbg !8213

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8214
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !8216
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8217

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8218
  br label %kmalloc_index.exit.i, !dbg !8218

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8219
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !8221
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8222

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8223
  br label %kmalloc_index.exit.i, !dbg !8223

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8224
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !8226
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8227

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8228
  br label %kmalloc_index.exit.i, !dbg !8228

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8229
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8231
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8232

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8233
  br label %kmalloc_index.exit.i, !dbg !8233

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8234
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8236
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8237

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8238
  br label %kmalloc_index.exit.i, !dbg !8238

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8239
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8241
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8242

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8243
  br label %kmalloc_index.exit.i, !dbg !8243

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8244
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8246
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8247

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8248
  br label %kmalloc_index.exit.i, !dbg !8248

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8249
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8251
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8252

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8253
  br label %kmalloc_index.exit.i, !dbg !8253

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8254
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8256
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8257

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8258
  br label %kmalloc_index.exit.i, !dbg !8258

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8259
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8261
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8262

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8263
  br label %kmalloc_index.exit.i, !dbg !8263

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8264
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8266
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8267

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8268
  br label %kmalloc_index.exit.i, !dbg !8268

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8269
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8271
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8272

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8273
  br label %kmalloc_index.exit.i, !dbg !8273

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8274
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8276
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8277

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8278
  br label %kmalloc_index.exit.i, !dbg !8278

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8279
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8281
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8282

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8283
  br label %kmalloc_index.exit.i, !dbg !8283

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8284
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8286
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8287

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8288
  br label %kmalloc_index.exit.i, !dbg !8288

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8289
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8291
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8292

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8293
  br label %kmalloc_index.exit.i, !dbg !8293

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8294
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8296
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8297

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8298
  br label %kmalloc_index.exit.i, !dbg !8298

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8299
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8301
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8302

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8303
  br label %kmalloc_index.exit.i, !dbg !8303

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8304
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8306
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8307

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8308
  br label %kmalloc_index.exit.i, !dbg !8308

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8309
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8311
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8312

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8313
  br label %kmalloc_index.exit.i, !dbg !8313

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8314
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8316
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8317

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8318
  br label %kmalloc_index.exit.i, !dbg !8318

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8319
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8321
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8322

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8323
  br label %kmalloc_index.exit.i, !dbg !8323

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8324
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8326
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8327

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8328
  br label %kmalloc_index.exit.i, !dbg !8328

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.31, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !8329, !srcloc !8332
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #7, !dbg !8333, !srcloc !8336
  unreachable, !dbg !8337

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8338
  store i32 %45, i32* %index.i, align 4, !dbg !8339
  %46 = load i32, i32* %index.i, align 4, !dbg !8340
  %tobool.i = icmp ne i32 %46, 0, !dbg !8340
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8342

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8343
  br label %kmalloc.exit, !dbg !8343

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8344
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8345
  %and.i.i = and i32 %48, 17, !dbg !8345
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8345
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8345
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8345
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8345
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8347

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8348
  br label %kmalloc_type.exit.i, !dbg !8348

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8349
  %and2.i.i = and i32 %49, 1, !dbg !8350
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8349
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8349
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8349
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8351
  br label %kmalloc_type.exit.i, !dbg !8351

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8352
  %idxprom.i = zext i32 %51 to i64, !dbg !8353
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8353
  %52 = load i32, i32* %index.i, align 4, !dbg !8354
  %idxprom6.i = zext i32 %52 to i64, !dbg !8353
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8353
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8353
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8355
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8356
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8357
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8358
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !8359
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8359
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8359
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8359
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !8359
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8120
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8360
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8361
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8362
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8363
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !8364
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8365
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8366
  store i8* %62, i8** %retval.i, align 8, !dbg !8367
  br label %kmalloc.exit, !dbg !8367

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8368
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8369
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !8370
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8370
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8370
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8370
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !8370
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8371
  br label %kmalloc.exit, !dbg !8371

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8372
  ret i8* %65, !dbg !8373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_handles_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !8374 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8381, metadata !DIExpression()), !dbg !8382
  store i64 0, i64* %len, align 8, !dbg !8382
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8383, metadata !DIExpression()), !dbg !8384
  store i32 0, i32* %i, align 4, !dbg !8385
  br label %for.cond, !dbg !8387

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8388
  %conv = sext i32 %0 to i64, !dbg !8388
  %cmp = icmp ult i64 %conv, 16, !dbg !8390
  br i1 %cmp, label %for.body, label %for.end, !dbg !8391

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !8392
  %2 = load i64, i64* %len, align 8, !dbg !8394
  %add.ptr = getelementptr i8, i8* %1, i64 %2, !dbg !8395
  %3 = load i64, i64* %len, align 8, !dbg !8396
  %sub = sub i64 4096, %3, !dbg !8397
  %4 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !8398
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %4, i32 0, i32 0, !dbg !8399
  %5 = load i32, i32* %i, align 4, !dbg !8400
  %idxprom = sext i32 %5 to i64, !dbg !8398
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !8398
  %6 = load i16, i16* %arrayidx, align 2, !dbg !8398
  %conv2 = zext i16 %6 to i32, !dbg !8398
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i32 %conv2) #11, !dbg !8401
  %conv3 = sext i32 %call to i64, !dbg !8401
  %7 = load i64, i64* %len, align 8, !dbg !8402
  %add = add i64 %7, %conv3, !dbg !8402
  store i64 %add, i64* %len, align 8, !dbg !8402
  br label %for.inc, !dbg !8403

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !8404
  %inc = add i32 %8, 1, !dbg !8404
  store i32 %inc, i32* %i, align 4, !dbg !8404
  br label %for.cond, !dbg !8405, !llvm.loop !8406

for.end:                                          ; preds = %for.cond
  %9 = load i8*, i8** %buffer.addr, align 8, !dbg !8408
  %10 = load i64, i64* %len, align 8, !dbg !8409
  %add.ptr4 = getelementptr i8, i8* %9, i64 %10, !dbg !8410
  %11 = load i64, i64* %len, align 8, !dbg !8411
  %sub5 = sub i64 4096, %11, !dbg !8412
  %call6 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr4, i64 %sub5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #11, !dbg !8413
  %conv7 = sext i32 %call6 to i64, !dbg !8413
  %12 = load i64, i64* %len, align 8, !dbg !8414
  %add8 = add i64 %12, %conv7, !dbg !8414
  store i64 %add8, i64* %len, align 8, !dbg !8414
  %13 = load i64, i64* %len, align 8, !dbg !8415
  ret i64 %13, !dbg !8416
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !8417 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8421, metadata !DIExpression()), !dbg !8425
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8427, metadata !DIExpression()), !dbg !8428
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  %0 = load i64, i64* %size.addr, align 8, !dbg !8431
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8433
  br i1 %1, label %if.then, label %if.end447, !dbg !8434

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8435
  %tobool = icmp ne i64 %2, 0, !dbg !8435
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8438

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8439
  br label %return, !dbg !8439

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8440
  %cmp = icmp ult i64 %3, 4096, !dbg !8442
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8443

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8444
  br label %return, !dbg !8444

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub = sub i64 %4, 1, !dbg !8445
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8445
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8445

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub4 = sub i64 %6, 1, !dbg !8445
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8445
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8445

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub6 = sub i64 %8, 1, !dbg !8445
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8445
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8445

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8445

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub9 = sub i64 %9, 1, !dbg !8445
  %and = and i64 %sub9, -9223372036854775808, !dbg !8445
  %tobool10 = icmp ne i64 %and, 0, !dbg !8445
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8445

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8445

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub13 = sub i64 %10, 1, !dbg !8445
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8445
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8445
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8445

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8445

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub18 = sub i64 %11, 1, !dbg !8445
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8445
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8445
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8445

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8445

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub23 = sub i64 %12, 1, !dbg !8445
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8445
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8445
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8445

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8445

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub28 = sub i64 %13, 1, !dbg !8445
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8445
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8445
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8445

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8445

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub33 = sub i64 %14, 1, !dbg !8445
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8445
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8445
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8445

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8445

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub38 = sub i64 %15, 1, !dbg !8445
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8445
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8445
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8445

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8445

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub43 = sub i64 %16, 1, !dbg !8445
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8445
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8445
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8445

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8445

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub48 = sub i64 %17, 1, !dbg !8445
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8445
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8445
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8445

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8445

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub53 = sub i64 %18, 1, !dbg !8445
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8445
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8445
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8445

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8445

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub58 = sub i64 %19, 1, !dbg !8445
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8445
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8445
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8445

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8445

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub63 = sub i64 %20, 1, !dbg !8445
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8445
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8445
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8445

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8445

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub68 = sub i64 %21, 1, !dbg !8445
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8445
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8445
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8445

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8445

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub73 = sub i64 %22, 1, !dbg !8445
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8445
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8445
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8445

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8445

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub78 = sub i64 %23, 1, !dbg !8445
  %and79 = and i64 %sub78, 562949953421312, !dbg !8445
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8445
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8445

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8445

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub83 = sub i64 %24, 1, !dbg !8445
  %and84 = and i64 %sub83, 281474976710656, !dbg !8445
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8445
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8445

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8445

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub88 = sub i64 %25, 1, !dbg !8445
  %and89 = and i64 %sub88, 140737488355328, !dbg !8445
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8445
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8445

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8445

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub93 = sub i64 %26, 1, !dbg !8445
  %and94 = and i64 %sub93, 70368744177664, !dbg !8445
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8445
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8445

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8445

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub98 = sub i64 %27, 1, !dbg !8445
  %and99 = and i64 %sub98, 35184372088832, !dbg !8445
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8445
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8445

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8445

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub103 = sub i64 %28, 1, !dbg !8445
  %and104 = and i64 %sub103, 17592186044416, !dbg !8445
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8445
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8445

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8445

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub108 = sub i64 %29, 1, !dbg !8445
  %and109 = and i64 %sub108, 8796093022208, !dbg !8445
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8445
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8445

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8445

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub113 = sub i64 %30, 1, !dbg !8445
  %and114 = and i64 %sub113, 4398046511104, !dbg !8445
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8445
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8445

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8445

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub118 = sub i64 %31, 1, !dbg !8445
  %and119 = and i64 %sub118, 2199023255552, !dbg !8445
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8445
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8445

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8445

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub123 = sub i64 %32, 1, !dbg !8445
  %and124 = and i64 %sub123, 1099511627776, !dbg !8445
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8445
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8445

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8445

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub128 = sub i64 %33, 1, !dbg !8445
  %and129 = and i64 %sub128, 549755813888, !dbg !8445
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8445
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8445

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8445

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub133 = sub i64 %34, 1, !dbg !8445
  %and134 = and i64 %sub133, 274877906944, !dbg !8445
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8445
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8445

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8445

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub138 = sub i64 %35, 1, !dbg !8445
  %and139 = and i64 %sub138, 137438953472, !dbg !8445
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8445
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8445

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8445

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub143 = sub i64 %36, 1, !dbg !8445
  %and144 = and i64 %sub143, 68719476736, !dbg !8445
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8445
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8445

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8445

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub148 = sub i64 %37, 1, !dbg !8445
  %and149 = and i64 %sub148, 34359738368, !dbg !8445
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8445
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8445

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8445

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub153 = sub i64 %38, 1, !dbg !8445
  %and154 = and i64 %sub153, 17179869184, !dbg !8445
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8445
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8445

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8445

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub158 = sub i64 %39, 1, !dbg !8445
  %and159 = and i64 %sub158, 8589934592, !dbg !8445
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8445
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8445

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8445

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub163 = sub i64 %40, 1, !dbg !8445
  %and164 = and i64 %sub163, 4294967296, !dbg !8445
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8445
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8445

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8445

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub168 = sub i64 %41, 1, !dbg !8445
  %and169 = and i64 %sub168, 2147483648, !dbg !8445
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8445
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8445

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8445

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub173 = sub i64 %42, 1, !dbg !8445
  %and174 = and i64 %sub173, 1073741824, !dbg !8445
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8445
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8445

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8445

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub178 = sub i64 %43, 1, !dbg !8445
  %and179 = and i64 %sub178, 536870912, !dbg !8445
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8445
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8445

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8445

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub183 = sub i64 %44, 1, !dbg !8445
  %and184 = and i64 %sub183, 268435456, !dbg !8445
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8445
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8445

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8445

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub188 = sub i64 %45, 1, !dbg !8445
  %and189 = and i64 %sub188, 134217728, !dbg !8445
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8445
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8445

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8445

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub193 = sub i64 %46, 1, !dbg !8445
  %and194 = and i64 %sub193, 67108864, !dbg !8445
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8445
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8445

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8445

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub198 = sub i64 %47, 1, !dbg !8445
  %and199 = and i64 %sub198, 33554432, !dbg !8445
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8445
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8445

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8445

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub203 = sub i64 %48, 1, !dbg !8445
  %and204 = and i64 %sub203, 16777216, !dbg !8445
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8445
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8445

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8445

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub208 = sub i64 %49, 1, !dbg !8445
  %and209 = and i64 %sub208, 8388608, !dbg !8445
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8445
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8445

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8445

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub213 = sub i64 %50, 1, !dbg !8445
  %and214 = and i64 %sub213, 4194304, !dbg !8445
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8445
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8445

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8445

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub218 = sub i64 %51, 1, !dbg !8445
  %and219 = and i64 %sub218, 2097152, !dbg !8445
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8445
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8445

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8445

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub223 = sub i64 %52, 1, !dbg !8445
  %and224 = and i64 %sub223, 1048576, !dbg !8445
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8445
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8445

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8445

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub228 = sub i64 %53, 1, !dbg !8445
  %and229 = and i64 %sub228, 524288, !dbg !8445
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8445
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8445

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8445

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub233 = sub i64 %54, 1, !dbg !8445
  %and234 = and i64 %sub233, 262144, !dbg !8445
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8445
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8445

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8445

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub238 = sub i64 %55, 1, !dbg !8445
  %and239 = and i64 %sub238, 131072, !dbg !8445
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8445
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8445

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8445

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub243 = sub i64 %56, 1, !dbg !8445
  %and244 = and i64 %sub243, 65536, !dbg !8445
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8445
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8445

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8445

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub248 = sub i64 %57, 1, !dbg !8445
  %and249 = and i64 %sub248, 32768, !dbg !8445
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8445
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8445

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8445

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub253 = sub i64 %58, 1, !dbg !8445
  %and254 = and i64 %sub253, 16384, !dbg !8445
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8445
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8445

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8445

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub258 = sub i64 %59, 1, !dbg !8445
  %and259 = and i64 %sub258, 8192, !dbg !8445
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8445
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8445

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8445

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub263 = sub i64 %60, 1, !dbg !8445
  %and264 = and i64 %sub263, 4096, !dbg !8445
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8445
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8445

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8445

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub268 = sub i64 %61, 1, !dbg !8445
  %and269 = and i64 %sub268, 2048, !dbg !8445
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8445
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8445

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8445

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub273 = sub i64 %62, 1, !dbg !8445
  %and274 = and i64 %sub273, 1024, !dbg !8445
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8445
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8445

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8445

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub278 = sub i64 %63, 1, !dbg !8445
  %and279 = and i64 %sub278, 512, !dbg !8445
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8445
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8445

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8445

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub283 = sub i64 %64, 1, !dbg !8445
  %and284 = and i64 %sub283, 256, !dbg !8445
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8445
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8445

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8445

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub288 = sub i64 %65, 1, !dbg !8445
  %and289 = and i64 %sub288, 128, !dbg !8445
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8445
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8445

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8445

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub293 = sub i64 %66, 1, !dbg !8445
  %and294 = and i64 %sub293, 64, !dbg !8445
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8445
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8445

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8445

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub298 = sub i64 %67, 1, !dbg !8445
  %and299 = and i64 %sub298, 32, !dbg !8445
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8445
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8445

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8445

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub303 = sub i64 %68, 1, !dbg !8445
  %and304 = and i64 %sub303, 16, !dbg !8445
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8445
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8445

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8445

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub308 = sub i64 %69, 1, !dbg !8445
  %and309 = and i64 %sub308, 8, !dbg !8445
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8445
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8445

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8445

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub313 = sub i64 %70, 1, !dbg !8445
  %and314 = and i64 %sub313, 4, !dbg !8445
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8445
  %71 = zext i1 %tobool315 to i64, !dbg !8445
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8445
  br label %cond.end, !dbg !8445

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8445
  br label %cond.end317, !dbg !8445

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8445
  br label %cond.end319, !dbg !8445

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8445
  br label %cond.end321, !dbg !8445

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8445
  br label %cond.end323, !dbg !8445

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8445
  br label %cond.end325, !dbg !8445

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8445
  br label %cond.end327, !dbg !8445

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8445
  br label %cond.end329, !dbg !8445

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8445
  br label %cond.end331, !dbg !8445

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8445
  br label %cond.end333, !dbg !8445

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8445
  br label %cond.end335, !dbg !8445

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8445
  br label %cond.end337, !dbg !8445

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8445
  br label %cond.end339, !dbg !8445

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8445
  br label %cond.end341, !dbg !8445

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8445
  br label %cond.end343, !dbg !8445

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8445
  br label %cond.end345, !dbg !8445

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8445
  br label %cond.end347, !dbg !8445

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8445
  br label %cond.end349, !dbg !8445

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8445
  br label %cond.end351, !dbg !8445

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8445
  br label %cond.end353, !dbg !8445

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8445
  br label %cond.end355, !dbg !8445

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8445
  br label %cond.end357, !dbg !8445

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8445
  br label %cond.end359, !dbg !8445

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8445
  br label %cond.end361, !dbg !8445

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8445
  br label %cond.end363, !dbg !8445

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8445
  br label %cond.end365, !dbg !8445

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8445
  br label %cond.end367, !dbg !8445

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8445
  br label %cond.end369, !dbg !8445

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8445
  br label %cond.end371, !dbg !8445

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8445
  br label %cond.end373, !dbg !8445

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8445
  br label %cond.end375, !dbg !8445

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8445
  br label %cond.end377, !dbg !8445

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8445
  br label %cond.end379, !dbg !8445

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8445
  br label %cond.end381, !dbg !8445

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8445
  br label %cond.end383, !dbg !8445

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8445
  br label %cond.end385, !dbg !8445

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8445
  br label %cond.end387, !dbg !8445

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8445
  br label %cond.end389, !dbg !8445

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8445
  br label %cond.end391, !dbg !8445

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8445
  br label %cond.end393, !dbg !8445

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8445
  br label %cond.end395, !dbg !8445

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8445
  br label %cond.end397, !dbg !8445

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8445
  br label %cond.end399, !dbg !8445

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8445
  br label %cond.end401, !dbg !8445

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8445
  br label %cond.end403, !dbg !8445

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8445
  br label %cond.end405, !dbg !8445

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8445
  br label %cond.end407, !dbg !8445

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8445
  br label %cond.end409, !dbg !8445

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8445
  br label %cond.end411, !dbg !8445

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8445
  br label %cond.end413, !dbg !8445

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8445
  br label %cond.end415, !dbg !8445

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8445
  br label %cond.end417, !dbg !8445

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8445
  br label %cond.end419, !dbg !8445

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8445
  br label %cond.end421, !dbg !8445

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8445
  br label %cond.end423, !dbg !8445

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8445
  br label %cond.end425, !dbg !8445

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8445
  br label %cond.end427, !dbg !8445

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8445
  br label %cond.end429, !dbg !8445

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8445
  br label %cond.end431, !dbg !8445

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8445
  br label %cond.end433, !dbg !8445

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8445
  br label %cond.end435, !dbg !8445

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8445
  br label %cond.end437, !dbg !8445

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8445
  br label %cond.end440, !dbg !8445

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8445

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8445
  br label %cond.end444, !dbg !8445

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8445
  %sub443 = sub i64 %72, 1, !dbg !8445
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !8445
  br label %cond.end444, !dbg !8445

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8445
  %sub446 = sub i32 %cond445, 12, !dbg !8446
  %add = add i32 %sub446, 1, !dbg !8447
  store i32 %add, i32* %retval, align 4, !dbg !8448
  br label %return, !dbg !8448

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8449
  %dec = add i64 %73, -1, !dbg !8449
  store i64 %dec, i64* %size.addr, align 8, !dbg !8449
  %74 = load i64, i64* %size.addr, align 8, !dbg !8450
  %shr = lshr i64 %74, 12, !dbg !8450
  store i64 %shr, i64* %size.addr, align 8, !dbg !8450
  %75 = load i64, i64* %size.addr, align 8, !dbg !8451
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8428
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8452
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8453
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !8452, !srcloc !8454
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8452
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8455
  %add.i = add i32 %79, 1, !dbg !8456
  store i32 %add.i, i32* %retval, align 4, !dbg !8457
  br label %return, !dbg !8457

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8458
  ret i32 %80, !dbg !8458
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !8459 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8421, metadata !DIExpression()), !dbg !8463
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8427, metadata !DIExpression()), !dbg !8465
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8466, metadata !DIExpression()), !dbg !8467
  %0 = load i64, i64* %n.addr, align 8, !dbg !8468
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8465
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8469
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8470
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !8469, !srcloc !8454
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8469
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8471
  %add.i = add i32 %4, 1, !dbg !8472
  %sub = sub i32 %add.i, 1, !dbg !8473
  ret i32 %sub, !dbg !8474
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8475 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8479, metadata !DIExpression()), !dbg !8480
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8481, metadata !DIExpression()), !dbg !8482
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8483, metadata !DIExpression()), !dbg !8484
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8485, metadata !DIExpression()), !dbg !8486
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8487
  ret i8* %0, !dbg !8488
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_call_snc_handle(i32 %handle, i32 %argument, i32* %result) #0 !dbg !8489 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i32, align 4
  %argument.addr = alloca i32, align 4
  %result.addr = alloca i32*, align 8
  %arg = alloca i32, align 4
  %ret = alloca i32, align 4
  %offset = alloca i32, align 4
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i32 %argument, i32* %argument.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argument.addr, metadata !8494, metadata !DIExpression()), !dbg !8495
  store i32* %result, i32** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %result.addr, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !8498, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i32 0, i32* %ret, align 4, !dbg !8501
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8502, metadata !DIExpression()), !dbg !8503
  %0 = load i32, i32* %handle.addr, align 4, !dbg !8504
  %call = call i32 @sony_find_snc_handle(i32 %0) #11, !dbg !8505
  store i32 %call, i32* %offset, align 4, !dbg !8503
  %1 = load i32, i32* %offset, align 4, !dbg !8506
  %cmp = icmp slt i32 %1, 0, !dbg !8508
  br i1 %cmp, label %if.then, label %if.end, !dbg !8509

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %offset, align 4, !dbg !8510
  store i32 %2, i32* %retval, align 4, !dbg !8511
  br label %return, !dbg !8511

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %offset, align 4, !dbg !8512
  %4 = load i32, i32* %argument.addr, align 4, !dbg !8513
  %or = or i32 %3, %4, !dbg !8514
  store i32 %or, i32* %arg, align 4, !dbg !8515
  %5 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !8516
  %6 = load i32*, i32** %result.addr, align 8, !dbg !8517
  %call1 = call i32 @sony_nc_int_call(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i64 0, i64 0), i32* %arg, i32* %6) #11, !dbg !8518
  store i32 %call1, i32* %ret, align 4, !dbg !8519
  br label %do.body, !dbg !8520

do.body:                                          ; preds = %if.end
  %7 = load i32, i32* @debug, align 4, !dbg !8521
  %tobool = icmp ne i32 %7, 0, !dbg !8521
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !8524

if.then2:                                         ; preds = %do.body
  %8 = load i32, i32* %arg, align 4, !dbg !8521
  %9 = load i32*, i32** %result.addr, align 8, !dbg !8521
  %10 = load i32, i32* %9, align 4, !dbg !8521
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.50, i64 0, i64 0), i32 %8, i32 %10) #12, !dbg !8521
  br label %if.end4, !dbg !8521

if.end4:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !8524

do.end:                                           ; preds = %if.end4
  %11 = load i32, i32* %ret, align 4, !dbg !8525
  store i32 %11, i32* %retval, align 4, !dbg !8526
  br label %return, !dbg !8526

return:                                           ; preds = %do.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8527
  ret i32 %12, !dbg !8527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_touchpad_setup(%struct.platform_device* %pd, i32 %handle) #0 !dbg !8528 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %handle.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8535, metadata !DIExpression()), !dbg !8536
  store i32 0, i32* %ret, align 4, !dbg !8536
  %call = call i8* @kzalloc(i64 40, i32 3264) #11, !dbg !8537
  %0 = bitcast i8* %call to %struct.touchpad_control*, !dbg !8537
  store %struct.touchpad_control* %0, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8538
  %1 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8539
  %tobool = icmp ne %struct.touchpad_control* %1, null, !dbg !8539
  br i1 %tobool, label %if.end, label %if.then, !dbg !8541

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8542
  br label %return, !dbg !8542

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %handle.addr, align 4, !dbg !8543
  %3 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8544
  %handle1 = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %3, i32 0, i32 1, !dbg !8545
  store i32 %2, i32* %handle1, align 8, !dbg !8546
  br label %do.body, !dbg !8547

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8548

do.end:                                           ; preds = %do.body
  %4 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8550
  %attr = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %4, i32 0, i32 0, !dbg !8551
  %attr2 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr, i32 0, i32 0, !dbg !8552
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr2, i32 0, i32 0, !dbg !8553
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0), i8** %name, align 8, !dbg !8554
  %5 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8555
  %attr3 = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %5, i32 0, i32 0, !dbg !8556
  %attr4 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr3, i32 0, i32 0, !dbg !8557
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr4, i32 0, i32 1, !dbg !8558
  store i16 420, i16* %mode, align 8, !dbg !8559
  %6 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8560
  %attr5 = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %6, i32 0, i32 0, !dbg !8561
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr5, i32 0, i32 1, !dbg !8562
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_touchpad_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !8563
  %7 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8564
  %attr6 = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %7, i32 0, i32 0, !dbg !8565
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr6, i32 0, i32 2, !dbg !8566
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_touchpad_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !8567
  %8 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8568
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !8569
  %9 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8570
  %attr7 = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %9, i32 0, i32 0, !dbg !8571
  %call8 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %attr7) #11, !dbg !8572
  store i32 %call8, i32* %ret, align 4, !dbg !8573
  %10 = load i32, i32* %ret, align 4, !dbg !8574
  %tobool9 = icmp ne i32 %10, 0, !dbg !8574
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8576

if.then10:                                        ; preds = %do.end
  %11 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8577
  %12 = bitcast %struct.touchpad_control* %11 to i8*, !dbg !8577
  call void @kfree(i8* %12) #11, !dbg !8579
  store %struct.touchpad_control* null, %struct.touchpad_control** @tp_ctl, align 8, !dbg !8580
  br label %if.end11, !dbg !8581

if.end11:                                         ; preds = %if.then10, %do.end
  %13 = load i32, i32* %ret, align 4, !dbg !8582
  store i32 %13, i32* %retval, align 4, !dbg !8583
  br label %return, !dbg !8583

return:                                           ; preds = %if.end11, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8584
  ret i32 %14, !dbg !8584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_battery_care_setup(%struct.platform_device* %pd, i32 %handle) #0 !dbg !8585 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %handle.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32 0, i32* %ret, align 4, !dbg !8591
  %call = call i8* @kzalloc(i64 72, i32 3264) #11, !dbg !8592
  %0 = bitcast i8* %call to %struct.battery_care_control*, !dbg !8592
  store %struct.battery_care_control* %0, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8593
  %1 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8594
  %tobool = icmp ne %struct.battery_care_control* %1, null, !dbg !8594
  br i1 %tobool, label %if.end, label %if.then, !dbg !8596

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8597
  br label %return, !dbg !8597

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %handle.addr, align 4, !dbg !8598
  %3 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8599
  %handle1 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %3, i32 0, i32 1, !dbg !8600
  store i32 %2, i32* %handle1, align 8, !dbg !8601
  br label %do.body, !dbg !8602

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8603

do.end:                                           ; preds = %do.body
  %4 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8605
  %attrs = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %4, i32 0, i32 0, !dbg !8606
  %arrayidx = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs, i64 0, i64 0, !dbg !8605
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx, i32 0, i32 0, !dbg !8607
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !8608
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8** %name, align 8, !dbg !8609
  %5 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8610
  %attrs2 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %5, i32 0, i32 0, !dbg !8611
  %arrayidx3 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs2, i64 0, i64 0, !dbg !8610
  %attr4 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx3, i32 0, i32 0, !dbg !8612
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr4, i32 0, i32 1, !dbg !8613
  store i16 420, i16* %mode, align 8, !dbg !8614
  %6 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8615
  %attrs5 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %6, i32 0, i32 0, !dbg !8616
  %arrayidx6 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs5, i64 0, i64 0, !dbg !8615
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx6, i32 0, i32 1, !dbg !8617
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_battery_care_limit_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !8618
  %7 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8619
  %attrs7 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %7, i32 0, i32 0, !dbg !8620
  %arrayidx8 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs7, i64 0, i64 0, !dbg !8619
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx8, i32 0, i32 2, !dbg !8621
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_battery_care_limit_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !8622
  %8 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8623
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !8624
  %9 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8625
  %attrs9 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %9, i32 0, i32 0, !dbg !8626
  %arrayidx10 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs9, i64 0, i64 0, !dbg !8625
  %call11 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %arrayidx10) #11, !dbg !8627
  store i32 %call11, i32* %ret, align 4, !dbg !8628
  %10 = load i32, i32* %ret, align 4, !dbg !8629
  %tobool12 = icmp ne i32 %10, 0, !dbg !8629
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8631

if.then13:                                        ; preds = %do.end
  br label %outkzalloc, !dbg !8632

if.end14:                                         ; preds = %do.end
  %11 = load i32, i32* %handle.addr, align 4, !dbg !8633
  %cmp = icmp eq i32 %11, 277, !dbg !8635
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8636

if.then15:                                        ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !8637
  br label %return, !dbg !8637

if.end16:                                         ; preds = %if.end14
  br label %do.body17, !dbg !8638

do.body17:                                        ; preds = %if.end16
  br label %do.end18, !dbg !8639

do.end18:                                         ; preds = %do.body17
  %12 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8641
  %attrs19 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %12, i32 0, i32 0, !dbg !8642
  %arrayidx20 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs19, i64 0, i64 1, !dbg !8641
  %attr21 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx20, i32 0, i32 0, !dbg !8643
  %name22 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr21, i32 0, i32 0, !dbg !8644
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.56, i64 0, i64 0), i8** %name22, align 8, !dbg !8645
  %13 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8646
  %attrs23 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %13, i32 0, i32 0, !dbg !8647
  %arrayidx24 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs23, i64 0, i64 1, !dbg !8646
  %attr25 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx24, i32 0, i32 0, !dbg !8648
  %mode26 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr25, i32 0, i32 1, !dbg !8649
  store i16 292, i16* %mode26, align 8, !dbg !8650
  %14 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8651
  %attrs27 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %14, i32 0, i32 0, !dbg !8652
  %arrayidx28 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs27, i64 0, i64 1, !dbg !8651
  %show29 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx28, i32 0, i32 1, !dbg !8653
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_battery_care_health_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show29, align 8, !dbg !8654
  %15 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8655
  %dev30 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %15, i32 0, i32 3, !dbg !8656
  %16 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8657
  %attrs31 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %16, i32 0, i32 0, !dbg !8658
  %arrayidx32 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs31, i64 0, i64 1, !dbg !8657
  %call33 = call i32 @device_create_file(%struct.device* %dev30, %struct.device_attribute* %arrayidx32) #11, !dbg !8659
  store i32 %call33, i32* %ret, align 4, !dbg !8660
  %17 = load i32, i32* %ret, align 4, !dbg !8661
  %tobool34 = icmp ne i32 %17, 0, !dbg !8661
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !8663

if.then35:                                        ; preds = %do.end18
  br label %outlimiter, !dbg !8664

if.end36:                                         ; preds = %do.end18
  store i32 0, i32* %retval, align 4, !dbg !8665
  br label %return, !dbg !8665

outlimiter:                                       ; preds = %if.then35
  call void @llvm.dbg.label(metadata !8666), !dbg !8667
  %18 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8668
  %dev37 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %18, i32 0, i32 3, !dbg !8669
  %19 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8670
  %attrs38 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %19, i32 0, i32 0, !dbg !8671
  %arrayidx39 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs38, i64 0, i64 0, !dbg !8670
  call void @device_remove_file(%struct.device* %dev37, %struct.device_attribute* %arrayidx39) #11, !dbg !8672
  br label %outkzalloc, !dbg !8672

outkzalloc:                                       ; preds = %outlimiter, %if.then13
  call void @llvm.dbg.label(metadata !8673), !dbg !8674
  %20 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8675
  %21 = bitcast %struct.battery_care_control* %20 to i8*, !dbg !8675
  call void @kfree(i8* %21) #11, !dbg !8676
  store %struct.battery_care_control* null, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !8677
  %22 = load i32, i32* %ret, align 4, !dbg !8678
  store i32 %22, i32* %retval, align 4, !dbg !8679
  br label %return, !dbg !8679

return:                                           ; preds = %outkzalloc, %if.end36, %if.then15, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !8680
  ret i32 %23, !dbg !8680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_lid_resume_setup(%struct.platform_device* %pd, i32 %handle) #0 !dbg !8681 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %handle.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !8684, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8686, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8688, metadata !DIExpression()), !dbg !8689
  %0 = load i32, i32* %handle.addr, align 4, !dbg !8690
  %call = call i32 @sony_call_snc_handle(i32 %0, i32 0, i32* %result) #11, !dbg !8692
  %tobool = icmp ne i32 %call, 0, !dbg !8692
  br i1 %tobool, label %if.then, label %if.end, !dbg !8693

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !8694
  br label %return, !dbg !8694

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 104, i32 3264) #11, !dbg !8695
  %1 = bitcast i8* %call1 to %struct.snc_lid_resume_control*, !dbg !8695
  store %struct.snc_lid_resume_control* %1, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8696
  %2 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8697
  %tobool2 = icmp ne %struct.snc_lid_resume_control* %2, null, !dbg !8697
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8699

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8700
  br label %return, !dbg !8700

if.end4:                                          ; preds = %if.end
  %3 = load i32, i32* %result, align 4, !dbg !8701
  %and = and i32 %3, 7, !dbg !8702
  %4 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8703
  %status = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %4, i32 0, i32 1, !dbg !8704
  store i32 %and, i32* %status, align 8, !dbg !8705
  %5 = load i32, i32* %handle.addr, align 4, !dbg !8706
  %6 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8707
  %handle5 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %6, i32 0, i32 2, !dbg !8708
  store i32 %5, i32* %handle5, align 4, !dbg !8709
  br label %do.body, !dbg !8710

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !8711

do.end:                                           ; preds = %do.body
  %7 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8713
  %attrs = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %7, i32 0, i32 0, !dbg !8714
  %arrayidx = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs, i64 0, i64 0, !dbg !8713
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx, i32 0, i32 0, !dbg !8715
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !8716
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i64 0, i64 0), i8** %name, align 8, !dbg !8717
  %8 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8718
  %attrs6 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %8, i32 0, i32 0, !dbg !8719
  %arrayidx7 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs6, i64 0, i64 0, !dbg !8718
  %attr8 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx7, i32 0, i32 0, !dbg !8720
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr8, i32 0, i32 1, !dbg !8721
  store i16 420, i16* %mode, align 8, !dbg !8722
  %9 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8723
  %attrs9 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %9, i32 0, i32 0, !dbg !8724
  %arrayidx10 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs9, i64 0, i64 0, !dbg !8723
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx10, i32 0, i32 1, !dbg !8725
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_lid_resume_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !8726
  %10 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8727
  %attrs11 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %10, i32 0, i32 0, !dbg !8728
  %arrayidx12 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs11, i64 0, i64 0, !dbg !8727
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx12, i32 0, i32 2, !dbg !8729
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_lid_resume_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !8730
  %11 = load i32, i32* %handle.addr, align 4, !dbg !8731
  %cmp = icmp eq i32 %11, 281, !dbg !8733
  br i1 %cmp, label %if.then13, label %if.end46, !dbg !8734

if.then13:                                        ; preds = %do.end
  br label %do.body14, !dbg !8735

do.body14:                                        ; preds = %if.then13
  br label %do.end15, !dbg !8737

do.end15:                                         ; preds = %do.body14
  %12 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8739
  %attrs16 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %12, i32 0, i32 0, !dbg !8740
  %arrayidx17 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs16, i64 0, i64 1, !dbg !8739
  %attr18 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx17, i32 0, i32 0, !dbg !8741
  %name19 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr18, i32 0, i32 0, !dbg !8742
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i64 0, i64 0), i8** %name19, align 8, !dbg !8743
  %13 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8744
  %attrs20 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %13, i32 0, i32 0, !dbg !8745
  %arrayidx21 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs20, i64 0, i64 1, !dbg !8744
  %attr22 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx21, i32 0, i32 0, !dbg !8746
  %mode23 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr22, i32 0, i32 1, !dbg !8747
  store i16 420, i16* %mode23, align 8, !dbg !8748
  %14 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8749
  %attrs24 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %14, i32 0, i32 0, !dbg !8750
  %arrayidx25 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs24, i64 0, i64 1, !dbg !8749
  %show26 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx25, i32 0, i32 1, !dbg !8751
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_lid_resume_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show26, align 8, !dbg !8752
  %15 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8753
  %attrs27 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %15, i32 0, i32 0, !dbg !8754
  %arrayidx28 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs27, i64 0, i64 1, !dbg !8753
  %store29 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx28, i32 0, i32 2, !dbg !8755
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_lid_resume_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store29, align 8, !dbg !8756
  br label %do.body30, !dbg !8757

do.body30:                                        ; preds = %do.end15
  br label %do.end31, !dbg !8758

do.end31:                                         ; preds = %do.body30
  %16 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8760
  %attrs32 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %16, i32 0, i32 0, !dbg !8761
  %arrayidx33 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs32, i64 0, i64 2, !dbg !8760
  %attr34 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx33, i32 0, i32 0, !dbg !8762
  %name35 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr34, i32 0, i32 0, !dbg !8763
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0), i8** %name35, align 8, !dbg !8764
  %17 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8765
  %attrs36 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %17, i32 0, i32 0, !dbg !8766
  %arrayidx37 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs36, i64 0, i64 2, !dbg !8765
  %attr38 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx37, i32 0, i32 0, !dbg !8767
  %mode39 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr38, i32 0, i32 1, !dbg !8768
  store i16 420, i16* %mode39, align 8, !dbg !8769
  %18 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8770
  %attrs40 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %18, i32 0, i32 0, !dbg !8771
  %arrayidx41 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs40, i64 0, i64 2, !dbg !8770
  %show42 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx41, i32 0, i32 1, !dbg !8772
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_lid_resume_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show42, align 8, !dbg !8773
  %19 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8774
  %attrs43 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %19, i32 0, i32 0, !dbg !8775
  %arrayidx44 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs43, i64 0, i64 2, !dbg !8774
  %store45 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx44, i32 0, i32 2, !dbg !8776
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_lid_resume_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store45, align 8, !dbg !8777
  br label %if.end46, !dbg !8778

if.end46:                                         ; preds = %do.end31, %do.end
  store i32 0, i32* %i, align 4, !dbg !8779
  br label %for.cond, !dbg !8781

for.cond:                                         ; preds = %for.inc, %if.end46
  %20 = load i32, i32* %i, align 4, !dbg !8782
  %cmp47 = icmp slt i32 %20, 3, !dbg !8784
  br i1 %cmp47, label %land.rhs, label %land.end, !dbg !8785

land.rhs:                                         ; preds = %for.cond
  %21 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8786
  %attrs48 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %21, i32 0, i32 0, !dbg !8787
  %22 = load i32, i32* %i, align 4, !dbg !8788
  %idxprom = sext i32 %22 to i64, !dbg !8786
  %arrayidx49 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs48, i64 0, i64 %idxprom, !dbg !8786
  %attr50 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx49, i32 0, i32 0, !dbg !8789
  %name51 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr50, i32 0, i32 0, !dbg !8790
  %23 = load i8*, i8** %name51, align 8, !dbg !8790
  %tobool52 = icmp ne i8* %23, null, !dbg !8785
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %24 = phi i1 [ false, %for.cond ], [ %tobool52, %land.rhs ], !dbg !8791
  br i1 %24, label %for.body, label %for.end, !dbg !8792

for.body:                                         ; preds = %land.end
  %25 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8793
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %25, i32 0, i32 3, !dbg !8795
  %26 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8796
  %attrs53 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %26, i32 0, i32 0, !dbg !8797
  %27 = load i32, i32* %i, align 4, !dbg !8798
  %idxprom54 = sext i32 %27 to i64, !dbg !8796
  %arrayidx55 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs53, i64 0, i64 %idxprom54, !dbg !8796
  %call56 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %arrayidx55) #11, !dbg !8799
  store i32 %call56, i32* %result, align 4, !dbg !8800
  %28 = load i32, i32* %result, align 4, !dbg !8801
  %tobool57 = icmp ne i32 %28, 0, !dbg !8801
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !8803

if.then58:                                        ; preds = %for.body
  br label %liderror, !dbg !8804

if.end59:                                         ; preds = %for.body
  br label %for.inc, !dbg !8805

for.inc:                                          ; preds = %if.end59
  %29 = load i32, i32* %i, align 4, !dbg !8806
  %inc = add i32 %29, 1, !dbg !8806
  store i32 %inc, i32* %i, align 4, !dbg !8806
  br label %for.cond, !dbg !8807, !llvm.loop !8808

for.end:                                          ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !8810
  br label %return, !dbg !8810

liderror:                                         ; preds = %if.then58
  call void @llvm.dbg.label(metadata !8811), !dbg !8812
  %30 = load i32, i32* %i, align 4, !dbg !8813
  %dec = add i32 %30, -1, !dbg !8813
  store i32 %dec, i32* %i, align 4, !dbg !8813
  br label %for.cond60, !dbg !8815

for.cond60:                                       ; preds = %for.inc67, %liderror
  %31 = load i32, i32* %i, align 4, !dbg !8816
  %cmp61 = icmp sge i32 %31, 0, !dbg !8818
  br i1 %cmp61, label %for.body62, label %for.end69, !dbg !8819

for.body62:                                       ; preds = %for.cond60
  %32 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8820
  %dev63 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %32, i32 0, i32 3, !dbg !8821
  %33 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8822
  %attrs64 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %33, i32 0, i32 0, !dbg !8823
  %34 = load i32, i32* %i, align 4, !dbg !8824
  %idxprom65 = sext i32 %34 to i64, !dbg !8822
  %arrayidx66 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs64, i64 0, i64 %idxprom65, !dbg !8822
  call void @device_remove_file(%struct.device* %dev63, %struct.device_attribute* %arrayidx66) #11, !dbg !8825
  br label %for.inc67, !dbg !8825

for.inc67:                                        ; preds = %for.body62
  %35 = load i32, i32* %i, align 4, !dbg !8826
  %dec68 = add i32 %35, -1, !dbg !8826
  store i32 %dec68, i32* %i, align 4, !dbg !8826
  br label %for.cond60, !dbg !8827, !llvm.loop !8828

for.end69:                                        ; preds = %for.cond60
  %36 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8830
  %37 = bitcast %struct.snc_lid_resume_control* %36 to i8*, !dbg !8830
  call void @kfree(i8* %37) #11, !dbg !8831
  store %struct.snc_lid_resume_control* null, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !8832
  %38 = load i32, i32* %result, align 4, !dbg !8833
  store i32 %38, i32* %retval, align 4, !dbg !8834
  br label %return, !dbg !8834

return:                                           ; preds = %for.end69, %for.end, %if.then3, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !8835
  ret i32 %39, !dbg !8835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_thermal_setup(%struct.platform_device* %pd) #0 !dbg !8836 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %ret = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8839, metadata !DIExpression()), !dbg !8840
  store i32 0, i32* %ret, align 4, !dbg !8840
  %call = call i8* @kzalloc(i64 72, i32 3264) #11, !dbg !8841
  %0 = bitcast i8* %call to %struct.snc_thermal_ctrl*, !dbg !8841
  store %struct.snc_thermal_ctrl* %0, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8842
  %1 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8843
  %tobool = icmp ne %struct.snc_thermal_ctrl* %1, null, !dbg !8843
  br i1 %tobool, label %if.end, label %if.then, !dbg !8845

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8846
  br label %return, !dbg !8846

if.end:                                           ; preds = %entry
  %2 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8847
  %profiles = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %2, i32 0, i32 1, !dbg !8848
  %call1 = call i32 @sony_call_snc_handle(i32 290, i32 0, i32* %profiles) #11, !dbg !8849
  store i32 %call1, i32* %ret, align 4, !dbg !8850
  %3 = load i32, i32* %ret, align 4, !dbg !8851
  %tobool2 = icmp ne i32 %3, 0, !dbg !8851
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8853

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.60, i64 0, i64 0)) #12, !dbg !8854
  br label %outkzalloc, !dbg !8856

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @sony_nc_thermal_mode_get() #11, !dbg !8857
  store i32 %call6, i32* %ret, align 4, !dbg !8858
  %4 = load i32, i32* %ret, align 4, !dbg !8859
  %cmp = icmp slt i32 %4, 0, !dbg !8861
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !8862

if.then7:                                         ; preds = %if.end5
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.61, i64 0, i64 0)) #12, !dbg !8863
  br label %outkzalloc, !dbg !8865

if.end9:                                          ; preds = %if.end5
  %5 = load i32, i32* %ret, align 4, !dbg !8866
  %6 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8867
  %mode = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %6, i32 0, i32 0, !dbg !8868
  store i32 %5, i32* %mode, align 8, !dbg !8869
  br label %do.body, !dbg !8870

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !8871

do.end:                                           ; preds = %do.body
  %7 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8873
  %profiles_attr = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %7, i32 0, i32 3, !dbg !8874
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %profiles_attr, i32 0, i32 0, !dbg !8875
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !8876
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i64 0, i64 0), i8** %name, align 8, !dbg !8877
  %8 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8878
  %profiles_attr10 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %8, i32 0, i32 3, !dbg !8879
  %attr11 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %profiles_attr10, i32 0, i32 0, !dbg !8880
  %mode12 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr11, i32 0, i32 1, !dbg !8881
  store i16 292, i16* %mode12, align 8, !dbg !8882
  %9 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8883
  %profiles_attr13 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %9, i32 0, i32 3, !dbg !8884
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %profiles_attr13, i32 0, i32 1, !dbg !8885
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_thermal_profiles_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !8886
  br label %do.body14, !dbg !8887

do.body14:                                        ; preds = %do.end
  br label %do.end15, !dbg !8888

do.end15:                                         ; preds = %do.body14
  %10 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8890
  %mode_attr = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %10, i32 0, i32 2, !dbg !8891
  %attr16 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr, i32 0, i32 0, !dbg !8892
  %name17 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr16, i32 0, i32 0, !dbg !8893
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i64 0, i64 0), i8** %name17, align 8, !dbg !8894
  %11 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8895
  %mode_attr18 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %11, i32 0, i32 2, !dbg !8896
  %attr19 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr18, i32 0, i32 0, !dbg !8897
  %mode20 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr19, i32 0, i32 1, !dbg !8898
  store i16 420, i16* %mode20, align 8, !dbg !8899
  %12 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8900
  %mode_attr21 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %12, i32 0, i32 2, !dbg !8901
  %show22 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr21, i32 0, i32 1, !dbg !8902
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_thermal_mode_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show22, align 8, !dbg !8903
  %13 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8904
  %mode_attr23 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %13, i32 0, i32 2, !dbg !8905
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr23, i32 0, i32 2, !dbg !8906
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_thermal_mode_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !8907
  %14 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8908
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %14, i32 0, i32 3, !dbg !8909
  %15 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8910
  %profiles_attr24 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %15, i32 0, i32 3, !dbg !8911
  %call25 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %profiles_attr24) #11, !dbg !8912
  store i32 %call25, i32* %ret, align 4, !dbg !8913
  %16 = load i32, i32* %ret, align 4, !dbg !8914
  %tobool26 = icmp ne i32 %16, 0, !dbg !8914
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8916

if.then27:                                        ; preds = %do.end15
  br label %outkzalloc, !dbg !8917

if.end28:                                         ; preds = %do.end15
  %17 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8918
  %dev29 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %17, i32 0, i32 3, !dbg !8919
  %18 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8920
  %mode_attr30 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %18, i32 0, i32 2, !dbg !8921
  %call31 = call i32 @device_create_file(%struct.device* %dev29, %struct.device_attribute* %mode_attr30) #11, !dbg !8922
  store i32 %call31, i32* %ret, align 4, !dbg !8923
  %19 = load i32, i32* %ret, align 4, !dbg !8924
  %tobool32 = icmp ne i32 %19, 0, !dbg !8924
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8926

if.then33:                                        ; preds = %if.end28
  br label %outprofiles, !dbg !8927

if.end34:                                         ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !8928
  br label %return, !dbg !8928

outprofiles:                                      ; preds = %if.then33
  call void @llvm.dbg.label(metadata !8929), !dbg !8930
  %20 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8931
  %dev35 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %20, i32 0, i32 3, !dbg !8932
  %21 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8933
  %profiles_attr36 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %21, i32 0, i32 3, !dbg !8934
  call void @device_remove_file(%struct.device* %dev35, %struct.device_attribute* %profiles_attr36) #11, !dbg !8935
  br label %outkzalloc, !dbg !8935

outkzalloc:                                       ; preds = %outprofiles, %if.then27, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !8936), !dbg !8937
  %22 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8938
  %23 = bitcast %struct.snc_thermal_ctrl* %22 to i8*, !dbg !8938
  call void @kfree(i8* %23) #11, !dbg !8939
  store %struct.snc_thermal_ctrl* null, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !8940
  %24 = load i32, i32* %ret, align 4, !dbg !8941
  store i32 %24, i32* %retval, align 4, !dbg !8942
  br label %return, !dbg !8942

return:                                           ; preds = %outkzalloc, %if.end34, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !8943
  ret i32 %25, !dbg !8943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_gfx_switch_setup(%struct.platform_device* %pd, i32 %handle) #0 !dbg !8944 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %handle.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8949, metadata !DIExpression()), !dbg !8950
  %call = call i8* @kzalloc(i64 40, i32 3264) #11, !dbg !8951
  %0 = bitcast i8* %call to %struct.snc_gfx_switch_control*, !dbg !8951
  store %struct.snc_gfx_switch_control* %0, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8952
  %1 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8953
  %tobool = icmp ne %struct.snc_gfx_switch_control* %1, null, !dbg !8953
  br i1 %tobool, label %if.end, label %if.then, !dbg !8955

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8956
  br label %return, !dbg !8956

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %handle.addr, align 4, !dbg !8957
  %3 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8958
  %handle1 = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %3, i32 0, i32 1, !dbg !8959
  store i32 %2, i32* %handle1, align 8, !dbg !8960
  br label %do.body, !dbg !8961

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8962

do.end:                                           ; preds = %do.body
  %4 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8964
  %attr = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %4, i32 0, i32 0, !dbg !8965
  %attr2 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr, i32 0, i32 0, !dbg !8966
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr2, i32 0, i32 0, !dbg !8967
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i64 0, i64 0), i8** %name, align 8, !dbg !8968
  %5 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8969
  %attr3 = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %5, i32 0, i32 0, !dbg !8970
  %attr4 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr3, i32 0, i32 0, !dbg !8971
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr4, i32 0, i32 1, !dbg !8972
  store i16 292, i16* %mode, align 8, !dbg !8973
  %6 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8974
  %attr5 = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %6, i32 0, i32 0, !dbg !8975
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr5, i32 0, i32 1, !dbg !8976
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_gfx_switch_status_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !8977
  %7 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !8978
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !8979
  %8 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8980
  %attr6 = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %8, i32 0, i32 0, !dbg !8981
  %call7 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %attr6) #11, !dbg !8982
  store i32 %call7, i32* %result, align 4, !dbg !8983
  %9 = load i32, i32* %result, align 4, !dbg !8984
  %tobool8 = icmp ne i32 %9, 0, !dbg !8984
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8986

if.then9:                                         ; preds = %do.end
  br label %gfxerror, !dbg !8987

if.end10:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !8988
  br label %return, !dbg !8988

gfxerror:                                         ; preds = %if.then9
  call void @llvm.dbg.label(metadata !8989), !dbg !8990
  %10 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8991
  %11 = bitcast %struct.snc_gfx_switch_control* %10 to i8*, !dbg !8991
  call void @kfree(i8* %11) #11, !dbg !8992
  store %struct.snc_gfx_switch_control* null, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !8993
  %12 = load i32, i32* %result, align 4, !dbg !8994
  store i32 %12, i32* %retval, align 4, !dbg !8995
  br label %return, !dbg !8995

return:                                           ; preds = %gfxerror, %if.end10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8996
  ret i32 %13, !dbg !8996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_highspeed_charging_setup(%struct.platform_device* %pd) #0 !dbg !8997 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !8998, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9000, metadata !DIExpression()), !dbg !9001
  %call = call i32 @sony_call_snc_handle(i32 305, i32 0, i32* %result) #11, !dbg !9002
  %tobool = icmp ne i32 %call, 0, !dbg !9002
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9004

lor.lhs.false:                                    ; preds = %entry
  %0 = load i32, i32* %result, align 4, !dbg !9005
  %and = and i32 %0, 1, !dbg !9006
  %tobool1 = icmp ne i32 %and, 0, !dbg !9006
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9007

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.75, i64 0, i64 0)) #12, !dbg !9008
  store i32 0, i32* %retval, align 4, !dbg !9010
  br label %return, !dbg !9010

if.end:                                           ; preds = %lor.lhs.false
  %call3 = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9011
  %1 = bitcast i8* %call3 to %struct.device_attribute*, !dbg !9011
  store %struct.device_attribute* %1, %struct.device_attribute** @hsc_handle, align 8, !dbg !9012
  %2 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9013
  %tobool4 = icmp ne %struct.device_attribute* %2, null, !dbg !9013
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9015

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9016
  br label %return, !dbg !9016

if.end6:                                          ; preds = %if.end
  br label %do.body, !dbg !9017

do.body:                                          ; preds = %if.end6
  br label %do.end, !dbg !9018

do.end:                                           ; preds = %do.body
  %3 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9020
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 0, !dbg !9021
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9022
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.76, i64 0, i64 0), i8** %name, align 8, !dbg !9023
  %4 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9024
  %attr7 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %4, i32 0, i32 0, !dbg !9025
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr7, i32 0, i32 1, !dbg !9026
  store i16 420, i16* %mode, align 8, !dbg !9027
  %5 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9028
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %5, i32 0, i32 1, !dbg !9029
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_highspeed_charging_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9030
  %6 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9031
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %6, i32 0, i32 2, !dbg !9032
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_highspeed_charging_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9033
  %7 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9034
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !9035
  %8 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9036
  %call8 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %8) #11, !dbg !9037
  store i32 %call8, i32* %result, align 4, !dbg !9038
  %9 = load i32, i32* %result, align 4, !dbg !9039
  %tobool9 = icmp ne i32 %9, 0, !dbg !9039
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9041

if.then10:                                        ; preds = %do.end
  %10 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !9042
  %11 = bitcast %struct.device_attribute* %10 to i8*, !dbg !9042
  call void @kfree(i8* %11) #11, !dbg !9044
  store %struct.device_attribute* null, %struct.device_attribute** @hsc_handle, align 8, !dbg !9045
  %12 = load i32, i32* %result, align 4, !dbg !9046
  store i32 %12, i32* %retval, align 4, !dbg !9047
  br label %return, !dbg !9047

if.end11:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9048
  br label %return, !dbg !9048

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9049
  ret i32 %13, !dbg !9049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_rfkill_setup(%struct.acpi_device* %device, i32 %handle) #0 !dbg !9050 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %handle.addr = alloca i32, align 4
  %offset = alloca i64, align 8
  %i = alloca i32, align 4
  %buffer = alloca [32 x i8], align 16
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !9055, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !9057, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9059, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.declare(metadata [32 x i8]* %buffer, metadata !9061, metadata !DIExpression()), !dbg !9062
  %0 = bitcast [32 x i8]* %buffer to i8*, !dbg !9062
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 32, i1 false), !dbg !9062
  %1 = load i32, i32* %handle.addr, align 4, !dbg !9063
  %call = call i32 @sony_find_snc_handle(i32 %1) #11, !dbg !9064
  %conv = sext i32 %call to i64, !dbg !9064
  store i64 %conv, i64* %offset, align 8, !dbg !9065
  %2 = load i32, i32* %handle.addr, align 4, !dbg !9066
  store i32 %2, i32* @sony_rfkill_handle, align 4, !dbg !9067
  %3 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !9068
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i64 0, i64 0, !dbg !9069
  %call1 = call i32 @sony_nc_buffer_call(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i64* %offset, i8* %arraydecay, i64 32) #11, !dbg !9070
  store i32 %call1, i32* %i, align 4, !dbg !9071
  %4 = load i32, i32* %i, align 4, !dbg !9072
  %cmp = icmp slt i32 %4, 0, !dbg !9074
  br i1 %cmp, label %if.then, label %if.end, !dbg !9075

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %i, align 4, !dbg !9076
  store i32 %5, i32* %retval, align 4, !dbg !9077
  br label %return, !dbg !9077

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9078
  br label %for.cond, !dbg !9080

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !9081
  %conv3 = sext i32 %6 to i64, !dbg !9081
  %cmp4 = icmp ult i64 %conv3, 32, !dbg !9083
  br i1 %cmp4, label %for.body, label %for.end, !dbg !9084

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !9085
  %idxprom = sext i32 %7 to i64, !dbg !9088
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom, !dbg !9088
  %8 = load i8, i8* %arrayidx, align 1, !dbg !9088
  %conv6 = zext i8 %8 to i32, !dbg !9088
  %cmp7 = icmp eq i32 %conv6, 255, !dbg !9089
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9090

if.then9:                                         ; preds = %for.body
  br label %for.end, !dbg !9091

if.end10:                                         ; preds = %for.body
  br label %do.body, !dbg !9092

do.body:                                          ; preds = %if.end10
  %9 = load i32, i32* @debug, align 4, !dbg !9093
  %tobool = icmp ne i32 %9, 0, !dbg !9093
  br i1 %tobool, label %if.then11, label %if.end16, !dbg !9096

if.then11:                                        ; preds = %do.body
  %10 = load i32, i32* %i, align 4, !dbg !9093
  %idxprom12 = sext i32 %10 to i64, !dbg !9093
  %arrayidx13 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom12, !dbg !9093
  %11 = load i8, i8* %arrayidx13, align 1, !dbg !9093
  %conv14 = zext i8 %11 to i32, !dbg !9093
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78, i64 0, i64 0), i32 %conv14) #12, !dbg !9093
  br label %if.end16, !dbg !9093

if.end16:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !9096

do.end:                                           ; preds = %if.end16
  %12 = load i32, i32* %i, align 4, !dbg !9097
  %idxprom17 = sext i32 %12 to i64, !dbg !9099
  %arrayidx18 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom17, !dbg !9099
  %13 = load i8, i8* %arrayidx18, align 1, !dbg !9099
  %conv19 = zext i8 %13 to i32, !dbg !9099
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !9100
  br i1 %cmp20, label %land.lhs.true, label %if.end25, !dbg !9101

land.lhs.true:                                    ; preds = %do.end
  %14 = load %struct.rfkill*, %struct.rfkill** getelementptr inbounds ([4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 0), align 16, !dbg !9102
  %tobool22 = icmp ne %struct.rfkill* %14, null, !dbg !9102
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !9103

if.then23:                                        ; preds = %land.lhs.true
  %15 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9104
  %call24 = call i32 @sony_nc_setup_rfkill(%struct.acpi_device* %15, i32 0) #11, !dbg !9105
  br label %if.end25, !dbg !9105

if.end25:                                         ; preds = %if.then23, %land.lhs.true, %do.end
  %16 = load i32, i32* %i, align 4, !dbg !9106
  %idxprom26 = sext i32 %16 to i64, !dbg !9108
  %arrayidx27 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom26, !dbg !9108
  %17 = load i8, i8* %arrayidx27, align 1, !dbg !9108
  %conv28 = zext i8 %17 to i32, !dbg !9108
  %cmp29 = icmp eq i32 %conv28, 16, !dbg !9109
  br i1 %cmp29, label %land.lhs.true31, label %if.end35, !dbg !9110

land.lhs.true31:                                  ; preds = %if.end25
  %18 = load %struct.rfkill*, %struct.rfkill** getelementptr inbounds ([4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 1), align 8, !dbg !9111
  %tobool32 = icmp ne %struct.rfkill* %18, null, !dbg !9111
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !9112

if.then33:                                        ; preds = %land.lhs.true31
  %19 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9113
  %call34 = call i32 @sony_nc_setup_rfkill(%struct.acpi_device* %19, i32 1) #11, !dbg !9114
  br label %if.end35, !dbg !9114

if.end35:                                         ; preds = %if.then33, %land.lhs.true31, %if.end25
  %20 = load i32, i32* %i, align 4, !dbg !9115
  %idxprom36 = sext i32 %20 to i64, !dbg !9117
  %arrayidx37 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom36, !dbg !9117
  %21 = load i8, i8* %arrayidx37, align 1, !dbg !9117
  %conv38 = zext i8 %21 to i32, !dbg !9117
  %and = and i32 240, %conv38, !dbg !9118
  %cmp39 = icmp eq i32 %and, 32, !dbg !9119
  br i1 %cmp39, label %land.lhs.true47, label %lor.lhs.false, !dbg !9120

lor.lhs.false:                                    ; preds = %if.end35
  %22 = load i32, i32* %i, align 4, !dbg !9121
  %idxprom41 = sext i32 %22 to i64, !dbg !9122
  %arrayidx42 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom41, !dbg !9122
  %23 = load i8, i8* %arrayidx42, align 1, !dbg !9122
  %conv43 = zext i8 %23 to i32, !dbg !9122
  %and44 = and i32 240, %conv43, !dbg !9123
  %cmp45 = icmp eq i32 %and44, 80, !dbg !9124
  br i1 %cmp45, label %land.lhs.true47, label %if.end51, !dbg !9125

land.lhs.true47:                                  ; preds = %lor.lhs.false, %if.end35
  %24 = load %struct.rfkill*, %struct.rfkill** getelementptr inbounds ([4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 2), align 16, !dbg !9126
  %tobool48 = icmp ne %struct.rfkill* %24, null, !dbg !9126
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !9127

if.then49:                                        ; preds = %land.lhs.true47
  %25 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9128
  %call50 = call i32 @sony_nc_setup_rfkill(%struct.acpi_device* %25, i32 2) #11, !dbg !9129
  br label %if.end51, !dbg !9129

if.end51:                                         ; preds = %if.then49, %land.lhs.true47, %lor.lhs.false
  %26 = load i32, i32* %i, align 4, !dbg !9130
  %idxprom52 = sext i32 %26 to i64, !dbg !9132
  %arrayidx53 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom52, !dbg !9132
  %27 = load i8, i8* %arrayidx53, align 1, !dbg !9132
  %conv54 = zext i8 %27 to i32, !dbg !9132
  %cmp55 = icmp eq i32 %conv54, 48, !dbg !9133
  br i1 %cmp55, label %land.lhs.true57, label %if.end61, !dbg !9134

land.lhs.true57:                                  ; preds = %if.end51
  %28 = load %struct.rfkill*, %struct.rfkill** getelementptr inbounds ([4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 3), align 8, !dbg !9135
  %tobool58 = icmp ne %struct.rfkill* %28, null, !dbg !9135
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !9136

if.then59:                                        ; preds = %land.lhs.true57
  %29 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9137
  %call60 = call i32 @sony_nc_setup_rfkill(%struct.acpi_device* %29, i32 3) #11, !dbg !9138
  br label %if.end61, !dbg !9138

if.end61:                                         ; preds = %if.then59, %land.lhs.true57, %if.end51
  br label %for.inc, !dbg !9139

for.inc:                                          ; preds = %if.end61
  %30 = load i32, i32* %i, align 4, !dbg !9140
  %inc = add i32 %30, 1, !dbg !9140
  store i32 %inc, i32* %i, align 4, !dbg !9140
  br label %for.cond, !dbg !9141, !llvm.loop !9142

for.end:                                          ; preds = %if.then9, %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9144
  br label %return, !dbg !9144

return:                                           ; preds = %for.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !9145
  ret i32 %31, !dbg !9145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_kbd_backlight_setup(%struct.platform_device* %pd, i32 %handle) #0 !dbg !9146 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %handle.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %probe_base = alloca i32, align 4
  %ctl_base = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !9147, metadata !DIExpression()), !dbg !9148
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9151, metadata !DIExpression()), !dbg !9152
  call void @llvm.dbg.declare(metadata i32* %probe_base, metadata !9153, metadata !DIExpression()), !dbg !9154
  store i32 0, i32* %probe_base, align 4, !dbg !9154
  call void @llvm.dbg.declare(metadata i32* %ctl_base, metadata !9155, metadata !DIExpression()), !dbg !9156
  store i32 0, i32* %ctl_base, align 4, !dbg !9156
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9157, metadata !DIExpression()), !dbg !9158
  store i32 0, i32* %ret, align 4, !dbg !9158
  %0 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9159
  %tobool = icmp ne %struct.kbd_backlight* %0, null, !dbg !9159
  br i1 %tobool, label %if.then, label %if.end, !dbg !9161

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %handle.addr, align 4, !dbg !9162
  %2 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9162
  %handle1 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %2, i32 0, i32 0, !dbg !9162
  %3 = load i32, i32* %handle1, align 8, !dbg !9162
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.83, i64 0, i64 0), i32 %1, i32 %3) #12, !dbg !9162
  store i32 -16, i32* %retval, align 4, !dbg !9164
  br label %return, !dbg !9164

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %handle.addr, align 4, !dbg !9165
  switch i32 %4, label %sw.default [
    i32 339, label %sw.bb
    i32 311, label %sw.bb2
  ], !dbg !9166

sw.bb:                                            ; preds = %if.end
  store i32 0, i32* %probe_base, align 4, !dbg !9167
  store i32 0, i32* %ctl_base, align 4, !dbg !9169
  br label %sw.epilog, !dbg !9170

sw.bb2:                                           ; preds = %if.end
  store i32 2816, i32* %probe_base, align 4, !dbg !9171
  store i32 3072, i32* %ctl_base, align 4, !dbg !9172
  br label %sw.epilog, !dbg !9173

sw.default:                                       ; preds = %if.end
  store i32 256, i32* %probe_base, align 4, !dbg !9174
  store i32 16384, i32* %ctl_base, align 4, !dbg !9175
  br label %sw.epilog, !dbg !9176

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %5 = load i32, i32* %handle.addr, align 4, !dbg !9177
  %6 = load i32, i32* %probe_base, align 4, !dbg !9178
  %call3 = call i32 @sony_call_snc_handle(i32 %5, i32 %6, i32* %result) #11, !dbg !9179
  store i32 %call3, i32* %ret, align 4, !dbg !9180
  %7 = load i32, i32* %ret, align 4, !dbg !9181
  %tobool4 = icmp ne i32 %7, 0, !dbg !9181
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9183

if.then5:                                         ; preds = %sw.epilog
  %8 = load i32, i32* %ret, align 4, !dbg !9184
  store i32 %8, i32* %retval, align 4, !dbg !9185
  br label %return, !dbg !9185

if.end6:                                          ; preds = %sw.epilog
  %9 = load i32, i32* %handle.addr, align 4, !dbg !9186
  %cmp = icmp eq i32 %9, 311, !dbg !9188
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9189

land.lhs.true:                                    ; preds = %if.end6
  %10 = load i32, i32* %result, align 4, !dbg !9190
  %and = and i32 %10, 2, !dbg !9191
  %tobool7 = icmp ne i32 %and, 0, !dbg !9191
  br i1 %tobool7, label %lor.lhs.false, label %if.then10, !dbg !9192

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end6
  %11 = load i32, i32* %result, align 4, !dbg !9193
  %and8 = and i32 %11, 1, !dbg !9194
  %tobool9 = icmp ne i32 %and8, 0, !dbg !9194
  br i1 %tobool9, label %if.end15, label %if.then10, !dbg !9195

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body, !dbg !9196

do.body:                                          ; preds = %if.then10
  %12 = load i32, i32* @debug, align 4, !dbg !9198
  %tobool11 = icmp ne i32 %12, 0, !dbg !9198
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !9201

if.then12:                                        ; preds = %do.body
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.84, i64 0, i64 0)) #12, !dbg !9198
  br label %if.end14, !dbg !9198

if.end14:                                         ; preds = %if.then12, %do.body
  br label %do.end, !dbg !9201

do.end:                                           ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !9202
  br label %return, !dbg !9202

if.end15:                                         ; preds = %lor.lhs.false
  %call16 = call i8* @kzalloc(i64 88, i32 3264) #11, !dbg !9203
  %13 = bitcast i8* %call16 to %struct.kbd_backlight*, !dbg !9203
  store %struct.kbd_backlight* %13, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9204
  %14 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9205
  %tobool17 = icmp ne %struct.kbd_backlight* %14, null, !dbg !9205
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !9207

if.then18:                                        ; preds = %if.end15
  store i32 -12, i32* %retval, align 4, !dbg !9208
  br label %return, !dbg !9208

if.end19:                                         ; preds = %if.end15
  %15 = load i32, i32* @kbd_backlight, align 4, !dbg !9209
  %16 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9210
  %mode = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %16, i32 0, i32 2, !dbg !9211
  store i32 %15, i32* %mode, align 8, !dbg !9212
  %17 = load i32, i32* @kbd_backlight_timeout, align 4, !dbg !9213
  %18 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9214
  %timeout = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %18, i32 0, i32 3, !dbg !9215
  store i32 %17, i32* %timeout, align 4, !dbg !9216
  %19 = load i32, i32* %handle.addr, align 4, !dbg !9217
  %20 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9218
  %handle20 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %20, i32 0, i32 0, !dbg !9219
  store i32 %19, i32* %handle20, align 8, !dbg !9220
  %21 = load i32, i32* %ctl_base, align 4, !dbg !9221
  %22 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9222
  %base = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %22, i32 0, i32 1, !dbg !9223
  store i32 %21, i32* %base, align 4, !dbg !9224
  %23 = load i32, i32* %handle.addr, align 4, !dbg !9225
  %cmp21 = icmp ne i32 %23, 339, !dbg !9226
  %conv = zext i1 %cmp21 to i32, !dbg !9226
  %24 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9227
  %has_timeout = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %24, i32 0, i32 4, !dbg !9228
  store i32 %conv, i32* %has_timeout, align 8, !dbg !9229
  br label %do.body22, !dbg !9230

do.body22:                                        ; preds = %if.end19
  br label %do.end23, !dbg !9231

do.end23:                                         ; preds = %do.body22
  %25 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9233
  %mode_attr = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %25, i32 0, i32 5, !dbg !9234
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr, i32 0, i32 0, !dbg !9235
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9236
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.85, i64 0, i64 0), i8** %name, align 8, !dbg !9237
  %26 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9238
  %mode_attr24 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %26, i32 0, i32 5, !dbg !9239
  %attr25 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr24, i32 0, i32 0, !dbg !9240
  %mode26 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr25, i32 0, i32 1, !dbg !9241
  store i16 420, i16* %mode26, align 8, !dbg !9242
  %27 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9243
  %mode_attr27 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %27, i32 0, i32 5, !dbg !9244
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr27, i32 0, i32 1, !dbg !9245
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_kbd_backlight_mode_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9246
  %28 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9247
  %mode_attr28 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %28, i32 0, i32 5, !dbg !9248
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %mode_attr28, i32 0, i32 2, !dbg !9249
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_kbd_backlight_mode_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9250
  %29 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9251
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %29, i32 0, i32 3, !dbg !9252
  %30 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9253
  %mode_attr29 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %30, i32 0, i32 5, !dbg !9254
  %call30 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %mode_attr29) #11, !dbg !9255
  store i32 %call30, i32* %ret, align 4, !dbg !9256
  %31 = load i32, i32* %ret, align 4, !dbg !9257
  %tobool31 = icmp ne i32 %31, 0, !dbg !9257
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !9259

if.then32:                                        ; preds = %do.end23
  br label %outkzalloc, !dbg !9260

if.end33:                                         ; preds = %do.end23
  %32 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9261
  %mode34 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %32, i32 0, i32 2, !dbg !9262
  %33 = load i32, i32* %mode34, align 8, !dbg !9262
  %conv35 = trunc i32 %33 to i8, !dbg !9261
  %call36 = call i64 @__sony_nc_kbd_backlight_mode_set(i8 zeroext %conv35) #11, !dbg !9263
  %34 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9264
  %has_timeout37 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %34, i32 0, i32 4, !dbg !9266
  %35 = load i32, i32* %has_timeout37, align 8, !dbg !9266
  %tobool38 = icmp ne i32 %35, 0, !dbg !9264
  br i1 %tobool38, label %if.then39, label %if.end60, !dbg !9267

if.then39:                                        ; preds = %if.end33
  br label %do.body40, !dbg !9268

do.body40:                                        ; preds = %if.then39
  br label %do.end41, !dbg !9270

do.end41:                                         ; preds = %do.body40
  %36 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9272
  %timeout_attr = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %36, i32 0, i32 6, !dbg !9273
  %attr42 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %timeout_attr, i32 0, i32 0, !dbg !9274
  %name43 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr42, i32 0, i32 0, !dbg !9275
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i64 0, i64 0), i8** %name43, align 8, !dbg !9276
  %37 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9277
  %timeout_attr44 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %37, i32 0, i32 6, !dbg !9278
  %attr45 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %timeout_attr44, i32 0, i32 0, !dbg !9279
  %mode46 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr45, i32 0, i32 1, !dbg !9280
  store i16 420, i16* %mode46, align 8, !dbg !9281
  %38 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9282
  %timeout_attr47 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %38, i32 0, i32 6, !dbg !9283
  %show48 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %timeout_attr47, i32 0, i32 1, !dbg !9284
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_kbd_backlight_timeout_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show48, align 8, !dbg !9285
  %39 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9286
  %timeout_attr49 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %39, i32 0, i32 6, !dbg !9287
  %store50 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %timeout_attr49, i32 0, i32 2, !dbg !9288
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_kbd_backlight_timeout_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store50, align 8, !dbg !9289
  %40 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9290
  %dev51 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %40, i32 0, i32 3, !dbg !9291
  %41 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9292
  %timeout_attr52 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %41, i32 0, i32 6, !dbg !9293
  %call53 = call i32 @device_create_file(%struct.device* %dev51, %struct.device_attribute* %timeout_attr52) #11, !dbg !9294
  store i32 %call53, i32* %ret, align 4, !dbg !9295
  %42 = load i32, i32* %ret, align 4, !dbg !9296
  %tobool54 = icmp ne i32 %42, 0, !dbg !9296
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !9298

if.then55:                                        ; preds = %do.end41
  br label %outmode, !dbg !9299

if.end56:                                         ; preds = %do.end41
  %43 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9300
  %timeout57 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %43, i32 0, i32 3, !dbg !9301
  %44 = load i32, i32* %timeout57, align 4, !dbg !9301
  %conv58 = trunc i32 %44 to i8, !dbg !9300
  %call59 = call i32 @__sony_nc_kbd_backlight_timeout_set(i8 zeroext %conv58) #11, !dbg !9302
  br label %if.end60, !dbg !9303

if.end60:                                         ; preds = %if.end56, %if.end33
  store i32 0, i32* %retval, align 4, !dbg !9304
  br label %return, !dbg !9304

outmode:                                          ; preds = %if.then55
  call void @llvm.dbg.label(metadata !9305), !dbg !9306
  %45 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9307
  %dev61 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %45, i32 0, i32 3, !dbg !9308
  %46 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9309
  %mode_attr62 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %46, i32 0, i32 5, !dbg !9310
  call void @device_remove_file(%struct.device* %dev61, %struct.device_attribute* %mode_attr62) #11, !dbg !9311
  br label %outkzalloc, !dbg !9311

outkzalloc:                                       ; preds = %outmode, %if.then32
  call void @llvm.dbg.label(metadata !9312), !dbg !9313
  %47 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9314
  %48 = bitcast %struct.kbd_backlight* %47 to i8*, !dbg !9314
  call void @kfree(i8* %48) #11, !dbg !9315
  store %struct.kbd_backlight* null, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !9316
  %49 = load i32, i32* %ret, align 4, !dbg !9317
  store i32 %49, i32* %retval, align 4, !dbg !9318
  br label %return, !dbg !9318

return:                                           ; preds = %outkzalloc, %if.end60, %if.then18, %do.end, %if.then5, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !9319
  ret i32 %50, !dbg !9319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_lowbatt_setup(%struct.platform_device* %pd) #0 !dbg !9320 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !9321, metadata !DIExpression()), !dbg !9322
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9323, metadata !DIExpression()), !dbg !9324
  %call = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9325
  %0 = bitcast i8* %call to %struct.device_attribute*, !dbg !9325
  store %struct.device_attribute* %0, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9326
  %1 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9327
  %tobool = icmp ne %struct.device_attribute* %1, null, !dbg !9327
  br i1 %tobool, label %if.end, label %if.then, !dbg !9329

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9330
  br label %return, !dbg !9330

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9331

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9332

do.end:                                           ; preds = %do.body
  %2 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9334
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %2, i32 0, i32 0, !dbg !9335
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9336
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i64 0, i64 0), i8** %name, align 8, !dbg !9337
  %3 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9338
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 0, !dbg !9339
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1, i32 0, i32 1, !dbg !9340
  store i16 420, i16* %mode, align 8, !dbg !9341
  %4 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9342
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %4, i32 0, i32 1, !dbg !9343
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_lowbatt_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9344
  %5 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9345
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %5, i32 0, i32 2, !dbg !9346
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_lowbatt_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9347
  %6 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9348
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !9349
  %7 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9350
  %call2 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %7) #11, !dbg !9351
  store i32 %call2, i32* %result, align 4, !dbg !9352
  %8 = load i32, i32* %result, align 4, !dbg !9353
  %tobool3 = icmp ne i32 %8, 0, !dbg !9353
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9355

if.then4:                                         ; preds = %do.end
  %9 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9356
  %10 = bitcast %struct.device_attribute* %9 to i8*, !dbg !9356
  call void @kfree(i8* %10) #11, !dbg !9358
  store %struct.device_attribute* null, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !9359
  %11 = load i32, i32* %result, align 4, !dbg !9360
  store i32 %11, i32* %retval, align 4, !dbg !9361
  br label %return, !dbg !9361

if.end5:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9362
  br label %return, !dbg !9362

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9363
  ret i32 %12, !dbg !9363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_fanspeed_setup(%struct.platform_device* %pd) #0 !dbg !9364 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !9365, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9367, metadata !DIExpression()), !dbg !9368
  %call = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9369
  %0 = bitcast i8* %call to %struct.device_attribute*, !dbg !9369
  store %struct.device_attribute* %0, %struct.device_attribute** @fan_handle, align 8, !dbg !9370
  %1 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9371
  %tobool = icmp ne %struct.device_attribute* %1, null, !dbg !9371
  br i1 %tobool, label %if.end, label %if.then, !dbg !9373

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9374
  br label %return, !dbg !9374

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9375
  %2 = bitcast i8* %call1 to %struct.device_attribute*, !dbg !9375
  store %struct.device_attribute* %2, %struct.device_attribute** @hsf_handle, align 8, !dbg !9376
  %3 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9377
  %tobool2 = icmp ne %struct.device_attribute* %3, null, !dbg !9377
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9379

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %result, align 4, !dbg !9380
  br label %out_hsf_handle_alloc, !dbg !9382

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !9383

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !9384

do.end:                                           ; preds = %do.body
  %4 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9386
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %4, i32 0, i32 0, !dbg !9387
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9388
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i8** %name, align 8, !dbg !9389
  %5 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9390
  %attr5 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %5, i32 0, i32 0, !dbg !9391
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr5, i32 0, i32 1, !dbg !9392
  store i16 292, i16* %mode, align 8, !dbg !9393
  %6 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9394
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %6, i32 0, i32 1, !dbg !9395
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_fanspeed_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9396
  %7 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9397
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %7, i32 0, i32 2, !dbg !9398
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9399
  br label %do.body6, !dbg !9400

do.body6:                                         ; preds = %do.end
  br label %do.end7, !dbg !9401

do.end7:                                          ; preds = %do.body6
  %8 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9403
  %attr8 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %8, i32 0, i32 0, !dbg !9404
  %name9 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr8, i32 0, i32 0, !dbg !9405
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.89, i64 0, i64 0), i8** %name9, align 8, !dbg !9406
  %9 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9407
  %attr10 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %9, i32 0, i32 0, !dbg !9408
  %mode11 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr10, i32 0, i32 1, !dbg !9409
  store i16 420, i16* %mode11, align 8, !dbg !9410
  %10 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9411
  %show12 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %10, i32 0, i32 1, !dbg !9412
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_hsfan_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show12, align 8, !dbg !9413
  %11 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9414
  %store13 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %11, i32 0, i32 2, !dbg !9415
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_hsfan_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store13, align 8, !dbg !9416
  %12 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9417
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %12, i32 0, i32 3, !dbg !9418
  %13 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9419
  %call14 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %13) #11, !dbg !9420
  store i32 %call14, i32* %result, align 4, !dbg !9421
  %14 = load i32, i32* %result, align 4, !dbg !9422
  %tobool15 = icmp ne i32 %14, 0, !dbg !9422
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !9424

if.then16:                                        ; preds = %do.end7
  br label %out_fan_handle, !dbg !9425

if.end17:                                         ; preds = %do.end7
  %15 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9426
  %dev18 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %15, i32 0, i32 3, !dbg !9427
  %16 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9428
  %call19 = call i32 @device_create_file(%struct.device* %dev18, %struct.device_attribute* %16) #11, !dbg !9429
  store i32 %call19, i32* %result, align 4, !dbg !9430
  %17 = load i32, i32* %result, align 4, !dbg !9431
  %tobool20 = icmp ne i32 %17, 0, !dbg !9431
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9433

if.then21:                                        ; preds = %if.end17
  br label %out_hsf_handle, !dbg !9434

if.end22:                                         ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !9435
  br label %return, !dbg !9435

out_hsf_handle:                                   ; preds = %if.then21
  call void @llvm.dbg.label(metadata !9436), !dbg !9437
  %18 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9438
  %dev23 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %18, i32 0, i32 3, !dbg !9439
  %19 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9440
  call void @device_remove_file(%struct.device* %dev23, %struct.device_attribute* %19) #11, !dbg !9441
  br label %out_fan_handle, !dbg !9441

out_fan_handle:                                   ; preds = %out_hsf_handle, %if.then16
  call void @llvm.dbg.label(metadata !9442), !dbg !9443
  %20 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !9444
  %21 = bitcast %struct.device_attribute* %20 to i8*, !dbg !9444
  call void @kfree(i8* %21) #11, !dbg !9445
  store %struct.device_attribute* null, %struct.device_attribute** @hsf_handle, align 8, !dbg !9446
  br label %out_hsf_handle_alloc, !dbg !9447

out_hsf_handle_alloc:                             ; preds = %out_fan_handle, %if.then3
  call void @llvm.dbg.label(metadata !9448), !dbg !9449
  %22 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !9450
  %23 = bitcast %struct.device_attribute* %22 to i8*, !dbg !9450
  call void @kfree(i8* %23) #11, !dbg !9451
  store %struct.device_attribute* null, %struct.device_attribute** @fan_handle, align 8, !dbg !9452
  %24 = load i32, i32* %result, align 4, !dbg !9453
  store i32 %24, i32* %retval, align 4, !dbg !9454
  br label %return, !dbg !9454

return:                                           ; preds = %out_hsf_handle_alloc, %if.end22, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9455
  ret i32 %25, !dbg !9455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_usb_charge_setup(%struct.platform_device* %pd) #0 !dbg !9456 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !9457, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9459, metadata !DIExpression()), !dbg !9460
  %call = call i32 @sony_call_snc_handle(i32 341, i32 0, i32* %result) #11, !dbg !9461
  %tobool = icmp ne i32 %call, 0, !dbg !9461
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9463

lor.lhs.false:                                    ; preds = %entry
  %0 = load i32, i32* %result, align 4, !dbg !9464
  %and = and i32 %0, 1, !dbg !9465
  %tobool1 = icmp ne i32 %and, 0, !dbg !9465
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9466

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i64 0, i64 0)) #12, !dbg !9467
  store i32 0, i32* %retval, align 4, !dbg !9469
  br label %return, !dbg !9469

if.end:                                           ; preds = %lor.lhs.false
  %call3 = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9470
  %1 = bitcast i8* %call3 to %struct.device_attribute*, !dbg !9470
  store %struct.device_attribute* %1, %struct.device_attribute** @uc_handle, align 8, !dbg !9471
  %2 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9472
  %tobool4 = icmp ne %struct.device_attribute* %2, null, !dbg !9472
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9474

if.then5:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !9475
  br label %return, !dbg !9475

if.end6:                                          ; preds = %if.end
  br label %do.body, !dbg !9476

do.body:                                          ; preds = %if.end6
  br label %do.end, !dbg !9477

do.end:                                           ; preds = %do.body
  %3 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9479
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 0, !dbg !9480
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9481
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.91, i64 0, i64 0), i8** %name, align 8, !dbg !9482
  %4 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9483
  %attr7 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %4, i32 0, i32 0, !dbg !9484
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr7, i32 0, i32 1, !dbg !9485
  store i16 420, i16* %mode, align 8, !dbg !9486
  %5 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9487
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %5, i32 0, i32 1, !dbg !9488
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_usb_charge_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9489
  %6 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9490
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %6, i32 0, i32 2, !dbg !9491
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_usb_charge_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9492
  %7 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9493
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !9494
  %8 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9495
  %call8 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %8) #11, !dbg !9496
  store i32 %call8, i32* %result, align 4, !dbg !9497
  %9 = load i32, i32* %result, align 4, !dbg !9498
  %tobool9 = icmp ne i32 %9, 0, !dbg !9498
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9500

if.then10:                                        ; preds = %do.end
  %10 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !9501
  %11 = bitcast %struct.device_attribute* %10 to i8*, !dbg !9501
  call void @kfree(i8* %11) #11, !dbg !9503
  store %struct.device_attribute* null, %struct.device_attribute** @uc_handle, align 8, !dbg !9504
  %12 = load i32, i32* %result, align 4, !dbg !9505
  store i32 %12, i32* %retval, align 4, !dbg !9506
  br label %return, !dbg !9506

if.end11:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9507
  br label %return, !dbg !9507

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9508
  ret i32 %13, !dbg !9508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_panelid_setup(%struct.platform_device* %pd) #0 !dbg !9509 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !9510, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9512, metadata !DIExpression()), !dbg !9513
  %call = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9514
  %0 = bitcast i8* %call to %struct.device_attribute*, !dbg !9514
  store %struct.device_attribute* %0, %struct.device_attribute** @panel_handle, align 8, !dbg !9515
  %1 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9516
  %tobool = icmp ne %struct.device_attribute* %1, null, !dbg !9516
  br i1 %tobool, label %if.end, label %if.then, !dbg !9518

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9519
  br label %return, !dbg !9519

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9520

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9521

do.end:                                           ; preds = %do.body
  %2 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9523
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %2, i32 0, i32 0, !dbg !9524
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9525
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.92, i64 0, i64 0), i8** %name, align 8, !dbg !9526
  %3 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9527
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 0, !dbg !9528
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1, i32 0, i32 1, !dbg !9529
  store i16 292, i16* %mode, align 8, !dbg !9530
  %4 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9531
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %4, i32 0, i32 1, !dbg !9532
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @sony_nc_panelid_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9533
  %5 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9534
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %5, i32 0, i32 2, !dbg !9535
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9536
  %6 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9537
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !9538
  %7 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9539
  %call2 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %7) #11, !dbg !9540
  store i32 %call2, i32* %result, align 4, !dbg !9541
  %8 = load i32, i32* %result, align 4, !dbg !9542
  %tobool3 = icmp ne i32 %8, 0, !dbg !9542
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9544

if.then4:                                         ; preds = %do.end
  %9 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !9545
  %10 = bitcast %struct.device_attribute* %9 to i8*, !dbg !9545
  call void @kfree(i8* %10) #11, !dbg !9547
  store %struct.device_attribute* null, %struct.device_attribute** @panel_handle, align 8, !dbg !9548
  %11 = load i32, i32* %result, align 4, !dbg !9549
  store i32 %11, i32* %retval, align 4, !dbg !9550
  br label %return, !dbg !9550

if.end5:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9551
  br label %return, !dbg !9551

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9552
  ret i32 %12, !dbg !9552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_smart_conn_setup(%struct.platform_device* %pd) #0 !dbg !9553 {
entry:
  %retval = alloca i32, align 4
  %pd.addr = alloca %struct.platform_device*, align 8
  %result = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9556, metadata !DIExpression()), !dbg !9557
  %call = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !9558
  %0 = bitcast i8* %call to %struct.device_attribute*, !dbg !9558
  store %struct.device_attribute* %0, %struct.device_attribute** @sc_handle, align 8, !dbg !9559
  %1 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9560
  %tobool = icmp ne %struct.device_attribute* %1, null, !dbg !9560
  br i1 %tobool, label %if.end, label %if.then, !dbg !9562

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9563
  br label %return, !dbg !9563

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9564

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9565

do.end:                                           ; preds = %do.body
  %2 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9567
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %2, i32 0, i32 0, !dbg !9568
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !9569
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.93, i64 0, i64 0), i8** %name, align 8, !dbg !9570
  %3 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9571
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 0, !dbg !9572
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr1, i32 0, i32 1, !dbg !9573
  store i16 128, i16* %mode, align 8, !dbg !9574
  %4 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9575
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %4, i32 0, i32 1, !dbg !9576
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* null, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !9577
  %5 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9578
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %5, i32 0, i32 2, !dbg !9579
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @sony_nc_smart_conn_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !9580
  %6 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !9581
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !9582
  %7 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9583
  %call2 = call i32 @device_create_file(%struct.device* %dev, %struct.device_attribute* %7) #11, !dbg !9584
  store i32 %call2, i32* %result, align 4, !dbg !9585
  %8 = load i32, i32* %result, align 4, !dbg !9586
  %tobool3 = icmp ne i32 %8, 0, !dbg !9586
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !9588

if.then4:                                         ; preds = %do.end
  %9 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !9589
  %10 = bitcast %struct.device_attribute* %9 to i8*, !dbg !9589
  call void @kfree(i8* %10) #11, !dbg !9591
  store %struct.device_attribute* null, %struct.device_attribute** @sc_handle, align 8, !dbg !9592
  %11 = load i32, i32* %result, align 4, !dbg !9593
  store i32 %11, i32* %retval, align 4, !dbg !9594
  br label %return, !dbg !9594

if.end5:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9595
  br label %return, !dbg !9595

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9596
  ret i32 %12, !dbg !9596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_find_snc_handle(i32 %handle) #0 !dbg !9597 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9600, metadata !DIExpression()), !dbg !9601
  %0 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !9602
  %tobool = icmp ne %struct.sony_nc_handles* %0, null, !dbg !9602
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9604

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %handle.addr, align 4, !dbg !9605
  %tobool1 = icmp ne i32 %1, 0, !dbg !9605
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9606

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9607
  br label %return, !dbg !9607

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !9608
  br label %for.cond, !dbg !9610

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !9611
  %cmp = icmp slt i32 %2, 16, !dbg !9613
  br i1 %cmp, label %for.body, label %for.end, !dbg !9614

for.body:                                         ; preds = %for.cond
  %3 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !9615
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %3, i32 0, i32 0, !dbg !9618
  %4 = load i32, i32* %i, align 4, !dbg !9619
  %idxprom = sext i32 %4 to i64, !dbg !9615
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !9615
  %5 = load i16, i16* %arrayidx, align 2, !dbg !9615
  %conv = zext i16 %5 to i32, !dbg !9615
  %6 = load i32, i32* %handle.addr, align 4, !dbg !9620
  %cmp2 = icmp eq i32 %conv, %6, !dbg !9621
  br i1 %cmp2, label %if.then4, label %if.end8, !dbg !9622

if.then4:                                         ; preds = %for.body
  br label %do.body, !dbg !9623

do.body:                                          ; preds = %if.then4
  %7 = load i32, i32* @debug, align 4, !dbg !9625
  %tobool5 = icmp ne i32 %7, 0, !dbg !9625
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9628

if.then6:                                         ; preds = %do.body
  %8 = load i32, i32* %handle.addr, align 4, !dbg !9625
  %9 = load i32, i32* %i, align 4, !dbg !9625
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.51, i64 0, i64 0), i32 %8, i32 %9) #12, !dbg !9625
  br label %if.end7, !dbg !9625

if.end7:                                          ; preds = %if.then6, %do.body
  br label %do.end, !dbg !9628

do.end:                                           ; preds = %if.end7
  %10 = load i32, i32* %i, align 4, !dbg !9629
  store i32 %10, i32* %retval, align 4, !dbg !9630
  br label %return, !dbg !9630

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !9631

for.inc:                                          ; preds = %if.end8
  %11 = load i32, i32* %i, align 4, !dbg !9632
  %inc = add i32 %11, 1, !dbg !9632
  store i32 %inc, i32* %i, align 4, !dbg !9632
  br label %for.cond, !dbg !9633, !llvm.loop !9634

for.end:                                          ; preds = %for.cond
  br label %do.body9, !dbg !9636

do.body9:                                         ; preds = %for.end
  %12 = load i32, i32* @debug, align 4, !dbg !9637
  %tobool10 = icmp ne i32 %12, 0, !dbg !9637
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !9640

if.then11:                                        ; preds = %do.body9
  %13 = load i32, i32* %handle.addr, align 4, !dbg !9637
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.52, i64 0, i64 0), i32 %13) #12, !dbg !9637
  br label %if.end13, !dbg !9637

if.end13:                                         ; preds = %if.then11, %do.body9
  br label %do.end14, !dbg !9640

do.end14:                                         ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !9641
  br label %return, !dbg !9641

return:                                           ; preds = %do.end14, %do.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !9642
  ret i32 %14, !dbg !9642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_touchpad_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !9643 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9646, metadata !DIExpression()), !dbg !9647
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9650, metadata !DIExpression()), !dbg !9651
  %0 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !9652
  %handle = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %0, i32 0, i32 1, !dbg !9654
  %1 = load i32, i32* %handle, align 8, !dbg !9654
  %call = call i32 @sony_call_snc_handle(i32 %1, i32 0, i32* %result) #11, !dbg !9655
  %tobool = icmp ne i32 %call, 0, !dbg !9655
  br i1 %tobool, label %if.then, label %if.end, !dbg !9656

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !9657
  br label %return, !dbg !9657

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !9658
  %3 = load i32, i32* %result, align 4, !dbg !9659
  %and = and i32 %3, 1, !dbg !9660
  %tobool1 = icmp ne i32 %and, 0, !dbg !9661
  %lnot = xor i1 %tobool1, true, !dbg !9661
  %lnot.ext = zext i1 %lnot to i32, !dbg !9661
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %lnot.ext) #11, !dbg !9662
  %conv = sext i32 %call2 to i64, !dbg !9662
  store i64 %conv, i64* %retval, align 8, !dbg !9663
  br label %return, !dbg !9663

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !9664
  ret i64 %4, !dbg !9664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_touchpad_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !9665 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9666, metadata !DIExpression()), !dbg !9667
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9668, metadata !DIExpression()), !dbg !9669
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9670, metadata !DIExpression()), !dbg !9671
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9672, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9674, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.declare(metadata i64* %value, metadata !9676, metadata !DIExpression()), !dbg !9677
  %0 = load i64, i64* %count.addr, align 8, !dbg !9678
  %cmp = icmp ugt i64 %0, 31, !dbg !9680
  br i1 %cmp, label %if.then, label %if.end, !dbg !9681

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !9682
  br label %return, !dbg !9682

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !9683
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !9685
  %tobool = icmp ne i32 %call, 0, !dbg !9685
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !9686

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !9687
  %cmp1 = icmp ugt i64 %2, 1, !dbg !9688
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9689

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !9690
  br label %return, !dbg !9690

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !9691
  %handle = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %3, i32 0, i32 1, !dbg !9693
  %4 = load i32, i32* %handle, align 8, !dbg !9693
  %5 = load i64, i64* %value, align 8, !dbg !9694
  %tobool4 = icmp ne i64 %5, 0, !dbg !9695
  %lnot = xor i1 %tobool4, true, !dbg !9695
  %lnot.ext = zext i1 %lnot to i32, !dbg !9695
  %shl = shl i32 %lnot.ext, 16, !dbg !9696
  %or = or i32 %shl, 256, !dbg !9697
  %call5 = call i32 @sony_call_snc_handle(i32 %4, i32 %or, i32* %result) #11, !dbg !9698
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9698
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9699

if.then7:                                         ; preds = %if.end3
  store i64 -5, i64* %retval, align 8, !dbg !9700
  br label %return, !dbg !9700

if.end8:                                          ; preds = %if.end3
  %6 = load i64, i64* %count.addr, align 8, !dbg !9701
  store i64 %6, i64* %retval, align 8, !dbg !9702
  br label %return, !dbg !9702

return:                                           ; preds = %if.end8, %if.then7, %if.then2, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !9703
  ret i64 %7, !dbg !9703
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtoul(i8* %s, i32 %base, i64* %res) #0 !dbg !9704 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !9712, metadata !DIExpression()), !dbg !9713
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9714
  %1 = load i32, i32* %base.addr, align 4, !dbg !9716
  %2 = load i64*, i64** %res.addr, align 8, !dbg !9717
  %call = call i32 @kstrtoull(i8* %0, i32 %1, i64* %2) #11, !dbg !9718
  ret i32 %call, !dbg !9719
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtoull(i8*, i32, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_battery_care_limit_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !9720 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9721, metadata !DIExpression()), !dbg !9722
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9723, metadata !DIExpression()), !dbg !9724
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9725, metadata !DIExpression()), !dbg !9726
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9727, metadata !DIExpression()), !dbg !9728
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9729, metadata !DIExpression()), !dbg !9730
  %0 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !9731
  %handle = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %0, i32 0, i32 1, !dbg !9733
  %1 = load i32, i32* %handle, align 8, !dbg !9733
  %call = call i32 @sony_call_snc_handle(i32 %1, i32 0, i32* %result) #11, !dbg !9734
  %tobool = icmp ne i32 %call, 0, !dbg !9734
  br i1 %tobool, label %if.then, label %if.end, !dbg !9735

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !9736
  br label %return, !dbg !9736

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %result, align 4, !dbg !9737
  %and = and i32 %2, 1, !dbg !9738
  %tobool1 = icmp ne i32 %and, 0, !dbg !9738
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !9739

cond.true:                                        ; preds = %if.end
  %3 = load i32, i32* %result, align 4, !dbg !9740
  %and2 = and i32 %3, 48, !dbg !9741
  %shr = lshr i32 %and2, 4, !dbg !9742
  br label %cond.end, !dbg !9739

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !9739

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shr, %cond.true ], [ 0, %cond.false ], !dbg !9739
  store i32 %cond, i32* %status, align 4, !dbg !9743
  %4 = load i32, i32* %status, align 4, !dbg !9744
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
  ], !dbg !9745

sw.bb:                                            ; preds = %cond.end
  store i32 80, i32* %status, align 4, !dbg !9746
  br label %sw.epilog, !dbg !9748

sw.bb3:                                           ; preds = %cond.end
  store i32 50, i32* %status, align 4, !dbg !9749
  br label %sw.epilog, !dbg !9750

sw.bb4:                                           ; preds = %cond.end
  store i32 100, i32* %status, align 4, !dbg !9751
  br label %sw.epilog, !dbg !9752

sw.default:                                       ; preds = %cond.end
  store i32 0, i32* %status, align 4, !dbg !9753
  br label %sw.epilog, !dbg !9754

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !9755
  %6 = load i32, i32* %status, align 4, !dbg !9756
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %6) #11, !dbg !9757
  %conv = sext i32 %call5 to i64, !dbg !9757
  store i64 %conv, i64* %retval, align 8, !dbg !9758
  br label %return, !dbg !9758

return:                                           ; preds = %sw.epilog, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !9759
  ret i64 %7, !dbg !9759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_battery_care_limit_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !9760 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %cmd = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9761, metadata !DIExpression()), !dbg !9762
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9763, metadata !DIExpression()), !dbg !9764
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9769, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !9771, metadata !DIExpression()), !dbg !9772
  call void @llvm.dbg.declare(metadata i64* %value, metadata !9773, metadata !DIExpression()), !dbg !9774
  %0 = load i64, i64* %count.addr, align 8, !dbg !9775
  %cmp = icmp ugt i64 %0, 31, !dbg !9777
  br i1 %cmp, label %if.then, label %if.end, !dbg !9778

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !9779
  br label %return, !dbg !9779

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !9780
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !9782
  %tobool = icmp ne i32 %call, 0, !dbg !9782
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !9783

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !9784
  br label %return, !dbg !9784

if.end2:                                          ; preds = %if.end
  store i32 0, i32* %cmd, align 4, !dbg !9785
  %2 = load i64, i64* %value, align 8, !dbg !9786
  %cmp3 = icmp ugt i64 %2, 0, !dbg !9788
  br i1 %cmp3, label %if.then4, label %if.end21, !dbg !9789

if.then4:                                         ; preds = %if.end2
  %3 = load i64, i64* %value, align 8, !dbg !9790
  %cmp5 = icmp ule i64 %3, 50, !dbg !9793
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !9794

if.then6:                                         ; preds = %if.then4
  store i32 32, i32* %cmd, align 4, !dbg !9795
  br label %if.end15, !dbg !9796

if.else:                                          ; preds = %if.then4
  %4 = load i64, i64* %value, align 8, !dbg !9797
  %cmp7 = icmp ule i64 %4, 80, !dbg !9799
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9800

if.then8:                                         ; preds = %if.else
  store i32 16, i32* %cmd, align 4, !dbg !9801
  br label %if.end14, !dbg !9802

if.else9:                                         ; preds = %if.else
  %5 = load i64, i64* %value, align 8, !dbg !9803
  %cmp10 = icmp ule i64 %5, 100, !dbg !9805
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !9806

if.then11:                                        ; preds = %if.else9
  store i32 48, i32* %cmd, align 4, !dbg !9807
  br label %if.end13, !dbg !9808

if.else12:                                        ; preds = %if.else9
  store i64 -22, i64* %retval, align 8, !dbg !9809
  br label %return, !dbg !9809

if.end13:                                         ; preds = %if.then11
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then8
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then6
  %6 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !9810
  %handle = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %6, i32 0, i32 1, !dbg !9812
  %7 = load i32, i32* %handle, align 8, !dbg !9812
  %cmp16 = icmp ne i32 %7, 319, !dbg !9813
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9814

if.then17:                                        ; preds = %if.end15
  %8 = load i32, i32* %cmd, align 4, !dbg !9815
  %9 = load i32, i32* %cmd, align 4, !dbg !9816
  %shl = shl i32 %9, 2, !dbg !9817
  %or = or i32 %8, %shl, !dbg !9818
  store i32 %or, i32* %cmd, align 4, !dbg !9819
  br label %if.end18, !dbg !9820

if.end18:                                         ; preds = %if.then17, %if.end15
  %10 = load i32, i32* %cmd, align 4, !dbg !9821
  %or19 = or i32 %10, 1, !dbg !9822
  %shl20 = shl i32 %or19, 16, !dbg !9823
  store i32 %shl20, i32* %cmd, align 4, !dbg !9824
  br label %if.end21, !dbg !9825

if.end21:                                         ; preds = %if.end18, %if.end2
  %11 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !9826
  %handle22 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %11, i32 0, i32 1, !dbg !9828
  %12 = load i32, i32* %handle22, align 8, !dbg !9828
  %13 = load i32, i32* %cmd, align 4, !dbg !9829
  %or23 = or i32 %13, 256, !dbg !9830
  %call24 = call i32 @sony_call_snc_handle(i32 %12, i32 %or23, i32* %result) #11, !dbg !9831
  %tobool25 = icmp ne i32 %call24, 0, !dbg !9831
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !9832

if.then26:                                        ; preds = %if.end21
  store i64 -5, i64* %retval, align 8, !dbg !9833
  br label %return, !dbg !9833

if.end27:                                         ; preds = %if.end21
  %14 = load i64, i64* %count.addr, align 8, !dbg !9834
  store i64 %14, i64* %retval, align 8, !dbg !9835
  br label %return, !dbg !9835

return:                                           ; preds = %if.end27, %if.then26, %if.else12, %if.then1, %if.then
  %15 = load i64, i64* %retval, align 8, !dbg !9836
  ret i64 %15, !dbg !9836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_battery_care_health_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !9837 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  %health = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.declare(metadata i64* %count, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i64 0, i64* %count, align 8, !dbg !9845
  call void @llvm.dbg.declare(metadata i32* %health, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !9848
  %handle = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %0, i32 0, i32 1, !dbg !9850
  %1 = load i32, i32* %handle, align 8, !dbg !9850
  %call = call i32 @sony_call_snc_handle(i32 %1, i32 512, i32* %health) #11, !dbg !9851
  %tobool = icmp ne i32 %call, 0, !dbg !9851
  br i1 %tobool, label %if.then, label %if.end, !dbg !9852

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !9853
  br label %return, !dbg !9853

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !9854
  %3 = load i32, i32* %health, align 4, !dbg !9855
  %and = and i32 %3, 255, !dbg !9856
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !9857
  %conv = sext i32 %call1 to i64, !dbg !9857
  store i64 %conv, i64* %count, align 8, !dbg !9858
  %4 = load i64, i64* %count, align 8, !dbg !9859
  store i64 %4, i64* %retval, align 8, !dbg !9860
  br label %return, !dbg !9860

return:                                           ; preds = %if.end, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !9861
  ret i64 %5, !dbg !9861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_lid_resume_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !9862 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %pos = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9863, metadata !DIExpression()), !dbg !9864
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9865, metadata !DIExpression()), !dbg !9866
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9867, metadata !DIExpression()), !dbg !9868
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9869, metadata !DIExpression()), !dbg !9870
  store i32 0, i32* %pos, align 4, !dbg !9870
  br label %while.cond, !dbg !9871

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %pos, align 4, !dbg !9872
  %cmp = icmp ult i32 %0, 3, !dbg !9873
  br i1 %cmp, label %while.body, label %while.end, !dbg !9871

while.body:                                       ; preds = %while.cond
  %1 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9874
  %attrs = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %1, i32 0, i32 0, !dbg !9877
  %2 = load i32, i32* %pos, align 4, !dbg !9878
  %idxprom = zext i32 %2 to i64, !dbg !9874
  %arrayidx = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !9874
  %attr1 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx, i32 0, i32 0, !dbg !9879
  %3 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !9880
  %attr2 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %3, i32 0, i32 0, !dbg !9881
  %cmp3 = icmp eq %struct.attribute* %attr1, %attr2, !dbg !9882
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9883

if.then:                                          ; preds = %while.body
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !9884
  %5 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9885
  %status = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %5, i32 0, i32 1, !dbg !9886
  %6 = load i32, i32* %status, align 8, !dbg !9886
  %7 = load i32, i32* %pos, align 4, !dbg !9887
  %shr = lshr i32 %6, %7, !dbg !9888
  %and = and i32 %shr, 1, !dbg !9889
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %4, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !9890
  %conv = sext i32 %call to i64, !dbg !9890
  store i64 %conv, i64* %retval, align 8, !dbg !9891
  br label %return, !dbg !9891

if.end:                                           ; preds = %while.body
  %8 = load i32, i32* %pos, align 4, !dbg !9892
  %inc = add i32 %8, 1, !dbg !9892
  store i32 %inc, i32* %pos, align 4, !dbg !9892
  br label %while.cond, !dbg !9871, !llvm.loop !9893

while.end:                                        ; preds = %while.cond
  store i64 -22, i64* %retval, align 8, !dbg !9895
  br label %return, !dbg !9895

return:                                           ; preds = %while.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !9896
  ret i64 %9, !dbg !9896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_lid_resume_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !9897 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  %pos = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9902, metadata !DIExpression()), !dbg !9903
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9904, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9906, metadata !DIExpression()), !dbg !9907
  call void @llvm.dbg.declare(metadata i64* %value, metadata !9908, metadata !DIExpression()), !dbg !9909
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9910, metadata !DIExpression()), !dbg !9911
  store i32 0, i32* %pos, align 4, !dbg !9911
  %0 = load i64, i64* %count.addr, align 8, !dbg !9912
  %cmp = icmp ugt i64 %0, 31, !dbg !9914
  br i1 %cmp, label %if.then, label %if.end, !dbg !9915

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !9916
  br label %return, !dbg !9916

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !9917
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !9919
  %tobool = icmp ne i32 %call, 0, !dbg !9919
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !9920

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !9921
  %cmp1 = icmp ugt i64 %2, 1, !dbg !9922
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9923

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !9924
  br label %return, !dbg !9924

if.end3:                                          ; preds = %lor.lhs.false
  br label %while.cond, !dbg !9925

while.cond:                                       ; preds = %if.end9, %if.end3
  %3 = load i32, i32* %pos, align 4, !dbg !9926
  %cmp4 = icmp ult i32 %3, 3, !dbg !9927
  br i1 %cmp4, label %while.body, label %while.end, !dbg !9925

while.body:                                       ; preds = %while.cond
  %4 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9928
  %attrs = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %4, i32 0, i32 0, !dbg !9931
  %5 = load i32, i32* %pos, align 4, !dbg !9932
  %idxprom = zext i32 %5 to i64, !dbg !9928
  %arrayidx = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !9928
  %attr5 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx, i32 0, i32 0, !dbg !9933
  %6 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !9934
  %attr6 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %6, i32 0, i32 0, !dbg !9935
  %cmp7 = icmp eq %struct.attribute* %attr5, %attr6, !dbg !9936
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9937

if.then8:                                         ; preds = %while.body
  br label %while.end, !dbg !9938

if.end9:                                          ; preds = %while.body
  %7 = load i32, i32* %pos, align 4, !dbg !9939
  %inc = add i32 %7, 1, !dbg !9939
  store i32 %inc, i32* %pos, align 4, !dbg !9939
  br label %while.cond, !dbg !9925, !llvm.loop !9940

while.end:                                        ; preds = %if.then8, %while.cond
  %8 = load i32, i32* %pos, align 4, !dbg !9942
  %cmp10 = icmp eq i32 %8, 3, !dbg !9944
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9945

if.then11:                                        ; preds = %while.end
  store i64 -22, i64* %retval, align 8, !dbg !9946
  br label %return, !dbg !9946

if.end12:                                         ; preds = %while.end
  %9 = load i64, i64* %value, align 8, !dbg !9947
  %tobool13 = icmp ne i64 %9, 0, !dbg !9947
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !9949

if.then14:                                        ; preds = %if.end12
  %10 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9950
  %status = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %10, i32 0, i32 1, !dbg !9951
  %11 = load i32, i32* %status, align 8, !dbg !9951
  %12 = load i32, i32* %pos, align 4, !dbg !9952
  %shl = shl i32 1, %12, !dbg !9953
  %or = or i32 %11, %shl, !dbg !9954
  %conv = zext i32 %or to i64, !dbg !9950
  store i64 %conv, i64* %value, align 8, !dbg !9955
  br label %if.end18, !dbg !9956

if.else:                                          ; preds = %if.end12
  %13 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9957
  %status15 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %13, i32 0, i32 1, !dbg !9958
  %14 = load i32, i32* %status15, align 8, !dbg !9958
  %15 = load i32, i32* %pos, align 4, !dbg !9959
  %shl16 = shl i32 1, %15, !dbg !9960
  %neg = xor i32 %shl16, -1, !dbg !9961
  %and = and i32 %14, %neg, !dbg !9962
  %conv17 = zext i32 %and to i64, !dbg !9957
  store i64 %conv17, i64* %value, align 8, !dbg !9963
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  %16 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9964
  %handle = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %16, i32 0, i32 2, !dbg !9966
  %17 = load i32, i32* %handle, align 4, !dbg !9966
  %18 = load i64, i64* %value, align 8, !dbg !9967
  %shl19 = shl i64 %18, 16, !dbg !9968
  %or20 = or i64 %shl19, 256, !dbg !9969
  %conv21 = trunc i64 %or20 to i32, !dbg !9967
  %call22 = call i32 @sony_call_snc_handle(i32 %17, i32 %conv21, i32* %result) #11, !dbg !9970
  %tobool23 = icmp ne i32 %call22, 0, !dbg !9970
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !9971

if.then24:                                        ; preds = %if.end18
  store i64 -5, i64* %retval, align 8, !dbg !9972
  br label %return, !dbg !9972

if.end25:                                         ; preds = %if.end18
  %19 = load i64, i64* %value, align 8, !dbg !9973
  %conv26 = trunc i64 %19 to i32, !dbg !9973
  %20 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !9974
  %status27 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %20, i32 0, i32 1, !dbg !9975
  store i32 %conv26, i32* %status27, align 8, !dbg !9976
  %21 = load i64, i64* %count.addr, align 8, !dbg !9977
  store i64 %21, i64* %retval, align 8, !dbg !9978
  br label %return, !dbg !9978

return:                                           ; preds = %if.end25, %if.then24, %if.then11, %if.then2, %if.then
  %22 = load i64, i64* %retval, align 8, !dbg !9979
  ret i64 %22, !dbg !9979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_thermal_mode_get() #0 !dbg !9980 {
entry:
  %retval = alloca i32, align 4
  %result = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9981, metadata !DIExpression()), !dbg !9982
  %call = call i32 @sony_call_snc_handle(i32 290, i32 256, i32* %result) #11, !dbg !9983
  %tobool = icmp ne i32 %call, 0, !dbg !9983
  br i1 %tobool, label %if.then, label %if.end, !dbg !9985

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !9986
  br label %return, !dbg !9986

if.end:                                           ; preds = %entry
  %0 = load i32, i32* %result, align 4, !dbg !9987
  %and = and i32 %0, 255, !dbg !9988
  store i32 %and, i32* %retval, align 4, !dbg !9989
  br label %return, !dbg !9989

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !9990
  ret i32 %1, !dbg !9990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_thermal_profiles_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !9991 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %cnt = alloca i16, align 2
  %idx = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata i16* %cnt, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata i64* %idx, metadata !10000, metadata !DIExpression()), !dbg !10001
  store i64 0, i64* %idx, align 8, !dbg !10001
  store i16 0, i16* %cnt, align 2, !dbg !10002
  br label %for.cond, !dbg !10004

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i16, i16* %cnt, align 2, !dbg !10005
  %conv = sext i16 %0 to i32, !dbg !10005
  %cmp = icmp slt i32 %conv, 3, !dbg !10007
  br i1 %cmp, label %for.body, label %for.end, !dbg !10008

for.body:                                         ; preds = %for.cond
  %1 = load i16, i16* %cnt, align 2, !dbg !10009
  %tobool = icmp ne i16 %1, 0, !dbg !10009
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10012

lor.lhs.false:                                    ; preds = %for.body
  %2 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !10013
  %profiles = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %2, i32 0, i32 1, !dbg !10014
  %3 = load i32, i32* %profiles, align 4, !dbg !10014
  %4 = load i16, i16* %cnt, align 2, !dbg !10015
  %conv2 = sext i16 %4 to i32, !dbg !10015
  %and = and i32 %3, %conv2, !dbg !10016
  %tobool3 = icmp ne i32 %and, 0, !dbg !10016
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10017

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !10018
  %6 = load i64, i64* %idx, align 8, !dbg !10019
  %add.ptr = getelementptr i8, i8* %5, i64 %6, !dbg !10020
  %7 = load i64, i64* %idx, align 8, !dbg !10021
  %sub = sub i64 4096, %7, !dbg !10022
  %8 = load i16, i16* %cnt, align 2, !dbg !10023
  %idxprom = sext i16 %8 to i64, !dbg !10024
  %arrayidx = getelementptr [3 x i8*], [3 x i8*]* @snc_thermal_profiles, i64 0, i64 %idxprom, !dbg !10024
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !10024
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i8* %9) #11, !dbg !10025
  %conv4 = sext i32 %call to i64, !dbg !10025
  %10 = load i64, i64* %idx, align 8, !dbg !10026
  %add = add i64 %10, %conv4, !dbg !10026
  store i64 %add, i64* %idx, align 8, !dbg !10026
  br label %if.end, !dbg !10027

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !10028

for.inc:                                          ; preds = %if.end
  %11 = load i16, i16* %cnt, align 2, !dbg !10029
  %inc = add i16 %11, 1, !dbg !10029
  store i16 %inc, i16* %cnt, align 2, !dbg !10029
  br label %for.cond, !dbg !10030, !llvm.loop !10031

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %buffer.addr, align 8, !dbg !10033
  %13 = load i64, i64* %idx, align 8, !dbg !10034
  %add.ptr5 = getelementptr i8, i8* %12, i64 %13, !dbg !10035
  %14 = load i64, i64* %idx, align 8, !dbg !10036
  %sub6 = sub i64 4096, %14, !dbg !10037
  %call7 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr5, i64 %sub6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)) #11, !dbg !10038
  %conv8 = sext i32 %call7 to i64, !dbg !10038
  %15 = load i64, i64* %idx, align 8, !dbg !10039
  %add9 = add i64 %15, %conv8, !dbg !10039
  store i64 %add9, i64* %idx, align 8, !dbg !10039
  %16 = load i64, i64* %idx, align 8, !dbg !10040
  ret i64 %16, !dbg !10041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_thermal_mode_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10042 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  %mode = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.declare(metadata i64* %count, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i64 0, i64* %count, align 8, !dbg !10050
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10051, metadata !DIExpression()), !dbg !10052
  %call = call i32 @sony_nc_thermal_mode_get() #11, !dbg !10053
  store i32 %call, i32* %mode, align 4, !dbg !10052
  %0 = load i32, i32* %mode, align 4, !dbg !10054
  %cmp = icmp slt i32 %0, 0, !dbg !10056
  br i1 %cmp, label %if.then, label %if.end, !dbg !10057

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %mode, align 4, !dbg !10058
  %conv = sext i32 %1 to i64, !dbg !10058
  store i64 %conv, i64* %retval, align 8, !dbg !10059
  br label %return, !dbg !10059

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !10060
  %3 = load i32, i32* %mode, align 4, !dbg !10061
  %idxprom = sext i32 %3 to i64, !dbg !10062
  %arrayidx = getelementptr [3 x i8*], [3 x i8*]* @snc_thermal_profiles, i64 0, i64 %idxprom, !dbg !10062
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !10062
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0), i8* %4) #11, !dbg !10063
  %conv2 = sext i32 %call1 to i64, !dbg !10063
  store i64 %conv2, i64* %count, align 8, !dbg !10064
  %5 = load i64, i64* %count, align 8, !dbg !10065
  store i64 %5, i64* %retval, align 8, !dbg !10066
  br label %return, !dbg !10066

return:                                           ; preds = %if.end, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !10067
  ret i64 %6, !dbg !10067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_thermal_mode_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10068 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %cmd = alloca i16, align 2
  %len = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10069, metadata !DIExpression()), !dbg !10070
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10073, metadata !DIExpression()), !dbg !10074
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10075, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.declare(metadata i16* %cmd, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10079, metadata !DIExpression()), !dbg !10080
  %0 = load i64, i64* %count.addr, align 8, !dbg !10081
  store i64 %0, i64* %len, align 8, !dbg !10080
  %1 = load i64, i64* %count.addr, align 8, !dbg !10082
  %cmp = icmp eq i64 %1, 0, !dbg !10084
  br i1 %cmp, label %if.then, label %if.end, !dbg !10085

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10086
  br label %return, !dbg !10086

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !10087
  %3 = load i64, i64* %len, align 8, !dbg !10089
  %sub = sub i64 %3, 1, !dbg !10090
  %arrayidx = getelementptr i8, i8* %2, i64 %sub, !dbg !10087
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10087
  %conv = sext i8 %4 to i32, !dbg !10087
  %cmp1 = icmp eq i32 %conv, 10, !dbg !10091
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !10092

if.then3:                                         ; preds = %if.end
  %5 = load i64, i64* %len, align 8, !dbg !10093
  %dec = add i64 %5, -1, !dbg !10093
  store i64 %dec, i64* %len, align 8, !dbg !10093
  br label %if.end4, !dbg !10094

if.end4:                                          ; preds = %if.then3, %if.end
  store i16 0, i16* %cmd, align 2, !dbg !10095
  br label %for.cond, !dbg !10097

for.cond:                                         ; preds = %for.inc, %if.end4
  %6 = load i16, i16* %cmd, align 2, !dbg !10098
  %conv5 = zext i16 %6 to i32, !dbg !10098
  %cmp6 = icmp slt i32 %conv5, 3, !dbg !10100
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10101

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %buffer.addr, align 8, !dbg !10102
  %8 = load i16, i16* %cmd, align 2, !dbg !10104
  %idxprom = zext i16 %8 to i64, !dbg !10105
  %arrayidx8 = getelementptr [3 x i8*], [3 x i8*]* @snc_thermal_profiles, i64 0, i64 %idxprom, !dbg !10105
  %9 = load i8*, i8** %arrayidx8, align 8, !dbg !10105
  %10 = load i64, i64* %len, align 8, !dbg !10106
  %call = call i32 @strncmp(i8* %7, i8* %9, i64 %10) #11, !dbg !10107
  %cmp9 = icmp eq i32 %call, 0, !dbg !10108
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10109

if.then11:                                        ; preds = %for.body
  br label %for.end, !dbg !10110

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !10111

for.inc:                                          ; preds = %if.end12
  %11 = load i16, i16* %cmd, align 2, !dbg !10112
  %inc = add i16 %11, 1, !dbg !10112
  store i16 %inc, i16* %cmd, align 2, !dbg !10112
  br label %for.cond, !dbg !10113, !llvm.loop !10114

for.end:                                          ; preds = %if.then11, %for.cond
  %12 = load i16, i16* %cmd, align 2, !dbg !10116
  %call13 = call i32 @sony_nc_thermal_mode_set(i16 zeroext %12) #11, !dbg !10118
  %tobool = icmp ne i32 %call13, 0, !dbg !10118
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !10119

if.then14:                                        ; preds = %for.end
  store i64 -5, i64* %retval, align 8, !dbg !10120
  br label %return, !dbg !10120

if.end15:                                         ; preds = %for.end
  %13 = load i64, i64* %count.addr, align 8, !dbg !10121
  store i64 %13, i64* %retval, align 8, !dbg !10122
  br label %return, !dbg !10122

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !10123
  ret i64 %14, !dbg !10123
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_thermal_mode_set(i16 zeroext %mode) #0 !dbg !10124 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i16, align 2
  %result = alloca i32, align 4
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !10127, metadata !DIExpression()), !dbg !10128
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10129, metadata !DIExpression()), !dbg !10130
  %0 = load i16, i16* %mode.addr, align 2, !dbg !10131
  %conv = zext i16 %0 to i32, !dbg !10131
  %tobool = icmp ne i32 %conv, 0, !dbg !10131
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !10133

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !10134
  %profiles = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %1, i32 0, i32 1, !dbg !10135
  %2 = load i32, i32* %profiles, align 4, !dbg !10135
  %3 = load i16, i16* %mode.addr, align 2, !dbg !10136
  %conv1 = zext i16 %3 to i32, !dbg !10136
  %and = and i32 %2, %conv1, !dbg !10137
  %tobool2 = icmp ne i32 %and, 0, !dbg !10137
  br i1 %tobool2, label %lor.lhs.false, label %if.then, !dbg !10138

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load i16, i16* %mode.addr, align 2, !dbg !10139
  %conv3 = zext i16 %4 to i32, !dbg !10139
  %cmp = icmp sge i32 %conv3, 3, !dbg !10140
  br i1 %cmp, label %if.then, label %if.end, !dbg !10141

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !10142
  br label %return, !dbg !10142

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i16, i16* %mode.addr, align 2, !dbg !10143
  %conv5 = zext i16 %5 to i32, !dbg !10143
  %shl = shl i32 %conv5, 16, !dbg !10145
  %or = or i32 %shl, 512, !dbg !10146
  %call = call i32 @sony_call_snc_handle(i32 290, i32 %or, i32* %result) #11, !dbg !10147
  %tobool6 = icmp ne i32 %call, 0, !dbg !10147
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10148

if.then7:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !10149
  br label %return, !dbg !10149

if.end8:                                          ; preds = %if.end
  %6 = load i16, i16* %mode.addr, align 2, !dbg !10150
  %conv9 = zext i16 %6 to i32, !dbg !10150
  %7 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !10151
  %mode10 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %7, i32 0, i32 0, !dbg !10152
  store i32 %conv9, i32* %mode10, align 8, !dbg !10153
  store i32 0, i32* %retval, align 4, !dbg !10154
  br label %return, !dbg !10154

return:                                           ; preds = %if.end8, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10155
  ret i32 %8, !dbg !10155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_gfx_switch_status_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10156 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %pos = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10159, metadata !DIExpression()), !dbg !10160
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !10163, metadata !DIExpression()), !dbg !10164
  %call = call i32 @__sony_nc_gfx_switch_status_get() #11, !dbg !10165
  store i32 %call, i32* %pos, align 4, !dbg !10164
  %0 = load i32, i32* %pos, align 4, !dbg !10166
  %cmp = icmp slt i32 %0, 0, !dbg !10168
  br i1 %cmp, label %if.then, label %if.end, !dbg !10169

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %pos, align 4, !dbg !10170
  %conv = sext i32 %1 to i64, !dbg !10170
  store i64 %conv, i64* %retval, align 8, !dbg !10171
  br label %return, !dbg !10171

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !10172
  %3 = load i32, i32* %pos, align 4, !dbg !10173
  %cmp1 = icmp eq i32 %3, 0, !dbg !10174
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10173

cond.true:                                        ; preds = %if.end
  br label %cond.end10, !dbg !10173

cond.false:                                       ; preds = %if.end
  %4 = load i32, i32* %pos, align 4, !dbg !10175
  %cmp3 = icmp eq i32 %4, 1, !dbg !10176
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !10175

cond.true5:                                       ; preds = %cond.false
  br label %cond.end, !dbg !10175

cond.false6:                                      ; preds = %cond.false
  %5 = load i32, i32* %pos, align 4, !dbg !10177
  %cmp7 = icmp eq i32 %5, 2, !dbg !10178
  %6 = zext i1 %cmp7 to i64, !dbg !10177
  %cond = select i1 %cmp7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), !dbg !10177
  br label %cond.end, !dbg !10175

cond.end:                                         ; preds = %cond.false6, %cond.true5
  %cond9 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i64 0, i64 0), %cond.true5 ], [ %cond, %cond.false6 ], !dbg !10175
  br label %cond.end10, !dbg !10173

cond.end10:                                       ; preds = %cond.end, %cond.true
  %cond11 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), %cond.true ], [ %cond9, %cond.end ], !dbg !10173
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i64 0, i64 0), i8* %cond11) #11, !dbg !10179
  %conv13 = sext i32 %call12 to i64, !dbg !10179
  store i64 %conv13, i64* %retval, align 8, !dbg !10180
  br label %return, !dbg !10180

return:                                           ; preds = %cond.end10, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !10181
  ret i64 %7, !dbg !10181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__sony_nc_gfx_switch_status_get() #0 !dbg !10182 {
entry:
  %retval = alloca i32, align 4
  %result = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10183, metadata !DIExpression()), !dbg !10184
  %0 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !10185
  %handle = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %0, i32 0, i32 1, !dbg !10187
  %1 = load i32, i32* %handle, align 8, !dbg !10187
  %2 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !10188
  %handle1 = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %2, i32 0, i32 1, !dbg !10189
  %3 = load i32, i32* %handle1, align 8, !dbg !10189
  %cmp = icmp eq i32 %3, 347, !dbg !10190
  %4 = zext i1 %cmp to i64, !dbg !10188
  %cond = select i1 %cmp, i32 0, i32 256, !dbg !10188
  %call = call i32 @sony_call_snc_handle(i32 %1, i32 %cond, i32* %result) #11, !dbg !10191
  %tobool = icmp ne i32 %call, 0, !dbg !10191
  br i1 %tobool, label %if.then, label %if.end, !dbg !10192

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !10193
  br label %return, !dbg !10193

if.end:                                           ; preds = %entry
  %5 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !10194
  %handle2 = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %5, i32 0, i32 1, !dbg !10195
  %6 = load i32, i32* %handle2, align 8, !dbg !10195
  switch i32 %6, label %sw.epilog [
    i32 326, label %sw.bb
    i32 347, label %sw.bb5
    i32 296, label %sw.bb9
  ], !dbg !10196

sw.bb:                                            ; preds = %if.end
  %7 = load i32, i32* %result, align 4, !dbg !10197
  %and = and i32 %7, 1, !dbg !10199
  %tobool3 = icmp ne i32 %and, 0, !dbg !10197
  %8 = zext i1 %tobool3 to i64, !dbg !10197
  %cond4 = select i1 %tobool3, i32 0, i32 1, !dbg !10197
  store i32 %cond4, i32* %retval, align 4, !dbg !10200
  br label %return, !dbg !10200

sw.bb5:                                           ; preds = %if.end
  %9 = load i32, i32* %result, align 4, !dbg !10201
  %and6 = and i32 %9, 1, !dbg !10202
  %tobool7 = icmp ne i32 %and6, 0, !dbg !10201
  %10 = zext i1 %tobool7 to i64, !dbg !10201
  %cond8 = select i1 %tobool7, i32 1, i32 0, !dbg !10201
  store i32 %cond8, i32* %retval, align 4, !dbg !10203
  br label %return, !dbg !10203

sw.bb9:                                           ; preds = %if.end
  br label %do.body, !dbg !10204

do.body:                                          ; preds = %sw.bb9
  %11 = load i32, i32* @debug, align 4, !dbg !10205
  %tobool10 = icmp ne i32 %11, 0, !dbg !10205
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !10208

if.then11:                                        ; preds = %do.body
  %12 = load i32, i32* %result, align 4, !dbg !10205
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i64 0, i64 0), i32 %12) #12, !dbg !10205
  br label %if.end13, !dbg !10205

if.end13:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !10208

do.end:                                           ; preds = %if.end13
  %13 = load i32, i32* %result, align 4, !dbg !10209
  %and14 = and i32 %13, 128, !dbg !10210
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10210
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !10209

cond.true:                                        ; preds = %do.end
  br label %cond.end, !dbg !10209

cond.false:                                       ; preds = %do.end
  %14 = load i32, i32* %result, align 4, !dbg !10211
  %and16 = and i32 %14, 2, !dbg !10212
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10211
  %15 = zext i1 %tobool17 to i64, !dbg !10211
  %cond18 = select i1 %tobool17, i32 1, i32 0, !dbg !10211
  br label %cond.end, !dbg !10209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond19 = phi i32 [ 2, %cond.true ], [ %cond18, %cond.false ], !dbg !10209
  store i32 %cond19, i32* %retval, align 4, !dbg !10213
  br label %return, !dbg !10213

sw.epilog:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10214
  br label %return, !dbg !10214

return:                                           ; preds = %sw.epilog, %cond.end, %sw.bb5, %sw.bb, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !10215
  ret i32 %16, !dbg !10215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_highspeed_charging_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10216 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10217, metadata !DIExpression()), !dbg !10218
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10223, metadata !DIExpression()), !dbg !10224
  %call = call i32 @sony_call_snc_handle(i32 305, i32 256, i32* %result) #11, !dbg !10225
  %tobool = icmp ne i32 %call, 0, !dbg !10225
  br i1 %tobool, label %if.then, label %if.end, !dbg !10227

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !10228
  br label %return, !dbg !10228

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10229
  %1 = load i32, i32* %result, align 4, !dbg !10230
  %and = and i32 %1, 1, !dbg !10231
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !10232
  %conv = sext i32 %call1 to i64, !dbg !10232
  store i64 %conv, i64* %retval, align 8, !dbg !10233
  br label %return, !dbg !10233

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10234
  ret i64 %2, !dbg !10234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_highspeed_charging_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10235 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10238, metadata !DIExpression()), !dbg !10239
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10240, metadata !DIExpression()), !dbg !10241
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10244, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10246, metadata !DIExpression()), !dbg !10247
  %0 = load i64, i64* %count.addr, align 8, !dbg !10248
  %cmp = icmp ugt i64 %0, 31, !dbg !10250
  br i1 %cmp, label %if.then, label %if.end, !dbg !10251

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10252
  br label %return, !dbg !10252

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10253
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10255
  %tobool = icmp ne i32 %call, 0, !dbg !10255
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !10256

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10257
  %cmp1 = icmp ugt i64 %2, 1, !dbg !10258
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10259

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10260
  br label %return, !dbg !10260

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load i64, i64* %value, align 8, !dbg !10261
  %shl = shl i64 %3, 16, !dbg !10263
  %or = or i64 %shl, 512, !dbg !10264
  %conv = trunc i64 %or to i32, !dbg !10261
  %call4 = call i32 @sony_call_snc_handle(i32 305, i32 %conv, i32* %result) #11, !dbg !10265
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10265
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10266

if.then6:                                         ; preds = %if.end3
  store i64 -5, i64* %retval, align 8, !dbg !10267
  br label %return, !dbg !10267

if.end7:                                          ; preds = %if.end3
  %4 = load i64, i64* %count.addr, align 8, !dbg !10268
  store i64 %4, i64* %retval, align 8, !dbg !10269
  br label %return, !dbg !10269

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !10270
  ret i64 %5, !dbg !10270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_setup_rfkill(%struct.acpi_device* %device, i32 %nc_type) #0 !dbg !10271 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %nc_type.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %rfk = alloca %struct.rfkill*, align 8
  %type = alloca i32, align 4
  %name = alloca i8*, align 8
  %result = alloca i32, align 4
  %hwblock = alloca i8, align 1
  %swblock = alloca i8, align 1
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store i32 %nc_type, i32* %nc_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nc_type.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10278, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.declare(metadata %struct.rfkill** %rfk, metadata !10280, metadata !DIExpression()), !dbg !10281
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10282, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.declare(metadata i8** %name, metadata !10284, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10286, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.declare(metadata i8* %hwblock, metadata !10288, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.declare(metadata i8* %swblock, metadata !10290, metadata !DIExpression()), !dbg !10291
  %0 = load i32, i32* %nc_type.addr, align 4, !dbg !10292
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !10293

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %type, align 4, !dbg !10294
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i64 0, i64 0), i8** %name, align 8, !dbg !10296
  br label %sw.epilog, !dbg !10297

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %type, align 4, !dbg !10298
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i64 0, i64 0), i8** %name, align 8, !dbg !10299
  br label %sw.epilog, !dbg !10300

sw.bb2:                                           ; preds = %entry
  store i32 5, i32* %type, align 4, !dbg !10301
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i8** %name, align 8, !dbg !10302
  br label %sw.epilog, !dbg !10303

sw.bb3:                                           ; preds = %entry
  store i32 4, i32* %type, align 4, !dbg !10304
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0), i8** %name, align 8, !dbg !10305
  br label %sw.epilog, !dbg !10306

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10307
  br label %return, !dbg !10307

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %name, align 8, !dbg !10308
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10309
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 21, !dbg !10310
  %3 = load i32, i32* %type, align 4, !dbg !10311
  %4 = load i32, i32* %nc_type.addr, align 4, !dbg !10312
  %conv = zext i32 %4 to i64, !dbg !10313
  %5 = inttoptr i64 %conv to i8*, !dbg !10313
  %call = call %struct.rfkill* @rfkill_alloc(i8* %1, %struct.device* %dev, i32 %3, %struct.rfkill_ops* @sony_rfkill_ops, i8* %5) #11, !dbg !10314
  store %struct.rfkill* %call, %struct.rfkill** %rfk, align 8, !dbg !10315
  %6 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10316
  %tobool = icmp ne %struct.rfkill* %6, null, !dbg !10316
  br i1 %tobool, label %if.end, label %if.then, !dbg !10318

if.then:                                          ; preds = %sw.epilog
  store i32 -12, i32* %retval, align 4, !dbg !10319
  br label %return, !dbg !10319

if.end:                                           ; preds = %sw.epilog
  %7 = load i32, i32* @sony_rfkill_handle, align 4, !dbg !10320
  %call4 = call i32 @sony_call_snc_handle(i32 %7, i32 512, i32* %result) #11, !dbg !10321
  store i32 %call4, i32* %err, align 4, !dbg !10322
  %8 = load i32, i32* %err, align 4, !dbg !10323
  %cmp = icmp slt i32 %8, 0, !dbg !10325
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !10326

if.then6:                                         ; preds = %if.end
  %9 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10327
  call void @rfkill_destroy(%struct.rfkill* %9) #11, !dbg !10329
  %10 = load i32, i32* %err, align 4, !dbg !10330
  store i32 %10, i32* %retval, align 4, !dbg !10331
  br label %return, !dbg !10331

if.end7:                                          ; preds = %if.end
  %11 = load i32, i32* %result, align 4, !dbg !10332
  %and = and i32 %11, 1, !dbg !10333
  %tobool8 = icmp ne i32 %and, 0, !dbg !10334
  %lnot = xor i1 %tobool8, true, !dbg !10334
  %frombool = zext i1 %lnot to i8, !dbg !10335
  store i8 %frombool, i8* %hwblock, align 1, !dbg !10335
  %12 = load i32, i32* @sony_rfkill_handle, align 4, !dbg !10336
  %13 = load i32, i32* %nc_type.addr, align 4, !dbg !10337
  %idxprom = zext i32 %13 to i64, !dbg !10338
  %arrayidx = getelementptr [4 x i32], [4 x i32]* @sony_rfkill_address, i64 0, i64 %idxprom, !dbg !10338
  %14 = load i32, i32* %arrayidx, align 4, !dbg !10338
  %call9 = call i32 @sony_call_snc_handle(i32 %12, i32 %14, i32* %result) #11, !dbg !10339
  store i32 %call9, i32* %err, align 4, !dbg !10340
  %15 = load i32, i32* %err, align 4, !dbg !10341
  %cmp10 = icmp slt i32 %15, 0, !dbg !10343
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10344

if.then12:                                        ; preds = %if.end7
  %16 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10345
  call void @rfkill_destroy(%struct.rfkill* %16) #11, !dbg !10347
  %17 = load i32, i32* %err, align 4, !dbg !10348
  store i32 %17, i32* %retval, align 4, !dbg !10349
  br label %return, !dbg !10349

if.end13:                                         ; preds = %if.end7
  %18 = load i32, i32* %result, align 4, !dbg !10350
  %and14 = and i32 %18, 2, !dbg !10351
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10352
  %lnot16 = xor i1 %tobool15, true, !dbg !10352
  %frombool17 = zext i1 %lnot16 to i8, !dbg !10353
  store i8 %frombool17, i8* %swblock, align 1, !dbg !10353
  %19 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10354
  %20 = load i8, i8* %swblock, align 1, !dbg !10355
  %tobool18 = trunc i8 %20 to i1, !dbg !10355
  call void @rfkill_init_sw_state(%struct.rfkill* %19, i1 zeroext %tobool18) #11, !dbg !10356
  %21 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10357
  %22 = load i8, i8* %hwblock, align 1, !dbg !10358
  %tobool19 = trunc i8 %22 to i1, !dbg !10358
  %call20 = call zeroext i1 @rfkill_set_hw_state(%struct.rfkill* %21, i1 zeroext %tobool19) #11, !dbg !10359
  %23 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10360
  %call21 = call i32 @rfkill_register(%struct.rfkill* %23) #11, !dbg !10361
  store i32 %call21, i32* %err, align 4, !dbg !10362
  %24 = load i32, i32* %err, align 4, !dbg !10363
  %tobool22 = icmp ne i32 %24, 0, !dbg !10363
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !10365

if.then23:                                        ; preds = %if.end13
  %25 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10366
  call void @rfkill_destroy(%struct.rfkill* %25) #11, !dbg !10368
  %26 = load i32, i32* %err, align 4, !dbg !10369
  store i32 %26, i32* %retval, align 4, !dbg !10370
  br label %return, !dbg !10370

if.end24:                                         ; preds = %if.end13
  %27 = load %struct.rfkill*, %struct.rfkill** %rfk, align 8, !dbg !10371
  %28 = load i32, i32* %nc_type.addr, align 4, !dbg !10372
  %idxprom25 = zext i32 %28 to i64, !dbg !10373
  %arrayidx26 = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom25, !dbg !10373
  store %struct.rfkill* %27, %struct.rfkill** %arrayidx26, align 8, !dbg !10374
  %29 = load i32, i32* %err, align 4, !dbg !10375
  store i32 %29, i32* %retval, align 4, !dbg !10376
  br label %return, !dbg !10376

return:                                           ; preds = %if.end24, %if.then23, %if.then12, %if.then6, %if.then, %sw.default
  %30 = load i32, i32* %retval, align 4, !dbg !10377
  ret i32 %30, !dbg !10377
}

; Function Attrs: noredzone
declare dso_local %struct.rfkill* @rfkill_alloc(i8*, %struct.device*, i32, %struct.rfkill_ops*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @rfkill_destroy(%struct.rfkill*) #2

; Function Attrs: noredzone
declare dso_local void @rfkill_init_sw_state(%struct.rfkill*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @rfkill_set_hw_state(%struct.rfkill*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @rfkill_register(%struct.rfkill*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_rfkill_set(i8* %data, i1 zeroext %blocked) #0 !dbg !10378 {
entry:
  %data.addr = alloca i8*, align 8
  %blocked.addr = alloca i8, align 1
  %result = alloca i32, align 4
  %argument = alloca i32, align 4
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10379, metadata !DIExpression()), !dbg !10380
  %frombool = zext i1 %blocked to i8
  store i8 %frombool, i8* %blocked.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %blocked.addr, metadata !10381, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10383, metadata !DIExpression()), !dbg !10384
  call void @llvm.dbg.declare(metadata i32* %argument, metadata !10385, metadata !DIExpression()), !dbg !10386
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10387
  %1 = ptrtoint i8* %0 to i64, !dbg !10388
  %arrayidx = getelementptr [4 x i32], [4 x i32]* @sony_rfkill_address, i64 0, i64 %1, !dbg !10389
  %2 = load i32, i32* %arrayidx, align 4, !dbg !10389
  %add = add i32 %2, 256, !dbg !10390
  store i32 %add, i32* %argument, align 4, !dbg !10386
  %3 = load i8, i8* %blocked.addr, align 1, !dbg !10391
  %tobool = trunc i8 %3 to i1, !dbg !10391
  br i1 %tobool, label %if.end, label %if.then, !dbg !10393

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %argument, align 4, !dbg !10394
  %or = or i32 %4, 458752, !dbg !10394
  store i32 %or, i32* %argument, align 4, !dbg !10394
  br label %if.end, !dbg !10395

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* @sony_rfkill_handle, align 4, !dbg !10396
  %6 = load i32, i32* %argument, align 4, !dbg !10397
  %call = call i32 @sony_call_snc_handle(i32 %5, i32 %6, i32* %result) #11, !dbg !10398
  ret i32 %call, !dbg !10399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_kbd_backlight_mode_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10400 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10401, metadata !DIExpression()), !dbg !10402
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10403, metadata !DIExpression()), !dbg !10404
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10405, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.declare(metadata i64* %count, metadata !10407, metadata !DIExpression()), !dbg !10408
  store i64 0, i64* %count, align 8, !dbg !10408
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10409
  %1 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10410
  %mode = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %1, i32 0, i32 2, !dbg !10411
  %2 = load i32, i32* %mode, align 8, !dbg !10411
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %2) #11, !dbg !10412
  %conv = sext i32 %call to i64, !dbg !10412
  store i64 %conv, i64* %count, align 8, !dbg !10413
  %3 = load i64, i64* %count, align 8, !dbg !10414
  ret i64 %3, !dbg !10415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_kbd_backlight_mode_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10416 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10425, metadata !DIExpression()), !dbg !10426
  store i32 0, i32* %ret, align 4, !dbg !10426
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10427, metadata !DIExpression()), !dbg !10428
  %0 = load i64, i64* %count.addr, align 8, !dbg !10429
  %cmp = icmp ugt i64 %0, 31, !dbg !10431
  br i1 %cmp, label %if.then, label %if.end, !dbg !10432

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10433
  br label %return, !dbg !10433

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10434
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10436
  %tobool = icmp ne i32 %call, 0, !dbg !10436
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !10437

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10438
  br label %return, !dbg !10438

if.end2:                                          ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10439
  %conv = trunc i64 %2 to i8, !dbg !10439
  %call3 = call i64 @__sony_nc_kbd_backlight_mode_set(i8 zeroext %conv) #11, !dbg !10440
  %conv4 = trunc i64 %call3 to i32, !dbg !10440
  store i32 %conv4, i32* %ret, align 4, !dbg !10441
  %3 = load i32, i32* %ret, align 4, !dbg !10442
  %cmp5 = icmp slt i32 %3, 0, !dbg !10444
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !10445

if.then7:                                         ; preds = %if.end2
  %4 = load i32, i32* %ret, align 4, !dbg !10446
  %conv8 = sext i32 %4 to i64, !dbg !10446
  store i64 %conv8, i64* %retval, align 8, !dbg !10447
  br label %return, !dbg !10447

if.end9:                                          ; preds = %if.end2
  %5 = load i64, i64* %count.addr, align 8, !dbg !10448
  store i64 %5, i64* %retval, align 8, !dbg !10449
  br label %return, !dbg !10449

return:                                           ; preds = %if.end9, %if.then7, %if.then1, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !10450
  ret i64 %6, !dbg !10450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__sony_nc_kbd_backlight_mode_set(i8 zeroext %value) #0 !dbg !10451 {
entry:
  %retval = alloca i64, align 8
  %value.addr = alloca i8, align 1
  %result = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10456, metadata !DIExpression()), !dbg !10457
  %0 = load i8, i8* %value.addr, align 1, !dbg !10458
  %conv = zext i8 %0 to i32, !dbg !10458
  %cmp = icmp sgt i32 %conv, 2, !dbg !10460
  br i1 %cmp, label %if.then, label %if.end, !dbg !10461

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10462
  br label %return, !dbg !10462

if.end:                                           ; preds = %entry
  %1 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10463
  %handle = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %1, i32 0, i32 0, !dbg !10465
  %2 = load i32, i32* %handle, align 8, !dbg !10465
  %3 = load i8, i8* %value.addr, align 1, !dbg !10466
  %conv2 = zext i8 %3 to i32, !dbg !10466
  %shl = shl i32 %conv2, 16, !dbg !10467
  %4 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10468
  %base = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %4, i32 0, i32 1, !dbg !10469
  %5 = load i32, i32* %base, align 4, !dbg !10469
  %or = or i32 %shl, %5, !dbg !10470
  %call = call i32 @sony_call_snc_handle(i32 %2, i32 %or, i32* %result) #11, !dbg !10471
  %tobool = icmp ne i32 %call, 0, !dbg !10471
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !10472

if.then3:                                         ; preds = %if.end
  store i64 -5, i64* %retval, align 8, !dbg !10473
  br label %return, !dbg !10473

if.end4:                                          ; preds = %if.end
  %6 = load i8, i8* %value.addr, align 1, !dbg !10474
  %conv5 = zext i8 %6 to i32, !dbg !10474
  %cmp6 = icmp ne i32 %conv5, 1, !dbg !10476
  br i1 %cmp6, label %if.then8, label %if.end15, !dbg !10477

if.then8:                                         ; preds = %if.end4
  %7 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10478
  %handle9 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %7, i32 0, i32 0, !dbg !10479
  %8 = load i32, i32* %handle9, align 8, !dbg !10479
  %9 = load i8, i8* %value.addr, align 1, !dbg !10480
  %conv10 = zext i8 %9 to i32, !dbg !10480
  %shl11 = shl i32 %conv10, 15, !dbg !10481
  %10 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10482
  %base12 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %10, i32 0, i32 1, !dbg !10483
  %11 = load i32, i32* %base12, align 4, !dbg !10483
  %add = add i32 %11, 256, !dbg !10484
  %or13 = or i32 %shl11, %add, !dbg !10485
  %call14 = call i32 @sony_call_snc_handle(i32 %8, i32 %or13, i32* %result) #11, !dbg !10486
  br label %if.end15, !dbg !10486

if.end15:                                         ; preds = %if.then8, %if.end4
  %12 = load i8, i8* %value.addr, align 1, !dbg !10487
  %conv16 = zext i8 %12 to i32, !dbg !10487
  %13 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10488
  %mode = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %13, i32 0, i32 2, !dbg !10489
  store i32 %conv16, i32* %mode, align 8, !dbg !10490
  store i64 0, i64* %retval, align 8, !dbg !10491
  br label %return, !dbg !10491

return:                                           ; preds = %if.end15, %if.then3, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !10492
  ret i64 %14, !dbg !10492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_kbd_backlight_timeout_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10493 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10494, metadata !DIExpression()), !dbg !10495
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10496, metadata !DIExpression()), !dbg !10497
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata i64* %count, metadata !10500, metadata !DIExpression()), !dbg !10501
  store i64 0, i64* %count, align 8, !dbg !10501
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10502
  %1 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10503
  %timeout = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %1, i32 0, i32 3, !dbg !10504
  %2 = load i32, i32* %timeout, align 4, !dbg !10504
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %2) #11, !dbg !10505
  %conv = sext i32 %call to i64, !dbg !10505
  store i64 %conv, i64* %count, align 8, !dbg !10506
  %3 = load i64, i64* %count, align 8, !dbg !10507
  ret i64 %3, !dbg !10508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_kbd_backlight_timeout_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10509 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10510, metadata !DIExpression()), !dbg !10511
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10518, metadata !DIExpression()), !dbg !10519
  store i32 0, i32* %ret, align 4, !dbg !10519
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10520, metadata !DIExpression()), !dbg !10521
  %0 = load i64, i64* %count.addr, align 8, !dbg !10522
  %cmp = icmp ugt i64 %0, 31, !dbg !10524
  br i1 %cmp, label %if.then, label %if.end, !dbg !10525

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10526
  br label %return, !dbg !10526

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10527
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10529
  %tobool = icmp ne i32 %call, 0, !dbg !10529
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !10530

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10531
  br label %return, !dbg !10531

if.end2:                                          ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10532
  %conv = trunc i64 %2 to i8, !dbg !10532
  %call3 = call i32 @__sony_nc_kbd_backlight_timeout_set(i8 zeroext %conv) #11, !dbg !10533
  store i32 %call3, i32* %ret, align 4, !dbg !10534
  %3 = load i32, i32* %ret, align 4, !dbg !10535
  %cmp4 = icmp slt i32 %3, 0, !dbg !10537
  br i1 %cmp4, label %if.then6, label %if.end8, !dbg !10538

if.then6:                                         ; preds = %if.end2
  %4 = load i32, i32* %ret, align 4, !dbg !10539
  %conv7 = sext i32 %4 to i64, !dbg !10539
  store i64 %conv7, i64* %retval, align 8, !dbg !10540
  br label %return, !dbg !10540

if.end8:                                          ; preds = %if.end2
  %5 = load i64, i64* %count.addr, align 8, !dbg !10541
  store i64 %5, i64* %retval, align 8, !dbg !10542
  br label %return, !dbg !10542

return:                                           ; preds = %if.end8, %if.then6, %if.then1, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !10543
  ret i64 %6, !dbg !10543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__sony_nc_kbd_backlight_timeout_set(i8 zeroext %value) #0 !dbg !10544 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i8, align 1
  %result = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !10547, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10549, metadata !DIExpression()), !dbg !10550
  %0 = load i8, i8* %value.addr, align 1, !dbg !10551
  %conv = zext i8 %0 to i32, !dbg !10551
  %cmp = icmp sgt i32 %conv, 3, !dbg !10553
  br i1 %cmp, label %if.then, label %if.end, !dbg !10554

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10555
  br label %return, !dbg !10555

if.end:                                           ; preds = %entry
  %1 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10556
  %handle = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %1, i32 0, i32 0, !dbg !10558
  %2 = load i32, i32* %handle, align 8, !dbg !10558
  %3 = load i8, i8* %value.addr, align 1, !dbg !10559
  %conv2 = zext i8 %3 to i32, !dbg !10559
  %shl = shl i32 %conv2, 16, !dbg !10560
  %4 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10561
  %base = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %4, i32 0, i32 1, !dbg !10562
  %5 = load i32, i32* %base, align 4, !dbg !10562
  %add = add i32 %5, 512, !dbg !10563
  %or = or i32 %shl, %add, !dbg !10564
  %call = call i32 @sony_call_snc_handle(i32 %2, i32 %or, i32* %result) #11, !dbg !10565
  %tobool = icmp ne i32 %call, 0, !dbg !10565
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !10566

if.then3:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !10567
  br label %return, !dbg !10567

if.end4:                                          ; preds = %if.end
  %6 = load i8, i8* %value.addr, align 1, !dbg !10568
  %conv5 = zext i8 %6 to i32, !dbg !10568
  %7 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !10569
  %timeout = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %7, i32 0, i32 3, !dbg !10570
  store i32 %conv5, i32* %timeout, align 4, !dbg !10571
  store i32 0, i32* %retval, align 4, !dbg !10572
  br label %return, !dbg !10572

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10573
  ret i32 %8, !dbg !10573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_lowbatt_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10574 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10577, metadata !DIExpression()), !dbg !10578
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10581, metadata !DIExpression()), !dbg !10582
  %call = call i32 @sony_call_snc_handle(i32 289, i32 512, i32* %result) #11, !dbg !10583
  %tobool = icmp ne i32 %call, 0, !dbg !10583
  br i1 %tobool, label %if.then, label %if.end, !dbg !10585

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !10586
  br label %return, !dbg !10586

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10587
  %1 = load i32, i32* %result, align 4, !dbg !10588
  %and = and i32 %1, 1, !dbg !10589
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !10590
  %conv = sext i32 %call1 to i64, !dbg !10590
  store i64 %conv, i64* %retval, align 8, !dbg !10591
  br label %return, !dbg !10591

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10592
  ret i64 %2, !dbg !10592
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_lowbatt_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10593 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10594, metadata !DIExpression()), !dbg !10595
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10596, metadata !DIExpression()), !dbg !10597
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10598, metadata !DIExpression()), !dbg !10599
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10602, metadata !DIExpression()), !dbg !10603
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load i64, i64* %count.addr, align 8, !dbg !10606
  %cmp = icmp ugt i64 %0, 31, !dbg !10608
  br i1 %cmp, label %if.then, label %if.end, !dbg !10609

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10610
  br label %return, !dbg !10610

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10611
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10613
  %tobool = icmp ne i32 %call, 0, !dbg !10613
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !10614

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10615
  %cmp1 = icmp ugt i64 %2, 1, !dbg !10616
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10617

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10618
  br label %return, !dbg !10618

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load i64, i64* %value, align 8, !dbg !10619
  %shl = shl i64 %3, 8, !dbg !10621
  %conv = trunc i64 %shl to i32, !dbg !10619
  %call4 = call i32 @sony_call_snc_handle(i32 289, i32 %conv, i32* %result) #11, !dbg !10622
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10622
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10623

if.then6:                                         ; preds = %if.end3
  store i64 -5, i64* %retval, align 8, !dbg !10624
  br label %return, !dbg !10624

if.end7:                                          ; preds = %if.end3
  %4 = load i64, i64* %count.addr, align 8, !dbg !10625
  store i64 %4, i64* %retval, align 8, !dbg !10626
  br label %return, !dbg !10626

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !10627
  ret i64 %5, !dbg !10627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_fanspeed_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10628 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10629, metadata !DIExpression()), !dbg !10630
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10631, metadata !DIExpression()), !dbg !10632
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10633, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10635, metadata !DIExpression()), !dbg !10636
  %call = call i32 @sony_call_snc_handle(i32 329, i32 768, i32* %result) #11, !dbg !10637
  %tobool = icmp ne i32 %call, 0, !dbg !10637
  br i1 %tobool, label %if.then, label %if.end, !dbg !10639

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !10640
  br label %return, !dbg !10640

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10641
  %1 = load i32, i32* %result, align 4, !dbg !10642
  %and = and i32 %1, 255, !dbg !10643
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !10644
  %conv = sext i32 %call1 to i64, !dbg !10644
  store i64 %conv, i64* %retval, align 8, !dbg !10645
  br label %return, !dbg !10645

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10646
  ret i64 %2, !dbg !10646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_hsfan_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10647 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10652, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10654, metadata !DIExpression()), !dbg !10655
  %call = call i32 @sony_call_snc_handle(i32 329, i32 256, i32* %result) #11, !dbg !10656
  %tobool = icmp ne i32 %call, 0, !dbg !10656
  br i1 %tobool, label %if.then, label %if.end, !dbg !10658

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !10659
  br label %return, !dbg !10659

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10660
  %1 = load i32, i32* %result, align 4, !dbg !10661
  %and = and i32 %1, 1, !dbg !10662
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !10663
  %conv = sext i32 %call1 to i64, !dbg !10663
  store i64 %conv, i64* %retval, align 8, !dbg !10664
  br label %return, !dbg !10664

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10665
  ret i64 %2, !dbg !10665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_hsfan_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10666 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10671, metadata !DIExpression()), !dbg !10672
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10673, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10677, metadata !DIExpression()), !dbg !10678
  %0 = load i64, i64* %count.addr, align 8, !dbg !10679
  %cmp = icmp ugt i64 %0, 31, !dbg !10681
  br i1 %cmp, label %if.then, label %if.end, !dbg !10682

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10683
  br label %return, !dbg !10683

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10684
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10686
  %tobool = icmp ne i32 %call, 0, !dbg !10686
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !10687

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10688
  %cmp1 = icmp ugt i64 %2, 1, !dbg !10689
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10690

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10691
  br label %return, !dbg !10691

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load i64, i64* %value, align 8, !dbg !10692
  %shl = shl i64 %3, 16, !dbg !10694
  %or = or i64 %shl, 512, !dbg !10695
  %conv = trunc i64 %or to i32, !dbg !10692
  %call4 = call i32 @sony_call_snc_handle(i32 329, i32 %conv, i32* %result) #11, !dbg !10696
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10696
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10697

if.then6:                                         ; preds = %if.end3
  store i64 -5, i64* %retval, align 8, !dbg !10698
  br label %return, !dbg !10698

if.end7:                                          ; preds = %if.end3
  %4 = load i64, i64* %count.addr, align 8, !dbg !10699
  store i64 %4, i64* %retval, align 8, !dbg !10700
  br label %return, !dbg !10700

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !10701
  ret i64 %5, !dbg !10701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_usb_charge_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10702 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10703, metadata !DIExpression()), !dbg !10704
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10705, metadata !DIExpression()), !dbg !10706
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10707, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10709, metadata !DIExpression()), !dbg !10710
  %call = call i32 @sony_call_snc_handle(i32 341, i32 0, i32* %result) #11, !dbg !10711
  %tobool = icmp ne i32 %call, 0, !dbg !10711
  br i1 %tobool, label %if.then, label %if.end, !dbg !10713

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !10714
  br label %return, !dbg !10714

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10715
  %1 = load i32, i32* %result, align 4, !dbg !10716
  %and = and i32 %1, 1, !dbg !10717
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %and) #11, !dbg !10718
  %conv = sext i32 %call1 to i64, !dbg !10718
  store i64 %conv, i64* %retval, align 8, !dbg !10719
  br label %return, !dbg !10719

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10720
  ret i64 %2, !dbg !10720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_usb_charge_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10721 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10722, metadata !DIExpression()), !dbg !10723
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10730, metadata !DIExpression()), !dbg !10731
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10732, metadata !DIExpression()), !dbg !10733
  %0 = load i64, i64* %count.addr, align 8, !dbg !10734
  %cmp = icmp ugt i64 %0, 31, !dbg !10736
  br i1 %cmp, label %if.then, label %if.end, !dbg !10737

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10738
  br label %return, !dbg !10738

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10739
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10741
  %tobool = icmp ne i32 %call, 0, !dbg !10741
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !10742

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10743
  %cmp1 = icmp ugt i64 %2, 1, !dbg !10744
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10745

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10746
  br label %return, !dbg !10746

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load i64, i64* %value, align 8, !dbg !10747
  %shl = shl i64 %3, 16, !dbg !10749
  %or = or i64 %shl, 256, !dbg !10750
  %conv = trunc i64 %or to i32, !dbg !10747
  %call4 = call i32 @sony_call_snc_handle(i32 341, i32 %conv, i32* %result) #11, !dbg !10751
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10751
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10752

if.then6:                                         ; preds = %if.end3
  store i64 -5, i64* %retval, align 8, !dbg !10753
  br label %return, !dbg !10753

if.end7:                                          ; preds = %if.end3
  %4 = load i64, i64* %count.addr, align 8, !dbg !10754
  store i64 %4, i64* %retval, align 8, !dbg !10755
  br label %return, !dbg !10755

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !10756
  ret i64 %5, !dbg !10756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_panelid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !10757 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10758, metadata !DIExpression()), !dbg !10759
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10762, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10764, metadata !DIExpression()), !dbg !10765
  %call = call i32 @sony_call_snc_handle(i32 285, i32 0, i32* %result) #11, !dbg !10766
  %tobool = icmp ne i32 %call, 0, !dbg !10766
  br i1 %tobool, label %if.then, label %if.end, !dbg !10768

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !10769
  br label %return, !dbg !10769

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10770
  %1 = load i32, i32* %result, align 4, !dbg !10771
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %1) #11, !dbg !10772
  %conv = sext i32 %call1 to i64, !dbg !10772
  store i64 %conv, i64* %retval, align 8, !dbg !10773
  br label %return, !dbg !10773

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !10774
  ret i64 %2, !dbg !10774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_smart_conn_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !10775 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10780, metadata !DIExpression()), !dbg !10781
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10782, metadata !DIExpression()), !dbg !10783
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10784, metadata !DIExpression()), !dbg !10785
  call void @llvm.dbg.declare(metadata i64* %value, metadata !10786, metadata !DIExpression()), !dbg !10787
  %0 = load i64, i64* %count.addr, align 8, !dbg !10788
  %cmp = icmp ugt i64 %0, 31, !dbg !10790
  br i1 %cmp, label %if.then, label %if.end, !dbg !10791

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10792
  br label %return, !dbg !10792

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10793
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !10795
  %tobool = icmp ne i32 %call, 0, !dbg !10795
  br i1 %tobool, label %if.then2, label %lor.lhs.false, !dbg !10796

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !10797
  %cmp1 = icmp ugt i64 %2, 1, !dbg !10798
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10799

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10800
  br label %return, !dbg !10800

if.end3:                                          ; preds = %lor.lhs.false
  %3 = load i64, i64* %value, align 8, !dbg !10801
  %shl = shl i64 %3, 16, !dbg !10803
  %conv = trunc i64 %shl to i32, !dbg !10801
  %call4 = call i32 @sony_call_snc_handle(i32 360, i32 %conv, i32* %result) #11, !dbg !10804
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10804
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10805

if.then6:                                         ; preds = %if.end3
  store i64 -5, i64* %retval, align 8, !dbg !10806
  br label %return, !dbg !10806

if.end7:                                          ; preds = %if.end3
  %4 = load i64, i64* %count.addr, align 8, !dbg !10807
  store i64 %4, i64* %retval, align 8, !dbg !10808
  br label %return, !dbg !10808

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !10809
  ret i64 %5, !dbg !10809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_backlight_ng_read_limits(i32 %handle, %struct.sony_backlight_props* %props) #0 !dbg !10810 {
entry:
  %handle.addr = alloca i32, align 4
  %props.addr = alloca %struct.sony_backlight_props*, align 8
  %offset = alloca i64, align 8
  %i = alloca i32, align 4
  %lvl_table_len = alloca i32, align 4
  %min = alloca i8, align 1
  %max = alloca i8, align 1
  %buffer = alloca [32 x i8], align 16
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  store %struct.sony_backlight_props* %props, %struct.sony_backlight_props** %props.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sony_backlight_props** %props.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10819, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.declare(metadata i32* %lvl_table_len, metadata !10821, metadata !DIExpression()), !dbg !10822
  store i32 0, i32* %lvl_table_len, align 4, !dbg !10822
  call void @llvm.dbg.declare(metadata i8* %min, metadata !10823, metadata !DIExpression()), !dbg !10824
  store i8 -1, i8* %min, align 1, !dbg !10824
  call void @llvm.dbg.declare(metadata i8* %max, metadata !10825, metadata !DIExpression()), !dbg !10826
  store i8 0, i8* %max, align 1, !dbg !10826
  call void @llvm.dbg.declare(metadata [32 x i8]* %buffer, metadata !10827, metadata !DIExpression()), !dbg !10828
  %0 = bitcast [32 x i8]* %buffer to i8*, !dbg !10828
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 32, i1 false), !dbg !10828
  %1 = load i32, i32* %handle.addr, align 4, !dbg !10829
  %2 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10830
  %handle1 = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %2, i32 0, i32 1, !dbg !10831
  store i32 %1, i32* %handle1, align 8, !dbg !10832
  %3 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10833
  %offset2 = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %3, i32 0, i32 3, !dbg !10834
  store i8 0, i8* %offset2, align 8, !dbg !10835
  %4 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10836
  %maxlvl = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %4, i32 0, i32 4, !dbg !10837
  store i8 -1, i8* %maxlvl, align 1, !dbg !10838
  %5 = load i32, i32* %handle.addr, align 4, !dbg !10839
  %call = call i32 @sony_find_snc_handle(i32 %5) #11, !dbg !10840
  %conv = sext i32 %call to i64, !dbg !10840
  store i64 %conv, i64* %offset, align 8, !dbg !10841
  %6 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !10842
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buffer, i64 0, i64 0, !dbg !10843
  %call3 = call i32 @sony_nc_buffer_call(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i64* %offset, i8* %arraydecay, i64 32) #11, !dbg !10844
  store i32 %call3, i32* %i, align 4, !dbg !10845
  %7 = load i32, i32* %i, align 4, !dbg !10846
  %cmp = icmp slt i32 %7, 0, !dbg !10848
  br i1 %cmp, label %if.then, label %if.end, !dbg !10849

if.then:                                          ; preds = %entry
  br label %do.end51, !dbg !10850

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %handle.addr, align 4, !dbg !10851
  switch i32 %8, label %sw.epilog [
    i32 303, label %sw.bb
    i32 311, label %sw.bb
    i32 323, label %sw.bb5
    i32 331, label %sw.bb5
    i32 332, label %sw.bb5
  ], !dbg !10852

sw.bb:                                            ; preds = %if.end, %if.end
  store i32 9, i32* %lvl_table_len, align 4, !dbg !10853
  br label %sw.epilog, !dbg !10855

sw.bb5:                                           ; preds = %if.end, %if.end, %if.end
  store i32 16, i32* %lvl_table_len, align 4, !dbg !10856
  br label %sw.epilog, !dbg !10857

sw.epilog:                                        ; preds = %if.end, %sw.bb5, %sw.bb
  store i32 0, i32* %i, align 4, !dbg !10858
  br label %for.cond, !dbg !10860

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %9 = load i32, i32* %i, align 4, !dbg !10861
  %10 = load i32, i32* %lvl_table_len, align 4, !dbg !10863
  %cmp6 = icmp slt i32 %9, %10, !dbg !10864
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !10865

land.rhs:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !10866
  %conv8 = sext i32 %11 to i64, !dbg !10866
  %cmp9 = icmp ult i64 %conv8, 32, !dbg !10867
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %12 = phi i1 [ false, %for.cond ], [ %cmp9, %land.rhs ], !dbg !10868
  br i1 %12, label %for.body, label %for.end, !dbg !10869

for.body:                                         ; preds = %land.end
  br label %do.body, !dbg !10870

do.body:                                          ; preds = %for.body
  %13 = load i32, i32* @debug, align 4, !dbg !10872
  %tobool = icmp ne i32 %13, 0, !dbg !10872
  br i1 %tobool, label %if.then11, label %if.end14, !dbg !10875

if.then11:                                        ; preds = %do.body
  %14 = load i32, i32* %i, align 4, !dbg !10872
  %idxprom = sext i32 %14 to i64, !dbg !10872
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom, !dbg !10872
  %15 = load i8, i8* %arrayidx, align 1, !dbg !10872
  %conv12 = zext i8 %15 to i32, !dbg !10872
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.97, i64 0, i64 0), i32 %conv12) #12, !dbg !10872
  br label %if.end14, !dbg !10872

if.end14:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !10875

do.end:                                           ; preds = %if.end14
  %16 = load i32, i32* %i, align 4, !dbg !10876
  %idxprom15 = sext i32 %16 to i64, !dbg !10878
  %arrayidx16 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom15, !dbg !10878
  %17 = load i8, i8* %arrayidx16, align 1, !dbg !10878
  %tobool17 = icmp ne i8 %17, 0, !dbg !10878
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !10879

if.then18:                                        ; preds = %do.end
  br label %for.end, !dbg !10880

if.end19:                                         ; preds = %do.end
  %18 = load i32, i32* %i, align 4, !dbg !10881
  %idxprom20 = sext i32 %18 to i64, !dbg !10883
  %arrayidx21 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom20, !dbg !10883
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !10883
  %conv22 = zext i8 %19 to i32, !dbg !10883
  %20 = load i8, i8* %max, align 1, !dbg !10884
  %conv23 = zext i8 %20 to i32, !dbg !10884
  %cmp24 = icmp sgt i32 %conv22, %conv23, !dbg !10885
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !10886

if.then26:                                        ; preds = %if.end19
  %21 = load i32, i32* %i, align 4, !dbg !10887
  %idxprom27 = sext i32 %21 to i64, !dbg !10888
  %arrayidx28 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom27, !dbg !10888
  %22 = load i8, i8* %arrayidx28, align 1, !dbg !10888
  store i8 %22, i8* %max, align 1, !dbg !10889
  br label %if.end29, !dbg !10890

if.end29:                                         ; preds = %if.then26, %if.end19
  %23 = load i32, i32* %i, align 4, !dbg !10891
  %idxprom30 = sext i32 %23 to i64, !dbg !10893
  %arrayidx31 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom30, !dbg !10893
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !10893
  %conv32 = zext i8 %24 to i32, !dbg !10893
  %25 = load i8, i8* %min, align 1, !dbg !10894
  %conv33 = zext i8 %25 to i32, !dbg !10894
  %cmp34 = icmp slt i32 %conv32, %conv33, !dbg !10895
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !10896

if.then36:                                        ; preds = %if.end29
  %26 = load i32, i32* %i, align 4, !dbg !10897
  %idxprom37 = sext i32 %26 to i64, !dbg !10898
  %arrayidx38 = getelementptr [32 x i8], [32 x i8]* %buffer, i64 0, i64 %idxprom37, !dbg !10898
  %27 = load i8, i8* %arrayidx38, align 1, !dbg !10898
  store i8 %27, i8* %min, align 1, !dbg !10899
  br label %if.end39, !dbg !10900

if.end39:                                         ; preds = %if.then36, %if.end29
  br label %for.inc, !dbg !10901

for.inc:                                          ; preds = %if.end39
  %28 = load i32, i32* %i, align 4, !dbg !10902
  %inc = add i32 %28, 1, !dbg !10902
  store i32 %inc, i32* %i, align 4, !dbg !10902
  br label %for.cond, !dbg !10903, !llvm.loop !10904

for.end:                                          ; preds = %if.then18, %land.end
  %29 = load i8, i8* %min, align 1, !dbg !10906
  %30 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10907
  %offset40 = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %30, i32 0, i32 3, !dbg !10908
  store i8 %29, i8* %offset40, align 8, !dbg !10909
  %31 = load i8, i8* %max, align 1, !dbg !10910
  %32 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10911
  %maxlvl41 = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %32, i32 0, i32 4, !dbg !10912
  store i8 %31, i8* %maxlvl41, align 1, !dbg !10913
  br label %do.body42, !dbg !10914

do.body42:                                        ; preds = %for.end
  %33 = load i32, i32* @debug, align 4, !dbg !10915
  %tobool43 = icmp ne i32 %33, 0, !dbg !10915
  br i1 %tobool43, label %if.then44, label %if.end50, !dbg !10918

if.then44:                                        ; preds = %do.body42
  %34 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10915
  %offset45 = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %34, i32 0, i32 3, !dbg !10915
  %35 = load i8, i8* %offset45, align 8, !dbg !10915
  %conv46 = zext i8 %35 to i32, !dbg !10915
  %36 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %props.addr, align 8, !dbg !10915
  %maxlvl47 = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %36, i32 0, i32 4, !dbg !10915
  %37 = load i8, i8* %maxlvl47, align 1, !dbg !10915
  %conv48 = zext i8 %37 to i32, !dbg !10915
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.98, i64 0, i64 0), i32 %conv46, i32 %conv48) #12, !dbg !10915
  br label %if.end50, !dbg !10915

if.end50:                                         ; preds = %if.then44, %do.body42
  br label %do.end51, !dbg !10918

do.end51:                                         ; preds = %if.then, %if.end50
  ret void, !dbg !10919
}

; Function Attrs: noredzone
declare dso_local %struct.backlight_device* @backlight_device_register(i8*, %struct.device*, i8*, %struct.backlight_ops*, %struct.backlight_properties*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !10920 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10924, metadata !DIExpression()), !dbg !10925
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10926
  %1 = ptrtoint i8* %0 to i64, !dbg !10926
  %2 = inttoptr i64 %1 to i8*, !dbg !10926
  %3 = ptrtoint i8* %2 to i64, !dbg !10926
  %cmp = icmp uge i64 %3, -4095, !dbg !10926
  %lnot = xor i1 %cmp, true, !dbg !10926
  %lnot1 = xor i1 %lnot, true, !dbg !10926
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10926
  %conv = sext i32 %lnot.ext to i64, !dbg !10926
  %tobool = icmp ne i64 %conv, 0, !dbg !10926
  ret i1 %tobool, !dbg !10927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_update_status_ng(%struct.backlight_device* %bd) #0 !dbg !10928 {
entry:
  %retval = alloca i32, align 4
  %bd.addr = alloca %struct.backlight_device*, align 8
  %value = alloca i32, align 4
  %result = alloca i32, align 4
  %sdev = alloca %struct.sony_backlight_props*, align 8
  store %struct.backlight_device* %bd, %struct.backlight_device** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.backlight_device** %bd.addr, metadata !10929, metadata !DIExpression()), !dbg !10930
  call void @llvm.dbg.declare(metadata i32* %value, metadata !10931, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10933, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.declare(metadata %struct.sony_backlight_props** %sdev, metadata !10935, metadata !DIExpression()), !dbg !10936
  %0 = load %struct.backlight_device*, %struct.backlight_device** %bd.addr, align 8, !dbg !10937
  %call = call i8* @bl_get_data(%struct.backlight_device* %0) #11, !dbg !10938
  %1 = bitcast i8* %call to %struct.sony_backlight_props*, !dbg !10939
  store %struct.sony_backlight_props* %1, %struct.sony_backlight_props** %sdev, align 8, !dbg !10936
  %2 = load %struct.backlight_device*, %struct.backlight_device** %bd.addr, align 8, !dbg !10940
  %props = getelementptr inbounds %struct.backlight_device, %struct.backlight_device* %2, i32 0, i32 0, !dbg !10941
  %brightness = getelementptr inbounds %struct.backlight_properties, %struct.backlight_properties* %props, i32 0, i32 0, !dbg !10942
  %3 = load i32, i32* %brightness, align 8, !dbg !10942
  %4 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %sdev, align 8, !dbg !10943
  %offset = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %4, i32 0, i32 3, !dbg !10944
  %5 = load i8, i8* %offset, align 8, !dbg !10944
  %conv = zext i8 %5 to i32, !dbg !10943
  %add = add i32 %3, %conv, !dbg !10945
  store i32 %add, i32* %value, align 4, !dbg !10946
  %6 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %sdev, align 8, !dbg !10947
  %handle = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %6, i32 0, i32 1, !dbg !10949
  %7 = load i32, i32* %handle, align 8, !dbg !10949
  %8 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %sdev, align 8, !dbg !10950
  %cmd_base = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %8, i32 0, i32 2, !dbg !10951
  %9 = load i32, i32* %cmd_base, align 4, !dbg !10951
  %10 = load i32, i32* %value, align 4, !dbg !10952
  %shl = shl i32 %10, 16, !dbg !10953
  %or = or i32 %9, %shl, !dbg !10954
  %call1 = call i32 @sony_call_snc_handle(i32 %7, i32 %or, i32* %result) #11, !dbg !10955
  %tobool = icmp ne i32 %call1, 0, !dbg !10955
  br i1 %tobool, label %if.then, label %if.end, !dbg !10956

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !10957
  br label %return, !dbg !10957

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %value, align 4, !dbg !10958
  store i32 %11, i32* %retval, align 4, !dbg !10959
  br label %return, !dbg !10959

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10960
  ret i32 %12, !dbg !10960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_get_brightness_ng(%struct.backlight_device* %bd) #0 !dbg !10961 {
entry:
  %bd.addr = alloca %struct.backlight_device*, align 8
  %result = alloca i32, align 4
  %sdev = alloca %struct.sony_backlight_props*, align 8
  store %struct.backlight_device* %bd, %struct.backlight_device** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.backlight_device** %bd.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10964, metadata !DIExpression()), !dbg !10965
  call void @llvm.dbg.declare(metadata %struct.sony_backlight_props** %sdev, metadata !10966, metadata !DIExpression()), !dbg !10967
  %0 = load %struct.backlight_device*, %struct.backlight_device** %bd.addr, align 8, !dbg !10968
  %call = call i8* @bl_get_data(%struct.backlight_device* %0) #11, !dbg !10969
  %1 = bitcast i8* %call to %struct.sony_backlight_props*, !dbg !10970
  store %struct.sony_backlight_props* %1, %struct.sony_backlight_props** %sdev, align 8, !dbg !10967
  %2 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %sdev, align 8, !dbg !10971
  %handle = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %2, i32 0, i32 1, !dbg !10972
  %3 = load i32, i32* %handle, align 8, !dbg !10972
  %4 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %sdev, align 8, !dbg !10973
  %cmd_base = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %4, i32 0, i32 2, !dbg !10974
  %5 = load i32, i32* %cmd_base, align 4, !dbg !10974
  %add = add i32 %5, 256, !dbg !10975
  %call1 = call i32 @sony_call_snc_handle(i32 %3, i32 %add, i32* %result) #11, !dbg !10976
  %6 = load i32, i32* %result, align 4, !dbg !10977
  %and = and i32 %6, 255, !dbg !10978
  %7 = load %struct.sony_backlight_props*, %struct.sony_backlight_props** %sdev, align 8, !dbg !10979
  %offset = getelementptr inbounds %struct.sony_backlight_props, %struct.sony_backlight_props* %7, i32 0, i32 3, !dbg !10980
  %8 = load i8, i8* %offset, align 8, !dbg !10980
  %conv = zext i8 %8 to i32, !dbg !10979
  %sub = sub i32 %and, %conv, !dbg !10981
  ret i32 %sub, !dbg !10982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @bl_get_data(%struct.backlight_device* %bl_dev) #0 !dbg !10983 {
entry:
  %bl_dev.addr = alloca %struct.backlight_device*, align 8
  store %struct.backlight_device* %bl_dev, %struct.backlight_device** %bl_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.backlight_device** %bl_dev.addr, metadata !10986, metadata !DIExpression()), !dbg !10987
  %0 = load %struct.backlight_device*, %struct.backlight_device** %bl_dev.addr, align 8, !dbg !10988
  %dev = getelementptr inbounds %struct.backlight_device, %struct.backlight_device* %0, i32 0, i32 6, !dbg !10989
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !10990
  ret i8* %call, !dbg !10991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !10992 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10995, metadata !DIExpression()), !dbg !10996
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10997
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10998
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10998
  ret i8* %1, !dbg !10999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_backlight_update_status(%struct.backlight_device* %bd) #0 !dbg !11000 {
entry:
  %bd.addr = alloca %struct.backlight_device*, align 8
  %arg = alloca i32, align 4
  store %struct.backlight_device* %bd, %struct.backlight_device** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.backlight_device** %bd.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !11003, metadata !DIExpression()), !dbg !11004
  %0 = load %struct.backlight_device*, %struct.backlight_device** %bd.addr, align 8, !dbg !11005
  %props = getelementptr inbounds %struct.backlight_device, %struct.backlight_device* %0, i32 0, i32 0, !dbg !11006
  %brightness = getelementptr inbounds %struct.backlight_properties, %struct.backlight_properties* %props, i32 0, i32 0, !dbg !11007
  %1 = load i32, i32* %brightness, align 8, !dbg !11007
  %add = add i32 %1, 1, !dbg !11008
  store i32 %add, i32* %arg, align 4, !dbg !11004
  %2 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11009
  %call = call i32 @sony_nc_int_call(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.99, i64 0, i64 0), i32* %arg, i32* null) #11, !dbg !11010
  ret i32 %call, !dbg !11011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_backlight_get_brightness(%struct.backlight_device* %bd) #0 !dbg !11012 {
entry:
  %retval = alloca i32, align 4
  %bd.addr = alloca %struct.backlight_device*, align 8
  %value = alloca i32, align 4
  store %struct.backlight_device* %bd, %struct.backlight_device** %bd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.backlight_device** %bd.addr, metadata !11013, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11015, metadata !DIExpression()), !dbg !11016
  %0 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11017
  %call = call i32 @sony_nc_int_call(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i64 0, i64 0), i32* null, i32* %value) #11, !dbg !11019
  %tobool = icmp ne i32 %call, 0, !dbg !11019
  br i1 %tobool, label %if.then, label %if.end, !dbg !11020

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11021
  br label %return, !dbg !11021

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %value, align 4, !dbg !11022
  %sub = sub i32 %1, 1, !dbg !11023
  store i32 %sub, i32* %retval, align 4, !dbg !11024
  br label %return, !dbg !11024

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11025
  ret i32 %2, !dbg !11025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @brightness_default_validate(i32 %direction, i32 %value) #0 !dbg !11026 {
entry:
  %retval = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !11027, metadata !DIExpression()), !dbg !11028
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11029, metadata !DIExpression()), !dbg !11030
  %0 = load i32, i32* %direction.addr, align 4, !dbg !11031
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb1
  ], !dbg !11032

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %value.addr, align 4, !dbg !11033
  %sub = sub i32 %1, 1, !dbg !11035
  store i32 %sub, i32* %retval, align 4, !dbg !11036
  br label %return, !dbg !11036

sw.bb1:                                           ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !11037
  %cmp = icmp sge i32 %2, 0, !dbg !11039
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11040

land.lhs.true:                                    ; preds = %sw.bb1
  %3 = load i32, i32* %value.addr, align 4, !dbg !11041
  %cmp2 = icmp slt i32 %3, 8, !dbg !11042
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11043

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %value.addr, align 4, !dbg !11044
  %add = add i32 %4, 1, !dbg !11045
  store i32 %add, i32* %retval, align 4, !dbg !11046
  br label %return, !dbg !11046

if.end:                                           ; preds = %land.lhs.true, %sw.bb1
  br label %sw.epilog, !dbg !11047

sw.epilog:                                        ; preds = %if.end, %entry
  store i32 -22, i32* %retval, align 4, !dbg !11048
  br label %return, !dbg !11048

return:                                           ; preds = %sw.epilog, %if.then, %sw.bb
  %5 = load i32, i32* %retval, align 4, !dbg !11049
  ret i32 %5, !dbg !11049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_sysfs_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !11050 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %value = alloca i32, align 4
  %ret = alloca i32, align 4
  %item = alloca %struct.sony_nc_value*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sony_nc_value*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11051, metadata !DIExpression()), !dbg !11052
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11053, metadata !DIExpression()), !dbg !11054
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11055, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11057, metadata !DIExpression()), !dbg !11058
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11059, metadata !DIExpression()), !dbg !11060
  store i32 0, i32* %ret, align 4, !dbg !11060
  call void @llvm.dbg.declare(metadata %struct.sony_nc_value** %item, metadata !11061, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11063, metadata !DIExpression()), !dbg !11065
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11065
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !11065
  store i8* %1, i8** %__mptr, align 8, !dbg !11065
  br label %do.body, !dbg !11065

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11066

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11065
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !11065
  %3 = bitcast i8* %add.ptr to %struct.sony_nc_value*, !dbg !11065
  store %struct.sony_nc_value* %3, %struct.sony_nc_value** %tmp, align 8, !dbg !11066
  %4 = load %struct.sony_nc_value*, %struct.sony_nc_value** %tmp, align 8, !dbg !11065
  store %struct.sony_nc_value* %4, %struct.sony_nc_value** %item, align 8, !dbg !11062
  %5 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11068
  %acpiget = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %5, i32 0, i32 1, !dbg !11070
  %6 = load i8**, i8*** %acpiget, align 8, !dbg !11070
  %7 = load i8*, i8** %6, align 8, !dbg !11071
  %tobool = icmp ne i8* %7, null, !dbg !11071
  br i1 %tobool, label %if.end, label %if.then, !dbg !11072

if.then:                                          ; preds = %do.end
  store i64 -5, i64* %retval, align 8, !dbg !11073
  br label %return, !dbg !11073

if.end:                                           ; preds = %do.end
  %8 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11074
  %9 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11075
  %acpiget1 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %9, i32 0, i32 1, !dbg !11076
  %10 = load i8**, i8*** %acpiget1, align 8, !dbg !11076
  %11 = load i8*, i8** %10, align 8, !dbg !11077
  %call = call i32 @sony_nc_int_call(i8* %8, i8* %11, i32* null, i32* %value) #11, !dbg !11078
  store i32 %call, i32* %ret, align 4, !dbg !11079
  %12 = load i32, i32* %ret, align 4, !dbg !11080
  %cmp = icmp slt i32 %12, 0, !dbg !11082
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11083

if.then2:                                         ; preds = %if.end
  store i64 -5, i64* %retval, align 8, !dbg !11084
  br label %return, !dbg !11084

if.end3:                                          ; preds = %if.end
  %13 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11085
  %validate = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %13, i32 0, i32 3, !dbg !11087
  %14 = load i32 (i32, i32)*, i32 (i32, i32)** %validate, align 8, !dbg !11087
  %tobool4 = icmp ne i32 (i32, i32)* %14, null, !dbg !11085
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !11088

if.then5:                                         ; preds = %if.end3
  %15 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11089
  %validate6 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %15, i32 0, i32 3, !dbg !11090
  %16 = load i32 (i32, i32)*, i32 (i32, i32)** %validate6, align 8, !dbg !11090
  %17 = load i32, i32* %value, align 4, !dbg !11091
  %call7 = call i32 %16(i32 1, i32 %17) #11, !dbg !11089
  store i32 %call7, i32* %value, align 4, !dbg !11092
  br label %if.end8, !dbg !11093

if.end8:                                          ; preds = %if.then5, %if.end3
  %18 = load i8*, i8** %buffer.addr, align 8, !dbg !11094
  %19 = load i32, i32* %value, align 4, !dbg !11095
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %18, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %19) #11, !dbg !11096
  %conv = sext i32 %call9 to i64, !dbg !11096
  store i64 %conv, i64* %retval, align 8, !dbg !11097
  br label %return, !dbg !11097

return:                                           ; preds = %if.end8, %if.then2, %if.then
  %20 = load i64, i64* %retval, align 8, !dbg !11098
  ret i64 %20, !dbg !11098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_nc_sysfs_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !11099 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %value = alloca i32, align 4
  %ret = alloca i32, align 4
  %item = alloca %struct.sony_nc_value*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sony_nc_value*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11100, metadata !DIExpression()), !dbg !11101
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11102, metadata !DIExpression()), !dbg !11103
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11106, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11108, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11110, metadata !DIExpression()), !dbg !11111
  store i32 0, i32* %ret, align 4, !dbg !11111
  call void @llvm.dbg.declare(metadata %struct.sony_nc_value** %item, metadata !11112, metadata !DIExpression()), !dbg !11113
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11114, metadata !DIExpression()), !dbg !11116
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !11116
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !11116
  store i8* %1, i8** %__mptr, align 8, !dbg !11116
  br label %do.body, !dbg !11116

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11117

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11116
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !11116
  %3 = bitcast i8* %add.ptr to %struct.sony_nc_value*, !dbg !11116
  store %struct.sony_nc_value* %3, %struct.sony_nc_value** %tmp, align 8, !dbg !11117
  %4 = load %struct.sony_nc_value*, %struct.sony_nc_value** %tmp, align 8, !dbg !11116
  store %struct.sony_nc_value* %4, %struct.sony_nc_value** %item, align 8, !dbg !11113
  %5 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11119
  %acpiset = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %5, i32 0, i32 2, !dbg !11121
  %6 = load i8**, i8*** %acpiset, align 8, !dbg !11121
  %tobool = icmp ne i8** %6, null, !dbg !11119
  br i1 %tobool, label %if.end, label %if.then, !dbg !11122

if.then:                                          ; preds = %do.end
  store i64 -5, i64* %retval, align 8, !dbg !11123
  br label %return, !dbg !11123

if.end:                                           ; preds = %do.end
  %7 = load i64, i64* %count.addr, align 8, !dbg !11124
  %cmp = icmp ugt i64 %7, 31, !dbg !11126
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11127

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !11128
  br label %return, !dbg !11128

if.end2:                                          ; preds = %if.end
  %8 = load i8*, i8** %buffer.addr, align 8, !dbg !11129
  %call = call i32 @kstrtoint(i8* %8, i32 10, i32* %value) #11, !dbg !11131
  %tobool3 = icmp ne i32 %call, 0, !dbg !11131
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !11132

if.then4:                                         ; preds = %if.end2
  store i64 -22, i64* %retval, align 8, !dbg !11133
  br label %return, !dbg !11133

if.end5:                                          ; preds = %if.end2
  %9 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11134
  %validate = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %9, i32 0, i32 3, !dbg !11136
  %10 = load i32 (i32, i32)*, i32 (i32, i32)** %validate, align 8, !dbg !11136
  %tobool6 = icmp ne i32 (i32, i32)* %10, null, !dbg !11134
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !11137

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11138
  %validate8 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %11, i32 0, i32 3, !dbg !11139
  %12 = load i32 (i32, i32)*, i32 (i32, i32)** %validate8, align 8, !dbg !11139
  %13 = load i32, i32* %value, align 4, !dbg !11140
  %call9 = call i32 %12(i32 0, i32 %13) #11, !dbg !11138
  store i32 %call9, i32* %value, align 4, !dbg !11141
  br label %if.end10, !dbg !11142

if.end10:                                         ; preds = %if.then7, %if.end5
  %14 = load i32, i32* %value, align 4, !dbg !11143
  %cmp11 = icmp slt i32 %14, 0, !dbg !11145
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !11146

if.then12:                                        ; preds = %if.end10
  %15 = load i32, i32* %value, align 4, !dbg !11147
  %conv = sext i32 %15 to i64, !dbg !11147
  store i64 %conv, i64* %retval, align 8, !dbg !11148
  br label %return, !dbg !11148

if.end13:                                         ; preds = %if.end10
  %16 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11149
  %17 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11150
  %acpiset14 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %17, i32 0, i32 2, !dbg !11151
  %18 = load i8**, i8*** %acpiset14, align 8, !dbg !11151
  %19 = load i8*, i8** %18, align 8, !dbg !11152
  %call15 = call i32 @sony_nc_int_call(i8* %16, i8* %19, i32* %value, i32* null) #11, !dbg !11153
  store i32 %call15, i32* %ret, align 4, !dbg !11154
  %20 = load i32, i32* %ret, align 4, !dbg !11155
  %cmp16 = icmp slt i32 %20, 0, !dbg !11157
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11158

if.then18:                                        ; preds = %if.end13
  store i64 -5, i64* %retval, align 8, !dbg !11159
  br label %return, !dbg !11159

if.end19:                                         ; preds = %if.end13
  %21 = load i32, i32* %value, align 4, !dbg !11160
  %22 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11161
  %value20 = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %22, i32 0, i32 4, !dbg !11162
  store i32 %21, i32* %value20, align 8, !dbg !11163
  %23 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11164
  %valid = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %23, i32 0, i32 5, !dbg !11165
  store i32 1, i32* %valid, align 4, !dbg !11166
  %24 = load i64, i64* %count.addr, align 8, !dbg !11167
  store i64 %24, i64* %retval, align 8, !dbg !11168
  br label %return, !dbg !11168

return:                                           ; preds = %if.end19, %if.then18, %if.then12, %if.then4, %if.then1, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !11169
  ret i64 %25, !dbg !11169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @boolean_validate(i32 %direction, i32 %value) #0 !dbg !11170 {
entry:
  %retval = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !11171, metadata !DIExpression()), !dbg !11172
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11173, metadata !DIExpression()), !dbg !11174
  %0 = load i32, i32* %direction.addr, align 4, !dbg !11175
  %cmp = icmp eq i32 %0, 0, !dbg !11177
  br i1 %cmp, label %if.then, label %if.end4, !dbg !11178

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %value.addr, align 4, !dbg !11179
  %cmp1 = icmp ne i32 %1, 0, !dbg !11182
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !11183

land.lhs.true:                                    ; preds = %if.then
  %2 = load i32, i32* %value.addr, align 4, !dbg !11184
  %cmp2 = icmp ne i32 %2, 1, !dbg !11185
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !11186

if.then3:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11187
  br label %return, !dbg !11187

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end4, !dbg !11188

if.end4:                                          ; preds = %if.end, %entry
  %3 = load i32, i32* %value.addr, align 4, !dbg !11189
  store i32 %3, i32* %retval, align 4, !dbg !11190
  br label %return, !dbg !11190

return:                                           ; preds = %if.end4, %if.then3
  %4 = load i32, i32* %retval, align 4, !dbg !11191
  ret i32 %4, !dbg !11191
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtoint(i8*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local void @backlight_device_unregister(%struct.backlight_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_touchpad_cleanup(%struct.platform_device* %pd) #0 !dbg !11192 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  %0 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !11195
  %tobool = icmp ne %struct.touchpad_control* %0, null, !dbg !11195
  br i1 %tobool, label %if.then, label %if.end, !dbg !11197

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11198
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11200
  %2 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !11201
  %attr = getelementptr inbounds %struct.touchpad_control, %struct.touchpad_control* %2, i32 0, i32 0, !dbg !11202
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %attr) #11, !dbg !11203
  %3 = load %struct.touchpad_control*, %struct.touchpad_control** @tp_ctl, align 8, !dbg !11204
  %4 = bitcast %struct.touchpad_control* %3 to i8*, !dbg !11204
  call void @kfree(i8* %4) #11, !dbg !11205
  store %struct.touchpad_control* null, %struct.touchpad_control** @tp_ctl, align 8, !dbg !11206
  br label %if.end, !dbg !11207

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_battery_care_cleanup(%struct.platform_device* %pd) #0 !dbg !11209 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11210, metadata !DIExpression()), !dbg !11211
  %0 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !11212
  %tobool = icmp ne %struct.battery_care_control* %0, null, !dbg !11212
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11214

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11215
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11217
  %2 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !11218
  %attrs = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %2, i32 0, i32 0, !dbg !11219
  %arrayidx = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs, i64 0, i64 0, !dbg !11218
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %arrayidx) #11, !dbg !11220
  %3 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !11221
  %handle = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %3, i32 0, i32 1, !dbg !11223
  %4 = load i32, i32* %handle, align 8, !dbg !11223
  %cmp = icmp ne i32 %4, 277, !dbg !11224
  br i1 %cmp, label %if.then1, label %if.end, !dbg !11225

if.then1:                                         ; preds = %if.then
  %5 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11226
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !11227
  %6 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !11228
  %attrs3 = getelementptr inbounds %struct.battery_care_control, %struct.battery_care_control* %6, i32 0, i32 0, !dbg !11229
  %arrayidx4 = getelementptr [2 x %struct.device_attribute], [2 x %struct.device_attribute]* %attrs3, i64 0, i64 1, !dbg !11228
  call void @device_remove_file(%struct.device* %dev2, %struct.device_attribute* %arrayidx4) #11, !dbg !11230
  br label %if.end, !dbg !11230

if.end:                                           ; preds = %if.then1, %if.then
  %7 = load %struct.battery_care_control*, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !11231
  %8 = bitcast %struct.battery_care_control* %7 to i8*, !dbg !11231
  call void @kfree(i8* %8) #11, !dbg !11232
  store %struct.battery_care_control* null, %struct.battery_care_control** @bcare_ctl, align 8, !dbg !11233
  br label %if.end5, !dbg !11234

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !11235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_lid_resume_cleanup(%struct.platform_device* %pd) #0 !dbg !11236 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  %i = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11237, metadata !DIExpression()), !dbg !11238
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11239, metadata !DIExpression()), !dbg !11240
  %0 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !11241
  %tobool = icmp ne %struct.snc_lid_resume_control* %0, null, !dbg !11241
  br i1 %tobool, label %if.then, label %if.end6, !dbg !11243

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11244
  br label %for.cond, !dbg !11247

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !11248
  %cmp = icmp slt i32 %1, 3, !dbg !11250
  br i1 %cmp, label %for.body, label %for.end, !dbg !11251

for.body:                                         ; preds = %for.cond
  %2 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !11252
  %attrs = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %2, i32 0, i32 0, !dbg !11255
  %3 = load i32, i32* %i, align 4, !dbg !11256
  %idxprom = sext i32 %3 to i64, !dbg !11252
  %arrayidx = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs, i64 0, i64 %idxprom, !dbg !11252
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx, i32 0, i32 0, !dbg !11257
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !11258
  %4 = load i8*, i8** %name, align 8, !dbg !11258
  %tobool1 = icmp ne i8* %4, null, !dbg !11252
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !11259

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !11260

if.end:                                           ; preds = %for.body
  %5 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11261
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !11262
  %6 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !11263
  %attrs3 = getelementptr inbounds %struct.snc_lid_resume_control, %struct.snc_lid_resume_control* %6, i32 0, i32 0, !dbg !11264
  %7 = load i32, i32* %i, align 4, !dbg !11265
  %idxprom4 = sext i32 %7 to i64, !dbg !11263
  %arrayidx5 = getelementptr [3 x %struct.device_attribute], [3 x %struct.device_attribute]* %attrs3, i64 0, i64 %idxprom4, !dbg !11263
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %arrayidx5) #11, !dbg !11266
  br label %for.inc, !dbg !11267

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !11268
  %inc = add i32 %8, 1, !dbg !11268
  store i32 %inc, i32* %i, align 4, !dbg !11268
  br label %for.cond, !dbg !11269, !llvm.loop !11270

for.end:                                          ; preds = %if.then2, %for.cond
  %9 = load %struct.snc_lid_resume_control*, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !11272
  %10 = bitcast %struct.snc_lid_resume_control* %9 to i8*, !dbg !11272
  call void @kfree(i8* %10) #11, !dbg !11273
  store %struct.snc_lid_resume_control* null, %struct.snc_lid_resume_control** @lid_ctl, align 8, !dbg !11274
  br label %if.end6, !dbg !11275

if.end6:                                          ; preds = %for.end, %entry
  ret void, !dbg !11276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_thermal_cleanup(%struct.platform_device* %pd) #0 !dbg !11277 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11278, metadata !DIExpression()), !dbg !11279
  %0 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11280
  %tobool = icmp ne %struct.snc_thermal_ctrl* %0, null, !dbg !11280
  br i1 %tobool, label %if.then, label %if.end, !dbg !11282

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11283
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11285
  %2 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11286
  %profiles_attr = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %2, i32 0, i32 3, !dbg !11287
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %profiles_attr) #11, !dbg !11288
  %3 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11289
  %dev1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %3, i32 0, i32 3, !dbg !11290
  %4 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11291
  %mode_attr = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %4, i32 0, i32 2, !dbg !11292
  call void @device_remove_file(%struct.device* %dev1, %struct.device_attribute* %mode_attr) #11, !dbg !11293
  %5 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11294
  %6 = bitcast %struct.snc_thermal_ctrl* %5 to i8*, !dbg !11294
  call void @kfree(i8* %6) #11, !dbg !11295
  store %struct.snc_thermal_ctrl* null, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11296
  br label %if.end, !dbg !11297

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_gfx_switch_cleanup(%struct.platform_device* %pd) #0 !dbg !11299 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11300, metadata !DIExpression()), !dbg !11301
  %0 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !11302
  %tobool = icmp ne %struct.snc_gfx_switch_control* %0, null, !dbg !11302
  br i1 %tobool, label %if.then, label %if.end, !dbg !11304

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11305
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11307
  %2 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !11308
  %attr = getelementptr inbounds %struct.snc_gfx_switch_control, %struct.snc_gfx_switch_control* %2, i32 0, i32 0, !dbg !11309
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %attr) #11, !dbg !11310
  %3 = load %struct.snc_gfx_switch_control*, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !11311
  %4 = bitcast %struct.snc_gfx_switch_control* %3 to i8*, !dbg !11311
  call void @kfree(i8* %4) #11, !dbg !11312
  store %struct.snc_gfx_switch_control* null, %struct.snc_gfx_switch_control** @gfxs_ctl, align 8, !dbg !11313
  br label %if.end, !dbg !11314

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_highspeed_charging_cleanup(%struct.platform_device* %pd) #0 !dbg !11316 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !11319
  %tobool = icmp ne %struct.device_attribute* %0, null, !dbg !11319
  br i1 %tobool, label %if.then, label %if.end, !dbg !11321

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11322
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11324
  %2 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !11325
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %2) #11, !dbg !11326
  %3 = load %struct.device_attribute*, %struct.device_attribute** @hsc_handle, align 8, !dbg !11327
  %4 = bitcast %struct.device_attribute* %3 to i8*, !dbg !11327
  call void @kfree(i8* %4) #11, !dbg !11328
  store %struct.device_attribute* null, %struct.device_attribute** @hsc_handle, align 8, !dbg !11329
  br label %if.end, !dbg !11330

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_kbd_backlight_cleanup(%struct.platform_device* %pd, i32 %handle) #0 !dbg !11332 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  %handle.addr = alloca i32, align 4
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !11337, metadata !DIExpression()), !dbg !11338
  %0 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11339
  %tobool = icmp ne %struct.kbd_backlight* %0, null, !dbg !11339
  br i1 %tobool, label %land.lhs.true, label %if.end5, !dbg !11341

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %handle.addr, align 4, !dbg !11342
  %2 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11343
  %handle1 = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %2, i32 0, i32 0, !dbg !11344
  %3 = load i32, i32* %handle1, align 8, !dbg !11344
  %cmp = icmp eq i32 %1, %3, !dbg !11345
  br i1 %cmp, label %if.then, label %if.end5, !dbg !11346

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11347
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !11349
  %5 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11350
  %mode_attr = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %5, i32 0, i32 5, !dbg !11351
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %mode_attr) #11, !dbg !11352
  %6 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11353
  %has_timeout = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %6, i32 0, i32 4, !dbg !11355
  %7 = load i32, i32* %has_timeout, align 8, !dbg !11355
  %tobool2 = icmp ne i32 %7, 0, !dbg !11353
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !11356

if.then3:                                         ; preds = %if.then
  %8 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11357
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !11358
  %9 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11359
  %timeout_attr = getelementptr inbounds %struct.kbd_backlight, %struct.kbd_backlight* %9, i32 0, i32 6, !dbg !11360
  call void @device_remove_file(%struct.device* %dev4, %struct.device_attribute* %timeout_attr) #11, !dbg !11361
  br label %if.end, !dbg !11361

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.kbd_backlight*, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11362
  %11 = bitcast %struct.kbd_backlight* %10 to i8*, !dbg !11362
  call void @kfree(i8* %11) #11, !dbg !11363
  store %struct.kbd_backlight* null, %struct.kbd_backlight** @kbdbl_ctl, align 8, !dbg !11364
  br label %if.end5, !dbg !11365

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !11366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_lowbatt_cleanup(%struct.platform_device* %pd) #0 !dbg !11367 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  %0 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !11370
  %tobool = icmp ne %struct.device_attribute* %0, null, !dbg !11370
  br i1 %tobool, label %if.then, label %if.end, !dbg !11372

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11373
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11375
  %2 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !11376
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %2) #11, !dbg !11377
  %3 = load %struct.device_attribute*, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !11378
  %4 = bitcast %struct.device_attribute* %3 to i8*, !dbg !11378
  call void @kfree(i8* %4) #11, !dbg !11379
  store %struct.device_attribute* null, %struct.device_attribute** @lowbatt_handle, align 8, !dbg !11380
  br label %if.end, !dbg !11381

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_fanspeed_cleanup(%struct.platform_device* %pd) #0 !dbg !11383 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11384, metadata !DIExpression()), !dbg !11385
  %0 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !11386
  %tobool = icmp ne %struct.device_attribute* %0, null, !dbg !11386
  br i1 %tobool, label %if.then, label %if.end, !dbg !11388

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11389
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11391
  %2 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !11392
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %2) #11, !dbg !11393
  %3 = load %struct.device_attribute*, %struct.device_attribute** @fan_handle, align 8, !dbg !11394
  %4 = bitcast %struct.device_attribute* %3 to i8*, !dbg !11394
  call void @kfree(i8* %4) #11, !dbg !11395
  store %struct.device_attribute* null, %struct.device_attribute** @fan_handle, align 8, !dbg !11396
  br label %if.end, !dbg !11397

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !11398
  %tobool1 = icmp ne %struct.device_attribute* %5, null, !dbg !11398
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !11400

if.then2:                                         ; preds = %if.end
  %6 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11401
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !11403
  %7 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !11404
  call void @device_remove_file(%struct.device* %dev3, %struct.device_attribute* %7) #11, !dbg !11405
  %8 = load %struct.device_attribute*, %struct.device_attribute** @hsf_handle, align 8, !dbg !11406
  %9 = bitcast %struct.device_attribute* %8 to i8*, !dbg !11406
  call void @kfree(i8* %9) #11, !dbg !11407
  store %struct.device_attribute* null, %struct.device_attribute** @hsf_handle, align 8, !dbg !11408
  br label %if.end4, !dbg !11409

if.end4:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !11410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_usb_charge_cleanup(%struct.platform_device* %pd) #0 !dbg !11411 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  %0 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !11414
  %tobool = icmp ne %struct.device_attribute* %0, null, !dbg !11414
  br i1 %tobool, label %if.then, label %if.end, !dbg !11416

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11417
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11419
  %2 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !11420
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %2) #11, !dbg !11421
  %3 = load %struct.device_attribute*, %struct.device_attribute** @uc_handle, align 8, !dbg !11422
  %4 = bitcast %struct.device_attribute* %3 to i8*, !dbg !11422
  call void @kfree(i8* %4) #11, !dbg !11423
  store %struct.device_attribute* null, %struct.device_attribute** @uc_handle, align 8, !dbg !11424
  br label %if.end, !dbg !11425

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_panelid_cleanup(%struct.platform_device* %pd) #0 !dbg !11427 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11428, metadata !DIExpression()), !dbg !11429
  %0 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !11430
  %tobool = icmp ne %struct.device_attribute* %0, null, !dbg !11430
  br i1 %tobool, label %if.then, label %if.end, !dbg !11432

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11433
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11435
  %2 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !11436
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %2) #11, !dbg !11437
  %3 = load %struct.device_attribute*, %struct.device_attribute** @panel_handle, align 8, !dbg !11438
  %4 = bitcast %struct.device_attribute* %3 to i8*, !dbg !11438
  call void @kfree(i8* %4) #11, !dbg !11439
  store %struct.device_attribute* null, %struct.device_attribute** @panel_handle, align 8, !dbg !11440
  br label %if.end, !dbg !11441

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_smart_conn_cleanup(%struct.platform_device* %pd) #0 !dbg !11443 {
entry:
  %pd.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pd, %struct.platform_device** %pd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pd.addr, metadata !11444, metadata !DIExpression()), !dbg !11445
  %0 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !11446
  %tobool = icmp ne %struct.device_attribute* %0, null, !dbg !11446
  br i1 %tobool, label %if.then, label %if.end, !dbg !11448

if.then:                                          ; preds = %entry
  %1 = load %struct.platform_device*, %struct.platform_device** %pd.addr, align 8, !dbg !11449
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !11451
  %2 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !11452
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* %2) #11, !dbg !11453
  %3 = load %struct.device_attribute*, %struct.device_attribute** @sc_handle, align 8, !dbg !11454
  %4 = bitcast %struct.device_attribute* %3 to i8*, !dbg !11454
  call void @kfree(i8* %4) #11, !dbg !11455
  store %struct.device_attribute* null, %struct.device_attribute** @sc_handle, align 8, !dbg !11456
  br label %if.end, !dbg !11457

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11458
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noredzone
declare dso_local void @platform_device_unregister(%struct.platform_device*) #2

; Function Attrs: noredzone
declare dso_local void @rfkill_unregister(%struct.rfkill*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_hotkeys_decode(i32 %event, i32 %handle) #0 !dbg !11459 {
entry:
  %retval = alloca i32, align 4
  %event.addr = alloca i32, align 4
  %handle.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %result = alloca i32, align 4
  %key_event = alloca %struct.sony_nc_event*, align 8
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !11464, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11466, metadata !DIExpression()), !dbg !11467
  store i32 -22, i32* %ret, align 4, !dbg !11467
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11468, metadata !DIExpression()), !dbg !11469
  store i32 0, i32* %result, align 4, !dbg !11469
  call void @llvm.dbg.declare(metadata %struct.sony_nc_event** %key_event, metadata !11470, metadata !DIExpression()), !dbg !11472
  %0 = load i32, i32* %handle.addr, align 4, !dbg !11473
  %call = call i32 @sony_call_snc_handle(i32 %0, i32 512, i32* %result) #11, !dbg !11475
  %tobool = icmp ne i32 %call, 0, !dbg !11475
  br i1 %tobool, label %if.then, label %if.end4, !dbg !11476

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11477

do.body:                                          ; preds = %if.then
  %1 = load i32, i32* @debug, align 4, !dbg !11479
  %tobool1 = icmp ne i32 %1, 0, !dbg !11479
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !11482

if.then2:                                         ; preds = %do.body
  %2 = load i32, i32* %handle.addr, align 4, !dbg !11479
  %3 = load i32, i32* %event.addr, align 4, !dbg !11479
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.145, i64 0, i64 0), i32 %2, i32 %3) #12, !dbg !11479
  br label %if.end, !dbg !11479

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !11482

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11483
  br label %return, !dbg !11483

if.end4:                                          ; preds = %entry
  %4 = load i32, i32* %result, align 4, !dbg !11484
  %and = and i32 %4, 255, !dbg !11484
  store i32 %and, i32* %result, align 4, !dbg !11484
  %5 = load i32, i32* %handle.addr, align 4, !dbg !11485
  %cmp = icmp eq i32 %5, 256, !dbg !11487
  br i1 %cmp, label %if.then5, label %if.else, !dbg !11488

if.then5:                                         ; preds = %if.end4
  store %struct.sony_nc_event* getelementptr inbounds ([43 x %struct.sony_nc_event], [43 x %struct.sony_nc_event]* @sony_100_events, i64 0, i64 0), %struct.sony_nc_event** %key_event, align 8, !dbg !11489
  br label %if.end6, !dbg !11490

if.else:                                          ; preds = %if.end4
  store %struct.sony_nc_event* getelementptr inbounds ([15 x %struct.sony_nc_event], [15 x %struct.sony_nc_event]* @sony_127_events, i64 0, i64 0), %struct.sony_nc_event** %key_event, align 8, !dbg !11491
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  br label %for.cond, !dbg !11492

for.cond:                                         ; preds = %for.inc, %if.end6
  %6 = load %struct.sony_nc_event*, %struct.sony_nc_event** %key_event, align 8, !dbg !11493
  %data = getelementptr inbounds %struct.sony_nc_event, %struct.sony_nc_event* %6, i32 0, i32 0, !dbg !11496
  %7 = load i8, i8* %data, align 1, !dbg !11496
  %tobool7 = icmp ne i8 %7, 0, !dbg !11497
  br i1 %tobool7, label %for.body, label %for.end, !dbg !11497

for.body:                                         ; preds = %for.cond
  %8 = load %struct.sony_nc_event*, %struct.sony_nc_event** %key_event, align 8, !dbg !11498
  %data8 = getelementptr inbounds %struct.sony_nc_event, %struct.sony_nc_event* %8, i32 0, i32 0, !dbg !11501
  %9 = load i8, i8* %data8, align 1, !dbg !11501
  %conv = zext i8 %9 to i32, !dbg !11498
  %10 = load i32, i32* %result, align 4, !dbg !11502
  %cmp9 = icmp eq i32 %conv, %10, !dbg !11503
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !11504

if.then11:                                        ; preds = %for.body
  %11 = load %struct.sony_nc_event*, %struct.sony_nc_event** %key_event, align 8, !dbg !11505
  %event12 = getelementptr inbounds %struct.sony_nc_event, %struct.sony_nc_event* %11, i32 0, i32 1, !dbg !11507
  %12 = load i8, i8* %event12, align 1, !dbg !11507
  %conv13 = zext i8 %12 to i32, !dbg !11505
  store i32 %conv13, i32* %ret, align 4, !dbg !11508
  br label %for.end, !dbg !11509

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !11510

for.inc:                                          ; preds = %if.end14
  %13 = load %struct.sony_nc_event*, %struct.sony_nc_event** %key_event, align 8, !dbg !11511
  %incdec.ptr = getelementptr %struct.sony_nc_event, %struct.sony_nc_event* %13, i32 1, !dbg !11511
  store %struct.sony_nc_event* %incdec.ptr, %struct.sony_nc_event** %key_event, align 8, !dbg !11511
  br label %for.cond, !dbg !11512, !llvm.loop !11513

for.end:                                          ; preds = %if.then11, %for.cond
  %14 = load %struct.sony_nc_event*, %struct.sony_nc_event** %key_event, align 8, !dbg !11515
  %data15 = getelementptr inbounds %struct.sony_nc_event, %struct.sony_nc_event* %14, i32 0, i32 0, !dbg !11517
  %15 = load i8, i8* %data15, align 1, !dbg !11517
  %tobool16 = icmp ne i8 %15, 0, !dbg !11515
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !11518

if.then17:                                        ; preds = %for.end
  %16 = load i32, i32* %event.addr, align 4, !dbg !11519
  %17 = load i32, i32* %result, align 4, !dbg !11519
  %18 = load i32, i32* %handle.addr, align 4, !dbg !11519
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.146, i64 0, i64 0), i32 %16, i32 %17, i32 %18) #12, !dbg !11519
  br label %if.end19, !dbg !11519

if.end19:                                         ; preds = %if.then17, %for.end
  %19 = load i32, i32* %ret, align 4, !dbg !11520
  store i32 %19, i32* %retval, align 4, !dbg !11521
  br label %return, !dbg !11521

return:                                           ; preds = %if.end19, %do.end
  %20 = load i32, i32* %retval, align 4, !dbg !11522
  ret i32 %20, !dbg !11522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_laptop_report_input_event(i8 zeroext %event) #0 !dbg !11523 {
entry:
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !7683, metadata !DIExpression()), !dbg !11526
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !7689, metadata !DIExpression()), !dbg !11531
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7675, metadata !DIExpression()), !dbg !11532
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6795, metadata !DIExpression()), !dbg !11534
  %event.addr = alloca i8, align 1
  %jog_dev = alloca %struct.input_dev*, align 8
  %key_dev = alloca %struct.input_dev*, align 8
  %kp = alloca %struct.sony_laptop_keypress, align 8
  %scancode = alloca i32, align 4
  %__flags = alloca i64, align 8
  %__ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy47 = alloca i64, align 8
  %__dummy248 = alloca i64, align 8
  %tmp51 = alloca i32, align 4
  %__tmp = alloca %struct.kfifo*, align 8
  %__buf = alloca i8*, align 8
  %__n = alloca i64, align 8
  %__recsize = alloca i64, align 8
  %__kfifo = alloca %struct.__kfifo*, align 8
  %tmp63 = alloca i32, align 4
  %tmp66 = alloca i32, align 4
  store i8 %event, i8* %event.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %event.addr, metadata !11541, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.declare(metadata %struct.input_dev** %jog_dev, metadata !11543, metadata !DIExpression()), !dbg !11544
  %0 = load %struct.input_dev*, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 1), align 8, !dbg !11545
  store %struct.input_dev* %0, %struct.input_dev** %jog_dev, align 8, !dbg !11544
  call void @llvm.dbg.declare(metadata %struct.input_dev** %key_dev, metadata !11546, metadata !DIExpression()), !dbg !11547
  %1 = load %struct.input_dev*, %struct.input_dev** getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 2), align 8, !dbg !11548
  store %struct.input_dev* %1, %struct.input_dev** %key_dev, align 8, !dbg !11547
  call void @llvm.dbg.declare(metadata %struct.sony_laptop_keypress* %kp, metadata !11549, metadata !DIExpression()), !dbg !11550
  %2 = bitcast %struct.sony_laptop_keypress* %kp to i8*, !dbg !11550
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !11550
  call void @llvm.dbg.declare(metadata i32* %scancode, metadata !11551, metadata !DIExpression()), !dbg !11552
  store i32 -1, i32* %scancode, align 4, !dbg !11552
  %3 = load i8, i8* %event.addr, align 1, !dbg !11553
  %conv = zext i8 %3 to i32, !dbg !11553
  %cmp = icmp eq i32 %conv, 59, !dbg !11555
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11556

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %event.addr, align 1, !dbg !11557
  %conv2 = zext i8 %4 to i32, !dbg !11557
  %cmp3 = icmp eq i32 %conv2, 56, !dbg !11558
  br i1 %cmp3, label %if.then, label %if.end, !dbg !11559

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end76, !dbg !11560

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8, i8* %event.addr, align 1, !dbg !11562
  %conv5 = zext i8 %5 to i32, !dbg !11562
  switch i32 %conv5, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb6
    i32 3, label %sw.bb6
    i32 5, label %sw.bb7
  ], !dbg !11563

sw.bb:                                            ; preds = %if.end, %if.end
  %6 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !11564
  call void @input_report_rel(%struct.input_dev* %6, i32 8, i32 1) #11, !dbg !11566
  %7 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !11567
  call void @input_sync(%struct.input_dev* %7) #11, !dbg !11568
  br label %if.end76, !dbg !11569

sw.bb6:                                           ; preds = %if.end, %if.end
  %8 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !11570
  call void @input_report_rel(%struct.input_dev* %8, i32 8, i32 -1) #11, !dbg !11571
  %9 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !11572
  call void @input_sync(%struct.input_dev* %9) #11, !dbg !11573
  br label %if.end76, !dbg !11574

sw.bb7:                                           ; preds = %if.end
  %key = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 1, !dbg !11575
  store i32 274, i32* %key, align 8, !dbg !11576
  %10 = load %struct.input_dev*, %struct.input_dev** %jog_dev, align 8, !dbg !11577
  %dev = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !11578
  store %struct.input_dev* %10, %struct.input_dev** %dev, align 8, !dbg !11579
  br label %sw.epilog, !dbg !11580

sw.default:                                       ; preds = %if.end
  %11 = load i8, i8* %event.addr, align 1, !dbg !11581
  %conv8 = zext i8 %11 to i64, !dbg !11581
  %cmp9 = icmp uge i64 %conv8, 74, !dbg !11583
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !11584

if.then11:                                        ; preds = %sw.default
  br label %do.body, !dbg !11585

do.body:                                          ; preds = %if.then11
  %12 = load i32, i32* @debug, align 4, !dbg !11587
  %tobool = icmp ne i32 %12, 0, !dbg !11587
  br i1 %tobool, label %if.then12, label %if.end14, !dbg !11590

if.then12:                                        ; preds = %do.body
  %13 = load i8, i8* %event.addr, align 1, !dbg !11587
  %conv13 = zext i8 %13 to i32, !dbg !11587
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.147, i64 0, i64 0), i32 %conv13) #12, !dbg !11587
  br label %if.end14, !dbg !11587

if.end14:                                         ; preds = %if.then12, %do.body
  br label %do.end, !dbg !11590

do.end:                                           ; preds = %if.end14
  br label %sw.epilog, !dbg !11591

if.end15:                                         ; preds = %sw.default
  %14 = load i8, i8* %event.addr, align 1, !dbg !11592
  %idxprom = zext i8 %14 to i64, !dbg !11594
  %arrayidx = getelementptr [74 x i32], [74 x i32]* @sony_laptop_input_index, i64 0, i64 %idxprom, !dbg !11594
  %15 = load i32, i32* %arrayidx, align 4, !dbg !11594
  store i32 %15, i32* %scancode, align 4, !dbg !11595
  %cmp16 = icmp ne i32 %15, -1, !dbg !11596
  br i1 %cmp16, label %if.then18, label %if.end28, !dbg !11597

if.then18:                                        ; preds = %if.end15
  %16 = load i32, i32* %scancode, align 4, !dbg !11598
  %idxprom19 = sext i32 %16 to i64, !dbg !11600
  %arrayidx20 = getelementptr [60 x i32], [60 x i32]* @sony_laptop_input_keycode_map, i64 0, i64 %idxprom19, !dbg !11600
  %17 = load i32, i32* %arrayidx20, align 4, !dbg !11600
  %key21 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 1, !dbg !11601
  store i32 %17, i32* %key21, align 8, !dbg !11602
  %key22 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 1, !dbg !11603
  %18 = load i32, i32* %key22, align 8, !dbg !11603
  %cmp23 = icmp ne i32 %18, 240, !dbg !11605
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !11606

if.then25:                                        ; preds = %if.then18
  %19 = load %struct.input_dev*, %struct.input_dev** %key_dev, align 8, !dbg !11607
  %dev26 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !11608
  store %struct.input_dev* %19, %struct.input_dev** %dev26, align 8, !dbg !11609
  br label %if.end27, !dbg !11610

if.end27:                                         ; preds = %if.then25, %if.then18
  br label %if.end28, !dbg !11611

if.end28:                                         ; preds = %if.end27, %if.end15
  br label %sw.epilog, !dbg !11612

sw.epilog:                                        ; preds = %if.end28, %do.end, %sw.bb7
  %dev29 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !11613
  %20 = load %struct.input_dev*, %struct.input_dev** %dev29, align 8, !dbg !11613
  %tobool30 = icmp ne %struct.input_dev* %20, null, !dbg !11614
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !11615

if.then31:                                        ; preds = %sw.epilog
  %21 = load i32, i32* %scancode, align 4, !dbg !11616
  %cmp32 = icmp ne i32 %21, -1, !dbg !11618
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !11619

if.then34:                                        ; preds = %if.then31
  %dev35 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !11620
  %22 = load %struct.input_dev*, %struct.input_dev** %dev35, align 8, !dbg !11620
  %23 = load i32, i32* %scancode, align 4, !dbg !11621
  call void @input_event(%struct.input_dev* %22, i32 4, i32 4, i32 %23) #11, !dbg !11622
  br label %if.end36, !dbg !11622

if.end36:                                         ; preds = %if.then34, %if.then31
  %dev37 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !11623
  %24 = load %struct.input_dev*, %struct.input_dev** %dev37, align 8, !dbg !11623
  %key38 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 1, !dbg !11624
  %25 = load i32, i32* %key38, align 8, !dbg !11624
  call void @input_report_key(%struct.input_dev* %24, i32 %25, i32 1) #11, !dbg !11625
  %dev39 = getelementptr inbounds %struct.sony_laptop_keypress, %struct.sony_laptop_keypress* %kp, i32 0, i32 0, !dbg !11626
  %26 = load %struct.input_dev*, %struct.input_dev** %dev39, align 8, !dbg !11626
  call void @input_sync(%struct.input_dev* %26) #11, !dbg !11627
  call void @llvm.dbg.declare(metadata i64* %__flags, metadata !11628, metadata !DIExpression()), !dbg !11629
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !11630, metadata !DIExpression()), !dbg !11629
  br label %do.body40, !dbg !11629

do.body40:                                        ; preds = %if.end36
  br label %do.body41, !dbg !11631

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11632, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11635, metadata !DIExpression()), !dbg !11634
  %cmp42 = icmp eq i64* %__dummy, %__dummy2, !dbg !11634
  %conv43 = zext i1 %cmp42 to i32, !dbg !11634
  store i32 1, i32* %tmp, align 4, !dbg !11634
  %27 = load i32, i32* %tmp, align 4, !dbg !11634
  br label %do.body44, !dbg !11636

do.body44:                                        ; preds = %do.body41
  br label %do.body45, !dbg !11637

do.body45:                                        ; preds = %do.body44
  br label %do.body46, !dbg !11638

do.body46:                                        ; preds = %do.body45
  call void @llvm.dbg.declare(metadata i64* %__dummy47, metadata !11640, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.declare(metadata i64* %__dummy248, metadata !11644, metadata !DIExpression()), !dbg !11643
  %cmp49 = icmp eq i64* %__dummy47, %__dummy248, !dbg !11643
  %conv50 = zext i1 %cmp49 to i32, !dbg !11643
  store i32 1, i32* %tmp51, align 4, !dbg !11643
  %28 = load i32, i32* %tmp51, align 4, !dbg !11643
  %call52 = call i64 @arch_local_irq_save() #11, !dbg !11645
  store i64 %call52, i64* %__flags, align 8, !dbg !11645
  br label %do.end53, !dbg !11645

do.end53:                                         ; preds = %do.body46
  br label %do.end54, !dbg !11638

do.end54:                                         ; preds = %do.end53
  br label %do.body55, !dbg !11637

do.body55:                                        ; preds = %do.end54
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11646, !srcloc !11647
  br label %do.body56, !dbg !11646

do.body56:                                        ; preds = %do.body55
  store %struct.spinlock* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 4), %struct.spinlock** %lock.addr.i, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11648
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !11649
  %rlock.i = bitcast %union.anon.0* %30 to %struct.raw_spinlock*, !dbg !11649
  br label %do.end58, !dbg !11650

do.end58:                                         ; preds = %do.body56
  br label %do.end59, !dbg !11646

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !11637

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !11636

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !11631

do.end62:                                         ; preds = %do.end61
  call void @llvm.dbg.declare(metadata %struct.kfifo** %__tmp, metadata !11651, metadata !DIExpression()), !dbg !11653
  store %struct.kfifo* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 3), %struct.kfifo** %__tmp, align 8, !dbg !11653
  call void @llvm.dbg.declare(metadata i8** %__buf, metadata !11654, metadata !DIExpression()), !dbg !11653
  %31 = bitcast %struct.sony_laptop_keypress* %kp to i8*, !dbg !11653
  store i8* %31, i8** %__buf, align 8, !dbg !11653
  call void @llvm.dbg.declare(metadata i64* %__n, metadata !11655, metadata !DIExpression()), !dbg !11653
  store i64 16, i64* %__n, align 8, !dbg !11653
  call void @llvm.dbg.declare(metadata i64* %__recsize, metadata !11656, metadata !DIExpression()), !dbg !11653
  store i64 0, i64* %__recsize, align 8, !dbg !11653
  call void @llvm.dbg.declare(metadata %struct.__kfifo** %__kfifo, metadata !11657, metadata !DIExpression()), !dbg !11653
  %32 = load %struct.kfifo*, %struct.kfifo** %__tmp, align 8, !dbg !11653
  %33 = getelementptr inbounds %struct.kfifo, %struct.kfifo* %32, i32 0, i32 0, !dbg !11653
  %kfifo = bitcast %union.anon.76* %33 to %struct.__kfifo*, !dbg !11653
  store %struct.__kfifo* %kfifo, %struct.__kfifo** %__kfifo, align 8, !dbg !11653
  %34 = load %struct.__kfifo*, %struct.__kfifo** %__kfifo, align 8, !dbg !11653
  %35 = load i8*, i8** %__buf, align 8, !dbg !11653
  %36 = load i64, i64* %__n, align 8, !dbg !11653
  %conv64 = trunc i64 %36 to i32, !dbg !11653
  %call65 = call i32 @__kfifo_in(%struct.__kfifo* %34, i8* %35, i32 %conv64) #11, !dbg !11653
  store i32 %call65, i32* %tmp63, align 4, !dbg !11653
  %37 = load i32, i32* %tmp63, align 4, !dbg !11653
  store i32 %37, i32* %__ret, align 4, !dbg !11629
  %38 = load i64, i64* %__flags, align 8, !dbg !11629
  store %struct.spinlock* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 4), %struct.spinlock** %lock.addr.i77, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !299, metadata !7770, metadata !DIExpression()) #7, !dbg !11658
  call void @llvm.dbg.declare(metadata !299, metadata !7774, metadata !DIExpression()) #7, !dbg !11658
  store i32 1, i32* %tmp.i, align 4, !dbg !11658
  %39 = load i32, i32* %tmp.i, align 4, !dbg !11658
  call void @llvm.dbg.declare(metadata !299, metadata !7775, metadata !DIExpression()) #7, !dbg !11659
  call void @llvm.dbg.declare(metadata !299, metadata !7781, metadata !DIExpression()) #7, !dbg !11659
  store i32 1, i32* %tmp8.i, align 4, !dbg !11659
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !11659
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !11660
  call void @arch_local_irq_restore(i64 %41) #13, !dbg !11660
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11661, !srcloc !7785
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !11662
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !11662
  %rlock.i78 = bitcast %union.anon.0* %43 to %struct.raw_spinlock*, !dbg !11662
  %44 = load i32, i32* %__ret, align 4, !dbg !11629
  store i32 %44, i32* %tmp66, align 4, !dbg !11629
  %45 = load i32, i32* %tmp66, align 4, !dbg !11629
  %46 = load volatile i64, i64* @jiffies, align 8, !dbg !11663
  store i32 10, i32* %m.addr.i, align 4
  %47 = load i32, i32* %m.addr.i, align 4, !dbg !11664
  %48 = call i1 @llvm.is.constant.i32(i32 %47) #7, !dbg !11665
  br i1 %48, label %if.then.i, label %if.else.i, !dbg !11666

if.then.i:                                        ; preds = %do.end62
  %49 = load i32, i32* %m.addr.i, align 4, !dbg !11667
  %cmp.i = icmp slt i32 %49, 0, !dbg !11668
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11669

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11670
  br label %msecs_to_jiffies.exit, !dbg !11670

if.end.i:                                         ; preds = %if.then.i
  %50 = load i32, i32* %m.addr.i, align 4, !dbg !11671
  %call.i = call i64 @_msecs_to_jiffies(i32 %50) #13, !dbg !11672
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11673
  br label %msecs_to_jiffies.exit, !dbg !11673

if.else.i:                                        ; preds = %do.end62
  %51 = load i32, i32* %m.addr.i, align 4, !dbg !11674
  %call2.i = call i64 @__msecs_to_jiffies(i32 %51) #13, !dbg !11675
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11676
  br label %msecs_to_jiffies.exit, !dbg !11676

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %52 = load i64, i64* %retval.i, align 8, !dbg !11677
  %add = add i64 %46, %52, !dbg !11678
  %call68 = call i32 @mod_timer(%struct.timer_list* getelementptr inbounds (%struct.sony_laptop_input_s, %struct.sony_laptop_input_s* @sony_laptop_input, i32 0, i32 5), i64 %add) #11, !dbg !11679
  br label %if.end76, !dbg !11680

if.else:                                          ; preds = %sw.epilog
  br label %do.body69, !dbg !11681

do.body69:                                        ; preds = %if.else
  %53 = load i32, i32* @debug, align 4, !dbg !11682
  %tobool70 = icmp ne i32 %53, 0, !dbg !11682
  br i1 %tobool70, label %if.then71, label %if.end74, !dbg !11685

if.then71:                                        ; preds = %do.body69
  %54 = load i8, i8* %event.addr, align 1, !dbg !11682
  %conv72 = zext i8 %54 to i32, !dbg !11682
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.148, i64 0, i64 0), i32 %conv72) #12, !dbg !11682
  br label %if.end74, !dbg !11682

if.end74:                                         ; preds = %if.then71, %do.body69
  br label %do.end75, !dbg !11685

do.end75:                                         ; preds = %if.end74
  br label %if.end76

if.end76:                                         ; preds = %if.then, %sw.bb, %sw.bb6, %do.end75, %msecs_to_jiffies.exit
  ret void, !dbg !11686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_rfkill_update() #0 !dbg !11687 {
entry:
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %hwblock = alloca i8, align 1
  %argument = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11688, metadata !DIExpression()), !dbg !11689
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata i8* %hwblock, metadata !11692, metadata !DIExpression()), !dbg !11693
  %0 = load i32, i32* @sony_rfkill_handle, align 4, !dbg !11694
  %call = call i32 @sony_call_snc_handle(i32 %0, i32 512, i32* %result) #11, !dbg !11695
  %1 = load i32, i32* %result, align 4, !dbg !11696
  %and = and i32 %1, 1, !dbg !11697
  %tobool = icmp ne i32 %and, 0, !dbg !11698
  %lnot = xor i1 %tobool, true, !dbg !11698
  %frombool = zext i1 %lnot to i8, !dbg !11699
  store i8 %frombool, i8* %hwblock, align 1, !dbg !11699
  store i32 0, i32* %i, align 4, !dbg !11700
  br label %for.cond, !dbg !11702

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !11703
  %cmp = icmp ult i32 %2, 4, !dbg !11705
  br i1 %cmp, label %for.body, label %for.end, !dbg !11706

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %argument, metadata !11707, metadata !DIExpression()), !dbg !11709
  %3 = load i32, i32* %i, align 4, !dbg !11710
  %idxprom = zext i32 %3 to i64, !dbg !11711
  %arrayidx = getelementptr [4 x i32], [4 x i32]* @sony_rfkill_address, i64 0, i64 %idxprom, !dbg !11711
  %4 = load i32, i32* %arrayidx, align 4, !dbg !11711
  store i32 %4, i32* %argument, align 4, !dbg !11709
  %5 = load i32, i32* %i, align 4, !dbg !11712
  %idxprom1 = zext i32 %5 to i64, !dbg !11714
  %arrayidx2 = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom1, !dbg !11714
  %6 = load %struct.rfkill*, %struct.rfkill** %arrayidx2, align 8, !dbg !11714
  %tobool3 = icmp ne %struct.rfkill* %6, null, !dbg !11714
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11715

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11716

if.end:                                           ; preds = %for.body
  %7 = load i8, i8* %hwblock, align 1, !dbg !11717
  %tobool4 = trunc i8 %7 to i1, !dbg !11717
  br i1 %tobool4, label %if.then5, label %if.end11, !dbg !11719

if.then5:                                         ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !11720
  %idxprom6 = zext i32 %8 to i64, !dbg !11723
  %arrayidx7 = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom6, !dbg !11723
  %9 = load %struct.rfkill*, %struct.rfkill** %arrayidx7, align 8, !dbg !11723
  %call8 = call zeroext i1 @rfkill_set_hw_state(%struct.rfkill* %9, i1 zeroext true) #11, !dbg !11724
  br i1 %call8, label %if.then9, label %if.end10, !dbg !11725

if.then9:                                         ; preds = %if.then5
  br label %if.end10, !dbg !11726

if.end10:                                         ; preds = %if.then9, %if.then5
  br label %for.inc, !dbg !11728

if.end11:                                         ; preds = %if.end
  %10 = load i32, i32* @sony_rfkill_handle, align 4, !dbg !11729
  %11 = load i32, i32* %argument, align 4, !dbg !11730
  %call12 = call i32 @sony_call_snc_handle(i32 %10, i32 %11, i32* %result) #11, !dbg !11731
  %12 = load i32, i32* %i, align 4, !dbg !11732
  %idxprom13 = zext i32 %12 to i64, !dbg !11733
  %arrayidx14 = getelementptr [4 x %struct.rfkill*], [4 x %struct.rfkill*]* @sony_rfkill_devices, i64 0, i64 %idxprom13, !dbg !11733
  %13 = load %struct.rfkill*, %struct.rfkill** %arrayidx14, align 8, !dbg !11733
  %14 = load i32, i32* %result, align 4, !dbg !11734
  %and15 = and i32 %14, 2, !dbg !11735
  %tobool16 = icmp ne i32 %and15, 0, !dbg !11736
  %lnot17 = xor i1 %tobool16, true, !dbg !11736
  call void @rfkill_set_states(%struct.rfkill* %13, i1 zeroext %lnot17, i1 zeroext false) #11, !dbg !11737
  br label %for.inc, !dbg !11738

for.inc:                                          ; preds = %if.end11, %if.end10, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !11739
  %inc = add i32 %15, 1, !dbg !11739
  store i32 %inc, i32* %i, align 4, !dbg !11739
  br label %for.cond, !dbg !11740, !llvm.loop !11741

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11743
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_generate_netlink_event(i8*, i8*, i8 zeroext, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !11744 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11747, metadata !DIExpression()), !dbg !11748
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11749
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11751
  %1 = load i8*, i8** %init_name, align 8, !dbg !11751
  %tobool = icmp ne i8* %1, null, !dbg !11749
  br i1 %tobool, label %if.then, label %if.end, !dbg !11752

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11753
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !11754
  %3 = load i8*, i8** %init_name1, align 8, !dbg !11754
  store i8* %3, i8** %retval, align 8, !dbg !11755
  br label %return, !dbg !11755

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11756
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !11757
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !11758
  store i8* %call, i8** %retval, align 8, !dbg !11759
  br label %return, !dbg !11759

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !11760
  ret i8* %5, !dbg !11760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_rel(%struct.input_dev* %dev, i32 %code, i32 %value) #0 !dbg !11761 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !11762, metadata !DIExpression()), !dbg !11763
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !11764, metadata !DIExpression()), !dbg !11765
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11766, metadata !DIExpression()), !dbg !11767
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !11768
  %1 = load i32, i32* %code.addr, align 4, !dbg !11769
  %2 = load i32, i32* %value.addr, align 4, !dbg !11770
  call void @input_event(%struct.input_dev* %0, i32 2, i32 %1, i32 %2) #11, !dbg !11771
  ret void, !dbg !11772
}

; Function Attrs: noredzone
declare dso_local i32 @__kfifo_in(%struct.__kfifo*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @rfkill_set_states(%struct.rfkill*, i1 zeroext, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !11773 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !11778, metadata !DIExpression()), !dbg !11779
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !11780
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !11781
  %1 = load i8*, i8** %name, align 8, !dbg !11781
  ret i8* %1, !dbg !11782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_nc_resume(%struct.device* %dev) #0 !dbg !11783 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %item = alloca %struct.sony_nc_value*, align 8
  %ret = alloca i32, align 4
  %arg = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.declare(metadata %struct.sony_nc_value** %item, metadata !11786, metadata !DIExpression()), !dbg !11787
  store %struct.sony_nc_value* getelementptr inbounds ([13 x %struct.sony_nc_value], [13 x %struct.sony_nc_value]* @sony_nc_values, i64 0, i64 0), %struct.sony_nc_value** %item, align 8, !dbg !11788
  br label %for.cond, !dbg !11790

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11791
  %name = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %0, i32 0, i32 0, !dbg !11793
  %1 = load i8*, i8** %name, align 8, !dbg !11793
  %tobool = icmp ne i8* %1, null, !dbg !11794
  br i1 %tobool, label %for.body, label %for.end, !dbg !11794

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11795, metadata !DIExpression()), !dbg !11797
  %2 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11798
  %valid = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %2, i32 0, i32 5, !dbg !11800
  %3 = load i32, i32* %valid, align 4, !dbg !11800
  %tobool1 = icmp ne i32 %3, 0, !dbg !11798
  br i1 %tobool1, label %if.end, label %if.then, !dbg !11801

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11802

if.end:                                           ; preds = %for.body
  %4 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11803
  %5 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11804
  %acpiset = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %5, i32 0, i32 2, !dbg !11805
  %6 = load i8**, i8*** %acpiset, align 8, !dbg !11805
  %7 = load i8*, i8** %6, align 8, !dbg !11806
  %8 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11807
  %value = getelementptr inbounds %struct.sony_nc_value, %struct.sony_nc_value* %8, i32 0, i32 4, !dbg !11808
  %call = call i32 @sony_nc_int_call(i8* %4, i8* %7, i32* %value, i32* null) #11, !dbg !11809
  store i32 %call, i32* %ret, align 4, !dbg !11810
  %9 = load i32, i32* %ret, align 4, !dbg !11811
  %cmp = icmp slt i32 %9, 0, !dbg !11813
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !11814

if.then2:                                         ; preds = %if.end
  %10 = load i32, i32* %ret, align 4, !dbg !11815
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.sony_nc_resume, i64 0, i64 0), i32 %10) #12, !dbg !11815
  br label %for.end, !dbg !11817

if.end4:                                          ; preds = %if.end
  br label %for.inc, !dbg !11818

for.inc:                                          ; preds = %if.end4, %if.then
  %11 = load %struct.sony_nc_value*, %struct.sony_nc_value** %item, align 8, !dbg !11819
  %incdec.ptr = getelementptr %struct.sony_nc_value, %struct.sony_nc_value* %11, i32 1, !dbg !11819
  store %struct.sony_nc_value* %incdec.ptr, %struct.sony_nc_value** %item, align 8, !dbg !11819
  br label %for.cond, !dbg !11820, !llvm.loop !11821

for.end:                                          ; preds = %if.then2, %for.cond
  %12 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11823
  %call5 = call zeroext i1 @acpi_has_method(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #11, !dbg !11825
  br i1 %call5, label %if.then6, label %if.end15, !dbg !11826

if.then6:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !11827, metadata !DIExpression()), !dbg !11829
  store i32 1, i32* %arg, align 4, !dbg !11829
  %13 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11830
  %call7 = call i32 @sony_nc_int_call(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i32* %arg, i32* null) #11, !dbg !11832
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11832
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !11833

if.then9:                                         ; preds = %if.then6
  br label %do.body, !dbg !11834

do.body:                                          ; preds = %if.then9
  %14 = load i32, i32* @debug, align 4, !dbg !11835
  %tobool10 = icmp ne i32 %14, 0, !dbg !11835
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !11838

if.then11:                                        ; preds = %do.body
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !11835
  br label %if.end13, !dbg !11835

if.end13:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !11838

do.end:                                           ; preds = %if.end13
  br label %if.end14, !dbg !11838

if.end14:                                         ; preds = %do.end, %if.then6
  br label %if.end15, !dbg !11839

if.end15:                                         ; preds = %if.end14, %for.end
  %15 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11840
  %call16 = call zeroext i1 @acpi_has_method(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0)) #11, !dbg !11842
  br i1 %call16, label %if.then17, label %if.end18, !dbg !11843

if.then17:                                        ; preds = %if.end15
  call void @sony_nc_function_resume() #11, !dbg !11844
  br label %if.end18, !dbg !11844

if.end18:                                         ; preds = %if.then17, %if.end15
  ret i32 0, !dbg !11845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_function_resume() #0 !dbg !11846 {
entry:
  %i = alloca i32, align 4
  %result = alloca i32, align 4
  %bitmask = alloca i32, align 4
  %arg = alloca i32, align 4
  %handle = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11849, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.declare(metadata i32* %bitmask, metadata !11851, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !11853, metadata !DIExpression()), !dbg !11854
  br label %do.body, !dbg !11855

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !11856
  %tobool = icmp ne i32 %0, 0, !dbg !11856
  br i1 %tobool, label %if.then, label %if.end, !dbg !11859

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.150, i64 0, i64 0)) #12, !dbg !11856
  br label %if.end, !dbg !11856

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11859

do.end:                                           ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !11860
  br label %for.cond, !dbg !11862

for.cond:                                         ; preds = %for.inc, %do.end
  %1 = load i32, i32* %i, align 4, !dbg !11863
  %conv = zext i32 %1 to i64, !dbg !11863
  %cmp = icmp ult i64 %conv, 16, !dbg !11865
  br i1 %cmp, label %for.body, label %for.end, !dbg !11866

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %handle, metadata !11867, metadata !DIExpression()), !dbg !11869
  %2 = load %struct.sony_nc_handles*, %struct.sony_nc_handles** @handles, align 8, !dbg !11870
  %cap = getelementptr inbounds %struct.sony_nc_handles, %struct.sony_nc_handles* %2, i32 0, i32 0, !dbg !11871
  %3 = load i32, i32* %i, align 4, !dbg !11872
  %idxprom = zext i32 %3 to i64, !dbg !11870
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %cap, i64 0, i64 %idxprom, !dbg !11870
  %4 = load i16, i16* %arrayidx, align 2, !dbg !11870
  %conv2 = zext i16 %4 to i32, !dbg !11870
  store i32 %conv2, i32* %handle, align 4, !dbg !11869
  %5 = load i32, i32* %handle, align 4, !dbg !11873
  %tobool3 = icmp ne i32 %5, 0, !dbg !11873
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11875

if.then4:                                         ; preds = %for.body
  br label %for.inc, !dbg !11876

if.end5:                                          ; preds = %for.body
  %6 = load i32, i32* %handle, align 4, !dbg !11877
  switch i32 %6, label %sw.default [
    i32 256, label %sw.bb
    i32 257, label %sw.bb
    i32 295, label %sw.bb
    i32 258, label %sw.bb7
    i32 290, label %sw.bb9
    i32 292, label %sw.bb10
    i32 309, label %sw.bb10
  ], !dbg !11878

sw.bb:                                            ; preds = %if.end5, %if.end5, %if.end5
  %7 = load i32, i32* %handle, align 4, !dbg !11879
  %call6 = call i32 @sony_call_snc_handle(i32 %7, i32 0, i32* %result) #11, !dbg !11881
  br label %sw.epilog, !dbg !11882

sw.bb7:                                           ; preds = %if.end5
  %8 = load i32, i32* %handle, align 4, !dbg !11883
  %call8 = call i32 @sony_call_snc_handle(i32 %8, i32 256, i32* %result) #11, !dbg !11884
  br label %sw.epilog, !dbg !11885

sw.bb9:                                           ; preds = %if.end5
  call void @sony_nc_thermal_resume() #11, !dbg !11886
  br label %sw.epilog, !dbg !11887

sw.bb10:                                          ; preds = %if.end5, %if.end5
  call void @sony_nc_rfkill_update() #11, !dbg !11888
  br label %sw.epilog, !dbg !11889

sw.default:                                       ; preds = %if.end5
  br label %for.inc, !dbg !11890

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb9, %sw.bb7, %sw.bb
  br label %for.inc, !dbg !11891

for.inc:                                          ; preds = %sw.epilog, %sw.default, %if.then4
  %9 = load i32, i32* %i, align 4, !dbg !11892
  %inc = add i32 %9, 1, !dbg !11892
  store i32 %inc, i32* %i, align 4, !dbg !11892
  br label %for.cond, !dbg !11893, !llvm.loop !11894

for.end:                                          ; preds = %for.cond
  store i32 16, i32* %arg, align 4, !dbg !11896
  %10 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11897
  %call11 = call i32 @sony_nc_int_call(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32* %arg, i32* %bitmask) #11, !dbg !11899
  %tobool12 = icmp ne i32 %call11, 0, !dbg !11899
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !11900

if.then13:                                        ; preds = %for.end
  %11 = load i8*, i8** @sony_nc_acpi_handle, align 8, !dbg !11901
  %call14 = call i32 @sony_nc_int_call(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i32* %bitmask, i32* %result) #11, !dbg !11902
  br label %if.end15, !dbg !11902

if.end15:                                         ; preds = %if.then13, %for.end
  ret void, !dbg !11903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_nc_thermal_resume() #0 !dbg !11904 {
entry:
  %status = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11905, metadata !DIExpression()), !dbg !11906
  %0 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11907
  %tobool = icmp ne %struct.snc_thermal_ctrl* %0, null, !dbg !11907
  br i1 %tobool, label %if.end, label %if.then, !dbg !11909

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !11910

if.end:                                           ; preds = %entry
  %call = call i32 @sony_nc_thermal_mode_get() #11, !dbg !11911
  store i32 %call, i32* %status, align 4, !dbg !11912
  %1 = load i32, i32* %status, align 4, !dbg !11913
  %2 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11915
  %mode = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %2, i32 0, i32 0, !dbg !11916
  %3 = load i32, i32* %mode, align 8, !dbg !11916
  %cmp = icmp ne i32 %1, %3, !dbg !11917
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !11918

if.then1:                                         ; preds = %if.end
  %4 = load %struct.snc_thermal_ctrl*, %struct.snc_thermal_ctrl** @th_handle, align 8, !dbg !11919
  %mode2 = getelementptr inbounds %struct.snc_thermal_ctrl, %struct.snc_thermal_ctrl* %4, i32 0, i32 0, !dbg !11920
  %5 = load i32, i32* %mode2, align 8, !dbg !11920
  %conv = trunc i32 %5 to i16, !dbg !11919
  %call3 = call i32 @sony_nc_thermal_mode_set(i16 zeroext %conv) #11, !dbg !11921
  br label %if.end4, !dbg !11921

if.end4:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !11922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_add(%struct.acpi_device* %device) #0 !dbg !5554 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %result = alloca i32, align 4
  %io = alloca %struct.sony_pic_ioport*, align 8
  %tmp_io = alloca %struct.sony_pic_ioport*, align 8
  %irq = alloca %struct.sony_pic_irq*, align 8
  %tmp_irq = alloca %struct.sony_pic_irq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sony_pic_ioport*, align 8
  %__mptr85 = alloca i8*, align 8
  %tmp89 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr95 = alloca i8*, align 8
  %tmp98 = alloca %struct.sony_pic_irq*, align 8
  %__mptr129 = alloca i8*, align 8
  %tmp134 = alloca %struct.sony_pic_irq*, align 8
  %__mptr178 = alloca i8*, align 8
  %tmp181 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr183 = alloca i8*, align 8
  %tmp187 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr197 = alloca i8*, align 8
  %tmp202 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr205 = alloca i8*, align 8
  %tmp208 = alloca %struct.sony_pic_irq*, align 8
  %__mptr210 = alloca i8*, align 8
  %tmp215 = alloca %struct.sony_pic_irq*, align 8
  %__mptr225 = alloca i8*, align 8
  %tmp230 = alloca %struct.sony_pic_irq*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11925, metadata !DIExpression()), !dbg !11926
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %io, metadata !11927, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %tmp_io, metadata !11929, metadata !DIExpression()), !dbg !11930
  call void @llvm.dbg.declare(metadata %struct.sony_pic_irq** %irq, metadata !11931, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.declare(metadata %struct.sony_pic_irq** %tmp_irq, metadata !11933, metadata !DIExpression()), !dbg !11934
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !11935
  store %struct.acpi_device* %0, %struct.acpi_device** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 0), align 8, !dbg !11936
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !11937
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 10, !dbg !11937
  %device_class = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 6, !dbg !11937
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %device_class, i64 0, i64 0, !dbg !11937
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !11938
  call void @sony_pic_detect_device_type(%struct.sony_pic_dev* @spic_dev) #11, !dbg !11939
  br label %do.body, !dbg !11940

do.body:                                          ; preds = %entry
  call void @__mutex_init(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i64 0, i64 0), %struct.lock_class_key* @sony_pic_add.__key) #11, !dbg !11941
  br label %do.end, !dbg !11941

do.end:                                           ; preds = %do.body
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !11943
  %call1 = call i32 @sony_pic_possible_resources(%struct.acpi_device* %2) #11, !dbg !11944
  store i32 %call1, i32* %result, align 4, !dbg !11945
  %3 = load i32, i32* %result, align 4, !dbg !11946
  %tobool = icmp ne i32 %3, 0, !dbg !11946
  br i1 %tobool, label %if.then, label %if.end, !dbg !11948

if.then:                                          ; preds = %do.end
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.152, i64 0, i64 0)) #12, !dbg !11949
  br label %err_free_resources, !dbg !11951

if.end:                                           ; preds = %do.end
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !11952
  %call3 = call i32 @sony_laptop_setup_input(%struct.acpi_device* %4) #11, !dbg !11953
  store i32 %call3, i32* %result, align 4, !dbg !11954
  %5 = load i32, i32* %result, align 4, !dbg !11955
  %tobool4 = icmp ne i32 %5, 0, !dbg !11955
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !11957

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !11958
  br label %err_free_resources, !dbg !11960

if.end7:                                          ; preds = %if.end
  %call8 = call i32 @sonypi_compat_init() #11, !dbg !11961
  store i32 %call8, i32* %result, align 4, !dbg !11962
  %6 = load i32, i32* %result, align 4, !dbg !11963
  %tobool9 = icmp ne i32 %6, 0, !dbg !11963
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !11965

if.then10:                                        ; preds = %if.end7
  br label %err_remove_input, !dbg !11966

if.end11:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11967, metadata !DIExpression()), !dbg !11970
  %7 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 4, i32 1), align 8, !dbg !11970
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !11970
  store i8* %8, i8** %__mptr, align 8, !dbg !11970
  br label %do.body12, !dbg !11970

do.body12:                                        ; preds = %if.end11
  br label %do.end13, !dbg !11971

do.end13:                                         ; preds = %do.body12
  %9 = load i8*, i8** %__mptr, align 8, !dbg !11970
  %add.ptr = getelementptr i8, i8* %9, i64 -16, !dbg !11970
  %10 = bitcast i8* %add.ptr to %struct.sony_pic_ioport*, !dbg !11970
  store %struct.sony_pic_ioport* %10, %struct.sony_pic_ioport** %tmp, align 8, !dbg !11971
  %11 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp, align 8, !dbg !11970
  store %struct.sony_pic_ioport* %11, %struct.sony_pic_ioport** %io, align 8, !dbg !11973
  br label %for.cond, !dbg !11973

for.cond:                                         ; preds = %do.end88, %do.end13
  %12 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11974
  %list = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %12, i32 0, i32 2, !dbg !11974
  %cmp = icmp eq %struct.list_head* %list, getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 4), !dbg !11974
  %lnot = xor i1 %cmp, true, !dbg !11974
  br i1 %lnot, label %for.body, label %for.end, !dbg !11973

for.body:                                         ; preds = %for.cond
  %13 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11976
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %13, i32 0, i32 0, !dbg !11976
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !11976
  %14 = load i16, i16* %minimum, align 1, !dbg !11976
  %conv = zext i16 %14 to i64, !dbg !11976
  %15 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11976
  %io114 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %15, i32 0, i32 0, !dbg !11976
  %address_length = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io114, i32 0, i32 2, !dbg !11976
  %16 = load i8, i8* %address_length, align 2, !dbg !11976
  %conv15 = zext i8 %16 to i64, !dbg !11976
  %call16 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv, i64 %conv15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i64 0, i64 0), i32 0) #11, !dbg !11976
  %tobool17 = icmp ne %struct.resource* %call16, null, !dbg !11976
  br i1 %tobool17, label %if.then18, label %if.end84, !dbg !11979

if.then18:                                        ; preds = %for.body
  br label %do.body19, !dbg !11980

do.body19:                                        ; preds = %if.then18
  %17 = load i32, i32* @debug, align 4, !dbg !11982
  %tobool20 = icmp ne i32 %17, 0, !dbg !11982
  br i1 %tobool20, label %if.then21, label %if.end31, !dbg !11985

if.then21:                                        ; preds = %do.body19
  %18 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11982
  %io122 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %18, i32 0, i32 0, !dbg !11982
  %minimum23 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io122, i32 0, i32 3, !dbg !11982
  %19 = load i16, i16* %minimum23, align 1, !dbg !11982
  %conv24 = zext i16 %19 to i32, !dbg !11982
  %20 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11982
  %io125 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %20, i32 0, i32 0, !dbg !11982
  %maximum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io125, i32 0, i32 4, !dbg !11982
  %21 = load i16, i16* %maximum, align 1, !dbg !11982
  %conv26 = zext i16 %21 to i32, !dbg !11982
  %22 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11982
  %io127 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %22, i32 0, i32 0, !dbg !11982
  %address_length28 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io127, i32 0, i32 2, !dbg !11982
  %23 = load i8, i8* %address_length28, align 2, !dbg !11982
  %conv29 = zext i8 %23 to i32, !dbg !11982
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.154, i64 0, i64 0), i32 %conv24, i32 %conv26, i32 %conv29) #12, !dbg !11982
  br label %if.end31, !dbg !11982

if.end31:                                         ; preds = %if.then21, %do.body19
  br label %do.end32, !dbg !11985

do.end32:                                         ; preds = %if.end31
  %24 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11986
  %io2 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %24, i32 0, i32 1, !dbg !11988
  %minimum33 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2, i32 0, i32 3, !dbg !11989
  %25 = load i16, i16* %minimum33, align 1, !dbg !11989
  %tobool34 = icmp ne i16 %25, 0, !dbg !11986
  br i1 %tobool34, label %if.then35, label %if.else82, !dbg !11990

if.then35:                                        ; preds = %do.end32
  %26 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11991
  %io236 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %26, i32 0, i32 1, !dbg !11991
  %minimum37 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io236, i32 0, i32 3, !dbg !11991
  %27 = load i16, i16* %minimum37, align 1, !dbg !11991
  %conv38 = zext i16 %27 to i64, !dbg !11991
  %28 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11991
  %io239 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %28, i32 0, i32 1, !dbg !11991
  %address_length40 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io239, i32 0, i32 2, !dbg !11991
  %29 = load i8, i8* %address_length40, align 1, !dbg !11991
  %conv41 = zext i8 %29 to i64, !dbg !11991
  %call42 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %conv38, i64 %conv41, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i64 0, i64 0), i32 0) #11, !dbg !11991
  %tobool43 = icmp ne %struct.resource* %call42, null, !dbg !11991
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !11994

if.then44:                                        ; preds = %if.then35
  br label %do.body45, !dbg !11995

do.body45:                                        ; preds = %if.then44
  %30 = load i32, i32* @debug, align 4, !dbg !11997
  %tobool46 = icmp ne i32 %30, 0, !dbg !11997
  br i1 %tobool46, label %if.then47, label %if.end58, !dbg !12000

if.then47:                                        ; preds = %do.body45
  %31 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11997
  %io248 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %31, i32 0, i32 1, !dbg !11997
  %minimum49 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io248, i32 0, i32 3, !dbg !11997
  %32 = load i16, i16* %minimum49, align 1, !dbg !11997
  %conv50 = zext i16 %32 to i32, !dbg !11997
  %33 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11997
  %io251 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %33, i32 0, i32 1, !dbg !11997
  %maximum52 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io251, i32 0, i32 4, !dbg !11997
  %34 = load i16, i16* %maximum52, align 1, !dbg !11997
  %conv53 = zext i16 %34 to i32, !dbg !11997
  %35 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !11997
  %io254 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %35, i32 0, i32 1, !dbg !11997
  %address_length55 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io254, i32 0, i32 2, !dbg !11997
  %36 = load i8, i8* %address_length55, align 1, !dbg !11997
  %conv56 = zext i8 %36 to i32, !dbg !11997
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.155, i64 0, i64 0), i32 %conv50, i32 %conv53, i32 %conv56) #12, !dbg !11997
  br label %if.end58, !dbg !11997

if.end58:                                         ; preds = %if.then47, %do.body45
  br label %do.end59, !dbg !12000

do.end59:                                         ; preds = %if.end58
  %37 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12001
  store %struct.sony_pic_ioport* %37, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12002
  br label %for.end, !dbg !12003

if.else:                                          ; preds = %if.then35
  br label %do.body60, !dbg !12004

do.body60:                                        ; preds = %if.else
  %38 = load i32, i32* @debug, align 4, !dbg !12006
  %tobool61 = icmp ne i32 %38, 0, !dbg !12006
  br i1 %tobool61, label %if.then62, label %if.end73, !dbg !12009

if.then62:                                        ; preds = %do.body60
  %39 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12006
  %io263 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %39, i32 0, i32 1, !dbg !12006
  %minimum64 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io263, i32 0, i32 3, !dbg !12006
  %40 = load i16, i16* %minimum64, align 1, !dbg !12006
  %conv65 = zext i16 %40 to i32, !dbg !12006
  %41 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12006
  %io266 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %41, i32 0, i32 1, !dbg !12006
  %maximum67 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io266, i32 0, i32 4, !dbg !12006
  %42 = load i16, i16* %maximum67, align 1, !dbg !12006
  %conv68 = zext i16 %42 to i32, !dbg !12006
  %43 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12006
  %io269 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %43, i32 0, i32 1, !dbg !12006
  %address_length70 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io269, i32 0, i32 2, !dbg !12006
  %44 = load i8, i8* %address_length70, align 1, !dbg !12006
  %conv71 = zext i8 %44 to i32, !dbg !12006
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.156, i64 0, i64 0), i32 %conv65, i32 %conv68, i32 %conv71) #12, !dbg !12006
  br label %if.end73, !dbg !12006

if.end73:                                         ; preds = %if.then62, %do.body60
  br label %do.end74, !dbg !12009

do.end74:                                         ; preds = %if.end73
  %45 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12010
  %io175 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %45, i32 0, i32 0, !dbg !12010
  %minimum76 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io175, i32 0, i32 3, !dbg !12010
  %46 = load i16, i16* %minimum76, align 1, !dbg !12010
  %conv77 = zext i16 %46 to i64, !dbg !12010
  %47 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12010
  %io178 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %47, i32 0, i32 0, !dbg !12010
  %address_length79 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io178, i32 0, i32 2, !dbg !12010
  %48 = load i8, i8* %address_length79, align 2, !dbg !12010
  %conv80 = zext i8 %48 to i64, !dbg !12010
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv77, i64 %conv80) #11, !dbg !12010
  br label %if.end81

if.end81:                                         ; preds = %do.end74
  br label %if.end83, !dbg !12011

if.else82:                                        ; preds = %do.end32
  %49 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12012
  store %struct.sony_pic_ioport* %49, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12014
  br label %for.end, !dbg !12015

if.end83:                                         ; preds = %if.end81
  br label %if.end84, !dbg !12016

if.end84:                                         ; preds = %if.end83, %for.body
  br label %for.inc, !dbg !12017

for.inc:                                          ; preds = %if.end84
  call void @llvm.dbg.declare(metadata i8** %__mptr85, metadata !12018, metadata !DIExpression()), !dbg !12020
  %50 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12020
  %list86 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %50, i32 0, i32 2, !dbg !12020
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list86, i32 0, i32 1, !dbg !12020
  %51 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12020
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !12020
  store i8* %52, i8** %__mptr85, align 8, !dbg !12020
  br label %do.body87, !dbg !12020

do.body87:                                        ; preds = %for.inc
  br label %do.end88, !dbg !12021

do.end88:                                         ; preds = %do.body87
  %53 = load i8*, i8** %__mptr85, align 8, !dbg !12020
  %add.ptr90 = getelementptr i8, i8* %53, i64 -16, !dbg !12020
  %54 = bitcast i8* %add.ptr90 to %struct.sony_pic_ioport*, !dbg !12020
  store %struct.sony_pic_ioport* %54, %struct.sony_pic_ioport** %tmp89, align 8, !dbg !12021
  %55 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp89, align 8, !dbg !12020
  store %struct.sony_pic_ioport* %55, %struct.sony_pic_ioport** %io, align 8, !dbg !11974
  br label %for.cond, !dbg !11974, !llvm.loop !12023

for.end:                                          ; preds = %if.else82, %do.end59, %for.cond
  %56 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12025
  %tobool91 = icmp ne %struct.sony_pic_ioport* %56, null, !dbg !12027
  br i1 %tobool91, label %if.end94, label %if.then92, !dbg !12028

if.then92:                                        ; preds = %for.end
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.157, i64 0, i64 0)) #12, !dbg !12029
  store i32 -19, i32* %result, align 4, !dbg !12031
  br label %err_remove_compat, !dbg !12032

if.end94:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr95, metadata !12033, metadata !DIExpression()), !dbg !12036
  %57 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 3, i32 1), align 8, !dbg !12036
  %58 = bitcast %struct.list_head* %57 to i8*, !dbg !12036
  store i8* %58, i8** %__mptr95, align 8, !dbg !12036
  br label %do.body96, !dbg !12036

do.body96:                                        ; preds = %if.end94
  br label %do.end97, !dbg !12037

do.end97:                                         ; preds = %do.body96
  %59 = load i8*, i8** %__mptr95, align 8, !dbg !12036
  %add.ptr99 = getelementptr i8, i8* %59, i64 -8, !dbg !12036
  %60 = bitcast i8* %add.ptr99 to %struct.sony_pic_irq*, !dbg !12036
  store %struct.sony_pic_irq* %60, %struct.sony_pic_irq** %tmp98, align 8, !dbg !12037
  %61 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp98, align 8, !dbg !12036
  store %struct.sony_pic_irq* %61, %struct.sony_pic_irq** %irq, align 8, !dbg !12039
  br label %for.cond100, !dbg !12039

for.cond100:                                      ; preds = %do.end133, %do.end97
  %62 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12040
  %list101 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %62, i32 0, i32 1, !dbg !12040
  %cmp102 = icmp eq %struct.list_head* %list101, getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 3), !dbg !12040
  %lnot104 = xor i1 %cmp102, true, !dbg !12040
  br i1 %lnot104, label %for.body105, label %for.end136, !dbg !12039

for.body105:                                      ; preds = %for.cond100
  %63 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12042
  %irq106 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %63, i32 0, i32 0, !dbg !12045
  %interrupts = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq106, i32 0, i32 6, !dbg !12046
  %arrayidx = getelementptr [1 x i8], [1 x i8]* %interrupts, i64 0, i64 0, !dbg !12042
  %64 = load i8, i8* %arrayidx, align 2, !dbg !12042
  %conv107 = zext i8 %64 to i32, !dbg !12042
  %call108 = call i32 @request_irq(i32 %conv107, i32 (i32, i8*)* @sony_pic_irq, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*)) #11, !dbg !12047
  %tobool109 = icmp ne i32 %call108, 0, !dbg !12047
  br i1 %tobool109, label %if.end127, label %if.then110, !dbg !12048

if.then110:                                       ; preds = %for.body105
  br label %do.body111, !dbg !12049

do.body111:                                       ; preds = %if.then110
  %65 = load i32, i32* @debug, align 4, !dbg !12051
  %tobool112 = icmp ne i32 %65, 0, !dbg !12051
  br i1 %tobool112, label %if.then113, label %if.end125, !dbg !12054

if.then113:                                       ; preds = %do.body111
  %66 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12051
  %irq114 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %66, i32 0, i32 0, !dbg !12051
  %interrupts115 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq114, i32 0, i32 6, !dbg !12051
  %arrayidx116 = getelementptr [1 x i8], [1 x i8]* %interrupts115, i64 0, i64 0, !dbg !12051
  %67 = load i8, i8* %arrayidx116, align 2, !dbg !12051
  %conv117 = zext i8 %67 to i32, !dbg !12051
  %68 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12051
  %irq118 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %68, i32 0, i32 0, !dbg !12051
  %triggering = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq118, i32 0, i32 1, !dbg !12051
  %69 = load i8, i8* %triggering, align 1, !dbg !12051
  %conv119 = zext i8 %69 to i32, !dbg !12051
  %70 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12051
  %irq120 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %70, i32 0, i32 0, !dbg !12051
  %polarity = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq120, i32 0, i32 2, !dbg !12051
  %71 = load i8, i8* %polarity, align 2, !dbg !12051
  %conv121 = zext i8 %71 to i32, !dbg !12051
  %72 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12051
  %irq122 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %72, i32 0, i32 0, !dbg !12051
  %shareable = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq122, i32 0, i32 3, !dbg !12051
  %73 = load i8, i8* %shareable, align 1, !dbg !12051
  %conv123 = zext i8 %73 to i32, !dbg !12051
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.158, i64 0, i64 0), i32 %conv117, i32 %conv119, i32 %conv121, i32 %conv123) #12, !dbg !12051
  br label %if.end125, !dbg !12051

if.end125:                                        ; preds = %if.then113, %do.body111
  br label %do.end126, !dbg !12054

do.end126:                                        ; preds = %if.end125
  %74 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12055
  store %struct.sony_pic_irq* %74, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12056
  br label %for.end136, !dbg !12057

if.end127:                                        ; preds = %for.body105
  br label %for.inc128, !dbg !12058

for.inc128:                                       ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i8** %__mptr129, metadata !12059, metadata !DIExpression()), !dbg !12061
  %75 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12061
  %list130 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %75, i32 0, i32 1, !dbg !12061
  %prev131 = getelementptr inbounds %struct.list_head, %struct.list_head* %list130, i32 0, i32 1, !dbg !12061
  %76 = load %struct.list_head*, %struct.list_head** %prev131, align 8, !dbg !12061
  %77 = bitcast %struct.list_head* %76 to i8*, !dbg !12061
  store i8* %77, i8** %__mptr129, align 8, !dbg !12061
  br label %do.body132, !dbg !12061

do.body132:                                       ; preds = %for.inc128
  br label %do.end133, !dbg !12062

do.end133:                                        ; preds = %do.body132
  %78 = load i8*, i8** %__mptr129, align 8, !dbg !12061
  %add.ptr135 = getelementptr i8, i8* %78, i64 -8, !dbg !12061
  %79 = bitcast i8* %add.ptr135 to %struct.sony_pic_irq*, !dbg !12061
  store %struct.sony_pic_irq* %79, %struct.sony_pic_irq** %tmp134, align 8, !dbg !12062
  %80 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp134, align 8, !dbg !12061
  store %struct.sony_pic_irq* %80, %struct.sony_pic_irq** %irq, align 8, !dbg !12040
  br label %for.cond100, !dbg !12040, !llvm.loop !12064

for.end136:                                       ; preds = %do.end126, %for.cond100
  %81 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12066
  %tobool137 = icmp ne %struct.sony_pic_irq* %81, null, !dbg !12068
  br i1 %tobool137, label %if.end140, label %if.then138, !dbg !12069

if.then138:                                       ; preds = %for.end136
  %call139 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.159, i64 0, i64 0)) #12, !dbg !12070
  store i32 -19, i32* %result, align 4, !dbg !12072
  br label %err_release_region, !dbg !12073

if.end140:                                        ; preds = %for.end136
  %82 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12074
  %83 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12075
  %84 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12076
  %call141 = call i32 @sony_pic_enable(%struct.acpi_device* %82, %struct.sony_pic_ioport* %83, %struct.sony_pic_irq* %84) #11, !dbg !12077
  store i32 %call141, i32* %result, align 4, !dbg !12078
  %85 = load i32, i32* %result, align 4, !dbg !12079
  %tobool142 = icmp ne i32 %85, 0, !dbg !12079
  br i1 %tobool142, label %if.then143, label %if.end145, !dbg !12081

if.then143:                                       ; preds = %if.end140
  %call144 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.160, i64 0, i64 0)) #12, !dbg !12082
  br label %err_free_irq, !dbg !12084

if.end145:                                        ; preds = %if.end140
  store i8 -1, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 11), align 1, !dbg !12085
  %call146 = call i32 @sony_pf_add() #11, !dbg !12086
  store i32 %call146, i32* %result, align 4, !dbg !12087
  %86 = load i32, i32* %result, align 4, !dbg !12088
  %tobool147 = icmp ne i32 %86, 0, !dbg !12088
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !12090

if.then148:                                       ; preds = %if.end145
  br label %err_disable_device, !dbg !12091

if.end149:                                        ; preds = %if.end145
  %87 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !12092
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %87, i32 0, i32 3, !dbg !12093
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 0, !dbg !12094
  %call150 = call i32 @sysfs_create_group(%struct.kobject* %kobj, %struct.attribute_group* @spic_attribute_group) #11, !dbg !12095
  store i32 %call150, i32* %result, align 4, !dbg !12096
  %88 = load i32, i32* %result, align 4, !dbg !12097
  %tobool151 = icmp ne i32 %88, 0, !dbg !12097
  br i1 %tobool151, label %if.then152, label %if.end153, !dbg !12099

if.then152:                                       ; preds = %if.end149
  br label %err_remove_pf, !dbg !12100

if.end153:                                        ; preds = %if.end149
  %call154 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.161, i64 0, i64 0)) #12, !dbg !12101
  store i32 0, i32* %retval, align 4, !dbg !12102
  br label %return, !dbg !12102

err_remove_pf:                                    ; preds = %if.then152
  call void @llvm.dbg.label(metadata !12103), !dbg !12104
  call void @sony_pf_remove() #11, !dbg !12105
  br label %err_disable_device, !dbg !12105

err_disable_device:                               ; preds = %err_remove_pf, %if.then148
  call void @llvm.dbg.label(metadata !12106), !dbg !12107
  %89 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12108
  %call155 = call i32 @sony_pic_disable(%struct.acpi_device* %89) #11, !dbg !12109
  br label %err_free_irq, !dbg !12109

err_free_irq:                                     ; preds = %err_disable_device, %if.then143
  call void @llvm.dbg.label(metadata !12110), !dbg !12111
  %90 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12112
  %irq156 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %90, i32 0, i32 0, !dbg !12113
  %interrupts157 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq156, i32 0, i32 6, !dbg !12114
  %arrayidx158 = getelementptr [1 x i8], [1 x i8]* %interrupts157, i64 0, i64 0, !dbg !12115
  %91 = load i8, i8* %arrayidx158, align 2, !dbg !12115
  %conv159 = zext i8 %91 to i32, !dbg !12115
  %call160 = call i8* @free_irq(i32 %conv159, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*)) #11, !dbg !12116
  br label %err_release_region, !dbg !12116

err_release_region:                               ; preds = %err_free_irq, %if.then138
  call void @llvm.dbg.label(metadata !12117), !dbg !12118
  %92 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12119
  %io1161 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %92, i32 0, i32 0, !dbg !12119
  %minimum162 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1161, i32 0, i32 3, !dbg !12119
  %93 = load i16, i16* %minimum162, align 1, !dbg !12119
  %conv163 = zext i16 %93 to i64, !dbg !12119
  %94 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12119
  %io1164 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %94, i32 0, i32 0, !dbg !12119
  %address_length165 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1164, i32 0, i32 2, !dbg !12119
  %95 = load i8, i8* %address_length165, align 2, !dbg !12119
  %conv166 = zext i8 %95 to i64, !dbg !12119
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv163, i64 %conv166) #11, !dbg !12119
  %96 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12120
  %io2167 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %96, i32 0, i32 1, !dbg !12122
  %minimum168 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2167, i32 0, i32 3, !dbg !12123
  %97 = load i16, i16* %minimum168, align 1, !dbg !12123
  %tobool169 = icmp ne i16 %97, 0, !dbg !12124
  br i1 %tobool169, label %if.then170, label %if.end177, !dbg !12125

if.then170:                                       ; preds = %err_release_region
  %98 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12126
  %io2171 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %98, i32 0, i32 1, !dbg !12126
  %minimum172 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2171, i32 0, i32 3, !dbg !12126
  %99 = load i16, i16* %minimum172, align 1, !dbg !12126
  %conv173 = zext i16 %99 to i64, !dbg !12126
  %100 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12126
  %io2174 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %100, i32 0, i32 1, !dbg !12126
  %address_length175 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2174, i32 0, i32 2, !dbg !12126
  %101 = load i8, i8* %address_length175, align 1, !dbg !12126
  %conv176 = zext i8 %101 to i64, !dbg !12126
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv173, i64 %conv176) #11, !dbg !12126
  br label %if.end177, !dbg !12126

if.end177:                                        ; preds = %if.then170, %err_release_region
  br label %err_remove_compat, !dbg !12123

err_remove_compat:                                ; preds = %if.end177, %if.then92
  call void @llvm.dbg.label(metadata !12127), !dbg !12128
  call void @sonypi_compat_exit() #11, !dbg !12129
  br label %err_remove_input, !dbg !12129

err_remove_input:                                 ; preds = %err_remove_compat, %if.then10
  call void @llvm.dbg.label(metadata !12130), !dbg !12131
  call void @sony_laptop_remove_input() #11, !dbg !12132
  br label %err_free_resources, !dbg !12132

err_free_resources:                               ; preds = %err_remove_input, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !12133), !dbg !12134
  call void @llvm.dbg.declare(metadata i8** %__mptr178, metadata !12135, metadata !DIExpression()), !dbg !12138
  %102 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 4, i32 0), align 8, !dbg !12138
  %103 = bitcast %struct.list_head* %102 to i8*, !dbg !12138
  store i8* %103, i8** %__mptr178, align 8, !dbg !12138
  br label %do.body179, !dbg !12138

do.body179:                                       ; preds = %err_free_resources
  br label %do.end180, !dbg !12139

do.end180:                                        ; preds = %do.body179
  %104 = load i8*, i8** %__mptr178, align 8, !dbg !12138
  %add.ptr182 = getelementptr i8, i8* %104, i64 -16, !dbg !12138
  %105 = bitcast i8* %add.ptr182 to %struct.sony_pic_ioport*, !dbg !12138
  store %struct.sony_pic_ioport* %105, %struct.sony_pic_ioport** %tmp181, align 8, !dbg !12139
  %106 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp181, align 8, !dbg !12138
  store %struct.sony_pic_ioport* %106, %struct.sony_pic_ioport** %io, align 8, !dbg !12141
  call void @llvm.dbg.declare(metadata i8** %__mptr183, metadata !12142, metadata !DIExpression()), !dbg !12144
  %107 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12144
  %list184 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %107, i32 0, i32 2, !dbg !12144
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list184, i32 0, i32 0, !dbg !12144
  %108 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12144
  %109 = bitcast %struct.list_head* %108 to i8*, !dbg !12144
  store i8* %109, i8** %__mptr183, align 8, !dbg !12144
  br label %do.body185, !dbg !12144

do.body185:                                       ; preds = %do.end180
  br label %do.end186, !dbg !12145

do.end186:                                        ; preds = %do.body185
  %110 = load i8*, i8** %__mptr183, align 8, !dbg !12144
  %add.ptr188 = getelementptr i8, i8* %110, i64 -16, !dbg !12144
  %111 = bitcast i8* %add.ptr188 to %struct.sony_pic_ioport*, !dbg !12144
  store %struct.sony_pic_ioport* %111, %struct.sony_pic_ioport** %tmp187, align 8, !dbg !12145
  %112 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp187, align 8, !dbg !12144
  store %struct.sony_pic_ioport* %112, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12141
  br label %for.cond189, !dbg !12141

for.cond189:                                      ; preds = %do.end201, %do.end186
  %113 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12147
  %list190 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %113, i32 0, i32 2, !dbg !12147
  %cmp191 = icmp eq %struct.list_head* %list190, getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 4), !dbg !12147
  %lnot193 = xor i1 %cmp191, true, !dbg !12147
  br i1 %lnot193, label %for.body194, label %for.end204, !dbg !12141

for.body194:                                      ; preds = %for.cond189
  %114 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12149
  %list195 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %114, i32 0, i32 2, !dbg !12151
  call void @list_del(%struct.list_head* %list195) #11, !dbg !12152
  %115 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12153
  %116 = bitcast %struct.sony_pic_ioport* %115 to i8*, !dbg !12153
  call void @kfree(i8* %116) #11, !dbg !12154
  br label %for.inc196, !dbg !12155

for.inc196:                                       ; preds = %for.body194
  %117 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12147
  store %struct.sony_pic_ioport* %117, %struct.sony_pic_ioport** %io, align 8, !dbg !12147
  call void @llvm.dbg.declare(metadata i8** %__mptr197, metadata !12156, metadata !DIExpression()), !dbg !12158
  %118 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12158
  %list198 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %118, i32 0, i32 2, !dbg !12158
  %next199 = getelementptr inbounds %struct.list_head, %struct.list_head* %list198, i32 0, i32 0, !dbg !12158
  %119 = load %struct.list_head*, %struct.list_head** %next199, align 8, !dbg !12158
  %120 = bitcast %struct.list_head* %119 to i8*, !dbg !12158
  store i8* %120, i8** %__mptr197, align 8, !dbg !12158
  br label %do.body200, !dbg !12158

do.body200:                                       ; preds = %for.inc196
  br label %do.end201, !dbg !12159

do.end201:                                        ; preds = %do.body200
  %121 = load i8*, i8** %__mptr197, align 8, !dbg !12158
  %add.ptr203 = getelementptr i8, i8* %121, i64 -16, !dbg !12158
  %122 = bitcast i8* %add.ptr203 to %struct.sony_pic_ioport*, !dbg !12158
  store %struct.sony_pic_ioport* %122, %struct.sony_pic_ioport** %tmp202, align 8, !dbg !12159
  %123 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp202, align 8, !dbg !12158
  store %struct.sony_pic_ioport* %123, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12147
  br label %for.cond189, !dbg !12147, !llvm.loop !12161

for.end204:                                       ; preds = %for.cond189
  call void @llvm.dbg.declare(metadata i8** %__mptr205, metadata !12163, metadata !DIExpression()), !dbg !12166
  %124 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 3, i32 0), align 8, !dbg !12166
  %125 = bitcast %struct.list_head* %124 to i8*, !dbg !12166
  store i8* %125, i8** %__mptr205, align 8, !dbg !12166
  br label %do.body206, !dbg !12166

do.body206:                                       ; preds = %for.end204
  br label %do.end207, !dbg !12167

do.end207:                                        ; preds = %do.body206
  %126 = load i8*, i8** %__mptr205, align 8, !dbg !12166
  %add.ptr209 = getelementptr i8, i8* %126, i64 -8, !dbg !12166
  %127 = bitcast i8* %add.ptr209 to %struct.sony_pic_irq*, !dbg !12166
  store %struct.sony_pic_irq* %127, %struct.sony_pic_irq** %tmp208, align 8, !dbg !12167
  %128 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp208, align 8, !dbg !12166
  store %struct.sony_pic_irq* %128, %struct.sony_pic_irq** %irq, align 8, !dbg !12169
  call void @llvm.dbg.declare(metadata i8** %__mptr210, metadata !12170, metadata !DIExpression()), !dbg !12172
  %129 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12172
  %list211 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %129, i32 0, i32 1, !dbg !12172
  %next212 = getelementptr inbounds %struct.list_head, %struct.list_head* %list211, i32 0, i32 0, !dbg !12172
  %130 = load %struct.list_head*, %struct.list_head** %next212, align 8, !dbg !12172
  %131 = bitcast %struct.list_head* %130 to i8*, !dbg !12172
  store i8* %131, i8** %__mptr210, align 8, !dbg !12172
  br label %do.body213, !dbg !12172

do.body213:                                       ; preds = %do.end207
  br label %do.end214, !dbg !12173

do.end214:                                        ; preds = %do.body213
  %132 = load i8*, i8** %__mptr210, align 8, !dbg !12172
  %add.ptr216 = getelementptr i8, i8* %132, i64 -8, !dbg !12172
  %133 = bitcast i8* %add.ptr216 to %struct.sony_pic_irq*, !dbg !12172
  store %struct.sony_pic_irq* %133, %struct.sony_pic_irq** %tmp215, align 8, !dbg !12173
  %134 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp215, align 8, !dbg !12172
  store %struct.sony_pic_irq* %134, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12169
  br label %for.cond217, !dbg !12169

for.cond217:                                      ; preds = %do.end229, %do.end214
  %135 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12175
  %list218 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %135, i32 0, i32 1, !dbg !12175
  %cmp219 = icmp eq %struct.list_head* %list218, getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 3), !dbg !12175
  %lnot221 = xor i1 %cmp219, true, !dbg !12175
  br i1 %lnot221, label %for.body222, label %for.end232, !dbg !12169

for.body222:                                      ; preds = %for.cond217
  %136 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12177
  %list223 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %136, i32 0, i32 1, !dbg !12179
  call void @list_del(%struct.list_head* %list223) #11, !dbg !12180
  %137 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12181
  %138 = bitcast %struct.sony_pic_irq* %137 to i8*, !dbg !12181
  call void @kfree(i8* %138) #11, !dbg !12182
  br label %for.inc224, !dbg !12183

for.inc224:                                       ; preds = %for.body222
  %139 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12175
  store %struct.sony_pic_irq* %139, %struct.sony_pic_irq** %irq, align 8, !dbg !12175
  call void @llvm.dbg.declare(metadata i8** %__mptr225, metadata !12184, metadata !DIExpression()), !dbg !12186
  %140 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12186
  %list226 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %140, i32 0, i32 1, !dbg !12186
  %next227 = getelementptr inbounds %struct.list_head, %struct.list_head* %list226, i32 0, i32 0, !dbg !12186
  %141 = load %struct.list_head*, %struct.list_head** %next227, align 8, !dbg !12186
  %142 = bitcast %struct.list_head* %141 to i8*, !dbg !12186
  store i8* %142, i8** %__mptr225, align 8, !dbg !12186
  br label %do.body228, !dbg !12186

do.body228:                                       ; preds = %for.inc224
  br label %do.end229, !dbg !12187

do.end229:                                        ; preds = %do.body228
  %143 = load i8*, i8** %__mptr225, align 8, !dbg !12186
  %add.ptr231 = getelementptr i8, i8* %143, i64 -8, !dbg !12186
  %144 = bitcast i8* %add.ptr231 to %struct.sony_pic_irq*, !dbg !12186
  store %struct.sony_pic_irq* %144, %struct.sony_pic_irq** %tmp230, align 8, !dbg !12187
  %145 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp230, align 8, !dbg !12186
  store %struct.sony_pic_irq* %145, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12175
  br label %for.cond217, !dbg !12175, !llvm.loop !12189

for.end232:                                       ; preds = %for.cond217
  store %struct.sony_pic_ioport* null, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12191
  store %struct.sony_pic_irq* null, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12192
  %146 = load i32, i32* %result, align 4, !dbg !12193
  store i32 %146, i32* %retval, align 4, !dbg !12194
  br label %return, !dbg !12194

return:                                           ; preds = %for.end232, %if.end153
  %147 = load i32, i32* %retval, align 4, !dbg !12195
  ret i32 %147, !dbg !12195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_remove(%struct.acpi_device* %device) #0 !dbg !12196 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %io = alloca %struct.sony_pic_ioport*, align 8
  %tmp_io = alloca %struct.sony_pic_ioport*, align 8
  %irq = alloca %struct.sony_pic_irq*, align 8
  %tmp_irq = alloca %struct.sony_pic_irq*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sony_pic_ioport*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp20 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr32 = alloca i8*, align 8
  %tmp35 = alloca %struct.sony_pic_irq*, align 8
  %__mptr37 = alloca i8*, align 8
  %tmp42 = alloca %struct.sony_pic_irq*, align 8
  %__mptr52 = alloca i8*, align 8
  %tmp57 = alloca %struct.sony_pic_irq*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !12197, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %io, metadata !12199, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %tmp_io, metadata !12201, metadata !DIExpression()), !dbg !12202
  call void @llvm.dbg.declare(metadata %struct.sony_pic_irq** %irq, metadata !12203, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.declare(metadata %struct.sony_pic_irq** %tmp_irq, metadata !12205, metadata !DIExpression()), !dbg !12206
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12207
  %call = call i32 @sony_pic_disable(%struct.acpi_device* %0) #11, !dbg !12209
  %tobool = icmp ne i32 %call, 0, !dbg !12209
  br i1 %tobool, label %if.then, label %if.end, !dbg !12210

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.184, i64 0, i64 0)) #12, !dbg !12211
  store i32 -6, i32* %retval, align 4, !dbg !12213
  br label %return, !dbg !12213

if.end:                                           ; preds = %entry
  %1 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12214
  %irq2 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %1, i32 0, i32 0, !dbg !12215
  %interrupts = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq2, i32 0, i32 6, !dbg !12216
  %arrayidx = getelementptr [1 x i8], [1 x i8]* %interrupts, i64 0, i64 0, !dbg !12217
  %2 = load i8, i8* %arrayidx, align 2, !dbg !12217
  %conv = zext i8 %2 to i32, !dbg !12217
  %call3 = call i8* @free_irq(i32 %conv, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*)) #11, !dbg !12218
  %3 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12219
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %3, i32 0, i32 0, !dbg !12219
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !12219
  %4 = load i16, i16* %minimum, align 1, !dbg !12219
  %conv4 = zext i16 %4 to i64, !dbg !12219
  %5 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12219
  %io15 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %5, i32 0, i32 0, !dbg !12219
  %address_length = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io15, i32 0, i32 2, !dbg !12219
  %6 = load i8, i8* %address_length, align 2, !dbg !12219
  %conv6 = zext i8 %6 to i64, !dbg !12219
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv4, i64 %conv6) #11, !dbg !12219
  %7 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12220
  %io2 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %7, i32 0, i32 1, !dbg !12222
  %minimum7 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2, i32 0, i32 3, !dbg !12223
  %8 = load i16, i16* %minimum7, align 1, !dbg !12223
  %tobool8 = icmp ne i16 %8, 0, !dbg !12224
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !12225

if.then9:                                         ; preds = %if.end
  %9 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12226
  %io210 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %9, i32 0, i32 1, !dbg !12226
  %minimum11 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io210, i32 0, i32 3, !dbg !12226
  %10 = load i16, i16* %minimum11, align 1, !dbg !12226
  %conv12 = zext i16 %10 to i64, !dbg !12226
  %11 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12226
  %io213 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %11, i32 0, i32 1, !dbg !12226
  %address_length14 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io213, i32 0, i32 2, !dbg !12226
  %12 = load i8, i8* %address_length14, align 1, !dbg !12226
  %conv15 = zext i8 %12 to i64, !dbg !12226
  call void @__release_region(%struct.resource* @ioport_resource, i64 %conv12, i64 %conv15) #11, !dbg !12226
  br label %if.end16, !dbg !12226

if.end16:                                         ; preds = %if.then9, %if.end
  call void @sonypi_compat_exit() #11, !dbg !12227
  call void @sony_laptop_remove_input() #11, !dbg !12228
  %13 = load %struct.platform_device*, %struct.platform_device** @sony_pf_device, align 8, !dbg !12229
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 3, !dbg !12230
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 0, !dbg !12231
  call void @sysfs_remove_group(%struct.kobject* %kobj, %struct.attribute_group* @spic_attribute_group) #11, !dbg !12232
  call void @sony_pf_remove() #11, !dbg !12233
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12234, metadata !DIExpression()), !dbg !12237
  %14 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 4, i32 0), align 8, !dbg !12237
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !12237
  store i8* %15, i8** %__mptr, align 8, !dbg !12237
  br label %do.body, !dbg !12237

do.body:                                          ; preds = %if.end16
  br label %do.end, !dbg !12238

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !12237
  %add.ptr = getelementptr i8, i8* %16, i64 -16, !dbg !12237
  %17 = bitcast i8* %add.ptr to %struct.sony_pic_ioport*, !dbg !12237
  store %struct.sony_pic_ioport* %17, %struct.sony_pic_ioport** %tmp, align 8, !dbg !12238
  %18 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp, align 8, !dbg !12237
  store %struct.sony_pic_ioport* %18, %struct.sony_pic_ioport** %io, align 8, !dbg !12240
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !12241, metadata !DIExpression()), !dbg !12243
  %19 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12243
  %list = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %19, i32 0, i32 2, !dbg !12243
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !12243
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12243
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !12243
  store i8* %21, i8** %__mptr17, align 8, !dbg !12243
  br label %do.body18, !dbg !12243

do.body18:                                        ; preds = %do.end
  br label %do.end19, !dbg !12244

do.end19:                                         ; preds = %do.body18
  %22 = load i8*, i8** %__mptr17, align 8, !dbg !12243
  %add.ptr21 = getelementptr i8, i8* %22, i64 -16, !dbg !12243
  %23 = bitcast i8* %add.ptr21 to %struct.sony_pic_ioport*, !dbg !12243
  store %struct.sony_pic_ioport* %23, %struct.sony_pic_ioport** %tmp20, align 8, !dbg !12244
  %24 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp20, align 8, !dbg !12243
  store %struct.sony_pic_ioport* %24, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12240
  br label %for.cond, !dbg !12240

for.cond:                                         ; preds = %do.end29, %do.end19
  %25 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12246
  %list22 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %25, i32 0, i32 2, !dbg !12246
  %cmp = icmp eq %struct.list_head* %list22, getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 4), !dbg !12246
  %lnot = xor i1 %cmp, true, !dbg !12246
  br i1 %lnot, label %for.body, label %for.end, !dbg !12240

for.body:                                         ; preds = %for.cond
  %26 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12248
  %list24 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %26, i32 0, i32 2, !dbg !12250
  call void @list_del(%struct.list_head* %list24) #11, !dbg !12251
  %27 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %io, align 8, !dbg !12252
  %28 = bitcast %struct.sony_pic_ioport* %27 to i8*, !dbg !12252
  call void @kfree(i8* %28) #11, !dbg !12253
  br label %for.inc, !dbg !12254

for.inc:                                          ; preds = %for.body
  %29 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12246
  store %struct.sony_pic_ioport* %29, %struct.sony_pic_ioport** %io, align 8, !dbg !12246
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !12255, metadata !DIExpression()), !dbg !12257
  %30 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12257
  %list26 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %30, i32 0, i32 2, !dbg !12257
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26, i32 0, i32 0, !dbg !12257
  %31 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !12257
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !12257
  store i8* %32, i8** %__mptr25, align 8, !dbg !12257
  br label %do.body28, !dbg !12257

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !12258

do.end29:                                         ; preds = %do.body28
  %33 = load i8*, i8** %__mptr25, align 8, !dbg !12257
  %add.ptr31 = getelementptr i8, i8* %33, i64 -16, !dbg !12257
  %34 = bitcast i8* %add.ptr31 to %struct.sony_pic_ioport*, !dbg !12257
  store %struct.sony_pic_ioport* %34, %struct.sony_pic_ioport** %tmp30, align 8, !dbg !12258
  %35 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp30, align 8, !dbg !12257
  store %struct.sony_pic_ioport* %35, %struct.sony_pic_ioport** %tmp_io, align 8, !dbg !12246
  br label %for.cond, !dbg !12246, !llvm.loop !12260

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr32, metadata !12262, metadata !DIExpression()), !dbg !12265
  %36 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 3, i32 0), align 8, !dbg !12265
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !12265
  store i8* %37, i8** %__mptr32, align 8, !dbg !12265
  br label %do.body33, !dbg !12265

do.body33:                                        ; preds = %for.end
  br label %do.end34, !dbg !12266

do.end34:                                         ; preds = %do.body33
  %38 = load i8*, i8** %__mptr32, align 8, !dbg !12265
  %add.ptr36 = getelementptr i8, i8* %38, i64 -8, !dbg !12265
  %39 = bitcast i8* %add.ptr36 to %struct.sony_pic_irq*, !dbg !12265
  store %struct.sony_pic_irq* %39, %struct.sony_pic_irq** %tmp35, align 8, !dbg !12266
  %40 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp35, align 8, !dbg !12265
  store %struct.sony_pic_irq* %40, %struct.sony_pic_irq** %irq, align 8, !dbg !12268
  call void @llvm.dbg.declare(metadata i8** %__mptr37, metadata !12269, metadata !DIExpression()), !dbg !12271
  %41 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12271
  %list38 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %41, i32 0, i32 1, !dbg !12271
  %next39 = getelementptr inbounds %struct.list_head, %struct.list_head* %list38, i32 0, i32 0, !dbg !12271
  %42 = load %struct.list_head*, %struct.list_head** %next39, align 8, !dbg !12271
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !12271
  store i8* %43, i8** %__mptr37, align 8, !dbg !12271
  br label %do.body40, !dbg !12271

do.body40:                                        ; preds = %do.end34
  br label %do.end41, !dbg !12272

do.end41:                                         ; preds = %do.body40
  %44 = load i8*, i8** %__mptr37, align 8, !dbg !12271
  %add.ptr43 = getelementptr i8, i8* %44, i64 -8, !dbg !12271
  %45 = bitcast i8* %add.ptr43 to %struct.sony_pic_irq*, !dbg !12271
  store %struct.sony_pic_irq* %45, %struct.sony_pic_irq** %tmp42, align 8, !dbg !12272
  %46 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp42, align 8, !dbg !12271
  store %struct.sony_pic_irq* %46, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12268
  br label %for.cond44, !dbg !12268

for.cond44:                                       ; preds = %do.end56, %do.end41
  %47 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12274
  %list45 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %47, i32 0, i32 1, !dbg !12274
  %cmp46 = icmp eq %struct.list_head* %list45, getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 3), !dbg !12274
  %lnot48 = xor i1 %cmp46, true, !dbg !12274
  br i1 %lnot48, label %for.body49, label %for.end59, !dbg !12268

for.body49:                                       ; preds = %for.cond44
  %48 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12276
  %list50 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %48, i32 0, i32 1, !dbg !12278
  call void @list_del(%struct.list_head* %list50) #11, !dbg !12279
  %49 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq, align 8, !dbg !12280
  %50 = bitcast %struct.sony_pic_irq* %49 to i8*, !dbg !12280
  call void @kfree(i8* %50) #11, !dbg !12281
  br label %for.inc51, !dbg !12282

for.inc51:                                        ; preds = %for.body49
  %51 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12274
  store %struct.sony_pic_irq* %51, %struct.sony_pic_irq** %irq, align 8, !dbg !12274
  call void @llvm.dbg.declare(metadata i8** %__mptr52, metadata !12283, metadata !DIExpression()), !dbg !12285
  %52 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12285
  %list53 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %52, i32 0, i32 1, !dbg !12285
  %next54 = getelementptr inbounds %struct.list_head, %struct.list_head* %list53, i32 0, i32 0, !dbg !12285
  %53 = load %struct.list_head*, %struct.list_head** %next54, align 8, !dbg !12285
  %54 = bitcast %struct.list_head* %53 to i8*, !dbg !12285
  store i8* %54, i8** %__mptr52, align 8, !dbg !12285
  br label %do.body55, !dbg !12285

do.body55:                                        ; preds = %for.inc51
  br label %do.end56, !dbg !12286

do.end56:                                         ; preds = %do.body55
  %55 = load i8*, i8** %__mptr52, align 8, !dbg !12285
  %add.ptr58 = getelementptr i8, i8* %55, i64 -8, !dbg !12285
  %56 = bitcast i8* %add.ptr58 to %struct.sony_pic_irq*, !dbg !12285
  store %struct.sony_pic_irq* %56, %struct.sony_pic_irq** %tmp57, align 8, !dbg !12286
  %57 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %tmp57, align 8, !dbg !12285
  store %struct.sony_pic_irq* %57, %struct.sony_pic_irq** %tmp_irq, align 8, !dbg !12274
  br label %for.cond44, !dbg !12274, !llvm.loop !12288

for.end59:                                        ; preds = %for.cond44
  store %struct.sony_pic_ioport* null, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !12290
  store %struct.sony_pic_irq* null, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !12291
  br label %do.body60, !dbg !12292

do.body60:                                        ; preds = %for.end59
  %58 = load i32, i32* @debug, align 4, !dbg !12293
  %tobool61 = icmp ne i32 %58, 0, !dbg !12293
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !12296

if.then62:                                        ; preds = %do.body60
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.185, i64 0, i64 0)) #12, !dbg !12293
  br label %if.end64, !dbg !12293

if.end64:                                         ; preds = %if.then62, %do.body60
  br label %do.end65, !dbg !12296

do.end65:                                         ; preds = %if.end64
  store i32 0, i32* %retval, align 4, !dbg !12297
  br label %return, !dbg !12297

return:                                           ; preds = %do.end65, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !12298
  ret i32 %59, !dbg !12298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sony_pic_detect_device_type(%struct.sony_pic_dev* %dev) #0 !dbg !12299 {
entry:
  %dev.addr = alloca %struct.sony_pic_dev*, align 8
  %pcidev = alloca %struct.pci_dev*, align 8
  store %struct.sony_pic_dev* %dev, %struct.sony_pic_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sony_pic_dev** %dev.addr, metadata !12302, metadata !DIExpression()), !dbg !12303
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pcidev, metadata !12304, metadata !DIExpression()), !dbg !12564
  %call = call %struct.pci_dev* @pci_get_device(i32 32902, i32 28947, %struct.pci_dev* null) #11, !dbg !12565
  store %struct.pci_dev* %call, %struct.pci_dev** %pcidev, align 8, !dbg !12566
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !12567
  %tobool = icmp ne %struct.pci_dev* %0, null, !dbg !12567
  br i1 %tobool, label %if.then, label %if.end, !dbg !12569

if.then:                                          ; preds = %entry
  %1 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12570
  %model = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %1, i32 0, i32 8, !dbg !12572
  store i32 1, i32* %model, align 8, !dbg !12573
  %2 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12574
  %evport_offset = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %2, i32 0, i32 9, !dbg !12575
  store i16 4, i16* %evport_offset, align 4, !dbg !12576
  %3 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12577
  %event_types = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %3, i32 0, i32 6, !dbg !12578
  store %struct.sonypi_eventtypes* getelementptr inbounds ([11 x %struct.sonypi_eventtypes], [11 x %struct.sonypi_eventtypes]* @type1_events, i64 0, i64 0), %struct.sonypi_eventtypes** %event_types, align 8, !dbg !12579
  br label %out, !dbg !12580

if.end:                                           ; preds = %entry
  %call1 = call %struct.pci_dev* @pci_get_device(i32 32902, i32 9793, %struct.pci_dev* null) #11, !dbg !12581
  store %struct.pci_dev* %call1, %struct.pci_dev** %pcidev, align 8, !dbg !12582
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !12583
  %tobool2 = icmp ne %struct.pci_dev* %4, null, !dbg !12583
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !12585

if.then3:                                         ; preds = %if.end
  %5 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12586
  %model4 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %5, i32 0, i32 8, !dbg !12588
  store i32 2, i32* %model4, align 8, !dbg !12589
  %6 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12590
  %evport_offset5 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %6, i32 0, i32 9, !dbg !12591
  store i16 18, i16* %evport_offset5, align 4, !dbg !12592
  %7 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12593
  %event_types6 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %7, i32 0, i32 6, !dbg !12594
  store %struct.sonypi_eventtypes* getelementptr inbounds ([15 x %struct.sonypi_eventtypes], [15 x %struct.sonypi_eventtypes]* @type2_events, i64 0, i64 0), %struct.sonypi_eventtypes** %event_types6, align 8, !dbg !12595
  br label %out, !dbg !12596

if.end7:                                          ; preds = %if.end
  %call8 = call %struct.pci_dev* @pci_get_device(i32 32902, i32 10169, %struct.pci_dev* null) #11, !dbg !12597
  store %struct.pci_dev* %call8, %struct.pci_dev** %pcidev, align 8, !dbg !12598
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !12599
  %tobool9 = icmp ne %struct.pci_dev* %8, null, !dbg !12599
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !12601

if.then10:                                        ; preds = %if.end7
  %9 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12602
  %model11 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %9, i32 0, i32 8, !dbg !12604
  store i32 4, i32* %model11, align 8, !dbg !12605
  %10 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12606
  %handle_irq = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %10, i32 0, i32 7, !dbg !12607
  store i32 (i8, i8)* @type3_handle_irq, i32 (i8, i8)** %handle_irq, align 8, !dbg !12608
  %11 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12609
  %evport_offset12 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %11, i32 0, i32 9, !dbg !12610
  store i16 18, i16* %evport_offset12, align 4, !dbg !12611
  %12 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12612
  %event_types13 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %12, i32 0, i32 6, !dbg !12613
  store %struct.sonypi_eventtypes* getelementptr inbounds ([12 x %struct.sonypi_eventtypes], [12 x %struct.sonypi_eventtypes]* @type3_events, i64 0, i64 0), %struct.sonypi_eventtypes** %event_types13, align 8, !dbg !12614
  br label %out, !dbg !12615

if.end14:                                         ; preds = %if.end7
  %call15 = call %struct.pci_dev* @pci_get_device(i32 32902, i32 10261, %struct.pci_dev* null) #11, !dbg !12616
  store %struct.pci_dev* %call15, %struct.pci_dev** %pcidev, align 8, !dbg !12617
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !12618
  %tobool16 = icmp ne %struct.pci_dev* %13, null, !dbg !12618
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !12620

if.then17:                                        ; preds = %if.end14
  %14 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12621
  %model18 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %14, i32 0, i32 8, !dbg !12623
  store i32 4, i32* %model18, align 8, !dbg !12624
  %15 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12625
  %handle_irq19 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %15, i32 0, i32 7, !dbg !12626
  store i32 (i8, i8)* @type3_handle_irq, i32 (i8, i8)** %handle_irq19, align 8, !dbg !12627
  %16 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12628
  %evport_offset20 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %16, i32 0, i32 9, !dbg !12629
  store i16 18, i16* %evport_offset20, align 4, !dbg !12630
  %17 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12631
  %event_types21 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %17, i32 0, i32 6, !dbg !12632
  store %struct.sonypi_eventtypes* getelementptr inbounds ([12 x %struct.sonypi_eventtypes], [12 x %struct.sonypi_eventtypes]* @type3_events, i64 0, i64 0), %struct.sonypi_eventtypes** %event_types21, align 8, !dbg !12633
  br label %out, !dbg !12634

if.end22:                                         ; preds = %if.end14
  %call23 = call %struct.pci_dev* @pci_get_device(i32 32902, i32 10519, %struct.pci_dev* null) #11, !dbg !12635
  store %struct.pci_dev* %call23, %struct.pci_dev** %pcidev, align 8, !dbg !12636
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !12637
  %tobool24 = icmp ne %struct.pci_dev* %18, null, !dbg !12637
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !12639

if.then25:                                        ; preds = %if.end22
  %19 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12640
  %model26 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %19, i32 0, i32 8, !dbg !12642
  store i32 4, i32* %model26, align 8, !dbg !12643
  %20 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12644
  %handle_irq27 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %20, i32 0, i32 7, !dbg !12645
  store i32 (i8, i8)* @type3_handle_irq, i32 (i8, i8)** %handle_irq27, align 8, !dbg !12646
  %21 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12647
  %evport_offset28 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %21, i32 0, i32 9, !dbg !12648
  store i16 18, i16* %evport_offset28, align 4, !dbg !12649
  %22 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12650
  %event_types29 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %22, i32 0, i32 6, !dbg !12651
  store %struct.sonypi_eventtypes* getelementptr inbounds ([12 x %struct.sonypi_eventtypes], [12 x %struct.sonypi_eventtypes]* @type3_events, i64 0, i64 0), %struct.sonypi_eventtypes** %event_types29, align 8, !dbg !12652
  br label %out, !dbg !12653

if.end30:                                         ; preds = %if.end22
  %23 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12654
  %model31 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %23, i32 0, i32 8, !dbg !12655
  store i32 2, i32* %model31, align 8, !dbg !12656
  %24 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12657
  %evport_offset32 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %24, i32 0, i32 9, !dbg !12658
  store i16 18, i16* %evport_offset32, align 4, !dbg !12659
  %25 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12660
  %event_types33 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %25, i32 0, i32 6, !dbg !12661
  store %struct.sonypi_eventtypes* getelementptr inbounds ([15 x %struct.sonypi_eventtypes], [15 x %struct.sonypi_eventtypes]* @type2_events, i64 0, i64 0), %struct.sonypi_eventtypes** %event_types33, align 8, !dbg !12662
  br label %out, !dbg !12660

out:                                              ; preds = %if.end30, %if.then25, %if.then17, %if.then10, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !12663), !dbg !12664
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !12665
  call void @pci_dev_put(%struct.pci_dev* %26) #11, !dbg !12666
  %27 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12667
  %model34 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %27, i32 0, i32 8, !dbg !12667
  %28 = load i32, i32* %model34, align 8, !dbg !12667
  %cmp = icmp eq i32 %28, 1, !dbg !12667
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12667

cond.true:                                        ; preds = %out
  br label %cond.end, !dbg !12667

cond.false:                                       ; preds = %out
  %29 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev.addr, align 8, !dbg !12667
  %model35 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %29, i32 0, i32 8, !dbg !12667
  %30 = load i32, i32* %model35, align 8, !dbg !12667
  %cmp36 = icmp eq i32 %30, 2, !dbg !12667
  %31 = zext i1 %cmp36 to i64, !dbg !12667
  %cond = select i1 %cmp36, i32 2, i32 3, !dbg !12667
  br label %cond.end, !dbg !12667

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond37 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ], !dbg !12667
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.162, i64 0, i64 0), i32 %cond37) #12, !dbg !12667
  ret void, !dbg !12668
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_possible_resources(%struct.acpi_device* %device) #0 !dbg !12669 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %result = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !12670, metadata !DIExpression()), !dbg !12671
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12672, metadata !DIExpression()), !dbg !12673
  store i32 0, i32* %result, align 4, !dbg !12673
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12674, metadata !DIExpression()), !dbg !12675
  store i32 0, i32* %status, align 4, !dbg !12675
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12676
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !12676
  br i1 %tobool, label %if.end, label %if.then, !dbg !12678

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12679
  br label %return, !dbg !12679

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !12680

do.body:                                          ; preds = %if.end
  %1 = load i32, i32* @debug, align 4, !dbg !12681
  %tobool1 = icmp ne i32 %1, 0, !dbg !12681
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12684

if.then2:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.163, i64 0, i64 0)) #12, !dbg !12681
  br label %if.end3, !dbg !12681

if.end3:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !12684

do.end:                                           ; preds = %if.end3
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12685
  %call4 = call i32 @acpi_bus_get_status(%struct.acpi_device* %2) #11, !dbg !12686
  store i32 %call4, i32* %result, align 4, !dbg !12687
  %3 = load i32, i32* %result, align 4, !dbg !12688
  %tobool5 = icmp ne i32 %3, 0, !dbg !12688
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !12690

if.then6:                                         ; preds = %do.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.164, i64 0, i64 0)) #12, !dbg !12691
  br label %end, !dbg !12693

if.end8:                                          ; preds = %do.end
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12694
  %status9 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 8, !dbg !12696
  %5 = bitcast %struct.acpi_device_status* %status9 to i32*, !dbg !12697
  %bf.load = load i32, i32* %5, align 8, !dbg !12697
  %bf.lshr = lshr i32 %bf.load, 1, !dbg !12697
  %bf.clear = and i32 %bf.lshr, 1, !dbg !12697
  %tobool10 = icmp ne i32 %bf.clear, 0, !dbg !12694
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !12698

if.then11:                                        ; preds = %if.end8
  br label %do.body12, !dbg !12699

do.body12:                                        ; preds = %if.then11
  %6 = load i32, i32* @debug, align 4, !dbg !12700
  %tobool13 = icmp ne i32 %6, 0, !dbg !12700
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !12703

if.then14:                                        ; preds = %do.body12
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.165, i64 0, i64 0)) #12, !dbg !12700
  br label %if.end16, !dbg !12700

if.end16:                                         ; preds = %if.then14, %do.body12
  br label %do.end17, !dbg !12703

do.end17:                                         ; preds = %if.end16
  br label %if.end24, !dbg !12703

if.else:                                          ; preds = %if.end8
  br label %do.body18, !dbg !12704

do.body18:                                        ; preds = %if.else
  %7 = load i32, i32* @debug, align 4, !dbg !12705
  %tobool19 = icmp ne i32 %7, 0, !dbg !12705
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !12708

if.then20:                                        ; preds = %do.body18
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.166, i64 0, i64 0)) #12, !dbg !12705
  br label %if.end22, !dbg !12705

if.end22:                                         ; preds = %if.then20, %do.body18
  br label %do.end23, !dbg !12708

do.end23:                                         ; preds = %if.end22
  br label %if.end24

if.end24:                                         ; preds = %do.end23, %do.end17
  br label %do.body25, !dbg !12709

do.body25:                                        ; preds = %if.end24
  %8 = load i32, i32* @debug, align 4, !dbg !12710
  %tobool26 = icmp ne i32 %8, 0, !dbg !12710
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !12713

if.then27:                                        ; preds = %do.body25
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0)) #12, !dbg !12710
  br label %if.end29, !dbg !12710

if.end29:                                         ; preds = %if.then27, %do.body25
  br label %do.end30, !dbg !12713

do.end30:                                         ; preds = %if.end29
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !12714
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 1, !dbg !12715
  %10 = load i8*, i8** %handle, align 8, !dbg !12715
  %call31 = call i32 @acpi_walk_resources(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0), i32 (%struct.acpi_resource*, i8*)* @sony_pic_read_possible_resource, i8* bitcast (%struct.sony_pic_dev* @spic_dev to i8*)) #11, !dbg !12716
  store i32 %call31, i32* %status, align 4, !dbg !12717
  %11 = load i32, i32* %status, align 4, !dbg !12718
  %tobool32 = icmp ne i32 %11, 0, !dbg !12718
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !12720

if.then33:                                        ; preds = %do.end30
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.168, i64 0, i64 0)) #12, !dbg !12721
  store i32 -19, i32* %result, align 4, !dbg !12723
  br label %if.end35, !dbg !12724

if.end35:                                         ; preds = %if.then33, %do.end30
  br label %end, !dbg !12718

end:                                              ; preds = %if.end35, %if.then6
  call void @llvm.dbg.label(metadata !12725), !dbg !12726
  %12 = load i32, i32* %result, align 4, !dbg !12727
  store i32 %12, i32* %retval, align 4, !dbg !12728
  br label %return, !dbg !12728

return:                                           ; preds = %end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !12729
  ret i32 %13, !dbg !12729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sonypi_compat_init() #0 !dbg !12730 {
entry:
  ret i32 0, !dbg !12731
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !12732 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12741, metadata !DIExpression()), !dbg !12742
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !12743, metadata !DIExpression()), !dbg !12744
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !12745, metadata !DIExpression()), !dbg !12746
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12747, metadata !DIExpression()), !dbg !12748
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !12749, metadata !DIExpression()), !dbg !12750
  %0 = load i32, i32* %irq.addr, align 4, !dbg !12751
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !12752
  %2 = load i64, i64* %flags.addr, align 8, !dbg !12753
  %3 = load i8*, i8** %name.addr, align 8, !dbg !12754
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !12755
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !12756
  ret i32 %call, !dbg !12757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_irq(i32 %irq, i8* %dev_id) #0 !dbg !12758 {
entry:
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ev = alloca i8, align 1
  %data_mask = alloca i8, align 1
  %device_event = alloca i8, align 1
  %dev = alloca %struct.sony_pic_dev*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12759, metadata !DIExpression()), !dbg !12760
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !12761, metadata !DIExpression()), !dbg !12762
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12763, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12765, metadata !DIExpression()), !dbg !12766
  call void @llvm.dbg.declare(metadata i8* %ev, metadata !12767, metadata !DIExpression()), !dbg !12768
  store i8 0, i8* %ev, align 1, !dbg !12768
  call void @llvm.dbg.declare(metadata i8* %data_mask, metadata !12769, metadata !DIExpression()), !dbg !12770
  store i8 0, i8* %data_mask, align 1, !dbg !12770
  call void @llvm.dbg.declare(metadata i8* %device_event, metadata !12771, metadata !DIExpression()), !dbg !12772
  store i8 0, i8* %device_event, align 1, !dbg !12772
  call void @llvm.dbg.declare(metadata %struct.sony_pic_dev** %dev, metadata !12773, metadata !DIExpression()), !dbg !12774
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !12775
  %1 = bitcast i8* %0 to %struct.sony_pic_dev*, !dbg !12776
  store %struct.sony_pic_dev* %1, %struct.sony_pic_dev** %dev, align 8, !dbg !12774
  %2 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12777
  %cur_ioport = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %2, i32 0, i32 2, !dbg !12778
  %3 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %cur_ioport, align 8, !dbg !12778
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %3, i32 0, i32 0, !dbg !12779
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !12780
  %4 = load i16, i16* %minimum, align 1, !dbg !12780
  %conv = zext i16 %4 to i32, !dbg !12777
  %call = call zeroext i8 @inb_p(i32 %conv) #11, !dbg !12781
  store i8 %call, i8* %ev, align 1, !dbg !12782
  %5 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12783
  %cur_ioport1 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %5, i32 0, i32 2, !dbg !12785
  %6 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %cur_ioport1, align 8, !dbg !12785
  %io2 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %6, i32 0, i32 1, !dbg !12786
  %minimum2 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2, i32 0, i32 3, !dbg !12787
  %7 = load i16, i16* %minimum2, align 1, !dbg !12787
  %tobool = icmp ne i16 %7, 0, !dbg !12783
  br i1 %tobool, label %if.then, label %if.else, !dbg !12788

if.then:                                          ; preds = %entry
  %8 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12789
  %cur_ioport3 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %8, i32 0, i32 2, !dbg !12790
  %9 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %cur_ioport3, align 8, !dbg !12790
  %io24 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %9, i32 0, i32 1, !dbg !12791
  %minimum5 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io24, i32 0, i32 3, !dbg !12792
  %10 = load i16, i16* %minimum5, align 1, !dbg !12792
  %conv6 = zext i16 %10 to i32, !dbg !12789
  %call7 = call zeroext i8 @inb_p(i32 %conv6) #11, !dbg !12793
  store i8 %call7, i8* %data_mask, align 1, !dbg !12794
  br label %if.end, !dbg !12795

if.else:                                          ; preds = %entry
  %11 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12796
  %cur_ioport8 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %11, i32 0, i32 2, !dbg !12797
  %12 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %cur_ioport8, align 8, !dbg !12797
  %io19 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %12, i32 0, i32 0, !dbg !12798
  %minimum10 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io19, i32 0, i32 3, !dbg !12799
  %13 = load i16, i16* %minimum10, align 1, !dbg !12799
  %conv11 = zext i16 %13 to i32, !dbg !12796
  %14 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12800
  %evport_offset = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %14, i32 0, i32 9, !dbg !12801
  %15 = load i16, i16* %evport_offset, align 4, !dbg !12801
  %conv12 = zext i16 %15 to i32, !dbg !12800
  %add = add i32 %conv11, %conv12, !dbg !12802
  %call13 = call zeroext i8 @inb_p(i32 %add) #11, !dbg !12803
  store i8 %call13, i8* %data_mask, align 1, !dbg !12804
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !12805

do.body:                                          ; preds = %if.end
  %16 = load i32, i32* @debug, align 4, !dbg !12806
  %tobool14 = icmp ne i32 %16, 0, !dbg !12806
  br i1 %tobool14, label %if.then15, label %if.end25, !dbg !12809

if.then15:                                        ; preds = %do.body
  %17 = load i8, i8* %ev, align 1, !dbg !12806
  %conv16 = zext i8 %17 to i32, !dbg !12806
  %18 = load i8, i8* %data_mask, align 1, !dbg !12806
  %conv17 = zext i8 %18 to i32, !dbg !12806
  %19 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12806
  %cur_ioport18 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %19, i32 0, i32 2, !dbg !12806
  %20 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %cur_ioport18, align 8, !dbg !12806
  %io119 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %20, i32 0, i32 0, !dbg !12806
  %minimum20 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io119, i32 0, i32 3, !dbg !12806
  %21 = load i16, i16* %minimum20, align 1, !dbg !12806
  %conv21 = zext i16 %21 to i32, !dbg !12806
  %22 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12806
  %evport_offset22 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %22, i32 0, i32 9, !dbg !12806
  %23 = load i16, i16* %evport_offset22, align 4, !dbg !12806
  %conv23 = zext i16 %23 to i32, !dbg !12806
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.177, i64 0, i64 0), i32 %conv16, i32 %conv17, i32 %conv21, i32 %conv23) #12, !dbg !12806
  br label %if.end25, !dbg !12806

if.end25:                                         ; preds = %if.then15, %do.body
  br label %do.end, !dbg !12809

do.end:                                           ; preds = %if.end25
  %24 = load i8, i8* %ev, align 1, !dbg !12810
  %conv26 = zext i8 %24 to i32, !dbg !12810
  %cmp = icmp eq i32 %conv26, 0, !dbg !12812
  br i1 %cmp, label %if.then31, label %lor.lhs.false, !dbg !12813

lor.lhs.false:                                    ; preds = %do.end
  %25 = load i8, i8* %ev, align 1, !dbg !12814
  %conv28 = zext i8 %25 to i32, !dbg !12814
  %cmp29 = icmp eq i32 %conv28, 255, !dbg !12815
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !12816

if.then31:                                        ; preds = %lor.lhs.false, %do.end
  store i32 1, i32* %retval, align 4, !dbg !12817
  br label %return, !dbg !12817

if.end32:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !12818
  br label %for.cond, !dbg !12820

for.cond:                                         ; preds = %for.inc87, %if.end32
  %26 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12821
  %event_types = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %26, i32 0, i32 6, !dbg !12823
  %27 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types, align 8, !dbg !12823
  %28 = load i32, i32* %i, align 4, !dbg !12824
  %idxprom = sext i32 %28 to i64, !dbg !12821
  %arrayidx = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %27, i64 %idxprom, !dbg !12821
  %mask = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx, i32 0, i32 1, !dbg !12825
  %29 = load i64, i64* %mask, align 8, !dbg !12825
  %tobool33 = icmp ne i64 %29, 0, !dbg !12826
  br i1 %tobool33, label %for.body, label %for.end89, !dbg !12826

for.body:                                         ; preds = %for.cond
  %30 = load i8, i8* %data_mask, align 1, !dbg !12827
  %conv34 = zext i8 %30 to i32, !dbg !12827
  %31 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12830
  %event_types35 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %31, i32 0, i32 6, !dbg !12831
  %32 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types35, align 8, !dbg !12831
  %33 = load i32, i32* %i, align 4, !dbg !12832
  %idxprom36 = sext i32 %33 to i64, !dbg !12830
  %arrayidx37 = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %32, i64 %idxprom36, !dbg !12830
  %data = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx37, i32 0, i32 0, !dbg !12833
  %34 = load i8, i8* %data, align 8, !dbg !12833
  %conv38 = zext i8 %34 to i32, !dbg !12830
  %and = and i32 %conv34, %conv38, !dbg !12834
  %35 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12835
  %event_types39 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %35, i32 0, i32 6, !dbg !12836
  %36 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types39, align 8, !dbg !12836
  %37 = load i32, i32* %i, align 4, !dbg !12837
  %idxprom40 = sext i32 %37 to i64, !dbg !12835
  %arrayidx41 = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %36, i64 %idxprom40, !dbg !12835
  %data42 = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx41, i32 0, i32 0, !dbg !12838
  %38 = load i8, i8* %data42, align 8, !dbg !12838
  %conv43 = zext i8 %38 to i32, !dbg !12835
  %cmp44 = icmp ne i32 %and, %conv43, !dbg !12839
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12840

if.then46:                                        ; preds = %for.body
  br label %for.inc87, !dbg !12841

if.end47:                                         ; preds = %for.body
  %39 = load i64, i64* @mask, align 8, !dbg !12842
  %40 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12844
  %event_types48 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %40, i32 0, i32 6, !dbg !12845
  %41 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types48, align 8, !dbg !12845
  %42 = load i32, i32* %i, align 4, !dbg !12846
  %idxprom49 = sext i32 %42 to i64, !dbg !12844
  %arrayidx50 = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %41, i64 %idxprom49, !dbg !12844
  %mask51 = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx50, i32 0, i32 1, !dbg !12847
  %43 = load i64, i64* %mask51, align 8, !dbg !12847
  %and52 = and i64 %39, %43, !dbg !12848
  %tobool53 = icmp ne i64 %and52, 0, !dbg !12848
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !12849

if.then54:                                        ; preds = %if.end47
  br label %for.inc87, !dbg !12850

if.end55:                                         ; preds = %if.end47
  store i32 0, i32* %j, align 4, !dbg !12851
  br label %for.cond56, !dbg !12853

for.cond56:                                       ; preds = %for.inc, %if.end55
  %44 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12854
  %event_types57 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %44, i32 0, i32 6, !dbg !12856
  %45 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types57, align 8, !dbg !12856
  %46 = load i32, i32* %i, align 4, !dbg !12857
  %idxprom58 = sext i32 %46 to i64, !dbg !12854
  %arrayidx59 = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %45, i64 %idxprom58, !dbg !12854
  %events = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx59, i32 0, i32 2, !dbg !12858
  %47 = load %struct.sonypi_event*, %struct.sonypi_event** %events, align 8, !dbg !12858
  %48 = load i32, i32* %j, align 4, !dbg !12859
  %idxprom60 = sext i32 %48 to i64, !dbg !12854
  %arrayidx61 = getelementptr %struct.sonypi_event, %struct.sonypi_event* %47, i64 %idxprom60, !dbg !12854
  %event = getelementptr inbounds %struct.sonypi_event, %struct.sonypi_event* %arrayidx61, i32 0, i32 1, !dbg !12860
  %49 = load i8, i8* %event, align 1, !dbg !12860
  %tobool62 = icmp ne i8 %49, 0, !dbg !12861
  br i1 %tobool62, label %for.body63, label %for.end, !dbg !12861

for.body63:                                       ; preds = %for.cond56
  %50 = load i8, i8* %ev, align 1, !dbg !12862
  %conv64 = zext i8 %50 to i32, !dbg !12862
  %51 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12865
  %event_types65 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %51, i32 0, i32 6, !dbg !12866
  %52 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types65, align 8, !dbg !12866
  %53 = load i32, i32* %i, align 4, !dbg !12867
  %idxprom66 = sext i32 %53 to i64, !dbg !12865
  %arrayidx67 = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %52, i64 %idxprom66, !dbg !12865
  %events68 = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx67, i32 0, i32 2, !dbg !12868
  %54 = load %struct.sonypi_event*, %struct.sonypi_event** %events68, align 8, !dbg !12868
  %55 = load i32, i32* %j, align 4, !dbg !12869
  %idxprom69 = sext i32 %55 to i64, !dbg !12865
  %arrayidx70 = getelementptr %struct.sonypi_event, %struct.sonypi_event* %54, i64 %idxprom69, !dbg !12865
  %data71 = getelementptr inbounds %struct.sonypi_event, %struct.sonypi_event* %arrayidx70, i32 0, i32 0, !dbg !12870
  %56 = load i8, i8* %data71, align 1, !dbg !12870
  %conv72 = zext i8 %56 to i32, !dbg !12865
  %cmp73 = icmp eq i32 %conv64, %conv72, !dbg !12871
  br i1 %cmp73, label %if.then75, label %if.end86, !dbg !12872

if.then75:                                        ; preds = %for.body63
  %57 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12873
  %event_types76 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %57, i32 0, i32 6, !dbg !12875
  %58 = load %struct.sonypi_eventtypes*, %struct.sonypi_eventtypes** %event_types76, align 8, !dbg !12875
  %59 = load i32, i32* %i, align 4, !dbg !12876
  %idxprom77 = sext i32 %59 to i64, !dbg !12873
  %arrayidx78 = getelementptr %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %58, i64 %idxprom77, !dbg !12873
  %events79 = getelementptr inbounds %struct.sonypi_eventtypes, %struct.sonypi_eventtypes* %arrayidx78, i32 0, i32 2, !dbg !12877
  %60 = load %struct.sonypi_event*, %struct.sonypi_event** %events79, align 8, !dbg !12877
  %61 = load i32, i32* %j, align 4, !dbg !12878
  %idxprom80 = sext i32 %61 to i64, !dbg !12873
  %arrayidx81 = getelementptr %struct.sonypi_event, %struct.sonypi_event* %60, i64 %idxprom80, !dbg !12873
  %event82 = getelementptr inbounds %struct.sonypi_event, %struct.sonypi_event* %arrayidx81, i32 0, i32 1, !dbg !12879
  %62 = load i8, i8* %event82, align 1, !dbg !12879
  store i8 %62, i8* %device_event, align 1, !dbg !12880
  %63 = load i8, i8* %device_event, align 1, !dbg !12881
  %tobool83 = icmp ne i8 %63, 0, !dbg !12881
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !12883

if.then84:                                        ; preds = %if.then75
  store i32 1, i32* %retval, align 4, !dbg !12884
  br label %return, !dbg !12884

if.end85:                                         ; preds = %if.then75
  br label %found, !dbg !12885

if.end86:                                         ; preds = %for.body63
  br label %for.inc, !dbg !12886

for.inc:                                          ; preds = %if.end86
  %64 = load i32, i32* %j, align 4, !dbg !12887
  %inc = add i32 %64, 1, !dbg !12887
  store i32 %inc, i32* %j, align 4, !dbg !12887
  br label %for.cond56, !dbg !12888, !llvm.loop !12889

for.end:                                          ; preds = %for.cond56
  br label %for.inc87, !dbg !12891

for.inc87:                                        ; preds = %for.end, %if.then54, %if.then46
  %65 = load i32, i32* %i, align 4, !dbg !12892
  %inc88 = add i32 %65, 1, !dbg !12892
  store i32 %inc88, i32* %i, align 4, !dbg !12892
  br label %for.cond, !dbg !12893, !llvm.loop !12894

for.end89:                                        ; preds = %for.cond
  %66 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12896
  %handle_irq = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %66, i32 0, i32 7, !dbg !12898
  %67 = load i32 (i8, i8)*, i32 (i8, i8)** %handle_irq, align 8, !dbg !12898
  %tobool90 = icmp ne i32 (i8, i8)* %67, null, !dbg !12896
  br i1 %tobool90, label %land.lhs.true, label %if.end96, !dbg !12899

land.lhs.true:                                    ; preds = %for.end89
  %68 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12900
  %handle_irq91 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %68, i32 0, i32 7, !dbg !12901
  %69 = load i32 (i8, i8)*, i32 (i8, i8)** %handle_irq91, align 8, !dbg !12901
  %70 = load i8, i8* %data_mask, align 1, !dbg !12902
  %71 = load i8, i8* %ev, align 1, !dbg !12903
  %call92 = call i32 %69(i8 zeroext %70, i8 zeroext %71) #11, !dbg !12900
  %cmp93 = icmp eq i32 %call92, 0, !dbg !12904
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !12905

if.then95:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !12906
  br label %return, !dbg !12906

if.end96:                                         ; preds = %land.lhs.true, %for.end89
  br label %do.body97, !dbg !12907

do.body97:                                        ; preds = %if.end96
  %72 = load i32, i32* @debug, align 4, !dbg !12908
  %tobool98 = icmp ne i32 %72, 0, !dbg !12908
  br i1 %tobool98, label %if.then99, label %if.end109, !dbg !12911

if.then99:                                        ; preds = %do.body97
  %73 = load i8, i8* %ev, align 1, !dbg !12908
  %conv100 = zext i8 %73 to i32, !dbg !12908
  %74 = load i8, i8* %data_mask, align 1, !dbg !12908
  %conv101 = zext i8 %74 to i32, !dbg !12908
  %75 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12908
  %cur_ioport102 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %75, i32 0, i32 2, !dbg !12908
  %76 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %cur_ioport102, align 8, !dbg !12908
  %io1103 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %76, i32 0, i32 0, !dbg !12908
  %minimum104 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1103, i32 0, i32 3, !dbg !12908
  %77 = load i16, i16* %minimum104, align 1, !dbg !12908
  %conv105 = zext i16 %77 to i32, !dbg !12908
  %78 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !12908
  %evport_offset106 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %78, i32 0, i32 9, !dbg !12908
  %79 = load i16, i16* %evport_offset106, align 4, !dbg !12908
  %conv107 = zext i16 %79 to i32, !dbg !12908
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.178, i64 0, i64 0), i32 %conv100, i32 %conv101, i32 %conv105, i32 %conv107) #12, !dbg !12908
  br label %if.end109, !dbg !12908

if.end109:                                        ; preds = %if.then99, %do.body97
  br label %do.end110, !dbg !12911

do.end110:                                        ; preds = %if.end109
  store i32 1, i32* %retval, align 4, !dbg !12912
  br label %return, !dbg !12912

found:                                            ; preds = %if.end85
  call void @llvm.dbg.label(metadata !12913), !dbg !12914
  %80 = load i8, i8* %device_event, align 1, !dbg !12915
  call void @sony_laptop_report_input_event(i8 zeroext %80) #11, !dbg !12916
  %81 = load i8, i8* %device_event, align 1, !dbg !12917
  call void @sonypi_compat_report_event(i8 zeroext %81) #11, !dbg !12918
  store i32 1, i32* %retval, align 4, !dbg !12919
  br label %return, !dbg !12919

return:                                           ; preds = %found, %do.end110, %if.then95, %if.then84, %if.then31
  %82 = load i32, i32* %retval, align 4, !dbg !12920
  ret i32 %82, !dbg !12920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_enable(%struct.acpi_device* %device, %struct.sony_pic_ioport* %ioport, %struct.sony_pic_irq* %irq) #0 !dbg !12921 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %ioport.addr = alloca %struct.sony_pic_ioport*, align 8
  %irq.addr = alloca %struct.sony_pic_irq*, align 8
  %status = alloca i32, align 4
  %result = alloca i32, align 4
  %resource = alloca %struct.anon.79*, align 8
  %buffer = alloca %struct.acpi_buffer, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  store %struct.sony_pic_ioport* %ioport, %struct.sony_pic_ioport** %ioport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %ioport.addr, metadata !12926, metadata !DIExpression()), !dbg !12927
  store %struct.sony_pic_irq* %irq, %struct.sony_pic_irq** %irq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sony_pic_irq** %irq.addr, metadata !12928, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12930, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12932, metadata !DIExpression()), !dbg !12933
  store i32 0, i32* %result, align 4, !dbg !12933
  call void @llvm.dbg.declare(metadata %struct.anon.79** %resource, metadata !12934, metadata !DIExpression()), !dbg !13285
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !13286, metadata !DIExpression()), !dbg !13287
  %0 = bitcast %struct.acpi_buffer* %buffer to i8*, !dbg !13287
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !13287
  %1 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport.addr, align 8, !dbg !13288
  %tobool = icmp ne %struct.sony_pic_ioport* %1, null, !dbg !13288
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13290

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq.addr, align 8, !dbg !13291
  %tobool1 = icmp ne %struct.sony_pic_irq* %2, null, !dbg !13291
  br i1 %tobool1, label %if.end, label %if.then, !dbg !13292

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !13293
  br label %return, !dbg !13293

if.end:                                           ; preds = %lor.lhs.false
  %call = call i8* @kzalloc(i64 273, i32 3264) #11, !dbg !13294
  %3 = bitcast i8* %call to %struct.anon.79*, !dbg !13294
  store %struct.anon.79* %3, %struct.anon.79** %resource, align 8, !dbg !13295
  %4 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13296
  %tobool2 = icmp ne %struct.anon.79* %4, null, !dbg !13296
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13298

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !13299
  br label %return, !dbg !13299

if.end4:                                          ; preds = %if.end
  %length = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 0, !dbg !13300
  store i64 273, i64* %length, align 8, !dbg !13301
  %5 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13302
  %6 = bitcast %struct.anon.79* %5 to i8*, !dbg !13302
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !13303
  store i8* %6, i8** %pointer, align 8, !dbg !13304
  %7 = load i32, i32* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 8), align 8, !dbg !13305
  %cmp = icmp eq i32 %7, 1, !dbg !13307
  br i1 %cmp, label %if.then5, label %if.else, !dbg !13308

if.then5:                                         ; preds = %if.end4
  %8 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13309
  %res1 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %8, i32 0, i32 0, !dbg !13311
  %type = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res1, i32 0, i32 0, !dbg !13312
  store i32 4, i32* %type, align 1, !dbg !13313
  %9 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13314
  %res16 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %9, i32 0, i32 0, !dbg !13315
  %length7 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res16, i32 0, i32 1, !dbg !13316
  store i32 68, i32* %length7, align 1, !dbg !13317
  %10 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13318
  %res18 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %10, i32 0, i32 0, !dbg !13319
  %data = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res18, i32 0, i32 2, !dbg !13320
  %io = bitcast %union.acpi_resource_data* %data to %struct.acpi_resource_io*, !dbg !13321
  %11 = bitcast %struct.acpi_resource_io* %io to i8*, !dbg !13322
  %12 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport.addr, align 8, !dbg !13323
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %12, i32 0, i32 0, !dbg !13324
  %13 = bitcast %struct.acpi_resource_io* %io1 to i8*, !dbg !13322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %13, i64 7, i1 false), !dbg !13322
  %14 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13325
  %res2 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %14, i32 0, i32 1, !dbg !13326
  %type9 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res2, i32 0, i32 0, !dbg !13327
  store i32 4, i32* %type9, align 1, !dbg !13328
  %15 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13329
  %res210 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %15, i32 0, i32 1, !dbg !13330
  %length11 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res210, i32 0, i32 1, !dbg !13331
  store i32 68, i32* %length11, align 1, !dbg !13332
  %16 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13333
  %res212 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %16, i32 0, i32 1, !dbg !13334
  %data13 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res212, i32 0, i32 2, !dbg !13335
  %io14 = bitcast %union.acpi_resource_data* %data13 to %struct.acpi_resource_io*, !dbg !13336
  %17 = bitcast %struct.acpi_resource_io* %io14 to i8*, !dbg !13337
  %18 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport.addr, align 8, !dbg !13338
  %io2 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %18, i32 0, i32 1, !dbg !13339
  %19 = bitcast %struct.acpi_resource_io* %io2 to i8*, !dbg !13337
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %19, i64 7, i1 false), !dbg !13337
  %20 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13340
  %res3 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %20, i32 0, i32 2, !dbg !13341
  %type15 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res3, i32 0, i32 0, !dbg !13342
  store i32 0, i32* %type15, align 1, !dbg !13343
  %21 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13344
  %res316 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %21, i32 0, i32 2, !dbg !13345
  %length17 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res316, i32 0, i32 1, !dbg !13346
  store i32 68, i32* %length17, align 1, !dbg !13347
  %22 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13348
  %res318 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %22, i32 0, i32 2, !dbg !13349
  %data19 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res318, i32 0, i32 2, !dbg !13350
  %irq20 = bitcast %union.acpi_resource_data* %data19 to %struct.acpi_resource_irq*, !dbg !13351
  %23 = bitcast %struct.acpi_resource_irq* %irq20 to i8*, !dbg !13352
  %24 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq.addr, align 8, !dbg !13353
  %irq21 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %24, i32 0, i32 0, !dbg !13354
  %25 = bitcast %struct.acpi_resource_irq* %irq21 to i8*, !dbg !13352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 8 %25, i64 7, i1 false), !dbg !13352
  %26 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13355
  %res322 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %26, i32 0, i32 2, !dbg !13356
  %data23 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res322, i32 0, i32 2, !dbg !13357
  %irq24 = bitcast %union.acpi_resource_data* %data23 to %struct.acpi_resource_irq*, !dbg !13358
  %shareable = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq24, i32 0, i32 3, !dbg !13359
  store i8 1, i8* %shareable, align 1, !dbg !13360
  %27 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13361
  %res4 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %27, i32 0, i32 3, !dbg !13362
  %type25 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res4, i32 0, i32 0, !dbg !13363
  store i32 7, i32* %type25, align 1, !dbg !13364
  %28 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13365
  %res426 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %28, i32 0, i32 3, !dbg !13366
  %length27 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res426, i32 0, i32 1, !dbg !13367
  store i32 68, i32* %length27, align 1, !dbg !13368
  br label %if.end52, !dbg !13369

if.else:                                          ; preds = %if.end4
  %29 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13370
  %res128 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %29, i32 0, i32 0, !dbg !13372
  %type29 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res128, i32 0, i32 0, !dbg !13373
  store i32 4, i32* %type29, align 1, !dbg !13374
  %30 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13375
  %res130 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %30, i32 0, i32 0, !dbg !13376
  %length31 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res130, i32 0, i32 1, !dbg !13377
  store i32 68, i32* %length31, align 1, !dbg !13378
  %31 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13379
  %res132 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %31, i32 0, i32 0, !dbg !13380
  %data33 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res132, i32 0, i32 2, !dbg !13381
  %io34 = bitcast %union.acpi_resource_data* %data33 to %struct.acpi_resource_io*, !dbg !13382
  %32 = bitcast %struct.acpi_resource_io* %io34 to i8*, !dbg !13383
  %33 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport.addr, align 8, !dbg !13384
  %io135 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %33, i32 0, i32 0, !dbg !13385
  %34 = bitcast %struct.acpi_resource_io* %io135 to i8*, !dbg !13383
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 8 %34, i64 7, i1 false), !dbg !13383
  %35 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13386
  %res236 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %35, i32 0, i32 1, !dbg !13387
  %type37 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res236, i32 0, i32 0, !dbg !13388
  store i32 0, i32* %type37, align 1, !dbg !13389
  %36 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13390
  %res238 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %36, i32 0, i32 1, !dbg !13391
  %length39 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res238, i32 0, i32 1, !dbg !13392
  store i32 68, i32* %length39, align 1, !dbg !13393
  %37 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13394
  %res240 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %37, i32 0, i32 1, !dbg !13395
  %data41 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res240, i32 0, i32 2, !dbg !13396
  %irq42 = bitcast %union.acpi_resource_data* %data41 to %struct.acpi_resource_irq*, !dbg !13397
  %38 = bitcast %struct.acpi_resource_irq* %irq42 to i8*, !dbg !13398
  %39 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %irq.addr, align 8, !dbg !13399
  %irq43 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %39, i32 0, i32 0, !dbg !13400
  %40 = bitcast %struct.acpi_resource_irq* %irq43 to i8*, !dbg !13398
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 8 %40, i64 7, i1 false), !dbg !13398
  %41 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13401
  %res244 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %41, i32 0, i32 1, !dbg !13402
  %data45 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res244, i32 0, i32 2, !dbg !13403
  %irq46 = bitcast %union.acpi_resource_data* %data45 to %struct.acpi_resource_irq*, !dbg !13404
  %shareable47 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq46, i32 0, i32 3, !dbg !13405
  store i8 1, i8* %shareable47, align 1, !dbg !13406
  %42 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13407
  %res348 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %42, i32 0, i32 2, !dbg !13408
  %type49 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res348, i32 0, i32 0, !dbg !13409
  store i32 7, i32* %type49, align 1, !dbg !13410
  %43 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13411
  %res350 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %43, i32 0, i32 2, !dbg !13412
  %length51 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %res350, i32 0, i32 1, !dbg !13413
  store i32 68, i32* %length51, align 1, !dbg !13414
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then5
  br label %do.body, !dbg !13415

do.body:                                          ; preds = %if.end52
  %44 = load i32, i32* @debug, align 4, !dbg !13416
  %tobool53 = icmp ne i32 %44, 0, !dbg !13416
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !13419

if.then54:                                        ; preds = %do.body
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0)) #12, !dbg !13416
  br label %if.end56, !dbg !13416

if.end56:                                         ; preds = %if.then54, %do.body
  br label %do.end, !dbg !13419

do.end:                                           ; preds = %if.end56
  %45 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !13420
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %45, i32 0, i32 1, !dbg !13421
  %46 = load i8*, i8** %handle, align 8, !dbg !13421
  %call57 = call i32 @acpi_set_current_resources(i8* %46, %struct.acpi_buffer* %buffer) #11, !dbg !13422
  store i32 %call57, i32* %status, align 4, !dbg !13423
  %47 = load i32, i32* %status, align 4, !dbg !13424
  %tobool58 = icmp ne i32 %47, 0, !dbg !13424
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !13426

if.then59:                                        ; preds = %do.end
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.180, i64 0, i64 0)) #12, !dbg !13427
  store i32 -19, i32* %result, align 4, !dbg !13429
  br label %end, !dbg !13430

if.end61:                                         ; preds = %do.end
  %call62 = call zeroext i8 @sony_pic_call1(i8 zeroext -126) #11, !dbg !13431
  %call63 = call zeroext i8 @sony_pic_call2(i8 zeroext -127, i8 zeroext -1) #11, !dbg !13432
  %48 = load i32, i32* @compat, align 4, !dbg !13433
  %tobool64 = icmp ne i32 %48, 0, !dbg !13433
  %49 = zext i1 %tobool64 to i64, !dbg !13433
  %cond = select i1 %tobool64, i32 146, i32 130, !dbg !13433
  %conv = trunc i32 %cond to i8, !dbg !13433
  %call65 = call zeroext i8 @sony_pic_call1(i8 zeroext %conv) #11, !dbg !13434
  br label %end, !dbg !13434

end:                                              ; preds = %if.end61, %if.then59
  call void @llvm.dbg.label(metadata !13435), !dbg !13436
  %50 = load %struct.anon.79*, %struct.anon.79** %resource, align 8, !dbg !13437
  %51 = bitcast %struct.anon.79* %50 to i8*, !dbg !13437
  call void @kfree(i8* %51) #11, !dbg !13438
  %52 = load i32, i32* %result, align 4, !dbg !13439
  store i32 %52, i32* %retval, align 4, !dbg !13440
  br label %return, !dbg !13440

return:                                           ; preds = %end, %if.then3, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !13441
  ret i32 %53, !dbg !13441
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_group(%struct.kobject*, %struct.attribute_group*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_disable(%struct.acpi_device* %device) #0 !dbg !13442 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %ret = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !13443, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13445, metadata !DIExpression()), !dbg !13446
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !13447
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !13448
  %1 = load i8*, i8** %handle, align 8, !dbg !13448
  %call = call i32 @acpi_evaluate_object(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i64 0, i64 0), %struct.acpi_object_list* null, %struct.acpi_buffer* null) #11, !dbg !13449
  store i32 %call, i32* %ret, align 4, !dbg !13446
  %2 = load i32, i32* %ret, align 4, !dbg !13450
  %tobool = icmp ne i32 %2, 0, !dbg !13450
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13452

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !13453
  %cmp = icmp ne i32 %3, 5, !dbg !13454
  br i1 %cmp, label %if.then, label %if.end, !dbg !13455

if.then:                                          ; preds = %land.lhs.true
  store i32 -6, i32* %retval, align 4, !dbg !13456
  br label %return, !dbg !13456

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %do.body, !dbg !13457

do.body:                                          ; preds = %if.end
  %4 = load i32, i32* @debug, align 4, !dbg !13458
  %tobool1 = icmp ne i32 %4, 0, !dbg !13458
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !13461

if.then2:                                         ; preds = %do.body
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.165, i64 0, i64 0)) #12, !dbg !13458
  br label %if.end4, !dbg !13458

if.end4:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !13461

do.end:                                           ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !13462
  br label %return, !dbg !13462

return:                                           ; preds = %do.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13463
  ret i32 %5, !dbg !13463
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sonypi_compat_exit() #0 !dbg !13464 {
entry:
  ret void, !dbg !13465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !13466 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13470, metadata !DIExpression()), !dbg !13471
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13472
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !13473
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13474
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13475
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !13476
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13477
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !13478
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !13479
  ret void, !dbg !13480
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_device(i32, i32, %struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @type3_handle_irq(i8 zeroext %data_mask, i8 zeroext %ev) #0 !dbg !13481 {
entry:
  %retval = alloca i32, align 4
  %data_mask.addr = alloca i8, align 1
  %ev.addr = alloca i8, align 1
  store i8 %data_mask, i8* %data_mask.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data_mask.addr, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i8 %ev, i8* %ev.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ev.addr, metadata !13484, metadata !DIExpression()), !dbg !13485
  %0 = load i8, i8* %data_mask.addr, align 1, !dbg !13486
  %conv = zext i8 %0 to i32, !dbg !13486
  %cmp = icmp eq i32 %conv, 49, !dbg !13488
  br i1 %cmp, label %if.then, label %if.end15, !dbg !13489

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %ev.addr, align 1, !dbg !13490
  %conv2 = zext i8 %1 to i32, !dbg !13490
  %cmp3 = icmp eq i32 %conv2, 92, !dbg !13493
  br i1 %cmp3, label %if.then8, label %lor.lhs.false, !dbg !13494

lor.lhs.false:                                    ; preds = %if.then
  %2 = load i8, i8* %ev.addr, align 1, !dbg !13495
  %conv5 = zext i8 %2 to i32, !dbg !13495
  %cmp6 = icmp eq i32 %conv5, 95, !dbg !13496
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !13497

if.then8:                                         ; preds = %lor.lhs.false, %if.then
  %call = call zeroext i8 @sony_pic_call1(i8 zeroext -96) #11, !dbg !13498
  br label %if.end14, !dbg !13498

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8, i8* %ev.addr, align 1, !dbg !13499
  %conv9 = zext i8 %3 to i32, !dbg !13499
  %cmp10 = icmp eq i32 %conv9, 97, !dbg !13501
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !13502

if.then12:                                        ; preds = %if.else
  %call13 = call zeroext i8 @sony_pic_call1(i8 zeroext -77) #11, !dbg !13503
  br label %if.end, !dbg !13503

if.end:                                           ; preds = %if.then12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then8
  store i32 0, i32* %retval, align 4, !dbg !13504
  br label %return, !dbg !13504

if.end15:                                         ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !13505
  br label %return, !dbg !13505

return:                                           ; preds = %if.end15, %if.end14
  %4 = load i32, i32* %retval, align 4, !dbg !13506
  ret i32 %4, !dbg !13506
}

; Function Attrs: noredzone
declare dso_local void @pci_dev_put(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_resources(i8*, i8*, i32 (%struct.acpi_resource*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_read_possible_resource(%struct.acpi_resource* %resource, i8* %context) #0 !dbg !13507 {
entry:
  %retval = alloca i32, align 4
  %resource.addr = alloca %struct.acpi_resource*, align 8
  %context.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %dev = alloca %struct.sony_pic_dev*, align 8
  %ioport = alloca %struct.sony_pic_ioport*, align 8
  %p = alloca %struct.acpi_resource_irq*, align 8
  %interrupt = alloca %struct.sony_pic_irq*, align 8
  %io = alloca %struct.acpi_resource_io*, align 8
  %ioport44 = alloca %struct.sony_pic_ioport*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.sony_pic_ioport*, align 8
  store %struct.acpi_resource* %resource, %struct.acpi_resource** %resource.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_resource** %resource.addr, metadata !13511, metadata !DIExpression()), !dbg !13512
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !13513, metadata !DIExpression()), !dbg !13514
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13515, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.declare(metadata %struct.sony_pic_dev** %dev, metadata !13517, metadata !DIExpression()), !dbg !13518
  %0 = load i8*, i8** %context.addr, align 8, !dbg !13519
  %1 = bitcast i8* %0 to %struct.sony_pic_dev*, !dbg !13520
  store %struct.sony_pic_dev* %1, %struct.sony_pic_dev** %dev, align 8, !dbg !13518
  %2 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !13521
  %type = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %2, i32 0, i32 0, !dbg !13522
  %3 = load i32, i32* %type, align 1, !dbg !13522
  switch i32 %3, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 0, label %sw.bb2
    i32 4, label %sw.bb41
    i32 7, label %sw.bb91
  ], !dbg !13523

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %ioport, metadata !13524, metadata !DIExpression()), !dbg !13527
  %call = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !13528
  %4 = bitcast i8* %call to %struct.sony_pic_ioport*, !dbg !13528
  store %struct.sony_pic_ioport* %4, %struct.sony_pic_ioport** %ioport, align 8, !dbg !13527
  %5 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport, align 8, !dbg !13529
  %tobool = icmp ne %struct.sony_pic_ioport* %5, null, !dbg !13529
  br i1 %tobool, label %if.end, label %if.then, !dbg !13531

if.then:                                          ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !13532
  br label %return, !dbg !13532

if.end:                                           ; preds = %sw.bb
  %6 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport, align 8, !dbg !13533
  %list = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %6, i32 0, i32 2, !dbg !13534
  %7 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !13535
  %ioports = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %7, i32 0, i32 4, !dbg !13536
  call void @list_add(%struct.list_head* %list, %struct.list_head* %ioports) #11, !dbg !13537
  store i32 0, i32* %retval, align 4, !dbg !13538
  br label %return, !dbg !13538

sw.bb1:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13539
  br label %return, !dbg !13539

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.acpi_resource_irq** %p, metadata !13540, metadata !DIExpression()), !dbg !13543
  %8 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !13544
  %data = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %8, i32 0, i32 2, !dbg !13545
  %irq = bitcast %union.acpi_resource_data* %data to %struct.acpi_resource_irq*, !dbg !13546
  store %struct.acpi_resource_irq* %irq, %struct.acpi_resource_irq** %p, align 8, !dbg !13543
  call void @llvm.dbg.declare(metadata %struct.sony_pic_irq** %interrupt, metadata !13547, metadata !DIExpression()), !dbg !13548
  store %struct.sony_pic_irq* null, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13548
  %9 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13549
  %tobool3 = icmp ne %struct.acpi_resource_irq* %9, null, !dbg !13549
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !13551

lor.lhs.false:                                    ; preds = %sw.bb2
  %10 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13552
  %interrupt_count = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %10, i32 0, i32 5, !dbg !13553
  %11 = load i8, i8* %interrupt_count, align 1, !dbg !13553
  %tobool4 = icmp ne i8 %11, 0, !dbg !13552
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !13554

if.then5:                                         ; preds = %lor.lhs.false, %sw.bb2
  br label %do.body, !dbg !13555

do.body:                                          ; preds = %if.then5
  %12 = load i32, i32* @debug, align 4, !dbg !13557
  %tobool6 = icmp ne i32 %12, 0, !dbg !13557
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !13560

if.then7:                                         ; preds = %do.body
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.170, i64 0, i64 0)) #12, !dbg !13557
  br label %if.end9, !dbg !13557

if.end9:                                          ; preds = %if.then7, %do.body
  br label %do.end, !dbg !13560

do.end:                                           ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !13561
  br label %return, !dbg !13561

if.end10:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !13562
  br label %for.cond, !dbg !13564

for.cond:                                         ; preds = %for.inc, %if.end10
  %13 = load i32, i32* %i, align 4, !dbg !13565
  %14 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13567
  %interrupt_count11 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %14, i32 0, i32 5, !dbg !13568
  %15 = load i8, i8* %interrupt_count11, align 1, !dbg !13568
  %conv = zext i8 %15 to i32, !dbg !13567
  %cmp = icmp ult i32 %13, %conv, !dbg !13569
  br i1 %cmp, label %for.body, label %for.end, !dbg !13570

for.body:                                         ; preds = %for.cond
  %16 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13571
  %interrupts = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %16, i32 0, i32 6, !dbg !13574
  %17 = load i32, i32* %i, align 4, !dbg !13575
  %idxprom = zext i32 %17 to i64, !dbg !13571
  %arrayidx = getelementptr [1 x i8], [1 x i8]* %interrupts, i64 0, i64 %idxprom, !dbg !13571
  %18 = load i8, i8* %arrayidx, align 1, !dbg !13571
  %tobool13 = icmp ne i8 %18, 0, !dbg !13571
  br i1 %tobool13, label %if.end20, label %if.then14, !dbg !13576

if.then14:                                        ; preds = %for.body
  %19 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13577
  %interrupts15 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %19, i32 0, i32 6, !dbg !13577
  %20 = load i32, i32* %i, align 4, !dbg !13577
  %idxprom16 = zext i32 %20 to i64, !dbg !13577
  %arrayidx17 = getelementptr [1 x i8], [1 x i8]* %interrupts15, i64 0, i64 %idxprom16, !dbg !13577
  %21 = load i8, i8* %arrayidx17, align 1, !dbg !13577
  %conv18 = zext i8 %21 to i32, !dbg !13577
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.171, i64 0, i64 0), i32 %conv18) #12, !dbg !13577
  br label %for.inc, !dbg !13579

if.end20:                                         ; preds = %for.body
  %call21 = call i8* @kzalloc(i64 24, i32 3264) #11, !dbg !13580
  %22 = bitcast i8* %call21 to %struct.sony_pic_irq*, !dbg !13580
  store %struct.sony_pic_irq* %22, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13581
  %23 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13582
  %tobool22 = icmp ne %struct.sony_pic_irq* %23, null, !dbg !13582
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !13584

if.then23:                                        ; preds = %if.end20
  store i32 1, i32* %retval, align 4, !dbg !13585
  br label %return, !dbg !13585

if.end24:                                         ; preds = %if.end20
  %24 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13586
  %list25 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %24, i32 0, i32 1, !dbg !13587
  %25 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !13588
  %interrupts26 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %25, i32 0, i32 3, !dbg !13589
  call void @list_add(%struct.list_head* %list25, %struct.list_head* %interrupts26) #11, !dbg !13590
  %26 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13591
  %triggering = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %26, i32 0, i32 1, !dbg !13592
  %27 = load i8, i8* %triggering, align 1, !dbg !13592
  %28 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13593
  %irq27 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %28, i32 0, i32 0, !dbg !13594
  %triggering28 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq27, i32 0, i32 1, !dbg !13595
  store i8 %27, i8* %triggering28, align 1, !dbg !13596
  %29 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13597
  %polarity = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %29, i32 0, i32 2, !dbg !13598
  %30 = load i8, i8* %polarity, align 1, !dbg !13598
  %31 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13599
  %irq29 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %31, i32 0, i32 0, !dbg !13600
  %polarity30 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq29, i32 0, i32 2, !dbg !13601
  store i8 %30, i8* %polarity30, align 2, !dbg !13602
  %32 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13603
  %shareable = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %32, i32 0, i32 3, !dbg !13604
  %33 = load i8, i8* %shareable, align 1, !dbg !13604
  %34 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13605
  %irq31 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %34, i32 0, i32 0, !dbg !13606
  %shareable32 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq31, i32 0, i32 3, !dbg !13607
  store i8 %33, i8* %shareable32, align 1, !dbg !13608
  %35 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13609
  %irq33 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %35, i32 0, i32 0, !dbg !13610
  %interrupt_count34 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq33, i32 0, i32 5, !dbg !13611
  store i8 1, i8* %interrupt_count34, align 1, !dbg !13612
  %36 = load %struct.acpi_resource_irq*, %struct.acpi_resource_irq** %p, align 8, !dbg !13613
  %interrupts35 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %36, i32 0, i32 6, !dbg !13614
  %37 = load i32, i32* %i, align 4, !dbg !13615
  %idxprom36 = zext i32 %37 to i64, !dbg !13613
  %arrayidx37 = getelementptr [1 x i8], [1 x i8]* %interrupts35, i64 0, i64 %idxprom36, !dbg !13613
  %38 = load i8, i8* %arrayidx37, align 1, !dbg !13613
  %39 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** %interrupt, align 8, !dbg !13616
  %irq38 = getelementptr inbounds %struct.sony_pic_irq, %struct.sony_pic_irq* %39, i32 0, i32 0, !dbg !13617
  %interrupts39 = getelementptr inbounds %struct.acpi_resource_irq, %struct.acpi_resource_irq* %irq38, i32 0, i32 6, !dbg !13618
  %arrayidx40 = getelementptr [1 x i8], [1 x i8]* %interrupts39, i64 0, i64 0, !dbg !13616
  store i8 %38, i8* %arrayidx40, align 2, !dbg !13619
  br label %for.inc, !dbg !13620

for.inc:                                          ; preds = %if.end24, %if.then14
  %40 = load i32, i32* %i, align 4, !dbg !13621
  %inc = add i32 %40, 1, !dbg !13621
  store i32 %inc, i32* %i, align 4, !dbg !13621
  br label %for.cond, !dbg !13622, !llvm.loop !13623

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !13625
  br label %return, !dbg !13625

sw.bb41:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.acpi_resource_io** %io, metadata !13626, metadata !DIExpression()), !dbg !13629
  %41 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !13630
  %data42 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %41, i32 0, i32 2, !dbg !13631
  %io43 = bitcast %union.acpi_resource_data* %data42 to %struct.acpi_resource_io*, !dbg !13632
  store %struct.acpi_resource_io* %io43, %struct.acpi_resource_io** %io, align 8, !dbg !13629
  call void @llvm.dbg.declare(metadata %struct.sony_pic_ioport** %ioport44, metadata !13633, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13635, metadata !DIExpression()), !dbg !13637
  %42 = load %struct.sony_pic_dev*, %struct.sony_pic_dev** %dev, align 8, !dbg !13637
  %ioports45 = getelementptr inbounds %struct.sony_pic_dev, %struct.sony_pic_dev* %42, i32 0, i32 4, !dbg !13637
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ioports45, i32 0, i32 0, !dbg !13637
  %43 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13637
  %44 = bitcast %struct.list_head* %43 to i8*, !dbg !13637
  store i8* %44, i8** %__mptr, align 8, !dbg !13637
  br label %do.body46, !dbg !13637

do.body46:                                        ; preds = %sw.bb41
  br label %do.end47, !dbg !13638

do.end47:                                         ; preds = %do.body46
  %45 = load i8*, i8** %__mptr, align 8, !dbg !13637
  %add.ptr = getelementptr i8, i8* %45, i64 -16, !dbg !13637
  %46 = bitcast i8* %add.ptr to %struct.sony_pic_ioport*, !dbg !13637
  store %struct.sony_pic_ioport* %46, %struct.sony_pic_ioport** %tmp, align 8, !dbg !13638
  %47 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %tmp, align 8, !dbg !13637
  store %struct.sony_pic_ioport* %47, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13634
  %48 = load %struct.acpi_resource_io*, %struct.acpi_resource_io** %io, align 8, !dbg !13640
  %tobool48 = icmp ne %struct.acpi_resource_io* %48, null, !dbg !13640
  br i1 %tobool48, label %if.end56, label %if.then49, !dbg !13642

if.then49:                                        ; preds = %do.end47
  br label %do.body50, !dbg !13643

do.body50:                                        ; preds = %if.then49
  %49 = load i32, i32* @debug, align 4, !dbg !13645
  %tobool51 = icmp ne i32 %49, 0, !dbg !13645
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !13648

if.then52:                                        ; preds = %do.body50
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.172, i64 0, i64 0)) #12, !dbg !13645
  br label %if.end54, !dbg !13645

if.end54:                                         ; preds = %if.then52, %do.body50
  br label %do.end55, !dbg !13648

do.end55:                                         ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !13649
  br label %return, !dbg !13649

if.end56:                                         ; preds = %do.end47
  %50 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13650
  %io1 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %50, i32 0, i32 0, !dbg !13652
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io1, i32 0, i32 3, !dbg !13653
  %51 = load i16, i16* %minimum, align 1, !dbg !13653
  %tobool57 = icmp ne i16 %51, 0, !dbg !13650
  br i1 %tobool57, label %if.else, label %if.then58, !dbg !13654

if.then58:                                        ; preds = %if.end56
  %52 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13655
  %io159 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %52, i32 0, i32 0, !dbg !13657
  %53 = bitcast %struct.acpi_resource_io* %io159 to i8*, !dbg !13658
  %54 = load %struct.acpi_resource_io*, %struct.acpi_resource_io** %io, align 8, !dbg !13659
  %55 = bitcast %struct.acpi_resource_io* %54 to i8*, !dbg !13658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 1 %55, i64 7, i1 false), !dbg !13658
  br label %do.body60, !dbg !13660

do.body60:                                        ; preds = %if.then58
  %56 = load i32, i32* @debug, align 4, !dbg !13661
  %tobool61 = icmp ne i32 %56, 0, !dbg !13661
  br i1 %tobool61, label %if.then62, label %if.end69, !dbg !13664

if.then62:                                        ; preds = %do.body60
  %57 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13661
  %io163 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %57, i32 0, i32 0, !dbg !13661
  %minimum64 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io163, i32 0, i32 3, !dbg !13661
  %58 = load i16, i16* %minimum64, align 1, !dbg !13661
  %conv65 = zext i16 %58 to i32, !dbg !13661
  %59 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13661
  %io166 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %59, i32 0, i32 0, !dbg !13661
  %address_length = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io166, i32 0, i32 2, !dbg !13661
  %60 = load i8, i8* %address_length, align 2, !dbg !13661
  %conv67 = zext i8 %60 to i32, !dbg !13661
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.173, i64 0, i64 0), i32 %conv65, i32 %conv67) #12, !dbg !13661
  br label %if.end69, !dbg !13661

if.end69:                                         ; preds = %if.then62, %do.body60
  br label %do.end70, !dbg !13664

do.end70:                                         ; preds = %if.end69
  br label %if.end90, !dbg !13665

if.else:                                          ; preds = %if.end56
  %61 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13666
  %io2 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %61, i32 0, i32 1, !dbg !13668
  %minimum71 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io2, i32 0, i32 3, !dbg !13669
  %62 = load i16, i16* %minimum71, align 1, !dbg !13669
  %tobool72 = icmp ne i16 %62, 0, !dbg !13666
  br i1 %tobool72, label %if.else87, label %if.then73, !dbg !13670

if.then73:                                        ; preds = %if.else
  %63 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13671
  %io274 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %63, i32 0, i32 1, !dbg !13673
  %64 = bitcast %struct.acpi_resource_io* %io274 to i8*, !dbg !13674
  %65 = load %struct.acpi_resource_io*, %struct.acpi_resource_io** %io, align 8, !dbg !13675
  %66 = bitcast %struct.acpi_resource_io* %65 to i8*, !dbg !13674
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %64, i8* align 1 %66, i64 7, i1 false), !dbg !13674
  br label %do.body75, !dbg !13676

do.body75:                                        ; preds = %if.then73
  %67 = load i32, i32* @debug, align 4, !dbg !13677
  %tobool76 = icmp ne i32 %67, 0, !dbg !13677
  br i1 %tobool76, label %if.then77, label %if.end85, !dbg !13680

if.then77:                                        ; preds = %do.body75
  %68 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13677
  %io278 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %68, i32 0, i32 1, !dbg !13677
  %minimum79 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io278, i32 0, i32 3, !dbg !13677
  %69 = load i16, i16* %minimum79, align 1, !dbg !13677
  %conv80 = zext i16 %69 to i32, !dbg !13677
  %70 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** %ioport44, align 8, !dbg !13677
  %io281 = getelementptr inbounds %struct.sony_pic_ioport, %struct.sony_pic_ioport* %70, i32 0, i32 1, !dbg !13677
  %address_length82 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io281, i32 0, i32 2, !dbg !13677
  %71 = load i8, i8* %address_length82, align 1, !dbg !13677
  %conv83 = zext i8 %71 to i32, !dbg !13677
  %call84 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.174, i64 0, i64 0), i32 %conv80, i32 %conv83) #12, !dbg !13677
  br label %if.end85, !dbg !13677

if.end85:                                         ; preds = %if.then77, %do.body75
  br label %do.end86, !dbg !13680

do.end86:                                         ; preds = %if.end85
  br label %if.end89, !dbg !13681

if.else87:                                        ; preds = %if.else
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.175, i64 0, i64 0)) #12, !dbg !13682
  store i32 1, i32* %retval, align 4, !dbg !13684
  br label %return, !dbg !13684

if.end89:                                         ; preds = %do.end86
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %do.end70
  store i32 0, i32* %retval, align 4, !dbg !13685
  br label %return, !dbg !13685

sw.bb91:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13686
  br label %return, !dbg !13686

sw.default:                                       ; preds = %entry
  br label %do.body92, !dbg !13687

do.body92:                                        ; preds = %sw.default
  %72 = load i32, i32* @debug, align 4, !dbg !13688
  %tobool93 = icmp ne i32 %72, 0, !dbg !13688
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !13691

if.then94:                                        ; preds = %do.body92
  %73 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !13688
  %type95 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %73, i32 0, i32 0, !dbg !13688
  %74 = load i32, i32* %type95, align 1, !dbg !13688
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.176, i64 0, i64 0), i32 %74) #12, !dbg !13688
  br label %if.end97, !dbg !13688

if.end97:                                         ; preds = %if.then94, %do.body92
  br label %do.end98, !dbg !13691

do.end98:                                         ; preds = %if.end97
  store i32 16387, i32* %retval, align 4, !dbg !13692
  br label %return, !dbg !13692

return:                                           ; preds = %do.end98, %sw.bb91, %if.end90, %if.else87, %do.end55, %for.end, %if.then23, %do.end, %sw.bb1, %if.end, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !13693
  ret i32 %75, !dbg !13693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !13694 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13697, metadata !DIExpression()), !dbg !13698
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13699, metadata !DIExpression()), !dbg !13700
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13701
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13702
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13703
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !13704
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13704
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !13705
  ret void, !dbg !13706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13707 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13710, metadata !DIExpression()), !dbg !13711
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13712, metadata !DIExpression()), !dbg !13713
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13716
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13718
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13719
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !13720
  br i1 %call, label %if.end, label %if.then, !dbg !13721

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13722

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13723
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13724
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13725
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13726
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13727
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13728
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13729
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13730
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13731
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13732
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13733
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13734
  br label %do.body, !dbg !13735

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13736

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13738

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13736

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13740
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13740
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13740
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13740
  br label %do.end7, !dbg !13740

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13736

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13743 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13746, metadata !DIExpression()), !dbg !13747
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13748, metadata !DIExpression()), !dbg !13749
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13750, metadata !DIExpression()), !dbg !13751
  ret i1 true, !dbg !13752
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sonypi_compat_report_event(i8 zeroext %event) #0 !dbg !13753 {
entry:
  %event.addr = alloca i8, align 1
  store i8 %event, i8* %event.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %event.addr, metadata !13754, metadata !DIExpression()), !dbg !13755
  ret void, !dbg !13756
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_set_current_resources(i8*, %struct.acpi_buffer*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_pic_bluetoothpower_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !13757 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13758, metadata !DIExpression()), !dbg !13759
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13760, metadata !DIExpression()), !dbg !13761
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13762, metadata !DIExpression()), !dbg !13763
  call void @llvm.dbg.declare(metadata i64* %count, metadata !13764, metadata !DIExpression()), !dbg !13765
  store i64 0, i64* %count, align 8, !dbg !13765
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13766
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !13767
  %1 = load i8, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 11), align 1, !dbg !13768
  %conv = zext i8 %1 to i32, !dbg !13769
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %conv) #11, !dbg !13770
  %conv1 = sext i32 %call to i64, !dbg !13770
  store i64 %conv1, i64* %count, align 8, !dbg !13771
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13772
  %2 = load i64, i64* %count, align 8, !dbg !13773
  ret i64 %2, !dbg !13774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_pic_bluetoothpower_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !13775 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13776, metadata !DIExpression()), !dbg !13777
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13778, metadata !DIExpression()), !dbg !13779
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13780, metadata !DIExpression()), !dbg !13781
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13782, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.declare(metadata i64* %value, metadata !13784, metadata !DIExpression()), !dbg !13785
  %0 = load i64, i64* %count.addr, align 8, !dbg !13786
  %cmp = icmp ugt i64 %0, 31, !dbg !13788
  br i1 %cmp, label %if.then, label %if.end, !dbg !13789

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !13790
  br label %return, !dbg !13790

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !13791
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !13793
  %tobool = icmp ne i32 %call, 0, !dbg !13793
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !13794

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !13795
  br label %return, !dbg !13795

if.end2:                                          ; preds = %if.end
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13796
  %2 = load i64, i64* %value, align 8, !dbg !13797
  %conv = trunc i64 %2 to i8, !dbg !13797
  call void @__sony_pic_set_bluetoothpower(i8 zeroext %conv) #11, !dbg !13798
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13799
  %3 = load i64, i64* %count.addr, align 8, !dbg !13800
  store i64 %3, i64* %retval, align 8, !dbg !13801
  br label %return, !dbg !13801

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !13802
  ret i64 %4, !dbg !13802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__sony_pic_set_bluetoothpower(i8 zeroext %state) #0 !dbg !13803 {
entry:
  %state.addr = alloca i8, align 1
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !13804, metadata !DIExpression()), !dbg !13805
  %0 = load i8, i8* %state.addr, align 1, !dbg !13806
  %tobool = icmp ne i8 %0, 0, !dbg !13807
  %lnot = xor i1 %tobool, true, !dbg !13807
  %lnot1 = xor i1 %lnot, true, !dbg !13808
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13808
  %conv = trunc i32 %lnot.ext to i8, !dbg !13808
  store i8 %conv, i8* %state.addr, align 1, !dbg !13809
  %1 = load i8, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 11), align 1, !dbg !13810
  %conv2 = zext i8 %1 to i32, !dbg !13812
  %2 = load i8, i8* %state.addr, align 1, !dbg !13813
  %conv3 = zext i8 %2 to i32, !dbg !13813
  %cmp = icmp eq i32 %conv2, %conv3, !dbg !13814
  br i1 %cmp, label %if.then, label %if.end, !dbg !13815

if.then:                                          ; preds = %entry
  br label %return, !dbg !13816

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %state.addr, align 1, !dbg !13817
  %call = call zeroext i8 @sony_pic_call2(i8 zeroext -106, i8 zeroext %3) #11, !dbg !13818
  %call5 = call zeroext i8 @sony_pic_call1(i8 zeroext -126) #11, !dbg !13819
  %4 = load i8, i8* %state.addr, align 1, !dbg !13820
  store i8 %4, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 11), align 1, !dbg !13821
  br label %return, !dbg !13822

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_pic_wwanpower_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !13823 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13824, metadata !DIExpression()), !dbg !13825
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13826, metadata !DIExpression()), !dbg !13827
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13828, metadata !DIExpression()), !dbg !13829
  call void @llvm.dbg.declare(metadata i64* %count, metadata !13830, metadata !DIExpression()), !dbg !13831
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13832
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !13833
  %1 = load i8, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 12), align 8, !dbg !13834
  %conv = zext i8 %1 to i32, !dbg !13835
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %conv) #11, !dbg !13836
  %conv1 = sext i32 %call to i64, !dbg !13836
  store i64 %conv1, i64* %count, align 8, !dbg !13837
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13838
  %2 = load i64, i64* %count, align 8, !dbg !13839
  ret i64 %2, !dbg !13840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_pic_wwanpower_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !13841 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13842, metadata !DIExpression()), !dbg !13843
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13844, metadata !DIExpression()), !dbg !13845
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13846, metadata !DIExpression()), !dbg !13847
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13848, metadata !DIExpression()), !dbg !13849
  call void @llvm.dbg.declare(metadata i64* %value, metadata !13850, metadata !DIExpression()), !dbg !13851
  %0 = load i64, i64* %count.addr, align 8, !dbg !13852
  %cmp = icmp ugt i64 %0, 31, !dbg !13854
  br i1 %cmp, label %if.then, label %if.end, !dbg !13855

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !13856
  br label %return, !dbg !13856

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !13857
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !13859
  %tobool = icmp ne i32 %call, 0, !dbg !13859
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !13860

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !13861
  br label %return, !dbg !13861

if.end2:                                          ; preds = %if.end
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13862
  %2 = load i64, i64* %value, align 8, !dbg !13863
  %conv = trunc i64 %2 to i8, !dbg !13863
  call void @__sony_pic_set_wwanpower(i8 zeroext %conv) #11, !dbg !13864
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 5)) #11, !dbg !13865
  %3 = load i64, i64* %count.addr, align 8, !dbg !13866
  store i64 %3, i64* %retval, align 8, !dbg !13867
  br label %return, !dbg !13867

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !13868
  ret i64 %4, !dbg !13868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__sony_pic_set_wwanpower(i8 zeroext %state) #0 !dbg !13869 {
entry:
  %state.addr = alloca i8, align 1
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !13870, metadata !DIExpression()), !dbg !13871
  %0 = load i8, i8* %state.addr, align 1, !dbg !13872
  %tobool = icmp ne i8 %0, 0, !dbg !13873
  %lnot = xor i1 %tobool, true, !dbg !13873
  %lnot1 = xor i1 %lnot, true, !dbg !13874
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13874
  %conv = trunc i32 %lnot.ext to i8, !dbg !13874
  store i8 %conv, i8* %state.addr, align 1, !dbg !13875
  %1 = load i8, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 12), align 8, !dbg !13876
  %conv2 = zext i8 %1 to i32, !dbg !13878
  %2 = load i8, i8* %state.addr, align 1, !dbg !13879
  %conv3 = zext i8 %2 to i32, !dbg !13879
  %cmp = icmp eq i32 %conv2, %conv3, !dbg !13880
  br i1 %cmp, label %if.then, label %if.end, !dbg !13881

if.then:                                          ; preds = %entry
  br label %return, !dbg !13882

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %state.addr, align 1, !dbg !13883
  %call = call zeroext i8 @sony_pic_call2(i8 zeroext -80, i8 zeroext %3) #11, !dbg !13884
  %call5 = call zeroext i8 @sony_pic_call1(i8 zeroext -126) #11, !dbg !13885
  %4 = load i8, i8* %state.addr, align 1, !dbg !13886
  store i8 %4, i8* getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 12), align 8, !dbg !13887
  br label %return, !dbg !13888

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_pic_fanspeed_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer) #0 !dbg !13889 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %value = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13890, metadata !DIExpression()), !dbg !13891
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13892, metadata !DIExpression()), !dbg !13893
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13894, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.declare(metadata i8* %value, metadata !13896, metadata !DIExpression()), !dbg !13897
  store i8 0, i8* %value, align 1, !dbg !13897
  %call = call i32 @sony_pic_get_fanspeed(i8* %value) #11, !dbg !13898
  %tobool = icmp ne i32 %call, 0, !dbg !13898
  br i1 %tobool, label %if.then, label %if.end, !dbg !13900

if.then:                                          ; preds = %entry
  store i64 -5, i64* %retval, align 8, !dbg !13901
  br label %return, !dbg !13901

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !13902
  %1 = load i8, i8* %value, align 1, !dbg !13903
  %conv = zext i8 %1 to i32, !dbg !13903
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i32 %conv) #11, !dbg !13904
  %conv2 = sext i32 %call1 to i64, !dbg !13904
  store i64 %conv2, i64* %retval, align 8, !dbg !13905
  br label %return, !dbg !13905

return:                                           ; preds = %if.end, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !13906
  ret i64 %2, !dbg !13906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sony_pic_fanspeed_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buffer, i64 %count) #0 !dbg !13907 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %value = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13908, metadata !DIExpression()), !dbg !13909
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13910, metadata !DIExpression()), !dbg !13911
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13912, metadata !DIExpression()), !dbg !13913
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13914, metadata !DIExpression()), !dbg !13915
  call void @llvm.dbg.declare(metadata i64* %value, metadata !13916, metadata !DIExpression()), !dbg !13917
  %0 = load i64, i64* %count.addr, align 8, !dbg !13918
  %cmp = icmp ugt i64 %0, 31, !dbg !13920
  br i1 %cmp, label %if.then, label %if.end, !dbg !13921

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !13922
  br label %return, !dbg !13922

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !13923
  %call = call i32 @kstrtoul(i8* %1, i32 10, i64* %value) #11, !dbg !13925
  %tobool = icmp ne i32 %call, 0, !dbg !13925
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !13926

if.then1:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !13927
  br label %return, !dbg !13927

if.end2:                                          ; preds = %if.end
  %2 = load i64, i64* %value, align 8, !dbg !13928
  %call3 = call i32 @sony_pic_set_fanspeed(i64 %2) #11, !dbg !13930
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13930
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !13931

if.then5:                                         ; preds = %if.end2
  store i64 -5, i64* %retval, align 8, !dbg !13932
  br label %return, !dbg !13932

if.end6:                                          ; preds = %if.end2
  %3 = load i64, i64* %count.addr, align 8, !dbg !13933
  store i64 %3, i64* %retval, align 8, !dbg !13934
  br label %return, !dbg !13934

return:                                           ; preds = %if.end6, %if.then5, %if.then1, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !13935
  ret i64 %4, !dbg !13935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_get_fanspeed(i8* %value) #0 !dbg !13936 {
entry:
  %value.addr = alloca i8*, align 8
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !13939, metadata !DIExpression()), !dbg !13940
  %0 = load i8*, i8** %value.addr, align 8, !dbg !13941
  %call = call i32 @ec_read(i8 zeroext -109, i8* %0) #11, !dbg !13942
  ret i32 %call, !dbg !13943
}

; Function Attrs: noredzone
declare dso_local i32 @ec_read(i8 zeroext, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_set_fanspeed(i64 %value) #0 !dbg !13944 {
entry:
  %value.addr = alloca i64, align 8
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  %0 = load i64, i64* %value.addr, align 8, !dbg !13947
  %conv = trunc i64 %0 to i8, !dbg !13947
  %call = call i32 @ec_write(i8 zeroext -109, i8 zeroext %conv) #11, !dbg !13948
  ret i32 %call, !dbg !13949
}

; Function Attrs: noredzone
declare dso_local i32 @ec_write(i8 zeroext, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !13950 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13951, metadata !DIExpression()), !dbg !13952
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13953
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !13955
  br i1 %call, label %if.end, label %if.then, !dbg !13956

if.then:                                          ; preds = %entry
  br label %return, !dbg !13957

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13958
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13959
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13959
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13960
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13961
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13961
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !13962
  br label %return, !dbg !13963

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !13964 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13967, metadata !DIExpression()), !dbg !13968
  ret i1 true, !dbg !13969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13970 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13971, metadata !DIExpression()), !dbg !13972
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13973, metadata !DIExpression()), !dbg !13974
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13975
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13976
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13977
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !13978
  br label %do.body, !dbg !13979

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13980

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !13982

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !13980

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13984
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13984
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13984
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !13984
  br label %do.end5, !dbg !13984

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !13980

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !13986
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_group(%struct.kobject*, %struct.attribute_group*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_suspend(%struct.device* %dev) #0 !dbg !13987 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13988, metadata !DIExpression()), !dbg !13989
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13990, metadata !DIExpression()), !dbg !13993
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13993
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13993
  store i8* %1, i8** %__mptr, align 8, !dbg !13993
  br label %do.body, !dbg !13993

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13994

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13993
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !13993
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !13993
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !13994
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !13993
  %call = call i32 @sony_pic_disable(%struct.acpi_device* %4) #11, !dbg !13996
  %tobool = icmp ne i32 %call, 0, !dbg !13996
  br i1 %tobool, label %if.then, label %if.end, !dbg !13997

if.then:                                          ; preds = %do.end
  store i32 -6, i32* %retval, align 4, !dbg !13998
  br label %return, !dbg !13998

if.end:                                           ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !13999
  br label %return, !dbg !13999

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14000
  ret i32 %5, !dbg !14000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_pic_resume(%struct.device* %dev) #0 !dbg !14001 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14002, metadata !DIExpression()), !dbg !14003
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14004, metadata !DIExpression()), !dbg !14006
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14006
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14006
  store i8* %1, i8** %__mptr, align 8, !dbg !14006
  br label %do.body, !dbg !14006

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14007

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14006
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !14006
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !14006
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !14007
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !14006
  %5 = load %struct.sony_pic_ioport*, %struct.sony_pic_ioport** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 2), align 8, !dbg !14009
  %6 = load %struct.sony_pic_irq*, %struct.sony_pic_irq** getelementptr inbounds (%struct.sony_pic_dev, %struct.sony_pic_dev* @spic_dev, i32 0, i32 1), align 8, !dbg !14010
  %call = call i32 @sony_pic_enable(%struct.acpi_device* %4, %struct.sony_pic_ioport* %5, %struct.sony_pic_irq* %6) #11, !dbg !14011
  ret i32 0, !dbg !14012
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_register_driver(%struct.acpi_driver*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5644}
!llvm.module.flags = !{!5645, !5646, !5647, !5648}
!llvm.ident = !{!5649}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author245", scope: !2, file: !3, line: 74, type: !4923, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !176, globals: !4789, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/platform/x86/sony-laptop.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !116, !121, !128, !133, !140, !153, !160, !165, !170}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acpi_backlight_type", file: !108, line: 45, baseType: !109, size: 32, elements: !110)
!108 = !DIFile(filename: "./include/acpi/video.h", directory: "/home/lizy2001/genbc/linux")
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !{!111, !112, !113, !114, !115}
!111 = !DIEnumerator(name: "acpi_backlight_undef", value: -1)
!112 = !DIEnumerator(name: "acpi_backlight_none", value: 0)
!113 = !DIEnumerator(name: "acpi_backlight_video", value: 1)
!114 = !DIEnumerator(name: "acpi_backlight_vendor", value: 2)
!115 = !DIEnumerator(name: "acpi_backlight_native", value: 3)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !117, line: 10, baseType: !7, size: 32, elements: !118)
!117 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!118 = !{!119, !120}
!119 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !122, line: 305, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125, !126, !127}
!124 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!127 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gfx_switch", file: !3, line: 2443, baseType: !7, size: 32, elements: !129)
!129 = !{!130, !131, !132}
!130 = !DIEnumerator(name: "SPEED", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "STAMINA", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "AUTO", value: 2, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sony_nc_rfkill", file: !3, line: 171, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137, !138, !139}
!135 = !DIEnumerator(name: "SONY_WIFI", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "SONY_BLUETOOTH", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "SONY_WWAN", value: 2, isUnsigned: true)
!138 = !DIEnumerator(name: "SONY_WIMAX", value: 3, isUnsigned: true)
!139 = !DIEnumerator(name: "N_SONY_RFKILL", value: 4, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rfkill_type", file: !141, line: 43, baseType: !7, size: 32, elements: !142)
!141 = !DIFile(filename: "./include/uapi/linux/rfkill.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !144, !145, !146, !147, !148, !149, !150, !151, !152}
!143 = !DIEnumerator(name: "RFKILL_TYPE_ALL", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "RFKILL_TYPE_WLAN", value: 1, isUnsigned: true)
!145 = !DIEnumerator(name: "RFKILL_TYPE_BLUETOOTH", value: 2, isUnsigned: true)
!146 = !DIEnumerator(name: "RFKILL_TYPE_UWB", value: 3, isUnsigned: true)
!147 = !DIEnumerator(name: "RFKILL_TYPE_WIMAX", value: 4, isUnsigned: true)
!148 = !DIEnumerator(name: "RFKILL_TYPE_WWAN", value: 5, isUnsigned: true)
!149 = !DIEnumerator(name: "RFKILL_TYPE_GPS", value: 6, isUnsigned: true)
!150 = !DIEnumerator(name: "RFKILL_TYPE_FM", value: 7, isUnsigned: true)
!151 = !DIEnumerator(name: "RFKILL_TYPE_NFC", value: 8, isUnsigned: true)
!152 = !DIEnumerator(name: "NUM_RFKILL_TYPES", value: 9, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backlight_type", file: !154, line: 40, baseType: !7, size: 32, elements: !155)
!154 = !DIFile(filename: "./include/linux/backlight.h", directory: "/home/lizy2001/genbc/linux")
!155 = !{!156, !157, !158, !159}
!156 = !DIEnumerator(name: "BACKLIGHT_RAW", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "BACKLIGHT_PLATFORM", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "BACKLIGHT_FIRMWARE", value: 3, isUnsigned: true)
!159 = !DIEnumerator(name: "BACKLIGHT_TYPE_MAX", value: 4, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backlight_scale", file: !154, line: 90, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "BACKLIGHT_SCALE_UNKNOWN", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "BACKLIGHT_SCALE_LINEAR", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "BACKLIGHT_SCALE_NON_LINEAR", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "event_types", file: !3, line: 1177, baseType: !7, size: 32, elements: !166)
!166 = !{!167, !168, !169}
!167 = !DIEnumerator(name: "HOTKEY", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "KILLSWITCH", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "GFX_SWITCH", value: 3, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !171, line: 11, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!172 = !{!173, !174, !175}
!173 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!176 = !{!177, !178, !181, !183, !189, !109, !191, !193, !194, !195, !7, !197, !252, !253, !4468, !4496, !4510, !4525, !4787, !223, !4529}
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !180, line: 76, flags: DIFlagFwdDecl)
!180 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_status", file: !184, line: 421, baseType: !185)
!184 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !186, line: 21, baseType: !187)
!186 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !188, line: 27, baseType: !7)
!188 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !190, line: 148, baseType: !7)
!190 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!193 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!194 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !194)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !184, line: 899, size: 192, elements: !199)
!199 = !{!200, !202, !210, !216, !225, !231, !238, !246}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !198, file: !184, line: 900, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !184, line: 635, baseType: !185)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !198, file: !184, line: 904, baseType: !203, size: 128)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 901, size: 128, elements: !204)
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !203, file: !184, line: 902, baseType: !201, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !203, file: !184, line: 903, baseType: !207, size: 64, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !186, line: 23, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !188, line: 31, baseType: !209)
!209 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !198, file: !184, line: 910, baseType: !211, size: 128)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 906, size: 128, elements: !212)
!212 = !{!213, !214, !215}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !211, file: !184, line: 907, baseType: !201, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !211, file: !184, line: 908, baseType: !185, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !211, file: !184, line: 909, baseType: !181, size: 64, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !198, file: !184, line: 916, baseType: !217, size: 128)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 912, size: 128, elements: !218)
!218 = !{!219, !220, !221}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !217, file: !184, line: 913, baseType: !201, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !217, file: !184, line: 914, baseType: !185, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !217, file: !184, line: 915, baseType: !222, size: 64, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !186, line: 17, baseType: !224)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !188, line: 21, baseType: !192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !198, file: !184, line: 922, baseType: !226, size: 128)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 918, size: 128, elements: !227)
!227 = !{!228, !229, !230}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !226, file: !184, line: 919, baseType: !201, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !226, file: !184, line: 920, baseType: !185, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !226, file: !184, line: 921, baseType: !197, size: 64, offset: 64)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !198, file: !184, line: 928, baseType: !232, size: 128)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 924, size: 128, elements: !233)
!233 = !{!234, !235, !236}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !232, file: !184, line: 925, baseType: !201, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !232, file: !184, line: 926, baseType: !201, size: 32, offset: 32)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !232, file: !184, line: 927, baseType: !237, size: 64, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !184, line: 424, baseType: !177)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !198, file: !184, line: 935, baseType: !239, size: 192)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 930, size: 192, elements: !240)
!240 = !{!241, !242, !243, !245}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !239, file: !184, line: 931, baseType: !201, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !239, file: !184, line: 932, baseType: !185, size: 32, offset: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !239, file: !184, line: 933, baseType: !244, size: 64, offset: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !184, line: 128, baseType: !207)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !239, file: !184, line: 934, baseType: !185, size: 32, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !198, file: !184, line: 941, baseType: !247, size: 96)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !198, file: !184, line: 937, size: 96, elements: !248)
!248 = !{!249, !250, !251}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !247, file: !184, line: 938, baseType: !201, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !247, file: !184, line: 939, baseType: !185, size: 32, offset: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !247, file: !184, line: 940, baseType: !185, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_backlight_props", file: !3, line: 1008, size: 192, elements: !255)
!255 = !{!256, !4464, !4465, !4466, !4467}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !254, file: !3, line: 1009, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_device", file: !154, line: 280, size: 6912, elements: !259)
!259 = !{!260, !270, !306, !307, !4447, !4459, !4460, !4461, !4463}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !258, file: !154, line: 284, baseType: !261, size: 224)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_properties", file: !154, line: 182, size: 224, elements: !262)
!262 = !{!263, !264, !265, !266, !267, !268, !269}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "brightness", scope: !261, file: !154, line: 194, baseType: !109, size: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "max_brightness", scope: !261, file: !154, line: 203, baseType: !109, size: 32, offset: 32)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !261, file: !154, line: 219, baseType: !109, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "fb_blank", scope: !261, file: !154, line: 238, baseType: !109, size: 32, offset: 96)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !261, file: !154, line: 249, baseType: !153, size: 32, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !261, file: !154, line: 264, baseType: !7, size: 32, offset: 160)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !261, file: !154, line: 272, baseType: !160, size: 32, offset: 192)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "update_lock", scope: !258, file: !154, line: 294, baseType: !271, size: 192, offset: 256)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !272, line: 53, size: 192, elements: !273)
!272 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!273 = !{!274, !284, !300}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !271, file: !272, line: 54, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !276, line: 13, baseType: !277)
!276 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !190, line: 175, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !190, line: 173, size: 64, elements: !279)
!279 = !{!280}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !278, file: !190, line: 174, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !186, line: 22, baseType: !282)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !188, line: 30, baseType: !283)
!283 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !271, file: !272, line: 55, baseType: !285, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !286, line: 83, baseType: !287)
!286 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !286, line: 71, elements: !288)
!288 = !{!289}
!289 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !286, line: 72, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !287, file: !286, line: 72, elements: !291)
!291 = !{!292}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !290, file: !286, line: 73, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !286, line: 20, elements: !294)
!294 = !{!295}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !293, file: !286, line: 21, baseType: !296)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !297, line: 25, baseType: !298)
!297 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 25, elements: !299)
!299 = !{}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !271, file: !272, line: 59, baseType: !301, size: 128, offset: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !190, line: 178, size: 128, elements: !302)
!302 = !{!303, !305}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !301, file: !190, line: 179, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !301, file: !190, line: 179, baseType: !304, size: 64, offset: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "ops_lock", scope: !258, file: !154, line: 303, baseType: !271, size: 192, offset: 448)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !258, file: !154, line: 312, baseType: !308, size: 64, offset: 640)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backlight_ops", file: !154, line: 120, size: 256, elements: !311)
!311 = !{!312, !313, !317, !318}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !310, file: !154, line: 128, baseType: !7, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "update_status", scope: !310, file: !154, line: 146, baseType: !314, size: 64, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{!109, !257}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "get_brightness", scope: !310, file: !154, line: 160, baseType: !314, size: 64, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "check_fb", scope: !310, file: !154, line: 174, baseType: !319, size: 64, offset: 192)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!109, !257, !322}
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_info", file: !324, line: 437, size: 8128, elements: !325)
!324 = !DIFile(filename: "./include/linux/fb.h", directory: "/home/lizy2001/genbc/linux")
!325 = !{!326, !331, !332, !333, !334, !335, !336, !377, !403, !466, !478, !495, !496, !506, !507, !508, !509, !510, !514, !540, !555, !3522, !4346, !4347, !4348, !4424, !4429, !4430, !4431, !4432, !4433, !4434, !4446}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !323, file: !324, line: 438, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !190, line: 168, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !190, line: 166, size: 32, elements: !329)
!329 = !{!330}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !328, file: !190, line: 167, baseType: !109, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !323, file: !324, line: 439, baseType: !109, size: 32, offset: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !323, file: !324, line: 440, baseType: !109, size: 32, offset: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "fbcon_rotate_hint", scope: !323, file: !324, line: 445, baseType: !109, size: 32, offset: 96)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !323, file: !324, line: 446, baseType: !271, size: 192, offset: 128)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "mm_lock", scope: !323, file: !324, line: 447, baseType: !271, size: 192, offset: 320)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !323, file: !324, line: 448, baseType: !337, size: 1280, offset: 512)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_var_screeninfo", file: !338, line: 242, size: 1280, elements: !339)
!338 = !DIFile(filename: "./include/uapi/linux/fb.h", directory: "/home/lizy2001/genbc/linux")
!339 = !{!340, !341, !342, !343, !344, !345, !346, !347, !348, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !337, file: !338, line: 243, baseType: !187, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !337, file: !338, line: 244, baseType: !187, size: 32, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "xres_virtual", scope: !337, file: !338, line: 245, baseType: !187, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "yres_virtual", scope: !337, file: !338, line: 246, baseType: !187, size: 32, offset: 96)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "xoffset", scope: !337, file: !338, line: 247, baseType: !187, size: 32, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "yoffset", scope: !337, file: !338, line: 248, baseType: !187, size: 32, offset: 160)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_pixel", scope: !337, file: !338, line: 250, baseType: !187, size: 32, offset: 192)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "grayscale", scope: !337, file: !338, line: 251, baseType: !187, size: 32, offset: 224)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !337, file: !338, line: 253, baseType: !349, size: 96, offset: 256)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_bitfield", file: !338, line: 188, size: 96, elements: !350)
!350 = !{!351, !352, !353}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !349, file: !338, line: 189, baseType: !187, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !349, file: !338, line: 190, baseType: !187, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "msb_right", scope: !349, file: !338, line: 191, baseType: !187, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !337, file: !338, line: 254, baseType: !349, size: 96, offset: 352)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !337, file: !338, line: 255, baseType: !349, size: 96, offset: 448)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !337, file: !338, line: 256, baseType: !349, size: 96, offset: 544)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "nonstd", scope: !337, file: !338, line: 258, baseType: !187, size: 32, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !337, file: !338, line: 260, baseType: !187, size: 32, offset: 672)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !337, file: !338, line: 262, baseType: !187, size: 32, offset: 704)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !337, file: !338, line: 263, baseType: !187, size: 32, offset: 736)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "accel_flags", scope: !337, file: !338, line: 265, baseType: !187, size: 32, offset: 768)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "pixclock", scope: !337, file: !338, line: 268, baseType: !187, size: 32, offset: 800)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "left_margin", scope: !337, file: !338, line: 269, baseType: !187, size: 32, offset: 832)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "right_margin", scope: !337, file: !338, line: 270, baseType: !187, size: 32, offset: 864)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "upper_margin", scope: !337, file: !338, line: 271, baseType: !187, size: 32, offset: 896)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "lower_margin", scope: !337, file: !338, line: 272, baseType: !187, size: 32, offset: 928)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_len", scope: !337, file: !338, line: 273, baseType: !187, size: 32, offset: 960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_len", scope: !337, file: !338, line: 274, baseType: !187, size: 32, offset: 992)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !337, file: !338, line: 275, baseType: !187, size: 32, offset: 1024)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "vmode", scope: !337, file: !338, line: 276, baseType: !187, size: 32, offset: 1056)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "rotate", scope: !337, file: !338, line: 277, baseType: !187, size: 32, offset: 1088)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !337, file: !338, line: 278, baseType: !187, size: 32, offset: 1120)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !337, file: !338, line: 279, baseType: !374, size: 128, offset: 1152)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 128, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 4)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "fix", scope: !323, file: !324, line: 449, baseType: !378, size: 640, offset: 1792)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_fix_screeninfo", file: !338, line: 157, size: 640, elements: !379)
!379 = !{!380, !384, !385, !386, !387, !388, !389, !392, !393, !394, !395, !396, !397, !398, !399}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !378, file: !338, line: 158, baseType: !381, size: 128)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 128, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 16)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "smem_start", scope: !378, file: !338, line: 159, baseType: !193, size: 64, offset: 128)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "smem_len", scope: !378, file: !338, line: 161, baseType: !187, size: 32, offset: 192)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !378, file: !338, line: 162, baseType: !187, size: 32, offset: 224)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "type_aux", scope: !378, file: !338, line: 163, baseType: !187, size: 32, offset: 256)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "visual", scope: !378, file: !338, line: 164, baseType: !187, size: 32, offset: 288)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "xpanstep", scope: !378, file: !338, line: 165, baseType: !390, size: 16, offset: 320)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !188, line: 24, baseType: !391)
!391 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "ypanstep", scope: !378, file: !338, line: 166, baseType: !390, size: 16, offset: 336)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ywrapstep", scope: !378, file: !338, line: 167, baseType: !390, size: 16, offset: 352)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "line_length", scope: !378, file: !338, line: 168, baseType: !187, size: 32, offset: 384)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_start", scope: !378, file: !338, line: 169, baseType: !193, size: 64, offset: 448)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_len", scope: !378, file: !338, line: 171, baseType: !187, size: 32, offset: 512)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "accel", scope: !378, file: !338, line: 172, baseType: !187, size: 32, offset: 544)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !378, file: !338, line: 174, baseType: !390, size: 16, offset: 576)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !378, file: !338, line: 175, baseType: !400, size: 32, offset: 592)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 32, elements: !401)
!401 = !{!402}
!402 = !DISubrange(count: 2)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "monspecs", scope: !323, file: !324, line: 450, baseType: !404, size: 1152, offset: 2432)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_monspecs", file: !324, line: 63, size: 1152, elements: !405)
!405 = !{!406, !417, !437, !439, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "chroma", scope: !404, file: !324, line: 64, baseType: !407, size: 256)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_chroma", file: !324, line: 52, size: 256, elements: !408)
!408 = !{!409, !410, !411, !412, !413, !414, !415, !416}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "redx", scope: !407, file: !324, line: 53, baseType: !187, size: 32)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "greenx", scope: !407, file: !324, line: 54, baseType: !187, size: 32, offset: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "bluex", scope: !407, file: !324, line: 55, baseType: !187, size: 32, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "whitex", scope: !407, file: !324, line: 56, baseType: !187, size: 32, offset: 96)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "redy", scope: !407, file: !324, line: 57, baseType: !187, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "greeny", scope: !407, file: !324, line: 58, baseType: !187, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "bluey", scope: !407, file: !324, line: 59, baseType: !187, size: 32, offset: 192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "whitey", scope: !407, file: !324, line: 60, baseType: !187, size: 32, offset: 224)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "modedb", scope: !404, file: !324, line: 65, baseType: !418, size: 64, offset: 256)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_videomode", file: !324, line: 766, size: 512, elements: !420)
!420 = !{!421, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !419, file: !324, line: 767, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !419, file: !324, line: 768, baseType: !185, size: 32, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !419, file: !324, line: 769, baseType: !185, size: 32, offset: 96)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !419, file: !324, line: 770, baseType: !185, size: 32, offset: 128)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pixclock", scope: !419, file: !324, line: 771, baseType: !185, size: 32, offset: 160)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "left_margin", scope: !419, file: !324, line: 772, baseType: !185, size: 32, offset: 192)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "right_margin", scope: !419, file: !324, line: 773, baseType: !185, size: 32, offset: 224)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "upper_margin", scope: !419, file: !324, line: 774, baseType: !185, size: 32, offset: 256)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "lower_margin", scope: !419, file: !324, line: 775, baseType: !185, size: 32, offset: 288)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_len", scope: !419, file: !324, line: 776, baseType: !185, size: 32, offset: 320)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_len", scope: !419, file: !324, line: 777, baseType: !185, size: 32, offset: 352)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !419, file: !324, line: 778, baseType: !185, size: 32, offset: 384)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "vmode", scope: !419, file: !324, line: 779, baseType: !185, size: 32, offset: 416)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !419, file: !324, line: 780, baseType: !185, size: 32, offset: 448)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !404, file: !324, line: 66, baseType: !438, size: 32, offset: 320)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 32, elements: !375)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !404, file: !324, line: 67, baseType: !440, size: 112, offset: 352)
!440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 112, elements: !441)
!441 = !{!442}
!442 = !DISubrange(count: 14)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "serial_no", scope: !404, file: !324, line: 68, baseType: !440, size: 112, offset: 464)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !404, file: !324, line: 69, baseType: !440, size: 112, offset: 576)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "modedb_len", scope: !404, file: !324, line: 70, baseType: !187, size: 32, offset: 704)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !404, file: !324, line: 71, baseType: !187, size: 32, offset: 736)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !404, file: !324, line: 72, baseType: !187, size: 32, offset: 768)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !404, file: !324, line: 73, baseType: !187, size: 32, offset: 800)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "week", scope: !404, file: !324, line: 74, baseType: !187, size: 32, offset: 832)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "hfmin", scope: !404, file: !324, line: 75, baseType: !187, size: 32, offset: 864)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "hfmax", scope: !404, file: !324, line: 76, baseType: !187, size: 32, offset: 896)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "dclkmin", scope: !404, file: !324, line: 77, baseType: !187, size: 32, offset: 928)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "dclkmax", scope: !404, file: !324, line: 78, baseType: !187, size: 32, offset: 960)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !404, file: !324, line: 79, baseType: !390, size: 16, offset: 992)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !404, file: !324, line: 80, baseType: !390, size: 16, offset: 1008)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !404, file: !324, line: 81, baseType: !390, size: 16, offset: 1024)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "vfmin", scope: !404, file: !324, line: 82, baseType: !390, size: 16, offset: 1040)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "vfmax", scope: !404, file: !324, line: 83, baseType: !390, size: 16, offset: 1056)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !404, file: !324, line: 84, baseType: !390, size: 16, offset: 1072)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "gtf", scope: !404, file: !324, line: 85, baseType: !390, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !404, file: !324, line: 86, baseType: !390, size: 16, offset: 1104)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !404, file: !324, line: 87, baseType: !224, size: 8, offset: 1120)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !404, file: !324, line: 88, baseType: !224, size: 8, offset: 1128)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "max_x", scope: !404, file: !324, line: 89, baseType: !224, size: 8, offset: 1136)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "max_y", scope: !404, file: !324, line: 90, baseType: !224, size: 8, offset: 1144)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !323, file: !324, line: 451, baseType: !467, size: 256, offset: 3584)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !468, line: 102, size: 256, elements: !469)
!468 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!469 = !{!470, !471, !472}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !467, file: !468, line: 103, baseType: !275, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !467, file: !468, line: 104, baseType: !301, size: 128, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !467, file: !468, line: 105, baseType: !473, size: 64, offset: 192)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !468, line: 21, baseType: !474)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{null, !477}
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "pixmap", scope: !323, file: !324, line: 452, baseType: !479, size: 448, offset: 3840)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_pixmap", file: !324, line: 185, size: 448, elements: !480)
!480 = !{!481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !494}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !479, file: !324, line: 186, baseType: !222, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !479, file: !324, line: 187, baseType: !185, size: 32, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !479, file: !324, line: 188, baseType: !185, size: 32, offset: 96)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "buf_align", scope: !479, file: !324, line: 189, baseType: !185, size: 32, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "scan_align", scope: !479, file: !324, line: 190, baseType: !185, size: 32, offset: 160)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "access_align", scope: !479, file: !324, line: 191, baseType: !185, size: 32, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !479, file: !324, line: 192, baseType: !185, size: 32, offset: 224)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "blit_x", scope: !479, file: !324, line: 193, baseType: !185, size: 32, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "blit_y", scope: !479, file: !324, line: 194, baseType: !185, size: 32, offset: 288)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "writeio", scope: !479, file: !324, line: 198, baseType: !491, size: 64, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{null, !322, !177, !177, !7}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "readio", scope: !479, file: !324, line: 199, baseType: !491, size: 64, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "sprite", scope: !323, file: !324, line: 453, baseType: !479, size: 448, offset: 4288)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !323, file: !324, line: 454, baseType: !497, size: 320, offset: 4736)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_cmap", file: !338, line: 282, size: 320, elements: !498)
!498 = !{!499, !500, !501, !503, !504, !505}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !497, file: !338, line: 283, baseType: !187, size: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !497, file: !338, line: 284, baseType: !187, size: 32, offset: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !497, file: !338, line: 285, baseType: !502, size: 64, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !497, file: !338, line: 286, baseType: !502, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !497, file: !338, line: 287, baseType: !502, size: 64, offset: 192)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !497, file: !338, line: 288, baseType: !502, size: 64, offset: 256)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "modelist", scope: !323, file: !324, line: 455, baseType: !301, size: 128, offset: 5056)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !323, file: !324, line: 456, baseType: !418, size: 64, offset: 5184)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "bl_dev", scope: !323, file: !324, line: 462, baseType: !257, size: 64, offset: 5248)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "bl_curve_mutex", scope: !323, file: !324, line: 465, baseType: !271, size: 192, offset: 5312)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "bl_curve", scope: !323, file: !324, line: 466, baseType: !511, size: 1024, offset: 5504)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 1024, elements: !512)
!512 = !{!513}
!513 = !DISubrange(count: 128)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_work", scope: !323, file: !324, line: 469, baseType: !515, size: 704, offset: 6528)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !468, line: 115, size: 704, elements: !516)
!516 = !{!517, !518, !536, !539}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !515, file: !468, line: 116, baseType: !467, size: 256)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !515, file: !468, line: 117, baseType: !519, size: 320, offset: 256)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !520, line: 11, size: 320, elements: !521)
!520 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!521 = !{!522, !529, !530, !535}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !519, file: !520, line: 16, baseType: !523, size: 128)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !190, line: 186, size: 128, elements: !524)
!524 = !{!525, !527}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !523, file: !190, line: 187, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !523, file: !190, line: 187, baseType: !528, size: 64, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !519, file: !520, line: 17, baseType: !193, size: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !519, file: !520, line: 18, baseType: !531, size: 64, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{null, !534}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !519, file: !520, line: 19, baseType: !185, size: 32, offset: 256)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !515, file: !468, line: 120, baseType: !537, size: 64, offset: 576)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !468, line: 18, flags: DIFlagFwdDecl)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !515, file: !468, line: 121, baseType: !109, size: 32, offset: 640)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "fbdefio", scope: !323, file: !324, line: 470, baseType: !541, size: 64, offset: 7232)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_deferred_io", file: !324, line: 203, size: 512, elements: !543)
!543 = !{!544, !545, !546, !547, !551}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !542, file: !324, line: 205, baseType: !193, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !542, file: !324, line: 206, baseType: !271, size: 192, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "pagelist", scope: !542, file: !324, line: 207, baseType: !301, size: 128, offset: 256)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "first_io", scope: !542, file: !324, line: 209, baseType: !548, size: 64, offset: 384)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DISubroutineType(types: !550)
!550 = !{null, !322}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_io", scope: !542, file: !324, line: 210, baseType: !552, size: 64, offset: 448)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DISubroutineType(types: !554)
!554 = !{null, !322, !304}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "fbops", scope: !323, file: !324, line: 473, baseType: !556, size: 64, offset: 7296)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_ops", file: !324, line: 228, size: 1472, elements: !559)
!559 = !{!560, !561, !565, !566, !580, !584, !589, !593, !597, !602, !606, !607, !621, !635, !652, !669, !670, !674, !675, !3508, !3519, !3520, !3521}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !558, file: !324, line: 230, baseType: !178, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "fb_open", scope: !558, file: !324, line: 231, baseType: !562, size: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!109, !322, !109}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "fb_release", scope: !558, file: !324, line: 232, baseType: !562, size: 64, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "fb_read", scope: !558, file: !324, line: 237, baseType: !567, size: 64, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!570, !322, !181, !574, !577}
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !190, line: 60, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !572, line: 73, baseType: !573)
!572 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !572, line: 15, baseType: !194)
!574 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !190, line: 55, baseType: !575)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !572, line: 72, baseType: !576)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !572, line: 16, baseType: !193)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !190, line: 46, baseType: !579)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !572, line: 88, baseType: !283)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fb_write", scope: !558, file: !324, line: 239, baseType: !581, size: 64, offset: 256)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!570, !322, !422, !574, !577}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "fb_check_var", scope: !558, file: !324, line: 244, baseType: !585, size: 64, offset: 320)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{!109, !588, !322}
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "fb_set_par", scope: !558, file: !324, line: 247, baseType: !590, size: 64, offset: 384)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!109, !322}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "fb_setcolreg", scope: !558, file: !324, line: 250, baseType: !594, size: 64, offset: 448)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!109, !7, !7, !7, !7, !7, !322}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "fb_setcmap", scope: !558, file: !324, line: 254, baseType: !598, size: 64, offset: 512)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!109, !601, !322}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "fb_blank", scope: !558, file: !324, line: 257, baseType: !603, size: 64, offset: 576)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!109, !109, !322}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "fb_pan_display", scope: !558, file: !324, line: 260, baseType: !585, size: 64, offset: 640)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "fb_fillrect", scope: !558, file: !324, line: 263, baseType: !608, size: 64, offset: 704)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{null, !322, !611}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_fillrect", file: !338, line: 351, size: 192, elements: !614)
!614 = !{!615, !616, !617, !618, !619, !620}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !613, file: !338, line: 352, baseType: !187, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !613, file: !338, line: 353, baseType: !187, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !613, file: !338, line: 354, baseType: !187, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !613, file: !338, line: 355, baseType: !187, size: 32, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !613, file: !338, line: 356, baseType: !187, size: 32, offset: 128)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !613, file: !338, line: 357, baseType: !187, size: 32, offset: 160)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "fb_copyarea", scope: !558, file: !324, line: 265, baseType: !622, size: 64, offset: 768)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DISubroutineType(types: !624)
!624 = !{null, !322, !625}
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_copyarea", file: !338, line: 342, size: 192, elements: !628)
!628 = !{!629, !630, !631, !632, !633, !634}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !627, file: !338, line: 343, baseType: !187, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !627, file: !338, line: 344, baseType: !187, size: 32, offset: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !627, file: !338, line: 345, baseType: !187, size: 32, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !627, file: !338, line: 346, baseType: !187, size: 32, offset: 96)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !627, file: !338, line: 347, baseType: !187, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !627, file: !338, line: 348, baseType: !187, size: 32, offset: 160)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "fb_imageblit", scope: !558, file: !324, line: 267, baseType: !636, size: 64, offset: 832)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DISubroutineType(types: !638)
!638 = !{null, !322, !639}
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_image", file: !338, line: 360, size: 640, elements: !642)
!642 = !{!643, !644, !645, !646, !647, !648, !649, !650, !651}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !641, file: !338, line: 361, baseType: !187, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !641, file: !338, line: 362, baseType: !187, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !641, file: !338, line: 363, baseType: !187, size: 32, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !641, file: !338, line: 364, baseType: !187, size: 32, offset: 96)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "fg_color", scope: !641, file: !338, line: 365, baseType: !187, size: 32, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "bg_color", scope: !641, file: !338, line: 366, baseType: !187, size: 32, offset: 160)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !641, file: !338, line: 367, baseType: !224, size: 8, offset: 192)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !641, file: !338, line: 368, baseType: !422, size: 64, offset: 256)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "cmap", scope: !641, file: !338, line: 369, baseType: !497, size: 320, offset: 320)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "fb_cursor", scope: !558, file: !324, line: 270, baseType: !653, size: 64, offset: 896)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{!109, !322, !656}
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_cursor", file: !338, line: 388, size: 832, elements: !658)
!658 = !{!659, !660, !661, !662, !663, !668}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !657, file: !338, line: 389, baseType: !390, size: 16)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !657, file: !338, line: 390, baseType: !390, size: 16, offset: 16)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !657, file: !338, line: 391, baseType: !390, size: 16, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !657, file: !338, line: 392, baseType: !422, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "hot", scope: !657, file: !338, line: 393, baseType: !664, size: 32, offset: 128)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fbcurpos", file: !338, line: 384, size: 32, elements: !665)
!665 = !{!666, !667}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !664, file: !338, line: 385, baseType: !390, size: 16)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !664, file: !338, line: 385, baseType: !390, size: 16, offset: 16)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !657, file: !338, line: 394, baseType: !641, size: 640, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "fb_sync", scope: !558, file: !324, line: 273, baseType: !590, size: 64, offset: 960)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "fb_ioctl", scope: !558, file: !324, line: 276, baseType: !671, size: 64, offset: 1024)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!109, !322, !7, !193}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "fb_compat_ioctl", scope: !558, file: !324, line: 280, baseType: !671, size: 64, offset: 1088)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fb_mmap", scope: !558, file: !324, line: 284, baseType: !676, size: 64, offset: 1152)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!109, !322, !679}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !681, line: 305, size: 1472, elements: !682)
!681 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !684, !685, !686, !687, !695, !696, !3441, !3447, !3448, !3453, !3454, !3457, !3502, !3503, !3504, !3505, !3506}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !680, file: !681, line: 308, baseType: !193, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !680, file: !681, line: 309, baseType: !193, size: 64, offset: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !680, file: !681, line: 313, baseType: !679, size: 64, offset: 128)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !680, file: !681, line: 313, baseType: !679, size: 64, offset: 192)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !680, file: !681, line: 315, baseType: !688, size: 192, align: 64, offset: 256)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !689, line: 24, size: 192, align: 64, elements: !690)
!689 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!690 = !{!691, !692, !694}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !688, file: !689, line: 25, baseType: !193, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !688, file: !689, line: 26, baseType: !693, size: 64, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !688, file: !689, line: 27, baseType: !693, size: 64, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !680, file: !681, line: 323, baseType: !193, size: 64, offset: 448)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !680, file: !681, line: 327, baseType: !697, size: 64, offset: 512)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !681, line: 388, size: 7296, elements: !699)
!699 = !{!700, !3437}
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !681, line: 389, baseType: !701, size: 7296)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !698, file: !681, line: 389, size: 7296, elements: !702)
!702 = !{!703, !704, !708, !709, !3316, !3317, !3318, !3319, !3320, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3361, !3366, !3369, !3408, !3409, !3421, !3422, !3425, !3426, !3427, !3430, !3431, !3432, !3435, !3436}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !701, file: !681, line: 390, baseType: !679, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !701, file: !681, line: 391, baseType: !705, size: 64, offset: 64)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !689, line: 31, size: 64, elements: !706)
!706 = !{!707}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !705, file: !689, line: 32, baseType: !693, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !701, file: !681, line: 392, baseType: !207, size: 64, offset: 128)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !701, file: !681, line: 394, baseType: !710, size: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!193, !713, !193, !193, !193, !193}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !715)
!715 = !{!716, !734, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3299, !3300, !3309, !3310, !3311, !3312, !3313, !3314, !3315}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !714, file: !44, line: 920, baseType: !717, size: 128)
!717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !714, file: !44, line: 917, size: 128, elements: !718)
!718 = !{!719, !725}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !717, file: !44, line: 918, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !721, line: 58, size: 64, elements: !722)
!721 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!722 = !{!723}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !720, file: !721, line: 59, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !717, file: !44, line: 919, baseType: !726, size: 128, align: 64)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !190, line: 216, size: 128, align: 64, elements: !727)
!727 = !{!728, !730}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !726, file: !190, line: 217, baseType: !729, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !726, file: !190, line: 218, baseType: !731, size: 64, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{null, !729}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !714, file: !44, line: 921, baseType: !735, size: 128, offset: 128)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !736, line: 8, size: 128, elements: !737)
!736 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!737 = !{!738, !742}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !735, file: !736, line: 9, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !741, line: 18, flags: DIFlagFwdDecl)
!741 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!742 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !735, file: !736, line: 10, baseType: !743, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !741, line: 89, size: 1536, elements: !745)
!745 = !{!746, !747, !757, !765, !766, !781, !3249, !3251, !3263, !3264, !3265, !3266, !3267, !3273, !3274, !3275}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !744, file: !741, line: 91, baseType: !7, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !744, file: !741, line: 92, baseType: !748, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !749, line: 277, baseType: !750)
!749 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !749, line: 277, size: 32, elements: !751)
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !750, file: !749, line: 277, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !749, line: 70, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !749, line: 65, size: 32, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !754, file: !749, line: 66, baseType: !7, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !744, file: !741, line: 93, baseType: !758, size: 128, offset: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !759, line: 38, size: 128, elements: !760)
!759 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!760 = !{!761, !763}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !758, file: !759, line: 39, baseType: !762, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !758, file: !759, line: 39, baseType: !764, size: 64, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !744, file: !741, line: 94, baseType: !743, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !744, file: !741, line: 95, baseType: !767, size: 128, offset: 256)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !741, line: 47, size: 128, elements: !768)
!768 = !{!769, !778}
!769 = !DIDerivedType(tag: DW_TAG_member, scope: !767, file: !741, line: 48, baseType: !770, size: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !767, file: !741, line: 48, size: 64, elements: !771)
!771 = !{!772, !777}
!772 = !DIDerivedType(tag: DW_TAG_member, scope: !770, file: !741, line: 49, baseType: !773, size: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !770, file: !741, line: 49, size: 64, elements: !774)
!774 = !{!775, !776}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !773, file: !741, line: 50, baseType: !185, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !773, file: !741, line: 50, baseType: !185, size: 32, offset: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !770, file: !741, line: 52, baseType: !207, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !767, file: !741, line: 54, baseType: !779, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !744, file: !741, line: 96, baseType: !782, size: 64, offset: 384)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !784)
!784 = !{!785, !787, !788, !796, !803, !804, !948, !2961, !2962, !2963, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3225, !3233, !3234, !3235, !3245, !3246, !3247, !3248}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !783, file: !44, line: 611, baseType: !786, size: 16)
!786 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !190, line: 19, baseType: !391)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !783, file: !44, line: 612, baseType: !391, size: 16, offset: 16)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !783, file: !44, line: 613, baseType: !789, size: 32, offset: 32)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !790, line: 23, baseType: !791)
!790 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 21, size: 32, elements: !792)
!792 = !{!793}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !791, file: !790, line: 22, baseType: !794, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !190, line: 32, baseType: !795)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !572, line: 49, baseType: !7)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !783, file: !44, line: 614, baseType: !797, size: 32, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !790, line: 28, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !790, line: 26, size: 32, elements: !799)
!799 = !{!800}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !798, file: !790, line: 27, baseType: !801, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !190, line: 33, baseType: !802)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !572, line: 50, baseType: !7)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !783, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !783, file: !44, line: 622, baseType: !805, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !808)
!808 = !{!809, !813, !826, !830, !836, !840, !846, !850, !854, !858, !862, !863, !869, !873, !895, !924, !928, !934, !939, !943, !944}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !807, file: !44, line: 1865, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!743, !782, !743, !7}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !807, file: !44, line: 1866, baseType: !814, size: 64, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!422, !743, !782, !817}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !819, line: 10, size: 128, elements: !820)
!819 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!820 = !{!821, !825}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !818, file: !819, line: 11, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{null, !177}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !818, file: !819, line: 12, baseType: !177, size: 64, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !807, file: !44, line: 1867, baseType: !827, size: 64, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!109, !782, !109}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !807, file: !44, line: 1868, baseType: !831, size: 64, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!834, !782, !109}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !807, file: !44, line: 1870, baseType: !837, size: 64, offset: 256)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!109, !743, !181, !109}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !807, file: !44, line: 1872, baseType: !841, size: 64, offset: 320)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!109, !782, !743, !786, !844}
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !190, line: 30, baseType: !845)
!845 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !807, file: !44, line: 1873, baseType: !847, size: 64, offset: 384)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!109, !743, !782, !743}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !807, file: !44, line: 1874, baseType: !851, size: 64, offset: 448)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!109, !782, !743}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !807, file: !44, line: 1875, baseType: !855, size: 64, offset: 512)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!109, !782, !743, !422}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !807, file: !44, line: 1876, baseType: !859, size: 64, offset: 576)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!109, !782, !743, !786}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !807, file: !44, line: 1877, baseType: !851, size: 64, offset: 640)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !807, file: !44, line: 1878, baseType: !864, size: 64, offset: 704)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!109, !782, !743, !786, !867}
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !190, line: 16, baseType: !868)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !190, line: 13, baseType: !185)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !807, file: !44, line: 1879, baseType: !870, size: 64, offset: 768)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{!109, !782, !743, !782, !743, !7}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !807, file: !44, line: 1881, baseType: !874, size: 64, offset: 832)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!109, !743, !877}
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !879)
!879 = !{!880, !881, !882, !883, !884, !885, !892, !893, !894}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !878, file: !44, line: 220, baseType: !7, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !878, file: !44, line: 221, baseType: !786, size: 16, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !878, file: !44, line: 222, baseType: !789, size: 32, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !878, file: !44, line: 223, baseType: !797, size: 32, offset: 96)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !878, file: !44, line: 224, baseType: !578, size: 64, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !878, file: !44, line: 225, baseType: !886, size: 128, offset: 192)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !887, line: 13, size: 128, elements: !888)
!887 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!888 = !{!889, !891}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !886, file: !887, line: 14, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !887, line: 8, baseType: !282)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !886, file: !887, line: 15, baseType: !194, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !878, file: !44, line: 226, baseType: !886, size: 128, offset: 320)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !878, file: !44, line: 227, baseType: !886, size: 128, offset: 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !878, file: !44, line: 234, baseType: !713, size: 64, offset: 576)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !807, file: !44, line: 1882, baseType: !896, size: 64, offset: 896)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!109, !899, !901, !185, !7}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !903, line: 22, size: 1152, elements: !904)
!903 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!904 = !{!905, !906, !907, !908, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !902, file: !903, line: 23, baseType: !185, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !902, file: !903, line: 24, baseType: !786, size: 16, offset: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !902, file: !903, line: 25, baseType: !7, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !902, file: !903, line: 26, baseType: !909, size: 32, offset: 96)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !190, line: 104, baseType: !185)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !902, file: !903, line: 27, baseType: !207, size: 64, offset: 128)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !902, file: !903, line: 28, baseType: !207, size: 64, offset: 192)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !902, file: !903, line: 37, baseType: !207, size: 64, offset: 256)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !902, file: !903, line: 38, baseType: !867, size: 32, offset: 320)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !902, file: !903, line: 39, baseType: !867, size: 32, offset: 352)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !902, file: !903, line: 40, baseType: !789, size: 32, offset: 384)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !902, file: !903, line: 41, baseType: !797, size: 32, offset: 416)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !902, file: !903, line: 42, baseType: !578, size: 64, offset: 448)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !902, file: !903, line: 43, baseType: !886, size: 128, offset: 512)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !902, file: !903, line: 44, baseType: !886, size: 128, offset: 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !902, file: !903, line: 45, baseType: !886, size: 128, offset: 768)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !902, file: !903, line: 46, baseType: !886, size: 128, offset: 896)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !902, file: !903, line: 47, baseType: !207, size: 64, offset: 1024)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !902, file: !903, line: 48, baseType: !207, size: 64, offset: 1088)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !807, file: !44, line: 1883, baseType: !925, size: 64, offset: 960)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DISubroutineType(types: !927)
!927 = !{!570, !743, !181, !574}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !807, file: !44, line: 1884, baseType: !929, size: 64, offset: 1024)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!109, !782, !932, !207, !207}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !807, file: !44, line: 1886, baseType: !935, size: 64, offset: 1088)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!109, !782, !938, !109}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !807, file: !44, line: 1887, baseType: !940, size: 64, offset: 1152)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!109, !782, !743, !713, !7, !786}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !807, file: !44, line: 1890, baseType: !859, size: 64, offset: 1216)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !807, file: !44, line: 1891, baseType: !945, size: 64, offset: 1280)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!109, !782, !834, !109}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !783, file: !44, line: 623, baseType: !949, size: 64, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !957, !1000, !1444, !1526, !1609, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1625, !1629, !1630, !1633, !1637, !1640, !1641, !1642, !1683, !2833, !2834, !2835, !2836, !2837, !2838, !2841, !2843, !2850, !2851, !2853, !2854, !2855, !2914, !2915, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !950, file: !44, line: 1417, baseType: !301, size: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !950, file: !44, line: 1418, baseType: !867, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !950, file: !44, line: 1419, baseType: !192, size: 8, offset: 160)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !950, file: !44, line: 1420, baseType: !193, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !950, file: !44, line: 1421, baseType: !578, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !950, file: !44, line: 1422, baseType: !958, size: 64, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !960)
!960 = !{!961, !962, !963, !970, !974, !978, !982, !983, !984, !988, !991, !992, !993, !997, !998, !999}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !959, file: !44, line: 2229, baseType: !422, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !959, file: !44, line: 2230, baseType: !109, size: 32, offset: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !959, file: !44, line: 2238, baseType: !964, size: 64, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!109, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !969, line: 28, flags: DIFlagFwdDecl)
!969 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!970 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !959, file: !44, line: 2239, baseType: !971, size: 64, offset: 192)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !959, file: !44, line: 2240, baseType: !975, size: 64, offset: 256)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!743, !958, !109, !422, !177}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !959, file: !44, line: 2242, baseType: !979, size: 64, offset: 320)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !949}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !959, file: !44, line: 2243, baseType: !178, size: 64, offset: 384)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !959, file: !44, line: 2244, baseType: !958, size: 64, offset: 448)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !959, file: !44, line: 2245, baseType: !985, size: 64, offset: 512)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !190, line: 182, size: 64, elements: !986)
!986 = !{!987}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !985, file: !190, line: 183, baseType: !526, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !959, file: !44, line: 2247, baseType: !989, offset: 576)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !990, line: 187, elements: !299)
!990 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!991 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !959, file: !44, line: 2248, baseType: !989, offset: 576)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !959, file: !44, line: 2249, baseType: !989, offset: 576)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !959, file: !44, line: 2250, baseType: !994, offset: 576)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !989, elements: !995)
!995 = !{!996}
!996 = !DISubrange(count: 3)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !959, file: !44, line: 2252, baseType: !989, offset: 576)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !959, file: !44, line: 2253, baseType: !989, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !959, file: !44, line: 2254, baseType: !989, offset: 576)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !950, file: !44, line: 1423, baseType: !1001, size: 64, offset: 384)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !1004)
!1004 = !{!1005, !1009, !1013, !1014, !1018, !1024, !1028, !1029, !1030, !1034, !1038, !1039, !1040, !1041, !1047, !1052, !1053, !1060, !1061, !1062, !1063, !1428, !1443}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1003, file: !44, line: 1936, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!782, !949}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1003, file: !44, line: 1937, baseType: !1010, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{null, !782}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1003, file: !44, line: 1938, baseType: !1010, size: 64, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1003, file: !44, line: 1940, baseType: !1015, size: 64, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{null, !782, !109}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1003, file: !44, line: 1941, baseType: !1019, size: 64, offset: 256)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!109, !782, !1022}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1003, file: !44, line: 1942, baseType: !1025, size: 64, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!109, !782}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1003, file: !44, line: 1943, baseType: !1010, size: 64, offset: 384)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1003, file: !44, line: 1944, baseType: !979, size: 64, offset: 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1003, file: !44, line: 1945, baseType: !1031, size: 64, offset: 512)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!109, !949, !109}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1003, file: !44, line: 1946, baseType: !1035, size: 64, offset: 576)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!109, !949}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1003, file: !44, line: 1947, baseType: !1035, size: 64, offset: 640)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1003, file: !44, line: 1948, baseType: !1035, size: 64, offset: 704)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1003, file: !44, line: 1949, baseType: !1035, size: 64, offset: 768)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1003, file: !44, line: 1950, baseType: !1042, size: 64, offset: 832)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!109, !743, !1045}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1003, file: !44, line: 1951, baseType: !1048, size: 64, offset: 896)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!109, !949, !1051, !181}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1003, file: !44, line: 1952, baseType: !979, size: 64, offset: 960)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1003, file: !44, line: 1954, baseType: !1054, size: 64, offset: 1024)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!109, !1057, !743}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1059, line: 539, flags: DIFlagFwdDecl)
!1059 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1003, file: !44, line: 1955, baseType: !1054, size: 64, offset: 1088)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1003, file: !44, line: 1956, baseType: !1054, size: 64, offset: 1152)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1003, file: !44, line: 1957, baseType: !1054, size: 64, offset: 1216)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1003, file: !44, line: 1963, baseType: !1064, size: 64, offset: 1280)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!109, !949, !1067, !189}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !681, line: 68, size: 512, align: 128, elements: !1069)
!1069 = !{!1070, !1071, !1420, !1427}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1068, file: !681, line: 69, baseType: !193, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, scope: !1068, file: !681, line: 77, baseType: !1072, size: 320, offset: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1068, file: !681, line: 77, size: 320, elements: !1073)
!1073 = !{!1074, !1239, !1244, !1272, !1280, !1286, !1299, !1419}
!1074 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 78, baseType: !1075, size: 320)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 78, size: 320, elements: !1076)
!1076 = !{!1077, !1078, !1237, !1238}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1075, file: !681, line: 84, baseType: !301, size: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1075, file: !681, line: 86, baseType: !1079, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !1081)
!1081 = !{!1082, !1083, !1090, !1091, !1092, !1097, !1106, !1107, !1108, !1109, !1230, !1231, !1234, !1235, !1236}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1080, file: !44, line: 452, baseType: !782, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1080, file: !44, line: 453, baseType: !1084, size: 128, offset: 64)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1085, line: 292, size: 128, elements: !1086)
!1085 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1086 = !{!1087, !1088, !1089}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1084, file: !1085, line: 293, baseType: !285)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1084, file: !1085, line: 295, baseType: !189, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1084, file: !1085, line: 296, baseType: !177, size: 64, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1080, file: !44, line: 454, baseType: !189, size: 32, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1080, file: !44, line: 455, baseType: !327, size: 32, offset: 224)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1080, file: !44, line: 460, baseType: !1093, size: 128, offset: 256)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !689, line: 125, size: 128, elements: !1094)
!1094 = !{!1095, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1093, file: !689, line: 126, baseType: !705, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1093, file: !689, line: 127, baseType: !693, size: 64, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1080, file: !44, line: 461, baseType: !1098, size: 256, offset: 384)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1099, line: 35, size: 256, elements: !1100)
!1099 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1100 = !{!1101, !1102, !1103, !1105}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1098, file: !1099, line: 36, baseType: !275, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1098, file: !1099, line: 42, baseType: !275, size: 64, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1098, file: !1099, line: 46, baseType: !1104, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !286, line: 29, baseType: !293)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1098, file: !1099, line: 47, baseType: !301, size: 128, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1080, file: !44, line: 462, baseType: !193, size: 64, offset: 640)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1080, file: !44, line: 463, baseType: !193, size: 64, offset: 704)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1080, file: !44, line: 464, baseType: !193, size: 64, offset: 768)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1080, file: !44, line: 465, baseType: !1110, size: 64, offset: 832)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !1113)
!1113 = !{!1114, !1118, !1122, !1126, !1130, !1134, !1140, !1146, !1150, !1155, !1159, !1163, !1167, !1194, !1198, !1204, !1205, !1206, !1210, !1215, !1219, !1226}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1112, file: !44, line: 368, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!109, !1067, !1022}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1112, file: !44, line: 369, baseType: !1119, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!109, !713, !1067}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1112, file: !44, line: 372, baseType: !1123, size: 64, offset: 128)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!109, !1079, !1022}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1112, file: !44, line: 375, baseType: !1127, size: 64, offset: 192)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!109, !1067}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1112, file: !44, line: 381, baseType: !1131, size: 64, offset: 256)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!109, !713, !1079, !304, !7}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1112, file: !44, line: 383, baseType: !1135, size: 64, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !1138}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1112, file: !44, line: 385, baseType: !1141, size: 64, offset: 384)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!109, !713, !1079, !578, !7, !7, !1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1112, file: !44, line: 388, baseType: !1147, size: 64, offset: 448)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DISubroutineType(types: !1149)
!1149 = !{!109, !713, !1079, !578, !7, !7, !1067, !177}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1112, file: !44, line: 393, baseType: !1151, size: 64, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!1154, !1079, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !190, line: 125, baseType: !207)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1112, file: !44, line: 394, baseType: !1156, size: 64, offset: 576)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{null, !1067, !7, !7}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1112, file: !44, line: 395, baseType: !1160, size: 64, offset: 640)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!109, !1067, !189}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1112, file: !44, line: 396, baseType: !1164, size: 64, offset: 704)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{null, !1067}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1112, file: !44, line: 397, baseType: !1168, size: 64, offset: 768)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!570, !1171, !1192}
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1180, !1181, !1182, !1184, !1185}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1172, file: !44, line: 321, baseType: !713, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1172, file: !44, line: 326, baseType: !578, size: 64, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1172, file: !44, line: 327, baseType: !1177, size: 64, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{null, !1171, !194, !194}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1172, file: !44, line: 328, baseType: !177, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1172, file: !44, line: 329, baseType: !109, size: 32, offset: 256)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1172, file: !44, line: 330, baseType: !1183, size: 16, offset: 288)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !186, line: 19, baseType: !390)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1172, file: !44, line: 331, baseType: !1183, size: 16, offset: 304)
!1185 = !DIDerivedType(tag: DW_TAG_member, scope: !1172, file: !44, line: 332, baseType: !1186, size: 64, offset: 320)
!1186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1172, file: !44, line: 332, size: 64, elements: !1187)
!1187 = !{!1188, !1189}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1186, file: !44, line: 333, baseType: !7, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1186, file: !44, line: 334, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1112, file: !44, line: 402, baseType: !1195, size: 64, offset: 832)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!109, !1079, !1067, !1067, !5}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1112, file: !44, line: 404, baseType: !1199, size: 64, offset: 896)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!844, !1067, !1202}
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1203, line: 305, baseType: !7)
!1203 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1112, file: !44, line: 405, baseType: !1164, size: 64, offset: 960)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1112, file: !44, line: 406, baseType: !1127, size: 64, offset: 1024)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1112, file: !44, line: 407, baseType: !1207, size: 64, offset: 1088)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!109, !1067, !193, !193}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1112, file: !44, line: 409, baseType: !1211, size: 64, offset: 1152)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{null, !1067, !1214, !1214}
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1112, file: !44, line: 410, baseType: !1216, size: 64, offset: 1216)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!109, !1079, !1067}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1112, file: !44, line: 413, baseType: !1220, size: 64, offset: 1280)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!109, !1223, !713, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1112, file: !44, line: 415, baseType: !1227, size: 64, offset: 1344)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !713}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1080, file: !44, line: 466, baseType: !193, size: 64, offset: 896)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1080, file: !44, line: 467, baseType: !1232, size: 32, offset: 960)
!1232 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1233, line: 8, baseType: !185)
!1233 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1080, file: !44, line: 468, baseType: !285, offset: 992)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1080, file: !44, line: 469, baseType: !301, size: 128, offset: 1024)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1080, file: !44, line: 470, baseType: !177, size: 64, offset: 1152)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1075, file: !681, line: 87, baseType: !193, size: 64, offset: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1075, file: !681, line: 94, baseType: !193, size: 64, offset: 256)
!1239 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 96, baseType: !1240, size: 64)
!1240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 96, size: 64, elements: !1241)
!1241 = !{!1242}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1240, file: !681, line: 101, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !190, line: 143, baseType: !207)
!1244 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 103, baseType: !1245, size: 320)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 103, size: 320, elements: !1246)
!1246 = !{!1247, !1257, !1260, !1261}
!1247 = !DIDerivedType(tag: DW_TAG_member, scope: !1245, file: !681, line: 104, baseType: !1248, size: 128)
!1248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1245, file: !681, line: 104, size: 128, elements: !1249)
!1249 = !{!1250, !1251}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1248, file: !681, line: 105, baseType: !301, size: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, scope: !1248, file: !681, line: 106, baseType: !1252, size: 128)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1248, file: !681, line: 106, size: 128, elements: !1253)
!1253 = !{!1254, !1255, !1256}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1252, file: !681, line: 107, baseType: !1067, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1252, file: !681, line: 109, baseType: !109, size: 32, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1252, file: !681, line: 110, baseType: !109, size: 32, offset: 96)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1245, file: !681, line: 117, baseType: !1258, size: 64, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !681, line: 117, flags: DIFlagFwdDecl)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1245, file: !681, line: 119, baseType: !177, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, scope: !1245, file: !681, line: 120, baseType: !1262, size: 64, offset: 256)
!1262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1245, file: !681, line: 120, size: 64, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1262, file: !681, line: 121, baseType: !177, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1262, file: !681, line: 122, baseType: !193, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, scope: !1262, file: !681, line: 123, baseType: !1267, size: 32)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1262, file: !681, line: 123, size: 32, elements: !1268)
!1268 = !{!1269, !1270, !1271}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1267, file: !681, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1267, file: !681, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1267, file: !681, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1272 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 130, baseType: !1273, size: 192)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 130, size: 192, elements: !1274)
!1274 = !{!1275, !1276, !1277, !1278, !1279}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1273, file: !681, line: 131, baseType: !193, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1273, file: !681, line: 134, baseType: !192, size: 8, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1273, file: !681, line: 135, baseType: !192, size: 8, offset: 72)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1273, file: !681, line: 136, baseType: !327, size: 32, offset: 96)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1273, file: !681, line: 137, baseType: !7, size: 32, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 139, baseType: !1281, size: 256)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 139, size: 256, elements: !1282)
!1282 = !{!1283, !1284, !1285}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1281, file: !681, line: 140, baseType: !193, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1281, file: !681, line: 141, baseType: !327, size: 32, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1281, file: !681, line: 143, baseType: !301, size: 128, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 145, baseType: !1287, size: 256)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 145, size: 256, elements: !1288)
!1288 = !{!1289, !1290, !1292, !1293, !1298}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1287, file: !681, line: 146, baseType: !193, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1287, file: !681, line: 147, baseType: !1291, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1059, line: 509, baseType: !1067)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1287, file: !681, line: 148, baseType: !193, size: 64, offset: 128)
!1293 = !DIDerivedType(tag: DW_TAG_member, scope: !1287, file: !681, line: 149, baseType: !1294, size: 64, offset: 192)
!1294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1287, file: !681, line: 149, size: 64, elements: !1295)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1294, file: !681, line: 150, baseType: !697, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1294, file: !681, line: 151, baseType: !327, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1287, file: !681, line: 156, baseType: !285, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !681, line: 159, baseType: !1300, size: 128)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !681, line: 159, size: 128, elements: !1301)
!1301 = !{!1302, !1418}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !1300, file: !681, line: 161, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !1305)
!1305 = !{!1306, !1316, !1337, !1338, !1349, !1350, !1351, !1403, !1404, !1405}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !1304, file: !31, line: 111, baseType: !1307, size: 384)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !1308)
!1308 = !{!1309, !1311, !1312, !1313, !1314, !1315}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !1307, file: !31, line: 20, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !193)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !1307, file: !31, line: 21, baseType: !1310, size: 64, offset: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !1307, file: !31, line: 22, baseType: !1310, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1307, file: !31, line: 23, baseType: !193, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1307, file: !31, line: 24, baseType: !193, size: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1307, file: !31, line: 25, baseType: !193, size: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1304, file: !31, line: 112, baseType: !1317, size: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1319, line: 105, size: 128, elements: !1320)
!1319 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1320 = !{!1321, !1322}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1318, file: !1319, line: 110, baseType: !193, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1318, file: !1319, line: 118, baseType: !1323, size: 64, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1319, line: 95, size: 448, elements: !1325)
!1325 = !{!1326, !1327, !1332, !1333, !1334, !1335, !1336}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1324, file: !1319, line: 96, baseType: !275, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1324, file: !1319, line: 97, baseType: !1328, size: 64, offset: 64)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1319, line: 60, baseType: !1330)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{null, !1317}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1324, file: !1319, line: 98, baseType: !1328, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1324, file: !1319, line: 99, baseType: !844, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1324, file: !1319, line: 100, baseType: !844, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1324, file: !1319, line: 101, baseType: !726, size: 128, align: 64, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1324, file: !1319, line: 102, baseType: !1317, size: 64, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !1304, file: !31, line: 113, baseType: !1318, size: 128, offset: 448)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1304, file: !31, line: 114, baseType: !1339, size: 192, offset: 576)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1340, line: 26, size: 192, elements: !1341)
!1340 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1341 = !{!1342, !1343}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1339, file: !1340, line: 27, baseType: !7, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1339, file: !1340, line: 28, baseType: !1344, size: 128, offset: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1345, line: 43, size: 128, elements: !1346)
!1345 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1346 = !{!1347, !1348}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1344, file: !1345, line: 44, baseType: !1104)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1344, file: !1345, line: 45, baseType: !301, size: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1304, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1304, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1304, file: !31, line: 117, baseType: !1352, size: 64, offset: 832)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1354)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !1355)
!1355 = !{!1356, !1357, !1361, !1362}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !1354, file: !31, line: 73, baseType: !1164, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !1354, file: !31, line: 78, baseType: !1358, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !1303}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1354, file: !31, line: 83, baseType: !1358, size: 64, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !1354, file: !31, line: 89, baseType: !1363, size: 64, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DISubroutineType(types: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !681, line: 682, baseType: !7)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375, !1383, !1390, !1396, !1397, !1398, !1400, !1402}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1368, file: !14, line: 509, baseType: !679, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1368, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1368, file: !14, line: 511, baseType: !189, size: 32, offset: 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1368, file: !14, line: 512, baseType: !193, size: 64, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1368, file: !14, line: 513, baseType: !193, size: 64, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1368, file: !14, line: 514, baseType: !1376, size: 64, offset: 256)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1059, line: 385, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1059, line: 385, size: 64, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1378, file: !1059, line: 385, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1382, line: 15, baseType: !193)
!1382 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1368, file: !14, line: 516, baseType: !1384, size: 64, offset: 320)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1059, line: 359, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1059, line: 359, size: 64, elements: !1387)
!1387 = !{!1388}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1386, file: !1059, line: 359, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1382, line: 16, baseType: !193)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1368, file: !14, line: 519, baseType: !1391, size: 64, offset: 384)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1382, line: 21, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1382, line: 21, size: 64, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1392, file: !1382, line: 21, baseType: !1395, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1382, line: 14, baseType: !193)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1368, file: !14, line: 521, baseType: !1067, size: 64, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1368, file: !14, line: 522, baseType: !1067, size: 64, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1368, file: !14, line: 528, baseType: !1399, size: 64, offset: 576)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1368, file: !14, line: 532, baseType: !1401, size: 64, offset: 640)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1368, file: !14, line: 536, baseType: !1291, size: 64, offset: 704)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1304, file: !31, line: 118, baseType: !177, size: 64, offset: 896)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !1304, file: !31, line: 119, baseType: !109, size: 32, offset: 960)
!1405 = !DIDerivedType(tag: DW_TAG_member, scope: !1304, file: !31, line: 120, baseType: !1406, size: 128, offset: 1024)
!1406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1304, file: !31, line: 120, size: 128, elements: !1407)
!1407 = !{!1408, !1414}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1406, file: !31, line: 121, baseType: !1409, size: 128)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !1410, line: 6, size: 128, elements: !1411)
!1410 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!1411 = !{!1412, !1413}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1409, file: !1410, line: 7, baseType: !207, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1409, file: !1410, line: 8, baseType: !207, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !1406, file: !31, line: 122, baseType: !1415)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1409, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 0)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !1300, file: !681, line: 162, baseType: !177, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1072, file: !681, line: 176, baseType: !726, size: 128, align: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, scope: !1068, file: !681, line: 179, baseType: !1421, size: 32, offset: 384)
!1421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1068, file: !681, line: 179, size: 32, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !1421, file: !681, line: 184, baseType: !327, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !1421, file: !681, line: 192, baseType: !7, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1421, file: !681, line: 194, baseType: !7, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1421, file: !681, line: 195, baseType: !109, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1068, file: !681, line: 199, baseType: !327, size: 32, offset: 416)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1003, file: !44, line: 1964, baseType: !1429, size: 64, offset: 1344)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!194, !949, !1432}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1434, line: 12, size: 256, elements: !1435)
!1434 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1435 = !{!1436, !1437, !1438, !1439, !1440}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1433, file: !1434, line: 13, baseType: !189, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1433, file: !1434, line: 16, baseType: !109, size: 32, offset: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1433, file: !1434, line: 23, baseType: !193, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1433, file: !1434, line: 30, baseType: !193, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1433, file: !1434, line: 33, baseType: !1441, size: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !681, line: 27, flags: DIFlagFwdDecl)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1003, file: !44, line: 1966, baseType: !1429, size: 64, offset: 1408)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !950, file: !44, line: 1424, baseType: !1445, size: 64, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !1448)
!1448 = !{!1449, !1495, !1499, !1503, !1504, !1505, !1506, !1507, !1512, !1517, !1521}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1447, file: !38, line: 323, baseType: !1450, size: 64)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!109, !1453}
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1480, !1481, !1482}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1454, file: !38, line: 295, baseType: !523, size: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1454, file: !38, line: 296, baseType: !301, size: 128, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1454, file: !38, line: 297, baseType: !301, size: 128, offset: 256)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1454, file: !38, line: 298, baseType: !301, size: 128, offset: 384)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1454, file: !38, line: 299, baseType: !271, size: 192, offset: 512)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1454, file: !38, line: 300, baseType: !285, offset: 704)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1454, file: !38, line: 301, baseType: !327, size: 32, offset: 704)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1454, file: !38, line: 302, baseType: !949, size: 64, offset: 768)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1454, file: !38, line: 303, baseType: !1465, size: 64, offset: 832)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !1466)
!1466 = !{!1467, !1479}
!1467 = !DIDerivedType(tag: DW_TAG_member, scope: !1465, file: !38, line: 69, baseType: !1468, size: 32)
!1468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1465, file: !38, line: 69, size: 32, elements: !1469)
!1469 = !{!1470, !1471, !1472}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1468, file: !38, line: 70, baseType: !789, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1468, file: !38, line: 71, baseType: !797, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1468, file: !38, line: 72, baseType: !1473, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1474, line: 24, baseType: !1475)
!1474 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1474, line: 22, size: 32, elements: !1476)
!1476 = !{!1477}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1475, file: !1474, line: 23, baseType: !1478, size: 32)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1474, line: 20, baseType: !795)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1465, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1454, file: !38, line: 304, baseType: !578, size: 64, offset: 896)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1454, file: !38, line: 305, baseType: !193, size: 64, offset: 960)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1454, file: !38, line: 306, baseType: !1483, size: 576, offset: 1024)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !1484)
!1484 = !{!1485, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1483, file: !38, line: 206, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !283)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1483, file: !38, line: 207, baseType: !1486, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1483, file: !38, line: 208, baseType: !1486, size: 64, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1483, file: !38, line: 209, baseType: !1486, size: 64, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1483, file: !38, line: 210, baseType: !1486, size: 64, offset: 256)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1483, file: !38, line: 211, baseType: !1486, size: 64, offset: 320)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1483, file: !38, line: 212, baseType: !1486, size: 64, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1483, file: !38, line: 213, baseType: !890, size: 64, offset: 448)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1483, file: !38, line: 214, baseType: !890, size: 64, offset: 512)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1447, file: !38, line: 324, baseType: !1496, size: 64, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!1453, !949, !109}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1447, file: !38, line: 325, baseType: !1500, size: 64, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{null, !1453}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1447, file: !38, line: 326, baseType: !1450, size: 64, offset: 192)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1447, file: !38, line: 327, baseType: !1450, size: 64, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1447, file: !38, line: 328, baseType: !1450, size: 64, offset: 320)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1447, file: !38, line: 329, baseType: !1031, size: 64, offset: 384)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1447, file: !38, line: 332, baseType: !1508, size: 64, offset: 448)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!1511, !782}
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1447, file: !38, line: 333, baseType: !1513, size: 64, offset: 512)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!109, !782, !1516}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1447, file: !38, line: 335, baseType: !1518, size: 64, offset: 576)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!109, !782, !1511}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1447, file: !38, line: 337, baseType: !1522, size: 64, offset: 640)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!109, !949, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !950, file: !44, line: 1425, baseType: !1527, size: 64, offset: 512)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !1530)
!1530 = !{!1531, !1535, !1536, !1540, !1541, !1542, !1557, !1580, !1584, !1585, !1608}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1529, file: !38, line: 429, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{!109, !949, !109, !109, !899}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1529, file: !38, line: 430, baseType: !1031, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1529, file: !38, line: 431, baseType: !1537, size: 64, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!109, !949, !7}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1529, file: !38, line: 432, baseType: !1537, size: 64, offset: 192)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1529, file: !38, line: 433, baseType: !1031, size: 64, offset: 256)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1529, file: !38, line: 434, baseType: !1543, size: 64, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{!109, !949, !109, !1546}
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !1548)
!1548 = !{!1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1547, file: !38, line: 416, baseType: !109, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1547, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1547, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1547, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1547, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1547, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1547, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1547, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1529, file: !38, line: 435, baseType: !1558, size: 64, offset: 384)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!109, !949, !1465, !1561}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !1563)
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1562, file: !38, line: 344, baseType: !109, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1562, file: !38, line: 345, baseType: !207, size: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1562, file: !38, line: 346, baseType: !207, size: 64, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1562, file: !38, line: 347, baseType: !207, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1562, file: !38, line: 348, baseType: !207, size: 64, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1562, file: !38, line: 349, baseType: !207, size: 64, offset: 320)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1562, file: !38, line: 350, baseType: !207, size: 64, offset: 384)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1562, file: !38, line: 351, baseType: !281, size: 64, offset: 448)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1562, file: !38, line: 353, baseType: !281, size: 64, offset: 512)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1562, file: !38, line: 354, baseType: !109, size: 32, offset: 576)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1562, file: !38, line: 355, baseType: !109, size: 32, offset: 608)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1562, file: !38, line: 356, baseType: !207, size: 64, offset: 640)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1562, file: !38, line: 357, baseType: !207, size: 64, offset: 704)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1562, file: !38, line: 358, baseType: !207, size: 64, offset: 768)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1562, file: !38, line: 359, baseType: !281, size: 64, offset: 832)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1562, file: !38, line: 360, baseType: !109, size: 32, offset: 896)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1529, file: !38, line: 436, baseType: !1581, size: 64, offset: 448)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!109, !949, !1525, !1561}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1529, file: !38, line: 438, baseType: !1558, size: 64, offset: 512)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1529, file: !38, line: 439, baseType: !1586, size: 64, offset: 576)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = !DISubroutineType(types: !1588)
!1588 = !{!109, !949, !1589}
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1590, file: !38, line: 410, baseType: !7, size: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1590, file: !38, line: 411, baseType: !1594, size: 1344, offset: 64)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1595, size: 1344, elements: !995)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !1596)
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1607}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1595, file: !38, line: 396, baseType: !7, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1595, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1595, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1595, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1595, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1595, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1595, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1595, file: !38, line: 404, baseType: !209, size: 64, offset: 256)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1595, file: !38, line: 405, baseType: !1606, size: 64, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !190, line: 126, baseType: !207)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1595, file: !38, line: 406, baseType: !1606, size: 64, offset: 384)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1529, file: !38, line: 440, baseType: !1537, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !950, file: !44, line: 1426, baseType: !1610, size: 64, offset: 576)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1612)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !950, file: !44, line: 1427, baseType: !193, size: 64, offset: 640)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !950, file: !44, line: 1428, baseType: !193, size: 64, offset: 704)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !950, file: !44, line: 1429, baseType: !193, size: 64, offset: 768)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !950, file: !44, line: 1430, baseType: !743, size: 64, offset: 832)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !950, file: !44, line: 1431, baseType: !1098, size: 256, offset: 896)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !950, file: !44, line: 1432, baseType: !109, size: 32, offset: 1152)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !950, file: !44, line: 1433, baseType: !327, size: 32, offset: 1184)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !950, file: !44, line: 1437, baseType: !1621, size: 64, offset: 1216)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1624)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !950, file: !44, line: 1449, baseType: !1626, size: 64, offset: 1280)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !759, line: 34, size: 64, elements: !1627)
!1627 = !{!1628}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1626, file: !759, line: 35, baseType: !762, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !950, file: !44, line: 1450, baseType: !301, size: 128, offset: 1344)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !950, file: !44, line: 1451, baseType: !1631, size: 64, offset: 1472)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !950, file: !44, line: 1452, baseType: !1634, size: 64, offset: 1536)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1636, line: 40, flags: DIFlagFwdDecl)
!1636 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !950, file: !44, line: 1453, baseType: !1638, size: 64, offset: 1600)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !950, file: !44, line: 1454, baseType: !523, size: 128, offset: 1664)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !950, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !950, file: !44, line: 1456, baseType: !1643, size: 2432, offset: 1856)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1649, !1681}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1643, file: !38, line: 519, baseType: !7, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !1643, file: !38, line: 520, baseType: !1098, size: 256, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1643, file: !38, line: 521, baseType: !1648, size: 192, offset: 320)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !782, size: 192, elements: !995)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1643, file: !38, line: 522, baseType: !1650, size: 1728, offset: 512)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 1728, elements: !995)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !1652)
!1652 = !{!1653, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !1651, file: !38, line: 223, baseType: !1654, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !1656)
!1656 = !{!1657, !1658, !1671, !1672}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !1655, file: !38, line: 444, baseType: !109, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !1655, file: !38, line: 445, baseType: !1659, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !1662)
!1662 = !{!1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !1661, file: !38, line: 311, baseType: !1031, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !1661, file: !38, line: 312, baseType: !1031, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !1661, file: !38, line: 313, baseType: !1031, size: 64, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !1661, file: !38, line: 314, baseType: !1031, size: 64, offset: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !1661, file: !38, line: 315, baseType: !1450, size: 64, offset: 256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !1661, file: !38, line: 316, baseType: !1450, size: 64, offset: 320)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !1661, file: !38, line: 317, baseType: !1450, size: 64, offset: 384)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1661, file: !38, line: 318, baseType: !1522, size: 64, offset: 448)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !1655, file: !38, line: 446, baseType: !178, size: 64, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !1655, file: !38, line: 447, baseType: !1654, size: 64, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !1651, file: !38, line: 224, baseType: !109, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !1651, file: !38, line: 226, baseType: !301, size: 128, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !1651, file: !38, line: 227, baseType: !193, size: 64, offset: 256)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !1651, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !1651, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !1651, file: !38, line: 230, baseType: !1486, size: 64, offset: 384)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !1651, file: !38, line: 231, baseType: !1486, size: 64, offset: 448)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !1651, file: !38, line: 232, baseType: !177, size: 64, offset: 512)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1643, file: !38, line: 523, baseType: !1682, size: 192, offset: 2240)
!1682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1659, size: 192, elements: !995)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !950, file: !44, line: 1458, baseType: !1684, size: 2112, offset: 4288)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !1685)
!1685 = !{!1686, !1687, !1694}
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1684, file: !44, line: 1411, baseType: !109, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !1684, file: !44, line: 1412, baseType: !1688, size: 128, offset: 64)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1689, line: 40, baseType: !1690)
!1689 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1689, line: 36, size: 128, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1690, file: !1689, line: 37, baseType: !285)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1690, file: !1689, line: 38, baseType: !301, size: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !1684, file: !44, line: 1413, baseType: !1695, size: 1920, offset: 192)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1696, size: 1920, elements: !995)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !1697, line: 12, size: 640, elements: !1698)
!1697 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1698 = !{!1699, !1707, !1709, !2831, !2832}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !1696, file: !1697, line: 13, baseType: !1700, size: 320)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !1701, line: 17, size: 320, elements: !1702)
!1701 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!1702 = !{!1703, !1704, !1705, !1706}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !1700, file: !1701, line: 18, baseType: !109, size: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !1700, file: !1701, line: 19, baseType: !109, size: 32, offset: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !1700, file: !1701, line: 20, baseType: !1688, size: 128, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !1700, file: !1701, line: 22, baseType: !726, size: 128, align: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !1696, file: !1697, line: 14, baseType: !1708, size: 64, offset: 320)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !1696, file: !1697, line: 15, baseType: !1710, size: 64, offset: 384)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !1711, line: 16, size: 64, elements: !1712)
!1711 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!1712 = !{!1713}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1710, file: !1711, line: 17, baseType: !1714, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1636, line: 640, size: 48640, elements: !1716)
!1716 = !{!1717, !1723, !1724, !1725, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1742, !1760, !1771, !1854, !1855, !1856, !1867, !1868, !1870, !1871, !1872, !1873, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1953, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !2022, !2024, !2025, !2026, !2028, !2029, !2030, !2031, !2032, !2033, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2057, !2062, !2241, !2242, !2243, !2244, !2245, !2248, !2251, !2254, !2257, !2283, !2384, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2432, !2433, !2434, !2435, !2436, !2441, !2442, !2443, !2446, !2447, !2450, !2453, !2456, !2457, !2489, !2492, !2493, !2572, !2573, !2576, !2577, !2580, !2581, !2582, !2586, !2587, !2588, !2601, !2602, !2603, !2613, !2618, !2621, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1715, file: !1636, line: 646, baseType: !1718, size: 128)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1719, line: 56, size: 128, elements: !1720)
!1719 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1720 = !{!1721, !1722}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1718, file: !1719, line: 57, baseType: !193, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1718, file: !1719, line: 58, baseType: !185, size: 32, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1715, file: !1636, line: 649, baseType: !196, size: 64, offset: 128)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1715, file: !1636, line: 657, baseType: !177, size: 64, offset: 192)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1715, file: !1636, line: 658, baseType: !1726, size: 32, offset: 256)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1727, line: 113, baseType: !1728)
!1727 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1727, line: 111, size: 32, elements: !1729)
!1729 = !{!1730}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1728, file: !1727, line: 112, baseType: !327, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1715, file: !1636, line: 660, baseType: !7, size: 32, offset: 288)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1715, file: !1636, line: 661, baseType: !7, size: 32, offset: 320)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1715, file: !1636, line: 684, baseType: !109, size: 32, offset: 352)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1715, file: !1636, line: 686, baseType: !109, size: 32, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1715, file: !1636, line: 687, baseType: !109, size: 32, offset: 416)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1715, file: !1636, line: 688, baseType: !109, size: 32, offset: 448)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1715, file: !1636, line: 689, baseType: !7, size: 32, offset: 480)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1715, file: !1636, line: 691, baseType: !1739, size: 64, offset: 512)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1636, line: 691, flags: DIFlagFwdDecl)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1715, file: !1636, line: 692, baseType: !1743, size: 832, offset: 576)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1636, line: 451, size: 832, elements: !1744)
!1744 = !{!1745, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1743, file: !1636, line: 453, baseType: !1746, size: 128)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1636, line: 325, size: 128, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1746, file: !1636, line: 326, baseType: !193, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1746, file: !1636, line: 327, baseType: !185, size: 32, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1743, file: !1636, line: 454, baseType: !688, size: 192, align: 64, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1743, file: !1636, line: 455, baseType: !301, size: 128, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1743, file: !1636, line: 456, baseType: !7, size: 32, offset: 448)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1743, file: !1636, line: 458, baseType: !207, size: 64, offset: 512)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1743, file: !1636, line: 459, baseType: !207, size: 64, offset: 576)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1743, file: !1636, line: 460, baseType: !207, size: 64, offset: 640)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1743, file: !1636, line: 461, baseType: !207, size: 64, offset: 704)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1743, file: !1636, line: 463, baseType: !207, size: 64, offset: 768)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1743, file: !1636, line: 465, baseType: !1759, offset: 832)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1636, line: 415, elements: !299)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1715, file: !1636, line: 693, baseType: !1761, size: 384, offset: 1408)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1636, line: 489, size: 384, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766, !1767, !1768, !1769}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1761, file: !1636, line: 490, baseType: !301, size: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1761, file: !1636, line: 491, baseType: !193, size: 64, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1761, file: !1636, line: 492, baseType: !193, size: 64, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1761, file: !1636, line: 493, baseType: !7, size: 32, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1761, file: !1636, line: 494, baseType: !391, size: 16, offset: 288)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1761, file: !1636, line: 495, baseType: !391, size: 16, offset: 304)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1761, file: !1636, line: 497, baseType: !1770, size: 64, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1715, file: !1636, line: 697, baseType: !1772, size: 1792, offset: 1792)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1636, line: 507, size: 1792, elements: !1773)
!1773 = !{!1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1851, !1852}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1772, file: !1636, line: 508, baseType: !688, size: 192, align: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1772, file: !1636, line: 515, baseType: !207, size: 64, offset: 192)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1772, file: !1636, line: 516, baseType: !207, size: 64, offset: 256)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1772, file: !1636, line: 517, baseType: !207, size: 64, offset: 320)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1772, file: !1636, line: 518, baseType: !207, size: 64, offset: 384)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1772, file: !1636, line: 519, baseType: !207, size: 64, offset: 448)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1772, file: !1636, line: 526, baseType: !281, size: 64, offset: 512)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1772, file: !1636, line: 527, baseType: !207, size: 64, offset: 576)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1772, file: !1636, line: 528, baseType: !7, size: 32, offset: 640)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1772, file: !1636, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1772, file: !1636, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1772, file: !1636, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1772, file: !1636, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1772, file: !1636, line: 563, baseType: !1788, size: 512, offset: 704)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1789)
!1789 = !{!1790, !1798, !1799, !1804, !1847, !1848, !1849, !1850}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1788, file: !20, line: 119, baseType: !1791, size: 256)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1792, line: 9, size: 256, elements: !1793)
!1792 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1791, file: !1792, line: 10, baseType: !688, size: 192, align: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1791, file: !1792, line: 11, baseType: !1796, size: 64, offset: 192)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1797, line: 29, baseType: !281)
!1797 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1788, file: !20, line: 120, baseType: !1796, size: 64, offset: 256)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1788, file: !20, line: 121, baseType: !1800, size: 64, offset: 320)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!19, !1803}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1788, file: !20, line: 122, baseType: !1805, size: 64, offset: 384)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1807)
!1807 = !{!1808, !1828, !1829, !1832, !1837, !1838, !1842, !1846}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1806, file: !20, line: 160, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1810, file: !20, line: 215, baseType: !1104)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1810, file: !20, line: 216, baseType: !7, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1810, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1810, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1810, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1810, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1810, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1810, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1810, file: !20, line: 233, baseType: !1796, size: 64, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1810, file: !20, line: 234, baseType: !1803, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1810, file: !20, line: 235, baseType: !1796, size: 64, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1810, file: !20, line: 236, baseType: !1803, size: 64, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1810, file: !20, line: 237, baseType: !1825, size: 4096, offset: 512)
!1825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 4096, elements: !1826)
!1826 = !{!1827}
!1827 = !DISubrange(count: 8)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1806, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1806, file: !20, line: 162, baseType: !1830, size: 32, offset: 96)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !190, line: 27, baseType: !1831)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !572, line: 96, baseType: !109)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1806, file: !20, line: 163, baseType: !1833, size: 32, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !749, line: 276, baseType: !1834)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !749, line: 276, size: 32, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1834, file: !749, line: 276, baseType: !753, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1806, file: !20, line: 164, baseType: !1803, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1806, file: !20, line: 165, baseType: !1839, size: 128, offset: 256)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1792, line: 14, size: 128, elements: !1840)
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1839, file: !1792, line: 15, baseType: !1093, size: 128)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1806, file: !20, line: 166, baseType: !1843, size: 64, offset: 384)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!1796}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1806, file: !20, line: 167, baseType: !1796, size: 64, offset: 448)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1788, file: !20, line: 123, baseType: !223, size: 8, offset: 448)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1788, file: !20, line: 124, baseType: !223, size: 8, offset: 456)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1788, file: !20, line: 125, baseType: !223, size: 8, offset: 464)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1788, file: !20, line: 126, baseType: !223, size: 8, offset: 472)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1772, file: !1636, line: 572, baseType: !1788, size: 512, offset: 1216)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1772, file: !1636, line: 580, baseType: !1853, size: 64, offset: 1728)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1715, file: !1636, line: 721, baseType: !7, size: 32, offset: 3584)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1715, file: !1636, line: 722, baseType: !109, size: 32, offset: 3616)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1715, file: !1636, line: 723, baseType: !1857, size: 64, offset: 3648)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1860, line: 17, baseType: !1861)
!1860 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1860, line: 17, size: 64, elements: !1862)
!1862 = !{!1863}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1861, file: !1860, line: 17, baseType: !1864, size: 64)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 64, elements: !1865)
!1865 = !{!1866}
!1866 = !DISubrange(count: 1)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1715, file: !1636, line: 724, baseType: !1859, size: 64, offset: 3712)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1715, file: !1636, line: 749, baseType: !1869, offset: 3776)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1636, line: 290, elements: !299)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1715, file: !1636, line: 751, baseType: !301, size: 128, offset: 3776)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1715, file: !1636, line: 757, baseType: !697, size: 64, offset: 3904)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1715, file: !1636, line: 758, baseType: !697, size: 64, offset: 3968)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1715, file: !1636, line: 761, baseType: !1874, size: 320, offset: 4032)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1875, line: 34, size: 320, elements: !1876)
!1875 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1876 = !{!1877, !1878}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1874, file: !1875, line: 35, baseType: !207, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1874, file: !1875, line: 36, baseType: !1879, size: 256, offset: 64)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 256, elements: !375)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1715, file: !1636, line: 766, baseType: !109, size: 32, offset: 4352)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1715, file: !1636, line: 767, baseType: !109, size: 32, offset: 4384)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1715, file: !1636, line: 768, baseType: !109, size: 32, offset: 4416)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1715, file: !1636, line: 770, baseType: !109, size: 32, offset: 4448)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1715, file: !1636, line: 772, baseType: !193, size: 64, offset: 4480)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1715, file: !1636, line: 775, baseType: !7, size: 32, offset: 4544)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1715, file: !1636, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1715, file: !1636, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1715, file: !1636, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1715, file: !1636, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1715, file: !1636, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1715, file: !1636, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1715, file: !1636, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1715, file: !1636, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1715, file: !1636, line: 831, baseType: !193, size: 64, offset: 4672)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1715, file: !1636, line: 833, baseType: !1896, size: 384, offset: 4736)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1897)
!1897 = !{!1898, !1903}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1896, file: !25, line: 26, baseType: !1899, size: 64)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!194, !1902}
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, scope: !1896, file: !25, line: 27, baseType: !1904, size: 320, offset: 64)
!1904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1896, file: !25, line: 27, size: 320, elements: !1905)
!1905 = !{!1906, !1916, !1943}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1904, file: !25, line: 36, baseType: !1907, size: 320)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1904, file: !25, line: 29, size: 320, elements: !1908)
!1908 = !{!1909, !1911, !1912, !1913, !1914, !1915}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1907, file: !25, line: 30, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1907, file: !25, line: 31, baseType: !185, size: 32, offset: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1907, file: !25, line: 32, baseType: !185, size: 32, offset: 96)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1907, file: !25, line: 33, baseType: !185, size: 32, offset: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1907, file: !25, line: 34, baseType: !207, size: 64, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1907, file: !25, line: 35, baseType: !1910, size: 64, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1904, file: !25, line: 46, baseType: !1917, size: 192)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1904, file: !25, line: 38, size: 192, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1942}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1917, file: !25, line: 39, baseType: !1830, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1917, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !25, line: 41, baseType: !1922, size: 64, offset: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !25, line: 41, size: 64, elements: !1923)
!1923 = !{!1924, !1932}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1922, file: !25, line: 42, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1927, line: 7, size: 128, elements: !1928)
!1927 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1928 = !{!1929, !1931}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1926, file: !1927, line: 8, baseType: !1930, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !572, line: 93, baseType: !283)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1926, file: !1927, line: 9, baseType: !283, size: 64, offset: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1922, file: !25, line: 43, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1935, line: 7, size: 64, elements: !1936)
!1935 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1936 = !{!1937, !1941}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1934, file: !1935, line: 8, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1935, line: 5, baseType: !1939)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !186, line: 20, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !188, line: 26, baseType: !109)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1934, file: !1935, line: 9, baseType: !1939, size: 32, offset: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1917, file: !25, line: 45, baseType: !207, size: 64, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1904, file: !25, line: 54, baseType: !1944, size: 256)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1904, file: !25, line: 48, size: 256, elements: !1945)
!1945 = !{!1946, !1949, !1950, !1951, !1952}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1944, file: !25, line: 49, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1944, file: !25, line: 50, baseType: !109, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1944, file: !25, line: 51, baseType: !109, size: 32, offset: 96)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1944, file: !25, line: 52, baseType: !193, size: 64, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1944, file: !25, line: 53, baseType: !193, size: 64, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1715, file: !1636, line: 835, baseType: !1954, size: 32, offset: 5120)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !190, line: 22, baseType: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !572, line: 28, baseType: !109)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1715, file: !1636, line: 836, baseType: !1954, size: 32, offset: 5152)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1715, file: !1636, line: 840, baseType: !193, size: 64, offset: 5184)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1715, file: !1636, line: 849, baseType: !1714, size: 64, offset: 5248)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1715, file: !1636, line: 852, baseType: !1714, size: 64, offset: 5312)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1715, file: !1636, line: 857, baseType: !301, size: 128, offset: 5376)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1715, file: !1636, line: 858, baseType: !301, size: 128, offset: 5504)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1715, file: !1636, line: 859, baseType: !1714, size: 64, offset: 5632)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1715, file: !1636, line: 867, baseType: !301, size: 128, offset: 5696)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1715, file: !1636, line: 868, baseType: !301, size: 128, offset: 5824)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1715, file: !1636, line: 871, baseType: !1966, size: 64, offset: 5952)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1968)
!1968 = !{!1969, !1970, !1971, !1972, !1974, !1975, !1976, !1977}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1967, file: !53, line: 61, baseType: !1726, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1967, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1967, file: !53, line: 63, baseType: !285, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1967, file: !53, line: 65, baseType: !1973, size: 256, offset: 64)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 256, elements: !375)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1967, file: !53, line: 66, baseType: !985, size: 64, offset: 320)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1967, file: !53, line: 68, baseType: !1688, size: 128, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1967, file: !53, line: 69, baseType: !726, size: 128, align: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1967, file: !53, line: 70, baseType: !1978, size: 128, offset: 640)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1979, size: 128, elements: !1865)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1979, file: !53, line: 55, baseType: !109, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1979, file: !53, line: 56, baseType: !1983, size: 64, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1985, line: 20, size: 1088, elements: !1986)
!1985 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1986 = !{!1987, !1992, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2008, !2011, !2012}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1984, file: !1985, line: 21, baseType: !1988, size: 32)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1989, line: 19, size: 32, elements: !1990)
!1989 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1990 = !{!1991}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1988, file: !1989, line: 20, baseType: !1726, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1984, file: !1985, line: 22, baseType: !1993, size: 192, offset: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1994, line: 19, size: 192, elements: !1995)
!1994 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1995 = !{!1996, !1997, !1998}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1993, file: !1994, line: 20, baseType: !1084, size: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1993, file: !1994, line: 21, baseType: !7, size: 32, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1993, file: !1994, line: 22, baseType: !7, size: 32, offset: 160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1984, file: !1985, line: 23, baseType: !726, size: 128, align: 64, offset: 256)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1984, file: !1985, line: 24, baseType: !7, size: 32, offset: 384)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1984, file: !1985, line: 25, baseType: !1714, size: 64, offset: 448)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1984, file: !1985, line: 26, baseType: !1258, size: 64, offset: 512)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1984, file: !1985, line: 27, baseType: !7, size: 32, offset: 576)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1984, file: !1985, line: 28, baseType: !1983, size: 64, offset: 640)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1984, file: !1985, line: 32, baseType: !2006, size: 64, offset: 704)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !790, line: 18, flags: DIFlagFwdDecl)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1984, file: !1985, line: 33, baseType: !2009, size: 64, offset: 768)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1985, line: 33, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1984, file: !1985, line: 34, baseType: !109, size: 32, offset: 832)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1984, file: !1985, line: 35, baseType: !2013, size: 192, offset: 896)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2014, line: 7, size: 192, elements: !2015)
!2014 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2015 = !{!2016, !2017, !2021}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2013, file: !2014, line: 8, baseType: !275, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2013, file: !2014, line: 9, baseType: !2018, size: 64, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2020)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2014, line: 5, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2013, file: !2014, line: 10, baseType: !7, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1715, file: !1636, line: 872, baseType: !2023, size: 512, offset: 6016)
!2023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 512, elements: !375)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1715, file: !1636, line: 873, baseType: !301, size: 128, offset: 6528)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1715, file: !1636, line: 874, baseType: !301, size: 128, offset: 6656)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1715, file: !1636, line: 876, baseType: !2027, size: 64, offset: 6784)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1715, file: !1636, line: 879, baseType: !1051, size: 64, offset: 6848)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1715, file: !1636, line: 882, baseType: !1051, size: 64, offset: 6912)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1715, file: !1636, line: 884, baseType: !207, size: 64, offset: 6976)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1715, file: !1636, line: 885, baseType: !207, size: 64, offset: 7040)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1715, file: !1636, line: 890, baseType: !207, size: 64, offset: 7104)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1715, file: !1636, line: 891, baseType: !2034, size: 128, offset: 7168)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1636, line: 242, size: 128, elements: !2035)
!2035 = !{!2036, !2037, !2038}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2034, file: !1636, line: 244, baseType: !207, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2034, file: !1636, line: 245, baseType: !207, size: 64, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2034, file: !1636, line: 246, baseType: !1104, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1715, file: !1636, line: 900, baseType: !193, size: 64, offset: 7296)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1715, file: !1636, line: 901, baseType: !193, size: 64, offset: 7360)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1715, file: !1636, line: 904, baseType: !207, size: 64, offset: 7424)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1715, file: !1636, line: 907, baseType: !207, size: 64, offset: 7488)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1715, file: !1636, line: 910, baseType: !193, size: 64, offset: 7552)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1715, file: !1636, line: 911, baseType: !193, size: 64, offset: 7616)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1715, file: !1636, line: 914, baseType: !2046, size: 640, offset: 7680)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2047, line: 123, size: 640, elements: !2048)
!2047 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2048 = !{!2049, !2055, !2056}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2046, file: !2047, line: 124, baseType: !2050, size: 576)
!2050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2051, size: 576, elements: !995)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2047, line: 108, size: 192, elements: !2052)
!2052 = !{!2053, !2054}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2051, file: !2047, line: 109, baseType: !207, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2051, file: !2047, line: 110, baseType: !1839, size: 128, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2046, file: !2047, line: 125, baseType: !7, size: 32, offset: 576)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2046, file: !2047, line: 126, baseType: !7, size: 32, offset: 608)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1715, file: !1636, line: 917, baseType: !2058, size: 192, offset: 8320)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2047, line: 134, size: 192, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2058, file: !2047, line: 135, baseType: !726, size: 128, align: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2058, file: !2047, line: 136, baseType: !7, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1715, file: !1636, line: 923, baseType: !2063, size: 64, offset: 8512)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2066, line: 111, size: 1280, elements: !2067)
!2066 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2085, !2086, !2087, !2088, !2089, !2090, !2198, !2199, !2200, !2201, !2227, !2228, !2236}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2065, file: !2066, line: 112, baseType: !327, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2065, file: !2066, line: 120, baseType: !789, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2065, file: !2066, line: 121, baseType: !797, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2065, file: !2066, line: 122, baseType: !789, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2065, file: !2066, line: 123, baseType: !797, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2065, file: !2066, line: 124, baseType: !789, size: 32, offset: 160)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2065, file: !2066, line: 125, baseType: !797, size: 32, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2065, file: !2066, line: 126, baseType: !789, size: 32, offset: 224)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2065, file: !2066, line: 127, baseType: !797, size: 32, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2065, file: !2066, line: 128, baseType: !7, size: 32, offset: 288)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2065, file: !2066, line: 129, baseType: !2079, size: 64, offset: 320)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2080, line: 26, baseType: !2081)
!2080 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2080, line: 24, size: 64, elements: !2082)
!2082 = !{!2083}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2081, file: !2080, line: 25, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 64, elements: !401)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2065, file: !2066, line: 130, baseType: !2079, size: 64, offset: 384)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2065, file: !2066, line: 131, baseType: !2079, size: 64, offset: 448)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2065, file: !2066, line: 132, baseType: !2079, size: 64, offset: 512)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2065, file: !2066, line: 133, baseType: !2079, size: 64, offset: 576)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2065, file: !2066, line: 135, baseType: !192, size: 8, offset: 640)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2065, file: !2066, line: 137, baseType: !2091, size: 64, offset: 704)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2093, line: 189, size: 1664, elements: !2094)
!2093 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2094 = !{!2095, !2096, !2099, !2104, !2105, !2108, !2109, !2114, !2115, !2116, !2117, !2119, !2120, !2121, !2123, !2124, !2162, !2183}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2092, file: !2093, line: 190, baseType: !1726, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2092, file: !2093, line: 191, baseType: !2097, size: 32, offset: 32)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2093, line: 28, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !190, line: 98, baseType: !1939)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !2093, line: 192, baseType: !2100, size: 192, offset: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !2093, line: 192, size: 192, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2100, file: !2093, line: 193, baseType: !301, size: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2100, file: !2093, line: 194, baseType: !688, size: 192, align: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2092, file: !2093, line: 199, baseType: !1098, size: 256, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2092, file: !2093, line: 200, baseType: !2106, size: 64, offset: 512)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2093, line: 200, flags: DIFlagFwdDecl)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2092, file: !2093, line: 201, baseType: !177, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !2093, line: 202, baseType: !2110, size: 64, offset: 640)
!2110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !2093, line: 202, size: 64, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2110, file: !2093, line: 203, baseType: !890, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2110, file: !2093, line: 204, baseType: !890, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2092, file: !2093, line: 206, baseType: !890, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2092, file: !2093, line: 207, baseType: !789, size: 32, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2092, file: !2093, line: 208, baseType: !797, size: 32, offset: 800)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2092, file: !2093, line: 209, baseType: !2118, size: 32, offset: 832)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2093, line: 31, baseType: !909)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2092, file: !2093, line: 210, baseType: !391, size: 16, offset: 864)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2092, file: !2093, line: 211, baseType: !391, size: 16, offset: 880)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2092, file: !2093, line: 215, baseType: !2122, size: 16, offset: 896)
!2122 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2092, file: !2093, line: 222, baseType: !193, size: 64, offset: 960)
!2124 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !2093, line: 239, baseType: !2125, size: 320, offset: 1024)
!2125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !2093, line: 239, size: 320, elements: !2126)
!2126 = !{!2127, !2154}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2125, file: !2093, line: 240, baseType: !2128, size: 320)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2093, line: 108, size: 320, elements: !2129)
!2129 = !{!2130, !2131, !2143, !2146, !2153}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2128, file: !2093, line: 110, baseType: !193, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, scope: !2128, file: !2093, line: 111, baseType: !2132, size: 64, offset: 64)
!2132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2128, file: !2093, line: 111, size: 64, elements: !2133)
!2133 = !{!2134, !2142}
!2134 = !DIDerivedType(tag: DW_TAG_member, scope: !2132, file: !2093, line: 112, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2132, file: !2093, line: 112, size: 64, elements: !2136)
!2136 = !{!2137, !2138}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2135, file: !2093, line: 114, baseType: !1183, size: 16)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2135, file: !2093, line: 115, baseType: !2139, size: 48, offset: 16)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 48, elements: !2140)
!2140 = !{!2141}
!2141 = !DISubrange(count: 6)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2132, file: !2093, line: 121, baseType: !193, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2128, file: !2093, line: 123, baseType: !2144, size: 64, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2093, line: 96, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2128, file: !2093, line: 124, baseType: !2147, size: 64, offset: 192)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2093, line: 102, size: 192, elements: !2149)
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2148, file: !2093, line: 103, baseType: !726, size: 128, align: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2148, file: !2093, line: 104, baseType: !1726, size: 32, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2148, file: !2093, line: 105, baseType: !844, size: 8, offset: 160)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2128, file: !2093, line: 125, baseType: !422, size: 64, offset: 256)
!2154 = !DIDerivedType(tag: DW_TAG_member, scope: !2125, file: !2093, line: 241, baseType: !2155, size: 320)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2125, file: !2093, line: 241, size: 320, elements: !2156)
!2156 = !{!2157, !2158, !2159, !2160, !2161}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2155, file: !2093, line: 242, baseType: !193, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2155, file: !2093, line: 243, baseType: !193, size: 64, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2155, file: !2093, line: 244, baseType: !2144, size: 64, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2155, file: !2093, line: 245, baseType: !2147, size: 64, offset: 192)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2155, file: !2093, line: 246, baseType: !181, size: 64, offset: 256)
!2162 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !2093, line: 254, baseType: !2163, size: 256, offset: 1344)
!2163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2092, file: !2093, line: 254, size: 256, elements: !2164)
!2164 = !{!2165, !2171}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2163, file: !2093, line: 255, baseType: !2166, size: 256)
!2166 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2093, line: 128, size: 256, elements: !2167)
!2167 = !{!2168, !2169}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2166, file: !2093, line: 129, baseType: !177, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2166, file: !2093, line: 130, baseType: !2170, size: 256)
!2170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 256, elements: !375)
!2171 = !DIDerivedType(tag: DW_TAG_member, scope: !2163, file: !2093, line: 256, baseType: !2172, size: 256)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2163, file: !2093, line: 256, size: 256, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2172, file: !2093, line: 258, baseType: !301, size: 128)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2172, file: !2093, line: 259, baseType: !2176, size: 128, offset: 128)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2177, line: 22, size: 128, elements: !2178)
!2177 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2178 = !{!2179, !2182}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2176, file: !2177, line: 23, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2177, line: 23, flags: DIFlagFwdDecl)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2176, file: !2177, line: 24, baseType: !193, size: 64, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2092, file: !2093, line: 274, baseType: !2184, size: 64, offset: 1600)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2093, line: 170, size: 192, elements: !2186)
!2186 = !{!2187, !2196, !2197}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2185, file: !2093, line: 171, baseType: !2188, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2093, line: 165, baseType: !2189)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{!109, !2091, !2192, !2194, !2091}
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2166)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2185, file: !2093, line: 172, baseType: !2091, size: 64, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2185, file: !2093, line: 173, baseType: !2144, size: 64, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2065, file: !2066, line: 138, baseType: !2091, size: 64, offset: 768)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2065, file: !2066, line: 139, baseType: !2091, size: 64, offset: 832)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2065, file: !2066, line: 140, baseType: !2091, size: 64, offset: 896)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2065, file: !2066, line: 145, baseType: !2202, size: 64, offset: 960)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2204, line: 13, size: 896, elements: !2205)
!2204 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2203, file: !2204, line: 14, baseType: !1726, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2203, file: !2204, line: 15, baseType: !327, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2203, file: !2204, line: 16, baseType: !327, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2203, file: !2204, line: 21, baseType: !275, size: 64, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2203, file: !2204, line: 27, baseType: !193, size: 64, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2203, file: !2204, line: 28, baseType: !193, size: 64, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2203, file: !2204, line: 29, baseType: !275, size: 64, offset: 320)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2203, file: !2204, line: 32, baseType: !523, size: 128, offset: 384)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2203, file: !2204, line: 33, baseType: !789, size: 32, offset: 512)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2203, file: !2204, line: 37, baseType: !275, size: 64, offset: 576)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2203, file: !2204, line: 44, baseType: !2217, size: 256, offset: 640)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2218, line: 15, size: 256, elements: !2219)
!2218 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2217, file: !2218, line: 16, baseType: !1104)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2217, file: !2218, line: 18, baseType: !109, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2217, file: !2218, line: 19, baseType: !109, size: 32, offset: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2217, file: !2218, line: 20, baseType: !109, size: 32, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2217, file: !2218, line: 21, baseType: !109, size: 32, offset: 96)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2217, file: !2218, line: 22, baseType: !193, size: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2217, file: !2218, line: 23, baseType: !193, size: 64, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2065, file: !2066, line: 146, baseType: !2006, size: 64, offset: 1024)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2065, file: !2066, line: 147, baseType: !2229, size: 64, offset: 1088)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2066, line: 25, size: 64, elements: !2231)
!2231 = !{!2232, !2233, !2234}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2230, file: !2066, line: 26, baseType: !327, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2230, file: !2066, line: 27, baseType: !109, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2230, file: !2066, line: 28, baseType: !2235, offset: 64)
!2235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !797, elements: !1416)
!2236 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !2066, line: 149, baseType: !2237, size: 128, offset: 1152)
!2237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2065, file: !2066, line: 149, size: 128, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2237, file: !2066, line: 150, baseType: !109, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2237, file: !2066, line: 151, baseType: !726, size: 128, align: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1715, file: !1636, line: 926, baseType: !2063, size: 64, offset: 8576)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1715, file: !1636, line: 929, baseType: !2063, size: 64, offset: 8640)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1715, file: !1636, line: 933, baseType: !2091, size: 64, offset: 8704)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1715, file: !1636, line: 943, baseType: !381, size: 128, offset: 8768)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1715, file: !1636, line: 945, baseType: !2246, size: 64, offset: 8896)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1636, line: 49, flags: DIFlagFwdDecl)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1715, file: !1636, line: 956, baseType: !2249, size: 64, offset: 8960)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1636, line: 45, flags: DIFlagFwdDecl)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1715, file: !1636, line: 959, baseType: !2252, size: 64, offset: 9024)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1636, line: 959, flags: DIFlagFwdDecl)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1715, file: !1636, line: 962, baseType: !2255, size: 64, offset: 9088)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1636, line: 66, flags: DIFlagFwdDecl)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1715, file: !1636, line: 966, baseType: !2258, size: 64, offset: 9152)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2260, line: 31, size: 576, elements: !2261)
!2260 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2261 = !{!2262, !2263, !2266, !2269, !2272, !2273, !2276, !2279, !2280}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2259, file: !2260, line: 32, baseType: !327, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2259, file: !2260, line: 33, baseType: !2264, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2260, line: 9, flags: DIFlagFwdDecl)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2259, file: !2260, line: 34, baseType: !2267, size: 64, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2260, line: 10, flags: DIFlagFwdDecl)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2259, file: !2260, line: 35, baseType: !2270, size: 64, offset: 192)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2260, line: 8, flags: DIFlagFwdDecl)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2259, file: !2260, line: 36, baseType: !1983, size: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2259, file: !2260, line: 37, baseType: !2274, size: 64, offset: 320)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2093, line: 34, flags: DIFlagFwdDecl)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2259, file: !2260, line: 38, baseType: !2277, size: 64, offset: 384)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2260, line: 38, flags: DIFlagFwdDecl)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2259, file: !2260, line: 39, baseType: !2277, size: 64, offset: 448)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2259, file: !2260, line: 40, baseType: !2281, size: 64, offset: 512)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2260, line: 12, flags: DIFlagFwdDecl)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1715, file: !1636, line: 969, baseType: !2284, size: 64, offset: 9216)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2286, line: 82, size: 7296, elements: !2287)
!2286 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2287 = !{!2288, !2289, !2290, !2291, !2292, !2293, !2294, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2323, !2332, !2333, !2335, !2336, !2337, !2340, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2370, !2371, !2378, !2379, !2380, !2381, !2382, !2383}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2285, file: !2286, line: 83, baseType: !1726, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2285, file: !2286, line: 84, baseType: !327, size: 32, offset: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2285, file: !2286, line: 85, baseType: !109, size: 32, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2285, file: !2286, line: 86, baseType: !301, size: 128, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2285, file: !2286, line: 88, baseType: !1688, size: 128, offset: 256)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2285, file: !2286, line: 91, baseType: !1714, size: 64, offset: 384)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2285, file: !2286, line: 94, baseType: !2295, size: 192, offset: 448)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2296, line: 30, size: 192, elements: !2297)
!2296 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2297 = !{!2298, !2299}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2295, file: !2296, line: 31, baseType: !301, size: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2295, file: !2296, line: 32, baseType: !2300, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2301, line: 25, baseType: !2302)
!2301 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2301, line: 23, size: 64, elements: !2303)
!2303 = !{!2304}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2302, file: !2301, line: 24, baseType: !1864, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2285, file: !2286, line: 97, baseType: !985, size: 64, offset: 640)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2285, file: !2286, line: 100, baseType: !109, size: 32, offset: 704)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2285, file: !2286, line: 106, baseType: !109, size: 32, offset: 736)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2285, file: !2286, line: 107, baseType: !1714, size: 64, offset: 768)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2285, file: !2286, line: 110, baseType: !109, size: 32, offset: 832)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2285, file: !2286, line: 111, baseType: !7, size: 32, offset: 864)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2285, file: !2286, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2285, file: !2286, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2285, file: !2286, line: 128, baseType: !109, size: 32, offset: 928)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2285, file: !2286, line: 129, baseType: !301, size: 128, offset: 960)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2285, file: !2286, line: 132, baseType: !1788, size: 512, offset: 1088)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2285, file: !2286, line: 133, baseType: !1796, size: 64, offset: 1600)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2285, file: !2286, line: 140, baseType: !2318, size: 256, offset: 1664)
!2318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2319, size: 256, elements: !401)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2286, line: 38, size: 128, elements: !2320)
!2320 = !{!2321, !2322}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2319, file: !2286, line: 39, baseType: !207, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2319, file: !2286, line: 40, baseType: !207, size: 64, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2285, file: !2286, line: 146, baseType: !2324, size: 192, offset: 1920)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2286, line: 66, size: 192, elements: !2325)
!2325 = !{!2326}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2324, file: !2286, line: 67, baseType: !2327, size: 192)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2286, line: 47, size: 192, elements: !2328)
!2328 = !{!2329, !2330, !2331}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2286, line: 48, baseType: !277, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2286, line: 49, baseType: !277, size: 64, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2327, file: !2286, line: 50, baseType: !277, size: 64, offset: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2285, file: !2286, line: 150, baseType: !2046, size: 640, offset: 2112)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2285, file: !2286, line: 153, baseType: !2334, size: 256, offset: 2752)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1966, size: 256, elements: !375)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2285, file: !2286, line: 159, baseType: !1966, size: 64, offset: 3008)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2285, file: !2286, line: 162, baseType: !109, size: 32, offset: 3072)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2285, file: !2286, line: 164, baseType: !2338, size: 64, offset: 3136)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2286, line: 164, flags: DIFlagFwdDecl)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2285, file: !2286, line: 175, baseType: !2341, size: 32, offset: 3200)
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !749, line: 805, baseType: !2342)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !749, line: 798, size: 32, elements: !2343)
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2342, file: !749, line: 803, baseType: !748, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2342, file: !749, line: 804, baseType: !285, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2285, file: !2286, line: 176, baseType: !207, size: 64, offset: 3264)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2285, file: !2286, line: 176, baseType: !207, size: 64, offset: 3328)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2285, file: !2286, line: 176, baseType: !207, size: 64, offset: 3392)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2285, file: !2286, line: 176, baseType: !207, size: 64, offset: 3456)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2285, file: !2286, line: 177, baseType: !207, size: 64, offset: 3520)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2285, file: !2286, line: 178, baseType: !207, size: 64, offset: 3584)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2285, file: !2286, line: 179, baseType: !2034, size: 128, offset: 3648)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2285, file: !2286, line: 180, baseType: !193, size: 64, offset: 3776)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2285, file: !2286, line: 180, baseType: !193, size: 64, offset: 3840)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2285, file: !2286, line: 180, baseType: !193, size: 64, offset: 3904)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2285, file: !2286, line: 180, baseType: !193, size: 64, offset: 3968)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2285, file: !2286, line: 181, baseType: !193, size: 64, offset: 4032)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2285, file: !2286, line: 181, baseType: !193, size: 64, offset: 4096)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2285, file: !2286, line: 181, baseType: !193, size: 64, offset: 4160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2285, file: !2286, line: 181, baseType: !193, size: 64, offset: 4224)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2285, file: !2286, line: 182, baseType: !193, size: 64, offset: 4288)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2285, file: !2286, line: 182, baseType: !193, size: 64, offset: 4352)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2285, file: !2286, line: 182, baseType: !193, size: 64, offset: 4416)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2285, file: !2286, line: 182, baseType: !193, size: 64, offset: 4480)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2285, file: !2286, line: 183, baseType: !193, size: 64, offset: 4544)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2285, file: !2286, line: 183, baseType: !193, size: 64, offset: 4608)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2285, file: !2286, line: 184, baseType: !2368, offset: 4672)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2369, line: 12, elements: !299)
!2369 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2285, file: !2286, line: 192, baseType: !209, size: 64, offset: 4672)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2285, file: !2286, line: 203, baseType: !2372, size: 2048, offset: 4736)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2373, size: 2048, elements: !382)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2374, line: 43, size: 128, elements: !2375)
!2374 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2375 = !{!2376, !2377}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2373, file: !2374, line: 44, baseType: !576, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2373, file: !2374, line: 45, baseType: !576, size: 64, offset: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2285, file: !2286, line: 220, baseType: !844, size: 8, offset: 6784)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2285, file: !2286, line: 221, baseType: !2122, size: 16, offset: 6800)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2285, file: !2286, line: 222, baseType: !2122, size: 16, offset: 6816)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2285, file: !2286, line: 224, baseType: !697, size: 64, offset: 6848)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2285, file: !2286, line: 227, baseType: !271, size: 192, offset: 6912)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2285, file: !2286, line: 233, baseType: !271, size: 192, offset: 7104)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1715, file: !1636, line: 970, baseType: !2385, size: 64, offset: 9280)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2286, line: 20, size: 16576, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2391}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2386, file: !2286, line: 21, baseType: !285)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2386, file: !2286, line: 22, baseType: !1726, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2386, file: !2286, line: 23, baseType: !1688, size: 128, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2386, file: !2286, line: 24, baseType: !2392, size: 16384, offset: 192)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2393, size: 16384, elements: !2413)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2296, line: 49, size: 256, elements: !2394)
!2394 = !{!2395}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2393, file: !2296, line: 50, baseType: !2396, size: 256)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2296, line: 35, size: 256, elements: !2397)
!2397 = !{!2398, !2405, !2406, !2412}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2396, file: !2296, line: 37, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2400, line: 19, baseType: !2401)
!2400 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2400, line: 18, baseType: !2403)
!2403 = !DISubroutineType(types: !2404)
!2404 = !{null, !109}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2396, file: !2296, line: 38, baseType: !193, size: 64, offset: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2396, file: !2296, line: 44, baseType: !2407, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2400, line: 22, baseType: !2408)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2400, line: 21, baseType: !2410)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2396, file: !2296, line: 46, baseType: !2300, size: 64, offset: 192)
!2413 = !{!2414}
!2414 = !DISubrange(count: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1715, file: !1636, line: 971, baseType: !2300, size: 64, offset: 9344)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1715, file: !1636, line: 972, baseType: !2300, size: 64, offset: 9408)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1715, file: !1636, line: 974, baseType: !2300, size: 64, offset: 9472)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1715, file: !1636, line: 975, baseType: !2295, size: 192, offset: 9536)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1715, file: !1636, line: 976, baseType: !193, size: 64, offset: 9728)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1715, file: !1636, line: 977, baseType: !574, size: 64, offset: 9792)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1715, file: !1636, line: 978, baseType: !7, size: 32, offset: 9856)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1715, file: !1636, line: 980, baseType: !729, size: 64, offset: 9920)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1715, file: !1636, line: 989, baseType: !2424, size: 128, offset: 9984)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2425, line: 35, size: 128, elements: !2426)
!2425 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2426 = !{!2427, !2428, !2429}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2424, file: !2425, line: 36, baseType: !109, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2424, file: !2425, line: 37, baseType: !327, size: 32, offset: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2424, file: !2425, line: 38, baseType: !2430, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2425, line: 23, flags: DIFlagFwdDecl)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1715, file: !1636, line: 992, baseType: !207, size: 64, offset: 10112)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1715, file: !1636, line: 993, baseType: !207, size: 64, offset: 10176)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1715, file: !1636, line: 996, baseType: !285, offset: 10240)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1715, file: !1636, line: 999, baseType: !1104, offset: 10240)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1715, file: !1636, line: 1001, baseType: !2437, size: 64, offset: 10240)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1636, line: 636, size: 64, elements: !2438)
!2438 = !{!2439}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2437, file: !1636, line: 637, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1715, file: !1636, line: 1005, baseType: !1093, size: 128, offset: 10304)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1715, file: !1636, line: 1007, baseType: !1714, size: 64, offset: 10432)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1715, file: !1636, line: 1009, baseType: !2444, size: 64, offset: 10496)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1636, line: 1009, flags: DIFlagFwdDecl)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1715, file: !1636, line: 1043, baseType: !177, size: 64, offset: 10560)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1715, file: !1636, line: 1046, baseType: !2448, size: 64, offset: 10624)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1636, line: 41, flags: DIFlagFwdDecl)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1715, file: !1636, line: 1050, baseType: !2451, size: 64, offset: 10688)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1636, line: 42, flags: DIFlagFwdDecl)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1715, file: !1636, line: 1054, baseType: !2454, size: 64, offset: 10752)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1636, line: 55, flags: DIFlagFwdDecl)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1715, file: !1636, line: 1056, baseType: !1634, size: 64, offset: 10816)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1715, file: !1636, line: 1058, baseType: !2458, size: 64, offset: 10880)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2460, line: 99, size: 704, elements: !2461)
!2460 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2461 = !{!2462, !2463, !2464, !2465, !2466, !2467, !2468, !2487, !2488}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2459, file: !2460, line: 100, baseType: !275, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2459, file: !2460, line: 101, baseType: !327, size: 32, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2459, file: !2460, line: 102, baseType: !327, size: 32, offset: 96)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2459, file: !2460, line: 105, baseType: !285, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2459, file: !2460, line: 107, baseType: !391, size: 16, offset: 128)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2459, file: !2460, line: 109, baseType: !1084, size: 128, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2459, file: !2460, line: 110, baseType: !2469, size: 64, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2460, line: 73, size: 448, elements: !2471)
!2471 = !{!2472, !2475, !2476, !2481, !2486}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2470, file: !2460, line: 74, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2460, line: 74, flags: DIFlagFwdDecl)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2470, file: !2460, line: 75, baseType: !2458, size: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, scope: !2470, file: !2460, line: 83, baseType: !2477, size: 128, offset: 128)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2470, file: !2460, line: 83, size: 128, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2477, file: !2460, line: 84, baseType: !301, size: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2477, file: !2460, line: 85, baseType: !1258, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, scope: !2470, file: !2460, line: 87, baseType: !2482, size: 128, offset: 256)
!2482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2470, file: !2460, line: 87, size: 128, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2482, file: !2460, line: 88, baseType: !523, size: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2482, file: !2460, line: 89, baseType: !726, size: 128, align: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2470, file: !2460, line: 92, baseType: !7, size: 32, offset: 384)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2459, file: !2460, line: 111, baseType: !985, size: 64, offset: 384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2459, file: !2460, line: 113, baseType: !467, size: 256, offset: 448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1715, file: !1636, line: 1061, baseType: !2490, size: 64, offset: 10944)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1636, line: 43, flags: DIFlagFwdDecl)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1715, file: !1636, line: 1064, baseType: !193, size: 64, offset: 11008)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1715, file: !1636, line: 1065, baseType: !2494, size: 64, offset: 11072)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2296, line: 14, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2296, line: 12, size: 384, elements: !2497)
!2497 = !{!2498}
!2498 = !DIDerivedType(tag: DW_TAG_member, scope: !2496, file: !2296, line: 13, baseType: !2499, size: 384)
!2499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2496, file: !2296, line: 13, size: 384, elements: !2500)
!2500 = !{!2501, !2502, !2503, !2504}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2499, file: !2296, line: 13, baseType: !109, size: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2499, file: !2296, line: 13, baseType: !109, size: 32, offset: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2499, file: !2296, line: 13, baseType: !109, size: 32, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2499, file: !2296, line: 13, baseType: !2505, size: 256, offset: 128)
!2505 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2506, line: 32, size: 256, elements: !2507)
!2506 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2507 = !{!2508, !2513, !2526, !2532, !2541, !2561, !2566}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2505, file: !2506, line: 37, baseType: !2509, size: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 34, size: 64, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2509, file: !2506, line: 35, baseType: !1955, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2509, file: !2506, line: 36, baseType: !795, size: 32, offset: 32)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2505, file: !2506, line: 45, baseType: !2514, size: 192)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 40, size: 192, elements: !2515)
!2515 = !{!2516, !2518, !2519, !2525}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2514, file: !2506, line: 41, baseType: !2517, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !572, line: 95, baseType: !109)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2514, file: !2506, line: 42, baseType: !109, size: 32, offset: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2514, file: !2506, line: 43, baseType: !2520, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2506, line: 11, baseType: !2521)
!2521 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2506, line: 8, size: 64, elements: !2522)
!2522 = !{!2523, !2524}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2521, file: !2506, line: 9, baseType: !109, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2521, file: !2506, line: 10, baseType: !177, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2514, file: !2506, line: 44, baseType: !109, size: 32, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2505, file: !2506, line: 52, baseType: !2527, size: 128)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 48, size: 128, elements: !2528)
!2528 = !{!2529, !2530, !2531}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2527, file: !2506, line: 49, baseType: !1955, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2527, file: !2506, line: 50, baseType: !795, size: 32, offset: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2527, file: !2506, line: 51, baseType: !2520, size: 64, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2505, file: !2506, line: 61, baseType: !2533, size: 256)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 55, size: 256, elements: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2540}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2533, file: !2506, line: 56, baseType: !1955, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2533, file: !2506, line: 57, baseType: !795, size: 32, offset: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2533, file: !2506, line: 58, baseType: !109, size: 32, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2533, file: !2506, line: 59, baseType: !2539, size: 64, offset: 128)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !572, line: 94, baseType: !573)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2533, file: !2506, line: 60, baseType: !2539, size: 64, offset: 192)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2505, file: !2506, line: 95, baseType: !2542, size: 256)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 64, size: 256, elements: !2543)
!2543 = !{!2544, !2545}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2542, file: !2506, line: 65, baseType: !177, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2506, line: 77, baseType: !2546, size: 192, offset: 64)
!2546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2506, line: 77, size: 192, elements: !2547)
!2547 = !{!2548, !2549, !2556}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2546, file: !2506, line: 82, baseType: !2122, size: 16)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2546, file: !2506, line: 88, baseType: !2550, size: 192)
!2550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2546, file: !2506, line: 84, size: 192, elements: !2551)
!2551 = !{!2552, !2554, !2555}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2550, file: !2506, line: 85, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 64, elements: !1826)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2550, file: !2506, line: 86, baseType: !177, size: 64, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2550, file: !2506, line: 87, baseType: !177, size: 64, offset: 128)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2546, file: !2506, line: 93, baseType: !2557, size: 96)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2546, file: !2506, line: 90, size: 96, elements: !2558)
!2558 = !{!2559, !2560}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2557, file: !2506, line: 91, baseType: !2553, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2557, file: !2506, line: 92, baseType: !187, size: 32, offset: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2505, file: !2506, line: 101, baseType: !2562, size: 128)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 98, size: 128, elements: !2563)
!2563 = !{!2564, !2565}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2562, file: !2506, line: 99, baseType: !194, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2562, file: !2506, line: 100, baseType: !109, size: 32, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2505, file: !2506, line: 108, baseType: !2567, size: 128)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2505, file: !2506, line: 104, size: 128, elements: !2568)
!2568 = !{!2569, !2570, !2571}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2567, file: !2506, line: 105, baseType: !177, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2567, file: !2506, line: 106, baseType: !109, size: 32, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2567, file: !2506, line: 107, baseType: !7, size: 32, offset: 96)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1715, file: !1636, line: 1067, baseType: !2368, offset: 11136)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1715, file: !1636, line: 1099, baseType: !2574, size: 64, offset: 11136)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1636, line: 56, flags: DIFlagFwdDecl)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1715, file: !1636, line: 1103, baseType: !301, size: 128, offset: 11200)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1715, file: !1636, line: 1104, baseType: !2578, size: 64, offset: 11328)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1636, line: 46, flags: DIFlagFwdDecl)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1715, file: !1636, line: 1105, baseType: !271, size: 192, offset: 11392)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1715, file: !1636, line: 1106, baseType: !7, size: 32, offset: 11584)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1715, file: !1636, line: 1109, baseType: !2583, size: 128, offset: 11648)
!2583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2584, size: 128, elements: !401)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1636, line: 51, flags: DIFlagFwdDecl)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1715, file: !1636, line: 1110, baseType: !271, size: 192, offset: 11776)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1715, file: !1636, line: 1111, baseType: !301, size: 128, offset: 11968)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1715, file: !1636, line: 1173, baseType: !2589, size: 64, offset: 12096)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2591, line: 62, size: 256, align: 256, elements: !2592)
!2591 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2592 = !{!2593, !2594, !2595, !2600}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2590, file: !2591, line: 75, baseType: !187, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2590, file: !2591, line: 90, baseType: !187, size: 32, offset: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2590, file: !2591, line: 124, baseType: !2596, size: 64, offset: 64)
!2596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2590, file: !2591, line: 109, size: 64, elements: !2597)
!2597 = !{!2598, !2599}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2596, file: !2591, line: 110, baseType: !208, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2596, file: !2591, line: 112, baseType: !208, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2590, file: !2591, line: 144, baseType: !187, size: 32, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1715, file: !1636, line: 1174, baseType: !185, size: 32, offset: 12160)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1715, file: !1636, line: 1179, baseType: !193, size: 64, offset: 12224)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1715, file: !1636, line: 1182, baseType: !2604, size: 128, offset: 12288)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1875, line: 76, size: 128, elements: !2605)
!2605 = !{!2606, !2611, !2612}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2604, file: !1875, line: 85, baseType: !2607, size: 64)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2608, line: 7, size: 64, elements: !2609)
!2608 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2609 = !{!2610}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2607, file: !2608, line: 12, baseType: !1861, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2604, file: !1875, line: 88, baseType: !844, size: 8, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2604, file: !1875, line: 95, baseType: !844, size: 8, offset: 72)
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !1715, file: !1636, line: 1184, baseType: !2614, size: 128, offset: 12416)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1715, file: !1636, line: 1184, size: 128, elements: !2615)
!2615 = !{!2616, !2617}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2614, file: !1636, line: 1185, baseType: !1726, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2614, file: !1636, line: 1186, baseType: !726, size: 128, align: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1715, file: !1636, line: 1190, baseType: !2619, size: 64, offset: 12544)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1636, line: 53, flags: DIFlagFwdDecl)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1715, file: !1636, line: 1192, baseType: !2622, size: 128, offset: 12608)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1875, line: 64, size: 128, elements: !2623)
!2623 = !{!2624, !2625, !2626}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2622, file: !1875, line: 65, baseType: !1067, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2622, file: !1875, line: 67, baseType: !187, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2622, file: !1875, line: 68, baseType: !187, size: 32, offset: 96)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1715, file: !1636, line: 1206, baseType: !109, size: 32, offset: 12736)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1715, file: !1636, line: 1207, baseType: !109, size: 32, offset: 12768)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1715, file: !1636, line: 1209, baseType: !193, size: 64, offset: 12800)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1715, file: !1636, line: 1219, baseType: !207, size: 64, offset: 12864)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1715, file: !1636, line: 1220, baseType: !207, size: 64, offset: 12928)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1715, file: !1636, line: 1317, baseType: !109, size: 32, offset: 12992)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1715, file: !1636, line: 1319, baseType: !1714, size: 64, offset: 13056)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1715, file: !1636, line: 1322, baseType: !2635, size: 64, offset: 13120)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2637, line: 56, size: 512, elements: !2638)
!2637 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644, !2645, !2647}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2636, file: !2637, line: 57, baseType: !2635, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2636, file: !2637, line: 58, baseType: !177, size: 64, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2636, file: !2637, line: 59, baseType: !193, size: 64, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2636, file: !2637, line: 60, baseType: !193, size: 64, offset: 192)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2636, file: !2637, line: 61, baseType: !1144, size: 64, offset: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2636, file: !2637, line: 62, baseType: !7, size: 32, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2636, file: !2637, line: 63, baseType: !2646, size: 64, offset: 384)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !190, line: 153, baseType: !207)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2636, file: !2637, line: 64, baseType: !2648, size: 64, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1715, file: !1636, line: 1326, baseType: !1726, size: 32, offset: 13184)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1715, file: !1636, line: 1342, baseType: !177, size: 64, offset: 13248)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1715, file: !1636, line: 1343, baseType: !208, size: 64, offset: 13312)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1715, file: !1636, line: 1344, baseType: !207, size: 64, offset: 13376)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1715, file: !1636, line: 1345, baseType: !208, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1715, file: !1636, line: 1346, baseType: !208, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1715, file: !1636, line: 1347, baseType: !208, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1715, file: !1636, line: 1348, baseType: !726, size: 128, align: 64, offset: 13504)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1715, file: !1636, line: 1358, baseType: !2659, size: 34816, offset: 13824)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2660, line: 485, size: 34816, elements: !2661)
!2660 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2661 = !{!2662, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2691, !2692, !2693, !2694, !2695, !2696, !2699, !2700, !2701}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2659, file: !2660, line: 487, baseType: !2663, size: 192)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2664, size: 192, elements: !995)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2665, line: 16, size: 64, elements: !2666)
!2665 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2664, file: !2665, line: 17, baseType: !1183, size: 16)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2664, file: !2665, line: 18, baseType: !1183, size: 16, offset: 16)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2664, file: !2665, line: 19, baseType: !1183, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2664, file: !2665, line: 19, baseType: !1183, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2664, file: !2665, line: 19, baseType: !1183, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2664, file: !2665, line: 19, baseType: !1183, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2664, file: !2665, line: 19, baseType: !1183, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2664, file: !2665, line: 20, baseType: !1183, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2664, file: !2665, line: 20, baseType: !1183, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2664, file: !2665, line: 20, baseType: !1183, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2664, file: !2665, line: 20, baseType: !1183, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2664, file: !2665, line: 20, baseType: !1183, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2664, file: !2665, line: 20, baseType: !1183, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2659, file: !2660, line: 491, baseType: !193, size: 64, offset: 192)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2659, file: !2660, line: 495, baseType: !391, size: 16, offset: 256)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2659, file: !2660, line: 496, baseType: !391, size: 16, offset: 272)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2659, file: !2660, line: 497, baseType: !391, size: 16, offset: 288)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2659, file: !2660, line: 498, baseType: !391, size: 16, offset: 304)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2659, file: !2660, line: 502, baseType: !193, size: 64, offset: 320)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2659, file: !2660, line: 503, baseType: !193, size: 64, offset: 384)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2659, file: !2660, line: 514, baseType: !2688, size: 256, offset: 448)
!2688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2689, size: 256, elements: !375)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2660, line: 483, flags: DIFlagFwdDecl)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2659, file: !2660, line: 516, baseType: !193, size: 64, offset: 704)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2659, file: !2660, line: 518, baseType: !193, size: 64, offset: 768)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2659, file: !2660, line: 520, baseType: !193, size: 64, offset: 832)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2659, file: !2660, line: 521, baseType: !193, size: 64, offset: 896)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2659, file: !2660, line: 522, baseType: !193, size: 64, offset: 960)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2659, file: !2660, line: 528, baseType: !2697, size: 64, offset: 1024)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2660, line: 10, flags: DIFlagFwdDecl)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2659, file: !2660, line: 535, baseType: !193, size: 64, offset: 1088)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2659, file: !2660, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2659, file: !2660, line: 540, baseType: !2702, size: 33280, offset: 1536)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2703, line: 317, size: 33280, elements: !2704)
!2703 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2704 = !{!2705, !2706, !2707}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2702, file: !2703, line: 330, baseType: !7, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2702, file: !2703, line: 337, baseType: !193, size: 64, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2702, file: !2703, line: 348, baseType: !2708, size: 32768, offset: 512)
!2708 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2703, line: 304, size: 32768, elements: !2709)
!2709 = !{!2710, !2725, !2764, !2814, !2827}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2708, file: !2703, line: 305, baseType: !2711, size: 896)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2703, line: 12, size: 896, elements: !2712)
!2712 = !{!2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2724}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2711, file: !2703, line: 13, baseType: !185, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2711, file: !2703, line: 14, baseType: !185, size: 32, offset: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2711, file: !2703, line: 15, baseType: !185, size: 32, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2711, file: !2703, line: 16, baseType: !185, size: 32, offset: 96)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2711, file: !2703, line: 17, baseType: !185, size: 32, offset: 128)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2711, file: !2703, line: 18, baseType: !185, size: 32, offset: 160)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2711, file: !2703, line: 19, baseType: !185, size: 32, offset: 192)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2711, file: !2703, line: 22, baseType: !2721, size: 640, offset: 224)
!2721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 640, elements: !2722)
!2722 = !{!2723}
!2723 = !DISubrange(count: 20)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2711, file: !2703, line: 25, baseType: !185, size: 32, offset: 864)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2708, file: !2703, line: 306, baseType: !2726, size: 4096, align: 128)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2703, line: 34, size: 4096, align: 128, elements: !2727)
!2727 = !{!2728, !2729, !2730, !2731, !2732, !2747, !2748, !2749, !2753, !2755, !2759}
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2726, file: !2703, line: 35, baseType: !1183, size: 16)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2726, file: !2703, line: 36, baseType: !1183, size: 16, offset: 16)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2726, file: !2703, line: 37, baseType: !1183, size: 16, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2726, file: !2703, line: 38, baseType: !1183, size: 16, offset: 48)
!2732 = !DIDerivedType(tag: DW_TAG_member, scope: !2726, file: !2703, line: 39, baseType: !2733, size: 128, offset: 64)
!2733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2726, file: !2703, line: 39, size: 128, elements: !2734)
!2734 = !{!2735, !2740}
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2733, file: !2703, line: 40, baseType: !2736, size: 128)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2733, file: !2703, line: 40, size: 128, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2736, file: !2703, line: 41, baseType: !207, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2736, file: !2703, line: 42, baseType: !207, size: 64, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2733, file: !2703, line: 44, baseType: !2741, size: 128)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2733, file: !2703, line: 44, size: 128, elements: !2742)
!2742 = !{!2743, !2744, !2745, !2746}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2741, file: !2703, line: 45, baseType: !185, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2741, file: !2703, line: 46, baseType: !185, size: 32, offset: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2741, file: !2703, line: 47, baseType: !185, size: 32, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2741, file: !2703, line: 48, baseType: !185, size: 32, offset: 96)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2726, file: !2703, line: 51, baseType: !185, size: 32, offset: 192)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2726, file: !2703, line: 52, baseType: !185, size: 32, offset: 224)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2726, file: !2703, line: 55, baseType: !2750, size: 1024, offset: 256)
!2750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 1024, elements: !2751)
!2751 = !{!2752}
!2752 = !DISubrange(count: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2726, file: !2703, line: 58, baseType: !2754, size: 2048, offset: 1280)
!2754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2048, elements: !2413)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2726, file: !2703, line: 60, baseType: !2756, size: 384, offset: 3328)
!2756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 384, elements: !2757)
!2757 = !{!2758}
!2758 = !DISubrange(count: 12)
!2759 = !DIDerivedType(tag: DW_TAG_member, scope: !2726, file: !2703, line: 62, baseType: !2760, size: 384, offset: 3712)
!2760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2726, file: !2703, line: 62, size: 384, elements: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2760, file: !2703, line: 63, baseType: !2756, size: 384)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2760, file: !2703, line: 64, baseType: !2756, size: 384)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2708, file: !2703, line: 307, baseType: !2765, size: 1088)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2703, line: 79, size: 1088, elements: !2766)
!2766 = !{!2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2813}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2765, file: !2703, line: 80, baseType: !185, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2765, file: !2703, line: 81, baseType: !185, size: 32, offset: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2765, file: !2703, line: 82, baseType: !185, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2765, file: !2703, line: 83, baseType: !185, size: 32, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2765, file: !2703, line: 84, baseType: !185, size: 32, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2765, file: !2703, line: 85, baseType: !185, size: 32, offset: 160)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2765, file: !2703, line: 86, baseType: !185, size: 32, offset: 192)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2765, file: !2703, line: 88, baseType: !2721, size: 640, offset: 224)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2765, file: !2703, line: 89, baseType: !223, size: 8, offset: 864)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2765, file: !2703, line: 90, baseType: !223, size: 8, offset: 872)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2765, file: !2703, line: 91, baseType: !223, size: 8, offset: 880)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2765, file: !2703, line: 92, baseType: !223, size: 8, offset: 888)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2765, file: !2703, line: 93, baseType: !223, size: 8, offset: 896)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2765, file: !2703, line: 94, baseType: !223, size: 8, offset: 904)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2765, file: !2703, line: 95, baseType: !2782, size: 64, offset: 960)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2784, line: 11, size: 128, elements: !2785)
!2784 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2785 = !{!2786, !2787}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2783, file: !2784, line: 12, baseType: !194, size: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2783, file: !2784, line: 13, baseType: !2788, size: 64, offset: 64)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2790, line: 56, size: 1344, elements: !2791)
!2790 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2789, file: !2790, line: 61, baseType: !193, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2789, file: !2790, line: 62, baseType: !193, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2789, file: !2790, line: 63, baseType: !193, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2789, file: !2790, line: 64, baseType: !193, size: 64, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2789, file: !2790, line: 65, baseType: !193, size: 64, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2789, file: !2790, line: 66, baseType: !193, size: 64, offset: 320)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2789, file: !2790, line: 68, baseType: !193, size: 64, offset: 384)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2789, file: !2790, line: 69, baseType: !193, size: 64, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2789, file: !2790, line: 70, baseType: !193, size: 64, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2789, file: !2790, line: 71, baseType: !193, size: 64, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2789, file: !2790, line: 72, baseType: !193, size: 64, offset: 640)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2789, file: !2790, line: 73, baseType: !193, size: 64, offset: 704)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2789, file: !2790, line: 74, baseType: !193, size: 64, offset: 768)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2789, file: !2790, line: 75, baseType: !193, size: 64, offset: 832)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2789, file: !2790, line: 76, baseType: !193, size: 64, offset: 896)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2789, file: !2790, line: 81, baseType: !193, size: 64, offset: 960)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2789, file: !2790, line: 83, baseType: !193, size: 64, offset: 1024)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2789, file: !2790, line: 84, baseType: !193, size: 64, offset: 1088)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2789, file: !2790, line: 85, baseType: !193, size: 64, offset: 1152)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2789, file: !2790, line: 86, baseType: !193, size: 64, offset: 1216)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2789, file: !2790, line: 87, baseType: !193, size: 64, offset: 1280)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2765, file: !2703, line: 96, baseType: !185, size: 32, offset: 1024)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2708, file: !2703, line: 308, baseType: !2815, size: 4608, align: 512)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2703, line: 289, size: 4608, align: 512, elements: !2816)
!2816 = !{!2817, !2818, !2825}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2815, file: !2703, line: 290, baseType: !2726, size: 4096, align: 128)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2815, file: !2703, line: 291, baseType: !2819, size: 512, offset: 4096)
!2819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2703, line: 268, size: 512, elements: !2820)
!2820 = !{!2821, !2822, !2823}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2819, file: !2703, line: 269, baseType: !207, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2819, file: !2703, line: 270, baseType: !207, size: 64, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2819, file: !2703, line: 271, baseType: !2824, size: 384, offset: 128)
!2824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 384, elements: !2140)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2815, file: !2703, line: 292, baseType: !2826, offset: 4608)
!2826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, elements: !1416)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2708, file: !2703, line: 309, baseType: !2828, size: 32768)
!2828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 32768, elements: !2829)
!2829 = !{!2830}
!2830 = !DISubrange(count: 4096)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !1696, file: !1697, line: 16, baseType: !1688, size: 128, offset: 448)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1696, file: !1697, line: 17, baseType: !327, size: 32, offset: 576)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !950, file: !44, line: 1465, baseType: !177, size: 64, offset: 6400)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !950, file: !44, line: 1468, baseType: !185, size: 32, offset: 6464)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !950, file: !44, line: 1470, baseType: !890, size: 64, offset: 6528)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !950, file: !44, line: 1471, baseType: !890, size: 64, offset: 6592)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !950, file: !44, line: 1473, baseType: !187, size: 32, offset: 6656)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !950, file: !44, line: 1474, baseType: !2839, size: 64, offset: 6720)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !950, file: !44, line: 1477, baseType: !2842, size: 256, offset: 6784)
!2842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 256, elements: !2751)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !950, file: !44, line: 1478, baseType: !2844, size: 128, offset: 7040)
!2844 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2845, line: 18, baseType: !2846)
!2845 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2845, line: 16, size: 128, elements: !2847)
!2847 = !{!2848}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2846, file: !2845, line: 17, baseType: !2849, size: 128)
!2849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 128, elements: !382)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !950, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !950, file: !44, line: 1481, baseType: !2852, size: 32, offset: 7200)
!2852 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !190, line: 150, baseType: !7)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !950, file: !44, line: 1487, baseType: !271, size: 192, offset: 7232)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !950, file: !44, line: 1493, baseType: !422, size: 64, offset: 7424)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !950, file: !44, line: 1495, baseType: !2856, size: 64, offset: 7488)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2858)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !741, line: 135, size: 1024, align: 512, elements: !2859)
!2859 = !{!2860, !2864, !2865, !2872, !2878, !2882, !2886, !2890, !2891, !2895, !2899, !2904, !2908}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2858, file: !741, line: 136, baseType: !2861, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!109, !743, !7}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2858, file: !741, line: 137, baseType: !2861, size: 64, offset: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2858, file: !741, line: 138, baseType: !2866, size: 64, offset: 128)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!109, !2869, !2871}
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !744)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2858, file: !741, line: 139, baseType: !2873, size: 64, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!109, !2869, !7, !422, !2876}
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !767)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2858, file: !741, line: 141, baseType: !2879, size: 64, offset: 256)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!109, !2869}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2858, file: !741, line: 142, baseType: !2883, size: 64, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!109, !743}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2858, file: !741, line: 143, baseType: !2887, size: 64, offset: 384)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{null, !743}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2858, file: !741, line: 144, baseType: !2887, size: 64, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2858, file: !741, line: 145, baseType: !2892, size: 64, offset: 512)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{null, !743, !782}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2858, file: !741, line: 146, baseType: !2896, size: 64, offset: 576)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!181, !743, !181, !109}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2858, file: !741, line: 147, baseType: !2900, size: 64, offset: 640)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!739, !2903}
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2858, file: !741, line: 148, baseType: !2905, size: 64, offset: 704)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!109, !899, !844}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2858, file: !741, line: 149, baseType: !2909, size: 64, offset: 768)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!743, !743, !2912}
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !783)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !950, file: !44, line: 1500, baseType: !109, size: 32, offset: 7552)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !950, file: !44, line: 1502, baseType: !2916, size: 448, offset: 7616)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1434, line: 60, size: 448, elements: !2917)
!2917 = !{!2918, !2923, !2924, !2925, !2926, !2927, !2928}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2916, file: !1434, line: 61, baseType: !2919, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!193, !2922, !1432}
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2916, file: !1434, line: 63, baseType: !2919, size: 64, offset: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2916, file: !1434, line: 66, baseType: !194, size: 64, offset: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2916, file: !1434, line: 67, baseType: !109, size: 32, offset: 192)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2916, file: !1434, line: 68, baseType: !7, size: 32, offset: 224)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2916, file: !1434, line: 71, baseType: !301, size: 128, offset: 256)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2916, file: !1434, line: 77, baseType: !2929, size: 64, offset: 384)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !950, file: !44, line: 1505, baseType: !275, size: 64, offset: 8064)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !950, file: !44, line: 1508, baseType: !275, size: 64, offset: 8128)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !950, file: !44, line: 1511, baseType: !109, size: 32, offset: 8192)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !950, file: !44, line: 1514, baseType: !1232, size: 32, offset: 8224)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !950, file: !44, line: 1517, baseType: !537, size: 64, offset: 8256)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !950, file: !44, line: 1518, baseType: !985, size: 64, offset: 8320)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !950, file: !44, line: 1525, baseType: !2006, size: 64, offset: 8384)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !950, file: !44, line: 1532, baseType: !2938, size: 64, offset: 8448)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2939, line: 52, size: 64, elements: !2940)
!2939 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2940 = !{!2941}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2938, file: !2939, line: 53, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2939, line: 40, size: 256, elements: !2944)
!2944 = !{!2945, !2946, !2951}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2943, file: !2939, line: 42, baseType: !285)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2943, file: !2939, line: 44, baseType: !2947, size: 192)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2939, line: 28, size: 192, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2947, file: !2939, line: 29, baseType: !301, size: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2947, file: !2939, line: 31, baseType: !194, size: 64, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2943, file: !2939, line: 49, baseType: !194, size: 64, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !950, file: !44, line: 1533, baseType: !2938, size: 64, offset: 8512)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !950, file: !44, line: 1534, baseType: !726, size: 128, align: 64, offset: 8576)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !950, file: !44, line: 1535, baseType: !467, size: 256, offset: 8704)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !950, file: !44, line: 1537, baseType: !271, size: 192, offset: 8960)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !950, file: !44, line: 1542, baseType: !109, size: 32, offset: 9152)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !950, file: !44, line: 1545, baseType: !285, offset: 9184)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !950, file: !44, line: 1546, baseType: !301, size: 128, offset: 9216)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !950, file: !44, line: 1548, baseType: !285, offset: 9344)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !950, file: !44, line: 1549, baseType: !301, size: 128, offset: 9344)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !783, file: !44, line: 624, baseType: !1079, size: 64, offset: 256)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !783, file: !44, line: 631, baseType: !193, size: 64, offset: 320)
!2963 = !DIDerivedType(tag: DW_TAG_member, scope: !783, file: !44, line: 639, baseType: !2964, size: 32, offset: 384)
!2964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !783, file: !44, line: 639, size: 32, elements: !2965)
!2965 = !{!2966, !2968}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2964, file: !44, line: 640, baseType: !2967, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2964, file: !44, line: 641, baseType: !7, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !783, file: !44, line: 643, baseType: !867, size: 32, offset: 416)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !783, file: !44, line: 644, baseType: !578, size: 64, offset: 448)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !783, file: !44, line: 645, baseType: !886, size: 128, offset: 512)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !783, file: !44, line: 646, baseType: !886, size: 128, offset: 640)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !783, file: !44, line: 647, baseType: !886, size: 128, offset: 768)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !783, file: !44, line: 648, baseType: !285, offset: 896)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !783, file: !44, line: 649, baseType: !391, size: 16, offset: 896)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !783, file: !44, line: 650, baseType: !223, size: 8, offset: 912)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !783, file: !44, line: 651, baseType: !223, size: 8, offset: 920)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !783, file: !44, line: 652, baseType: !1606, size: 64, offset: 960)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !783, file: !44, line: 659, baseType: !193, size: 64, offset: 1024)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !783, file: !44, line: 660, baseType: !1098, size: 256, offset: 1088)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !783, file: !44, line: 662, baseType: !193, size: 64, offset: 1344)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !783, file: !44, line: 663, baseType: !193, size: 64, offset: 1408)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !783, file: !44, line: 665, baseType: !523, size: 128, offset: 1472)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !783, file: !44, line: 666, baseType: !301, size: 128, offset: 1600)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !783, file: !44, line: 675, baseType: !301, size: 128, offset: 1728)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !783, file: !44, line: 676, baseType: !301, size: 128, offset: 1856)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !783, file: !44, line: 677, baseType: !301, size: 128, offset: 1984)
!2988 = !DIDerivedType(tag: DW_TAG_member, scope: !783, file: !44, line: 678, baseType: !2989, size: 128, offset: 2112)
!2989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !783, file: !44, line: 678, size: 128, elements: !2990)
!2990 = !{!2991, !2992}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2989, file: !44, line: 679, baseType: !985, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2989, file: !44, line: 680, baseType: !726, size: 128, align: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !783, file: !44, line: 682, baseType: !277, size: 64, offset: 2240)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !783, file: !44, line: 683, baseType: !277, size: 64, offset: 2304)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !783, file: !44, line: 684, baseType: !327, size: 32, offset: 2368)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !783, file: !44, line: 685, baseType: !327, size: 32, offset: 2400)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !783, file: !44, line: 686, baseType: !327, size: 32, offset: 2432)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !783, file: !44, line: 688, baseType: !327, size: 32, offset: 2464)
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !783, file: !44, line: 690, baseType: !3000, size: 64, offset: 2496)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !783, file: !44, line: 690, size: 64, elements: !3001)
!3001 = !{!3002, !3224}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3000, file: !44, line: 691, baseType: !3003, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3006)
!3006 = !{!3007, !3008, !3012, !3016, !3020, !3021, !3022, !3026, !3039, !3040, !3048, !3052, !3053, !3057, !3058, !3062, !3067, !3068, !3072, !3076, !3184, !3188, !3189, !3193, !3194, !3198, !3202, !3207, !3211, !3215, !3219, !3223}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3005, file: !44, line: 1823, baseType: !178, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3005, file: !44, line: 1824, baseType: !3009, size: 64, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!578, !713, !578, !109}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3005, file: !44, line: 1825, baseType: !3013, size: 64, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DISubroutineType(types: !3015)
!3015 = !{!570, !713, !181, !574, !577}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3005, file: !44, line: 1826, baseType: !3017, size: 64, offset: 192)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!570, !713, !422, !574, !577}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3005, file: !44, line: 1827, baseType: !1168, size: 64, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3005, file: !44, line: 1828, baseType: !1168, size: 64, offset: 320)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3005, file: !44, line: 1829, baseType: !3023, size: 64, offset: 384)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!109, !1171, !844}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3005, file: !44, line: 1830, baseType: !3027, size: 64, offset: 448)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!109, !713, !3030}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3032)
!3032 = !{!3033, !3038}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3031, file: !44, line: 1777, baseType: !3034, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3035)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!109, !3030, !422, !109, !578, !207, !7}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3031, file: !44, line: 1778, baseType: !578, size: 64, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3005, file: !44, line: 1831, baseType: !3027, size: 64, offset: 512)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3005, file: !44, line: 1832, baseType: !3041, size: 64, offset: 576)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!3044, !713, !3046}
!3044 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3045, line: 52, baseType: !7)
!3045 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !969, line: 27, flags: DIFlagFwdDecl)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3005, file: !44, line: 1833, baseType: !3049, size: 64, offset: 640)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!194, !713, !7, !193}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3005, file: !44, line: 1834, baseType: !3049, size: 64, offset: 704)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3005, file: !44, line: 1835, baseType: !3054, size: 64, offset: 768)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{!109, !713, !679}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3005, file: !44, line: 1836, baseType: !193, size: 64, offset: 832)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3005, file: !44, line: 1837, baseType: !3059, size: 64, offset: 896)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!109, !782, !713}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3005, file: !44, line: 1838, baseType: !3063, size: 64, offset: 960)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!109, !713, !3066}
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !177)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3005, file: !44, line: 1839, baseType: !3059, size: 64, offset: 1024)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3005, file: !44, line: 1840, baseType: !3069, size: 64, offset: 1088)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!109, !713, !578, !578, !109}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3005, file: !44, line: 1841, baseType: !3073, size: 64, offset: 1152)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!109, !109, !713, !109}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3005, file: !44, line: 1842, baseType: !3077, size: 64, offset: 1216)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!109, !713, !109, !3080}
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3082)
!3082 = !{!3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3114, !3115, !3116, !3129, !3160}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3081, file: !44, line: 1063, baseType: !3080, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3081, file: !44, line: 1064, baseType: !301, size: 128, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3081, file: !44, line: 1065, baseType: !523, size: 128, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3081, file: !44, line: 1066, baseType: !301, size: 128, offset: 320)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3081, file: !44, line: 1069, baseType: !301, size: 128, offset: 448)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3081, file: !44, line: 1072, baseType: !3066, size: 64, offset: 576)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3081, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3081, file: !44, line: 1074, baseType: !192, size: 8, offset: 672)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3081, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3081, file: !44, line: 1076, baseType: !109, size: 32, offset: 736)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3081, file: !44, line: 1077, baseType: !1688, size: 128, offset: 768)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3081, file: !44, line: 1078, baseType: !713, size: 64, offset: 896)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3081, file: !44, line: 1079, baseType: !578, size: 64, offset: 960)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3081, file: !44, line: 1080, baseType: !578, size: 64, offset: 1024)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3081, file: !44, line: 1082, baseType: !3098, size: 64, offset: 1088)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3100)
!3100 = !{!3101, !3109, !3110, !3111, !3112, !3113}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3099, file: !44, line: 1315, baseType: !3102)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3103, line: 20, baseType: !3104)
!3103 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3103, line: 11, elements: !3105)
!3105 = !{!3106}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3104, file: !3103, line: 12, baseType: !3107)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !297, line: 33, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 31, elements: !299)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3099, file: !44, line: 1316, baseType: !109, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3099, file: !44, line: 1317, baseType: !109, size: 32, offset: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3099, file: !44, line: 1318, baseType: !3098, size: 64, offset: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3099, file: !44, line: 1319, baseType: !713, size: 64, offset: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3099, file: !44, line: 1320, baseType: !726, size: 128, align: 64, offset: 192)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3081, file: !44, line: 1084, baseType: !193, size: 64, offset: 1152)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3081, file: !44, line: 1085, baseType: !193, size: 64, offset: 1216)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3081, file: !44, line: 1087, baseType: !3117, size: 64, offset: 1280)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3119)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3120)
!3120 = !{!3121, !3125}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3119, file: !44, line: 1012, baseType: !3122, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DISubroutineType(types: !3124)
!3124 = !{null, !3080, !3080}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3119, file: !44, line: 1013, baseType: !3126, size: 64, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{null, !3080}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3081, file: !44, line: 1088, baseType: !3130, size: 64, offset: 1344)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3132)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3133)
!3133 = !{!3134, !3138, !3142, !3143, !3147, !3151, !3155, !3159}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3132, file: !44, line: 1017, baseType: !3135, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!3066, !3066}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3132, file: !44, line: 1018, baseType: !3139, size: 64, offset: 64)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{null, !3066}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3132, file: !44, line: 1019, baseType: !3126, size: 64, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3132, file: !44, line: 1020, baseType: !3144, size: 64, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DISubroutineType(types: !3146)
!3146 = !{!109, !3080, !109}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3132, file: !44, line: 1021, baseType: !3148, size: 64, offset: 256)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!844, !3080}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3132, file: !44, line: 1022, baseType: !3152, size: 64, offset: 320)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!109, !3080, !109, !304}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3132, file: !44, line: 1023, baseType: !3156, size: 64, offset: 384)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !3080, !1145}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3132, file: !44, line: 1024, baseType: !3148, size: 64, offset: 448)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3081, file: !44, line: 1097, baseType: !3161, size: 256, offset: 1408)
!3161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3081, file: !44, line: 1089, size: 256, elements: !3162)
!3162 = !{!3163, !3172, !3178}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3161, file: !44, line: 1090, baseType: !3164, size: 256)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3165, line: 10, size: 256, elements: !3166)
!3165 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3166 = !{!3167, !3168, !3171}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3164, file: !3165, line: 11, baseType: !185, size: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3164, file: !3165, line: 12, baseType: !3169, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3165, line: 5, flags: DIFlagFwdDecl)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3164, file: !3165, line: 13, baseType: !301, size: 128, offset: 128)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3161, file: !44, line: 1091, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3165, line: 17, size: 64, elements: !3174)
!3174 = !{!3175}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3173, file: !3165, line: 18, baseType: !3176, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3165, line: 16, flags: DIFlagFwdDecl)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3161, file: !44, line: 1096, baseType: !3179, size: 192)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3161, file: !44, line: 1092, size: 192, elements: !3180)
!3180 = !{!3181, !3182, !3183}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3179, file: !44, line: 1093, baseType: !301, size: 128)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3179, file: !44, line: 1094, baseType: !109, size: 32, offset: 128)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3179, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3005, file: !44, line: 1843, baseType: !3185, size: 64, offset: 1280)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!570, !713, !1067, !109, !574, !577, !109}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3005, file: !44, line: 1844, baseType: !710, size: 64, offset: 1344)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3005, file: !44, line: 1845, baseType: !3190, size: 64, offset: 1408)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!109, !109}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3005, file: !44, line: 1846, baseType: !3077, size: 64, offset: 1472)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3005, file: !44, line: 1847, baseType: !3195, size: 64, offset: 1536)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{!570, !2619, !713, !577, !574, !7}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3005, file: !44, line: 1848, baseType: !3199, size: 64, offset: 1600)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{!570, !713, !577, !2619, !574, !7}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3005, file: !44, line: 1849, baseType: !3203, size: 64, offset: 1664)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!109, !713, !194, !3206, !1145}
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3005, file: !44, line: 1850, baseType: !3208, size: 64, offset: 1728)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = !DISubroutineType(types: !3210)
!3210 = !{!194, !713, !109, !578, !578}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3005, file: !44, line: 1852, baseType: !3212, size: 64, offset: 1792)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{null, !1057, !713}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3005, file: !44, line: 1856, baseType: !3216, size: 64, offset: 1856)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DISubroutineType(types: !3218)
!3218 = !{!570, !713, !578, !713, !578, !574, !7}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3005, file: !44, line: 1858, baseType: !3220, size: 64, offset: 1920)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!578, !713, !578, !713, !578, !578, !7}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3005, file: !44, line: 1861, baseType: !3069, size: 64, offset: 1984)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3000, file: !44, line: 692, baseType: !1010, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !783, file: !44, line: 694, baseType: !3226, size: 64, offset: 2560)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3227, file: !44, line: 1101, baseType: !285)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3227, file: !44, line: 1102, baseType: !301, size: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3227, file: !44, line: 1103, baseType: !301, size: 128, offset: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3227, file: !44, line: 1104, baseType: !301, size: 128, offset: 256)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !783, file: !44, line: 695, baseType: !1080, size: 1216, align: 64, offset: 2624)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !783, file: !44, line: 696, baseType: !301, size: 128, offset: 3840)
!3235 = !DIDerivedType(tag: DW_TAG_member, scope: !783, file: !44, line: 697, baseType: !3236, size: 64, offset: 3968)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !783, file: !44, line: 697, size: 64, elements: !3237)
!3237 = !{!3238, !3239, !3240, !3243, !3244}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3236, file: !44, line: 698, baseType: !2619, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3236, file: !44, line: 699, baseType: !1631, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3236, file: !44, line: 700, baseType: !3241, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3236, file: !44, line: 701, baseType: !181, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3236, file: !44, line: 702, baseType: !7, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !783, file: !44, line: 705, baseType: !187, size: 32, offset: 4032)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !783, file: !44, line: 708, baseType: !187, size: 32, offset: 4064)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !783, file: !44, line: 709, baseType: !2839, size: 64, offset: 4096)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !783, file: !44, line: 720, baseType: !177, size: 64, offset: 4160)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !744, file: !741, line: 98, baseType: !3250, size: 256, offset: 448)
!3250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !2751)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !744, file: !741, line: 101, baseType: !3252, size: 32, offset: 704)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3253, line: 25, size: 32, elements: !3254)
!3253 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3254 = !{!3255}
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !3252, file: !3253, line: 26, baseType: !3256, size: 32)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3252, file: !3253, line: 26, size: 32, elements: !3257)
!3257 = !{!3258}
!3258 = !DIDerivedType(tag: DW_TAG_member, scope: !3256, file: !3253, line: 30, baseType: !3259, size: 32)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3256, file: !3253, line: 30, size: 32, elements: !3260)
!3260 = !{!3261, !3262}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3259, file: !3253, line: 31, baseType: !285)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3259, file: !3253, line: 32, baseType: !109, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !744, file: !741, line: 102, baseType: !2856, size: 64, offset: 768)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !744, file: !741, line: 103, baseType: !949, size: 64, offset: 832)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !744, file: !741, line: 104, baseType: !193, size: 64, offset: 896)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !744, file: !741, line: 105, baseType: !177, size: 64, offset: 960)
!3267 = !DIDerivedType(tag: DW_TAG_member, scope: !744, file: !741, line: 107, baseType: !3268, size: 128, offset: 1024)
!3268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !741, line: 107, size: 128, elements: !3269)
!3269 = !{!3270, !3271}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3268, file: !741, line: 108, baseType: !301, size: 128)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3268, file: !741, line: 109, baseType: !3272, size: 64)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !744, file: !741, line: 111, baseType: !301, size: 128, offset: 1152)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !744, file: !741, line: 112, baseType: !301, size: 128, offset: 1280)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !744, file: !741, line: 120, baseType: !3276, size: 128, offset: 1408)
!3276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !741, line: 116, size: 128, elements: !3277)
!3277 = !{!3278, !3279, !3280}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3276, file: !741, line: 117, baseType: !523, size: 128)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3276, file: !741, line: 118, baseType: !758, size: 128)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3276, file: !741, line: 119, baseType: !726, size: 128, align: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !714, file: !44, line: 922, baseType: !782, size: 64, offset: 256)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !714, file: !44, line: 923, baseType: !3003, size: 64, offset: 320)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !714, file: !44, line: 929, baseType: !285, offset: 384)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !714, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !714, file: !44, line: 931, baseType: !275, size: 64, offset: 448)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !714, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !714, file: !44, line: 933, baseType: !2852, size: 32, offset: 544)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !714, file: !44, line: 934, baseType: !271, size: 192, offset: 576)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !714, file: !44, line: 935, baseType: !578, size: 64, offset: 768)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !714, file: !44, line: 936, baseType: !3291, size: 192, offset: 832)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3291, file: !44, line: 886, baseType: !3102)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3291, file: !44, line: 887, baseType: !1966, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3291, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3291, file: !44, line: 889, baseType: !789, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3291, file: !44, line: 889, baseType: !789, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3291, file: !44, line: 890, baseType: !109, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !714, file: !44, line: 937, baseType: !2063, size: 64, offset: 1024)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !714, file: !44, line: 938, baseType: !3301, size: 256, offset: 1088)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3306, !3307, !3308}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3301, file: !44, line: 897, baseType: !193, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3301, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3301, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3301, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3301, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3301, file: !44, line: 904, baseType: !578, size: 64, offset: 192)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !714, file: !44, line: 940, baseType: !207, size: 64, offset: 1344)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !714, file: !44, line: 945, baseType: !177, size: 64, offset: 1408)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !714, file: !44, line: 949, baseType: !301, size: 128, offset: 1472)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !714, file: !44, line: 950, baseType: !301, size: 128, offset: 1600)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !714, file: !44, line: 952, baseType: !1079, size: 64, offset: 1728)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !714, file: !44, line: 953, baseType: !1232, size: 32, offset: 1792)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !714, file: !44, line: 954, baseType: !1232, size: 32, offset: 1824)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !701, file: !681, line: 398, baseType: !193, size: 64, offset: 256)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !701, file: !681, line: 399, baseType: !193, size: 64, offset: 320)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !701, file: !681, line: 405, baseType: !193, size: 64, offset: 384)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !701, file: !681, line: 406, baseType: !193, size: 64, offset: 448)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !701, file: !681, line: 407, baseType: !3321, size: 64, offset: 512)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1059, line: 286, baseType: !3323)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1059, line: 286, size: 64, elements: !3324)
!3324 = !{!3325}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !3323, file: !1059, line: 286, baseType: !3326, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1382, line: 18, baseType: !193)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !701, file: !681, line: 416, baseType: !327, size: 32, offset: 576)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !701, file: !681, line: 428, baseType: !327, size: 32, offset: 608)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !701, file: !681, line: 437, baseType: !327, size: 32, offset: 640)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !701, file: !681, line: 447, baseType: !327, size: 32, offset: 672)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !701, file: !681, line: 450, baseType: !275, size: 64, offset: 704)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !701, file: !681, line: 452, baseType: !109, size: 32, offset: 768)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !701, file: !681, line: 454, baseType: !285, offset: 800)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !701, file: !681, line: 457, baseType: !1098, size: 256, offset: 832)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !701, file: !681, line: 459, baseType: !301, size: 128, offset: 1088)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !701, file: !681, line: 466, baseType: !193, size: 64, offset: 1216)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !701, file: !681, line: 467, baseType: !193, size: 64, offset: 1280)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !701, file: !681, line: 469, baseType: !193, size: 64, offset: 1344)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !701, file: !681, line: 470, baseType: !193, size: 64, offset: 1408)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !701, file: !681, line: 471, baseType: !277, size: 64, offset: 1472)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !701, file: !681, line: 472, baseType: !193, size: 64, offset: 1536)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !701, file: !681, line: 473, baseType: !193, size: 64, offset: 1600)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !701, file: !681, line: 474, baseType: !193, size: 64, offset: 1664)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !701, file: !681, line: 475, baseType: !193, size: 64, offset: 1728)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !701, file: !681, line: 477, baseType: !285, offset: 1792)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !701, file: !681, line: 478, baseType: !193, size: 64, offset: 1792)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !701, file: !681, line: 478, baseType: !193, size: 64, offset: 1856)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !701, file: !681, line: 478, baseType: !193, size: 64, offset: 1920)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !701, file: !681, line: 478, baseType: !193, size: 64, offset: 1984)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !701, file: !681, line: 479, baseType: !193, size: 64, offset: 2048)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !701, file: !681, line: 479, baseType: !193, size: 64, offset: 2112)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !701, file: !681, line: 479, baseType: !193, size: 64, offset: 2176)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !701, file: !681, line: 480, baseType: !193, size: 64, offset: 2240)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !701, file: !681, line: 480, baseType: !193, size: 64, offset: 2304)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !701, file: !681, line: 480, baseType: !193, size: 64, offset: 2368)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !701, file: !681, line: 480, baseType: !193, size: 64, offset: 2432)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !701, file: !681, line: 482, baseType: !3358, size: 2816, offset: 2496)
!3358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 2816, elements: !3359)
!3359 = !{!3360}
!3360 = !DISubrange(count: 44)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !701, file: !681, line: 488, baseType: !3362, size: 256, offset: 5312)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1875, line: 60, size: 256, elements: !3363)
!3363 = !{!3364}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3362, file: !1875, line: 61, baseType: !3365, size: 256)
!3365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !275, size: 256, elements: !375)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !701, file: !681, line: 490, baseType: !3367, size: 64, offset: 5568)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !681, line: 490, flags: DIFlagFwdDecl)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !701, file: !681, line: 493, baseType: !3370, size: 896, offset: 5632)
!3370 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !3371, line: 53, baseType: !3372)
!3371 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3371, line: 13, size: 896, elements: !3373)
!3373 = !{!3374, !3375, !3376, !3377, !3380, !3381, !3382, !3383, !3403, !3404, !3405}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !3372, file: !3371, line: 18, baseType: !207, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !3372, file: !3371, line: 28, baseType: !277, size: 64, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !3372, file: !3371, line: 31, baseType: !1098, size: 256, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !3372, file: !3371, line: 32, baseType: !3378, size: 64, offset: 384)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !3371, line: 32, flags: DIFlagFwdDecl)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !3372, file: !3371, line: 37, baseType: !391, size: 16, offset: 448)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3372, file: !3371, line: 40, baseType: !271, size: 192, offset: 512)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !3372, file: !3371, line: 41, baseType: !177, size: 64, offset: 704)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !3372, file: !3371, line: 42, baseType: !3384, size: 64, offset: 768)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3386)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !3387, line: 13, size: 896, elements: !3388)
!3387 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!3388 = !{!3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3386, file: !3387, line: 14, baseType: !177, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3386, file: !3387, line: 15, baseType: !193, size: 64, offset: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !3386, file: !3387, line: 17, baseType: !193, size: 64, offset: 128)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !3386, file: !3387, line: 17, baseType: !193, size: 64, offset: 192)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !3386, file: !3387, line: 19, baseType: !194, size: 64, offset: 256)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !3386, file: !3387, line: 21, baseType: !194, size: 64, offset: 320)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !3386, file: !3387, line: 22, baseType: !194, size: 64, offset: 384)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !3386, file: !3387, line: 23, baseType: !194, size: 64, offset: 448)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !3386, file: !3387, line: 24, baseType: !194, size: 64, offset: 512)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !3386, file: !3387, line: 25, baseType: !194, size: 64, offset: 576)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !3386, file: !3387, line: 26, baseType: !194, size: 64, offset: 640)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !3386, file: !3387, line: 27, baseType: !194, size: 64, offset: 704)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !3386, file: !3387, line: 28, baseType: !194, size: 64, offset: 768)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !3386, file: !3387, line: 29, baseType: !194, size: 64, offset: 832)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !3372, file: !3371, line: 44, baseType: !327, size: 32, offset: 832)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !3372, file: !3371, line: 50, baseType: !1183, size: 16, offset: 864)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !3372, file: !3371, line: 51, baseType: !3406, size: 16, offset: 880)
!3406 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !186, line: 18, baseType: !3407)
!3407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !188, line: 23, baseType: !2122)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !701, file: !681, line: 495, baseType: !193, size: 64, offset: 6528)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !701, file: !681, line: 497, baseType: !3410, size: 64, offset: 6592)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !681, line: 381, size: 384, elements: !3412)
!3412 = !{!3413, !3414, !3420}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3411, file: !681, line: 382, baseType: !327, size: 32)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !3411, file: !681, line: 383, baseType: !3415, size: 128, offset: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !681, line: 376, size: 128, elements: !3416)
!3416 = !{!3417, !3418}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3415, file: !681, line: 377, baseType: !1714, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3415, file: !681, line: 378, baseType: !3419, size: 64, offset: 64)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !3411, file: !681, line: 384, baseType: !1339, size: 192, offset: 192)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !701, file: !681, line: 500, baseType: !285, offset: 6656)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !701, file: !681, line: 501, baseType: !3423, size: 64, offset: 6656)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !681, line: 387, flags: DIFlagFwdDecl)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !701, file: !681, line: 516, baseType: !2006, size: 64, offset: 6720)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !701, file: !681, line: 519, baseType: !713, size: 64, offset: 6784)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !701, file: !681, line: 521, baseType: !3428, size: 64, offset: 6848)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !681, line: 521, flags: DIFlagFwdDecl)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !701, file: !681, line: 545, baseType: !327, size: 32, offset: 6912)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !701, file: !681, line: 548, baseType: !844, size: 8, offset: 6944)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !701, file: !681, line: 550, baseType: !3433, offset: 6952)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3434, line: 142, elements: !299)
!3434 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !701, file: !681, line: 554, baseType: !467, size: 256, offset: 6976)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !701, file: !681, line: 557, baseType: !185, size: 32, offset: 7232)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !698, file: !681, line: 565, baseType: !3438, offset: 7296)
!3438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, elements: !3439)
!3439 = !{!3440}
!3440 = !DISubrange(count: -1)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !680, file: !681, line: 333, baseType: !3442, size: 64, offset: 576)
!3442 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1059, line: 284, baseType: !3443)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1059, line: 284, size: 64, elements: !3444)
!3444 = !{!3445}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !3443, file: !1059, line: 284, baseType: !3446, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1382, line: 19, baseType: !193)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !680, file: !681, line: 334, baseType: !193, size: 64, offset: 640)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !680, file: !681, line: 343, baseType: !3449, size: 256, offset: 704)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !680, file: !681, line: 340, size: 256, elements: !3450)
!3450 = !{!3451, !3452}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3449, file: !681, line: 341, baseType: !688, size: 192, align: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !3449, file: !681, line: 342, baseType: !193, size: 64, offset: 192)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !680, file: !681, line: 351, baseType: !301, size: 128, offset: 960)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !680, file: !681, line: 353, baseType: !3455, size: 64, offset: 1088)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !681, line: 353, flags: DIFlagFwdDecl)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !680, file: !681, line: 356, baseType: !3458, size: 64, offset: 1152)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3460)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !3461)
!3461 = !{!3462, !3466, !3467, !3471, !3475, !3476, !3480, !3484, !3488, !3489, !3490, !3494, !3498}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3460, file: !14, line: 558, baseType: !3463, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{null, !679}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3460, file: !14, line: 559, baseType: !3463, size: 64, offset: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !3460, file: !14, line: 560, baseType: !3468, size: 64, offset: 128)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!109, !679, !193}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !3460, file: !14, line: 561, baseType: !3472, size: 64, offset: 192)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{!109, !679}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !3460, file: !14, line: 562, baseType: !1363, size: 64, offset: 256)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !3460, file: !14, line: 563, baseType: !3477, size: 64, offset: 320)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!1366, !1367, !13}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !3460, file: !14, line: 565, baseType: !3481, size: 64, offset: 384)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{null, !1367, !193, !193}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !3460, file: !14, line: 567, baseType: !3485, size: 64, offset: 448)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!193, !679}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !3460, file: !14, line: 571, baseType: !1363, size: 64, offset: 512)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !3460, file: !14, line: 574, baseType: !1363, size: 64, offset: 576)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !3460, file: !14, line: 579, baseType: !3491, size: 64, offset: 640)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!109, !679, !193, !177, !109, !109}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3460, file: !14, line: 585, baseType: !3495, size: 64, offset: 704)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!422, !679}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !3460, file: !14, line: 615, baseType: !3499, size: 64, offset: 768)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!1067, !679, !193}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !680, file: !681, line: 359, baseType: !193, size: 64, offset: 1216)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !680, file: !681, line: 361, baseType: !713, size: 64, offset: 1280)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !680, file: !681, line: 362, baseType: !177, size: 64, offset: 1344)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !680, file: !681, line: 365, baseType: !275, size: 64, offset: 1408)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !680, file: !681, line: 373, baseType: !3507, offset: 1472)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !681, line: 296, elements: !299)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "fb_get_caps", scope: !558, file: !324, line: 287, baseType: !3509, size: 64, offset: 1216)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{null, !322, !3512, !588}
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_blit_caps", file: !324, line: 144, size: 128, elements: !3514)
!3514 = !{!3515, !3516, !3517, !3518}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3513, file: !324, line: 145, baseType: !185, size: 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3513, file: !324, line: 146, baseType: !185, size: 32, offset: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3513, file: !324, line: 147, baseType: !185, size: 32, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3513, file: !324, line: 148, baseType: !185, size: 32, offset: 96)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "fb_destroy", scope: !558, file: !324, line: 291, baseType: !548, size: 64, offset: 1280)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "fb_debug_enter", scope: !558, file: !324, line: 294, baseType: !590, size: 64, offset: 1344)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "fb_debug_leave", scope: !558, file: !324, line: 295, baseType: !590, size: 64, offset: 1408)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !323, file: !324, line: 474, baseType: !3523, size: 64, offset: 7360)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3525)
!3525 = !{!3526, !3813, !3814, !3817, !3818, !3869, !3958, !3959, !3960, !3961, !3962, !3971, !4065, !4078, !4273, !4274, !4278, !4280, !4281, !4282, !4286, !4292, !4293, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4334, !4335, !4336, !4339, !4342, !4343, !4344, !4345}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3524, file: !73, line: 462, baseType: !3527, size: 512)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3528, line: 64, size: 512, elements: !3529)
!3528 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3529 = !{!3530, !3531, !3532, !3534, !3574, !3674, !3807, !3808, !3809, !3810, !3811, !3812}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3527, file: !3528, line: 65, baseType: !422, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3527, file: !3528, line: 66, baseType: !301, size: 128, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3527, file: !3528, line: 67, baseType: !3533, size: 64, offset: 192)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3527, file: !3528, line: 68, baseType: !3535, size: 64, offset: 256)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3528, line: 192, size: 704, elements: !3537)
!3537 = !{!3538, !3539, !3540, !3541}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3536, file: !3528, line: 193, baseType: !301, size: 128)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3536, file: !3528, line: 194, baseType: !285, offset: 128)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3536, file: !3528, line: 195, baseType: !3527, size: 512, offset: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3536, file: !3528, line: 196, baseType: !3542, size: 64, offset: 640)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3544)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3528, line: 156, size: 192, elements: !3545)
!3545 = !{!3546, !3551, !3556}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3544, file: !3528, line: 157, baseType: !3547, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3548)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!109, !3535, !3533}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3544, file: !3528, line: 158, baseType: !3552, size: 64, offset: 64)
!3552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3553)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DISubroutineType(types: !3555)
!3555 = !{!422, !3535, !3533}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3544, file: !3528, line: 159, baseType: !3557, size: 64, offset: 128)
!3557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3558)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!109, !3535, !3533, !3561}
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3528, line: 148, size: 20736, elements: !3563)
!3563 = !{!3564, !3566, !3568, !3569, !3573}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3562, file: !3528, line: 149, baseType: !3565, size: 192)
!3565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 192, elements: !995)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3562, file: !3528, line: 150, baseType: !3567, size: 4096, offset: 192)
!3567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 4096, elements: !2413)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3562, file: !3528, line: 151, baseType: !109, size: 32, offset: 4288)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3562, file: !3528, line: 152, baseType: !3570, size: 16384, offset: 4320)
!3570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 16384, elements: !3571)
!3571 = !{!3572}
!3572 = !DISubrange(count: 2048)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3562, file: !3528, line: 153, baseType: !109, size: 32, offset: 20704)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3527, file: !3528, line: 69, baseType: !3575, size: 64, offset: 320)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3528, line: 138, size: 448, elements: !3577)
!3577 = !{!3578, !3582, !3601, !3603, !3636, !3664, !3668}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3576, file: !3528, line: 139, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !3533}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3576, file: !3528, line: 140, baseType: !3583, size: 64, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3585)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3586, line: 230, size: 128, elements: !3587)
!3586 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3587 = !{!3588, !3597}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3585, file: !3586, line: 231, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!570, !3533, !3592, !181}
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3586, line: 30, size: 128, elements: !3594)
!3594 = !{!3595, !3596}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3593, file: !3586, line: 31, baseType: !422, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3593, file: !3586, line: 32, baseType: !786, size: 16, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3585, file: !3586, line: 232, baseType: !3598, size: 64, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!570, !3533, !3592, !422, !574}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3576, file: !3528, line: 141, baseType: !3602, size: 64, offset: 128)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3576, file: !3528, line: 142, baseType: !3604, size: 64, offset: 192)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3607)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3586, line: 84, size: 320, elements: !3608)
!3608 = !{!3609, !3610, !3614, !3633, !3634}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3607, file: !3586, line: 85, baseType: !422, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3607, file: !3586, line: 86, baseType: !3611, size: 64, offset: 64)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!786, !3533, !3592, !109}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3607, file: !3586, line: 88, baseType: !3615, size: 64, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!786, !3533, !3618, !109}
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3586, line: 168, size: 448, elements: !3620)
!3620 = !{!3621, !3622, !3623, !3624, !3628, !3629}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3619, file: !3586, line: 169, baseType: !3593, size: 128)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3619, file: !3586, line: 170, baseType: !574, size: 64, offset: 128)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3619, file: !3586, line: 171, baseType: !177, size: 64, offset: 192)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3619, file: !3586, line: 172, baseType: !3625, size: 64, offset: 256)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!570, !713, !3533, !3618, !181, !578, !574}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3619, file: !3586, line: 174, baseType: !3625, size: 64, offset: 320)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3619, file: !3586, line: 176, baseType: !3630, size: 64, offset: 384)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!109, !713, !3533, !3618, !679}
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3607, file: !3586, line: 90, baseType: !3602, size: 64, offset: 192)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3607, file: !3586, line: 91, baseType: !3635, size: 64, offset: 256)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3576, file: !3528, line: 143, baseType: !3637, size: 64, offset: 256)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!3640, !3533}
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3642)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3643)
!3643 = !{!3644, !3645, !3649, !3653, !3659, !3663}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3642, file: !61, line: 40, baseType: !60, size: 32)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3642, file: !61, line: 41, baseType: !3646, size: 64, offset: 64)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!844}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3642, file: !61, line: 42, baseType: !3650, size: 64, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!177}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3642, file: !61, line: 43, baseType: !3654, size: 64, offset: 192)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{!2648, !3657}
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3642, file: !61, line: 44, baseType: !3660, size: 64, offset: 256)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{!2648}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3642, file: !61, line: 45, baseType: !822, size: 64, offset: 320)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3576, file: !3528, line: 144, baseType: !3665, size: 64, offset: 320)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!2648, !3533}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3576, file: !3528, line: 145, baseType: !3669, size: 64, offset: 384)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DISubroutineType(types: !3671)
!3671 = !{null, !3533, !3672, !3673}
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3527, file: !3528, line: 70, baseType: !3675, size: 64, offset: 384)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !969, line: 123, size: 1024, elements: !3677)
!3677 = !{!3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3800, !3801, !3802, !3803, !3804}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3676, file: !969, line: 124, baseType: !327, size: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3676, file: !969, line: 125, baseType: !327, size: 32, offset: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3676, file: !969, line: 135, baseType: !3675, size: 64, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3676, file: !969, line: 136, baseType: !422, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3676, file: !969, line: 138, baseType: !688, size: 192, align: 64, offset: 192)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3676, file: !969, line: 140, baseType: !2648, size: 64, offset: 384)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3676, file: !969, line: 141, baseType: !7, size: 32, offset: 448)
!3685 = !DIDerivedType(tag: DW_TAG_member, scope: !3676, file: !969, line: 142, baseType: !3686, size: 256, offset: 512)
!3686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3676, file: !969, line: 142, size: 256, elements: !3687)
!3687 = !{!3688, !3728, !3732}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3686, file: !969, line: 143, baseType: !3689, size: 192)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !969, line: 91, size: 192, elements: !3690)
!3690 = !{!3691, !3692, !3693}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3689, file: !969, line: 92, baseType: !193, size: 64)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3689, file: !969, line: 94, baseType: !705, size: 64, offset: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3689, file: !969, line: 100, baseType: !3694, size: 64, offset: 128)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !969, line: 180, size: 704, elements: !3696)
!3696 = !{!3697, !3698, !3699, !3700, !3701, !3702, !3726, !3727}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3695, file: !969, line: 182, baseType: !3675, size: 64)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3695, file: !969, line: 183, baseType: !7, size: 32, offset: 64)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3695, file: !969, line: 186, baseType: !1993, size: 192, offset: 128)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3695, file: !969, line: 187, baseType: !185, size: 32, offset: 320)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3695, file: !969, line: 188, baseType: !185, size: 32, offset: 352)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3695, file: !969, line: 189, baseType: !3703, size: 64, offset: 384)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !969, line: 168, size: 320, elements: !3705)
!3705 = !{!3706, !3710, !3714, !3718, !3722}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3704, file: !969, line: 169, baseType: !3707, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!109, !1057, !3694}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3704, file: !969, line: 171, baseType: !3711, size: 64, offset: 64)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!109, !3675, !422, !786}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3704, file: !969, line: 173, baseType: !3715, size: 64, offset: 128)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!109, !3675}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3704, file: !969, line: 174, baseType: !3719, size: 64, offset: 192)
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!109, !3675, !3675, !422}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3704, file: !969, line: 176, baseType: !3723, size: 64, offset: 256)
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3724, size: 64)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!109, !1057, !3675, !3694}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3695, file: !969, line: 192, baseType: !301, size: 128, offset: 448)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3695, file: !969, line: 194, baseType: !1688, size: 128, offset: 576)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3686, file: !969, line: 144, baseType: !3729, size: 64)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !969, line: 103, size: 64, elements: !3730)
!3730 = !{!3731}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3729, file: !969, line: 104, baseType: !3675, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3686, file: !969, line: 145, baseType: !3733, size: 256)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !969, line: 107, size: 256, elements: !3734)
!3734 = !{!3735, !3795, !3798, !3799}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3733, file: !969, line: 108, baseType: !3736, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3738)
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !969, line: 217, size: 768, elements: !3739)
!3739 = !{!3740, !3760, !3764, !3768, !3772, !3776, !3780, !3784, !3785, !3786, !3787, !3791}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3738, file: !969, line: 222, baseType: !3741, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!109, !3744}
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !969, line: 197, size: 1088, elements: !3746)
!3746 = !{!3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759}
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3745, file: !969, line: 199, baseType: !3675, size: 64)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3745, file: !969, line: 200, baseType: !713, size: 64, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3745, file: !969, line: 201, baseType: !1057, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3745, file: !969, line: 202, baseType: !177, size: 64, offset: 192)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3745, file: !969, line: 205, baseType: !271, size: 192, offset: 256)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3745, file: !969, line: 206, baseType: !271, size: 192, offset: 448)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3745, file: !969, line: 207, baseType: !109, size: 32, offset: 640)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3745, file: !969, line: 208, baseType: !301, size: 128, offset: 704)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3745, file: !969, line: 209, baseType: !181, size: 64, offset: 832)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3745, file: !969, line: 211, baseType: !574, size: 64, offset: 896)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3745, file: !969, line: 212, baseType: !844, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3745, file: !969, line: 213, baseType: !844, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3745, file: !969, line: 214, baseType: !3458, size: 64, offset: 1024)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3738, file: !969, line: 223, baseType: !3761, size: 64, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{null, !3744}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3738, file: !969, line: 236, baseType: !3765, size: 64, offset: 128)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!109, !1057, !177}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3738, file: !969, line: 238, baseType: !3769, size: 64, offset: 192)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!177, !1057, !577}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3738, file: !969, line: 239, baseType: !3773, size: 64, offset: 256)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!177, !1057, !177, !577}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3738, file: !969, line: 240, baseType: !3777, size: 64, offset: 320)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{null, !1057, !177}
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3738, file: !969, line: 242, baseType: !3781, size: 64, offset: 384)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!570, !3744, !181, !574, !578}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3738, file: !969, line: 252, baseType: !574, size: 64, offset: 448)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3738, file: !969, line: 259, baseType: !844, size: 8, offset: 512)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3738, file: !969, line: 260, baseType: !3781, size: 64, offset: 576)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3738, file: !969, line: 263, baseType: !3788, size: 64, offset: 640)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{!3044, !3744, !3046}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3738, file: !969, line: 266, baseType: !3792, size: 64, offset: 704)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!109, !3744, !679}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3733, file: !969, line: 109, baseType: !3796, size: 64, offset: 64)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !969, line: 31, flags: DIFlagFwdDecl)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3733, file: !969, line: 110, baseType: !578, size: 64, offset: 128)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3733, file: !969, line: 111, baseType: !3675, size: 64, offset: 192)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3676, file: !969, line: 148, baseType: !177, size: 64, offset: 768)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3676, file: !969, line: 154, baseType: !207, size: 64, offset: 832)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3676, file: !969, line: 156, baseType: !391, size: 16, offset: 896)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3676, file: !969, line: 157, baseType: !786, size: 16, offset: 912)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3676, file: !969, line: 158, baseType: !3805, size: 64, offset: 960)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !969, line: 32, flags: DIFlagFwdDecl)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3527, file: !3528, line: 71, baseType: !1988, size: 32, offset: 448)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3527, file: !3528, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3527, file: !3528, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3527, file: !3528, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3527, file: !3528, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3527, file: !3528, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3524, file: !73, line: 463, baseType: !3523, size: 64, offset: 512)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3524, file: !73, line: 465, baseType: !3815, size: 64, offset: 576)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3524, file: !73, line: 467, baseType: !422, size: 64, offset: 640)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3524, file: !73, line: 468, baseType: !3819, size: 64, offset: 704)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3821)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3822)
!3822 = !{!3823, !3824, !3825, !3829, !3834, !3838}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3821, file: !73, line: 88, baseType: !422, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3821, file: !73, line: 89, baseType: !3604, size: 64, offset: 64)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3821, file: !73, line: 90, baseType: !3826, size: 64, offset: 128)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!109, !3523, !3561}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3821, file: !73, line: 91, baseType: !3830, size: 64, offset: 192)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!181, !3523, !3833, !3672, !3673}
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3821, file: !73, line: 93, baseType: !3835, size: 64, offset: 256)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{null, !3523}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3821, file: !73, line: 95, baseType: !3839, size: 64, offset: 320)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3841)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3842)
!3842 = !{!3843, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3841, file: !80, line: 279, baseType: !3844, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DISubroutineType(types: !3846)
!3846 = !{!109, !3523}
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3841, file: !80, line: 280, baseType: !3835, size: 64, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3841, file: !80, line: 281, baseType: !3844, size: 64, offset: 128)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3841, file: !80, line: 282, baseType: !3844, size: 64, offset: 192)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3841, file: !80, line: 283, baseType: !3844, size: 64, offset: 256)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3841, file: !80, line: 284, baseType: !3844, size: 64, offset: 320)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3841, file: !80, line: 285, baseType: !3844, size: 64, offset: 384)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3841, file: !80, line: 286, baseType: !3844, size: 64, offset: 448)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3841, file: !80, line: 287, baseType: !3844, size: 64, offset: 512)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3841, file: !80, line: 288, baseType: !3844, size: 64, offset: 576)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3841, file: !80, line: 289, baseType: !3844, size: 64, offset: 640)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3841, file: !80, line: 290, baseType: !3844, size: 64, offset: 704)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3841, file: !80, line: 291, baseType: !3844, size: 64, offset: 768)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3841, file: !80, line: 292, baseType: !3844, size: 64, offset: 832)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3841, file: !80, line: 293, baseType: !3844, size: 64, offset: 896)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3841, file: !80, line: 294, baseType: !3844, size: 64, offset: 960)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3841, file: !80, line: 295, baseType: !3844, size: 64, offset: 1024)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3841, file: !80, line: 296, baseType: !3844, size: 64, offset: 1088)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3841, file: !80, line: 297, baseType: !3844, size: 64, offset: 1152)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3841, file: !80, line: 298, baseType: !3844, size: 64, offset: 1216)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3841, file: !80, line: 299, baseType: !3844, size: 64, offset: 1280)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3841, file: !80, line: 300, baseType: !3844, size: 64, offset: 1344)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3841, file: !80, line: 301, baseType: !3844, size: 64, offset: 1408)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3524, file: !73, line: 470, baseType: !3870, size: 64, offset: 768)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3872, line: 82, size: 1408, elements: !3873)
!3872 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3873 = !{!3874, !3875, !3876, !3877, !3878, !3879, !3880, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3953, !3956, !3957}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3871, file: !3872, line: 83, baseType: !422, size: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3871, file: !3872, line: 84, baseType: !422, size: 64, offset: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3871, file: !3872, line: 85, baseType: !3523, size: 64, offset: 128)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3871, file: !3872, line: 86, baseType: !3604, size: 64, offset: 192)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3871, file: !3872, line: 87, baseType: !3604, size: 64, offset: 256)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3871, file: !3872, line: 88, baseType: !3604, size: 64, offset: 320)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3871, file: !3872, line: 90, baseType: !3881, size: 64, offset: 384)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!109, !3523, !3884}
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3886)
!3886 = !{!3887, !3888, !3889, !3890, !3891, !3892, !3893, !3904, !3917, !3918, !3919, !3920, !3921, !3929, !3930, !3931, !3932, !3933, !3934}
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3885, file: !67, line: 96, baseType: !422, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3885, file: !67, line: 97, baseType: !3870, size: 64, offset: 64)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3885, file: !67, line: 99, baseType: !178, size: 64, offset: 128)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3885, file: !67, line: 100, baseType: !422, size: 64, offset: 192)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3885, file: !67, line: 102, baseType: !844, size: 8, offset: 256)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3885, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3885, file: !67, line: 105, baseType: !3894, size: 64, offset: 320)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3896)
!3896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3897, line: 262, size: 1600, elements: !3898)
!3897 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3898 = !{!3899, !3900, !3901, !3903}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3896, file: !3897, line: 263, baseType: !2842, size: 256)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3896, file: !3897, line: 264, baseType: !2842, size: 256, offset: 256)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3896, file: !3897, line: 265, baseType: !3902, size: 1024, offset: 512)
!3902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 1024, elements: !512)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3896, file: !3897, line: 266, baseType: !2648, size: 64, offset: 1536)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3885, file: !67, line: 106, baseType: !3905, size: 64, offset: 384)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3907)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3897, line: 210, size: 256, elements: !3908)
!3908 = !{!3909, !3913, !3915, !3916}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3907, file: !3897, line: 211, baseType: !3910, size: 72)
!3910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 72, elements: !3911)
!3911 = !{!3912}
!3912 = !DISubrange(count: 9)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3907, file: !3897, line: 212, baseType: !3914, size: 64, offset: 128)
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3897, line: 14, baseType: !193)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3907, file: !3897, line: 213, baseType: !187, size: 32, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3907, file: !3897, line: 214, baseType: !187, size: 32, offset: 224)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3885, file: !67, line: 108, baseType: !3844, size: 64, offset: 448)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3885, file: !67, line: 109, baseType: !3835, size: 64, offset: 512)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3885, file: !67, line: 110, baseType: !3844, size: 64, offset: 576)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3885, file: !67, line: 111, baseType: !3835, size: 64, offset: 640)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3885, file: !67, line: 112, baseType: !3922, size: 64, offset: 704)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!109, !3523, !3925}
!3925 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3926)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3927)
!3927 = !{!3928}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3926, file: !80, line: 51, baseType: !109, size: 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3885, file: !67, line: 113, baseType: !3844, size: 64, offset: 768)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3885, file: !67, line: 114, baseType: !3604, size: 64, offset: 832)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3885, file: !67, line: 115, baseType: !3604, size: 64, offset: 896)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3885, file: !67, line: 117, baseType: !3839, size: 64, offset: 960)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3885, file: !67, line: 118, baseType: !3835, size: 64, offset: 1024)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3885, file: !67, line: 120, baseType: !3935, size: 64, offset: 1088)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3871, file: !3872, line: 91, baseType: !3826, size: 64, offset: 448)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3871, file: !3872, line: 92, baseType: !3844, size: 64, offset: 512)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3871, file: !3872, line: 93, baseType: !3835, size: 64, offset: 576)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3871, file: !3872, line: 94, baseType: !3844, size: 64, offset: 640)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3871, file: !3872, line: 95, baseType: !3835, size: 64, offset: 704)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3871, file: !3872, line: 97, baseType: !3844, size: 64, offset: 768)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3871, file: !3872, line: 98, baseType: !3844, size: 64, offset: 832)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3871, file: !3872, line: 100, baseType: !3922, size: 64, offset: 896)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3871, file: !3872, line: 101, baseType: !3844, size: 64, offset: 960)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3871, file: !3872, line: 103, baseType: !3844, size: 64, offset: 1024)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3871, file: !3872, line: 105, baseType: !3844, size: 64, offset: 1088)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3871, file: !3872, line: 107, baseType: !3839, size: 64, offset: 1152)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3871, file: !3872, line: 109, baseType: !3950, size: 64, offset: 1216)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3952)
!3952 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3872, line: 109, flags: DIFlagFwdDecl)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3871, file: !3872, line: 111, baseType: !3954, size: 64, offset: 1280)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3872, line: 111, flags: DIFlagFwdDecl)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3871, file: !3872, line: 112, baseType: !989, offset: 1344)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3871, file: !3872, line: 114, baseType: !844, size: 8, offset: 1344)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3524, file: !73, line: 471, baseType: !3884, size: 64, offset: 832)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3524, file: !73, line: 473, baseType: !177, size: 64, offset: 896)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3524, file: !73, line: 475, baseType: !177, size: 64, offset: 960)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3524, file: !73, line: 480, baseType: !271, size: 192, offset: 1024)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3524, file: !73, line: 484, baseType: !3963, size: 576, offset: 1216)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3964)
!3964 = !{!3965, !3966, !3967, !3968, !3969, !3970}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3963, file: !73, line: 362, baseType: !301, size: 128)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3963, file: !73, line: 363, baseType: !301, size: 128, offset: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3963, file: !73, line: 364, baseType: !301, size: 128, offset: 256)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3963, file: !73, line: 365, baseType: !301, size: 128, offset: 384)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3963, file: !73, line: 366, baseType: !844, size: 8, offset: 512)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3963, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3524, file: !73, line: 485, baseType: !3972, size: 2304, offset: 1792)
!3972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3973)
!3973 = !{!3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4058, !4062}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3972, file: !80, line: 566, baseType: !3925, size: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3972, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3972, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3972, file: !80, line: 569, baseType: !844, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3972, file: !80, line: 570, baseType: !844, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3972, file: !80, line: 571, baseType: !844, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3972, file: !80, line: 572, baseType: !844, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3972, file: !80, line: 573, baseType: !844, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3972, file: !80, line: 574, baseType: !844, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3972, file: !80, line: 575, baseType: !844, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3972, file: !80, line: 576, baseType: !844, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3972, file: !80, line: 577, baseType: !185, size: 32, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3972, file: !80, line: 578, baseType: !285, offset: 96)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3972, file: !80, line: 580, baseType: !301, size: 128, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3972, file: !80, line: 581, baseType: !1339, size: 192, offset: 256)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3972, file: !80, line: 582, baseType: !3990, size: 64, offset: 448)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3992, line: 43, size: 1472, elements: !3993)
!3992 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3993 = !{!3994, !3995, !3996, !3997, !3998, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3991, file: !3992, line: 44, baseType: !422, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3991, file: !3992, line: 45, baseType: !109, size: 32, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3991, file: !3992, line: 46, baseType: !301, size: 128, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3991, file: !3992, line: 47, baseType: !285, offset: 256)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3991, file: !3992, line: 48, baseType: !3999, size: 64, offset: 256)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3991, file: !3992, line: 49, baseType: !519, size: 320, offset: 320)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3991, file: !3992, line: 50, baseType: !193, size: 64, offset: 640)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3991, file: !3992, line: 51, baseType: !1796, size: 64, offset: 704)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3991, file: !3992, line: 52, baseType: !1796, size: 64, offset: 768)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3991, file: !3992, line: 53, baseType: !1796, size: 64, offset: 832)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3991, file: !3992, line: 54, baseType: !1796, size: 64, offset: 896)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3991, file: !3992, line: 55, baseType: !1796, size: 64, offset: 960)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3991, file: !3992, line: 56, baseType: !193, size: 64, offset: 1024)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3991, file: !3992, line: 57, baseType: !193, size: 64, offset: 1088)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3991, file: !3992, line: 58, baseType: !193, size: 64, offset: 1152)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3991, file: !3992, line: 59, baseType: !193, size: 64, offset: 1216)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3991, file: !3992, line: 60, baseType: !193, size: 64, offset: 1280)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3991, file: !3992, line: 61, baseType: !3523, size: 64, offset: 1344)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3991, file: !3992, line: 62, baseType: !844, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3991, file: !3992, line: 63, baseType: !844, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3972, file: !80, line: 583, baseType: !844, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3972, file: !80, line: 584, baseType: !844, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3972, file: !80, line: 585, baseType: !844, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3972, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3972, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3972, file: !80, line: 592, baseType: !1788, size: 512, offset: 576)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3972, file: !80, line: 593, baseType: !207, size: 64, offset: 1088)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3972, file: !80, line: 594, baseType: !467, size: 256, offset: 1152)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3972, file: !80, line: 595, baseType: !1688, size: 128, offset: 1408)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3972, file: !80, line: 596, baseType: !3999, size: 64, offset: 1536)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3972, file: !80, line: 597, baseType: !327, size: 32, offset: 1600)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3972, file: !80, line: 598, baseType: !327, size: 32, offset: 1632)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3972, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3972, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3972, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3972, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3972, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3972, file: !80, line: 604, baseType: !844, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3972, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3972, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3972, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3972, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3972, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3972, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3972, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3972, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3972, file: !80, line: 613, baseType: !109, size: 32, offset: 1792)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3972, file: !80, line: 614, baseType: !109, size: 32, offset: 1824)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3972, file: !80, line: 615, baseType: !207, size: 64, offset: 1856)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3972, file: !80, line: 616, baseType: !207, size: 64, offset: 1920)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3972, file: !80, line: 617, baseType: !207, size: 64, offset: 1984)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3972, file: !80, line: 618, baseType: !207, size: 64, offset: 2048)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3972, file: !80, line: 620, baseType: !4049, size: 64, offset: 2112)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !4051)
!4051 = !{!4052, !4053, !4054, !4055}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4050, file: !80, line: 537, baseType: !285)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4050, file: !80, line: 538, baseType: !7, size: 32)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4050, file: !80, line: 540, baseType: !301, size: 128, offset: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4050, file: !80, line: 543, baseType: !4056, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3972, file: !80, line: 621, baseType: !4059, size: 64, offset: 2176)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{null, !3523, !1939}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3972, file: !80, line: 622, baseType: !4063, size: 64, offset: 2240)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3524, file: !73, line: 486, baseType: !4066, size: 64, offset: 4096)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !4068)
!4068 = !{!4069, !4070, !4071, !4075, !4076, !4077}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4067, file: !80, line: 643, baseType: !3841, size: 1472)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4067, file: !80, line: 644, baseType: !3844, size: 64, offset: 1472)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4067, file: !80, line: 645, baseType: !4072, size: 64, offset: 1536)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{null, !3523, !844}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4067, file: !80, line: 646, baseType: !3844, size: 64, offset: 1600)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4067, file: !80, line: 647, baseType: !3835, size: 64, offset: 1664)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4067, file: !80, line: 648, baseType: !3835, size: 64, offset: 1728)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3524, file: !73, line: 493, baseType: !4079, size: 64, offset: 4160)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !4081)
!4081 = !{!4082, !4083, !4084, !4257, !4258, !4259, !4260, !4261, !4262, !4265, !4266, !4267, !4268, !4269, !4270, !4271}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4080, file: !94, line: 163, baseType: !301, size: 128)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4080, file: !94, line: 164, baseType: !422, size: 64, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4080, file: !94, line: 165, baseType: !4085, size: 64, offset: 192)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4087)
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !4088)
!4088 = !{!4089, !4207, !4218, !4223, !4227, !4234, !4238, !4242, !4249, !4253}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4087, file: !94, line: 106, baseType: !4090, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!109, !4079, !4093, !93}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4095, line: 51, size: 1344, elements: !4096)
!4095 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4096 = !{!4097, !4098, !4100, !4101, !4191, !4200, !4201, !4202, !4203, !4204, !4205, !4206}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4094, file: !4095, line: 52, baseType: !422, size: 64)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4094, file: !4095, line: 53, baseType: !4099, size: 32, offset: 64)
!4099 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4095, line: 28, baseType: !185)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4094, file: !4095, line: 54, baseType: !422, size: 64, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4094, file: !4095, line: 55, baseType: !4102, size: 192, offset: 192)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4103, line: 17, size: 192, elements: !4104)
!4103 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4104 = !{!4105, !4107, !4190}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4102, file: !4103, line: 18, baseType: !4106, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4102, file: !4103, line: 19, baseType: !4108, size: 64, offset: 64)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4110)
!4110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4103, line: 110, size: 1152, elements: !4111)
!4111 = !{!4112, !4116, !4120, !4126, !4132, !4136, !4140, !4145, !4149, !4150, !4154, !4158, !4162, !4173, !4174, !4175, !4176, !4186}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4110, file: !4103, line: 111, baseType: !4113, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!4106, !4106}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4110, file: !4103, line: 112, baseType: !4117, size: 64, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4118, size: 64)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{null, !4106}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4110, file: !4103, line: 113, baseType: !4121, size: 64, offset: 128)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!844, !4124}
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4102)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4110, file: !4103, line: 114, baseType: !4127, size: 64, offset: 192)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!2648, !4124, !4130}
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3524)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4110, file: !4103, line: 116, baseType: !4133, size: 64, offset: 256)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!844, !4124, !422}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4110, file: !4103, line: 118, baseType: !4137, size: 64, offset: 320)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!109, !4124, !422, !7, !177, !574}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4110, file: !4103, line: 123, baseType: !4141, size: 64, offset: 384)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!109, !4124, !422, !4144, !574}
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4110, file: !4103, line: 126, baseType: !4146, size: 64, offset: 448)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!422, !4124}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4110, file: !4103, line: 127, baseType: !4146, size: 64, offset: 512)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4110, file: !4103, line: 128, baseType: !4151, size: 64, offset: 576)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!4106, !4124}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4110, file: !4103, line: 130, baseType: !4155, size: 64, offset: 640)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!4106, !4124, !4106}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4110, file: !4103, line: 133, baseType: !4159, size: 64, offset: 704)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!4106, !4124, !422}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4110, file: !4103, line: 135, baseType: !4163, size: 64, offset: 768)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!109, !4124, !422, !422, !7, !7, !4166}
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4103, line: 43, size: 640, elements: !4168)
!4168 = !{!4169, !4170, !4171}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4167, file: !4103, line: 44, baseType: !4106, size: 64)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4167, file: !4103, line: 45, baseType: !7, size: 32, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4167, file: !4103, line: 46, baseType: !4172, size: 512, offset: 128)
!4172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 512, elements: !1826)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4110, file: !4103, line: 140, baseType: !4155, size: 64, offset: 832)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4110, file: !4103, line: 143, baseType: !4151, size: 64, offset: 896)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4110, file: !4103, line: 145, baseType: !4113, size: 64, offset: 960)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4110, file: !4103, line: 146, baseType: !4177, size: 64, offset: 1024)
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 64)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!109, !4124, !4180}
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4103, line: 29, size: 128, elements: !4182)
!4182 = !{!4183, !4184, !4185}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4181, file: !4103, line: 30, baseType: !7, size: 32)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4181, file: !4103, line: 31, baseType: !7, size: 32, offset: 32)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4181, file: !4103, line: 32, baseType: !4124, size: 64, offset: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4110, file: !4103, line: 148, baseType: !4187, size: 64, offset: 1088)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!109, !4124, !3523}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4102, file: !4103, line: 20, baseType: !3523, size: 64, offset: 128)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4094, file: !4095, line: 57, baseType: !4192, size: 64, offset: 384)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4095, line: 31, size: 704, elements: !4194)
!4194 = !{!4195, !4196, !4197, !4198, !4199}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4193, file: !4095, line: 32, baseType: !181, size: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4193, file: !4095, line: 33, baseType: !109, size: 32, offset: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4193, file: !4095, line: 34, baseType: !177, size: 64, offset: 128)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4193, file: !4095, line: 35, baseType: !4192, size: 64, offset: 192)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4193, file: !4095, line: 43, baseType: !3619, size: 448, offset: 256)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4094, file: !4095, line: 58, baseType: !4192, size: 64, offset: 448)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4094, file: !4095, line: 59, baseType: !4093, size: 64, offset: 512)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4094, file: !4095, line: 60, baseType: !4093, size: 64, offset: 576)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4094, file: !4095, line: 61, baseType: !4093, size: 64, offset: 640)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4094, file: !4095, line: 63, baseType: !3527, size: 512, offset: 704)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4094, file: !4095, line: 65, baseType: !193, size: 64, offset: 1216)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4094, file: !4095, line: 66, baseType: !177, size: 64, offset: 1280)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4087, file: !94, line: 108, baseType: !4208, size: 64, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!109, !4079, !4211, !93}
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !4213)
!4213 = !{!4214, !4215, !4216}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4212, file: !94, line: 64, baseType: !4106, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4212, file: !94, line: 65, baseType: !109, size: 32, offset: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4212, file: !94, line: 66, baseType: !4217, size: 512, offset: 96)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 512, elements: !382)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4087, file: !94, line: 110, baseType: !4219, size: 64, offset: 128)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!109, !4079, !7, !4222}
!4222 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !190, line: 164, baseType: !193)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4087, file: !94, line: 111, baseType: !4224, size: 64, offset: 192)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{null, !4079, !7}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4087, file: !94, line: 112, baseType: !4228, size: 64, offset: 256)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!109, !4079, !4093, !4231, !7, !4233, !1708}
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4087, file: !94, line: 117, baseType: !4235, size: 64, offset: 320)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!109, !4079, !7, !7, !177}
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4087, file: !94, line: 119, baseType: !4239, size: 64, offset: 384)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{null, !4079, !7, !7}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4087, file: !94, line: 121, baseType: !4243, size: 64, offset: 448)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!109, !4079, !4246, !844}
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4248, line: 11, flags: DIFlagFwdDecl)
!4248 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4087, file: !94, line: 122, baseType: !4250, size: 64, offset: 512)
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 64)
!4251 = !DISubroutineType(types: !4252)
!4252 = !{null, !4079, !4246}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4087, file: !94, line: 123, baseType: !4254, size: 64, offset: 576)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!109, !4079, !4211, !4233, !1708}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4080, file: !94, line: 166, baseType: !177, size: 64, offset: 256)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4080, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4080, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4080, file: !94, line: 171, baseType: !4106, size: 64, offset: 384)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4080, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4080, file: !94, line: 173, baseType: !4263, size: 64, offset: 512)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !94, line: 134, flags: DIFlagFwdDecl)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4080, file: !94, line: 175, baseType: !4079, size: 64, offset: 576)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4080, file: !94, line: 182, baseType: !4222, size: 64, offset: 640)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4080, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4080, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4080, file: !94, line: 185, baseType: !1084, size: 128, offset: 768)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4080, file: !94, line: 186, baseType: !271, size: 192, offset: 896)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4080, file: !94, line: 187, baseType: !4272, offset: 1088)
!4272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !3439)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3524, file: !73, line: 499, baseType: !301, size: 128, offset: 4224)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3524, file: !73, line: 502, baseType: !4275, size: 64, offset: 4352)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4277)
!4277 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3524, file: !73, line: 504, baseType: !4279, size: 64, offset: 4416)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3524, file: !73, line: 505, baseType: !207, size: 64, offset: 4480)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3524, file: !73, line: 510, baseType: !207, size: 64, offset: 4544)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3524, file: !73, line: 511, baseType: !4283, size: 64, offset: 4608)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4285)
!4285 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3524, file: !73, line: 513, baseType: !4287, size: 64, offset: 4672)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4289)
!4289 = !{!4290, !4291}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4288, file: !73, line: 293, baseType: !7, size: 32)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4288, file: !73, line: 294, baseType: !193, size: 64, offset: 64)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3524, file: !73, line: 515, baseType: !301, size: 128, offset: 4736)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3524, file: !73, line: 526, baseType: !4294, offset: 4864)
!4294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4295, line: 5, elements: !299)
!4295 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3524, file: !73, line: 528, baseType: !4093, size: 64, offset: 4864)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3524, file: !73, line: 529, baseType: !4106, size: 64, offset: 4928)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3524, file: !73, line: 534, baseType: !867, size: 32, offset: 4992)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3524, file: !73, line: 535, baseType: !185, size: 32, offset: 5024)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3524, file: !73, line: 537, baseType: !285, offset: 5056)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3524, file: !73, line: 538, baseType: !301, size: 128, offset: 5056)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3524, file: !73, line: 540, baseType: !4303, size: 64, offset: 5184)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4305, line: 54, size: 960, elements: !4306)
!4305 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4306 = !{!4307, !4308, !4309, !4310, !4311, !4312, !4313, !4317, !4321, !4322, !4323, !4324, !4328, !4332, !4333}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4304, file: !4305, line: 55, baseType: !422, size: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4304, file: !4305, line: 56, baseType: !178, size: 64, offset: 64)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4304, file: !4305, line: 58, baseType: !3604, size: 64, offset: 128)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4304, file: !4305, line: 59, baseType: !3604, size: 64, offset: 192)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4304, file: !4305, line: 60, baseType: !3533, size: 64, offset: 256)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4304, file: !4305, line: 62, baseType: !3826, size: 64, offset: 320)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4304, file: !4305, line: 63, baseType: !4314, size: 64, offset: 384)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!181, !3523, !3833}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4304, file: !4305, line: 65, baseType: !4318, size: 64, offset: 448)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{null, !4303}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4304, file: !4305, line: 66, baseType: !3835, size: 64, offset: 512)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4304, file: !4305, line: 68, baseType: !3844, size: 64, offset: 576)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4304, file: !4305, line: 70, baseType: !3640, size: 64, offset: 640)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4304, file: !4305, line: 71, baseType: !4325, size: 64, offset: 704)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!2648, !3523}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4304, file: !4305, line: 73, baseType: !4329, size: 64, offset: 768)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{null, !3523, !3672, !3673}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4304, file: !4305, line: 75, baseType: !3839, size: 64, offset: 832)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4304, file: !4305, line: 77, baseType: !3954, size: 64, offset: 896)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3524, file: !73, line: 541, baseType: !3604, size: 64, offset: 5248)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3524, file: !73, line: 543, baseType: !3835, size: 64, offset: 5312)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3524, file: !73, line: 544, baseType: !4337, size: 64, offset: 5376)
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3524, file: !73, line: 545, baseType: !4340, size: 64, offset: 5440)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3524, file: !73, line: 547, baseType: !844, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3524, file: !73, line: 548, baseType: !844, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3524, file: !73, line: 549, baseType: !844, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3524, file: !73, line: 550, baseType: !844, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !323, file: !324, line: 475, baseType: !3523, size: 64, offset: 7424)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "class_flag", scope: !323, file: !324, line: 476, baseType: !109, size: 32, offset: 7488)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "tileops", scope: !323, file: !324, line: 478, baseType: !4349, size: 64, offset: 7552)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tile_ops", file: !324, line: 355, size: 384, elements: !4351)
!4351 = !{!4352, !4366, !4379, !4394, !4410, !4423}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "fb_settile", scope: !4350, file: !324, line: 357, baseType: !4353, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4354, size: 64)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{null, !322, !4356}
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilemap", file: !324, line: 306, size: 192, elements: !4358)
!4358 = !{!4359, !4360, !4361, !4362, !4363}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4357, file: !324, line: 307, baseType: !187, size: 32)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4357, file: !324, line: 308, baseType: !187, size: 32, offset: 32)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4357, file: !324, line: 309, baseType: !187, size: 32, offset: 64)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4357, file: !324, line: 310, baseType: !187, size: 32, offset: 96)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4357, file: !324, line: 311, baseType: !4364, size: 64, offset: 128)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilecopy", scope: !4350, file: !324, line: 362, baseType: !4367, size: 64, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !322, !4370}
!4370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4371, size: 64)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilearea", file: !324, line: 326, size: 192, elements: !4372)
!4372 = !{!4373, !4374, !4375, !4376, !4377, !4378}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4371, file: !324, line: 327, baseType: !187, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4371, file: !324, line: 328, baseType: !187, size: 32, offset: 32)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4371, file: !324, line: 329, baseType: !187, size: 32, offset: 64)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "dy", scope: !4371, file: !324, line: 330, baseType: !187, size: 32, offset: 96)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4371, file: !324, line: 331, baseType: !187, size: 32, offset: 128)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4371, file: !324, line: 332, baseType: !187, size: 32, offset: 160)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilefill", scope: !4350, file: !324, line: 364, baseType: !4380, size: 64, offset: 128)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{null, !322, !4383}
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilerect", file: !324, line: 315, size: 256, elements: !4385)
!4385 = !{!4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4384, file: !324, line: 316, baseType: !187, size: 32)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4384, file: !324, line: 317, baseType: !187, size: 32, offset: 32)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4384, file: !324, line: 318, baseType: !187, size: 32, offset: 64)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4384, file: !324, line: 319, baseType: !187, size: 32, offset: 96)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4384, file: !324, line: 320, baseType: !187, size: 32, offset: 128)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4384, file: !324, line: 321, baseType: !187, size: 32, offset: 160)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4384, file: !324, line: 322, baseType: !187, size: 32, offset: 192)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "rop", scope: !4384, file: !324, line: 323, baseType: !187, size: 32, offset: 224)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tileblit", scope: !4350, file: !324, line: 366, baseType: !4395, size: 64, offset: 192)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{null, !322, !4398}
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tileblit", file: !324, line: 335, size: 320, elements: !4400)
!4400 = !{!4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4399, file: !324, line: 336, baseType: !187, size: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4399, file: !324, line: 337, baseType: !187, size: 32, offset: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4399, file: !324, line: 338, baseType: !187, size: 32, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4399, file: !324, line: 339, baseType: !187, size: 32, offset: 96)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4399, file: !324, line: 340, baseType: !187, size: 32, offset: 128)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4399, file: !324, line: 341, baseType: !187, size: 32, offset: 160)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4399, file: !324, line: 342, baseType: !187, size: 32, offset: 192)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !4399, file: !324, line: 343, baseType: !4409, size: 64, offset: 256)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "fb_tilecursor", scope: !4350, file: !324, line: 368, baseType: !4411, size: 64, offset: 256)
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{null, !322, !4414}
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fb_tilecursor", file: !324, line: 346, size: 192, elements: !4416)
!4416 = !{!4417, !4418, !4419, !4420, !4421, !4422}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !4415, file: !324, line: 347, baseType: !187, size: 32)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !4415, file: !324, line: 348, baseType: !187, size: 32, offset: 32)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4415, file: !324, line: 349, baseType: !187, size: 32, offset: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !4415, file: !324, line: 350, baseType: !187, size: 32, offset: 96)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !4415, file: !324, line: 351, baseType: !187, size: 32, offset: 128)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !4415, file: !324, line: 352, baseType: !187, size: 32, offset: 160)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "fb_get_tilemax", scope: !4350, file: !324, line: 371, baseType: !590, size: 64, offset: 320)
!4424 = !DIDerivedType(tag: DW_TAG_member, scope: !323, file: !324, line: 480, baseType: !4425, size: 64, offset: 7616)
!4425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !323, file: !324, line: 480, size: 64, elements: !4426)
!4426 = !{!4427, !4428}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "screen_base", scope: !4425, file: !324, line: 481, baseType: !181, size: 64)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "screen_buffer", scope: !4425, file: !324, line: 482, baseType: !181, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "screen_size", scope: !323, file: !324, line: 484, baseType: !193, size: 64, offset: 7680)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "pseudo_palette", scope: !323, file: !324, line: 485, baseType: !177, size: 64, offset: 7744)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !323, file: !324, line: 488, baseType: !185, size: 32, offset: 7808)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "fbcon_par", scope: !323, file: !324, line: 489, baseType: !177, size: 64, offset: 7872)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !323, file: !324, line: 491, baseType: !177, size: 64, offset: 7936)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "apertures", scope: !323, file: !324, line: 501, baseType: !4435, size: 64, offset: 8000)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "apertures_struct", file: !324, line: 495, size: 64, elements: !4437)
!4437 = !{!4438, !4439}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4436, file: !324, line: 496, baseType: !7, size: 32)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4436, file: !324, line: 500, baseType: !4440, offset: 64)
!4440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4441, elements: !1416)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aperture", file: !324, line: 497, size: 128, elements: !4442)
!4442 = !{!4443, !4445}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4441, file: !324, line: 498, baseType: !4444, size: 64)
!4444 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !190, line: 158, baseType: !2646)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4441, file: !324, line: 499, baseType: !4444, size: 64, offset: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "skip_vt_switch", scope: !323, file: !324, line: 503, baseType: !844, size: 8, offset: 8064)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "fb_notif", scope: !258, file: !154, line: 317, baseType: !4448, size: 192, offset: 704)
!4448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4449, line: 54, size: 192, elements: !4450)
!4449 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4450 = !{!4451, !4457, !4458}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4448, file: !4449, line: 55, baseType: !4452, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4449, line: 51, baseType: !4453)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{!109, !4456, !193, !177}
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4448, file: !4449, line: 56, baseType: !4456, size: 64, offset: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4448, file: !4449, line: 57, baseType: !109, size: 32, offset: 128)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !258, file: !154, line: 322, baseType: !301, size: 128, offset: 896)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !258, file: !154, line: 327, baseType: !3524, size: 5568, offset: 1024)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "fb_bl_on", scope: !258, file: !154, line: 335, baseType: !4462, size: 256, offset: 6592)
!4462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 256, elements: !2751)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !258, file: !154, line: 340, baseType: !109, size: 32, offset: 6848)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !254, file: !3, line: 1010, baseType: !109, size: 32, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_base", scope: !254, file: !3, line: 1011, baseType: !109, size: 32, offset: 96)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !254, file: !3, line: 1012, baseType: !223, size: 8, offset: 128)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "maxlvl", scope: !254, file: !3, line: 1013, baseType: !223, size: 8, offset: 136)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_nc_value", file: !3, line: 635, size: 640, elements: !4470)
!4470 = !{!4471, !4472, !4474, !4475, !4480, !4481, !4482, !4483}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4469, file: !3, line: 636, baseType: !181, size: 64)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "acpiget", scope: !4469, file: !3, line: 637, baseType: !4473, size: 64, offset: 64)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "acpiset", scope: !4469, file: !3, line: 638, baseType: !4473, size: 64, offset: 128)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !4469, file: !3, line: 639, baseType: !4476, size: 64, offset: 192)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = !DISubroutineType(types: !4478)
!4478 = !{!109, !4479, !4479}
!4479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4469, file: !3, line: 640, baseType: !109, size: 32, offset: 256)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4469, file: !3, line: 641, baseType: !109, size: 32, offset: 288)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !4469, file: !3, line: 642, baseType: !109, size: 32, offset: 320)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "devattr", scope: !4469, file: !3, line: 643, baseType: !4484, size: 256, offset: 384)
!4484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4485)
!4485 = !{!4486, !4487, !4492}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4484, file: !73, line: 100, baseType: !3593, size: 128)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4484, file: !73, line: 101, baseType: !4488, size: 64, offset: 128)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!570, !3523, !4491, !181}
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4484, file: !73, line: 103, baseType: !4493, size: 64, offset: 192)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!570, !3523, !4491, !422, !574}
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_pic_ioport", file: !3, line: 3335, size: 256, elements: !4498)
!4498 = !{!4499, !4508, !4509}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "io1", scope: !4497, file: !3, line: 3336, baseType: !4500, size: 56)
!4500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_io", file: !4501, line: 167, size: 56, elements: !4502)
!4501 = !DIFile(filename: "./include/acpi/acrestyp.h", directory: "/home/lizy2001/genbc/linux")
!4502 = !{!4503, !4504, !4505, !4506, !4507}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "io_decode", scope: !4500, file: !4501, line: 168, baseType: !223, size: 8)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !4500, file: !4501, line: 169, baseType: !223, size: 8, offset: 8)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !4500, file: !4501, line: 170, baseType: !223, size: 8, offset: 16)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !4500, file: !4501, line: 171, baseType: !1183, size: 16, offset: 24)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !4500, file: !4501, line: 172, baseType: !1183, size: 16, offset: 40)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "io2", scope: !4497, file: !3, line: 3337, baseType: !4500, size: 56, offset: 56)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4497, file: !3, line: 3338, baseType: !301, size: 128, offset: 128)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_pic_irq", file: !3, line: 3341, size: 192, elements: !4512)
!4512 = !{!4513, !4524}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4511, file: !3, line: 3342, baseType: !4514, size: 56)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_irq", file: !4501, line: 138, size: 56, elements: !4515)
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4522}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !4514, file: !4501, line: 139, baseType: !223, size: 8)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !4514, file: !4501, line: 140, baseType: !223, size: 8, offset: 8)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4514, file: !4501, line: 141, baseType: !223, size: 8, offset: 16)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !4514, file: !4501, line: 142, baseType: !223, size: 8, offset: 24)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !4514, file: !4501, line: 143, baseType: !223, size: 8, offset: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !4514, file: !4501, line: 144, baseType: !223, size: 8, offset: 40)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !4514, file: !4501, line: 145, baseType: !4523, size: 8, offset: 48)
!4523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 8, elements: !1865)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4511, file: !3, line: 3343, baseType: !301, size: 128, offset: 64)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_pic_dev", file: !3, line: 3352, size: 896, elements: !4527)
!4527 = !{!4528, !4760, !4761, !4762, !4763, !4764, !4765, !4777, !4782, !4783, !4784, !4785, !4786}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_dev", scope: !4526, file: !3, line: 3353, baseType: !4529, size: 64)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !4531, line: 351, size: 10880, elements: !4532)
!4531 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!4532 = !{!4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4550, !4567, !4592, !4621, !4645, !4666, !4672, !4681, !4713, !4727, !4749, !4753, !4754, !4755, !4756, !4757, !4758, !4759}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !4530, file: !4531, line: 352, baseType: !109, size: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4530, file: !4531, line: 353, baseType: !237, size: 64, offset: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4530, file: !4531, line: 354, baseType: !4102, size: 192, offset: 128)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4530, file: !4531, line: 355, baseType: !4529, size: 64, offset: 320)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4530, file: !4531, line: 356, baseType: !301, size: 128, offset: 384)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4530, file: !4531, line: 357, baseType: !301, size: 128, offset: 512)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !4530, file: !4531, line: 358, baseType: !301, size: 128, offset: 640)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !4530, file: !4531, line: 359, baseType: !301, size: 128, offset: 768)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4530, file: !4531, line: 360, baseType: !4542, size: 32, offset: 896)
!4542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !4531, line: 179, size: 32, elements: !4543)
!4543 = !{!4544, !4545, !4546, !4547, !4548, !4549}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4542, file: !4531, line: 180, baseType: !185, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4542, file: !4531, line: 181, baseType: !185, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4542, file: !4531, line: 182, baseType: !185, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4542, file: !4531, line: 183, baseType: !185, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4542, file: !4531, line: 184, baseType: !185, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4542, file: !4531, line: 185, baseType: !185, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4530, file: !4531, line: 361, baseType: !4551, size: 32, offset: 928)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !4531, line: 190, size: 32, elements: !4552)
!4552 = !{!4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4551, file: !4531, line: 191, baseType: !185, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4551, file: !4531, line: 192, baseType: !185, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4551, file: !4531, line: 193, baseType: !185, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4551, file: !4531, line: 194, baseType: !185, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4551, file: !4531, line: 195, baseType: !185, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4551, file: !4531, line: 196, baseType: !185, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4551, file: !4531, line: 197, baseType: !185, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4551, file: !4531, line: 198, baseType: !185, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4551, file: !4531, line: 199, baseType: !185, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4551, file: !4531, line: 200, baseType: !185, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4551, file: !4531, line: 201, baseType: !185, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4551, file: !4531, line: 202, baseType: !185, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4551, file: !4531, line: 203, baseType: !185, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4551, file: !4531, line: 204, baseType: !185, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !4530, file: !4531, line: 362, baseType: !4568, size: 960, offset: 960)
!4568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !4531, line: 234, size: 960, elements: !4569)
!4569 = !{!4570, !4572, !4579, !4581, !4582, !4583, !4588, !4591}
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4568, file: !4531, line: 235, baseType: !4571, size: 64)
!4571 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !4531, line: 217, baseType: !2553)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4568, file: !4531, line: 236, baseType: !4573, size: 32, offset: 64)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !4531, line: 227, size: 32, elements: !4574)
!4574 = !{!4575, !4576, !4577, !4578}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4573, file: !4531, line: 228, baseType: !185, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4573, file: !4531, line: 229, baseType: !185, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4573, file: !4531, line: 230, baseType: !185, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4573, file: !4531, line: 231, baseType: !185, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4568, file: !4531, line: 237, baseType: !4580, size: 64, offset: 128)
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !4531, line: 218, baseType: !207)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4568, file: !4531, line: 238, baseType: !181, size: 64, offset: 192)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4568, file: !4531, line: 239, baseType: !301, size: 128, offset: 256)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4568, file: !4531, line: 240, baseType: !4584, size: 320, offset: 384)
!4584 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !4531, line: 219, baseType: !4585)
!4585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 320, elements: !4586)
!4586 = !{!4587}
!4587 = !DISubrange(count: 40)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4568, file: !4531, line: 241, baseType: !4589, size: 160, offset: 704)
!4589 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !4531, line: 220, baseType: !4590)
!4590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 160, elements: !2722)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4568, file: !4531, line: 242, baseType: !197, size: 64, offset: 896)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4530, file: !4531, line: 363, baseType: !4593, size: 1344, offset: 1920)
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !4531, line: 275, size: 1344, elements: !4594)
!4594 = !{!4595, !4596, !4606}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4593, file: !4531, line: 276, baseType: !109, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4593, file: !4531, line: 277, baseType: !4597, size: 32, offset: 32)
!4597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !4531, line: 254, size: 32, elements: !4598)
!4598 = !{!4599, !4600, !4601, !4602, !4603, !4604, !4605}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4597, file: !4531, line: 255, baseType: !185, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4597, file: !4531, line: 256, baseType: !185, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4597, file: !4531, line: 257, baseType: !185, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4597, file: !4531, line: 258, baseType: !185, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4597, file: !4531, line: 259, baseType: !185, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4597, file: !4531, line: 260, baseType: !185, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4597, file: !4531, line: 261, baseType: !185, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4593, file: !4531, line: 278, baseType: !4607, size: 1280, offset: 64)
!4607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4608, size: 1280, elements: !4619)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !4531, line: 264, size: 256, elements: !4609)
!4609 = !{!4610, !4616, !4617, !4618}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4608, file: !4531, line: 269, baseType: !4611, size: 8)
!4611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4608, file: !4531, line: 265, size: 8, elements: !4612)
!4612 = !{!4613, !4614, !4615}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4611, file: !4531, line: 266, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4611, file: !4531, line: 267, baseType: !223, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4611, file: !4531, line: 268, baseType: !223, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4608, file: !4531, line: 270, baseType: !109, size: 32, offset: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4608, file: !4531, line: 271, baseType: !109, size: 32, offset: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4608, file: !4531, line: 272, baseType: !301, size: 128, offset: 128)
!4619 = !{!4620}
!4620 = !DISubrange(count: 5)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4530, file: !4531, line: 364, baseType: !4622, size: 640, offset: 3264)
!4622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !4531, line: 315, size: 640, elements: !4623)
!4623 = !{!4624, !4625, !4626, !4627, !4628, !4633, !4642, !4643, !4644}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4622, file: !4531, line: 316, baseType: !237, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4622, file: !4531, line: 317, baseType: !207, size: 64, offset: 64)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4622, file: !4531, line: 318, baseType: !207, size: 64, offset: 128)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4622, file: !4531, line: 319, baseType: !301, size: 128, offset: 192)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4622, file: !4531, line: 320, baseType: !4629, size: 8, offset: 320)
!4629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !4531, line: 305, size: 8, elements: !4630)
!4630 = !{!4631, !4632}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4629, file: !4531, line: 306, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4629, file: !4531, line: 307, baseType: !223, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4622, file: !4531, line: 321, baseType: !4634, size: 128, offset: 384)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !4531, line: 310, size: 128, elements: !4635)
!4635 = !{!4636, !4641}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4634, file: !4531, line: 311, baseType: !4637, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DISubroutineType(types: !4639)
!4639 = !{null, !4640}
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4634, file: !4531, line: 312, baseType: !3523, size: 64, offset: 64)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4622, file: !4531, line: 322, baseType: !3990, size: 64, offset: 512)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4622, file: !4531, line: 323, baseType: !109, size: 32, offset: 576)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4622, file: !4531, line: 324, baseType: !109, size: 32, offset: 608)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4530, file: !4531, line: 365, baseType: !4646, size: 192, offset: 3904)
!4646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !4531, line: 297, size: 192, elements: !4647)
!4647 = !{!4648, !4649, !4653, !4654}
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4646, file: !4531, line: 298, baseType: !109, size: 32)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4646, file: !4531, line: 299, baseType: !4650, size: 8, offset: 32)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !4531, line: 283, size: 8, elements: !4651)
!4651 = !{!4652}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4650, file: !4531, line: 284, baseType: !223, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4646, file: !4531, line: 300, baseType: !109, size: 32, offset: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4646, file: !4531, line: 301, baseType: !4655, size: 64, offset: 128)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !4531, line: 287, size: 64, elements: !4657)
!4657 = !{!4658, !4663, !4664, !4665}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4656, file: !4531, line: 291, baseType: !4659, size: 8)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4656, file: !4531, line: 288, size: 8, elements: !4660)
!4660 = !{!4661, !4662}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4659, file: !4531, line: 289, baseType: !223, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4659, file: !4531, line: 290, baseType: !223, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4656, file: !4531, line: 292, baseType: !223, size: 8, offset: 8)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4656, file: !4531, line: 293, baseType: !223, size: 8, offset: 16)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4656, file: !4531, line: 294, baseType: !109, size: 32, offset: 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4530, file: !4531, line: 366, baseType: !4667, size: 64, offset: 4096)
!4667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !4531, line: 209, size: 64, elements: !4668)
!4668 = !{!4669}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4667, file: !4531, line: 210, baseType: !4670, size: 64)
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4671, size: 64)
!4671 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4531, line: 84, flags: DIFlagFwdDecl)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4530, file: !4531, line: 367, baseType: !4673, size: 384, offset: 4160)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !4531, line: 341, size: 384, elements: !4674)
!4674 = !{!4675, !4678, !4679, !4680}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4673, file: !4531, line: 342, baseType: !4676, size: 64)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4673, file: !4531, line: 343, baseType: !301, size: 128, offset: 64)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4673, file: !4531, line: 344, baseType: !4676, size: 64, offset: 192)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4673, file: !4531, line: 345, baseType: !301, size: 128, offset: 256)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4530, file: !4531, line: 368, baseType: !4682, size: 64, offset: 4544)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !4531, line: 122, size: 1216, elements: !4684)
!4684 = !{!4685, !4686, !4687, !4692, !4696, !4700, !4701, !4702}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4683, file: !4531, line: 123, baseType: !3905, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4683, file: !4531, line: 124, baseType: !301, size: 128, offset: 64)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4683, file: !4531, line: 125, baseType: !4688, size: 64, offset: 192)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{!844, !422, !4691}
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4683, file: !4531, line: 126, baseType: !4693, size: 64, offset: 256)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!109, !4529, !3905}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4683, file: !4531, line: 127, baseType: !4697, size: 64, offset: 320)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = !DISubroutineType(types: !4699)
!4699 = !{null, !4529}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4683, file: !4531, line: 128, baseType: !3835, size: 64, offset: 384)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4683, file: !4531, line: 129, baseType: !3835, size: 64, offset: 448)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4683, file: !4531, line: 130, baseType: !4703, size: 704, offset: 512)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !4531, line: 108, size: 704, elements: !4704)
!4704 = !{!4705, !4706, !4710, !4711, !4712}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4703, file: !4531, line: 109, baseType: !3527, size: 512)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4703, file: !4531, line: 110, baseType: !4707, size: 64, offset: 512)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!109, !4529}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4703, file: !4531, line: 111, baseType: !4697, size: 64, offset: 576)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4703, file: !4531, line: 112, baseType: !844, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4703, file: !4531, line: 113, baseType: !844, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !4530, file: !4531, line: 369, baseType: !4714, size: 64, offset: 4608)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !4531, line: 138, size: 256, elements: !4716)
!4716 = !{!4717, !4718, !4722, !4726}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4715, file: !4531, line: 139, baseType: !4529, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4715, file: !4531, line: 140, baseType: !4719, size: 64, offset: 64)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!109, !4529, !185}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4715, file: !4531, line: 141, baseType: !4723, size: 64, offset: 128)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DISubroutineType(types: !4725)
!4725 = !{null, !4529, !185}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4715, file: !4531, line: 142, baseType: !4697, size: 64, offset: 192)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4530, file: !4531, line: 370, baseType: !4728, size: 64, offset: 4672)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4729, size: 64)
!4729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !4531, line: 162, size: 2816, elements: !4730)
!4730 = !{!4731, !4735, !4736, !4737, !4738, !4747, !4748}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4729, file: !4531, line: 163, baseType: !4732, size: 640)
!4732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 640, elements: !4733)
!4733 = !{!4734}
!4734 = !DISubrange(count: 80)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4729, file: !4531, line: 164, baseType: !4732, size: 640, offset: 640)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4729, file: !4531, line: 165, baseType: !3905, size: 64, offset: 1280)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4729, file: !4531, line: 166, baseType: !7, size: 32, offset: 1344)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4729, file: !4531, line: 167, baseType: !4739, size: 192, offset: 1408)
!4739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !4531, line: 154, size: 192, elements: !4740)
!4740 = !{!4741, !4743, !4745}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4739, file: !4531, line: 155, baseType: !4742, size: 64)
!4742 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !4531, line: 150, baseType: !4707)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4739, file: !4531, line: 156, baseType: !4744, size: 64, offset: 64)
!4744 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !4531, line: 151, baseType: !4707)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4739, file: !4531, line: 157, baseType: !4746, size: 64, offset: 128)
!4746 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !4531, line: 152, baseType: !4723)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4729, file: !4531, line: 168, baseType: !3885, size: 1152, offset: 1600)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4729, file: !4531, line: 169, baseType: !178, size: 64, offset: 2752)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !4530, file: !4531, line: 371, baseType: !4750, size: 64, offset: 4736)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4752)
!4752 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !4531, line: 348, flags: DIFlagFwdDecl)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4530, file: !4531, line: 372, baseType: !177, size: 64, offset: 4800)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4530, file: !4531, line: 373, baseType: !3524, size: 5568, offset: 4864)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !4530, file: !4531, line: 374, baseType: !7, size: 32, offset: 10432)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !4530, file: !4531, line: 375, baseType: !7, size: 32, offset: 10464)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !4530, file: !4531, line: 376, baseType: !301, size: 128, offset: 10496)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !4530, file: !4531, line: 377, baseType: !271, size: 192, offset: 10624)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4530, file: !4531, line: 378, baseType: !4697, size: 64, offset: 10816)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "cur_irq", scope: !4526, file: !3, line: 3354, baseType: !4510, size: 64, offset: 64)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "cur_ioport", scope: !4526, file: !3, line: 3355, baseType: !4496, size: 64, offset: 128)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !4526, file: !3, line: 3356, baseType: !301, size: 128, offset: 192)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "ioports", scope: !4526, file: !3, line: 3357, baseType: !301, size: 128, offset: 320)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4526, file: !3, line: 3358, baseType: !271, size: 192, offset: 448)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "event_types", scope: !4526, file: !3, line: 3359, baseType: !4766, size: 64, offset: 640)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sonypi_eventtypes", file: !3, line: 3346, size: 192, elements: !4768)
!4768 = !{!4769, !4770, !4771}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4767, file: !3, line: 3347, baseType: !223, size: 8)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4767, file: !3, line: 3348, baseType: !193, size: 64, offset: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4767, file: !3, line: 3349, baseType: !4772, size: 64, offset: 128)
!4772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 64)
!4773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sonypi_event", file: !3, line: 3391, size: 16, elements: !4774)
!4774 = !{!4775, !4776}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4773, file: !3, line: 3392, baseType: !223, size: 8)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4773, file: !3, line: 3393, baseType: !223, size: 8, offset: 8)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4526, file: !3, line: 3360, baseType: !4778, size: 64, offset: 704)
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = !DISubroutineType(types: !4780)
!4780 = !{!109, !4781, !4781}
!4781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !223)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !4526, file: !3, line: 3361, baseType: !109, size: 32, offset: 768)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "evport_offset", scope: !4526, file: !3, line: 3362, baseType: !1183, size: 16, offset: 800)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "camera_power", scope: !4526, file: !3, line: 3363, baseType: !223, size: 8, offset: 816)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "bluetooth_power", scope: !4526, file: !3, line: 3364, baseType: !223, size: 8, offset: 824)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "wwan_power", scope: !4526, file: !3, line: 3365, baseType: !223, size: 8, offset: 832)
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4788, size: 64)
!4788 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !304)
!4789 = !{!0, !4790, !4795, !4800, !4805, !4857, !4862, !4867, !4869, !4874, !4879, !4881, !4884, !4889, !4891, !4893, !4898, !4900, !4902, !4907, !4909, !4914, !4919, !4921, !4926, !4931, !4933, !4938, !4940, !4942, !4944, !4946, !4948, !4953, !4956, !4961, !4966, !4968, !4970, !4975, !4977, !4982, !4984, !4986, !4988, !4991, !4993, !4995, !4997, !5055, !5363, !5368, !5376, !5378, !5385, !5393, !5402, !5411, !5415, !5422, !5424, !5426, !5432, !5446, !5449, !5461, !5463, !5465, !5467, !5469, !5471, !5473, !5475, !5477, !5479, !5484, !5487, !5489, !5491, !5493, !5495, !5497, !5499, !5501, !5503, !5505, !5507, !5509, !5511, !5513, !5515, !5517, !5519, !5521, !5523, !5525, !5527, !5536, !5541, !5546, !5548, !5550, !5552, !5555, !5560, !5563, !5566, !5568, !5571, !5574, !5579, !5582, !5584, !5586, !5588, !5591, !5593, !5595, !5597, !5599, !5602, !5604, !5606, !5608, !5610, !5613, !5615, !5617, !5619, !5621}
!4790 = !DIGlobalVariableExpression(var: !4791, expr: !DIExpression())
!4791 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description246", scope: !2, file: !3, line: 75, type: !4792, isLocal: true, isDefinition: true, align: 8)
!4792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 616, elements: !4793)
!4793 = !{!4794}
!4794 = !DISubrange(count: 77)
!4795 = !DIGlobalVariableExpression(var: !4796, expr: !DIExpression())
!4796 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file247", scope: !2, file: !3, line: 76, type: !4797, isLocal: true, isDefinition: true, align: 8)
!4797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 400, elements: !4798)
!4798 = !{!4799}
!4799 = !DISubrange(count: 50)
!4800 = !DIGlobalVariableExpression(var: !4801, expr: !DIExpression())
!4801 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license248", scope: !2, file: !3, line: 76, type: !4802, isLocal: true, isDefinition: true, align: 8)
!4802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 192, elements: !4803)
!4803 = !{!4804}
!4804 = !DISubrange(count: 24)
!4805 = !DIGlobalVariableExpression(var: !4806, expr: !DIExpression())
!4806 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 79, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4808)
!4808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4809, line: 69, size: 320, elements: !4810)
!4809 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4810 = !{!4811, !4812, !4813, !4829, !4831, !4835, !4836}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4808, file: !4809, line: 70, baseType: !422, size: 64)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4808, file: !4809, line: 71, baseType: !178, size: 64, offset: 64)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4808, file: !4809, line: 72, baseType: !4814, size: 64, offset: 128)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4816)
!4816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4809, line: 47, size: 256, elements: !4817)
!4817 = !{!4818, !4819, !4824, !4828}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4816, file: !4809, line: 49, baseType: !7, size: 32)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4816, file: !4809, line: 51, baseType: !4820, size: 64, offset: 64)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!109, !422, !4823}
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4816, file: !4809, line: 53, baseType: !4825, size: 64, offset: 128)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!109, !181, !4823}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4816, file: !4809, line: 55, baseType: !822, size: 64, offset: 192)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4808, file: !4809, line: 73, baseType: !4830, size: 16, offset: 192)
!4830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4808, file: !4809, line: 74, baseType: !4832, size: 8, offset: 208)
!4832 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !186, line: 16, baseType: !4833)
!4833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !188, line: 20, baseType: !4834)
!4834 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4808, file: !4809, line: 75, baseType: !223, size: 8, offset: 216)
!4836 = !DIDerivedType(tag: DW_TAG_member, scope: !4808, file: !4809, line: 76, baseType: !4837, size: 64, offset: 256)
!4837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4808, file: !4809, line: 76, size: 64, elements: !4838)
!4838 = !{!4839, !4840, !4847}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4837, file: !4809, line: 77, baseType: !177, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4837, file: !4809, line: 78, baseType: !4841, size: 64)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4843)
!4843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4809, line: 86, size: 128, elements: !4844)
!4844 = !{!4845, !4846}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4843, file: !4809, line: 87, baseType: !7, size: 32)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4843, file: !4809, line: 88, baseType: !181, size: 64, offset: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4837, file: !4809, line: 79, baseType: !4848, size: 64)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4850)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4809, line: 92, size: 256, elements: !4851)
!4851 = !{!4852, !4853, !4854, !4855, !4856}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4850, file: !4809, line: 94, baseType: !7, size: 32)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4850, file: !4809, line: 95, baseType: !7, size: 32, offset: 32)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4850, file: !4809, line: 96, baseType: !1708, size: 64, offset: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4850, file: !4809, line: 97, baseType: !4814, size: 64, offset: 128)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4850, file: !4809, line: 98, baseType: !177, size: 64, offset: 192)
!4857 = !DIGlobalVariableExpression(var: !4858, expr: !DIExpression())
!4858 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype249", scope: !2, file: !3, line: 79, type: !4859, isLocal: true, isDefinition: true, align: 8)
!4859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 248, elements: !4860)
!4860 = !{!4861}
!4861 = !DISubrange(count: 31)
!4862 = !DIGlobalVariableExpression(var: !4863, expr: !DIExpression())
!4863 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug250", scope: !2, file: !3, line: 80, type: !4864, isLocal: true, isDefinition: true, align: 8)
!4864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 792, elements: !4865)
!4865 = !{!4866}
!4866 = !DISubrange(count: 99)
!4867 = !DIGlobalVariableExpression(var: !4868, expr: !DIExpression())
!4868 = distinct !DIGlobalVariable(name: "__param_no_spic", scope: !2, file: !3, line: 84, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4869 = !DIGlobalVariableExpression(var: !4870, expr: !DIExpression())
!4870 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_no_spictype251", scope: !2, file: !3, line: 84, type: !4871, isLocal: true, isDefinition: true, align: 8)
!4871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 264, elements: !4872)
!4872 = !{!4873}
!4873 = !DISubrange(count: 33)
!4874 = !DIGlobalVariableExpression(var: !4875, expr: !DIExpression())
!4875 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_no_spic252", scope: !2, file: !3, line: 85, type: !4876, isLocal: true, isDefinition: true, align: 8)
!4876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 624, elements: !4877)
!4877 = !{!4878}
!4878 = !DISubrange(count: 78)
!4879 = !DIGlobalVariableExpression(var: !4880, expr: !DIExpression())
!4880 = distinct !DIGlobalVariable(name: "__param_compat", scope: !2, file: !3, line: 89, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4881 = !DIGlobalVariableExpression(var: !4882, expr: !DIExpression())
!4882 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_compattype253", scope: !2, file: !3, line: 89, type: !4883, isLocal: true, isDefinition: true, align: 8)
!4883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !2751)
!4884 = !DIGlobalVariableExpression(var: !4885, expr: !DIExpression())
!4885 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_compat254", scope: !2, file: !3, line: 90, type: !4886, isLocal: true, isDefinition: true, align: 8)
!4886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 664, elements: !4887)
!4887 = !{!4888}
!4888 = !DISubrange(count: 83)
!4889 = !DIGlobalVariableExpression(var: !4890, expr: !DIExpression())
!4890 = distinct !DIGlobalVariable(name: "__param_mask", scope: !2, file: !3, line: 94, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4891 = !DIGlobalVariableExpression(var: !4892, expr: !DIExpression())
!4892 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_masktype255", scope: !2, file: !3, line: 94, type: !4883, isLocal: true, isDefinition: true, align: 8)
!4893 = !DIGlobalVariableExpression(var: !4894, expr: !DIExpression())
!4894 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_mask256", scope: !2, file: !3, line: 95, type: !4895, isLocal: true, isDefinition: true, align: 8)
!4895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 648, elements: !4896)
!4896 = !{!4897}
!4897 = !DISubrange(count: 81)
!4898 = !DIGlobalVariableExpression(var: !4899, expr: !DIExpression())
!4899 = distinct !DIGlobalVariable(name: "__param_camera", scope: !2, file: !3, line: 99, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4900 = !DIGlobalVariableExpression(var: !4901, expr: !DIExpression())
!4901 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_cameratype257", scope: !2, file: !3, line: 99, type: !4883, isLocal: true, isDefinition: true, align: 8)
!4902 = !DIGlobalVariableExpression(var: !4903, expr: !DIExpression())
!4903 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_camera258", scope: !2, file: !3, line: 100, type: !4904, isLocal: true, isDefinition: true, align: 8)
!4904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 976, elements: !4905)
!4905 = !{!4906}
!4906 = !DISubrange(count: 122)
!4907 = !DIGlobalVariableExpression(var: !4908, expr: !DIExpression())
!4908 = distinct !DIGlobalVariable(name: "__param_kbd_backlight", scope: !2, file: !3, line: 113, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4909 = !DIGlobalVariableExpression(var: !4910, expr: !DIExpression())
!4910 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_kbd_backlighttype259", scope: !2, file: !3, line: 113, type: !4911, isLocal: true, isDefinition: true, align: 8)
!4911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 312, elements: !4912)
!4912 = !{!4913}
!4913 = !DISubrange(count: 39)
!4914 = !DIGlobalVariableExpression(var: !4915, expr: !DIExpression())
!4915 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_kbd_backlight260", scope: !2, file: !3, line: 114, type: !4916, isLocal: true, isDefinition: true, align: 8)
!4916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 1448, elements: !4917)
!4917 = !{!4918}
!4918 = !DISubrange(count: 181)
!4919 = !DIGlobalVariableExpression(var: !4920, expr: !DIExpression())
!4920 = distinct !DIGlobalVariable(name: "__param_kbd_backlight_timeout", scope: !2, file: !3, line: 120, type: !4807, isLocal: true, isDefinition: true, align: 64)
!4921 = !DIGlobalVariableExpression(var: !4922, expr: !DIExpression())
!4922 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_kbd_backlight_timeouttype261", scope: !2, file: !3, line: 120, type: !4923, isLocal: true, isDefinition: true, align: 8)
!4923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 376, elements: !4924)
!4924 = !{!4925}
!4925 = !DISubrange(count: 47)
!4926 = !DIGlobalVariableExpression(var: !4927, expr: !DIExpression())
!4927 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_kbd_backlight_timeout262", scope: !2, file: !3, line: 121, type: !4928, isLocal: true, isDefinition: true, align: 8)
!4928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 1224, elements: !4929)
!4929 = !{!4930}
!4930 = !DISubrange(count: 153)
!4931 = !DIGlobalVariableExpression(var: !4932, expr: !DIExpression())
!4932 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_sony_laptop_init284", scope: !2, file: !3, line: 4924, type: !177, isLocal: true, isDefinition: true)
!4933 = !DIGlobalVariableExpression(var: !4934, expr: !DIExpression())
!4934 = distinct !DIGlobalVariable(name: "__exitcall_sony_laptop_exit", scope: !2, file: !3, line: 4925, type: !4935, isLocal: true, isDefinition: true)
!4935 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4936, line: 117, baseType: !4937)
!4936 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!4938 = !DIGlobalVariableExpression(var: !4939, expr: !DIExpression())
!4939 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 78, type: !109, isLocal: true, isDefinition: true)
!4940 = !DIGlobalVariableExpression(var: !4941, expr: !DIExpression())
!4941 = distinct !DIGlobalVariable(name: "no_spic", scope: !2, file: !3, line: 83, type: !109, isLocal: true, isDefinition: true)
!4942 = !DIGlobalVariableExpression(var: !4943, expr: !DIExpression())
!4943 = distinct !DIGlobalVariable(name: "compat", scope: !2, file: !3, line: 88, type: !109, isLocal: true, isDefinition: true)
!4944 = !DIGlobalVariableExpression(var: !4945, expr: !DIExpression())
!4945 = distinct !DIGlobalVariable(name: "camera", scope: !2, file: !3, line: 98, type: !109, isLocal: true, isDefinition: true)
!4946 = !DIGlobalVariableExpression(var: !4947, expr: !DIExpression())
!4947 = distinct !DIGlobalVariable(name: "spic_drv_registered", scope: !2, file: !3, line: 3373, type: !109, isLocal: true, isDefinition: true)
!4948 = !DIGlobalVariableExpression(var: !4949, expr: !DIExpression())
!4949 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 79, type: !4950, isLocal: true, isDefinition: true)
!4950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 144, elements: !4951)
!4951 = !{!4952}
!4952 = !DISubrange(count: 18)
!4953 = !DIGlobalVariableExpression(var: !4954, expr: !DIExpression())
!4954 = distinct !DIGlobalVariable(name: "__param_str_no_spic", scope: !2, file: !3, line: 84, type: !4955, isLocal: true, isDefinition: true)
!4955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 160, elements: !2722)
!4956 = !DIGlobalVariableExpression(var: !4957, expr: !DIExpression())
!4957 = distinct !DIGlobalVariable(name: "__param_str_compat", scope: !2, file: !3, line: 89, type: !4958, isLocal: true, isDefinition: true)
!4958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 152, elements: !4959)
!4959 = !{!4960}
!4960 = !DISubrange(count: 19)
!4961 = !DIGlobalVariableExpression(var: !4962, expr: !DIExpression())
!4962 = distinct !DIGlobalVariable(name: "__param_str_mask", scope: !2, file: !3, line: 94, type: !4963, isLocal: true, isDefinition: true)
!4963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 136, elements: !4964)
!4964 = !{!4965}
!4965 = !DISubrange(count: 17)
!4966 = !DIGlobalVariableExpression(var: !4967, expr: !DIExpression())
!4967 = distinct !DIGlobalVariable(name: "mask", scope: !2, file: !3, line: 93, type: !193, isLocal: true, isDefinition: true)
!4968 = !DIGlobalVariableExpression(var: !4969, expr: !DIExpression())
!4969 = distinct !DIGlobalVariable(name: "__param_str_camera", scope: !2, file: !3, line: 99, type: !4958, isLocal: true, isDefinition: true)
!4970 = !DIGlobalVariableExpression(var: !4971, expr: !DIExpression())
!4971 = distinct !DIGlobalVariable(name: "__param_str_kbd_backlight", scope: !2, file: !3, line: 113, type: !4972, isLocal: true, isDefinition: true)
!4972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 208, elements: !4973)
!4973 = !{!4974}
!4974 = !DISubrange(count: 26)
!4975 = !DIGlobalVariableExpression(var: !4976, expr: !DIExpression())
!4976 = distinct !DIGlobalVariable(name: "kbd_backlight", scope: !2, file: !3, line: 112, type: !109, isLocal: true, isDefinition: true)
!4977 = !DIGlobalVariableExpression(var: !4978, expr: !DIExpression())
!4978 = distinct !DIGlobalVariable(name: "__param_str_kbd_backlight_timeout", scope: !2, file: !3, line: 120, type: !4979, isLocal: true, isDefinition: true)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 272, elements: !4980)
!4980 = !{!4981}
!4981 = !DISubrange(count: 34)
!4982 = !DIGlobalVariableExpression(var: !4983, expr: !DIExpression())
!4983 = distinct !DIGlobalVariable(name: "kbd_backlight_timeout", scope: !2, file: !3, line: 119, type: !109, isLocal: true, isDefinition: true)
!4984 = !DIGlobalVariableExpression(var: !4985, expr: !DIExpression())
!4985 = distinct !DIGlobalVariable(name: "spic_dev", scope: !2, file: !3, line: 3368, type: !4526, isLocal: true, isDefinition: true)
!4986 = !DIGlobalVariableExpression(var: !4987, expr: !DIExpression())
!4987 = distinct !DIGlobalVariable(name: "sony_nc_driver", scope: !2, file: !3, line: 3312, type: !4729, isLocal: true, isDefinition: true)
!4988 = !DIGlobalVariableExpression(var: !4989, expr: !DIExpression())
!4989 = distinct !DIGlobalVariable(name: "sony_nc_device_ids", scope: !2, file: !3, line: 3307, type: !4990, isLocal: true, isDefinition: true)
!4990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3906, size: 512, elements: !401)
!4991 = !DIGlobalVariableExpression(var: !4992, expr: !DIExpression())
!4992 = distinct !DIGlobalVariable(name: "sony_nc_acpi_device", scope: !2, file: !3, line: 718, type: !4529, isLocal: true, isDefinition: true)
!4993 = !DIGlobalVariableExpression(var: !4994, expr: !DIExpression())
!4994 = distinct !DIGlobalVariable(name: "sony_nc_acpi_handle", scope: !2, file: !3, line: 717, type: !237, isLocal: true, isDefinition: true)
!4995 = !DIGlobalVariableExpression(var: !4996, expr: !DIExpression())
!4996 = distinct !DIGlobalVariable(name: "sony_pf_users", scope: !2, file: !3, line: 567, type: !327, isLocal: true, isDefinition: true)
!4997 = !DIGlobalVariableExpression(var: !4998, expr: !DIExpression())
!4998 = distinct !DIGlobalVariable(name: "sony_pf_driver", scope: !2, file: !3, line: 568, type: !4999, isLocal: true, isDefinition: true)
!4999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_driver", file: !5000, line: 200, size: 1600, elements: !5001)
!5000 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!5001 = !{!5002, !5042, !5043, !5047, !5051, !5052, !5053, !5054}
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4999, file: !5000, line: 201, baseType: !5003, size: 64)
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!109, !5006}
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !5000, line: 22, size: 6208, elements: !5008)
!5008 = !{!5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5029, !5036, !5037, !5040}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5007, file: !5000, line: 23, baseType: !422, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5007, file: !5000, line: 24, baseType: !109, size: 32, offset: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !5007, file: !5000, line: 25, baseType: !844, size: 8, offset: 96)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5007, file: !5000, line: 26, baseType: !3524, size: 5568, offset: 128)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !5007, file: !5000, line: 27, baseType: !207, size: 64, offset: 5696)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !5007, file: !5000, line: 28, baseType: !4288, size: 128, offset: 5760)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !5007, file: !5000, line: 29, baseType: !185, size: 32, offset: 5888)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !5007, file: !5000, line: 30, baseType: !5017, size: 64, offset: 5952)
!5017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5018, size: 64)
!5018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !5019, line: 20, size: 512, elements: !5020)
!5019 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!5020 = !{!5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5018, file: !5019, line: 21, baseType: !4444, size: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5018, file: !5019, line: 22, baseType: !4444, size: 64, offset: 64)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5018, file: !5019, line: 23, baseType: !422, size: 64, offset: 128)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5018, file: !5019, line: 24, baseType: !193, size: 64, offset: 192)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5018, file: !5019, line: 25, baseType: !193, size: 64, offset: 256)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5018, file: !5019, line: 26, baseType: !5017, size: 64, offset: 320)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !5018, file: !5019, line: 26, baseType: !5017, size: 64, offset: 384)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5018, file: !5019, line: 26, baseType: !5017, size: 64, offset: 448)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !5007, file: !5000, line: 32, baseType: !5030, size: 64, offset: 6016)
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!5031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5032)
!5032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !3897, line: 586, size: 256, elements: !5033)
!5033 = !{!5034, !5035}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5032, file: !3897, line: 587, baseType: !4590, size: 160)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5032, file: !3897, line: 588, baseType: !3914, size: 64, offset: 192)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !5007, file: !5000, line: 33, baseType: !181, size: 64, offset: 6080)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !5007, file: !5000, line: 36, baseType: !5038, size: 64, offset: 6144)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !5000, line: 18, flags: DIFlagFwdDecl)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !5007, file: !5000, line: 39, baseType: !5041, offset: 6208)
!5041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !4295, line: 8, elements: !299)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4999, file: !5000, line: 202, baseType: !5003, size: 64, offset: 64)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4999, file: !5000, line: 203, baseType: !5044, size: 64, offset: 128)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{null, !5006}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4999, file: !5000, line: 204, baseType: !5048, size: 64, offset: 192)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!109, !5006, !3925}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4999, file: !5000, line: 205, baseType: !5003, size: 64, offset: 256)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4999, file: !5000, line: 206, baseType: !3885, size: 1152, offset: 320)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4999, file: !5000, line: 207, baseType: !5030, size: 64, offset: 1472)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_deferred_probe", scope: !4999, file: !5000, line: 208, baseType: !844, size: 8, offset: 1536)
!5055 = !DIGlobalVariableExpression(var: !5056, expr: !DIExpression())
!5056 = distinct !DIGlobalVariable(name: "sony_laptop_input", scope: !2, file: !3, line: 199, type: !5057, isLocal: true, isDefinition: true)
!5057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_laptop_input_s", file: !3, line: 190, size: 704, elements: !5058)
!5058 = !{!5059, !5060, !5336, !5337, !5361, !5362}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !5057, file: !3, line: 191, baseType: !327, size: 32)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "jog_dev", scope: !5057, file: !3, line: 192, baseType: !5061, size: 64, offset: 64)
!5061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5062, size: 64)
!5062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !5063, line: 131, size: 10432, elements: !5064)
!5063 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!5064 = !{!5065, !5066, !5067, !5068, !5076, !5077, !5078, !5080, !5081, !5082, !5083, !5084, !5085, !5087, !5088, !5089, !5090, !5091, !5092, !5106, !5111, !5206, !5209, !5210, !5211, !5213, !5216, !5226, !5227, !5228, !5229, !5230, !5234, !5238, !5242, !5246, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5333, !5334}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5062, file: !5063, line: 132, baseType: !422, size: 64)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !5062, file: !5063, line: 133, baseType: !422, size: 64, offset: 64)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !5062, file: !5063, line: 134, baseType: !422, size: 64, offset: 128)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5062, file: !5063, line: 135, baseType: !5069, size: 64, offset: 192)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !5070, line: 59, size: 64, elements: !5071)
!5070 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!5071 = !{!5072, !5073, !5074, !5075}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !5069, file: !5070, line: 60, baseType: !390, size: 16)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5069, file: !5070, line: 61, baseType: !390, size: 16, offset: 16)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !5069, file: !5070, line: 62, baseType: !390, size: 16, offset: 32)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5069, file: !5070, line: 63, baseType: !390, size: 16, offset: 48)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !5062, file: !5063, line: 137, baseType: !1864, size: 64, offset: 256)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !5062, file: !5063, line: 139, baseType: !1864, size: 64, offset: 320)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !5062, file: !5063, line: 140, baseType: !5079, size: 768, offset: 384)
!5079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 768, elements: !2757)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !5062, file: !5063, line: 141, baseType: !1864, size: 64, offset: 1152)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !5062, file: !5063, line: 142, baseType: !1864, size: 64, offset: 1216)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !5062, file: !5063, line: 143, baseType: !1864, size: 64, offset: 1280)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !5062, file: !5063, line: 144, baseType: !1864, size: 64, offset: 1344)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !5062, file: !5063, line: 145, baseType: !1864, size: 64, offset: 1408)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !5062, file: !5063, line: 146, baseType: !5086, size: 128, offset: 1472)
!5086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 128, elements: !401)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !5062, file: !5063, line: 147, baseType: !1864, size: 64, offset: 1600)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !5062, file: !5063, line: 149, baseType: !7, size: 32, offset: 1664)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !5062, file: !5063, line: 151, baseType: !7, size: 32, offset: 1696)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !5062, file: !5063, line: 152, baseType: !7, size: 32, offset: 1728)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !5062, file: !5063, line: 153, baseType: !177, size: 64, offset: 1792)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !5062, file: !5063, line: 155, baseType: !5093, size: 64, offset: 1856)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5094, size: 64)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!109, !5061, !5096, !1708}
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5098)
!5098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !5070, line: 114, size: 320, elements: !5099)
!5099 = !{!5100, !5101, !5102, !5103, !5104}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5098, file: !5070, line: 116, baseType: !224, size: 8)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5098, file: !5070, line: 117, baseType: !224, size: 8, offset: 8)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5098, file: !5070, line: 118, baseType: !390, size: 16, offset: 16)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !5098, file: !5070, line: 119, baseType: !187, size: 32, offset: 32)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !5098, file: !5070, line: 120, baseType: !5105, size: 256, offset: 64)
!5105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !2751)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !5062, file: !5063, line: 158, baseType: !5107, size: 64, offset: 1920)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!109, !5061, !5110}
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 64)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !5062, file: !5063, line: 161, baseType: !5112, size: 64, offset: 1984)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !5063, line: 534, size: 896, elements: !5114)
!5114 = !{!5115, !5182, !5186, !5190, !5194, !5195, !5199, !5200, !5201, !5202, !5203, !5204}
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !5113, file: !5063, line: 535, baseType: !5116, size: 64)
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!109, !5061, !5119, !5119}
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !5070, line: 450, size: 384, elements: !5121)
!5121 = !{!5122, !5123, !5124, !5125, !5130, !5135}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5120, file: !5070, line: 451, baseType: !390, size: 16)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5120, file: !5070, line: 452, baseType: !3407, size: 16, offset: 16)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !5120, file: !5070, line: 453, baseType: !390, size: 16, offset: 32)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !5120, file: !5070, line: 454, baseType: !5126, size: 32, offset: 48)
!5126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !5070, line: 316, size: 32, elements: !5127)
!5127 = !{!5128, !5129}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !5126, file: !5070, line: 317, baseType: !390, size: 16)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5126, file: !5070, line: 318, baseType: !390, size: 16, offset: 16)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !5120, file: !5070, line: 455, baseType: !5131, size: 32, offset: 80)
!5131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !5070, line: 306, size: 32, elements: !5132)
!5132 = !{!5133, !5134}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5131, file: !5070, line: 307, baseType: !390, size: 16)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !5131, file: !5070, line: 308, baseType: !390, size: 16, offset: 16)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !5120, file: !5070, line: 463, baseType: !5136, size: 256, offset: 128)
!5136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5120, file: !5070, line: 457, size: 256, elements: !5137)
!5137 = !{!5138, !5149, !5155, !5167, !5177}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !5136, file: !5070, line: 458, baseType: !5139, size: 80)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !5070, line: 345, size: 80, elements: !5140)
!5140 = !{!5141, !5142}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5139, file: !5070, line: 346, baseType: !3407, size: 16)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !5139, file: !5070, line: 347, baseType: !5143, size: 64, offset: 16)
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !5070, line: 333, size: 64, elements: !5144)
!5144 = !{!5145, !5146, !5147, !5148}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !5143, file: !5070, line: 334, baseType: !390, size: 16)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !5143, file: !5070, line: 335, baseType: !390, size: 16, offset: 16)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !5143, file: !5070, line: 336, baseType: !390, size: 16, offset: 32)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !5143, file: !5070, line: 337, baseType: !390, size: 16, offset: 48)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !5136, file: !5070, line: 459, baseType: !5150, size: 96)
!5150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !5070, line: 356, size: 96, elements: !5151)
!5151 = !{!5152, !5153, !5154}
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !5150, file: !5070, line: 357, baseType: !3407, size: 16)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !5150, file: !5070, line: 358, baseType: !3407, size: 16, offset: 16)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !5150, file: !5070, line: 359, baseType: !5143, size: 64, offset: 32)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !5136, file: !5070, line: 460, baseType: !5156, size: 256)
!5156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !5070, line: 401, size: 256, elements: !5157)
!5157 = !{!5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !5156, file: !5070, line: 402, baseType: !390, size: 16)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5156, file: !5070, line: 403, baseType: !390, size: 16, offset: 16)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !5156, file: !5070, line: 404, baseType: !3407, size: 16, offset: 32)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5156, file: !5070, line: 405, baseType: !3407, size: 16, offset: 48)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5156, file: !5070, line: 406, baseType: !390, size: 16, offset: 64)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !5156, file: !5070, line: 408, baseType: !5143, size: 64, offset: 80)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !5156, file: !5070, line: 410, baseType: !187, size: 32, offset: 160)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !5156, file: !5070, line: 411, baseType: !5166, size: 64, offset: 192)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !5136, file: !5070, line: 461, baseType: !5168, size: 192)
!5168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5169, size: 192, elements: !401)
!5169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !5070, line: 372, size: 96, elements: !5170)
!5170 = !{!5171, !5172, !5173, !5174, !5175, !5176}
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !5169, file: !5070, line: 373, baseType: !390, size: 16)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !5169, file: !5070, line: 374, baseType: !390, size: 16, offset: 16)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !5169, file: !5070, line: 376, baseType: !3407, size: 16, offset: 32)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !5169, file: !5070, line: 377, baseType: !3407, size: 16, offset: 48)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !5169, file: !5070, line: 379, baseType: !390, size: 16, offset: 64)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !5169, file: !5070, line: 380, baseType: !3407, size: 16, offset: 80)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !5136, file: !5070, line: 462, baseType: !5178, size: 32)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !5070, line: 422, size: 32, elements: !5179)
!5179 = !{!5180, !5181}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !5178, file: !5070, line: 423, baseType: !390, size: 16)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !5178, file: !5070, line: 424, baseType: !390, size: 16, offset: 16)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !5113, file: !5063, line: 537, baseType: !5183, size: 64, offset: 64)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{!109, !5061, !109}
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !5113, file: !5063, line: 539, baseType: !5187, size: 64, offset: 128)
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5188, size: 64)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!109, !5061, !109, !109}
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !5113, file: !5063, line: 540, baseType: !5191, size: 64, offset: 192)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 64)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{null, !5061, !1183}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !5113, file: !5063, line: 541, baseType: !5191, size: 64, offset: 256)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5113, file: !5063, line: 543, baseType: !5196, size: 64, offset: 320)
!5196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5197, size: 64)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{null, !5112}
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5113, file: !5063, line: 545, baseType: !177, size: 64, offset: 384)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !5113, file: !5063, line: 547, baseType: !5086, size: 128, offset: 448)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5113, file: !5063, line: 549, baseType: !271, size: 192, offset: 576)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !5113, file: !5063, line: 551, baseType: !109, size: 32, offset: 768)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !5113, file: !5063, line: 552, baseType: !5119, size: 64, offset: 832)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !5113, file: !5063, line: 553, baseType: !5205, offset: 896)
!5205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, elements: !3439)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !5062, file: !5063, line: 163, baseType: !5207, size: 64, offset: 2048)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !5063, line: 24, flags: DIFlagFwdDecl)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !5062, file: !5063, line: 165, baseType: !7, size: 32, offset: 2112)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5062, file: !5063, line: 166, baseType: !519, size: 320, offset: 2176)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !5062, file: !5063, line: 168, baseType: !5212, size: 64, offset: 2496)
!5212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 64, elements: !401)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !5062, file: !5063, line: 170, baseType: !5214, size: 64, offset: 2560)
!5214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5215, size: 64)
!5215 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !5063, line: 170, flags: DIFlagFwdDecl)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !5062, file: !5063, line: 172, baseType: !5217, size: 64, offset: 2624)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !5070, line: 90, size: 192, elements: !5219)
!5219 = !{!5220, !5221, !5222, !5223, !5224, !5225}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5218, file: !5070, line: 91, baseType: !1940, size: 32)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !5218, file: !5070, line: 92, baseType: !1940, size: 32, offset: 32)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !5218, file: !5070, line: 93, baseType: !1940, size: 32, offset: 64)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !5218, file: !5070, line: 94, baseType: !1940, size: 32, offset: 96)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !5218, file: !5070, line: 95, baseType: !1940, size: 32, offset: 128)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !5218, file: !5070, line: 96, baseType: !1940, size: 32, offset: 160)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5062, file: !5063, line: 174, baseType: !5079, size: 768, offset: 2688)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !5062, file: !5063, line: 175, baseType: !1864, size: 64, offset: 3456)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !5062, file: !5063, line: 176, baseType: !1864, size: 64, offset: 3520)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !5062, file: !5063, line: 177, baseType: !1864, size: 64, offset: 3584)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5062, file: !5063, line: 179, baseType: !5231, size: 64, offset: 3648)
!5231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5232, size: 64)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{!109, !5061}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !5062, file: !5063, line: 180, baseType: !5235, size: 64, offset: 3712)
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DISubroutineType(types: !5237)
!5237 = !{null, !5061}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5062, file: !5063, line: 181, baseType: !5239, size: 64, offset: 3776)
!5239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!5240 = !DISubroutineType(types: !5241)
!5241 = !{!109, !5061, !713}
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5062, file: !5063, line: 182, baseType: !5243, size: 64, offset: 3840)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 64)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{!109, !5061, !7, !7, !109}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !5062, file: !5063, line: 184, baseType: !5247, size: 64, offset: 3904)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !5063, line: 337, size: 576, elements: !5249)
!5249 = !{!5250, !5251, !5252, !5253, !5254, !5320, !5321}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5248, file: !5063, line: 339, baseType: !177, size: 64)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5248, file: !5063, line: 341, baseType: !109, size: 32, offset: 64)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5248, file: !5063, line: 342, baseType: !422, size: 64, offset: 128)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5248, file: !5063, line: 344, baseType: !5061, size: 64, offset: 192)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5248, file: !5063, line: 345, baseType: !5255, size: 64, offset: 256)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5256, size: 64)
!5256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !5063, line: 302, size: 960, elements: !5257)
!5257 = !{!5258, !5259, !5263, !5274, !5278, !5282, !5309, !5313, !5314, !5315, !5316, !5317, !5318, !5319}
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5256, file: !5063, line: 304, baseType: !177, size: 64)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5256, file: !5063, line: 306, baseType: !5260, size: 64, offset: 64)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = !DISubroutineType(types: !5262)
!5262 = !{null, !5247, !7, !7, !109}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5256, file: !5063, line: 307, baseType: !5264, size: 64, offset: 128)
!5264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5265, size: 64)
!5265 = !DISubroutineType(types: !5266)
!5266 = !{null, !5247, !5267, !7}
!5267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5268, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5269)
!5269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !5063, line: 32, size: 64, elements: !5270)
!5270 = !{!5271, !5272, !5273}
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5269, file: !5063, line: 33, baseType: !390, size: 16)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5269, file: !5063, line: 34, baseType: !390, size: 16, offset: 16)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5269, file: !5063, line: 35, baseType: !1940, size: 32, offset: 32)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5256, file: !5063, line: 309, baseType: !5275, size: 64, offset: 192)
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5276, size: 64)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!844, !5247, !7, !7, !109}
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5256, file: !5063, line: 310, baseType: !5279, size: 64, offset: 256)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{!844, !5255, !5061}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !5256, file: !5063, line: 311, baseType: !5283, size: 64, offset: 320)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5284, size: 64)
!5284 = !DISubroutineType(types: !5285)
!5285 = !{!109, !5255, !5061, !5286}
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5288)
!5288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !3897, line: 342, size: 1600, elements: !5289)
!5289 = !{!5290, !5291, !5292, !5293, !5294, !5295, !5297, !5299, !5300, !5301, !5302, !5303, !5304, !5306, !5307, !5308}
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5288, file: !3897, line: 344, baseType: !3914, size: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !5288, file: !3897, line: 346, baseType: !390, size: 16, offset: 64)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5288, file: !3897, line: 347, baseType: !390, size: 16, offset: 80)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !5288, file: !3897, line: 348, baseType: !390, size: 16, offset: 96)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5288, file: !3897, line: 349, baseType: !390, size: 16, offset: 112)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !5288, file: !3897, line: 351, baseType: !5296, size: 64, offset: 128)
!5296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3914, size: 64, elements: !1865)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !5288, file: !3897, line: 352, baseType: !5298, size: 768, offset: 192)
!5298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3914, size: 768, elements: !2757)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !5288, file: !3897, line: 353, baseType: !5296, size: 64, offset: 960)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !5288, file: !3897, line: 354, baseType: !5296, size: 64, offset: 1024)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !5288, file: !3897, line: 355, baseType: !5296, size: 64, offset: 1088)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !5288, file: !3897, line: 356, baseType: !5296, size: 64, offset: 1152)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !5288, file: !3897, line: 357, baseType: !5296, size: 64, offset: 1216)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !5288, file: !3897, line: 358, baseType: !5305, size: 128, offset: 1280)
!5305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3914, size: 128, elements: !401)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !5288, file: !3897, line: 359, baseType: !5296, size: 64, offset: 1408)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !5288, file: !3897, line: 360, baseType: !5296, size: 64, offset: 1472)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !5288, file: !3897, line: 362, baseType: !3914, size: 64, offset: 1536)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5256, file: !5063, line: 312, baseType: !5310, size: 64, offset: 384)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{null, !5247}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5256, file: !5063, line: 313, baseType: !5310, size: 64, offset: 448)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !5256, file: !5063, line: 315, baseType: !844, size: 8, offset: 512)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5256, file: !5063, line: 316, baseType: !109, size: 32, offset: 544)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5256, file: !5063, line: 317, baseType: !422, size: 64, offset: 576)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5256, file: !5063, line: 319, baseType: !5286, size: 64, offset: 640)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !5256, file: !5063, line: 321, baseType: !301, size: 128, offset: 704)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5256, file: !5063, line: 322, baseType: !301, size: 128, offset: 832)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !5248, file: !5063, line: 347, baseType: !301, size: 128, offset: 320)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !5248, file: !5063, line: 348, baseType: !301, size: 128, offset: 448)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !5062, file: !5063, line: 186, baseType: !285, offset: 3968)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5062, file: !5063, line: 187, baseType: !271, size: 192, offset: 3968)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !5062, file: !5063, line: 189, baseType: !7, size: 32, offset: 4160)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !5062, file: !5063, line: 190, baseType: !844, size: 8, offset: 4192)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5062, file: !5063, line: 192, baseType: !3524, size: 5568, offset: 4224)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !5062, file: !5063, line: 194, baseType: !301, size: 128, offset: 9792)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5062, file: !5063, line: 195, baseType: !301, size: 128, offset: 9920)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !5062, file: !5063, line: 197, baseType: !7, size: 32, offset: 10048)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !5062, file: !5063, line: 198, baseType: !7, size: 32, offset: 10080)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !5062, file: !5063, line: 199, baseType: !5332, size: 64, offset: 10112)
!5332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5269, size: 64)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !5062, file: !5063, line: 201, baseType: !844, size: 8, offset: 10176)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !5062, file: !5063, line: 203, baseType: !5335, size: 192, offset: 10240)
!5335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1796, size: 192, elements: !995)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "key_dev", scope: !5057, file: !3, line: 193, baseType: !5061, size: 64, offset: 128)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "fifo", scope: !5057, file: !3, line: 194, baseType: !5338, size: 192, offset: 192)
!5338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kfifo", file: !5339, line: 83, size: 192, elements: !5340)
!5339 = !DIFile(filename: "./include/linux/kfifo.h", directory: "/home/lizy2001/genbc/linux")
!5340 = !{!5341, !5359}
!5341 = !DIDerivedType(tag: DW_TAG_member, scope: !5338, file: !5339, line: 83, baseType: !5342, size: 192)
!5342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5338, file: !5339, line: 83, size: 192, elements: !5343)
!5343 = !{!5344, !5352, !5353, !5354, !5357, !5358}
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "kfifo", scope: !5342, file: !5339, line: 83, baseType: !5345, size: 192)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kfifo", file: !5339, line: 44, size: 192, elements: !5346)
!5346 = !{!5347, !5348, !5349, !5350, !5351}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !5345, file: !5339, line: 45, baseType: !7, size: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !5345, file: !5339, line: 46, baseType: !7, size: 32, offset: 32)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5345, file: !5339, line: 47, baseType: !7, size: 32, offset: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "esize", scope: !5345, file: !5339, line: 48, baseType: !7, size: 32, offset: 96)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5345, file: !5339, line: 49, baseType: !177, size: 64, offset: 128)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5342, file: !5339, line: 83, baseType: !191, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "const_type", scope: !5342, file: !5339, line: 83, baseType: !779, size: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "rectype", scope: !5342, file: !5339, line: 83, baseType: !5355, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5356, size: 64)
!5356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, elements: !1416)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5342, file: !5339, line: 83, baseType: !177, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_const", scope: !5342, file: !5339, line: 83, baseType: !2648, size: 64)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5338, file: !5339, line: 83, baseType: !5360, offset: 192)
!5360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, elements: !1416)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_lock", scope: !5057, file: !3, line: 195, baseType: !285, offset: 384)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "release_key_timer", scope: !5057, file: !3, line: 196, baseType: !519, size: 320, offset: 384)
!5363 = !DIGlobalVariableExpression(var: !5364, expr: !DIExpression())
!5364 = distinct !DIGlobalVariable(name: "sony_laptop_input_keycode_map", scope: !2, file: !3, line: 288, type: !5365, isLocal: true, isDefinition: true)
!5365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 1920, elements: !5366)
!5366 = !{!5367}
!5367 = !DISubrange(count: 60)
!5368 = !DIGlobalVariableExpression(var: !5369, expr: !DIExpression())
!5369 = distinct !DIGlobalVariable(name: "handles", scope: !2, file: !3, line: 814, type: !5370, isLocal: true, isDefinition: true)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_nc_handles", file: !3, line: 809, size: 512, elements: !5372)
!5372 = !{!5373, !5375}
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !5371, file: !3, line: 810, baseType: !5374, size: 256)
!5374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1183, size: 256, elements: !382)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "devattr", scope: !5371, file: !3, line: 811, baseType: !4484, size: 256, offset: 256)
!5376 = !DIGlobalVariableExpression(var: !5377, expr: !DIExpression())
!5377 = distinct !DIGlobalVariable(name: "sony_pf_device", scope: !2, file: !3, line: 573, type: !5006, isLocal: true, isDefinition: true)
!5378 = !DIGlobalVariableExpression(var: !5379, expr: !DIExpression())
!5379 = distinct !DIGlobalVariable(name: "tp_ctl", scope: !2, file: !3, line: 2972, type: !5380, isLocal: true, isDefinition: true)
!5380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5381, size: 64)
!5381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "touchpad_control", file: !3, line: 2968, size: 320, elements: !5382)
!5382 = !{!5383, !5384}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5381, file: !3, line: 2969, baseType: !4484, size: 256)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5381, file: !3, line: 2970, baseType: !109, size: 32, offset: 256)
!5385 = !DIGlobalVariableExpression(var: !5386, expr: !DIExpression())
!5386 = distinct !DIGlobalVariable(name: "bcare_ctl", scope: !2, file: !3, line: 1971, type: !5387, isLocal: true, isDefinition: true)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "battery_care_control", file: !3, line: 1967, size: 576, elements: !5389)
!5389 = !{!5390, !5392}
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5388, file: !3, line: 1968, baseType: !5391, size: 512)
!5391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4484, size: 512, elements: !401)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5388, file: !3, line: 1969, baseType: !7, size: 32, offset: 512)
!5393 = !DIGlobalVariableExpression(var: !5394, expr: !DIExpression())
!5394 = distinct !DIGlobalVariable(name: "lid_ctl", scope: !2, file: !3, line: 2313, type: !5395, isLocal: true, isDefinition: true)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5396, size: 64)
!5396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "snc_lid_resume_control", file: !3, line: 2308, size: 832, elements: !5397)
!5397 = !{!5398, !5400, !5401}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5396, file: !3, line: 2309, baseType: !5399, size: 768)
!5399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4484, size: 768, elements: !995)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5396, file: !3, line: 2310, baseType: !7, size: 32, offset: 768)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5396, file: !3, line: 2311, baseType: !109, size: 32, offset: 800)
!5402 = !DIGlobalVariableExpression(var: !5403, expr: !DIExpression())
!5403 = distinct !DIGlobalVariable(name: "th_handle", scope: !2, file: !3, line: 2135, type: !5404, isLocal: true, isDefinition: true)
!5404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5405, size: 64)
!5405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "snc_thermal_ctrl", file: !3, line: 2129, size: 576, elements: !5406)
!5406 = !{!5407, !5408, !5409, !5410}
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5405, file: !3, line: 2130, baseType: !7, size: 32)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !5405, file: !3, line: 2131, baseType: !7, size: 32, offset: 32)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "mode_attr", scope: !5405, file: !3, line: 2132, baseType: !4484, size: 256, offset: 64)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "profiles_attr", scope: !5405, file: !3, line: 2133, baseType: !4484, size: 256, offset: 320)
!5411 = !DIGlobalVariableExpression(var: !5412, expr: !DIExpression())
!5412 = distinct !DIGlobalVariable(name: "snc_thermal_profiles", scope: !2, file: !3, line: 2138, type: !5413, isLocal: true, isDefinition: true)
!5413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5414, size: 192, elements: !995)
!5414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!5415 = !DIGlobalVariableExpression(var: !5416, expr: !DIExpression())
!5416 = distinct !DIGlobalVariable(name: "gfxs_ctl", scope: !2, file: !3, line: 2452, type: !5417, isLocal: true, isDefinition: true)
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "snc_gfx_switch_control", file: !3, line: 2448, size: 320, elements: !5419)
!5419 = !{!5420, !5421}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5418, file: !3, line: 2449, baseType: !4484, size: 256)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5418, file: !3, line: 2450, baseType: !7, size: 32, offset: 256)
!5422 = !DIGlobalVariableExpression(var: !5423, expr: !DIExpression())
!5423 = distinct !DIGlobalVariable(name: "hsc_handle", scope: !2, file: !3, line: 2545, type: !4491, isLocal: true, isDefinition: true)
!5424 = !DIGlobalVariableExpression(var: !5425, expr: !DIExpression())
!5425 = distinct !DIGlobalVariable(name: "sony_rfkill_handle", scope: !2, file: !3, line: 179, type: !109, isLocal: true, isDefinition: true)
!5426 = !DIGlobalVariableExpression(var: !5427, expr: !DIExpression())
!5427 = distinct !DIGlobalVariable(name: "sony_rfkill_devices", scope: !2, file: !3, line: 180, type: !5428, isLocal: true, isDefinition: true)
!5428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5429, size: 256, elements: !375)
!5429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5430, size: 64)
!5430 = !DICompositeType(tag: DW_TAG_structure_type, name: "rfkill", file: !5431, line: 41, flags: DIFlagFwdDecl)
!5431 = !DIFile(filename: "./include/linux/rfkill.h", directory: "/home/lizy2001/genbc/linux")
!5432 = !DIGlobalVariableExpression(var: !5433, expr: !DIExpression())
!5433 = distinct !DIGlobalVariable(name: "sony_rfkill_ops", scope: !2, file: !3, line: 1602, type: !5434, isLocal: true, isDefinition: true)
!5434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5435)
!5435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rfkill_ops", file: !5431, line: 61, size: 192, elements: !5436)
!5436 = !{!5437, !5441, !5442}
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5435, file: !5431, line: 62, baseType: !5438, size: 64)
!5438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5439, size: 64)
!5439 = !DISubroutineType(types: !5440)
!5440 = !{null, !5429, !177}
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !5435, file: !5431, line: 63, baseType: !5438, size: 64, offset: 64)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "set_block", scope: !5435, file: !5431, line: 64, baseType: !5443, size: 64, offset: 128)
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5444, size: 64)
!5444 = !DISubroutineType(types: !5445)
!5445 = !{!109, !177, !844}
!5446 = !DIGlobalVariableExpression(var: !5447, expr: !DIExpression())
!5447 = distinct !DIGlobalVariable(name: "sony_rfkill_address", scope: !2, file: !3, line: 181, type: !5448, isLocal: true, isDefinition: true)
!5448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 128, elements: !375)
!5449 = !DIGlobalVariableExpression(var: !5450, expr: !DIExpression())
!5450 = distinct !DIGlobalVariable(name: "kbdbl_ctl", scope: !2, file: !3, line: 1767, type: !5451, isLocal: true, isDefinition: true)
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kbd_backlight", file: !3, line: 1757, size: 704, elements: !5453)
!5453 = !{!5454, !5455, !5456, !5457, !5458, !5459, !5460}
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5452, file: !3, line: 1758, baseType: !7, size: 32)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5452, file: !3, line: 1759, baseType: !7, size: 32, offset: 32)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5452, file: !3, line: 1760, baseType: !7, size: 32, offset: 64)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5452, file: !3, line: 1761, baseType: !7, size: 32, offset: 96)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !5452, file: !3, line: 1762, baseType: !7, size: 32, offset: 128)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "mode_attr", scope: !5452, file: !3, line: 1763, baseType: !4484, size: 256, offset: 192)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_attr", scope: !5452, file: !3, line: 1764, baseType: !4484, size: 256, offset: 448)
!5461 = !DIGlobalVariableExpression(var: !5462, expr: !DIExpression())
!5462 = distinct !DIGlobalVariable(name: "lowbatt_handle", scope: !2, file: !3, line: 2619, type: !4491, isLocal: true, isDefinition: true)
!5463 = !DIGlobalVariableExpression(var: !5464, expr: !DIExpression())
!5464 = distinct !DIGlobalVariable(name: "fan_handle", scope: !2, file: !3, line: 2685, type: !4491, isLocal: true, isDefinition: true)
!5465 = !DIGlobalVariableExpression(var: !5466, expr: !DIExpression())
!5466 = distinct !DIGlobalVariable(name: "hsf_handle", scope: !2, file: !3, line: 2685, type: !4491, isLocal: true, isDefinition: true)
!5467 = !DIGlobalVariableExpression(var: !5468, expr: !DIExpression())
!5468 = distinct !DIGlobalVariable(name: "uc_handle", scope: !2, file: !3, line: 2792, type: !4491, isLocal: true, isDefinition: true)
!5469 = !DIGlobalVariableExpression(var: !5470, expr: !DIExpression())
!5470 = distinct !DIGlobalVariable(name: "panel_handle", scope: !2, file: !3, line: 2866, type: !4491, isLocal: true, isDefinition: true)
!5471 = !DIGlobalVariableExpression(var: !5472, expr: !DIExpression())
!5472 = distinct !DIGlobalVariable(name: "sc_handle", scope: !2, file: !3, line: 2913, type: !4491, isLocal: true, isDefinition: true)
!5473 = !DIGlobalVariableExpression(var: !5474, expr: !DIExpression())
!5474 = distinct !DIGlobalVariable(name: "sony_backlight_ng_ops", scope: !2, file: !3, line: 1063, type: !309, isLocal: true, isDefinition: true)
!5475 = !DIGlobalVariableExpression(var: !5476, expr: !DIExpression())
!5476 = distinct !DIGlobalVariable(name: "sony_bl_props", scope: !2, file: !3, line: 1015, type: !254, isLocal: true, isDefinition: true)
!5477 = !DIGlobalVariableExpression(var: !5478, expr: !DIExpression())
!5478 = distinct !DIGlobalVariable(name: "sony_backlight_ops", scope: !2, file: !3, line: 1058, type: !309, isLocal: true, isDefinition: true)
!5479 = !DIGlobalVariableExpression(var: !5480, expr: !DIExpression())
!5480 = distinct !DIGlobalVariable(name: "sony_nc_values", scope: !2, file: !3, line: 694, type: !5481, isLocal: true, isDefinition: true)
!5481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4469, size: 8320, elements: !5482)
!5482 = !{!5483}
!5483 = !DISubrange(count: 13)
!5484 = !DIGlobalVariableExpression(var: !5485, expr: !DIExpression())
!5485 = distinct !DIGlobalVariable(name: "snc_brightness_def_get", scope: !2, file: !3, line: 663, type: !5486, isLocal: true, isDefinition: true)
!5486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 128, elements: !401)
!5487 = !DIGlobalVariableExpression(var: !5488, expr: !DIExpression())
!5488 = distinct !DIGlobalVariable(name: "snc_brightness_def_set", scope: !2, file: !3, line: 664, type: !5486, isLocal: true, isDefinition: true)
!5489 = !DIGlobalVariableExpression(var: !5490, expr: !DIExpression())
!5490 = distinct !DIGlobalVariable(name: "snc_fnkey_get", scope: !2, file: !3, line: 661, type: !5486, isLocal: true, isDefinition: true)
!5491 = !DIGlobalVariableExpression(var: !5492, expr: !DIExpression())
!5492 = distinct !DIGlobalVariable(name: "snc_cdpower_get", scope: !2, file: !3, line: 666, type: !5486, isLocal: true, isDefinition: true)
!5493 = !DIGlobalVariableExpression(var: !5494, expr: !DIExpression())
!5494 = distinct !DIGlobalVariable(name: "snc_cdpower_set", scope: !2, file: !3, line: 667, type: !3565, isLocal: true, isDefinition: true)
!5495 = !DIGlobalVariableExpression(var: !5496, expr: !DIExpression())
!5496 = distinct !DIGlobalVariable(name: "snc_audiopower_get", scope: !2, file: !3, line: 669, type: !5486, isLocal: true, isDefinition: true)
!5497 = !DIGlobalVariableExpression(var: !5498, expr: !DIExpression())
!5498 = distinct !DIGlobalVariable(name: "snc_audiopower_set", scope: !2, file: !3, line: 670, type: !5486, isLocal: true, isDefinition: true)
!5499 = !DIGlobalVariableExpression(var: !5500, expr: !DIExpression())
!5500 = distinct !DIGlobalVariable(name: "snc_lanpower_get", scope: !2, file: !3, line: 672, type: !5486, isLocal: true, isDefinition: true)
!5501 = !DIGlobalVariableExpression(var: !5502, expr: !DIExpression())
!5502 = distinct !DIGlobalVariable(name: "snc_lanpower_set", scope: !2, file: !3, line: 673, type: !5486, isLocal: true, isDefinition: true)
!5503 = !DIGlobalVariableExpression(var: !5504, expr: !DIExpression())
!5504 = distinct !DIGlobalVariable(name: "snc_lidstate_get", scope: !2, file: !3, line: 675, type: !5486, isLocal: true, isDefinition: true)
!5505 = !DIGlobalVariableExpression(var: !5506, expr: !DIExpression())
!5506 = distinct !DIGlobalVariable(name: "snc_indicatorlamp_get", scope: !2, file: !3, line: 677, type: !5486, isLocal: true, isDefinition: true)
!5507 = !DIGlobalVariableExpression(var: !5508, expr: !DIExpression())
!5508 = distinct !DIGlobalVariable(name: "snc_indicatorlamp_set", scope: !2, file: !3, line: 678, type: !5486, isLocal: true, isDefinition: true)
!5509 = !DIGlobalVariableExpression(var: !5510, expr: !DIExpression())
!5510 = distinct !DIGlobalVariable(name: "snc_gainbass_get", scope: !2, file: !3, line: 680, type: !5486, isLocal: true, isDefinition: true)
!5511 = !DIGlobalVariableExpression(var: !5512, expr: !DIExpression())
!5512 = distinct !DIGlobalVariable(name: "snc_gainbass_set", scope: !2, file: !3, line: 681, type: !5486, isLocal: true, isDefinition: true)
!5513 = !DIGlobalVariableExpression(var: !5514, expr: !DIExpression())
!5514 = distinct !DIGlobalVariable(name: "snc_PID_get", scope: !2, file: !3, line: 683, type: !5486, isLocal: true, isDefinition: true)
!5515 = !DIGlobalVariableExpression(var: !5516, expr: !DIExpression())
!5516 = distinct !DIGlobalVariable(name: "snc_CTR_get", scope: !2, file: !3, line: 685, type: !5486, isLocal: true, isDefinition: true)
!5517 = !DIGlobalVariableExpression(var: !5518, expr: !DIExpression())
!5518 = distinct !DIGlobalVariable(name: "snc_CTR_set", scope: !2, file: !3, line: 686, type: !5486, isLocal: true, isDefinition: true)
!5519 = !DIGlobalVariableExpression(var: !5520, expr: !DIExpression())
!5520 = distinct !DIGlobalVariable(name: "snc_PCR_get", scope: !2, file: !3, line: 688, type: !5486, isLocal: true, isDefinition: true)
!5521 = !DIGlobalVariableExpression(var: !5522, expr: !DIExpression())
!5522 = distinct !DIGlobalVariable(name: "snc_PCR_set", scope: !2, file: !3, line: 689, type: !5486, isLocal: true, isDefinition: true)
!5523 = !DIGlobalVariableExpression(var: !5524, expr: !DIExpression())
!5524 = distinct !DIGlobalVariable(name: "snc_CMI_get", scope: !2, file: !3, line: 691, type: !5486, isLocal: true, isDefinition: true)
!5525 = !DIGlobalVariableExpression(var: !5526, expr: !DIExpression())
!5526 = distinct !DIGlobalVariable(name: "snc_CMI_set", scope: !2, file: !3, line: 692, type: !5486, isLocal: true, isDefinition: true)
!5527 = !DIGlobalVariableExpression(var: !5528, expr: !DIExpression())
!5528 = distinct !DIGlobalVariable(name: "sony_100_events", scope: !2, file: !3, line: 1077, type: !5529, isLocal: true, isDefinition: true)
!5529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5530, size: 688, elements: !5534)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_nc_event", file: !3, line: 1072, size: 16, elements: !5531)
!5531 = !{!5532, !5533}
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5530, file: !3, line: 1073, baseType: !223, size: 8)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5530, file: !3, line: 1074, baseType: !223, size: 8, offset: 8)
!5534 = !{!5535}
!5535 = !DISubrange(count: 43)
!5536 = !DIGlobalVariableExpression(var: !5537, expr: !DIExpression())
!5537 = distinct !DIGlobalVariable(name: "sony_127_events", scope: !2, file: !3, line: 1123, type: !5538, isLocal: true, isDefinition: true)
!5538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5530, size: 240, elements: !5539)
!5539 = !{!5540}
!5540 = !DISubrange(count: 15)
!5541 = !DIGlobalVariableExpression(var: !5542, expr: !DIExpression())
!5542 = distinct !DIGlobalVariable(name: "sony_laptop_input_index", scope: !2, file: !3, line: 211, type: !5543, isLocal: true, isDefinition: true)
!5543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4479, size: 2368, elements: !5544)
!5544 = !{!5545}
!5545 = !DISubrange(count: 74)
!5546 = !DIGlobalVariableExpression(var: !5547, expr: !DIExpression())
!5547 = distinct !DIGlobalVariable(name: "sony_nc_pm", scope: !2, file: !3, line: 1577, type: !3840, isLocal: true, isDefinition: true)
!5548 = !DIGlobalVariableExpression(var: !5549, expr: !DIExpression())
!5549 = distinct !DIGlobalVariable(name: "sony_pic_driver", scope: !2, file: !3, line: 4859, type: !4729, isLocal: true, isDefinition: true)
!5550 = !DIGlobalVariableExpression(var: !5551, expr: !DIExpression())
!5551 = distinct !DIGlobalVariable(name: "sony_pic_device_ids", scope: !2, file: !3, line: 4854, type: !4990, isLocal: true, isDefinition: true)
!5552 = !DIGlobalVariableExpression(var: !5553, expr: !DIExpression())
!5553 = distinct !DIGlobalVariable(name: "__key", scope: !5554, file: !3, line: 4700, type: !989, isLocal: true, isDefinition: true)
!5554 = distinct !DISubprogram(name: "sony_pic_add", scope: !3, file: !3, line: 4691, type: !4708, scopeLine: 4692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!5555 = !DIGlobalVariableExpression(var: !5556, expr: !DIExpression())
!5556 = distinct !DIGlobalVariable(name: "type1_events", scope: !2, file: !3, line: 3549, type: !5557, isLocal: true, isDefinition: true)
!5557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4767, size: 2112, elements: !5558)
!5558 = !{!5559}
!5559 = !DISubrange(count: 11)
!5560 = !DIGlobalVariableExpression(var: !5561, expr: !DIExpression())
!5561 = distinct !DIGlobalVariable(name: "sonypi_releaseev", scope: !2, file: !3, line: 3397, type: !5562, isLocal: true, isDefinition: true)
!5562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 32, elements: !401)
!5563 = !DIGlobalVariableExpression(var: !5564, expr: !DIExpression())
!5564 = distinct !DIGlobalVariable(name: "sonypi_meyeev", scope: !2, file: !3, line: 3516, type: !5565, isLocal: true, isDefinition: true)
!5565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 48, elements: !995)
!5566 = !DIGlobalVariableExpression(var: !5567, expr: !DIExpression())
!5567 = distinct !DIGlobalVariable(name: "sonypi_lidev", scope: !2, file: !3, line: 3494, type: !5565, isLocal: true, isDefinition: true)
!5568 = !DIGlobalVariableExpression(var: !5569, expr: !DIExpression())
!5569 = distinct !DIGlobalVariable(name: "sonypi_captureev", scope: !2, file: !3, line: 3421, type: !5570, isLocal: true, isDefinition: true)
!5570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 80, elements: !4619)
!5571 = !DIGlobalVariableExpression(var: !5572, expr: !DIExpression())
!5572 = distinct !DIGlobalVariable(name: "sonypi_joggerev", scope: !2, file: !3, line: 3403, type: !5573, isLocal: true, isDefinition: true)
!5573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 224, elements: !441)
!5574 = !DIGlobalVariableExpression(var: !5575, expr: !DIExpression())
!5575 = distinct !DIGlobalVariable(name: "sonypi_fnkeyev", scope: !2, file: !3, line: 3430, type: !5576, isLocal: true, isDefinition: true)
!5576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 368, elements: !5577)
!5577 = !{!5578}
!5578 = !DISubrange(count: 23)
!5579 = !DIGlobalVariableExpression(var: !5580, expr: !DIExpression())
!5580 = distinct !DIGlobalVariable(name: "sonypi_blueev", scope: !2, file: !3, line: 3466, type: !5581, isLocal: true, isDefinition: true)
!5581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 64, elements: !375)
!5582 = !DIGlobalVariableExpression(var: !5583, expr: !DIExpression())
!5583 = distinct !DIGlobalVariable(name: "sonypi_pkeyev", scope: !2, file: !3, line: 3457, type: !5570, isLocal: true, isDefinition: true)
!5584 = !DIGlobalVariableExpression(var: !5585, expr: !DIExpression())
!5585 = distinct !DIGlobalVariable(name: "sonypi_memorystickev", scope: !2, file: !3, line: 3523, type: !5565, isLocal: true, isDefinition: true)
!5586 = !DIGlobalVariableExpression(var: !5587, expr: !DIExpression())
!5587 = distinct !DIGlobalVariable(name: "sonypi_batteryev", scope: !2, file: !3, line: 3530, type: !5565, isLocal: true, isDefinition: true)
!5588 = !DIGlobalVariableExpression(var: !5589, expr: !DIExpression())
!5589 = distinct !DIGlobalVariable(name: "type2_events", scope: !2, file: !3, line: 3562, type: !5590, isLocal: true, isDefinition: true)
!5590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4767, size: 2880, elements: !5539)
!5591 = !DIGlobalVariableExpression(var: !5592, expr: !DIExpression())
!5592 = distinct !DIGlobalVariable(name: "sonypi_backev", scope: !2, file: !3, line: 3481, type: !5562, isLocal: true, isDefinition: true)
!5593 = !DIGlobalVariableExpression(var: !5594, expr: !DIExpression())
!5594 = distinct !DIGlobalVariable(name: "sonypi_helpev", scope: !2, file: !3, line: 3487, type: !5562, isLocal: true, isDefinition: true)
!5595 = !DIGlobalVariableExpression(var: !5596, expr: !DIExpression())
!5596 = distinct !DIGlobalVariable(name: "sonypi_zoomev", scope: !2, file: !3, line: 3501, type: !5570, isLocal: true, isDefinition: true)
!5597 = !DIGlobalVariableExpression(var: !5598, expr: !DIExpression())
!5598 = distinct !DIGlobalVariable(name: "sonypi_thumbphraseev", scope: !2, file: !3, line: 3510, type: !5562, isLocal: true, isDefinition: true)
!5599 = !DIGlobalVariableExpression(var: !5600, expr: !DIExpression())
!5600 = distinct !DIGlobalVariable(name: "type3_events", scope: !2, file: !3, line: 3579, type: !5601, isLocal: true, isDefinition: true)
!5601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4767, size: 2304, elements: !2757)
!5602 = !DIGlobalVariableExpression(var: !5603, expr: !DIExpression())
!5603 = distinct !DIGlobalVariable(name: "sonypi_wlessev", scope: !2, file: !3, line: 3474, type: !5565, isLocal: true, isDefinition: true)
!5604 = !DIGlobalVariableExpression(var: !5605, expr: !DIExpression())
!5605 = distinct !DIGlobalVariable(name: "sonypi_volumeev", scope: !2, file: !3, line: 3537, type: !5565, isLocal: true, isDefinition: true)
!5606 = !DIGlobalVariableExpression(var: !5607, expr: !DIExpression())
!5607 = distinct !DIGlobalVariable(name: "sonypi_brightnessev", scope: !2, file: !3, line: 3544, type: !5562, isLocal: true, isDefinition: true)
!5608 = !DIGlobalVariableExpression(var: !5609, expr: !DIExpression())
!5609 = distinct !DIGlobalVariable(name: "spic_attribute_group", scope: !2, file: !3, line: 4021, type: !3606, isLocal: true, isDefinition: true)
!5610 = !DIGlobalVariableExpression(var: !5611, expr: !DIExpression())
!5611 = distinct !DIGlobalVariable(name: "spic_attributes", scope: !2, file: !3, line: 4014, type: !5612, isLocal: true, isDefinition: true)
!5612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3592, size: 256, elements: !375)
!5613 = !DIGlobalVariableExpression(var: !5614, expr: !DIExpression())
!5614 = distinct !DIGlobalVariable(name: "spic_attr_bluetoothpower", scope: !2, file: !3, line: 4010, type: !4484, isLocal: true, isDefinition: true)
!5615 = !DIGlobalVariableExpression(var: !5616, expr: !DIExpression())
!5616 = distinct !DIGlobalVariable(name: "spic_attr_wwanpower", scope: !2, file: !3, line: 4011, type: !4484, isLocal: true, isDefinition: true)
!5617 = !DIGlobalVariableExpression(var: !5618, expr: !DIExpression())
!5618 = distinct !DIGlobalVariable(name: "spic_attr_fanspeed", scope: !2, file: !3, line: 4012, type: !4484, isLocal: true, isDefinition: true)
!5619 = !DIGlobalVariableExpression(var: !5620, expr: !DIExpression())
!5620 = distinct !DIGlobalVariable(name: "sony_pic_pm", scope: !2, file: !3, line: 4852, type: !3840, isLocal: true, isDefinition: true)
!5621 = !DIGlobalVariableExpression(var: !5622, expr: !DIExpression())
!5622 = distinct !DIGlobalVariable(name: "sonypi_dmi_table", scope: !2, file: !3, line: 4871, type: !5623, isLocal: true, isDefinition: true)
!5623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5624, size: 8256, elements: !995)
!5624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5625)
!5625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !3897, line: 566, size: 2752, elements: !5626)
!5626 = !{!5627, !5632, !5633, !5643}
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5625, file: !3897, line: 567, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DISubroutineType(types: !5630)
!5630 = !{!109, !5631}
!5631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5624, size: 64)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !5625, file: !3897, line: 568, baseType: !422, size: 64, offset: 64)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !5625, file: !3897, line: 569, baseType: !5634, size: 2560, offset: 128)
!5634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5635, size: 2560, elements: !375)
!5635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !3897, line: 560, size: 640, elements: !5636)
!5636 = !{!5637, !5638, !5639}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5635, file: !3897, line: 561, baseType: !192, size: 7, flags: DIFlagBitField, extraData: i64 0)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !5635, file: !3897, line: 562, baseType: !192, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !5635, file: !3897, line: 563, baseType: !5640, size: 632, offset: 8)
!5640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 632, elements: !5641)
!5641 = !{!5642}
!5642 = !DISubrange(count: 79)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5625, file: !3897, line: 570, baseType: !177, size: 64, offset: 2688)
!5644 = !{!"rsp"}
!5645 = !{i32 7, !"Dwarf Version", i32 4}
!5646 = !{i32 2, !"Debug Info Version", i32 3}
!5647 = !{i32 1, !"wchar_size", i32 2}
!5648 = !{i32 1, !"Code Model", i32 2}
!5649 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5650 = distinct !DISubprogram(name: "sony_pic_camera_command", scope: !3, file: !3, line: 3836, type: !5651, scopeLine: 3837, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !299)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!109, !109, !223}
!5653 = !DILocalVariable(name: "command", arg: 1, scope: !5650, file: !3, line: 3836, type: !109)
!5654 = !DILocation(line: 3836, column: 33, scope: !5650)
!5655 = !DILocalVariable(name: "value", arg: 2, scope: !5650, file: !3, line: 3836, type: !223)
!5656 = !DILocation(line: 3836, column: 45, scope: !5650)
!5657 = !DILocation(line: 3838, column: 7, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 3838, column: 6)
!5659 = !DILocation(line: 3838, column: 6, scope: !5650)
!5660 = !DILocation(line: 3839, column: 3, scope: !5658)
!5661 = !DILocation(line: 3841, column: 2, scope: !5650)
!5662 = !DILocation(line: 3843, column: 10, scope: !5650)
!5663 = !DILocation(line: 3843, column: 2, scope: !5650)
!5664 = !DILocation(line: 3845, column: 7, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3845, column: 7)
!5666 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 3843, column: 19)
!5667 = !DILocation(line: 3845, column: 7, scope: !5666)
!5668 = !DILocation(line: 3846, column: 4, scope: !5665)
!5669 = !DILocation(line: 3848, column: 4, scope: !5665)
!5670 = !DILocation(line: 3849, column: 3, scope: !5666)
!5671 = !DILocalVariable(name: "n", scope: !5672, file: !3, line: 3851, type: !7)
!5672 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3851, column: 3)
!5673 = !DILocation(line: 3851, column: 3, scope: !5672)
!5674 = !DILocation(line: 0, scope: !5672)
!5675 = !DILocation(line: 3851, column: 3, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 3851, column: 3)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 3851, column: 3)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 3851, column: 3)
!5679 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 3851, column: 3)
!5680 = distinct !{!5680, !5673, !5673}
!5681 = !DILocation(line: 3851, column: 3, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 3851, column: 3)
!5683 = !DILocation(line: 3851, column: 3, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 3851, column: 3)
!5685 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 3851, column: 3)
!5686 = !DILocation(line: 3851, column: 3, scope: !5685)
!5687 = !DILocation(line: 3853, column: 3, scope: !5666)
!5688 = !DILocalVariable(name: "n", scope: !5689, file: !3, line: 3855, type: !7)
!5689 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3855, column: 3)
!5690 = !DILocation(line: 3855, column: 3, scope: !5689)
!5691 = !DILocation(line: 0, scope: !5689)
!5692 = !DILocation(line: 3855, column: 3, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 3855, column: 3)
!5694 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 3855, column: 3)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 3855, column: 3)
!5696 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 3855, column: 3)
!5697 = distinct !{!5697, !5690, !5690}
!5698 = !DILocation(line: 3855, column: 3, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 3855, column: 3)
!5700 = !DILocation(line: 3855, column: 3, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 3855, column: 3)
!5702 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 3855, column: 3)
!5703 = !DILocation(line: 3855, column: 3, scope: !5702)
!5704 = !DILocation(line: 3857, column: 3, scope: !5666)
!5705 = !DILocalVariable(name: "n", scope: !5706, file: !3, line: 3859, type: !7)
!5706 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3859, column: 3)
!5707 = !DILocation(line: 3859, column: 3, scope: !5706)
!5708 = !DILocation(line: 0, scope: !5706)
!5709 = !DILocation(line: 3859, column: 3, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 3859, column: 3)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 3859, column: 3)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 3859, column: 3)
!5713 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3859, column: 3)
!5714 = distinct !{!5714, !5707, !5707}
!5715 = !DILocation(line: 3859, column: 3, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 3859, column: 3)
!5717 = !DILocation(line: 3859, column: 3, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 3859, column: 3)
!5719 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 3859, column: 3)
!5720 = !DILocation(line: 3859, column: 3, scope: !5719)
!5721 = !DILocation(line: 3861, column: 3, scope: !5666)
!5722 = !DILocalVariable(name: "n", scope: !5723, file: !3, line: 3863, type: !7)
!5723 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3863, column: 3)
!5724 = !DILocation(line: 3863, column: 3, scope: !5723)
!5725 = !DILocation(line: 0, scope: !5723)
!5726 = !DILocation(line: 3863, column: 3, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 3863, column: 3)
!5728 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 3863, column: 3)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 3863, column: 3)
!5730 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 3863, column: 3)
!5731 = distinct !{!5731, !5724, !5724}
!5732 = !DILocation(line: 3863, column: 3, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 3863, column: 3)
!5734 = !DILocation(line: 3863, column: 3, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 3863, column: 3)
!5736 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 3863, column: 3)
!5737 = !DILocation(line: 3863, column: 3, scope: !5736)
!5738 = !DILocation(line: 3865, column: 3, scope: !5666)
!5739 = !DILocalVariable(name: "n", scope: !5740, file: !3, line: 3867, type: !7)
!5740 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3867, column: 3)
!5741 = !DILocation(line: 3867, column: 3, scope: !5740)
!5742 = !DILocation(line: 0, scope: !5740)
!5743 = !DILocation(line: 3867, column: 3, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 3867, column: 3)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 3867, column: 3)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 3867, column: 3)
!5747 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 3867, column: 3)
!5748 = distinct !{!5748, !5741, !5741}
!5749 = !DILocation(line: 3867, column: 3, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 3867, column: 3)
!5751 = !DILocation(line: 3867, column: 3, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 3867, column: 3)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 3867, column: 3)
!5754 = !DILocation(line: 3867, column: 3, scope: !5753)
!5755 = !DILocation(line: 3869, column: 3, scope: !5666)
!5756 = !DILocalVariable(name: "n", scope: !5757, file: !3, line: 3871, type: !7)
!5757 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3871, column: 3)
!5758 = !DILocation(line: 3871, column: 3, scope: !5757)
!5759 = !DILocation(line: 0, scope: !5757)
!5760 = !DILocation(line: 3871, column: 3, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 3871, column: 3)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 3871, column: 3)
!5763 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 3871, column: 3)
!5764 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3871, column: 3)
!5765 = distinct !{!5765, !5758, !5758}
!5766 = !DILocation(line: 3871, column: 3, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 3871, column: 3)
!5768 = !DILocation(line: 3871, column: 3, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 3871, column: 3)
!5770 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 3871, column: 3)
!5771 = !DILocation(line: 3871, column: 3, scope: !5770)
!5772 = !DILocation(line: 3873, column: 3, scope: !5666)
!5773 = !DILocalVariable(name: "n", scope: !5774, file: !3, line: 3875, type: !7)
!5774 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 3875, column: 3)
!5775 = !DILocation(line: 3875, column: 3, scope: !5774)
!5776 = !DILocation(line: 0, scope: !5774)
!5777 = !DILocation(line: 3875, column: 3, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 3875, column: 3)
!5779 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 3875, column: 3)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 3875, column: 3)
!5781 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 3875, column: 3)
!5782 = distinct !{!5782, !5775, !5775}
!5783 = !DILocation(line: 3875, column: 3, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5774, file: !3, line: 3875, column: 3)
!5785 = !DILocation(line: 3875, column: 3, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 3875, column: 3)
!5787 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 3875, column: 3)
!5788 = !DILocation(line: 3875, column: 3, scope: !5787)
!5789 = !DILocation(line: 3877, column: 3, scope: !5666)
!5790 = !DILocation(line: 3879, column: 3, scope: !5666)
!5791 = !DILocation(line: 3880, column: 3, scope: !5666)
!5792 = !DILocation(line: 3882, column: 2, scope: !5650)
!5793 = !DILocation(line: 3883, column: 2, scope: !5650)
!5794 = !DILocation(line: 3884, column: 1, scope: !5650)
!5795 = distinct !DISubprogram(name: "__sony_pic_camera_on", scope: !3, file: !3, line: 3795, type: !5796, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!109}
!5798 = !DILocalVariable(name: "i", scope: !5795, file: !3, line: 3797, type: !109)
!5799 = !DILocation(line: 3797, column: 6, scope: !5795)
!5800 = !DILocalVariable(name: "j", scope: !5795, file: !3, line: 3797, type: !109)
!5801 = !DILocation(line: 3797, column: 9, scope: !5795)
!5802 = !DILocalVariable(name: "x", scope: !5795, file: !3, line: 3797, type: !109)
!5803 = !DILocation(line: 3797, column: 12, scope: !5795)
!5804 = !DILocation(line: 3799, column: 7, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3799, column: 6)
!5806 = !DILocation(line: 3799, column: 6, scope: !5795)
!5807 = !DILocation(line: 3800, column: 3, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 3799, column: 15)
!5809 = !DILocation(line: 3801, column: 3, scope: !5808)
!5810 = !DILocation(line: 3804, column: 15, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3804, column: 6)
!5812 = !DILocation(line: 3804, column: 6, scope: !5811)
!5813 = !DILocation(line: 3804, column: 6, scope: !5795)
!5814 = !DILocation(line: 3805, column: 3, scope: !5811)
!5815 = !DILocation(line: 3807, column: 9, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3807, column: 2)
!5817 = !DILocation(line: 3807, column: 7, scope: !5816)
!5818 = !DILocation(line: 3807, column: 14, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 3807, column: 2)
!5820 = !DILocation(line: 3807, column: 16, scope: !5819)
!5821 = !DILocation(line: 3807, column: 2, scope: !5816)
!5822 = !DILocation(line: 3809, column: 10, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 3809, column: 3)
!5824 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 3807, column: 26)
!5825 = !DILocation(line: 3809, column: 8, scope: !5823)
!5826 = !DILocation(line: 3809, column: 15, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 3809, column: 3)
!5828 = !DILocation(line: 3809, column: 17, scope: !5827)
!5829 = !DILocation(line: 3809, column: 23, scope: !5827)
!5830 = !DILocation(line: 3809, column: 26, scope: !5827)
!5831 = !DILocation(line: 0, scope: !5827)
!5832 = !DILocation(line: 3809, column: 3, scope: !5823)
!5833 = !DILocation(line: 3810, column: 4, scope: !5827)
!5834 = !DILocation(line: 3809, column: 54, scope: !5827)
!5835 = !DILocation(line: 3809, column: 3, scope: !5827)
!5836 = distinct !{!5836, !5832, !5837}
!5837 = !DILocation(line: 3810, column: 13, scope: !5823)
!5838 = !DILocation(line: 3811, column: 3, scope: !5824)
!5839 = !DILocation(line: 3813, column: 10, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 3813, column: 3)
!5841 = !DILocation(line: 3813, column: 8, scope: !5840)
!5842 = !DILocation(line: 3813, column: 17, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 3813, column: 3)
!5844 = !DILocation(line: 3813, column: 19, scope: !5843)
!5845 = !DILocation(line: 3813, column: 3, scope: !5840)
!5846 = !DILocation(line: 3814, column: 8, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 3814, column: 8)
!5848 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 3813, column: 29)
!5849 = !DILocation(line: 3814, column: 8, scope: !5848)
!5850 = !DILocation(line: 3815, column: 5, scope: !5847)
!5851 = !DILocation(line: 3816, column: 4, scope: !5848)
!5852 = !DILocation(line: 3817, column: 3, scope: !5848)
!5853 = !DILocation(line: 3813, column: 25, scope: !5843)
!5854 = !DILocation(line: 3813, column: 3, scope: !5843)
!5855 = distinct !{!5855, !5845, !5856}
!5856 = !DILocation(line: 3817, column: 3, scope: !5840)
!5857 = !DILocation(line: 3818, column: 7, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 3818, column: 7)
!5859 = !DILocation(line: 3818, column: 7, scope: !5824)
!5860 = !DILocation(line: 3819, column: 4, scope: !5858)
!5861 = !DILocation(line: 3820, column: 2, scope: !5824)
!5862 = !DILocation(line: 3807, column: 22, scope: !5819)
!5863 = !DILocation(line: 3807, column: 2, scope: !5819)
!5864 = distinct !{!5864, !5821, !5865}
!5865 = !DILocation(line: 3820, column: 2, scope: !5816)
!5866 = !DILocation(line: 3822, column: 6, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3822, column: 6)
!5868 = !DILocation(line: 3822, column: 8, scope: !5867)
!5869 = !DILocation(line: 3822, column: 6, scope: !5795)
!5870 = !DILocation(line: 3823, column: 3, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 3822, column: 14)
!5872 = !DILocation(line: 3824, column: 3, scope: !5871)
!5873 = !DILocalVariable(name: "n", scope: !5874, file: !3, line: 3827, type: !7)
!5874 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 3827, column: 2)
!5875 = !DILocation(line: 3827, column: 2, scope: !5874)
!5876 = !DILocation(line: 0, scope: !5874)
!5877 = !DILocation(line: 3827, column: 2, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5879, file: !3, line: 3827, column: 2)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 3827, column: 2)
!5880 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 3827, column: 2)
!5881 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 3827, column: 2)
!5882 = distinct !{!5882, !5875, !5875}
!5883 = !DILocation(line: 3827, column: 2, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 3827, column: 2)
!5885 = !DILocation(line: 3827, column: 2, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 3827, column: 2)
!5887 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 3827, column: 2)
!5888 = !DILocation(line: 3827, column: 2, scope: !5887)
!5889 = !DILocation(line: 3831, column: 24, scope: !5795)
!5890 = !DILocation(line: 3832, column: 2, scope: !5795)
!5891 = !DILocation(line: 3833, column: 1, scope: !5795)
!5892 = distinct !DISubprogram(name: "__sony_pic_camera_off", scope: !3, file: !3, line: 3777, type: !5796, scopeLine: 3778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!5893 = !DILocation(line: 3779, column: 7, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 3779, column: 6)
!5895 = !DILocation(line: 3779, column: 6, scope: !5892)
!5896 = !DILocation(line: 3780, column: 3, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 3779, column: 15)
!5898 = !DILocation(line: 3781, column: 3, scope: !5897)
!5899 = !DILocalVariable(name: "n", scope: !5900, file: !3, line: 3784, type: !7)
!5900 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 3784, column: 2)
!5901 = !DILocation(line: 3784, column: 2, scope: !5900)
!5902 = !DILocation(line: 0, scope: !5900)
!5903 = !DILocation(line: 3784, column: 2, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 3784, column: 2)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 3784, column: 2)
!5906 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3784, column: 2)
!5907 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3784, column: 2)
!5908 = distinct !{!5908, !5901, !5901}
!5909 = !DILocation(line: 3784, column: 2, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3784, column: 2)
!5911 = !DILocation(line: 3784, column: 2, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 3784, column: 2)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 3784, column: 2)
!5914 = !DILocation(line: 3784, column: 2, scope: !5913)
!5915 = !DILocation(line: 3788, column: 15, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 3788, column: 6)
!5917 = !DILocation(line: 3788, column: 6, scope: !5916)
!5918 = !DILocation(line: 3788, column: 6, scope: !5892)
!5919 = !DILocation(line: 3789, column: 3, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 3788, column: 29)
!5921 = !DILocation(line: 3790, column: 25, scope: !5920)
!5922 = !DILocation(line: 3791, column: 2, scope: !5920)
!5923 = !DILocation(line: 3792, column: 2, scope: !5892)
!5924 = !DILocation(line: 3793, column: 1, scope: !5892)
!5925 = distinct !DISubprogram(name: "sony_pic_call3", scope: !3, file: !3, line: 3634, type: !5926, scopeLine: 3635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{!223, !223, !223, !223}
!5928 = !DILocalVariable(name: "dev", arg: 1, scope: !5925, file: !3, line: 3634, type: !223)
!5929 = !DILocation(line: 3634, column: 29, scope: !5925)
!5930 = !DILocalVariable(name: "fn", arg: 2, scope: !5925, file: !3, line: 3634, type: !223)
!5931 = !DILocation(line: 3634, column: 37, scope: !5925)
!5932 = !DILocalVariable(name: "v", arg: 3, scope: !5925, file: !3, line: 3634, type: !223)
!5933 = !DILocation(line: 3634, column: 44, scope: !5925)
!5934 = !DILocalVariable(name: "v1", scope: !5925, file: !3, line: 3636, type: !223)
!5935 = !DILocation(line: 3636, column: 5, scope: !5925)
!5936 = !DILocalVariable(name: "n", scope: !5937, file: !3, line: 3638, type: !7)
!5937 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 3638, column: 2)
!5938 = !DILocation(line: 3638, column: 2, scope: !5937)
!5939 = !DILocation(line: 0, scope: !5937)
!5940 = !DILocation(line: 3638, column: 2, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 3638, column: 2)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 3638, column: 2)
!5943 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 3638, column: 2)
!5944 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 3638, column: 2)
!5945 = distinct !{!5945, !5938, !5938}
!5946 = !DILocation(line: 3638, column: 2, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 3638, column: 2)
!5948 = !DILocation(line: 3638, column: 2, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 3638, column: 2)
!5950 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3638, column: 2)
!5951 = !DILocation(line: 3638, column: 2, scope: !5950)
!5952 = !DILocation(line: 3639, column: 7, scope: !5925)
!5953 = !DILocation(line: 3639, column: 21, scope: !5925)
!5954 = !DILocation(line: 3639, column: 33, scope: !5925)
!5955 = !DILocation(line: 3639, column: 37, scope: !5925)
!5956 = !DILocation(line: 3639, column: 12, scope: !5925)
!5957 = !DILocation(line: 3639, column: 45, scope: !5925)
!5958 = !DILocation(line: 3639, column: 2, scope: !5925)
!5959 = !DILocalVariable(name: "n", scope: !5960, file: !3, line: 3640, type: !7)
!5960 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 3640, column: 2)
!5961 = !DILocation(line: 3640, column: 2, scope: !5960)
!5962 = !DILocation(line: 0, scope: !5960)
!5963 = !DILocation(line: 3640, column: 2, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 3640, column: 2)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 3640, column: 2)
!5966 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 3640, column: 2)
!5967 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3640, column: 2)
!5968 = distinct !{!5968, !5961, !5961}
!5969 = !DILocation(line: 3640, column: 2, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3640, column: 2)
!5971 = !DILocation(line: 3640, column: 2, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 3640, column: 2)
!5973 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 3640, column: 2)
!5974 = !DILocation(line: 3640, column: 2, scope: !5973)
!5975 = !DILocation(line: 3641, column: 7, scope: !5925)
!5976 = !DILocation(line: 3641, column: 20, scope: !5925)
!5977 = !DILocation(line: 3641, column: 32, scope: !5925)
!5978 = !DILocation(line: 3641, column: 36, scope: !5925)
!5979 = !DILocation(line: 3641, column: 11, scope: !5925)
!5980 = !DILocation(line: 3641, column: 2, scope: !5925)
!5981 = !DILocalVariable(name: "n", scope: !5982, file: !3, line: 3642, type: !7)
!5982 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 3642, column: 2)
!5983 = !DILocation(line: 3642, column: 2, scope: !5982)
!5984 = !DILocation(line: 0, scope: !5982)
!5985 = !DILocation(line: 3642, column: 2, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 3642, column: 2)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 3642, column: 2)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !3, line: 3642, column: 2)
!5989 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 3642, column: 2)
!5990 = distinct !{!5990, !5983, !5983}
!5991 = !DILocation(line: 3642, column: 2, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 3642, column: 2)
!5993 = !DILocation(line: 3642, column: 2, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 3642, column: 2)
!5995 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 3642, column: 2)
!5996 = !DILocation(line: 3642, column: 2, scope: !5995)
!5997 = !DILocation(line: 3643, column: 7, scope: !5925)
!5998 = !DILocation(line: 3643, column: 19, scope: !5925)
!5999 = !DILocation(line: 3643, column: 31, scope: !5925)
!6000 = !DILocation(line: 3643, column: 35, scope: !5925)
!6001 = !DILocation(line: 3643, column: 10, scope: !5925)
!6002 = !DILocation(line: 3643, column: 2, scope: !5925)
!6003 = !DILocation(line: 3644, column: 22, scope: !5925)
!6004 = !DILocation(line: 3644, column: 34, scope: !5925)
!6005 = !DILocation(line: 3644, column: 38, scope: !5925)
!6006 = !DILocation(line: 3644, column: 13, scope: !5925)
!6007 = !DILocation(line: 3644, column: 7, scope: !5925)
!6008 = !DILocation(line: 3644, column: 5, scope: !5925)
!6009 = !DILocation(line: 3645, column: 2, scope: !5925)
!6010 = !DILocation(line: 3645, column: 2, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 3645, column: 2)
!6012 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 3645, column: 2)
!6013 = !DILocation(line: 3645, column: 2, scope: !6012)
!6014 = !DILocation(line: 3647, column: 9, scope: !5925)
!6015 = !DILocation(line: 3647, column: 2, scope: !5925)
!6016 = distinct !DISubprogram(name: "sony_laptop_exit", scope: !3, file: !3, line: 4917, type: !2410, scopeLine: 4918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6017 = !DILocation(line: 4919, column: 2, scope: !6016)
!6018 = !DILocation(line: 4920, column: 6, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 4920, column: 6)
!6020 = !DILocation(line: 4920, column: 6, scope: !6016)
!6021 = !DILocation(line: 4921, column: 3, scope: !6019)
!6022 = !DILocation(line: 4922, column: 1, scope: !6016)
!6023 = distinct !DISubprogram(name: "sony_laptop_init", scope: !3, file: !3, line: 4889, type: !5796, scopeLine: 4890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6024 = !DILocalVariable(name: "result", scope: !6023, file: !3, line: 4891, type: !109)
!6025 = !DILocation(line: 4891, column: 6, scope: !6023)
!6026 = !DILocation(line: 4893, column: 7, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 4893, column: 6)
!6028 = !DILocation(line: 4893, column: 15, scope: !6027)
!6029 = !DILocation(line: 4893, column: 18, scope: !6027)
!6030 = !DILocation(line: 4893, column: 6, scope: !6023)
!6031 = !DILocation(line: 4894, column: 12, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 4893, column: 54)
!6033 = !DILocation(line: 4894, column: 10, scope: !6032)
!6034 = !DILocation(line: 4895, column: 7, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 4895, column: 7)
!6036 = !DILocation(line: 4895, column: 7, scope: !6032)
!6037 = !DILocation(line: 4896, column: 4, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 4895, column: 15)
!6039 = !DILocation(line: 4897, column: 4, scope: !6038)
!6040 = !DILocation(line: 4899, column: 23, scope: !6032)
!6041 = !DILocation(line: 4900, column: 2, scope: !6032)
!6042 = !DILocation(line: 4902, column: 11, scope: !6023)
!6043 = !DILocation(line: 4902, column: 9, scope: !6023)
!6044 = !DILocation(line: 4903, column: 6, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 4903, column: 6)
!6046 = !DILocation(line: 4903, column: 6, scope: !6023)
!6047 = !DILocation(line: 4904, column: 3, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 4903, column: 14)
!6049 = !DILocation(line: 4905, column: 3, scope: !6048)
!6050 = !DILocation(line: 4908, column: 2, scope: !6023)
!6051 = !DILabel(scope: !6023, name: "out_unregister_pic", file: !3, line: 4910)
!6052 = !DILocation(line: 4910, column: 1, scope: !6023)
!6053 = !DILocation(line: 4911, column: 6, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6023, file: !3, line: 4911, column: 6)
!6055 = !DILocation(line: 4911, column: 6, scope: !6023)
!6056 = !DILocation(line: 4912, column: 3, scope: !6054)
!6057 = !DILabel(scope: !6023, name: "out", file: !3, line: 4913)
!6058 = !DILocation(line: 4913, column: 1, scope: !6023)
!6059 = !DILocation(line: 4914, column: 9, scope: !6023)
!6060 = !DILocation(line: 4914, column: 2, scope: !6023)
!6061 = !DILocation(line: 4915, column: 1, scope: !6023)
!6062 = distinct !DISubprogram(name: "sony_pic_call2", scope: !3, file: !3, line: 3619, type: !6063, scopeLine: 3620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6063 = !DISubroutineType(types: !6064)
!6064 = !{!223, !223, !223}
!6065 = !DILocalVariable(name: "dev", arg: 1, scope: !6062, file: !3, line: 3619, type: !223)
!6066 = !DILocation(line: 3619, column: 29, scope: !6062)
!6067 = !DILocalVariable(name: "fn", arg: 2, scope: !6062, file: !3, line: 3619, type: !223)
!6068 = !DILocation(line: 3619, column: 37, scope: !6062)
!6069 = !DILocalVariable(name: "v1", scope: !6062, file: !3, line: 3621, type: !223)
!6070 = !DILocation(line: 3621, column: 5, scope: !6062)
!6071 = !DILocalVariable(name: "n", scope: !6072, file: !3, line: 3623, type: !7)
!6072 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 3623, column: 2)
!6073 = !DILocation(line: 3623, column: 2, scope: !6072)
!6074 = !DILocation(line: 0, scope: !6072)
!6075 = !DILocation(line: 3623, column: 2, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 3623, column: 2)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 3623, column: 2)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 3623, column: 2)
!6079 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 3623, column: 2)
!6080 = distinct !{!6080, !6073, !6073}
!6081 = !DILocation(line: 3623, column: 2, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6072, file: !3, line: 3623, column: 2)
!6083 = !DILocation(line: 3623, column: 2, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 3623, column: 2)
!6085 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 3623, column: 2)
!6086 = !DILocation(line: 3623, column: 2, scope: !6085)
!6087 = !DILocation(line: 3625, column: 7, scope: !6062)
!6088 = !DILocation(line: 3625, column: 21, scope: !6062)
!6089 = !DILocation(line: 3625, column: 33, scope: !6062)
!6090 = !DILocation(line: 3625, column: 37, scope: !6062)
!6091 = !DILocation(line: 3625, column: 12, scope: !6062)
!6092 = !DILocation(line: 3625, column: 45, scope: !6062)
!6093 = !DILocation(line: 3625, column: 2, scope: !6062)
!6094 = !DILocalVariable(name: "n", scope: !6095, file: !3, line: 3626, type: !7)
!6095 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 3626, column: 2)
!6096 = !DILocation(line: 3626, column: 2, scope: !6095)
!6097 = !DILocation(line: 0, scope: !6095)
!6098 = !DILocation(line: 3626, column: 2, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !3, line: 3626, column: 2)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 3626, column: 2)
!6101 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 3626, column: 2)
!6102 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 3626, column: 2)
!6103 = distinct !{!6103, !6096, !6096}
!6104 = !DILocation(line: 3626, column: 2, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 3626, column: 2)
!6106 = !DILocation(line: 3626, column: 2, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 3626, column: 2)
!6108 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 3626, column: 2)
!6109 = !DILocation(line: 3626, column: 2, scope: !6108)
!6110 = !DILocation(line: 3628, column: 7, scope: !6062)
!6111 = !DILocation(line: 3628, column: 20, scope: !6062)
!6112 = !DILocation(line: 3628, column: 32, scope: !6062)
!6113 = !DILocation(line: 3628, column: 36, scope: !6062)
!6114 = !DILocation(line: 3628, column: 11, scope: !6062)
!6115 = !DILocation(line: 3628, column: 2, scope: !6062)
!6116 = !DILocation(line: 3629, column: 22, scope: !6062)
!6117 = !DILocation(line: 3629, column: 34, scope: !6062)
!6118 = !DILocation(line: 3629, column: 38, scope: !6062)
!6119 = !DILocation(line: 3629, column: 13, scope: !6062)
!6120 = !DILocation(line: 3629, column: 7, scope: !6062)
!6121 = !DILocation(line: 3629, column: 5, scope: !6062)
!6122 = !DILocation(line: 3630, column: 2, scope: !6062)
!6123 = !DILocation(line: 3630, column: 2, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 3630, column: 2)
!6125 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 3630, column: 2)
!6126 = !DILocation(line: 3630, column: 2, scope: !6125)
!6127 = !DILocation(line: 3631, column: 9, scope: !6062)
!6128 = !DILocation(line: 3631, column: 2, scope: !6062)
!6129 = distinct !DISubprogram(name: "sony_pic_call1", scope: !3, file: !3, line: 3606, type: !6130, scopeLine: 3607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!223, !223}
!6132 = !DILocalVariable(name: "dev", arg: 1, scope: !6129, file: !3, line: 3606, type: !223)
!6133 = !DILocation(line: 3606, column: 29, scope: !6129)
!6134 = !DILocalVariable(name: "v1", scope: !6129, file: !3, line: 3608, type: !223)
!6135 = !DILocation(line: 3608, column: 5, scope: !6129)
!6136 = !DILocalVariable(name: "v2", scope: !6129, file: !3, line: 3608, type: !223)
!6137 = !DILocation(line: 3608, column: 9, scope: !6129)
!6138 = !DILocalVariable(name: "n", scope: !6139, file: !3, line: 3610, type: !7)
!6139 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 3610, column: 2)
!6140 = !DILocation(line: 3610, column: 2, scope: !6139)
!6141 = !DILocation(line: 0, scope: !6139)
!6142 = !DILocation(line: 3610, column: 2, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 3610, column: 2)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 3610, column: 2)
!6145 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 3610, column: 2)
!6146 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 3610, column: 2)
!6147 = distinct !{!6147, !6140, !6140}
!6148 = !DILocation(line: 3610, column: 2, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 3610, column: 2)
!6150 = !DILocation(line: 3610, column: 2, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 3610, column: 2)
!6152 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 3610, column: 2)
!6153 = !DILocation(line: 3610, column: 2, scope: !6152)
!6154 = !DILocation(line: 3612, column: 7, scope: !6129)
!6155 = !DILocation(line: 3612, column: 21, scope: !6129)
!6156 = !DILocation(line: 3612, column: 33, scope: !6129)
!6157 = !DILocation(line: 3612, column: 37, scope: !6129)
!6158 = !DILocation(line: 3612, column: 12, scope: !6129)
!6159 = !DILocation(line: 3612, column: 45, scope: !6129)
!6160 = !DILocation(line: 3612, column: 2, scope: !6129)
!6161 = !DILocation(line: 3613, column: 22, scope: !6129)
!6162 = !DILocation(line: 3613, column: 34, scope: !6129)
!6163 = !DILocation(line: 3613, column: 38, scope: !6129)
!6164 = !DILocation(line: 3613, column: 13, scope: !6129)
!6165 = !DILocation(line: 3613, column: 46, scope: !6129)
!6166 = !DILocation(line: 3613, column: 7, scope: !6129)
!6167 = !DILocation(line: 3613, column: 5, scope: !6129)
!6168 = !DILocation(line: 3614, column: 22, scope: !6129)
!6169 = !DILocation(line: 3614, column: 34, scope: !6129)
!6170 = !DILocation(line: 3614, column: 38, scope: !6129)
!6171 = !DILocation(line: 3614, column: 13, scope: !6129)
!6172 = !DILocation(line: 3614, column: 7, scope: !6129)
!6173 = !DILocation(line: 3614, column: 5, scope: !6129)
!6174 = !DILocation(line: 3615, column: 2, scope: !6129)
!6175 = !DILocation(line: 3615, column: 2, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 3615, column: 2)
!6177 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 3615, column: 2)
!6178 = !DILocation(line: 3615, column: 2, scope: !6177)
!6179 = !DILocation(line: 3616, column: 9, scope: !6129)
!6180 = !DILocation(line: 3616, column: 2, scope: !6129)
!6181 = distinct !DISubprogram(name: "__sony_pic_camera_ready", scope: !3, file: !3, line: 3769, type: !5796, scopeLine: 3770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6182 = !DILocalVariable(name: "v", scope: !6181, file: !3, line: 3771, type: !223)
!6183 = !DILocation(line: 3771, column: 5, scope: !6181)
!6184 = !DILocation(line: 3773, column: 6, scope: !6181)
!6185 = !DILocation(line: 3773, column: 4, scope: !6181)
!6186 = !DILocation(line: 3774, column: 10, scope: !6181)
!6187 = !DILocation(line: 3774, column: 12, scope: !6181)
!6188 = !DILocation(line: 3774, column: 20, scope: !6181)
!6189 = !DILocation(line: 3774, column: 24, scope: !6181)
!6190 = !DILocation(line: 3774, column: 26, scope: !6181)
!6191 = !DILocation(line: 0, scope: !6181)
!6192 = !DILocation(line: 3774, column: 2, scope: !6181)
!6193 = distinct !DISubprogram(name: "inb_p", scope: !6194, file: !6194, line: 334, type: !6195, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6194 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!6195 = !DISubroutineType(types: !6196)
!6196 = !{!192, !109}
!6197 = !DILocalVariable(name: "port", arg: 1, scope: !6193, file: !6194, line: 334, type: !109)
!6198 = !DILocation(line: 334, column: 1, scope: !6193)
!6199 = !DILocalVariable(name: "value", scope: !6193, file: !6194, line: 334, type: !192)
!6200 = distinct !DISubprogram(name: "outb", scope: !6194, file: !6194, line: 334, type: !6201, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{null, !192, !109}
!6203 = !DILocalVariable(name: "value", arg: 1, scope: !6200, file: !6194, line: 334, type: !192)
!6204 = !DILocation(line: 334, column: 1, scope: !6200)
!6205 = !DILocalVariable(name: "port", arg: 2, scope: !6200, file: !6194, line: 334, type: !109)
!6206 = !{i32 -2141339842}
!6207 = distinct !DISubprogram(name: "inb", scope: !6194, file: !6194, line: 334, type: !6195, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6208 = !DILocalVariable(name: "port", arg: 1, scope: !6207, file: !6194, line: 334, type: !109)
!6209 = !DILocation(line: 334, column: 1, scope: !6207)
!6210 = !DILocalVariable(name: "value", scope: !6207, file: !6194, line: 334, type: !192)
!6211 = !{i32 -2141339640}
!6212 = distinct !DISubprogram(name: "slow_down_io", scope: !6213, file: !6213, line: 40, type: !2410, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6213 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6214 = !DILocation(line: 42, column: 13, scope: !6212)
!6215 = !DILocation(line: 42, column: 2, scope: !6212)
!6216 = !DILocation(line: 48, column: 1, scope: !6212)
!6217 = distinct !DISubprogram(name: "sony_nc_add", scope: !3, file: !3, line: 3162, type: !4708, scopeLine: 3163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6218 = !DILocalVariable(name: "device", arg: 1, scope: !6217, file: !3, line: 3162, type: !4529)
!6219 = !DILocation(line: 3162, column: 44, scope: !6217)
!6220 = !DILocalVariable(name: "status", scope: !6217, file: !3, line: 3164, type: !183)
!6221 = !DILocation(line: 3164, column: 14, scope: !6217)
!6222 = !DILocalVariable(name: "result", scope: !6217, file: !3, line: 3165, type: !109)
!6223 = !DILocation(line: 3165, column: 6, scope: !6217)
!6224 = !DILocalVariable(name: "item", scope: !6217, file: !3, line: 3166, type: !4468)
!6225 = !DILocation(line: 3166, column: 24, scope: !6217)
!6226 = !DILocation(line: 3168, column: 24, scope: !6217)
!6227 = !DILocation(line: 3168, column: 22, scope: !6217)
!6228 = !DILocation(line: 3169, column: 9, scope: !6217)
!6229 = !DILocation(line: 3169, column: 2, scope: !6217)
!6230 = !DILocation(line: 3171, column: 24, scope: !6217)
!6231 = !DILocation(line: 3171, column: 32, scope: !6217)
!6232 = !DILocation(line: 3171, column: 22, scope: !6217)
!6233 = !DILocation(line: 3174, column: 31, scope: !6217)
!6234 = !DILocation(line: 3174, column: 11, scope: !6217)
!6235 = !DILocation(line: 3174, column: 9, scope: !6217)
!6236 = !DILocation(line: 3176, column: 7, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3176, column: 6)
!6238 = !DILocation(line: 3176, column: 14, scope: !6237)
!6239 = !DILocation(line: 3176, column: 18, scope: !6237)
!6240 = !DILocation(line: 3176, column: 26, scope: !6237)
!6241 = !DILocation(line: 3176, column: 33, scope: !6237)
!6242 = !DILocation(line: 3176, column: 6, scope: !6217)
!6243 = !DILocation(line: 3177, column: 3, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 3176, column: 42)
!6245 = !DILocation(line: 3177, column: 3, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 3177, column: 3)
!6247 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3177, column: 3)
!6248 = !DILocation(line: 3177, column: 3, scope: !6247)
!6249 = !DILocation(line: 3178, column: 10, scope: !6244)
!6250 = !DILocation(line: 3179, column: 3, scope: !6244)
!6251 = !DILocation(line: 3182, column: 11, scope: !6217)
!6252 = !DILocation(line: 3182, column: 9, scope: !6217)
!6253 = !DILocation(line: 3183, column: 6, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3183, column: 6)
!6255 = !DILocation(line: 3183, column: 6, scope: !6217)
!6256 = !DILocation(line: 3184, column: 3, scope: !6254)
!6257 = !DILocation(line: 3186, column: 6, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3186, column: 6)
!6259 = !DILocation(line: 3186, column: 6, scope: !6217)
!6260 = !DILocation(line: 3188, column: 5, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 3186, column: 13)
!6262 = !DILocation(line: 3187, column: 12, scope: !6261)
!6263 = !DILocation(line: 3187, column: 10, scope: !6261)
!6264 = !DILocation(line: 3190, column: 7, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 3190, column: 7)
!6266 = !DILocation(line: 3190, column: 7, scope: !6261)
!6267 = !DILocation(line: 3191, column: 4, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 3190, column: 29)
!6269 = !DILocation(line: 3192, column: 11, scope: !6268)
!6270 = !DILocation(line: 3193, column: 4, scope: !6268)
!6271 = !DILocation(line: 3195, column: 2, scope: !6261)
!6272 = !DILocation(line: 3197, column: 35, scope: !6217)
!6273 = !DILocation(line: 3197, column: 11, scope: !6217)
!6274 = !DILocation(line: 3197, column: 9, scope: !6217)
!6275 = !DILocation(line: 3198, column: 6, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3198, column: 6)
!6277 = !DILocation(line: 3198, column: 6, scope: !6217)
!6278 = !DILocation(line: 3199, column: 3, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 3198, column: 14)
!6280 = !DILocation(line: 3200, column: 3, scope: !6279)
!6281 = !DILocation(line: 3203, column: 22, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3203, column: 6)
!6283 = !DILocation(line: 3203, column: 6, scope: !6282)
!6284 = !DILocation(line: 3203, column: 6, scope: !6217)
!6285 = !DILocalVariable(name: "arg", scope: !6286, file: !3, line: 3204, type: !109)
!6286 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 3203, column: 52)
!6287 = !DILocation(line: 3204, column: 7, scope: !6286)
!6288 = !DILocation(line: 3205, column: 24, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6286, file: !3, line: 3205, column: 7)
!6290 = !DILocation(line: 3205, column: 7, scope: !6289)
!6291 = !DILocation(line: 3205, column: 7, scope: !6286)
!6292 = !DILocation(line: 3206, column: 4, scope: !6289)
!6293 = !DILocation(line: 3206, column: 4, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 3206, column: 4)
!6295 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 3206, column: 4)
!6296 = !DILocation(line: 3206, column: 4, scope: !6295)
!6297 = !DILocation(line: 3207, column: 2, scope: !6286)
!6298 = !DILocation(line: 3209, column: 22, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3209, column: 6)
!6300 = !DILocation(line: 3209, column: 6, scope: !6299)
!6301 = !DILocation(line: 3209, column: 6, scope: !6217)
!6302 = !DILocation(line: 3210, column: 3, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 3209, column: 52)
!6304 = !DILocation(line: 3210, column: 3, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 3210, column: 3)
!6306 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 3210, column: 3)
!6307 = !DILocation(line: 3210, column: 3, scope: !6306)
!6308 = !DILocation(line: 3212, column: 34, scope: !6303)
!6309 = !DILocation(line: 3212, column: 12, scope: !6303)
!6310 = !DILocation(line: 3212, column: 10, scope: !6303)
!6311 = !DILocation(line: 3213, column: 8, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 3213, column: 7)
!6313 = !DILocation(line: 3213, column: 7, scope: !6303)
!6314 = !DILocation(line: 3214, column: 27, scope: !6312)
!6315 = !DILocation(line: 3214, column: 35, scope: !6312)
!6316 = !DILocation(line: 3214, column: 4, scope: !6312)
!6317 = !DILocation(line: 3215, column: 2, scope: !6303)
!6318 = !DILocation(line: 3217, column: 6, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3217, column: 6)
!6320 = !DILocation(line: 3217, column: 38, scope: !6319)
!6321 = !DILocation(line: 3217, column: 6, scope: !6217)
!6322 = !DILocation(line: 3218, column: 3, scope: !6319)
!6323 = !DILocation(line: 3221, column: 12, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3221, column: 2)
!6325 = !DILocation(line: 3221, column: 7, scope: !6324)
!6326 = !DILocation(line: 3221, column: 30, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 3221, column: 2)
!6328 = !DILocation(line: 3221, column: 36, scope: !6327)
!6329 = !DILocation(line: 3221, column: 2, scope: !6324)
!6330 = !DILocation(line: 3223, column: 8, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 3223, column: 7)
!6332 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 3221, column: 50)
!6333 = !DILocation(line: 3223, column: 14, scope: !6331)
!6334 = !DILocation(line: 3223, column: 17, scope: !6331)
!6335 = !DILocation(line: 3223, column: 23, scope: !6331)
!6336 = !DILocation(line: 3223, column: 7, scope: !6332)
!6337 = !DILocation(line: 3224, column: 4, scope: !6331)
!6338 = !DILocation(line: 3227, column: 3, scope: !6332)
!6339 = !DILocation(line: 3227, column: 10, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 3227, column: 3)
!6341 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 3227, column: 3)
!6342 = !DILocation(line: 3227, column: 16, scope: !6340)
!6343 = !DILocation(line: 3227, column: 24, scope: !6340)
!6344 = !DILocation(line: 3227, column: 28, scope: !6340)
!6345 = !DILocation(line: 3227, column: 34, scope: !6340)
!6346 = !DILocation(line: 3227, column: 27, scope: !6340)
!6347 = !DILocation(line: 0, scope: !6340)
!6348 = !DILocation(line: 3227, column: 3, scope: !6341)
!6349 = !DILocation(line: 3228, column: 24, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 3228, column: 8)
!6351 = distinct !DILexicalBlock(scope: !6340, file: !3, line: 3227, column: 60)
!6352 = !DILocation(line: 3229, column: 9, scope: !6350)
!6353 = !DILocation(line: 3229, column: 15, scope: !6350)
!6354 = !DILocation(line: 3229, column: 8, scope: !6350)
!6355 = !DILocation(line: 3228, column: 8, scope: !6350)
!6356 = !DILocation(line: 3228, column: 8, scope: !6351)
!6357 = !DILocation(line: 3230, column: 5, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6350, file: !3, line: 3229, column: 25)
!6359 = !DILocation(line: 3230, column: 5, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 3230, column: 5)
!6361 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 3230, column: 5)
!6362 = !DILocation(line: 3230, column: 5, scope: !6361)
!6363 = !DILocation(line: 3232, column: 5, scope: !6358)
!6364 = !DILocation(line: 3232, column: 11, scope: !6358)
!6365 = !DILocation(line: 3232, column: 19, scope: !6358)
!6366 = !DILocation(line: 3232, column: 24, scope: !6358)
!6367 = !DILocation(line: 3232, column: 29, scope: !6358)
!6368 = !DILocation(line: 3233, column: 5, scope: !6358)
!6369 = !DILocation(line: 3235, column: 3, scope: !6351)
!6370 = !DILocation(line: 3227, column: 45, scope: !6340)
!6371 = !DILocation(line: 3227, column: 51, scope: !6340)
!6372 = !DILocation(line: 3227, column: 43, scope: !6340)
!6373 = !DILocation(line: 3227, column: 3, scope: !6340)
!6374 = distinct !{!6374, !6348, !6375}
!6375 = !DILocation(line: 3235, column: 3, scope: !6341)
!6376 = !DILocation(line: 3238, column: 3, scope: !6332)
!6377 = !DILocation(line: 3238, column: 10, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 3238, column: 3)
!6379 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 3238, column: 3)
!6380 = !DILocation(line: 3238, column: 16, scope: !6378)
!6381 = !DILocation(line: 3238, column: 24, scope: !6378)
!6382 = !DILocation(line: 3238, column: 28, scope: !6378)
!6383 = !DILocation(line: 3238, column: 34, scope: !6378)
!6384 = !DILocation(line: 3238, column: 27, scope: !6378)
!6385 = !DILocation(line: 0, scope: !6378)
!6386 = !DILocation(line: 3238, column: 3, scope: !6379)
!6387 = !DILocation(line: 3239, column: 24, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 3239, column: 8)
!6389 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 3238, column: 60)
!6390 = !DILocation(line: 3240, column: 9, scope: !6388)
!6391 = !DILocation(line: 3240, column: 15, scope: !6388)
!6392 = !DILocation(line: 3240, column: 8, scope: !6388)
!6393 = !DILocation(line: 3239, column: 8, scope: !6388)
!6394 = !DILocation(line: 3239, column: 8, scope: !6389)
!6395 = !DILocation(line: 3241, column: 5, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3240, column: 25)
!6397 = !DILocation(line: 3241, column: 5, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 3241, column: 5)
!6399 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3241, column: 5)
!6400 = !DILocation(line: 3241, column: 5, scope: !6399)
!6401 = !DILocation(line: 3243, column: 5, scope: !6396)
!6402 = !DILocation(line: 3243, column: 11, scope: !6396)
!6403 = !DILocation(line: 3243, column: 19, scope: !6396)
!6404 = !DILocation(line: 3243, column: 24, scope: !6396)
!6405 = !DILocation(line: 3243, column: 29, scope: !6396)
!6406 = !DILocation(line: 3244, column: 5, scope: !6396)
!6407 = !DILocation(line: 3246, column: 3, scope: !6389)
!6408 = !DILocation(line: 3238, column: 45, scope: !6378)
!6409 = !DILocation(line: 3238, column: 51, scope: !6378)
!6410 = !DILocation(line: 3238, column: 43, scope: !6378)
!6411 = !DILocation(line: 3238, column: 3, scope: !6378)
!6412 = distinct !{!6412, !6386, !6413}
!6413 = !DILocation(line: 3246, column: 3, scope: !6379)
!6414 = !DILocation(line: 3248, column: 7, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 3248, column: 7)
!6416 = !DILocation(line: 3248, column: 13, scope: !6415)
!6417 = !DILocation(line: 3248, column: 21, scope: !6415)
!6418 = !DILocation(line: 3248, column: 26, scope: !6415)
!6419 = !DILocation(line: 3248, column: 31, scope: !6415)
!6420 = !DILocation(line: 3248, column: 7, scope: !6332)
!6421 = !DILocation(line: 3250, column: 28, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 3248, column: 37)
!6423 = !DILocation(line: 3250, column: 44, scope: !6422)
!6424 = !DILocation(line: 3251, column: 14, scope: !6422)
!6425 = !DILocation(line: 3251, column: 20, scope: !6422)
!6426 = !DILocation(line: 3250, column: 8, scope: !6422)
!6427 = !DILocation(line: 3249, column: 11, scope: !6422)
!6428 = !DILocation(line: 3252, column: 8, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 3252, column: 8)
!6430 = !DILocation(line: 3252, column: 8, scope: !6422)
!6431 = !DILocation(line: 3253, column: 5, scope: !6429)
!6432 = !DILocation(line: 3254, column: 3, scope: !6422)
!6433 = !DILocation(line: 3255, column: 2, scope: !6332)
!6434 = !DILocation(line: 3221, column: 42, scope: !6327)
!6435 = !DILocation(line: 3221, column: 2, scope: !6327)
!6436 = distinct !{!6436, !6329, !6437}
!6437 = !DILocation(line: 3255, column: 2, scope: !6324)
!6438 = !DILocation(line: 3257, column: 2, scope: !6217)
!6439 = !DILocation(line: 3258, column: 2, scope: !6217)
!6440 = !DILabel(scope: !6217, name: "out_sysfs", file: !3, line: 3260)
!6441 = !DILocation(line: 3260, column: 1, scope: !6217)
!6442 = !DILocation(line: 3261, column: 12, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 3261, column: 2)
!6444 = !DILocation(line: 3261, column: 7, scope: !6443)
!6445 = !DILocation(line: 3261, column: 30, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 3261, column: 2)
!6447 = !DILocation(line: 3261, column: 36, scope: !6446)
!6448 = !DILocation(line: 3261, column: 2, scope: !6443)
!6449 = !DILocation(line: 3262, column: 23, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3261, column: 50)
!6451 = !DILocation(line: 3262, column: 39, scope: !6450)
!6452 = !DILocation(line: 3262, column: 45, scope: !6450)
!6453 = !DILocation(line: 3262, column: 51, scope: !6450)
!6454 = !DILocation(line: 3262, column: 3, scope: !6450)
!6455 = !DILocation(line: 3263, column: 2, scope: !6450)
!6456 = !DILocation(line: 3261, column: 42, scope: !6446)
!6457 = !DILocation(line: 3261, column: 2, scope: !6446)
!6458 = distinct !{!6458, !6448, !6459}
!6459 = !DILocation(line: 3263, column: 2, scope: !6443)
!6460 = !DILocation(line: 3264, column: 2, scope: !6217)
!6461 = !DILocation(line: 3265, column: 27, scope: !6217)
!6462 = !DILocation(line: 3265, column: 2, scope: !6217)
!6463 = !DILocation(line: 3266, column: 26, scope: !6217)
!6464 = !DILocation(line: 3266, column: 2, scope: !6217)
!6465 = !DILabel(scope: !6217, name: "outplatform", file: !3, line: 3268)
!6466 = !DILocation(line: 3268, column: 1, scope: !6217)
!6467 = !DILocation(line: 3269, column: 2, scope: !6217)
!6468 = !DILabel(scope: !6217, name: "outpresent", file: !3, line: 3271)
!6469 = !DILocation(line: 3271, column: 1, scope: !6217)
!6470 = !DILocation(line: 3272, column: 2, scope: !6217)
!6471 = !DILabel(scope: !6217, name: "outwalk", file: !3, line: 3274)
!6472 = !DILocation(line: 3274, column: 1, scope: !6217)
!6473 = !DILocation(line: 3275, column: 2, scope: !6217)
!6474 = !DILocation(line: 3276, column: 9, scope: !6217)
!6475 = !DILocation(line: 3276, column: 2, scope: !6217)
!6476 = !DILocation(line: 3277, column: 1, scope: !6217)
!6477 = distinct !DISubprogram(name: "sony_nc_remove", scope: !3, file: !3, line: 3279, type: !4708, scopeLine: 3280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6478 = !DILocalVariable(name: "device", arg: 1, scope: !6477, file: !3, line: 3279, type: !4529)
!6479 = !DILocation(line: 3279, column: 47, scope: !6477)
!6480 = !DILocalVariable(name: "item", scope: !6477, file: !3, line: 3281, type: !4468)
!6481 = !DILocation(line: 3281, column: 24, scope: !6477)
!6482 = !DILocation(line: 3283, column: 2, scope: !6477)
!6483 = !DILocation(line: 3285, column: 22, scope: !6477)
!6484 = !DILocation(line: 3287, column: 12, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3287, column: 2)
!6486 = !DILocation(line: 3287, column: 7, scope: !6485)
!6487 = !DILocation(line: 3287, column: 30, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 3287, column: 2)
!6489 = !DILocation(line: 3287, column: 36, scope: !6488)
!6490 = !DILocation(line: 3287, column: 2, scope: !6485)
!6491 = !DILocation(line: 3288, column: 23, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 3287, column: 50)
!6493 = !DILocation(line: 3288, column: 39, scope: !6492)
!6494 = !DILocation(line: 3288, column: 45, scope: !6492)
!6495 = !DILocation(line: 3288, column: 51, scope: !6492)
!6496 = !DILocation(line: 3288, column: 3, scope: !6492)
!6497 = !DILocation(line: 3289, column: 2, scope: !6492)
!6498 = !DILocation(line: 3287, column: 42, scope: !6488)
!6499 = !DILocation(line: 3287, column: 2, scope: !6488)
!6500 = distinct !{!6500, !6490, !6501}
!6501 = !DILocation(line: 3289, column: 2, scope: !6485)
!6502 = !DILocation(line: 3291, column: 27, scope: !6477)
!6503 = !DILocation(line: 3291, column: 2, scope: !6477)
!6504 = !DILocation(line: 3292, column: 26, scope: !6477)
!6505 = !DILocation(line: 3292, column: 2, scope: !6477)
!6506 = !DILocation(line: 3293, column: 2, scope: !6477)
!6507 = !DILocation(line: 3294, column: 2, scope: !6477)
!6508 = !DILocation(line: 3295, column: 2, scope: !6477)
!6509 = !DILocation(line: 3295, column: 2, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 3295, column: 2)
!6511 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 3295, column: 2)
!6512 = !DILocation(line: 3295, column: 2, scope: !6511)
!6513 = !DILocation(line: 3297, column: 2, scope: !6477)
!6514 = distinct !DISubprogram(name: "sony_nc_notify", scope: !3, file: !3, line: 1182, type: !4724, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6515 = !DILocalVariable(name: "device", arg: 1, scope: !6514, file: !3, line: 1182, type: !4529)
!6516 = !DILocation(line: 1182, column: 48, scope: !6514)
!6517 = !DILocalVariable(name: "event", arg: 2, scope: !6514, file: !3, line: 1182, type: !185)
!6518 = !DILocation(line: 1182, column: 60, scope: !6514)
!6519 = !DILocalVariable(name: "real_ev", scope: !6514, file: !3, line: 1184, type: !185)
!6520 = !DILocation(line: 1184, column: 6, scope: !6514)
!6521 = !DILocation(line: 1184, column: 16, scope: !6514)
!6522 = !DILocalVariable(name: "ev_type", scope: !6514, file: !3, line: 1185, type: !223)
!6523 = !DILocation(line: 1185, column: 5, scope: !6514)
!6524 = !DILocalVariable(name: "ret", scope: !6514, file: !3, line: 1186, type: !109)
!6525 = !DILocation(line: 1186, column: 6, scope: !6514)
!6526 = !DILocation(line: 1188, column: 2, scope: !6514)
!6527 = !DILocation(line: 1188, column: 2, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 1188, column: 2)
!6529 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 1188, column: 2)
!6530 = !DILocation(line: 1188, column: 2, scope: !6529)
!6531 = !DILocation(line: 1190, column: 6, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 1190, column: 6)
!6533 = !DILocation(line: 1190, column: 12, scope: !6532)
!6534 = !DILocation(line: 1190, column: 6, scope: !6514)
!6535 = !DILocalVariable(name: "result", scope: !6536, file: !3, line: 1191, type: !7)
!6536 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1190, column: 21)
!6537 = !DILocation(line: 1191, column: 16, scope: !6536)
!6538 = !DILocalVariable(name: "arg", scope: !6536, file: !3, line: 1192, type: !7)
!6539 = !DILocation(line: 1192, column: 16, scope: !6536)
!6540 = !DILocalVariable(name: "handle", scope: !6536, file: !3, line: 1193, type: !7)
!6541 = !DILocation(line: 1193, column: 16, scope: !6536)
!6542 = !DILocalVariable(name: "offset", scope: !6536, file: !3, line: 1194, type: !7)
!6543 = !DILocation(line: 1194, column: 16, scope: !6536)
!6544 = !DILocation(line: 1194, column: 25, scope: !6536)
!6545 = !DILocation(line: 1194, column: 31, scope: !6536)
!6546 = !DILocation(line: 1196, column: 7, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1196, column: 7)
!6548 = !DILocation(line: 1196, column: 14, scope: !6547)
!6549 = !DILocation(line: 1196, column: 7, scope: !6536)
!6550 = !DILocation(line: 1197, column: 4, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1196, column: 43)
!6552 = !DILocation(line: 1199, column: 4, scope: !6551)
!6553 = !DILocation(line: 1201, column: 12, scope: !6536)
!6554 = !DILocation(line: 1201, column: 21, scope: !6536)
!6555 = !DILocation(line: 1201, column: 25, scope: !6536)
!6556 = !DILocation(line: 1201, column: 10, scope: !6536)
!6557 = !DILocation(line: 1204, column: 11, scope: !6536)
!6558 = !DILocation(line: 1204, column: 3, scope: !6536)
!6559 = !DILocation(line: 1208, column: 12, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1204, column: 19)
!6561 = !DILocation(line: 1209, column: 33, scope: !6560)
!6562 = !DILocation(line: 1209, column: 40, scope: !6560)
!6563 = !DILocation(line: 1209, column: 10, scope: !6560)
!6564 = !DILocation(line: 1209, column: 8, scope: !6560)
!6565 = !DILocation(line: 1211, column: 8, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1211, column: 8)
!6567 = !DILocation(line: 1211, column: 12, scope: !6566)
!6568 = !DILocation(line: 1211, column: 8, scope: !6560)
!6569 = !DILocation(line: 1212, column: 36, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1211, column: 17)
!6571 = !DILocation(line: 1212, column: 5, scope: !6570)
!6572 = !DILocation(line: 1213, column: 15, scope: !6570)
!6573 = !DILocation(line: 1213, column: 13, scope: !6570)
!6574 = !DILocation(line: 1214, column: 4, scope: !6570)
!6575 = !DILocation(line: 1216, column: 4, scope: !6560)
!6576 = !DILocation(line: 1227, column: 12, scope: !6560)
!6577 = !DILocation(line: 1228, column: 25, scope: !6560)
!6578 = !DILocation(line: 1228, column: 4, scope: !6560)
!6579 = !DILocation(line: 1229, column: 14, scope: !6560)
!6580 = !DILocation(line: 1229, column: 21, scope: !6560)
!6581 = !DILocation(line: 1229, column: 12, scope: !6560)
!6582 = !DILocation(line: 1232, column: 8, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1232, column: 8)
!6584 = !DILocation(line: 1232, column: 16, scope: !6583)
!6585 = !DILocation(line: 1232, column: 8, scope: !6560)
!6586 = !DILocation(line: 1233, column: 5, scope: !6583)
!6587 = !DILocation(line: 1235, column: 4, scope: !6560)
!6588 = !DILocation(line: 1240, column: 25, scope: !6560)
!6589 = !DILocation(line: 1240, column: 4, scope: !6560)
!6590 = !DILocation(line: 1241, column: 4, scope: !6560)
!6591 = !DILocation(line: 1241, column: 4, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1241, column: 4)
!6593 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1241, column: 4)
!6594 = !DILocation(line: 1241, column: 4, scope: !6593)
!6595 = !DILocation(line: 1247, column: 12, scope: !6560)
!6596 = !DILocation(line: 1248, column: 14, scope: !6560)
!6597 = !DILocation(line: 1248, column: 12, scope: !6560)
!6598 = !DILocation(line: 1249, column: 4, scope: !6560)
!6599 = !DILocation(line: 1253, column: 12, scope: !6560)
!6600 = !DILocation(line: 1254, column: 14, scope: !6560)
!6601 = !DILocation(line: 1254, column: 12, scope: !6560)
!6602 = !DILocation(line: 1255, column: 4, scope: !6560)
!6603 = !DILocation(line: 1257, column: 4, scope: !6560)
!6604 = !DILocation(line: 1257, column: 4, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 1257, column: 4)
!6606 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1257, column: 4)
!6607 = !DILocation(line: 1257, column: 4, scope: !6606)
!6608 = !DILocation(line: 1259, column: 4, scope: !6560)
!6609 = !DILocation(line: 1263, column: 14, scope: !6536)
!6610 = !DILocation(line: 1263, column: 11, scope: !6536)
!6611 = !DILocation(line: 1263, column: 7, scope: !6536)
!6612 = !DILocation(line: 1264, column: 20, scope: !6536)
!6613 = !DILocation(line: 1264, column: 3, scope: !6536)
!6614 = !DILocation(line: 1266, column: 2, scope: !6536)
!6615 = !DILocation(line: 1268, column: 11, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1266, column: 9)
!6617 = !DILocation(line: 1269, column: 34, scope: !6616)
!6618 = !DILocation(line: 1269, column: 3, scope: !6616)
!6619 = !DILocation(line: 1271, column: 34, scope: !6514)
!6620 = !DILocation(line: 1271, column: 55, scope: !6514)
!6621 = !DILocation(line: 1271, column: 59, scope: !6514)
!6622 = !DILocation(line: 1272, column: 14, scope: !6514)
!6623 = !DILocation(line: 1272, column: 35, scope: !6514)
!6624 = !DILocation(line: 1272, column: 4, scope: !6514)
!6625 = !DILocation(line: 1272, column: 41, scope: !6514)
!6626 = !DILocation(line: 1272, column: 50, scope: !6514)
!6627 = !DILocation(line: 1271, column: 2, scope: !6514)
!6628 = !DILocation(line: 1273, column: 1, scope: !6514)
!6629 = distinct !DISubprogram(name: "sony_pf_add", scope: !3, file: !3, line: 575, type: !5796, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6630 = !DILocalVariable(name: "v", arg: 1, scope: !6631, file: !6632, line: 106, type: !6635)
!6631 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !6632, file: !6632, line: 106, type: !6633, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6632 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6633 = !DISubroutineType(types: !6634)
!6634 = !{null, !6635}
!6635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!6636 = !DILocation(line: 106, column: 55, scope: !6631, inlinedAt: !6637)
!6637 = distinct !DILocation(line: 331, column: 2, scope: !6638, inlinedAt: !6640)
!6638 = distinct !DISubprogram(name: "atomic_dec", scope: !6639, file: !6639, line: 328, type: !6633, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6639 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6640 = distinct !DILocation(line: 605, column: 2, scope: !6629)
!6641 = !DILocalVariable(name: "v", arg: 1, scope: !6642, file: !6643, line: 99, type: !6646)
!6642 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !6643, file: !6643, line: 99, type: !6644, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6643 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6644 = !DISubroutineType(types: !6645)
!6645 = !{null, !6646, !574}
!6646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 64)
!6647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6648)
!6648 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6649 = !DILocation(line: 99, column: 79, scope: !6642, inlinedAt: !6650)
!6650 = distinct !DILocation(line: 330, column: 2, scope: !6638, inlinedAt: !6640)
!6651 = !DILocalVariable(name: "size", arg: 2, scope: !6642, file: !6643, line: 99, type: !574)
!6652 = !DILocation(line: 99, column: 89, scope: !6642, inlinedAt: !6650)
!6653 = !DILocalVariable(name: "v", arg: 1, scope: !6638, file: !6639, line: 328, type: !6635)
!6654 = !DILocation(line: 328, column: 22, scope: !6638, inlinedAt: !6640)
!6655 = !DILocalVariable(name: "i", arg: 1, scope: !6656, file: !6632, line: 163, type: !109)
!6656 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !6632, file: !6632, line: 163, type: !6657, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!109, !109, !6635}
!6659 = !DILocation(line: 163, column: 55, scope: !6656, inlinedAt: !6660)
!6660 = distinct !DILocation(line: 73, column: 9, scope: !6661, inlinedAt: !6662)
!6661 = distinct !DISubprogram(name: "atomic_add_return", scope: !6639, file: !6639, line: 70, type: !6657, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6662 = distinct !DILocation(line: 580, column: 6, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 580, column: 6)
!6664 = !DILocalVariable(name: "v", arg: 2, scope: !6656, file: !6632, line: 163, type: !6635)
!6665 = !DILocation(line: 163, column: 68, scope: !6656, inlinedAt: !6660)
!6666 = !DILocalVariable(name: "__ret", scope: !6667, file: !6632, line: 165, type: !109)
!6667 = distinct !DILexicalBlock(scope: !6656, file: !6632, line: 165, column: 13)
!6668 = !DILocation(line: 165, column: 13, scope: !6667, inlinedAt: !6660)
!6669 = !DILocation(line: 99, column: 79, scope: !6642, inlinedAt: !6670)
!6670 = distinct !DILocation(line: 72, column: 2, scope: !6661, inlinedAt: !6662)
!6671 = !DILocation(line: 99, column: 89, scope: !6642, inlinedAt: !6670)
!6672 = !DILocalVariable(name: "i", arg: 1, scope: !6661, file: !6639, line: 70, type: !109)
!6673 = !DILocation(line: 70, column: 23, scope: !6661, inlinedAt: !6662)
!6674 = !DILocalVariable(name: "v", arg: 2, scope: !6661, file: !6639, line: 70, type: !6635)
!6675 = !DILocation(line: 70, column: 36, scope: !6661, inlinedAt: !6662)
!6676 = !DILocalVariable(name: "ret", scope: !6629, file: !3, line: 577, type: !109)
!6677 = !DILocation(line: 577, column: 6, scope: !6629)
!6678 = !DILocation(line: 72, column: 31, scope: !6661, inlinedAt: !6662)
!6679 = !DILocation(line: 101, column: 20, scope: !6642, inlinedAt: !6670)
!6680 = !DILocation(line: 101, column: 23, scope: !6642, inlinedAt: !6670)
!6681 = !DILocation(line: 101, column: 2, scope: !6642, inlinedAt: !6670)
!6682 = !DILocation(line: 102, column: 2, scope: !6642, inlinedAt: !6670)
!6683 = !DILocation(line: 73, column: 32, scope: !6661, inlinedAt: !6662)
!6684 = !DILocation(line: 73, column: 35, scope: !6661, inlinedAt: !6662)
!6685 = !DILocation(line: 165, column: 9, scope: !6656, inlinedAt: !6660)
!6686 = !{i32 -2146504918}
!6687 = !DILocation(line: 165, column: 11, scope: !6656, inlinedAt: !6660)
!6688 = !DILocation(line: 580, column: 43, scope: !6663)
!6689 = !DILocation(line: 580, column: 6, scope: !6629)
!6690 = !DILocation(line: 581, column: 3, scope: !6663)
!6691 = !DILocation(line: 583, column: 8, scope: !6629)
!6692 = !DILocation(line: 583, column: 6, scope: !6629)
!6693 = !DILocation(line: 584, column: 6, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 584, column: 6)
!6695 = !DILocation(line: 584, column: 6, scope: !6629)
!6696 = !DILocation(line: 585, column: 3, scope: !6694)
!6697 = !DILocation(line: 587, column: 19, scope: !6629)
!6698 = !DILocation(line: 587, column: 17, scope: !6629)
!6699 = !DILocation(line: 588, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 588, column: 6)
!6701 = !DILocation(line: 588, column: 6, scope: !6629)
!6702 = !DILocation(line: 589, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 588, column: 23)
!6704 = !DILocation(line: 590, column: 3, scope: !6703)
!6705 = !DILocation(line: 593, column: 28, scope: !6629)
!6706 = !DILocation(line: 593, column: 8, scope: !6629)
!6707 = !DILocation(line: 593, column: 6, scope: !6629)
!6708 = !DILocation(line: 594, column: 6, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 594, column: 6)
!6710 = !DILocation(line: 594, column: 6, scope: !6629)
!6711 = !DILocation(line: 595, column: 3, scope: !6709)
!6712 = !DILocation(line: 597, column: 2, scope: !6629)
!6713 = !DILabel(scope: !6629, name: "out_platform_alloced", file: !3, line: 599)
!6714 = !DILocation(line: 599, column: 7, scope: !6629)
!6715 = !DILocation(line: 600, column: 22, scope: !6629)
!6716 = !DILocation(line: 600, column: 2, scope: !6629)
!6717 = !DILocation(line: 601, column: 17, scope: !6629)
!6718 = !DILocation(line: 601, column: 2, scope: !6629)
!6719 = !DILabel(scope: !6629, name: "out_platform_registered", file: !3, line: 602)
!6720 = !DILocation(line: 602, column: 7, scope: !6629)
!6721 = !DILocation(line: 603, column: 2, scope: !6629)
!6722 = !DILabel(scope: !6629, name: "out", file: !3, line: 604)
!6723 = !DILocation(line: 604, column: 7, scope: !6629)
!6724 = !DILocation(line: 330, column: 31, scope: !6638, inlinedAt: !6640)
!6725 = !DILocation(line: 101, column: 20, scope: !6642, inlinedAt: !6650)
!6726 = !DILocation(line: 101, column: 23, scope: !6642, inlinedAt: !6650)
!6727 = !DILocation(line: 101, column: 2, scope: !6642, inlinedAt: !6650)
!6728 = !DILocation(line: 102, column: 2, scope: !6642, inlinedAt: !6650)
!6729 = !DILocation(line: 331, column: 18, scope: !6638, inlinedAt: !6640)
!6730 = !DILocation(line: 109, column: 16, scope: !6631, inlinedAt: !6637)
!6731 = !DILocation(line: 109, column: 19, scope: !6631, inlinedAt: !6637)
!6732 = !DILocation(line: 108, column: 2, scope: !6631, inlinedAt: !6637)
!6733 = !{i32 -2146509061}
!6734 = !DILocation(line: 606, column: 9, scope: !6629)
!6735 = !DILocation(line: 606, column: 2, scope: !6629)
!6736 = !DILocation(line: 607, column: 1, scope: !6629)
!6737 = distinct !DISubprogram(name: "sony_walk_callback", scope: !3, file: !3, line: 1275, type: !6738, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6738 = !DISubroutineType(types: !6739)
!6739 = !{!183, !237, !185, !177, !1145}
!6740 = !DILocalVariable(name: "handle", arg: 1, scope: !6737, file: !3, line: 1275, type: !237)
!6741 = !DILocation(line: 1275, column: 51, scope: !6737)
!6742 = !DILocalVariable(name: "level", arg: 2, scope: !6737, file: !3, line: 1275, type: !185)
!6743 = !DILocation(line: 1275, column: 63, scope: !6737)
!6744 = !DILocalVariable(name: "context", arg: 3, scope: !6737, file: !3, line: 1276, type: !177)
!6745 = !DILocation(line: 1276, column: 17, scope: !6737)
!6746 = !DILocalVariable(name: "return_value", arg: 4, scope: !6737, file: !3, line: 1276, type: !1145)
!6747 = !DILocation(line: 1276, column: 33, scope: !6737)
!6748 = !DILocalVariable(name: "info", scope: !6737, file: !3, line: 1278, type: !6749)
!6749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6750, size: 64)
!6750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_info", file: !184, line: 1156, size: 768, elements: !6751)
!6751 = !{!6752, !6753, !6754, !6755, !6756, !6757, !6758, !6760, !6762, !6763, !6768, !6769, !6770}
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "info_size", scope: !6750, file: !184, line: 1157, baseType: !185, size: 32)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6750, file: !184, line: 1158, baseType: !185, size: 32, offset: 32)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6750, file: !184, line: 1159, baseType: !201, size: 32, offset: 64)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !6750, file: !184, line: 1160, baseType: !223, size: 8, offset: 96)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !6750, file: !184, line: 1161, baseType: !1183, size: 16, offset: 112)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6750, file: !184, line: 1162, baseType: !223, size: 8, offset: 128)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "highest_dstates", scope: !6750, file: !184, line: 1163, baseType: !6759, size: 32, offset: 136)
!6759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 32, elements: !375)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_dstates", scope: !6750, file: !184, line: 1164, baseType: !6761, size: 40, offset: 168)
!6761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 40, elements: !4619)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !6750, file: !184, line: 1165, baseType: !207, size: 64, offset: 256)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !6750, file: !184, line: 1166, baseType: !6764, size: 128, offset: 320)
!6764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_device_id", file: !184, line: 1141, size: 128, elements: !6765)
!6765 = !{!6766, !6767}
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6764, file: !184, line: 1142, baseType: !185, size: 32)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6764, file: !184, line: 1143, baseType: !181, size: 64, offset: 64)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !6750, file: !184, line: 1167, baseType: !6764, size: 128, offset: 448)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "class_code", scope: !6750, file: !184, line: 1168, baseType: !6764, size: 128, offset: 576)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "compatible_id_list", scope: !6750, file: !184, line: 1169, baseType: !6771, size: 64, offset: 704)
!6771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_device_id_list", file: !184, line: 1146, size: 64, elements: !6772)
!6772 = !{!6773, !6774, !6775}
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6771, file: !184, line: 1147, baseType: !185, size: 32)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "list_size", scope: !6771, file: !184, line: 1148, baseType: !185, size: 32, offset: 32)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !6771, file: !184, line: 1149, baseType: !6776, offset: 64)
!6776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6764, elements: !3439)
!6777 = !DILocation(line: 1278, column: 27, scope: !6737)
!6778 = !DILocation(line: 1280, column: 6, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1280, column: 6)
!6780 = !DILocation(line: 1280, column: 6, scope: !6737)
!6781 = !DILocation(line: 1281, column: 3, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1280, column: 57)
!6783 = !DILocation(line: 1284, column: 9, scope: !6782)
!6784 = !DILocation(line: 1284, column: 3, scope: !6782)
!6785 = !DILocation(line: 1285, column: 2, scope: !6782)
!6786 = !DILocation(line: 1287, column: 2, scope: !6737)
!6787 = distinct !DISubprogram(name: "sony_laptop_setup_input", scope: !3, file: !3, line: 439, type: !4708, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6788 = !DILocation(line: 106, column: 55, scope: !6631, inlinedAt: !6789)
!6789 = distinct !DILocation(line: 331, column: 2, scope: !6638, inlinedAt: !6790)
!6790 = distinct !DILocation(line: 529, column: 2, scope: !6787)
!6791 = !DILocation(line: 99, column: 79, scope: !6642, inlinedAt: !6792)
!6792 = distinct !DILocation(line: 330, column: 2, scope: !6638, inlinedAt: !6790)
!6793 = !DILocation(line: 99, column: 89, scope: !6642, inlinedAt: !6792)
!6794 = !DILocation(line: 328, column: 22, scope: !6638, inlinedAt: !6790)
!6795 = !DILocalVariable(name: "lock", arg: 1, scope: !6796, file: !6797, line: 327, type: !1401)
!6796 = distinct !DISubprogram(name: "spinlock_check", scope: !6797, file: !6797, line: 327, type: !6798, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!6797 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!6800, !1401}
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!6801 = !DILocation(line: 327, column: 67, scope: !6796, inlinedAt: !6802)
!6802 = distinct !DILocation(line: 451, column: 2, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 451, column: 2)
!6804 = !DILocation(line: 163, column: 55, scope: !6656, inlinedAt: !6805)
!6805 = distinct !DILocation(line: 73, column: 9, scope: !6661, inlinedAt: !6806)
!6806 = distinct !DILocation(line: 447, column: 6, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 447, column: 6)
!6808 = !DILocation(line: 163, column: 68, scope: !6656, inlinedAt: !6805)
!6809 = !DILocation(line: 165, column: 13, scope: !6667, inlinedAt: !6805)
!6810 = !DILocation(line: 99, column: 79, scope: !6642, inlinedAt: !6811)
!6811 = distinct !DILocation(line: 72, column: 2, scope: !6661, inlinedAt: !6806)
!6812 = !DILocation(line: 99, column: 89, scope: !6642, inlinedAt: !6811)
!6813 = !DILocation(line: 70, column: 23, scope: !6661, inlinedAt: !6806)
!6814 = !DILocation(line: 70, column: 36, scope: !6661, inlinedAt: !6806)
!6815 = !DILocalVariable(name: "acpi_device", arg: 1, scope: !6787, file: !3, line: 439, type: !4529)
!6816 = !DILocation(line: 439, column: 56, scope: !6787)
!6817 = !DILocalVariable(name: "jog_dev", scope: !6787, file: !3, line: 441, type: !5061)
!6818 = !DILocation(line: 441, column: 20, scope: !6787)
!6819 = !DILocalVariable(name: "key_dev", scope: !6787, file: !3, line: 442, type: !5061)
!6820 = !DILocation(line: 442, column: 20, scope: !6787)
!6821 = !DILocalVariable(name: "i", scope: !6787, file: !3, line: 443, type: !109)
!6822 = !DILocation(line: 443, column: 6, scope: !6787)
!6823 = !DILocalVariable(name: "error", scope: !6787, file: !3, line: 444, type: !109)
!6824 = !DILocation(line: 444, column: 6, scope: !6787)
!6825 = !DILocation(line: 72, column: 31, scope: !6661, inlinedAt: !6806)
!6826 = !DILocation(line: 101, column: 20, scope: !6642, inlinedAt: !6811)
!6827 = !DILocation(line: 101, column: 23, scope: !6642, inlinedAt: !6811)
!6828 = !DILocation(line: 101, column: 2, scope: !6642, inlinedAt: !6811)
!6829 = !DILocation(line: 102, column: 2, scope: !6642, inlinedAt: !6811)
!6830 = !DILocation(line: 73, column: 32, scope: !6661, inlinedAt: !6806)
!6831 = !DILocation(line: 73, column: 35, scope: !6661, inlinedAt: !6806)
!6832 = !DILocation(line: 165, column: 9, scope: !6656, inlinedAt: !6805)
!6833 = !DILocation(line: 165, column: 11, scope: !6656, inlinedAt: !6805)
!6834 = !DILocation(line: 447, column: 53, scope: !6807)
!6835 = !DILocation(line: 447, column: 6, scope: !6787)
!6836 = !DILocation(line: 448, column: 3, scope: !6807)
!6837 = !DILocation(line: 451, column: 2, scope: !6787)
!6838 = !DILocation(line: 329, column: 10, scope: !6796, inlinedAt: !6802)
!6839 = !DILocation(line: 329, column: 16, scope: !6796, inlinedAt: !6802)
!6840 = !DILocation(line: 451, column: 2, scope: !6803)
!6841 = !DILocalVariable(name: "__tmp", scope: !6842, file: !3, line: 452, type: !6843)
!6842 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 452, column: 10)
!6843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5338, size: 64)
!6844 = !DILocation(line: 452, column: 10, scope: !6842)
!6845 = !DILocalVariable(name: "__kfifo", scope: !6842, file: !3, line: 452, type: !6846)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!6847 = !DILocation(line: 452, column: 10, scope: !6787)
!6848 = !DILocation(line: 452, column: 8, scope: !6787)
!6849 = !DILocation(line: 454, column: 6, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 454, column: 6)
!6851 = !DILocation(line: 454, column: 6, scope: !6787)
!6852 = !DILocation(line: 455, column: 3, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 454, column: 13)
!6854 = !DILocation(line: 456, column: 3, scope: !6853)
!6855 = !DILocation(line: 459, column: 2, scope: !6787)
!6856 = !DILocation(line: 463, column: 12, scope: !6787)
!6857 = !DILocation(line: 463, column: 10, scope: !6787)
!6858 = !DILocation(line: 464, column: 7, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 464, column: 6)
!6860 = !DILocation(line: 464, column: 6, scope: !6787)
!6861 = !DILocation(line: 465, column: 9, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6859, file: !3, line: 464, column: 16)
!6863 = !DILocation(line: 466, column: 3, scope: !6862)
!6864 = !DILocation(line: 469, column: 2, scope: !6787)
!6865 = !DILocation(line: 469, column: 11, scope: !6787)
!6866 = !DILocation(line: 469, column: 16, scope: !6787)
!6867 = !DILocation(line: 470, column: 2, scope: !6787)
!6868 = !DILocation(line: 470, column: 11, scope: !6787)
!6869 = !DILocation(line: 470, column: 14, scope: !6787)
!6870 = !DILocation(line: 470, column: 22, scope: !6787)
!6871 = !DILocation(line: 471, column: 2, scope: !6787)
!6872 = !DILocation(line: 471, column: 11, scope: !6787)
!6873 = !DILocation(line: 471, column: 14, scope: !6787)
!6874 = !DILocation(line: 471, column: 21, scope: !6787)
!6875 = !DILocation(line: 472, column: 25, scope: !6787)
!6876 = !DILocation(line: 472, column: 38, scope: !6787)
!6877 = !DILocation(line: 472, column: 2, scope: !6787)
!6878 = !DILocation(line: 472, column: 11, scope: !6787)
!6879 = !DILocation(line: 472, column: 15, scope: !6787)
!6880 = !DILocation(line: 472, column: 22, scope: !6787)
!6881 = !DILocation(line: 475, column: 23, scope: !6787)
!6882 = !DILocation(line: 475, column: 2, scope: !6787)
!6883 = !DILocation(line: 477, column: 20, scope: !6787)
!6884 = !DILocation(line: 477, column: 29, scope: !6787)
!6885 = !DILocation(line: 477, column: 2, scope: !6787)
!6886 = !DILocation(line: 478, column: 2, scope: !6787)
!6887 = !DILocation(line: 478, column: 11, scope: !6787)
!6888 = !DILocation(line: 478, column: 23, scope: !6787)
!6889 = !DILocation(line: 479, column: 2, scope: !6787)
!6890 = !DILocation(line: 479, column: 11, scope: !6787)
!6891 = !DILocation(line: 479, column: 22, scope: !6787)
!6892 = !DILocation(line: 480, column: 2, scope: !6787)
!6893 = !DILocation(line: 480, column: 11, scope: !6787)
!6894 = !DILocation(line: 480, column: 19, scope: !6787)
!6895 = !DILocation(line: 481, column: 9, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 481, column: 2)
!6897 = !DILocation(line: 481, column: 7, scope: !6896)
!6898 = !DILocation(line: 481, column: 14, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 481, column: 2)
!6900 = !DILocation(line: 481, column: 16, scope: !6899)
!6901 = !DILocation(line: 481, column: 2, scope: !6896)
!6902 = !DILocation(line: 482, column: 43, scope: !6899)
!6903 = !DILocation(line: 482, column: 13, scope: !6899)
!6904 = !DILocation(line: 482, column: 47, scope: !6899)
!6905 = !DILocation(line: 482, column: 56, scope: !6899)
!6906 = !DILocation(line: 482, column: 3, scope: !6899)
!6907 = !DILocation(line: 481, column: 62, scope: !6899)
!6908 = !DILocation(line: 481, column: 2, scope: !6899)
!6909 = distinct !{!6909, !6901, !6910}
!6910 = !DILocation(line: 482, column: 62, scope: !6896)
!6911 = !DILocation(line: 483, column: 28, scope: !6787)
!6912 = !DILocation(line: 483, column: 37, scope: !6787)
!6913 = !DILocation(line: 483, column: 2, scope: !6787)
!6914 = !DILocation(line: 485, column: 32, scope: !6787)
!6915 = !DILocation(line: 485, column: 10, scope: !6787)
!6916 = !DILocation(line: 485, column: 8, scope: !6787)
!6917 = !DILocation(line: 486, column: 6, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 486, column: 6)
!6919 = !DILocation(line: 486, column: 6, scope: !6787)
!6920 = !DILocation(line: 487, column: 3, scope: !6918)
!6921 = !DILocation(line: 489, column: 30, scope: !6787)
!6922 = !DILocation(line: 489, column: 28, scope: !6787)
!6923 = !DILocation(line: 492, column: 12, scope: !6787)
!6924 = !DILocation(line: 492, column: 10, scope: !6787)
!6925 = !DILocation(line: 493, column: 7, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 493, column: 6)
!6927 = !DILocation(line: 493, column: 6, scope: !6787)
!6928 = !DILocation(line: 494, column: 9, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 493, column: 16)
!6930 = !DILocation(line: 495, column: 3, scope: !6929)
!6931 = !DILocation(line: 498, column: 2, scope: !6787)
!6932 = !DILocation(line: 498, column: 11, scope: !6787)
!6933 = !DILocation(line: 498, column: 16, scope: !6787)
!6934 = !DILocation(line: 499, column: 2, scope: !6787)
!6935 = !DILocation(line: 499, column: 11, scope: !6787)
!6936 = !DILocation(line: 499, column: 14, scope: !6787)
!6937 = !DILocation(line: 499, column: 22, scope: !6787)
!6938 = !DILocation(line: 500, column: 2, scope: !6787)
!6939 = !DILocation(line: 500, column: 11, scope: !6787)
!6940 = !DILocation(line: 500, column: 14, scope: !6787)
!6941 = !DILocation(line: 500, column: 21, scope: !6787)
!6942 = !DILocation(line: 501, column: 25, scope: !6787)
!6943 = !DILocation(line: 501, column: 38, scope: !6787)
!6944 = !DILocation(line: 501, column: 2, scope: !6787)
!6945 = !DILocation(line: 501, column: 11, scope: !6787)
!6946 = !DILocation(line: 501, column: 15, scope: !6787)
!6947 = !DILocation(line: 501, column: 22, scope: !6787)
!6948 = !DILocation(line: 503, column: 23, scope: !6787)
!6949 = !DILocation(line: 503, column: 2, scope: !6787)
!6950 = !DILocation(line: 504, column: 23, scope: !6787)
!6951 = !DILocation(line: 504, column: 2, scope: !6787)
!6952 = !DILocation(line: 506, column: 32, scope: !6787)
!6953 = !DILocation(line: 506, column: 10, scope: !6787)
!6954 = !DILocation(line: 506, column: 8, scope: !6787)
!6955 = !DILocation(line: 507, column: 6, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 507, column: 6)
!6957 = !DILocation(line: 507, column: 6, scope: !6787)
!6958 = !DILocation(line: 508, column: 3, scope: !6956)
!6959 = !DILocation(line: 510, column: 30, scope: !6787)
!6960 = !DILocation(line: 510, column: 28, scope: !6787)
!6961 = !DILocation(line: 512, column: 2, scope: !6787)
!6962 = !DILabel(scope: !6787, name: "err_free_jogdev", file: !3, line: 514)
!6963 = !DILocation(line: 514, column: 1, scope: !6787)
!6964 = !DILocation(line: 515, column: 20, scope: !6787)
!6965 = !DILocation(line: 515, column: 2, scope: !6787)
!6966 = !DILabel(scope: !6787, name: "err_unregister_keydev", file: !3, line: 517)
!6967 = !DILocation(line: 517, column: 1, scope: !6787)
!6968 = !DILocation(line: 518, column: 26, scope: !6787)
!6969 = !DILocation(line: 518, column: 2, scope: !6787)
!6970 = !DILocation(line: 520, column: 10, scope: !6787)
!6971 = !DILocation(line: 520, column: 2, scope: !6787)
!6972 = !DILabel(scope: !6787, name: "err_free_keydev", file: !3, line: 522)
!6973 = !DILocation(line: 522, column: 1, scope: !6787)
!6974 = !DILocation(line: 523, column: 20, scope: !6787)
!6975 = !DILocation(line: 523, column: 2, scope: !6787)
!6976 = !DILabel(scope: !6787, name: "err_free_kfifo", file: !3, line: 525)
!6977 = !DILocation(line: 525, column: 1, scope: !6787)
!6978 = !DILocalVariable(name: "__tmp", scope: !6979, file: !3, line: 526, type: !6843)
!6979 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 526, column: 2)
!6980 = !DILocation(line: 526, column: 2, scope: !6979)
!6981 = !DILocalVariable(name: "__kfifo", scope: !6979, file: !3, line: 526, type: !6846)
!6982 = !DILocation(line: 526, column: 2, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 526, column: 2)
!6984 = !DILocation(line: 526, column: 2, scope: !6787)
!6985 = !DILabel(scope: !6787, name: "err_dec_users", file: !3, line: 528)
!6986 = !DILocation(line: 528, column: 1, scope: !6787)
!6987 = !DILocation(line: 330, column: 31, scope: !6638, inlinedAt: !6790)
!6988 = !DILocation(line: 101, column: 20, scope: !6642, inlinedAt: !6792)
!6989 = !DILocation(line: 101, column: 23, scope: !6642, inlinedAt: !6792)
!6990 = !DILocation(line: 101, column: 2, scope: !6642, inlinedAt: !6792)
!6991 = !DILocation(line: 102, column: 2, scope: !6642, inlinedAt: !6792)
!6992 = !DILocation(line: 331, column: 18, scope: !6638, inlinedAt: !6790)
!6993 = !DILocation(line: 109, column: 16, scope: !6631, inlinedAt: !6789)
!6994 = !DILocation(line: 109, column: 19, scope: !6631, inlinedAt: !6789)
!6995 = !DILocation(line: 108, column: 2, scope: !6631, inlinedAt: !6789)
!6996 = !DILocation(line: 530, column: 9, scope: !6787)
!6997 = !DILocation(line: 530, column: 2, scope: !6787)
!6998 = !DILocation(line: 531, column: 1, scope: !6787)
!6999 = distinct !DISubprogram(name: "sony_nc_int_call", scope: !3, file: !3, line: 792, type: !7000, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7000 = !DISubroutineType(types: !7001)
!7001 = !{!109, !237, !181, !1051, !1051}
!7002 = !DILocalVariable(name: "handle", arg: 1, scope: !6999, file: !3, line: 792, type: !237)
!7003 = !DILocation(line: 792, column: 41, scope: !6999)
!7004 = !DILocalVariable(name: "name", arg: 2, scope: !6999, file: !3, line: 792, type: !181)
!7005 = !DILocation(line: 792, column: 55, scope: !6999)
!7006 = !DILocalVariable(name: "value", arg: 3, scope: !6999, file: !3, line: 792, type: !1051)
!7007 = !DILocation(line: 792, column: 66, scope: !6999)
!7008 = !DILocalVariable(name: "result", arg: 4, scope: !6999, file: !3, line: 793, type: !1051)
!7009 = !DILocation(line: 793, column: 4, scope: !6999)
!7010 = !DILocalVariable(name: "ret", scope: !6999, file: !3, line: 795, type: !109)
!7011 = !DILocation(line: 795, column: 6, scope: !6999)
!7012 = !DILocation(line: 797, column: 6, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 797, column: 6)
!7014 = !DILocation(line: 797, column: 6, scope: !6999)
!7015 = !DILocalVariable(name: "v", scope: !7016, file: !3, line: 798, type: !207)
!7016 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 797, column: 13)
!7017 = !DILocation(line: 798, column: 7, scope: !7016)
!7018 = !DILocation(line: 798, column: 12, scope: !7016)
!7019 = !DILocation(line: 798, column: 11, scope: !7016)
!7020 = !DILocation(line: 800, column: 29, scope: !7016)
!7021 = !DILocation(line: 800, column: 37, scope: !7016)
!7022 = !DILocation(line: 800, column: 47, scope: !7016)
!7023 = !DILocation(line: 800, column: 9, scope: !7016)
!7024 = !DILocation(line: 800, column: 7, scope: !7016)
!7025 = !DILocation(line: 802, column: 2, scope: !7016)
!7026 = !DILocation(line: 803, column: 30, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 802, column: 9)
!7028 = !DILocation(line: 803, column: 38, scope: !7027)
!7029 = !DILocation(line: 803, column: 50, scope: !7027)
!7030 = !DILocation(line: 803, column: 10, scope: !7027)
!7031 = !DILocation(line: 803, column: 7, scope: !7027)
!7032 = !DILocation(line: 806, column: 9, scope: !6999)
!7033 = !DILocation(line: 806, column: 2, scope: !6999)
!7034 = distinct !DISubprogram(name: "sony_nc_handles_setup", scope: !3, file: !3, line: 831, type: !5004, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7035 = !DILocalVariable(name: "pd", arg: 1, scope: !7034, file: !3, line: 831, type: !5006)
!7036 = !DILocation(line: 831, column: 58, scope: !7034)
!7037 = !DILocalVariable(name: "i", scope: !7034, file: !3, line: 833, type: !109)
!7038 = !DILocation(line: 833, column: 6, scope: !7034)
!7039 = !DILocalVariable(name: "r", scope: !7034, file: !3, line: 833, type: !109)
!7040 = !DILocation(line: 833, column: 9, scope: !7034)
!7041 = !DILocalVariable(name: "result", scope: !7034, file: !3, line: 833, type: !109)
!7042 = !DILocation(line: 833, column: 12, scope: !7034)
!7043 = !DILocalVariable(name: "arg", scope: !7034, file: !3, line: 833, type: !109)
!7044 = !DILocation(line: 833, column: 20, scope: !7034)
!7045 = !DILocation(line: 835, column: 12, scope: !7034)
!7046 = !DILocation(line: 835, column: 10, scope: !7034)
!7047 = !DILocation(line: 836, column: 7, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 836, column: 6)
!7049 = !DILocation(line: 836, column: 6, scope: !7034)
!7050 = !DILocation(line: 837, column: 3, scope: !7048)
!7051 = !DILocation(line: 839, column: 9, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 839, column: 2)
!7053 = !DILocation(line: 839, column: 7, scope: !7052)
!7054 = !DILocation(line: 839, column: 14, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 839, column: 2)
!7056 = !DILocation(line: 839, column: 16, scope: !7055)
!7057 = !DILocation(line: 839, column: 2, scope: !7052)
!7058 = !DILocation(line: 840, column: 9, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 839, column: 49)
!7060 = !DILocation(line: 840, column: 11, scope: !7059)
!7061 = !DILocation(line: 840, column: 7, scope: !7059)
!7062 = !DILocation(line: 841, column: 24, scope: !7059)
!7063 = !DILocation(line: 841, column: 7, scope: !7059)
!7064 = !DILocation(line: 841, column: 5, scope: !7059)
!7065 = !DILocation(line: 843, column: 8, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 843, column: 7)
!7067 = !DILocation(line: 843, column: 7, scope: !7059)
!7068 = !DILocation(line: 844, column: 4, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 843, column: 11)
!7070 = !DILocation(line: 844, column: 4, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 844, column: 4)
!7072 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 844, column: 4)
!7073 = !DILocation(line: 844, column: 4, scope: !7072)
!7074 = !DILocation(line: 846, column: 22, scope: !7069)
!7075 = !DILocation(line: 846, column: 4, scope: !7069)
!7076 = !DILocation(line: 846, column: 13, scope: !7069)
!7077 = !DILocation(line: 846, column: 17, scope: !7069)
!7078 = !DILocation(line: 846, column: 20, scope: !7069)
!7079 = !DILocation(line: 847, column: 3, scope: !7069)
!7080 = !DILocation(line: 848, column: 2, scope: !7059)
!7081 = !DILocation(line: 839, column: 45, scope: !7055)
!7082 = !DILocation(line: 839, column: 2, scope: !7055)
!7083 = distinct !{!7083, !7057, !7084}
!7084 = !DILocation(line: 848, column: 2, scope: !7052)
!7085 = !DILocation(line: 850, column: 6, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 850, column: 6)
!7087 = !DILocation(line: 850, column: 6, scope: !7034)
!7088 = !DILocation(line: 851, column: 3, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 850, column: 13)
!7090 = !DILocation(line: 851, column: 3, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 851, column: 3)
!7092 = !DILocation(line: 852, column: 3, scope: !7089)
!7093 = !DILocation(line: 852, column: 12, scope: !7089)
!7094 = !DILocation(line: 852, column: 20, scope: !7089)
!7095 = !DILocation(line: 852, column: 25, scope: !7089)
!7096 = !DILocation(line: 852, column: 30, scope: !7089)
!7097 = !DILocation(line: 853, column: 3, scope: !7089)
!7098 = !DILocation(line: 853, column: 12, scope: !7089)
!7099 = !DILocation(line: 853, column: 20, scope: !7089)
!7100 = !DILocation(line: 853, column: 25, scope: !7089)
!7101 = !DILocation(line: 853, column: 30, scope: !7089)
!7102 = !DILocation(line: 854, column: 3, scope: !7089)
!7103 = !DILocation(line: 854, column: 12, scope: !7089)
!7104 = !DILocation(line: 854, column: 20, scope: !7089)
!7105 = !DILocation(line: 854, column: 25, scope: !7089)
!7106 = !DILocation(line: 857, column: 27, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 857, column: 7)
!7108 = !DILocation(line: 857, column: 31, scope: !7107)
!7109 = !DILocation(line: 857, column: 37, scope: !7107)
!7110 = !DILocation(line: 857, column: 46, scope: !7107)
!7111 = !DILocation(line: 857, column: 7, scope: !7107)
!7112 = !DILocation(line: 857, column: 7, scope: !7089)
!7113 = !DILocation(line: 858, column: 10, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 857, column: 56)
!7115 = !DILocation(line: 858, column: 4, scope: !7114)
!7116 = !DILocation(line: 859, column: 12, scope: !7114)
!7117 = !DILocation(line: 860, column: 4, scope: !7114)
!7118 = !DILocation(line: 862, column: 2, scope: !7089)
!7119 = !DILocation(line: 864, column: 2, scope: !7034)
!7120 = !DILocation(line: 865, column: 1, scope: !7034)
!7121 = distinct !DISubprogram(name: "sony_nc_function_setup", scope: !3, file: !3, line: 1293, type: !7122, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7122 = !DISubroutineType(types: !7123)
!7123 = !{null, !4529, !5006}
!7124 = !DILocalVariable(name: "device", arg: 1, scope: !7121, file: !3, line: 1293, type: !4529)
!7125 = !DILocation(line: 1293, column: 56, scope: !7121)
!7126 = !DILocalVariable(name: "pf_device", arg: 2, scope: !7121, file: !3, line: 1294, type: !5006)
!7127 = !DILocation(line: 1294, column: 27, scope: !7121)
!7128 = !DILocalVariable(name: "i", scope: !7121, file: !3, line: 1296, type: !7)
!7129 = !DILocation(line: 1296, column: 15, scope: !7121)
!7130 = !DILocalVariable(name: "result", scope: !7121, file: !3, line: 1296, type: !7)
!7131 = !DILocation(line: 1296, column: 18, scope: !7121)
!7132 = !DILocalVariable(name: "bitmask", scope: !7121, file: !3, line: 1296, type: !7)
!7133 = !DILocation(line: 1296, column: 26, scope: !7121)
!7134 = !DILocalVariable(name: "arg", scope: !7121, file: !3, line: 1296, type: !7)
!7135 = !DILocation(line: 1296, column: 35, scope: !7121)
!7136 = !DILocation(line: 1298, column: 7, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1298, column: 6)
!7138 = !DILocation(line: 1298, column: 6, scope: !7121)
!7139 = !DILocation(line: 1299, column: 3, scope: !7137)
!7140 = !DILocation(line: 1302, column: 9, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1302, column: 2)
!7142 = !DILocation(line: 1302, column: 7, scope: !7141)
!7143 = !DILocation(line: 1302, column: 14, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1302, column: 2)
!7145 = !DILocation(line: 1302, column: 16, scope: !7144)
!7146 = !DILocation(line: 1302, column: 2, scope: !7141)
!7147 = !DILocalVariable(name: "handle", scope: !7148, file: !3, line: 1303, type: !7)
!7148 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 1302, column: 49)
!7149 = !DILocation(line: 1303, column: 16, scope: !7148)
!7150 = !DILocation(line: 1303, column: 25, scope: !7148)
!7151 = !DILocation(line: 1303, column: 34, scope: !7148)
!7152 = !DILocation(line: 1303, column: 38, scope: !7148)
!7153 = !DILocation(line: 1305, column: 8, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1305, column: 7)
!7155 = !DILocation(line: 1305, column: 7, scope: !7148)
!7156 = !DILocation(line: 1306, column: 4, scope: !7154)
!7157 = !DILocation(line: 1308, column: 3, scope: !7148)
!7158 = !DILocation(line: 1308, column: 3, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1308, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1308, column: 3)
!7161 = !DILocation(line: 1308, column: 3, scope: !7160)
!7162 = !DILocation(line: 1310, column: 11, scope: !7148)
!7163 = !DILocation(line: 1310, column: 3, scope: !7148)
!7164 = !DILocation(line: 1315, column: 25, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1310, column: 19)
!7166 = !DILocation(line: 1315, column: 4, scope: !7165)
!7167 = !DILocation(line: 1316, column: 4, scope: !7165)
!7168 = !DILocation(line: 1319, column: 25, scope: !7165)
!7169 = !DILocation(line: 1319, column: 4, scope: !7165)
!7170 = !DILocation(line: 1320, column: 4, scope: !7165)
!7171 = !DILocation(line: 1324, column: 36, scope: !7165)
!7172 = !DILocation(line: 1324, column: 47, scope: !7165)
!7173 = !DILocation(line: 1324, column: 13, scope: !7165)
!7174 = !DILocation(line: 1324, column: 11, scope: !7165)
!7175 = !DILocation(line: 1325, column: 8, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1325, column: 8)
!7177 = !DILocation(line: 1325, column: 8, scope: !7165)
!7178 = !DILocation(line: 1326, column: 5, scope: !7176)
!7179 = !DILocation(line: 1328, column: 4, scope: !7165)
!7180 = !DILocation(line: 1332, column: 40, scope: !7165)
!7181 = !DILocation(line: 1332, column: 51, scope: !7165)
!7182 = !DILocation(line: 1332, column: 13, scope: !7165)
!7183 = !DILocation(line: 1332, column: 11, scope: !7165)
!7184 = !DILocation(line: 1333, column: 8, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1333, column: 8)
!7186 = !DILocation(line: 1333, column: 8, scope: !7165)
!7187 = !DILocation(line: 1334, column: 5, scope: !7185)
!7188 = !DILocation(line: 1336, column: 4, scope: !7165)
!7189 = !DILocation(line: 1339, column: 38, scope: !7165)
!7190 = !DILocation(line: 1339, column: 49, scope: !7165)
!7191 = !DILocation(line: 1339, column: 13, scope: !7165)
!7192 = !DILocation(line: 1339, column: 11, scope: !7165)
!7193 = !DILocation(line: 1340, column: 8, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1340, column: 8)
!7195 = !DILocation(line: 1340, column: 8, scope: !7165)
!7196 = !DILocation(line: 1341, column: 5, scope: !7194)
!7197 = !DILocation(line: 1343, column: 4, scope: !7165)
!7198 = !DILocation(line: 1345, column: 35, scope: !7165)
!7199 = !DILocation(line: 1345, column: 13, scope: !7165)
!7200 = !DILocation(line: 1345, column: 11, scope: !7165)
!7201 = !DILocation(line: 1346, column: 8, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1346, column: 8)
!7203 = !DILocation(line: 1346, column: 8, scope: !7165)
!7204 = !DILocation(line: 1347, column: 5, scope: !7202)
!7205 = !DILocation(line: 1349, column: 4, scope: !7165)
!7206 = !DILocation(line: 1353, column: 38, scope: !7165)
!7207 = !DILocation(line: 1353, column: 49, scope: !7165)
!7208 = !DILocation(line: 1353, column: 13, scope: !7165)
!7209 = !DILocation(line: 1353, column: 11, scope: !7165)
!7210 = !DILocation(line: 1354, column: 8, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1354, column: 8)
!7212 = !DILocation(line: 1354, column: 8, scope: !7165)
!7213 = !DILocation(line: 1355, column: 5, scope: !7211)
!7214 = !DILocation(line: 1357, column: 4, scope: !7165)
!7215 = !DILocation(line: 1359, column: 46, scope: !7165)
!7216 = !DILocation(line: 1359, column: 13, scope: !7165)
!7217 = !DILocation(line: 1359, column: 11, scope: !7165)
!7218 = !DILocation(line: 1360, column: 8, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1360, column: 8)
!7220 = !DILocation(line: 1360, column: 8, scope: !7165)
!7221 = !DILocation(line: 1361, column: 5, scope: !7219)
!7222 = !DILocation(line: 1363, column: 4, scope: !7165)
!7223 = !DILocation(line: 1366, column: 34, scope: !7165)
!7224 = !DILocation(line: 1366, column: 42, scope: !7165)
!7225 = !DILocation(line: 1366, column: 13, scope: !7165)
!7226 = !DILocation(line: 1366, column: 11, scope: !7165)
!7227 = !DILocation(line: 1367, column: 8, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1367, column: 8)
!7229 = !DILocation(line: 1367, column: 8, scope: !7165)
!7230 = !DILocation(line: 1368, column: 5, scope: !7228)
!7231 = !DILocation(line: 1370, column: 4, scope: !7165)
!7232 = !DILocation(line: 1377, column: 41, scope: !7165)
!7233 = !DILocation(line: 1377, column: 52, scope: !7165)
!7234 = !DILocation(line: 1377, column: 13, scope: !7165)
!7235 = !DILocation(line: 1377, column: 11, scope: !7165)
!7236 = !DILocation(line: 1378, column: 8, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1378, column: 8)
!7238 = !DILocation(line: 1378, column: 8, scope: !7165)
!7239 = !DILocation(line: 1379, column: 5, scope: !7237)
!7240 = !DILocation(line: 1381, column: 4, scope: !7165)
!7241 = !DILocation(line: 1383, column: 35, scope: !7165)
!7242 = !DILocation(line: 1383, column: 13, scope: !7165)
!7243 = !DILocation(line: 1383, column: 11, scope: !7165)
!7244 = !DILocation(line: 1384, column: 8, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1384, column: 8)
!7246 = !DILocation(line: 1384, column: 8, scope: !7165)
!7247 = !DILocation(line: 1385, column: 5, scope: !7245)
!7248 = !DILocation(line: 1387, column: 4, scope: !7165)
!7249 = !DILocation(line: 1389, column: 36, scope: !7165)
!7250 = !DILocation(line: 1389, column: 13, scope: !7165)
!7251 = !DILocation(line: 1389, column: 11, scope: !7165)
!7252 = !DILocation(line: 1390, column: 8, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1390, column: 8)
!7254 = !DILocation(line: 1390, column: 8, scope: !7165)
!7255 = !DILocation(line: 1391, column: 5, scope: !7253)
!7256 = !DILocation(line: 1393, column: 4, scope: !7165)
!7257 = !DILocation(line: 1395, column: 38, scope: !7165)
!7258 = !DILocation(line: 1395, column: 13, scope: !7165)
!7259 = !DILocation(line: 1395, column: 11, scope: !7165)
!7260 = !DILocation(line: 1396, column: 8, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1396, column: 8)
!7262 = !DILocation(line: 1396, column: 8, scope: !7165)
!7263 = !DILocation(line: 1397, column: 5, scope: !7261)
!7264 = !DILocation(line: 1399, column: 4, scope: !7165)
!7265 = !DILocation(line: 1401, column: 35, scope: !7165)
!7266 = !DILocation(line: 1401, column: 13, scope: !7165)
!7267 = !DILocation(line: 1401, column: 11, scope: !7165)
!7268 = !DILocation(line: 1402, column: 8, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1402, column: 8)
!7270 = !DILocation(line: 1402, column: 8, scope: !7165)
!7271 = !DILocation(line: 1403, column: 5, scope: !7269)
!7272 = !DILocation(line: 1405, column: 4, scope: !7165)
!7273 = !DILocation(line: 1407, column: 38, scope: !7165)
!7274 = !DILocation(line: 1407, column: 13, scope: !7165)
!7275 = !DILocation(line: 1407, column: 11, scope: !7165)
!7276 = !DILocation(line: 1408, column: 8, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1408, column: 8)
!7278 = !DILocation(line: 1408, column: 8, scope: !7165)
!7279 = !DILocation(line: 1409, column: 5, scope: !7277)
!7280 = !DILocation(line: 1411, column: 4, scope: !7165)
!7281 = !DILocation(line: 1413, column: 4, scope: !7165)
!7282 = !DILocation(line: 1415, column: 2, scope: !7148)
!7283 = !DILocation(line: 1302, column: 45, scope: !7144)
!7284 = !DILocation(line: 1302, column: 2, scope: !7144)
!7285 = distinct !{!7285, !7146, !7286}
!7286 = !DILocation(line: 1415, column: 2, scope: !7141)
!7287 = !DILocation(line: 1418, column: 6, scope: !7121)
!7288 = !DILocation(line: 1419, column: 24, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 1419, column: 6)
!7290 = !DILocation(line: 1419, column: 7, scope: !7289)
!7291 = !DILocation(line: 1419, column: 6, scope: !7121)
!7292 = !DILocation(line: 1420, column: 20, scope: !7289)
!7293 = !DILocation(line: 1420, column: 3, scope: !7289)
!7294 = !DILocation(line: 1422, column: 1, scope: !7121)
!7295 = distinct !DISubprogram(name: "acpi_video_get_backlight_type", scope: !108, file: !108, line: 76, type: !7296, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7296 = !DISubroutineType(types: !7297)
!7297 = !{!107}
!7298 = !DILocation(line: 78, column: 2, scope: !7295)
!7299 = distinct !DISubprogram(name: "sony_nc_backlight_setup", scope: !3, file: !3, line: 3099, type: !2410, scopeLine: 3100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7300 = !DILocalVariable(name: "max_brightness", scope: !7299, file: !3, line: 3101, type: !109)
!7301 = !DILocation(line: 3101, column: 6, scope: !7299)
!7302 = !DILocalVariable(name: "ops", scope: !7299, file: !3, line: 3102, type: !308)
!7303 = !DILocation(line: 3102, column: 30, scope: !7299)
!7304 = !DILocalVariable(name: "props", scope: !7299, file: !3, line: 3103, type: !261)
!7305 = !DILocation(line: 3103, column: 30, scope: !7299)
!7306 = !DILocation(line: 3105, column: 6, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3105, column: 6)
!7308 = !DILocation(line: 3105, column: 34, scope: !7307)
!7309 = !DILocation(line: 3105, column: 6, scope: !7299)
!7310 = !DILocation(line: 3106, column: 7, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 3105, column: 40)
!7312 = !DILocation(line: 3107, column: 26, scope: !7311)
!7313 = !DILocation(line: 3108, column: 3, scope: !7311)
!7314 = !DILocation(line: 3109, column: 34, scope: !7311)
!7315 = !DILocation(line: 3109, column: 20, scope: !7311)
!7316 = !DILocation(line: 3109, column: 57, scope: !7311)
!7317 = !DILocation(line: 3109, column: 43, scope: !7311)
!7318 = !DILocation(line: 3109, column: 41, scope: !7311)
!7319 = !DILocation(line: 3109, column: 18, scope: !7311)
!7320 = !DILocation(line: 3111, column: 2, scope: !7311)
!7321 = !DILocation(line: 3111, column: 13, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 3111, column: 13)
!7323 = !DILocation(line: 3111, column: 41, scope: !7322)
!7324 = !DILocation(line: 3111, column: 13, scope: !7307)
!7325 = !DILocation(line: 3112, column: 7, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3111, column: 47)
!7327 = !DILocation(line: 3113, column: 26, scope: !7326)
!7328 = !DILocation(line: 3114, column: 3, scope: !7326)
!7329 = !DILocation(line: 3115, column: 34, scope: !7326)
!7330 = !DILocation(line: 3115, column: 20, scope: !7326)
!7331 = !DILocation(line: 3115, column: 57, scope: !7326)
!7332 = !DILocation(line: 3115, column: 43, scope: !7326)
!7333 = !DILocation(line: 3115, column: 41, scope: !7326)
!7334 = !DILocation(line: 3115, column: 18, scope: !7326)
!7335 = !DILocation(line: 3117, column: 2, scope: !7326)
!7336 = !DILocation(line: 3117, column: 13, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 3117, column: 13)
!7338 = !DILocation(line: 3117, column: 41, scope: !7337)
!7339 = !DILocation(line: 3117, column: 13, scope: !7322)
!7340 = !DILocation(line: 3118, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3117, column: 47)
!7342 = !DILocation(line: 3119, column: 26, scope: !7341)
!7343 = !DILocation(line: 3120, column: 3, scope: !7341)
!7344 = !DILocation(line: 3121, column: 34, scope: !7341)
!7345 = !DILocation(line: 3121, column: 20, scope: !7341)
!7346 = !DILocation(line: 3121, column: 57, scope: !7341)
!7347 = !DILocation(line: 3121, column: 43, scope: !7341)
!7348 = !DILocation(line: 3121, column: 41, scope: !7341)
!7349 = !DILocation(line: 3121, column: 18, scope: !7341)
!7350 = !DILocation(line: 3123, column: 2, scope: !7341)
!7351 = !DILocation(line: 3123, column: 13, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3123, column: 13)
!7353 = !DILocation(line: 3123, column: 41, scope: !7352)
!7354 = !DILocation(line: 3123, column: 13, scope: !7337)
!7355 = !DILocation(line: 3124, column: 7, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 3123, column: 47)
!7357 = !DILocation(line: 3125, column: 26, scope: !7356)
!7358 = !DILocation(line: 3126, column: 3, scope: !7356)
!7359 = !DILocation(line: 3127, column: 34, scope: !7356)
!7360 = !DILocation(line: 3127, column: 20, scope: !7356)
!7361 = !DILocation(line: 3127, column: 57, scope: !7356)
!7362 = !DILocation(line: 3127, column: 43, scope: !7356)
!7363 = !DILocation(line: 3127, column: 41, scope: !7356)
!7364 = !DILocation(line: 3127, column: 18, scope: !7356)
!7365 = !DILocation(line: 3129, column: 2, scope: !7356)
!7366 = !DILocation(line: 3129, column: 13, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 3129, column: 13)
!7368 = !DILocation(line: 3129, column: 41, scope: !7367)
!7369 = !DILocation(line: 3129, column: 13, scope: !7352)
!7370 = !DILocation(line: 3130, column: 7, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 3129, column: 47)
!7372 = !DILocation(line: 3131, column: 26, scope: !7371)
!7373 = !DILocation(line: 3132, column: 3, scope: !7371)
!7374 = !DILocation(line: 3133, column: 34, scope: !7371)
!7375 = !DILocation(line: 3133, column: 20, scope: !7371)
!7376 = !DILocation(line: 3133, column: 57, scope: !7371)
!7377 = !DILocation(line: 3133, column: 43, scope: !7371)
!7378 = !DILocation(line: 3133, column: 41, scope: !7371)
!7379 = !DILocation(line: 3133, column: 18, scope: !7371)
!7380 = !DILocation(line: 3135, column: 2, scope: !7371)
!7381 = !DILocation(line: 3135, column: 29, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 3135, column: 13)
!7383 = !DILocation(line: 3135, column: 13, scope: !7382)
!7384 = !DILocation(line: 3135, column: 13, scope: !7367)
!7385 = !DILocation(line: 3136, column: 7, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 3135, column: 59)
!7387 = !DILocation(line: 3137, column: 18, scope: !7386)
!7388 = !DILocation(line: 3139, column: 2, scope: !7386)
!7389 = !DILocation(line: 3140, column: 3, scope: !7382)
!7390 = !DILocation(line: 3142, column: 2, scope: !7299)
!7391 = !DILocation(line: 3143, column: 8, scope: !7299)
!7392 = !DILocation(line: 3143, column: 13, scope: !7299)
!7393 = !DILocation(line: 3144, column: 25, scope: !7299)
!7394 = !DILocation(line: 3144, column: 8, scope: !7299)
!7395 = !DILocation(line: 3144, column: 23, scope: !7299)
!7396 = !DILocation(line: 3147, column: 13, scope: !7299)
!7397 = !DILocation(line: 3145, column: 22, scope: !7299)
!7398 = !DILocation(line: 3145, column: 20, scope: !7299)
!7399 = !DILocation(line: 3149, column: 27, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 3149, column: 6)
!7401 = !DILocation(line: 3149, column: 13, scope: !7400)
!7402 = !DILocation(line: 3149, column: 6, scope: !7400)
!7403 = !DILocation(line: 3149, column: 6, scope: !7299)
!7404 = !DILocation(line: 3150, column: 3, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 3149, column: 33)
!7406 = !DILocation(line: 3151, column: 21, scope: !7405)
!7407 = !DILocation(line: 3152, column: 2, scope: !7405)
!7408 = !DILocation(line: 3154, column: 4, scope: !7400)
!7409 = !DILocation(line: 3154, column: 9, scope: !7400)
!7410 = !DILocation(line: 3154, column: 38, scope: !7400)
!7411 = !DILocation(line: 3153, column: 17, scope: !7400)
!7412 = !DILocation(line: 3153, column: 22, scope: !7400)
!7413 = !DILocation(line: 3153, column: 28, scope: !7400)
!7414 = !DILocation(line: 3153, column: 39, scope: !7400)
!7415 = !DILocation(line: 3155, column: 1, scope: !7299)
!7416 = distinct !DISubprogram(name: "sony_nc_backlight_cleanup", scope: !3, file: !3, line: 3157, type: !2410, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7417 = !DILocation(line: 3159, column: 44, scope: !7416)
!7418 = !DILocation(line: 3159, column: 2, scope: !7416)
!7419 = !DILocation(line: 3160, column: 1, scope: !7416)
!7420 = distinct !DISubprogram(name: "sony_nc_function_cleanup", scope: !3, file: !3, line: 1424, type: !5045, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7421 = !DILocalVariable(name: "pd", arg: 1, scope: !7420, file: !3, line: 1424, type: !5006)
!7422 = !DILocation(line: 1424, column: 62, scope: !7420)
!7423 = !DILocalVariable(name: "i", scope: !7420, file: !3, line: 1426, type: !7)
!7424 = !DILocation(line: 1426, column: 15, scope: !7420)
!7425 = !DILocalVariable(name: "result", scope: !7420, file: !3, line: 1426, type: !7)
!7426 = !DILocation(line: 1426, column: 18, scope: !7420)
!7427 = !DILocalVariable(name: "bitmask", scope: !7420, file: !3, line: 1426, type: !7)
!7428 = !DILocation(line: 1426, column: 26, scope: !7420)
!7429 = !DILocalVariable(name: "handle", scope: !7420, file: !3, line: 1426, type: !7)
!7430 = !DILocation(line: 1426, column: 35, scope: !7420)
!7431 = !DILocation(line: 1428, column: 7, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1428, column: 6)
!7433 = !DILocation(line: 1428, column: 6, scope: !7420)
!7434 = !DILocation(line: 1429, column: 3, scope: !7432)
!7435 = !DILocation(line: 1432, column: 19, scope: !7420)
!7436 = !DILocation(line: 1432, column: 2, scope: !7420)
!7437 = !DILocation(line: 1433, column: 19, scope: !7420)
!7438 = !DILocation(line: 1433, column: 2, scope: !7420)
!7439 = !DILocation(line: 1436, column: 9, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1436, column: 2)
!7441 = !DILocation(line: 1436, column: 7, scope: !7440)
!7442 = !DILocation(line: 1436, column: 14, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 1436, column: 2)
!7444 = !DILocation(line: 1436, column: 16, scope: !7443)
!7445 = !DILocation(line: 1436, column: 2, scope: !7440)
!7446 = !DILocation(line: 1438, column: 12, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 1436, column: 49)
!7448 = !DILocation(line: 1438, column: 21, scope: !7447)
!7449 = !DILocation(line: 1438, column: 25, scope: !7447)
!7450 = !DILocation(line: 1438, column: 10, scope: !7447)
!7451 = !DILocation(line: 1440, column: 8, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1440, column: 7)
!7453 = !DILocation(line: 1440, column: 7, scope: !7447)
!7454 = !DILocation(line: 1441, column: 4, scope: !7452)
!7455 = !DILocation(line: 1443, column: 11, scope: !7447)
!7456 = !DILocation(line: 1443, column: 3, scope: !7447)
!7457 = !DILocation(line: 1446, column: 29, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1443, column: 19)
!7459 = !DILocation(line: 1446, column: 4, scope: !7458)
!7460 = !DILocation(line: 1447, column: 4, scope: !7458)
!7461 = !DILocation(line: 1451, column: 33, scope: !7458)
!7462 = !DILocation(line: 1451, column: 4, scope: !7458)
!7463 = !DILocation(line: 1452, column: 4, scope: !7458)
!7464 = !DILocation(line: 1455, column: 31, scope: !7458)
!7465 = !DILocation(line: 1455, column: 4, scope: !7458)
!7466 = !DILocation(line: 1456, column: 4, scope: !7458)
!7467 = !DILocation(line: 1458, column: 28, scope: !7458)
!7468 = !DILocation(line: 1458, column: 4, scope: !7458)
!7469 = !DILocation(line: 1459, column: 4, scope: !7458)
!7470 = !DILocation(line: 1463, column: 31, scope: !7458)
!7471 = !DILocation(line: 1463, column: 4, scope: !7458)
!7472 = !DILocation(line: 1464, column: 4, scope: !7458)
!7473 = !DILocation(line: 1466, column: 39, scope: !7458)
!7474 = !DILocation(line: 1466, column: 4, scope: !7458)
!7475 = !DILocation(line: 1467, column: 4, scope: !7458)
!7476 = !DILocation(line: 1470, column: 4, scope: !7458)
!7477 = !DILocation(line: 1471, column: 4, scope: !7458)
!7478 = !DILocation(line: 1478, column: 34, scope: !7458)
!7479 = !DILocation(line: 1478, column: 38, scope: !7458)
!7480 = !DILocation(line: 1478, column: 4, scope: !7458)
!7481 = !DILocation(line: 1479, column: 4, scope: !7458)
!7482 = !DILocation(line: 1481, column: 28, scope: !7458)
!7483 = !DILocation(line: 1481, column: 4, scope: !7458)
!7484 = !DILocation(line: 1482, column: 4, scope: !7458)
!7485 = !DILocation(line: 1484, column: 29, scope: !7458)
!7486 = !DILocation(line: 1484, column: 4, scope: !7458)
!7487 = !DILocation(line: 1485, column: 4, scope: !7458)
!7488 = !DILocation(line: 1487, column: 31, scope: !7458)
!7489 = !DILocation(line: 1487, column: 4, scope: !7458)
!7490 = !DILocation(line: 1488, column: 4, scope: !7458)
!7491 = !DILocation(line: 1490, column: 28, scope: !7458)
!7492 = !DILocation(line: 1490, column: 4, scope: !7458)
!7493 = !DILocation(line: 1491, column: 4, scope: !7458)
!7494 = !DILocation(line: 1493, column: 31, scope: !7458)
!7495 = !DILocation(line: 1493, column: 4, scope: !7458)
!7496 = !DILocation(line: 1494, column: 4, scope: !7458)
!7497 = !DILocation(line: 1496, column: 4, scope: !7458)
!7498 = !DILocation(line: 1498, column: 2, scope: !7447)
!7499 = !DILocation(line: 1436, column: 45, scope: !7443)
!7500 = !DILocation(line: 1436, column: 2, scope: !7443)
!7501 = distinct !{!7501, !7445, !7502}
!7502 = !DILocation(line: 1498, column: 2, scope: !7440)
!7503 = !DILocation(line: 1501, column: 26, scope: !7420)
!7504 = !DILocation(line: 1501, column: 2, scope: !7420)
!7505 = !DILocation(line: 1502, column: 1, scope: !7420)
!7506 = distinct !DISubprogram(name: "sony_nc_handles_cleanup", scope: !3, file: !3, line: 867, type: !5004, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7507 = !DILocalVariable(name: "pd", arg: 1, scope: !7506, file: !3, line: 867, type: !5006)
!7508 = !DILocation(line: 867, column: 60, scope: !7506)
!7509 = !DILocation(line: 869, column: 6, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 869, column: 6)
!7511 = !DILocation(line: 869, column: 6, scope: !7506)
!7512 = !DILocation(line: 870, column: 7, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 870, column: 7)
!7514 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 869, column: 15)
!7515 = !DILocation(line: 870, column: 7, scope: !7514)
!7516 = !DILocation(line: 871, column: 24, scope: !7513)
!7517 = !DILocation(line: 871, column: 28, scope: !7513)
!7518 = !DILocation(line: 871, column: 34, scope: !7513)
!7519 = !DILocation(line: 871, column: 43, scope: !7513)
!7520 = !DILocation(line: 871, column: 4, scope: !7513)
!7521 = !DILocation(line: 872, column: 9, scope: !7514)
!7522 = !DILocation(line: 872, column: 3, scope: !7514)
!7523 = !DILocation(line: 873, column: 11, scope: !7514)
!7524 = !DILocation(line: 874, column: 2, scope: !7514)
!7525 = !DILocation(line: 875, column: 2, scope: !7506)
!7526 = distinct !DISubprogram(name: "sony_laptop_remove_input", scope: !3, file: !3, line: 533, type: !2410, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7527 = !DILocalVariable(name: "v", arg: 1, scope: !7528, file: !6632, line: 121, type: !6635)
!7528 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !6632, file: !6632, line: 121, type: !7529, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7529 = !DISubroutineType(types: !7530)
!7530 = !{!844, !6635}
!7531 = !DILocation(line: 121, column: 64, scope: !7528, inlinedAt: !7532)
!7532 = distinct !DILocation(line: 749, column: 9, scope: !7533, inlinedAt: !7534)
!7533 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !6639, file: !6639, line: 746, type: !7529, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7534 = distinct !DILocation(line: 538, column: 7, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 538, column: 6)
!7536 = !DILocalVariable(name: "c", scope: !7537, file: !6632, line: 123, type: !844)
!7537 = distinct !DILexicalBlock(scope: !7528, file: !6632, line: 123, column: 9)
!7538 = !DILocation(line: 123, column: 9, scope: !7537, inlinedAt: !7532)
!7539 = !DILocation(line: 99, column: 79, scope: !6642, inlinedAt: !7540)
!7540 = distinct !DILocation(line: 748, column: 2, scope: !7533, inlinedAt: !7534)
!7541 = !DILocation(line: 99, column: 89, scope: !6642, inlinedAt: !7540)
!7542 = !DILocalVariable(name: "v", arg: 1, scope: !7533, file: !6639, line: 746, type: !6635)
!7543 = !DILocation(line: 746, column: 31, scope: !7533, inlinedAt: !7534)
!7544 = !DILocalVariable(name: "kp", scope: !7526, file: !3, line: 535, type: !7545)
!7545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sony_laptop_keypress", file: !3, line: 203, size: 128, elements: !7546)
!7546 = !{!7547, !7548}
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7545, file: !3, line: 204, baseType: !5061, size: 64)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7545, file: !3, line: 205, baseType: !109, size: 32, offset: 64)
!7549 = !DILocation(line: 535, column: 30, scope: !7526)
!7550 = !DILocation(line: 748, column: 31, scope: !7533, inlinedAt: !7534)
!7551 = !DILocation(line: 101, column: 20, scope: !6642, inlinedAt: !7540)
!7552 = !DILocation(line: 101, column: 23, scope: !6642, inlinedAt: !7540)
!7553 = !DILocation(line: 101, column: 2, scope: !6642, inlinedAt: !7540)
!7554 = !DILocation(line: 102, column: 2, scope: !6642, inlinedAt: !7540)
!7555 = !DILocation(line: 749, column: 34, scope: !7533, inlinedAt: !7534)
!7556 = !{i32 -2146508261, i32 -2146508194}
!7557 = !DILocation(line: 538, column: 6, scope: !7526)
!7558 = !DILocation(line: 539, column: 3, scope: !7535)
!7559 = !DILocation(line: 541, column: 2, scope: !7526)
!7560 = !DILocation(line: 547, column: 2, scope: !7526)
!7561 = !DILocalVariable(name: "__tmp", scope: !7562, file: !3, line: 547, type: !6843)
!7562 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 547, column: 9)
!7563 = !DILocation(line: 547, column: 9, scope: !7562)
!7564 = !DILocalVariable(name: "__buf", scope: !7562, file: !3, line: 547, type: !177)
!7565 = !DILocalVariable(name: "__n", scope: !7562, file: !3, line: 547, type: !193)
!7566 = !DILocalVariable(name: "__recsize", scope: !7562, file: !3, line: 547, type: !7567)
!7567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!7568 = !DILocalVariable(name: "__kfifo", scope: !7562, file: !3, line: 547, type: !6846)
!7569 = !DILocation(line: 547, column: 9, scope: !7526)
!7570 = !DILocation(line: 548, column: 39, scope: !7526)
!7571 = !DILocation(line: 549, column: 23, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 548, column: 54)
!7573 = !DILocation(line: 549, column: 31, scope: !7572)
!7574 = !DILocation(line: 549, column: 3, scope: !7572)
!7575 = !DILocation(line: 550, column: 17, scope: !7572)
!7576 = !DILocation(line: 550, column: 3, scope: !7572)
!7577 = distinct !{!7577, !7560, !7578}
!7578 = !DILocation(line: 551, column: 2, scope: !7526)
!7579 = !DILocation(line: 554, column: 44, scope: !7526)
!7580 = !DILocation(line: 554, column: 2, scope: !7526)
!7581 = !DILocation(line: 555, column: 28, scope: !7526)
!7582 = !DILocation(line: 557, column: 24, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 557, column: 6)
!7584 = !DILocation(line: 557, column: 6, scope: !7583)
!7585 = !DILocation(line: 557, column: 6, scope: !7526)
!7586 = !DILocation(line: 558, column: 45, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 557, column: 33)
!7588 = !DILocation(line: 558, column: 3, scope: !7587)
!7589 = !DILocation(line: 559, column: 29, scope: !7587)
!7590 = !DILocation(line: 560, column: 2, scope: !7587)
!7591 = !DILocalVariable(name: "__tmp", scope: !7592, file: !3, line: 562, type: !6843)
!7592 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 562, column: 2)
!7593 = !DILocation(line: 562, column: 2, scope: !7592)
!7594 = !DILocalVariable(name: "__kfifo", scope: !7592, file: !3, line: 562, type: !6846)
!7595 = !DILocation(line: 562, column: 2, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 562, column: 2)
!7597 = !DILocation(line: 563, column: 1, scope: !7526)
!7598 = distinct !DISubprogram(name: "sony_pf_remove", scope: !3, file: !3, line: 609, type: !2410, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7599 = !DILocation(line: 121, column: 64, scope: !7528, inlinedAt: !7600)
!7600 = distinct !DILocation(line: 749, column: 9, scope: !7533, inlinedAt: !7601)
!7601 = distinct !DILocation(line: 612, column: 7, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 612, column: 6)
!7603 = !DILocation(line: 123, column: 9, scope: !7537, inlinedAt: !7600)
!7604 = !DILocation(line: 99, column: 79, scope: !6642, inlinedAt: !7605)
!7605 = distinct !DILocation(line: 748, column: 2, scope: !7533, inlinedAt: !7601)
!7606 = !DILocation(line: 99, column: 89, scope: !6642, inlinedAt: !7605)
!7607 = !DILocation(line: 746, column: 31, scope: !7533, inlinedAt: !7601)
!7608 = !DILocation(line: 748, column: 31, scope: !7533, inlinedAt: !7601)
!7609 = !DILocation(line: 101, column: 20, scope: !6642, inlinedAt: !7605)
!7610 = !DILocation(line: 101, column: 23, scope: !6642, inlinedAt: !7605)
!7611 = !DILocation(line: 101, column: 2, scope: !6642, inlinedAt: !7605)
!7612 = !DILocation(line: 102, column: 2, scope: !6642, inlinedAt: !7605)
!7613 = !DILocation(line: 749, column: 34, scope: !7533, inlinedAt: !7601)
!7614 = !DILocation(line: 612, column: 6, scope: !7598)
!7615 = !DILocation(line: 613, column: 3, scope: !7602)
!7616 = !DILocation(line: 615, column: 29, scope: !7598)
!7617 = !DILocation(line: 615, column: 2, scope: !7598)
!7618 = !DILocation(line: 616, column: 2, scope: !7598)
!7619 = !DILocation(line: 617, column: 1, scope: !7598)
!7620 = distinct !DISubprogram(name: "sony_nc_rfkill_cleanup", scope: !3, file: !3, line: 1579, type: !2410, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7621 = !DILocalVariable(name: "i", scope: !7620, file: !3, line: 1581, type: !109)
!7622 = !DILocation(line: 1581, column: 6, scope: !7620)
!7623 = !DILocation(line: 1583, column: 9, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 1583, column: 2)
!7625 = !DILocation(line: 1583, column: 7, scope: !7624)
!7626 = !DILocation(line: 1583, column: 14, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 1583, column: 2)
!7628 = !DILocation(line: 1583, column: 16, scope: !7627)
!7629 = !DILocation(line: 1583, column: 2, scope: !7624)
!7630 = !DILocation(line: 1584, column: 27, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 1584, column: 7)
!7632 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 1583, column: 38)
!7633 = !DILocation(line: 1584, column: 7, scope: !7631)
!7634 = !DILocation(line: 1584, column: 7, scope: !7632)
!7635 = !DILocation(line: 1585, column: 42, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 1584, column: 31)
!7637 = !DILocation(line: 1585, column: 22, scope: !7636)
!7638 = !DILocation(line: 1585, column: 4, scope: !7636)
!7639 = !DILocation(line: 1586, column: 39, scope: !7636)
!7640 = !DILocation(line: 1586, column: 19, scope: !7636)
!7641 = !DILocation(line: 1586, column: 4, scope: !7636)
!7642 = !DILocation(line: 1587, column: 3, scope: !7636)
!7643 = !DILocation(line: 1588, column: 2, scope: !7632)
!7644 = !DILocation(line: 1583, column: 34, scope: !7627)
!7645 = !DILocation(line: 1583, column: 2, scope: !7627)
!7646 = distinct !{!7646, !7629, !7647}
!7647 = !DILocation(line: 1588, column: 2, scope: !7624)
!7648 = !DILocation(line: 1589, column: 1, scope: !7620)
!7649 = distinct !DISubprogram(name: "kasan_check_write", scope: !7650, file: !7650, line: 38, type: !7651, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7650 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!844, !6646, !7}
!7653 = !DILocalVariable(name: "p", arg: 1, scope: !7649, file: !7650, line: 38, type: !6646)
!7654 = !DILocation(line: 38, column: 59, scope: !7649)
!7655 = !DILocalVariable(name: "size", arg: 2, scope: !7649, file: !7650, line: 38, type: !7)
!7656 = !DILocation(line: 38, column: 75, scope: !7649)
!7657 = !DILocation(line: 40, column: 2, scope: !7649)
!7658 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7659, file: !7659, line: 178, type: !7660, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7659 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7660 = !DISubroutineType(types: !7661)
!7661 = !{null, !6646, !574, !109}
!7662 = !DILocalVariable(name: "ptr", arg: 1, scope: !7658, file: !7659, line: 178, type: !6646)
!7663 = !DILocation(line: 178, column: 60, scope: !7658)
!7664 = !DILocalVariable(name: "size", arg: 2, scope: !7658, file: !7659, line: 178, type: !574)
!7665 = !DILocation(line: 178, column: 72, scope: !7658)
!7666 = !DILocalVariable(name: "type", arg: 3, scope: !7658, file: !7659, line: 179, type: !109)
!7667 = !DILocation(line: 179, column: 15, scope: !7658)
!7668 = !DILocation(line: 179, column: 23, scope: !7658)
!7669 = distinct !DISubprogram(name: "__kfifo_int_must_check_helper", scope: !5339, file: !5339, line: 169, type: !3191, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7670 = !DILocalVariable(name: "val", arg: 1, scope: !7669, file: !5339, line: 169, type: !109)
!7671 = !DILocation(line: 169, column: 35, scope: !7669)
!7672 = !DILocation(line: 171, column: 9, scope: !7669)
!7673 = !DILocation(line: 171, column: 2, scope: !7669)
!7674 = distinct !DISubprogram(name: "do_sony_laptop_release_key", scope: !3, file: !3, line: 352, type: !532, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7675 = !DILocalVariable(name: "m", arg: 1, scope: !7676, file: !7677, line: 363, type: !2967)
!7676 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !7677, file: !7677, line: 363, type: !7678, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7677 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!193, !2967}
!7680 = !DILocation(line: 363, column: 74, scope: !7676, inlinedAt: !7681)
!7681 = distinct !DILocation(line: 368, column: 16, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 366, column: 6)
!7683 = !DILocalVariable(name: "lock", arg: 1, scope: !7684, file: !6797, line: 407, type: !1401)
!7684 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6797, file: !6797, line: 407, type: !7685, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{null, !1401, !193}
!7687 = !DILocation(line: 407, column: 64, scope: !7684, inlinedAt: !7688)
!7688 = distinct !DILocation(line: 370, column: 2, scope: !7674)
!7689 = !DILocalVariable(name: "flags", arg: 2, scope: !7684, file: !6797, line: 407, type: !193)
!7690 = !DILocation(line: 407, column: 84, scope: !7684, inlinedAt: !7688)
!7691 = !DILocation(line: 327, column: 67, scope: !6796, inlinedAt: !7692)
!7692 = distinct !DILocation(line: 357, column: 2, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 357, column: 2)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 357, column: 2)
!7695 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 357, column: 2)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 357, column: 2)
!7697 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 357, column: 2)
!7698 = !DILocalVariable(name: "unused", arg: 1, scope: !7674, file: !3, line: 352, type: !534)
!7699 = !DILocation(line: 352, column: 59, scope: !7674)
!7700 = !DILocalVariable(name: "kp", scope: !7674, file: !3, line: 354, type: !7545)
!7701 = !DILocation(line: 354, column: 30, scope: !7674)
!7702 = !DILocalVariable(name: "flags", scope: !7674, file: !3, line: 355, type: !193)
!7703 = !DILocation(line: 355, column: 16, scope: !7674)
!7704 = !DILocation(line: 357, column: 2, scope: !7674)
!7705 = !DILocation(line: 357, column: 2, scope: !7697)
!7706 = !DILocalVariable(name: "__dummy", scope: !7707, file: !3, line: 357, type: !193)
!7707 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 357, column: 2)
!7708 = !DILocation(line: 357, column: 2, scope: !7707)
!7709 = !DILocalVariable(name: "__dummy2", scope: !7707, file: !3, line: 357, type: !193)
!7710 = !DILocation(line: 357, column: 2, scope: !7696)
!7711 = !DILocation(line: 357, column: 2, scope: !7695)
!7712 = !DILocation(line: 357, column: 2, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 357, column: 2)
!7714 = !DILocalVariable(name: "__dummy", scope: !7715, file: !3, line: 357, type: !193)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 357, column: 2)
!7716 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 357, column: 2)
!7717 = !DILocation(line: 357, column: 2, scope: !7715)
!7718 = !DILocalVariable(name: "__dummy2", scope: !7715, file: !3, line: 357, type: !193)
!7719 = !DILocation(line: 357, column: 2, scope: !7716)
!7720 = !DILocation(line: 357, column: 2, scope: !7694)
!7721 = !{i32 -2140572586}
!7722 = !DILocation(line: 329, column: 10, scope: !6796, inlinedAt: !7692)
!7723 = !DILocation(line: 329, column: 16, scope: !6796, inlinedAt: !7692)
!7724 = !DILocation(line: 357, column: 2, scope: !7693)
!7725 = !DILocalVariable(name: "__tmp", scope: !7726, file: !3, line: 359, type: !6843)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 359, column: 6)
!7727 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 359, column: 6)
!7728 = !DILocation(line: 359, column: 6, scope: !7726)
!7729 = !DILocalVariable(name: "__buf", scope: !7726, file: !3, line: 359, type: !177)
!7730 = !DILocalVariable(name: "__n", scope: !7726, file: !3, line: 359, type: !193)
!7731 = !DILocalVariable(name: "__recsize", scope: !7726, file: !3, line: 359, type: !7567)
!7732 = !DILocalVariable(name: "__kfifo", scope: !7726, file: !3, line: 359, type: !6846)
!7733 = !DILocation(line: 359, column: 6, scope: !7727)
!7734 = !DILocation(line: 360, column: 43, scope: !7727)
!7735 = !DILocation(line: 359, column: 6, scope: !7674)
!7736 = !DILocation(line: 361, column: 23, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 360, column: 58)
!7738 = !DILocation(line: 361, column: 31, scope: !7737)
!7739 = !DILocation(line: 361, column: 3, scope: !7737)
!7740 = !DILocation(line: 362, column: 17, scope: !7737)
!7741 = !DILocation(line: 362, column: 3, scope: !7737)
!7742 = !DILocation(line: 363, column: 2, scope: !7737)
!7743 = !DILocalVariable(name: "__tmpl", scope: !7744, file: !3, line: 366, type: !6843)
!7744 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 366, column: 6)
!7745 = !DILocation(line: 366, column: 6, scope: !7744)
!7746 = !DILocation(line: 366, column: 41, scope: !7682)
!7747 = !DILocation(line: 366, column: 6, scope: !7674)
!7748 = !DILocation(line: 368, column: 6, scope: !7682)
!7749 = !DILocation(line: 365, column: 27, scope: !7750, inlinedAt: !7681)
!7750 = distinct !DILexicalBlock(scope: !7676, file: !7677, line: 365, column: 6)
!7751 = !DILocation(line: 365, column: 6, scope: !7750, inlinedAt: !7681)
!7752 = !DILocation(line: 365, column: 6, scope: !7676, inlinedAt: !7681)
!7753 = !DILocation(line: 366, column: 12, scope: !7754, inlinedAt: !7681)
!7754 = distinct !DILexicalBlock(scope: !7755, file: !7677, line: 366, column: 7)
!7755 = distinct !DILexicalBlock(scope: !7750, file: !7677, line: 365, column: 31)
!7756 = !DILocation(line: 366, column: 14, scope: !7754, inlinedAt: !7681)
!7757 = !DILocation(line: 366, column: 7, scope: !7755, inlinedAt: !7681)
!7758 = !DILocation(line: 367, column: 4, scope: !7754, inlinedAt: !7681)
!7759 = !DILocation(line: 368, column: 28, scope: !7755, inlinedAt: !7681)
!7760 = !DILocation(line: 368, column: 10, scope: !7755, inlinedAt: !7681)
!7761 = !DILocation(line: 368, column: 3, scope: !7755, inlinedAt: !7681)
!7762 = !DILocation(line: 370, column: 29, scope: !7763, inlinedAt: !7681)
!7763 = distinct !DILexicalBlock(scope: !7750, file: !7677, line: 369, column: 9)
!7764 = !DILocation(line: 370, column: 10, scope: !7763, inlinedAt: !7681)
!7765 = !DILocation(line: 370, column: 3, scope: !7763, inlinedAt: !7681)
!7766 = !DILocation(line: 372, column: 1, scope: !7676, inlinedAt: !7681)
!7767 = !DILocation(line: 368, column: 14, scope: !7682)
!7768 = !DILocation(line: 367, column: 3, scope: !7682)
!7769 = !DILocation(line: 370, column: 55, scope: !7674)
!7770 = !DILocalVariable(name: "__dummy", scope: !7771, file: !6797, line: 409, type: !193)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !6797, line: 409, column: 2)
!7772 = distinct !DILexicalBlock(scope: !7684, file: !6797, line: 409, column: 2)
!7773 = !DILocation(line: 409, column: 2, scope: !7771, inlinedAt: !7688)
!7774 = !DILocalVariable(name: "__dummy2", scope: !7771, file: !6797, line: 409, type: !193)
!7775 = !DILocalVariable(name: "__dummy", scope: !7776, file: !6797, line: 409, type: !193)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !6797, line: 409, column: 2)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !6797, line: 409, column: 2)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !6797, line: 409, column: 2)
!7779 = distinct !DILexicalBlock(scope: !7772, file: !6797, line: 409, column: 2)
!7780 = !DILocation(line: 409, column: 2, scope: !7776, inlinedAt: !7688)
!7781 = !DILocalVariable(name: "__dummy2", scope: !7776, file: !6797, line: 409, type: !193)
!7782 = !DILocation(line: 409, column: 2, scope: !7777, inlinedAt: !7688)
!7783 = !DILocation(line: 409, column: 2, scope: !7784, inlinedAt: !7688)
!7784 = distinct !DILexicalBlock(scope: !7779, file: !6797, line: 409, column: 2)
!7785 = !{i32 -2145355564}
!7786 = !DILocation(line: 409, column: 2, scope: !7787, inlinedAt: !7688)
!7787 = distinct !DILexicalBlock(scope: !7784, file: !6797, line: 409, column: 2)
!7788 = !DILocation(line: 371, column: 1, scope: !7674)
!7789 = distinct !DISubprogram(name: "__set_bit", scope: !7790, file: !7790, line: 25, type: !7791, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7790 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7791 = !DISubroutineType(types: !7792)
!7792 = !{null, !194, !7793}
!7793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7794, size: 64)
!7794 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !193)
!7795 = !DILocalVariable(name: "nr", arg: 1, scope: !7796, file: !7797, line: 66, type: !194)
!7796 = distinct !DISubprogram(name: "arch___set_bit", scope: !7797, file: !7797, line: 66, type: !7791, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7797 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7798 = !DILocation(line: 66, column: 21, scope: !7796, inlinedAt: !7799)
!7799 = distinct !DILocation(line: 28, column: 2, scope: !7789)
!7800 = !DILocalVariable(name: "addr", arg: 2, scope: !7796, file: !7797, line: 66, type: !7793)
!7801 = !DILocation(line: 66, column: 49, scope: !7796, inlinedAt: !7799)
!7802 = !DILocalVariable(name: "v", arg: 1, scope: !7803, file: !6643, line: 39, type: !6646)
!7803 = distinct !DISubprogram(name: "instrument_write", scope: !6643, file: !6643, line: 39, type: !6644, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7804 = !DILocation(line: 39, column: 67, scope: !7803, inlinedAt: !7805)
!7805 = distinct !DILocation(line: 27, column: 2, scope: !7789)
!7806 = !DILocalVariable(name: "size", arg: 2, scope: !7803, file: !6643, line: 39, type: !574)
!7807 = !DILocation(line: 39, column: 77, scope: !7803, inlinedAt: !7805)
!7808 = !DILocalVariable(name: "nr", arg: 1, scope: !7789, file: !7790, line: 25, type: !194)
!7809 = !DILocation(line: 25, column: 35, scope: !7789)
!7810 = !DILocalVariable(name: "addr", arg: 2, scope: !7789, file: !7790, line: 25, type: !7793)
!7811 = !DILocation(line: 25, column: 63, scope: !7789)
!7812 = !DILocation(line: 27, column: 19, scope: !7789)
!7813 = !DILocation(line: 27, column: 26, scope: !7789)
!7814 = !DILocation(line: 27, column: 24, scope: !7789)
!7815 = !DILocation(line: 41, column: 20, scope: !7803, inlinedAt: !7805)
!7816 = !DILocation(line: 41, column: 23, scope: !7803, inlinedAt: !7805)
!7817 = !DILocation(line: 41, column: 2, scope: !7803, inlinedAt: !7805)
!7818 = !DILocation(line: 42, column: 2, scope: !7803, inlinedAt: !7805)
!7819 = !DILocation(line: 28, column: 17, scope: !7789)
!7820 = !DILocation(line: 28, column: 21, scope: !7789)
!7821 = !DILocation(line: 68, column: 44, scope: !7796, inlinedAt: !7799)
!7822 = !DILocation(line: 68, column: 56, scope: !7796, inlinedAt: !7799)
!7823 = !DILocation(line: 68, column: 2, scope: !7796, inlinedAt: !7799)
!7824 = !{i32 -2147090328}
!7825 = !DILocation(line: 29, column: 1, scope: !7789)
!7826 = distinct !DISubprogram(name: "__clear_bit", scope: !7790, file: !7790, line: 40, type: !7791, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7827 = !DILocalVariable(name: "nr", arg: 1, scope: !7828, file: !7797, line: 92, type: !194)
!7828 = distinct !DISubprogram(name: "arch___clear_bit", scope: !7797, file: !7797, line: 92, type: !7791, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7829 = !DILocation(line: 92, column: 23, scope: !7828, inlinedAt: !7830)
!7830 = distinct !DILocation(line: 43, column: 2, scope: !7826)
!7831 = !DILocalVariable(name: "addr", arg: 2, scope: !7828, file: !7797, line: 92, type: !7793)
!7832 = !DILocation(line: 92, column: 51, scope: !7828, inlinedAt: !7830)
!7833 = !DILocation(line: 39, column: 67, scope: !7803, inlinedAt: !7834)
!7834 = distinct !DILocation(line: 42, column: 2, scope: !7826)
!7835 = !DILocation(line: 39, column: 77, scope: !7803, inlinedAt: !7834)
!7836 = !DILocalVariable(name: "nr", arg: 1, scope: !7826, file: !7790, line: 40, type: !194)
!7837 = !DILocation(line: 40, column: 37, scope: !7826)
!7838 = !DILocalVariable(name: "addr", arg: 2, scope: !7826, file: !7790, line: 40, type: !7793)
!7839 = !DILocation(line: 40, column: 65, scope: !7826)
!7840 = !DILocation(line: 42, column: 19, scope: !7826)
!7841 = !DILocation(line: 42, column: 26, scope: !7826)
!7842 = !DILocation(line: 42, column: 24, scope: !7826)
!7843 = !DILocation(line: 41, column: 20, scope: !7803, inlinedAt: !7834)
!7844 = !DILocation(line: 41, column: 23, scope: !7803, inlinedAt: !7834)
!7845 = !DILocation(line: 41, column: 2, scope: !7803, inlinedAt: !7834)
!7846 = !DILocation(line: 42, column: 2, scope: !7803, inlinedAt: !7834)
!7847 = !DILocation(line: 43, column: 19, scope: !7826)
!7848 = !DILocation(line: 43, column: 23, scope: !7826)
!7849 = !DILocation(line: 94, column: 44, scope: !7828, inlinedAt: !7830)
!7850 = !DILocation(line: 94, column: 56, scope: !7828, inlinedAt: !7830)
!7851 = !DILocation(line: 94, column: 2, scope: !7828, inlinedAt: !7830)
!7852 = !{i32 -2147089129}
!7853 = !DILocation(line: 44, column: 1, scope: !7826)
!7854 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6213, file: !6213, line: 666, type: !7855, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{!193}
!7857 = !DILocalVariable(name: "f", scope: !7854, file: !6213, line: 668, type: !193)
!7858 = !DILocation(line: 668, column: 16, scope: !7854)
!7859 = !DILocation(line: 670, column: 6, scope: !7854)
!7860 = !DILocation(line: 670, column: 4, scope: !7854)
!7861 = !DILocation(line: 671, column: 2, scope: !7854)
!7862 = !DILocation(line: 672, column: 9, scope: !7854)
!7863 = !DILocation(line: 672, column: 2, scope: !7854)
!7864 = distinct !DISubprogram(name: "__kfifo_uint_must_check_helper", scope: !5339, file: !5339, line: 163, type: !7865, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{!7, !7}
!7867 = !DILocalVariable(name: "val", arg: 1, scope: !7864, file: !5339, line: 163, type: !7)
!7868 = !DILocation(line: 163, column: 45, scope: !7864)
!7869 = !DILocation(line: 165, column: 9, scope: !7864)
!7870 = !DILocation(line: 165, column: 2, scope: !7864)
!7871 = distinct !DISubprogram(name: "input_report_key", scope: !5063, file: !5063, line: 415, type: !7872, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{null, !5061, !7, !109}
!7874 = !DILocalVariable(name: "dev", arg: 1, scope: !7871, file: !5063, line: 415, type: !5061)
!7875 = !DILocation(line: 415, column: 55, scope: !7871)
!7876 = !DILocalVariable(name: "code", arg: 2, scope: !7871, file: !5063, line: 415, type: !7)
!7877 = !DILocation(line: 415, column: 73, scope: !7871)
!7878 = !DILocalVariable(name: "value", arg: 3, scope: !7871, file: !5063, line: 415, type: !109)
!7879 = !DILocation(line: 415, column: 83, scope: !7871)
!7880 = !DILocation(line: 417, column: 14, scope: !7871)
!7881 = !DILocation(line: 417, column: 27, scope: !7871)
!7882 = !DILocation(line: 417, column: 35, scope: !7871)
!7883 = !DILocation(line: 417, column: 34, scope: !7871)
!7884 = !DILocation(line: 417, column: 33, scope: !7871)
!7885 = !DILocation(line: 417, column: 2, scope: !7871)
!7886 = !DILocation(line: 418, column: 1, scope: !7871)
!7887 = distinct !DISubprogram(name: "input_sync", scope: !5063, file: !5063, line: 440, type: !5236, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7888 = !DILocalVariable(name: "dev", arg: 1, scope: !7887, file: !5063, line: 440, type: !5061)
!7889 = !DILocation(line: 440, column: 49, scope: !7887)
!7890 = !DILocation(line: 442, column: 14, scope: !7887)
!7891 = !DILocation(line: 442, column: 2, scope: !7887)
!7892 = !DILocation(line: 443, column: 1, scope: !7887)
!7893 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6213, file: !6213, line: 646, type: !7855, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7894 = !DILocalVariable(name: "__ret", scope: !7895, file: !6213, line: 648, type: !193)
!7895 = distinct !DILexicalBlock(scope: !7893, file: !6213, line: 648, column: 9)
!7896 = !DILocation(line: 648, column: 9, scope: !7895)
!7897 = !DILocalVariable(name: "__edi", scope: !7895, file: !6213, line: 648, type: !193)
!7898 = !DILocalVariable(name: "__esi", scope: !7895, file: !6213, line: 648, type: !193)
!7899 = !DILocalVariable(name: "__edx", scope: !7895, file: !6213, line: 648, type: !193)
!7900 = !DILocalVariable(name: "__ecx", scope: !7895, file: !6213, line: 648, type: !193)
!7901 = !DILocalVariable(name: "__eax", scope: !7895, file: !6213, line: 648, type: !193)
!7902 = !DILocation(line: 648, column: 9, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !6213, line: 648, column: 9)
!7904 = distinct !DILexicalBlock(scope: !7895, file: !6213, line: 648, column: 9)
!7905 = !{i32 -2145669133, i32 -2145666818, i32 -2145666584, i32 -2145666533, i32 -2145666505, i32 -2145666480, i32 -2145666796, i32 -2145666783, i32 -2145666345, i32 -2145666226, i32 -2145666691, i32 -2145666664, i32 -2145666636, i32 -2145666606}
!7906 = !DILocalVariable(name: "__mask", scope: !7907, file: !6213, line: 648, type: !193)
!7907 = distinct !DILexicalBlock(scope: !7903, file: !6213, line: 648, column: 9)
!7908 = !DILocation(line: 648, column: 9, scope: !7907)
!7909 = !DILocation(line: 648, column: 9, scope: !7904)
!7910 = !DILocation(line: 648, column: 2, scope: !7893)
!7911 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6213, file: !6213, line: 656, type: !2410, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7912 = !DILocalVariable(name: "__edi", scope: !7913, file: !6213, line: 658, type: !193)
!7913 = distinct !DILexicalBlock(scope: !7911, file: !6213, line: 658, column: 2)
!7914 = !DILocation(line: 658, column: 2, scope: !7913)
!7915 = !DILocalVariable(name: "__esi", scope: !7913, file: !6213, line: 658, type: !193)
!7916 = !DILocalVariable(name: "__edx", scope: !7913, file: !6213, line: 658, type: !193)
!7917 = !DILocalVariable(name: "__ecx", scope: !7913, file: !6213, line: 658, type: !193)
!7918 = !DILocalVariable(name: "__eax", scope: !7913, file: !6213, line: 658, type: !193)
!7919 = !{i32 -2145662039, i32 -2145661307, i32 -2145661073, i32 -2145661022, i32 -2145660994, i32 -2145660969, i32 -2145661285, i32 -2145661272, i32 -2145660834, i32 -2145660715, i32 -2145661180, i32 -2145661153, i32 -2145661125, i32 -2145661095}
!7920 = !DILocation(line: 659, column: 1, scope: !7911)
!7921 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !7677, file: !7677, line: 308, type: !7678, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7922 = !DILocalVariable(name: "m", arg: 1, scope: !7921, file: !7677, line: 308, type: !2967)
!7923 = !DILocation(line: 308, column: 66, scope: !7921)
!7924 = !DILocation(line: 310, column: 10, scope: !7921)
!7925 = !DILocation(line: 310, column: 12, scope: !7921)
!7926 = !DILocation(line: 310, column: 34, scope: !7921)
!7927 = !DILocation(line: 310, column: 39, scope: !7921)
!7928 = !DILocation(line: 310, column: 2, scope: !7921)
!7929 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6213, file: !6213, line: 651, type: !7930, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{null, !193}
!7932 = !DILocalVariable(name: "f", arg: 1, scope: !7929, file: !6213, line: 651, type: !193)
!7933 = !DILocation(line: 651, column: 65, scope: !7929)
!7934 = !DILocalVariable(name: "__edi", scope: !7935, file: !6213, line: 653, type: !193)
!7935 = distinct !DILexicalBlock(scope: !7929, file: !6213, line: 653, column: 2)
!7936 = !DILocation(line: 653, column: 2, scope: !7935)
!7937 = !DILocalVariable(name: "__esi", scope: !7935, file: !6213, line: 653, type: !193)
!7938 = !DILocalVariable(name: "__edx", scope: !7935, file: !6213, line: 653, type: !193)
!7939 = !DILocalVariable(name: "__ecx", scope: !7935, file: !6213, line: 653, type: !193)
!7940 = !DILocalVariable(name: "__eax", scope: !7935, file: !6213, line: 653, type: !193)
!7941 = !{i32 -2145664666, i32 -2145663916, i32 -2145663682, i32 -2145663631, i32 -2145663603, i32 -2145663578, i32 -2145663894, i32 -2145663881, i32 -2145663443, i32 -2145663324, i32 -2145663789, i32 -2145663762, i32 -2145663734, i32 -2145663704}
!7942 = !DILocation(line: 654, column: 1, scope: !7929)
!7943 = distinct !DISubprogram(name: "sony_nc_buffer_call", scope: !3, file: !3, line: 761, type: !7944, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!109, !237, !181, !4279, !177, !574}
!7946 = !DILocalVariable(name: "handle", arg: 1, scope: !7943, file: !3, line: 761, type: !237)
!7947 = !DILocation(line: 761, column: 44, scope: !7943)
!7948 = !DILocalVariable(name: "name", arg: 2, scope: !7943, file: !3, line: 761, type: !181)
!7949 = !DILocation(line: 761, column: 58, scope: !7943)
!7950 = !DILocalVariable(name: "value", arg: 3, scope: !7943, file: !3, line: 761, type: !4279)
!7951 = !DILocation(line: 761, column: 69, scope: !7943)
!7952 = !DILocalVariable(name: "buffer", arg: 4, scope: !7943, file: !3, line: 762, type: !177)
!7953 = !DILocation(line: 762, column: 9, scope: !7943)
!7954 = !DILocalVariable(name: "buflen", arg: 5, scope: !7943, file: !3, line: 762, type: !574)
!7955 = !DILocation(line: 762, column: 24, scope: !7943)
!7956 = !DILocalVariable(name: "ret", scope: !7943, file: !3, line: 764, type: !109)
!7957 = !DILocation(line: 764, column: 6, scope: !7943)
!7958 = !DILocalVariable(name: "len", scope: !7943, file: !3, line: 765, type: !574)
!7959 = !DILocation(line: 765, column: 9, scope: !7943)
!7960 = !DILocalVariable(name: "object", scope: !7943, file: !3, line: 766, type: !197)
!7961 = !DILocation(line: 766, column: 21, scope: !7943)
!7962 = !DILocation(line: 766, column: 48, scope: !7943)
!7963 = !DILocation(line: 766, column: 56, scope: !7943)
!7964 = !DILocation(line: 766, column: 62, scope: !7943)
!7965 = !DILocation(line: 766, column: 30, scope: !7943)
!7966 = !DILocation(line: 768, column: 7, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 768, column: 6)
!7968 = !DILocation(line: 768, column: 6, scope: !7943)
!7969 = !DILocation(line: 769, column: 3, scope: !7967)
!7970 = !DILocation(line: 771, column: 7, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 771, column: 6)
!7972 = !DILocation(line: 771, column: 6, scope: !7943)
!7973 = !DILocation(line: 773, column: 2, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 771, column: 15)
!7975 = !DILocation(line: 773, column: 13, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 773, column: 13)
!7977 = !DILocation(line: 773, column: 21, scope: !7976)
!7978 = !DILocation(line: 773, column: 26, scope: !7976)
!7979 = !DILocation(line: 773, column: 13, scope: !7971)
!7980 = !DILocation(line: 774, column: 9, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 773, column: 47)
!7982 = !DILocation(line: 774, column: 7, scope: !7981)
!7983 = !DILocation(line: 775, column: 10, scope: !7981)
!7984 = !DILocation(line: 775, column: 21, scope: !7981)
!7985 = !DILocation(line: 775, column: 3, scope: !7981)
!7986 = !DILocation(line: 776, column: 10, scope: !7981)
!7987 = !DILocation(line: 776, column: 18, scope: !7981)
!7988 = !DILocation(line: 776, column: 26, scope: !7981)
!7989 = !DILocation(line: 776, column: 33, scope: !7981)
!7990 = !DILocation(line: 776, column: 42, scope: !7981)
!7991 = !DILocation(line: 776, column: 3, scope: !7981)
!7992 = !DILocation(line: 778, column: 2, scope: !7981)
!7993 = !DILocation(line: 778, column: 13, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 778, column: 13)
!7995 = !DILocation(line: 778, column: 21, scope: !7994)
!7996 = !DILocation(line: 778, column: 26, scope: !7994)
!7997 = !DILocation(line: 778, column: 13, scope: !7976)
!7998 = !DILocation(line: 779, column: 9, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 778, column: 48)
!8000 = !DILocation(line: 779, column: 7, scope: !7999)
!8001 = !DILocation(line: 780, column: 10, scope: !7999)
!8002 = !DILocation(line: 780, column: 21, scope: !7999)
!8003 = !DILocation(line: 780, column: 3, scope: !7999)
!8004 = !DILocation(line: 781, column: 10, scope: !7999)
!8005 = !DILocation(line: 781, column: 19, scope: !7999)
!8006 = !DILocation(line: 781, column: 27, scope: !7999)
!8007 = !DILocation(line: 781, column: 35, scope: !7999)
!8008 = !DILocation(line: 781, column: 3, scope: !7999)
!8009 = !DILocation(line: 781, column: 42, scope: !7999)
!8010 = !DILocation(line: 783, column: 2, scope: !7999)
!8011 = !DILocation(line: 784, column: 3, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 783, column: 9)
!8013 = !DILocation(line: 785, column: 7, scope: !8012)
!8014 = !DILocation(line: 788, column: 8, scope: !7943)
!8015 = !DILocation(line: 788, column: 2, scope: !7943)
!8016 = !DILocation(line: 789, column: 9, scope: !7943)
!8017 = !DILocation(line: 789, column: 2, scope: !7943)
!8018 = !DILocation(line: 790, column: 1, scope: !7943)
!8019 = distinct !DISubprogram(name: "__call_snc_method", scope: !3, file: !3, line: 725, type: !8020, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!197, !237, !181, !4279}
!8022 = !DILocalVariable(name: "handle", arg: 1, scope: !8019, file: !3, line: 725, type: !237)
!8023 = !DILocation(line: 725, column: 57, scope: !8019)
!8024 = !DILocalVariable(name: "method", arg: 2, scope: !8019, file: !3, line: 725, type: !181)
!8025 = !DILocation(line: 725, column: 71, scope: !8019)
!8026 = !DILocalVariable(name: "value", arg: 3, scope: !8019, file: !3, line: 726, type: !4279)
!8027 = !DILocation(line: 726, column: 8, scope: !8019)
!8028 = !DILocalVariable(name: "result", scope: !8019, file: !3, line: 728, type: !197)
!8029 = !DILocation(line: 728, column: 21, scope: !8019)
!8030 = !DILocalVariable(name: "output", scope: !8019, file: !3, line: 729, type: !8031)
!8031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_buffer", file: !184, line: 969, size: 128, elements: !8032)
!8032 = !{!8033, !8035}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8031, file: !184, line: 970, baseType: !8034, size: 64)
!8034 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_size", file: !184, line: 127, baseType: !207)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8031, file: !184, line: 971, baseType: !177, size: 64, offset: 64)
!8036 = !DILocation(line: 729, column: 21, scope: !8019)
!8037 = !DILocalVariable(name: "status", scope: !8019, file: !3, line: 730, type: !183)
!8038 = !DILocation(line: 730, column: 14, scope: !8019)
!8039 = !DILocation(line: 732, column: 6, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 732, column: 6)
!8041 = !DILocation(line: 732, column: 6, scope: !8019)
!8042 = !DILocalVariable(name: "params", scope: !8043, file: !3, line: 733, type: !8044)
!8043 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 732, column: 13)
!8044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_object_list", file: !184, line: 947, size: 128, elements: !8045)
!8045 = !{!8046, !8047}
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8044, file: !184, line: 948, baseType: !185, size: 32)
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !8044, file: !184, line: 949, baseType: !197, size: 64, offset: 64)
!8048 = !DILocation(line: 733, column: 27, scope: !8043)
!8049 = !DILocalVariable(name: "in", scope: !8043, file: !3, line: 734, type: !198)
!8050 = !DILocation(line: 734, column: 21, scope: !8043)
!8051 = !DILocation(line: 735, column: 6, scope: !8043)
!8052 = !DILocation(line: 735, column: 11, scope: !8043)
!8053 = !DILocation(line: 736, column: 23, scope: !8043)
!8054 = !DILocation(line: 736, column: 22, scope: !8043)
!8055 = !DILocation(line: 736, column: 6, scope: !8043)
!8056 = !DILocation(line: 736, column: 14, scope: !8043)
!8057 = !DILocation(line: 736, column: 20, scope: !8043)
!8058 = !DILocation(line: 737, column: 10, scope: !8043)
!8059 = !DILocation(line: 737, column: 16, scope: !8043)
!8060 = !DILocation(line: 738, column: 10, scope: !8043)
!8061 = !DILocation(line: 738, column: 18, scope: !8043)
!8062 = !DILocation(line: 739, column: 33, scope: !8043)
!8063 = !DILocation(line: 739, column: 41, scope: !8043)
!8064 = !DILocation(line: 739, column: 12, scope: !8043)
!8065 = !DILocation(line: 739, column: 10, scope: !8043)
!8066 = !DILocation(line: 740, column: 3, scope: !8043)
!8067 = !DILocation(line: 740, column: 3, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !3, line: 740, column: 3)
!8069 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 740, column: 3)
!8070 = !DILocation(line: 740, column: 3, scope: !8069)
!8071 = !DILocation(line: 743, column: 2, scope: !8043)
!8072 = !DILocation(line: 744, column: 33, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 743, column: 9)
!8074 = !DILocation(line: 744, column: 41, scope: !8073)
!8075 = !DILocation(line: 744, column: 12, scope: !8073)
!8076 = !DILocation(line: 744, column: 10, scope: !8073)
!8077 = !DILocation(line: 745, column: 3, scope: !8073)
!8078 = !DILocation(line: 745, column: 3, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 745, column: 3)
!8080 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 745, column: 3)
!8081 = !DILocation(line: 745, column: 3, scope: !8080)
!8082 = !DILocation(line: 748, column: 6, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 748, column: 6)
!8084 = !DILocation(line: 748, column: 6, scope: !8019)
!8085 = !DILocation(line: 749, column: 3, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 748, column: 28)
!8087 = !DILocation(line: 750, column: 3, scope: !8086)
!8088 = !DILocation(line: 753, column: 40, scope: !8019)
!8089 = !DILocation(line: 753, column: 11, scope: !8019)
!8090 = !DILocation(line: 753, column: 9, scope: !8019)
!8091 = !DILocation(line: 754, column: 7, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 754, column: 6)
!8093 = !DILocation(line: 754, column: 6, scope: !8019)
!8094 = !DILocation(line: 755, column: 3, scope: !8092)
!8095 = !DILocation(line: 755, column: 3, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 755, column: 3)
!8097 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 755, column: 3)
!8098 = !DILocation(line: 755, column: 3, scope: !8097)
!8099 = !DILocation(line: 757, column: 9, scope: !8019)
!8100 = !DILocation(line: 757, column: 2, scope: !8019)
!8101 = !DILocation(line: 758, column: 1, scope: !8019)
!8102 = distinct !DISubprogram(name: "kzalloc", scope: !122, file: !122, line: 662, type: !8103, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8103 = !DISubroutineType(types: !8104)
!8104 = !{!177, !574, !189}
!8105 = !DILocalVariable(name: "s", arg: 1, scope: !8106, file: !122, line: 445, type: !1258)
!8106 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !122, file: !122, line: 445, type: !8107, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8107 = !DISubroutineType(types: !8108)
!8108 = !{!177, !1258, !189, !574}
!8109 = !DILocation(line: 445, column: 72, scope: !8106, inlinedAt: !8110)
!8110 = distinct !DILocation(line: 552, column: 10, scope: !8111, inlinedAt: !8114)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !122, line: 540, column: 34)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !122, line: 540, column: 6)
!8113 = distinct !DISubprogram(name: "kmalloc", scope: !122, file: !122, line: 538, type: !8103, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8114 = distinct !DILocation(line: 664, column: 9, scope: !8102)
!8115 = !DILocalVariable(name: "flags", arg: 2, scope: !8106, file: !122, line: 446, type: !189)
!8116 = !DILocation(line: 446, column: 9, scope: !8106, inlinedAt: !8110)
!8117 = !DILocalVariable(name: "size", arg: 3, scope: !8106, file: !122, line: 446, type: !574)
!8118 = !DILocation(line: 446, column: 23, scope: !8106, inlinedAt: !8110)
!8119 = !DILocalVariable(name: "ret", scope: !8106, file: !122, line: 448, type: !177)
!8120 = !DILocation(line: 448, column: 8, scope: !8106, inlinedAt: !8110)
!8121 = !DILocalVariable(name: "flags", arg: 1, scope: !8122, file: !122, line: 318, type: !189)
!8122 = distinct !DISubprogram(name: "kmalloc_type", scope: !122, file: !122, line: 318, type: !8123, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8123 = !DISubroutineType(types: !8124)
!8124 = !{!121, !189}
!8125 = !DILocation(line: 318, column: 67, scope: !8122, inlinedAt: !8126)
!8126 = distinct !DILocation(line: 553, column: 20, scope: !8111, inlinedAt: !8114)
!8127 = !DILocalVariable(name: "size", arg: 1, scope: !8128, file: !122, line: 346, type: !574)
!8128 = distinct !DISubprogram(name: "kmalloc_index", scope: !122, file: !122, line: 346, type: !8129, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8129 = !DISubroutineType(types: !8130)
!8130 = !{!7, !574}
!8131 = !DILocation(line: 346, column: 58, scope: !8128, inlinedAt: !8132)
!8132 = distinct !DILocation(line: 547, column: 11, scope: !8111, inlinedAt: !8114)
!8133 = !DILocalVariable(name: "size", arg: 1, scope: !8134, file: !122, line: 472, type: !574)
!8134 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !122, file: !122, line: 472, type: !8135, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!177, !574, !189, !7}
!8137 = !DILocation(line: 472, column: 28, scope: !8134, inlinedAt: !8138)
!8138 = distinct !DILocation(line: 481, column: 9, scope: !8139, inlinedAt: !8140)
!8139 = distinct !DISubprogram(name: "kmalloc_large", scope: !122, file: !122, line: 478, type: !8103, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8140 = distinct !DILocation(line: 545, column: 11, scope: !8141, inlinedAt: !8114)
!8141 = distinct !DILexicalBlock(scope: !8111, file: !122, line: 544, column: 7)
!8142 = !DILocalVariable(name: "flags", arg: 2, scope: !8134, file: !122, line: 472, type: !189)
!8143 = !DILocation(line: 472, column: 40, scope: !8134, inlinedAt: !8138)
!8144 = !DILocalVariable(name: "order", arg: 3, scope: !8134, file: !122, line: 472, type: !7)
!8145 = !DILocation(line: 472, column: 60, scope: !8134, inlinedAt: !8138)
!8146 = !DILocalVariable(name: "size", arg: 1, scope: !8139, file: !122, line: 478, type: !574)
!8147 = !DILocation(line: 478, column: 51, scope: !8139, inlinedAt: !8140)
!8148 = !DILocalVariable(name: "flags", arg: 2, scope: !8139, file: !122, line: 478, type: !189)
!8149 = !DILocation(line: 478, column: 63, scope: !8139, inlinedAt: !8140)
!8150 = !DILocalVariable(name: "order", scope: !8139, file: !122, line: 480, type: !7)
!8151 = !DILocation(line: 480, column: 15, scope: !8139, inlinedAt: !8140)
!8152 = !DILocalVariable(name: "size", arg: 1, scope: !8113, file: !122, line: 538, type: !574)
!8153 = !DILocation(line: 538, column: 45, scope: !8113, inlinedAt: !8114)
!8154 = !DILocalVariable(name: "flags", arg: 2, scope: !8113, file: !122, line: 538, type: !189)
!8155 = !DILocation(line: 538, column: 57, scope: !8113, inlinedAt: !8114)
!8156 = !DILocalVariable(name: "index", scope: !8111, file: !122, line: 542, type: !7)
!8157 = !DILocation(line: 542, column: 16, scope: !8111, inlinedAt: !8114)
!8158 = !DILocalVariable(name: "size", arg: 1, scope: !8102, file: !122, line: 662, type: !574)
!8159 = !DILocation(line: 662, column: 36, scope: !8102)
!8160 = !DILocalVariable(name: "flags", arg: 2, scope: !8102, file: !122, line: 662, type: !189)
!8161 = !DILocation(line: 662, column: 48, scope: !8102)
!8162 = !DILocation(line: 664, column: 17, scope: !8102)
!8163 = !DILocation(line: 664, column: 23, scope: !8102)
!8164 = !DILocation(line: 664, column: 29, scope: !8102)
!8165 = !DILocation(line: 540, column: 27, scope: !8112, inlinedAt: !8114)
!8166 = !DILocation(line: 540, column: 6, scope: !8112, inlinedAt: !8114)
!8167 = !DILocation(line: 540, column: 6, scope: !8113, inlinedAt: !8114)
!8168 = !DILocation(line: 544, column: 7, scope: !8141, inlinedAt: !8114)
!8169 = !DILocation(line: 544, column: 12, scope: !8141, inlinedAt: !8114)
!8170 = !DILocation(line: 544, column: 7, scope: !8111, inlinedAt: !8114)
!8171 = !DILocation(line: 545, column: 25, scope: !8141, inlinedAt: !8114)
!8172 = !DILocation(line: 545, column: 31, scope: !8141, inlinedAt: !8114)
!8173 = !DILocation(line: 480, column: 33, scope: !8139, inlinedAt: !8140)
!8174 = !DILocation(line: 480, column: 23, scope: !8139, inlinedAt: !8140)
!8175 = !DILocation(line: 481, column: 29, scope: !8139, inlinedAt: !8140)
!8176 = !DILocation(line: 481, column: 35, scope: !8139, inlinedAt: !8140)
!8177 = !DILocation(line: 481, column: 42, scope: !8139, inlinedAt: !8140)
!8178 = !DILocation(line: 474, column: 23, scope: !8134, inlinedAt: !8138)
!8179 = !DILocation(line: 474, column: 29, scope: !8134, inlinedAt: !8138)
!8180 = !DILocation(line: 474, column: 36, scope: !8134, inlinedAt: !8138)
!8181 = !DILocation(line: 474, column: 9, scope: !8134, inlinedAt: !8138)
!8182 = !DILocation(line: 545, column: 4, scope: !8141, inlinedAt: !8114)
!8183 = !DILocation(line: 547, column: 25, scope: !8111, inlinedAt: !8114)
!8184 = !DILocation(line: 348, column: 7, scope: !8185, inlinedAt: !8132)
!8185 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 348, column: 6)
!8186 = !DILocation(line: 348, column: 6, scope: !8128, inlinedAt: !8132)
!8187 = !DILocation(line: 349, column: 3, scope: !8185, inlinedAt: !8132)
!8188 = !DILocation(line: 351, column: 6, scope: !8189, inlinedAt: !8132)
!8189 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 351, column: 6)
!8190 = !DILocation(line: 351, column: 11, scope: !8189, inlinedAt: !8132)
!8191 = !DILocation(line: 351, column: 6, scope: !8128, inlinedAt: !8132)
!8192 = !DILocation(line: 352, column: 3, scope: !8189, inlinedAt: !8132)
!8193 = !DILocation(line: 354, column: 32, scope: !8194, inlinedAt: !8132)
!8194 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 354, column: 6)
!8195 = !DILocation(line: 354, column: 37, scope: !8194, inlinedAt: !8132)
!8196 = !DILocation(line: 354, column: 42, scope: !8194, inlinedAt: !8132)
!8197 = !DILocation(line: 354, column: 45, scope: !8194, inlinedAt: !8132)
!8198 = !DILocation(line: 354, column: 50, scope: !8194, inlinedAt: !8132)
!8199 = !DILocation(line: 354, column: 6, scope: !8128, inlinedAt: !8132)
!8200 = !DILocation(line: 355, column: 3, scope: !8194, inlinedAt: !8132)
!8201 = !DILocation(line: 356, column: 32, scope: !8202, inlinedAt: !8132)
!8202 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 356, column: 6)
!8203 = !DILocation(line: 356, column: 37, scope: !8202, inlinedAt: !8132)
!8204 = !DILocation(line: 356, column: 43, scope: !8202, inlinedAt: !8132)
!8205 = !DILocation(line: 356, column: 46, scope: !8202, inlinedAt: !8132)
!8206 = !DILocation(line: 356, column: 51, scope: !8202, inlinedAt: !8132)
!8207 = !DILocation(line: 356, column: 6, scope: !8128, inlinedAt: !8132)
!8208 = !DILocation(line: 357, column: 3, scope: !8202, inlinedAt: !8132)
!8209 = !DILocation(line: 358, column: 6, scope: !8210, inlinedAt: !8132)
!8210 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 358, column: 6)
!8211 = !DILocation(line: 358, column: 11, scope: !8210, inlinedAt: !8132)
!8212 = !DILocation(line: 358, column: 6, scope: !8128, inlinedAt: !8132)
!8213 = !DILocation(line: 358, column: 26, scope: !8210, inlinedAt: !8132)
!8214 = !DILocation(line: 359, column: 6, scope: !8215, inlinedAt: !8132)
!8215 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 359, column: 6)
!8216 = !DILocation(line: 359, column: 11, scope: !8215, inlinedAt: !8132)
!8217 = !DILocation(line: 359, column: 6, scope: !8128, inlinedAt: !8132)
!8218 = !DILocation(line: 359, column: 26, scope: !8215, inlinedAt: !8132)
!8219 = !DILocation(line: 360, column: 6, scope: !8220, inlinedAt: !8132)
!8220 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 360, column: 6)
!8221 = !DILocation(line: 360, column: 11, scope: !8220, inlinedAt: !8132)
!8222 = !DILocation(line: 360, column: 6, scope: !8128, inlinedAt: !8132)
!8223 = !DILocation(line: 360, column: 26, scope: !8220, inlinedAt: !8132)
!8224 = !DILocation(line: 361, column: 6, scope: !8225, inlinedAt: !8132)
!8225 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 361, column: 6)
!8226 = !DILocation(line: 361, column: 11, scope: !8225, inlinedAt: !8132)
!8227 = !DILocation(line: 361, column: 6, scope: !8128, inlinedAt: !8132)
!8228 = !DILocation(line: 361, column: 26, scope: !8225, inlinedAt: !8132)
!8229 = !DILocation(line: 362, column: 6, scope: !8230, inlinedAt: !8132)
!8230 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 362, column: 6)
!8231 = !DILocation(line: 362, column: 11, scope: !8230, inlinedAt: !8132)
!8232 = !DILocation(line: 362, column: 6, scope: !8128, inlinedAt: !8132)
!8233 = !DILocation(line: 362, column: 26, scope: !8230, inlinedAt: !8132)
!8234 = !DILocation(line: 363, column: 6, scope: !8235, inlinedAt: !8132)
!8235 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 363, column: 6)
!8236 = !DILocation(line: 363, column: 11, scope: !8235, inlinedAt: !8132)
!8237 = !DILocation(line: 363, column: 6, scope: !8128, inlinedAt: !8132)
!8238 = !DILocation(line: 363, column: 26, scope: !8235, inlinedAt: !8132)
!8239 = !DILocation(line: 364, column: 6, scope: !8240, inlinedAt: !8132)
!8240 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 364, column: 6)
!8241 = !DILocation(line: 364, column: 11, scope: !8240, inlinedAt: !8132)
!8242 = !DILocation(line: 364, column: 6, scope: !8128, inlinedAt: !8132)
!8243 = !DILocation(line: 364, column: 26, scope: !8240, inlinedAt: !8132)
!8244 = !DILocation(line: 365, column: 6, scope: !8245, inlinedAt: !8132)
!8245 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 365, column: 6)
!8246 = !DILocation(line: 365, column: 11, scope: !8245, inlinedAt: !8132)
!8247 = !DILocation(line: 365, column: 6, scope: !8128, inlinedAt: !8132)
!8248 = !DILocation(line: 365, column: 26, scope: !8245, inlinedAt: !8132)
!8249 = !DILocation(line: 366, column: 6, scope: !8250, inlinedAt: !8132)
!8250 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 366, column: 6)
!8251 = !DILocation(line: 366, column: 11, scope: !8250, inlinedAt: !8132)
!8252 = !DILocation(line: 366, column: 6, scope: !8128, inlinedAt: !8132)
!8253 = !DILocation(line: 366, column: 26, scope: !8250, inlinedAt: !8132)
!8254 = !DILocation(line: 367, column: 6, scope: !8255, inlinedAt: !8132)
!8255 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 367, column: 6)
!8256 = !DILocation(line: 367, column: 11, scope: !8255, inlinedAt: !8132)
!8257 = !DILocation(line: 367, column: 6, scope: !8128, inlinedAt: !8132)
!8258 = !DILocation(line: 367, column: 26, scope: !8255, inlinedAt: !8132)
!8259 = !DILocation(line: 368, column: 6, scope: !8260, inlinedAt: !8132)
!8260 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 368, column: 6)
!8261 = !DILocation(line: 368, column: 11, scope: !8260, inlinedAt: !8132)
!8262 = !DILocation(line: 368, column: 6, scope: !8128, inlinedAt: !8132)
!8263 = !DILocation(line: 368, column: 26, scope: !8260, inlinedAt: !8132)
!8264 = !DILocation(line: 369, column: 6, scope: !8265, inlinedAt: !8132)
!8265 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 369, column: 6)
!8266 = !DILocation(line: 369, column: 11, scope: !8265, inlinedAt: !8132)
!8267 = !DILocation(line: 369, column: 6, scope: !8128, inlinedAt: !8132)
!8268 = !DILocation(line: 369, column: 26, scope: !8265, inlinedAt: !8132)
!8269 = !DILocation(line: 370, column: 6, scope: !8270, inlinedAt: !8132)
!8270 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 370, column: 6)
!8271 = !DILocation(line: 370, column: 11, scope: !8270, inlinedAt: !8132)
!8272 = !DILocation(line: 370, column: 6, scope: !8128, inlinedAt: !8132)
!8273 = !DILocation(line: 370, column: 26, scope: !8270, inlinedAt: !8132)
!8274 = !DILocation(line: 371, column: 6, scope: !8275, inlinedAt: !8132)
!8275 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 371, column: 6)
!8276 = !DILocation(line: 371, column: 11, scope: !8275, inlinedAt: !8132)
!8277 = !DILocation(line: 371, column: 6, scope: !8128, inlinedAt: !8132)
!8278 = !DILocation(line: 371, column: 26, scope: !8275, inlinedAt: !8132)
!8279 = !DILocation(line: 372, column: 6, scope: !8280, inlinedAt: !8132)
!8280 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 372, column: 6)
!8281 = !DILocation(line: 372, column: 11, scope: !8280, inlinedAt: !8132)
!8282 = !DILocation(line: 372, column: 6, scope: !8128, inlinedAt: !8132)
!8283 = !DILocation(line: 372, column: 26, scope: !8280, inlinedAt: !8132)
!8284 = !DILocation(line: 373, column: 6, scope: !8285, inlinedAt: !8132)
!8285 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 373, column: 6)
!8286 = !DILocation(line: 373, column: 11, scope: !8285, inlinedAt: !8132)
!8287 = !DILocation(line: 373, column: 6, scope: !8128, inlinedAt: !8132)
!8288 = !DILocation(line: 373, column: 26, scope: !8285, inlinedAt: !8132)
!8289 = !DILocation(line: 374, column: 6, scope: !8290, inlinedAt: !8132)
!8290 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 374, column: 6)
!8291 = !DILocation(line: 374, column: 11, scope: !8290, inlinedAt: !8132)
!8292 = !DILocation(line: 374, column: 6, scope: !8128, inlinedAt: !8132)
!8293 = !DILocation(line: 374, column: 26, scope: !8290, inlinedAt: !8132)
!8294 = !DILocation(line: 375, column: 6, scope: !8295, inlinedAt: !8132)
!8295 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 375, column: 6)
!8296 = !DILocation(line: 375, column: 11, scope: !8295, inlinedAt: !8132)
!8297 = !DILocation(line: 375, column: 6, scope: !8128, inlinedAt: !8132)
!8298 = !DILocation(line: 375, column: 27, scope: !8295, inlinedAt: !8132)
!8299 = !DILocation(line: 376, column: 6, scope: !8300, inlinedAt: !8132)
!8300 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 376, column: 6)
!8301 = !DILocation(line: 376, column: 11, scope: !8300, inlinedAt: !8132)
!8302 = !DILocation(line: 376, column: 6, scope: !8128, inlinedAt: !8132)
!8303 = !DILocation(line: 376, column: 32, scope: !8300, inlinedAt: !8132)
!8304 = !DILocation(line: 377, column: 6, scope: !8305, inlinedAt: !8132)
!8305 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 377, column: 6)
!8306 = !DILocation(line: 377, column: 11, scope: !8305, inlinedAt: !8132)
!8307 = !DILocation(line: 377, column: 6, scope: !8128, inlinedAt: !8132)
!8308 = !DILocation(line: 377, column: 32, scope: !8305, inlinedAt: !8132)
!8309 = !DILocation(line: 378, column: 6, scope: !8310, inlinedAt: !8132)
!8310 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 378, column: 6)
!8311 = !DILocation(line: 378, column: 11, scope: !8310, inlinedAt: !8132)
!8312 = !DILocation(line: 378, column: 6, scope: !8128, inlinedAt: !8132)
!8313 = !DILocation(line: 378, column: 32, scope: !8310, inlinedAt: !8132)
!8314 = !DILocation(line: 379, column: 6, scope: !8315, inlinedAt: !8132)
!8315 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 379, column: 6)
!8316 = !DILocation(line: 379, column: 11, scope: !8315, inlinedAt: !8132)
!8317 = !DILocation(line: 379, column: 6, scope: !8128, inlinedAt: !8132)
!8318 = !DILocation(line: 379, column: 33, scope: !8315, inlinedAt: !8132)
!8319 = !DILocation(line: 380, column: 6, scope: !8320, inlinedAt: !8132)
!8320 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 380, column: 6)
!8321 = !DILocation(line: 380, column: 11, scope: !8320, inlinedAt: !8132)
!8322 = !DILocation(line: 380, column: 6, scope: !8128, inlinedAt: !8132)
!8323 = !DILocation(line: 380, column: 33, scope: !8320, inlinedAt: !8132)
!8324 = !DILocation(line: 381, column: 6, scope: !8325, inlinedAt: !8132)
!8325 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 381, column: 6)
!8326 = !DILocation(line: 381, column: 11, scope: !8325, inlinedAt: !8132)
!8327 = !DILocation(line: 381, column: 6, scope: !8128, inlinedAt: !8132)
!8328 = !DILocation(line: 381, column: 33, scope: !8325, inlinedAt: !8132)
!8329 = !DILocation(line: 382, column: 2, scope: !8330, inlinedAt: !8132)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !122, line: 382, column: 2)
!8331 = distinct !DILexicalBlock(scope: !8128, file: !122, line: 382, column: 2)
!8332 = !{i32 -2141772724, i32 -2141772695, i32 -2141772649, i32 -2141772591, i32 -2141772537, i32 -2141772483, i32 -2141772428, i32 -2141772397}
!8333 = !DILocation(line: 382, column: 2, scope: !8334, inlinedAt: !8132)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !122, line: 382, column: 2)
!8335 = distinct !DILexicalBlock(scope: !8331, file: !122, line: 382, column: 2)
!8336 = !{i32 -2141771954, i32 -2141771947, i32 -2141771893, i32 -2141771862, i32 -2141771832}
!8337 = !DILocation(line: 382, column: 2, scope: !8335, inlinedAt: !8132)
!8338 = !DILocation(line: 386, column: 1, scope: !8128, inlinedAt: !8132)
!8339 = !DILocation(line: 547, column: 9, scope: !8111, inlinedAt: !8114)
!8340 = !DILocation(line: 549, column: 8, scope: !8341, inlinedAt: !8114)
!8341 = distinct !DILexicalBlock(scope: !8111, file: !122, line: 549, column: 7)
!8342 = !DILocation(line: 549, column: 7, scope: !8111, inlinedAt: !8114)
!8343 = !DILocation(line: 550, column: 4, scope: !8341, inlinedAt: !8114)
!8344 = !DILocation(line: 553, column: 33, scope: !8111, inlinedAt: !8114)
!8345 = !DILocation(line: 325, column: 6, scope: !8346, inlinedAt: !8126)
!8346 = distinct !DILexicalBlock(scope: !8122, file: !122, line: 325, column: 6)
!8347 = !DILocation(line: 325, column: 6, scope: !8122, inlinedAt: !8126)
!8348 = !DILocation(line: 326, column: 3, scope: !8346, inlinedAt: !8126)
!8349 = !DILocation(line: 332, column: 9, scope: !8122, inlinedAt: !8126)
!8350 = !DILocation(line: 332, column: 15, scope: !8122, inlinedAt: !8126)
!8351 = !DILocation(line: 332, column: 2, scope: !8122, inlinedAt: !8126)
!8352 = !DILocation(line: 336, column: 1, scope: !8122, inlinedAt: !8126)
!8353 = !DILocation(line: 553, column: 5, scope: !8111, inlinedAt: !8114)
!8354 = !DILocation(line: 553, column: 41, scope: !8111, inlinedAt: !8114)
!8355 = !DILocation(line: 554, column: 5, scope: !8111, inlinedAt: !8114)
!8356 = !DILocation(line: 554, column: 12, scope: !8111, inlinedAt: !8114)
!8357 = !DILocation(line: 448, column: 31, scope: !8106, inlinedAt: !8110)
!8358 = !DILocation(line: 448, column: 34, scope: !8106, inlinedAt: !8110)
!8359 = !DILocation(line: 448, column: 14, scope: !8106, inlinedAt: !8110)
!8360 = !DILocation(line: 450, column: 22, scope: !8106, inlinedAt: !8110)
!8361 = !DILocation(line: 450, column: 25, scope: !8106, inlinedAt: !8110)
!8362 = !DILocation(line: 450, column: 30, scope: !8106, inlinedAt: !8110)
!8363 = !DILocation(line: 450, column: 36, scope: !8106, inlinedAt: !8110)
!8364 = !DILocation(line: 450, column: 8, scope: !8106, inlinedAt: !8110)
!8365 = !DILocation(line: 450, column: 6, scope: !8106, inlinedAt: !8110)
!8366 = !DILocation(line: 451, column: 9, scope: !8106, inlinedAt: !8110)
!8367 = !DILocation(line: 552, column: 3, scope: !8111, inlinedAt: !8114)
!8368 = !DILocation(line: 557, column: 19, scope: !8113, inlinedAt: !8114)
!8369 = !DILocation(line: 557, column: 25, scope: !8113, inlinedAt: !8114)
!8370 = !DILocation(line: 557, column: 9, scope: !8113, inlinedAt: !8114)
!8371 = !DILocation(line: 557, column: 2, scope: !8113, inlinedAt: !8114)
!8372 = !DILocation(line: 558, column: 1, scope: !8113, inlinedAt: !8114)
!8373 = !DILocation(line: 664, column: 2, scope: !8102)
!8374 = distinct !DISubprogram(name: "sony_nc_handles_show", scope: !3, file: !3, line: 816, type: !4489, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8375 = !DILocalVariable(name: "dev", arg: 1, scope: !8374, file: !3, line: 816, type: !3523)
!8376 = !DILocation(line: 816, column: 52, scope: !8374)
!8377 = !DILocalVariable(name: "attr", arg: 2, scope: !8374, file: !3, line: 817, type: !4491)
!8378 = !DILocation(line: 817, column: 28, scope: !8374)
!8379 = !DILocalVariable(name: "buffer", arg: 3, scope: !8374, file: !3, line: 817, type: !181)
!8380 = !DILocation(line: 817, column: 40, scope: !8374)
!8381 = !DILocalVariable(name: "len", scope: !8374, file: !3, line: 819, type: !570)
!8382 = !DILocation(line: 819, column: 10, scope: !8374)
!8383 = !DILocalVariable(name: "i", scope: !8374, file: !3, line: 820, type: !109)
!8384 = !DILocation(line: 820, column: 6, scope: !8374)
!8385 = !DILocation(line: 822, column: 9, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 822, column: 2)
!8387 = !DILocation(line: 822, column: 7, scope: !8386)
!8388 = !DILocation(line: 822, column: 14, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 822, column: 2)
!8390 = !DILocation(line: 822, column: 16, scope: !8389)
!8391 = !DILocation(line: 822, column: 2, scope: !8386)
!8392 = !DILocation(line: 823, column: 20, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 822, column: 49)
!8394 = !DILocation(line: 823, column: 29, scope: !8393)
!8395 = !DILocation(line: 823, column: 27, scope: !8393)
!8396 = !DILocation(line: 823, column: 46, scope: !8393)
!8397 = !DILocation(line: 823, column: 44, scope: !8393)
!8398 = !DILocation(line: 824, column: 5, scope: !8393)
!8399 = !DILocation(line: 824, column: 14, scope: !8393)
!8400 = !DILocation(line: 824, column: 18, scope: !8393)
!8401 = !DILocation(line: 823, column: 10, scope: !8393)
!8402 = !DILocation(line: 823, column: 7, scope: !8393)
!8403 = !DILocation(line: 825, column: 2, scope: !8393)
!8404 = !DILocation(line: 822, column: 45, scope: !8389)
!8405 = !DILocation(line: 822, column: 2, scope: !8389)
!8406 = distinct !{!8406, !8391, !8407}
!8407 = !DILocation(line: 825, column: 2, scope: !8386)
!8408 = !DILocation(line: 826, column: 19, scope: !8374)
!8409 = !DILocation(line: 826, column: 28, scope: !8374)
!8410 = !DILocation(line: 826, column: 26, scope: !8374)
!8411 = !DILocation(line: 826, column: 45, scope: !8374)
!8412 = !DILocation(line: 826, column: 43, scope: !8374)
!8413 = !DILocation(line: 826, column: 9, scope: !8374)
!8414 = !DILocation(line: 826, column: 6, scope: !8374)
!8415 = !DILocation(line: 828, column: 9, scope: !8374)
!8416 = !DILocation(line: 828, column: 2, scope: !8374)
!8417 = distinct !DISubprogram(name: "get_order", scope: !8418, file: !8418, line: 29, type: !8419, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8418 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8419 = !DISubroutineType(types: !8420)
!8420 = !{!109, !193}
!8421 = !DILocalVariable(name: "x", arg: 1, scope: !8422, file: !7797, line: 366, type: !208)
!8422 = distinct !DISubprogram(name: "fls64", scope: !7797, file: !7797, line: 366, type: !8423, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!109, !208}
!8425 = !DILocation(line: 366, column: 40, scope: !8422, inlinedAt: !8426)
!8426 = distinct !DILocation(line: 46, column: 9, scope: !8417)
!8427 = !DILocalVariable(name: "bitpos", scope: !8422, file: !7797, line: 368, type: !109)
!8428 = !DILocation(line: 368, column: 6, scope: !8422, inlinedAt: !8426)
!8429 = !DILocalVariable(name: "size", arg: 1, scope: !8417, file: !8418, line: 29, type: !193)
!8430 = !DILocation(line: 29, column: 63, scope: !8417)
!8431 = !DILocation(line: 31, column: 27, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8417, file: !8418, line: 31, column: 6)
!8433 = !DILocation(line: 31, column: 6, scope: !8432)
!8434 = !DILocation(line: 31, column: 6, scope: !8417)
!8435 = !DILocation(line: 32, column: 8, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !8418, line: 32, column: 7)
!8437 = distinct !DILexicalBlock(scope: !8432, file: !8418, line: 31, column: 34)
!8438 = !DILocation(line: 32, column: 7, scope: !8437)
!8439 = !DILocation(line: 33, column: 4, scope: !8436)
!8440 = !DILocation(line: 35, column: 7, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8437, file: !8418, line: 35, column: 7)
!8442 = !DILocation(line: 35, column: 12, scope: !8441)
!8443 = !DILocation(line: 35, column: 7, scope: !8437)
!8444 = !DILocation(line: 36, column: 4, scope: !8441)
!8445 = !DILocation(line: 38, column: 10, scope: !8437)
!8446 = !DILocation(line: 38, column: 28, scope: !8437)
!8447 = !DILocation(line: 38, column: 41, scope: !8437)
!8448 = !DILocation(line: 38, column: 3, scope: !8437)
!8449 = !DILocation(line: 41, column: 6, scope: !8417)
!8450 = !DILocation(line: 42, column: 7, scope: !8417)
!8451 = !DILocation(line: 46, column: 15, scope: !8417)
!8452 = !DILocation(line: 374, column: 2, scope: !8422, inlinedAt: !8426)
!8453 = !DILocation(line: 376, column: 14, scope: !8422, inlinedAt: !8426)
!8454 = !{i32 361257}
!8455 = !DILocation(line: 377, column: 9, scope: !8422, inlinedAt: !8426)
!8456 = !DILocation(line: 377, column: 16, scope: !8422, inlinedAt: !8426)
!8457 = !DILocation(line: 46, column: 2, scope: !8417)
!8458 = !DILocation(line: 48, column: 1, scope: !8417)
!8459 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8460, file: !8460, line: 30, type: !8461, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8460 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8461 = !DISubroutineType(types: !8462)
!8462 = !{!109, !207}
!8463 = !DILocation(line: 366, column: 40, scope: !8422, inlinedAt: !8464)
!8464 = distinct !DILocation(line: 32, column: 9, scope: !8459)
!8465 = !DILocation(line: 368, column: 6, scope: !8422, inlinedAt: !8464)
!8466 = !DILocalVariable(name: "n", arg: 1, scope: !8459, file: !8460, line: 30, type: !207)
!8467 = !DILocation(line: 30, column: 21, scope: !8459)
!8468 = !DILocation(line: 32, column: 15, scope: !8459)
!8469 = !DILocation(line: 374, column: 2, scope: !8422, inlinedAt: !8464)
!8470 = !DILocation(line: 376, column: 14, scope: !8422, inlinedAt: !8464)
!8471 = !DILocation(line: 377, column: 9, scope: !8422, inlinedAt: !8464)
!8472 = !DILocation(line: 377, column: 16, scope: !8422, inlinedAt: !8464)
!8473 = !DILocation(line: 32, column: 18, scope: !8459)
!8474 = !DILocation(line: 32, column: 2, scope: !8459)
!8475 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8476, file: !8476, line: 137, type: !8477, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8476 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!177, !1258, !2648, !574, !189}
!8479 = !DILocalVariable(name: "s", arg: 1, scope: !8475, file: !8476, line: 137, type: !1258)
!8480 = !DILocation(line: 137, column: 54, scope: !8475)
!8481 = !DILocalVariable(name: "object", arg: 2, scope: !8475, file: !8476, line: 137, type: !2648)
!8482 = !DILocation(line: 137, column: 69, scope: !8475)
!8483 = !DILocalVariable(name: "size", arg: 3, scope: !8475, file: !8476, line: 138, type: !574)
!8484 = !DILocation(line: 138, column: 12, scope: !8475)
!8485 = !DILocalVariable(name: "flags", arg: 4, scope: !8475, file: !8476, line: 138, type: !189)
!8486 = !DILocation(line: 138, column: 24, scope: !8475)
!8487 = !DILocation(line: 140, column: 17, scope: !8475)
!8488 = !DILocation(line: 140, column: 2, scope: !8475)
!8489 = distinct !DISubprogram(name: "sony_call_snc_handle", scope: !3, file: !3, line: 897, type: !8490, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{!109, !109, !109, !1051}
!8492 = !DILocalVariable(name: "handle", arg: 1, scope: !8489, file: !3, line: 897, type: !109)
!8493 = !DILocation(line: 897, column: 37, scope: !8489)
!8494 = !DILocalVariable(name: "argument", arg: 2, scope: !8489, file: !3, line: 897, type: !109)
!8495 = !DILocation(line: 897, column: 49, scope: !8489)
!8496 = !DILocalVariable(name: "result", arg: 3, scope: !8489, file: !3, line: 897, type: !1051)
!8497 = !DILocation(line: 897, column: 64, scope: !8489)
!8498 = !DILocalVariable(name: "arg", scope: !8489, file: !3, line: 899, type: !109)
!8499 = !DILocation(line: 899, column: 6, scope: !8489)
!8500 = !DILocalVariable(name: "ret", scope: !8489, file: !3, line: 899, type: !109)
!8501 = !DILocation(line: 899, column: 11, scope: !8489)
!8502 = !DILocalVariable(name: "offset", scope: !8489, file: !3, line: 900, type: !109)
!8503 = !DILocation(line: 900, column: 6, scope: !8489)
!8504 = !DILocation(line: 900, column: 36, scope: !8489)
!8505 = !DILocation(line: 900, column: 15, scope: !8489)
!8506 = !DILocation(line: 902, column: 6, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 902, column: 6)
!8508 = !DILocation(line: 902, column: 13, scope: !8507)
!8509 = !DILocation(line: 902, column: 6, scope: !8489)
!8510 = !DILocation(line: 903, column: 10, scope: !8507)
!8511 = !DILocation(line: 903, column: 3, scope: !8507)
!8512 = !DILocation(line: 905, column: 8, scope: !8489)
!8513 = !DILocation(line: 905, column: 17, scope: !8489)
!8514 = !DILocation(line: 905, column: 15, scope: !8489)
!8515 = !DILocation(line: 905, column: 6, scope: !8489)
!8516 = !DILocation(line: 906, column: 25, scope: !8489)
!8517 = !DILocation(line: 906, column: 60, scope: !8489)
!8518 = !DILocation(line: 906, column: 8, scope: !8489)
!8519 = !DILocation(line: 906, column: 6, scope: !8489)
!8520 = !DILocation(line: 907, column: 2, scope: !8489)
!8521 = !DILocation(line: 907, column: 2, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 907, column: 2)
!8523 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 907, column: 2)
!8524 = !DILocation(line: 907, column: 2, scope: !8523)
!8525 = !DILocation(line: 908, column: 9, scope: !8489)
!8526 = !DILocation(line: 908, column: 2, scope: !8489)
!8527 = !DILocation(line: 909, column: 1, scope: !8489)
!8528 = distinct !DISubprogram(name: "sony_nc_touchpad_setup", scope: !3, file: !3, line: 3007, type: !8529, scopeLine: 3009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8529 = !DISubroutineType(types: !8530)
!8530 = !{!109, !5006, !7}
!8531 = !DILocalVariable(name: "pd", arg: 1, scope: !8528, file: !3, line: 3007, type: !5006)
!8532 = !DILocation(line: 3007, column: 59, scope: !8528)
!8533 = !DILocalVariable(name: "handle", arg: 2, scope: !8528, file: !3, line: 3008, type: !7)
!8534 = !DILocation(line: 3008, column: 16, scope: !8528)
!8535 = !DILocalVariable(name: "ret", scope: !8528, file: !3, line: 3010, type: !109)
!8536 = !DILocation(line: 3010, column: 6, scope: !8528)
!8537 = !DILocation(line: 3012, column: 11, scope: !8528)
!8538 = !DILocation(line: 3012, column: 9, scope: !8528)
!8539 = !DILocation(line: 3013, column: 7, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3013, column: 6)
!8541 = !DILocation(line: 3013, column: 6, scope: !8528)
!8542 = !DILocation(line: 3014, column: 3, scope: !8540)
!8543 = !DILocation(line: 3016, column: 19, scope: !8528)
!8544 = !DILocation(line: 3016, column: 2, scope: !8528)
!8545 = !DILocation(line: 3016, column: 10, scope: !8528)
!8546 = !DILocation(line: 3016, column: 17, scope: !8528)
!8547 = !DILocation(line: 3018, column: 2, scope: !8528)
!8548 = !DILocation(line: 3018, column: 2, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3018, column: 2)
!8550 = !DILocation(line: 3019, column: 2, scope: !8528)
!8551 = !DILocation(line: 3019, column: 10, scope: !8528)
!8552 = !DILocation(line: 3019, column: 15, scope: !8528)
!8553 = !DILocation(line: 3019, column: 20, scope: !8528)
!8554 = !DILocation(line: 3019, column: 25, scope: !8528)
!8555 = !DILocation(line: 3020, column: 2, scope: !8528)
!8556 = !DILocation(line: 3020, column: 10, scope: !8528)
!8557 = !DILocation(line: 3020, column: 15, scope: !8528)
!8558 = !DILocation(line: 3020, column: 20, scope: !8528)
!8559 = !DILocation(line: 3020, column: 25, scope: !8528)
!8560 = !DILocation(line: 3021, column: 2, scope: !8528)
!8561 = !DILocation(line: 3021, column: 10, scope: !8528)
!8562 = !DILocation(line: 3021, column: 15, scope: !8528)
!8563 = !DILocation(line: 3021, column: 20, scope: !8528)
!8564 = !DILocation(line: 3022, column: 2, scope: !8528)
!8565 = !DILocation(line: 3022, column: 10, scope: !8528)
!8566 = !DILocation(line: 3022, column: 15, scope: !8528)
!8567 = !DILocation(line: 3022, column: 21, scope: !8528)
!8568 = !DILocation(line: 3024, column: 28, scope: !8528)
!8569 = !DILocation(line: 3024, column: 32, scope: !8528)
!8570 = !DILocation(line: 3024, column: 38, scope: !8528)
!8571 = !DILocation(line: 3024, column: 46, scope: !8528)
!8572 = !DILocation(line: 3024, column: 8, scope: !8528)
!8573 = !DILocation(line: 3024, column: 6, scope: !8528)
!8574 = !DILocation(line: 3025, column: 6, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 3025, column: 6)
!8576 = !DILocation(line: 3025, column: 6, scope: !8528)
!8577 = !DILocation(line: 3026, column: 9, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 3025, column: 11)
!8579 = !DILocation(line: 3026, column: 3, scope: !8578)
!8580 = !DILocation(line: 3027, column: 10, scope: !8578)
!8581 = !DILocation(line: 3028, column: 2, scope: !8578)
!8582 = !DILocation(line: 3030, column: 9, scope: !8528)
!8583 = !DILocation(line: 3030, column: 2, scope: !8528)
!8584 = !DILocation(line: 3031, column: 1, scope: !8528)
!8585 = distinct !DISubprogram(name: "sony_nc_battery_care_setup", scope: !3, file: !3, line: 2071, type: !8529, scopeLine: 2073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8586 = !DILocalVariable(name: "pd", arg: 1, scope: !8585, file: !3, line: 2071, type: !5006)
!8587 = !DILocation(line: 2071, column: 63, scope: !8585)
!8588 = !DILocalVariable(name: "handle", arg: 2, scope: !8585, file: !3, line: 2072, type: !7)
!8589 = !DILocation(line: 2072, column: 16, scope: !8585)
!8590 = !DILocalVariable(name: "ret", scope: !8585, file: !3, line: 2074, type: !109)
!8591 = !DILocation(line: 2074, column: 6, scope: !8585)
!8592 = !DILocation(line: 2076, column: 14, scope: !8585)
!8593 = !DILocation(line: 2076, column: 12, scope: !8585)
!8594 = !DILocation(line: 2077, column: 7, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2077, column: 6)
!8596 = !DILocation(line: 2077, column: 6, scope: !8585)
!8597 = !DILocation(line: 2078, column: 3, scope: !8595)
!8598 = !DILocation(line: 2080, column: 22, scope: !8585)
!8599 = !DILocation(line: 2080, column: 2, scope: !8585)
!8600 = !DILocation(line: 2080, column: 13, scope: !8585)
!8601 = !DILocation(line: 2080, column: 20, scope: !8585)
!8602 = !DILocation(line: 2082, column: 2, scope: !8585)
!8603 = !DILocation(line: 2082, column: 2, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2082, column: 2)
!8605 = !DILocation(line: 2083, column: 2, scope: !8585)
!8606 = !DILocation(line: 2083, column: 13, scope: !8585)
!8607 = !DILocation(line: 2083, column: 22, scope: !8585)
!8608 = !DILocation(line: 2083, column: 27, scope: !8585)
!8609 = !DILocation(line: 2083, column: 32, scope: !8585)
!8610 = !DILocation(line: 2084, column: 2, scope: !8585)
!8611 = !DILocation(line: 2084, column: 13, scope: !8585)
!8612 = !DILocation(line: 2084, column: 22, scope: !8585)
!8613 = !DILocation(line: 2084, column: 27, scope: !8585)
!8614 = !DILocation(line: 2084, column: 32, scope: !8585)
!8615 = !DILocation(line: 2085, column: 2, scope: !8585)
!8616 = !DILocation(line: 2085, column: 13, scope: !8585)
!8617 = !DILocation(line: 2085, column: 22, scope: !8585)
!8618 = !DILocation(line: 2085, column: 27, scope: !8585)
!8619 = !DILocation(line: 2086, column: 2, scope: !8585)
!8620 = !DILocation(line: 2086, column: 13, scope: !8585)
!8621 = !DILocation(line: 2086, column: 22, scope: !8585)
!8622 = !DILocation(line: 2086, column: 28, scope: !8585)
!8623 = !DILocation(line: 2088, column: 28, scope: !8585)
!8624 = !DILocation(line: 2088, column: 32, scope: !8585)
!8625 = !DILocation(line: 2088, column: 38, scope: !8585)
!8626 = !DILocation(line: 2088, column: 49, scope: !8585)
!8627 = !DILocation(line: 2088, column: 8, scope: !8585)
!8628 = !DILocation(line: 2088, column: 6, scope: !8585)
!8629 = !DILocation(line: 2089, column: 6, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2089, column: 6)
!8631 = !DILocation(line: 2089, column: 6, scope: !8585)
!8632 = !DILocation(line: 2090, column: 3, scope: !8630)
!8633 = !DILocation(line: 2093, column: 6, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2093, column: 6)
!8635 = !DILocation(line: 2093, column: 13, scope: !8634)
!8636 = !DILocation(line: 2093, column: 6, scope: !8585)
!8637 = !DILocation(line: 2094, column: 3, scope: !8634)
!8638 = !DILocation(line: 2096, column: 2, scope: !8585)
!8639 = !DILocation(line: 2096, column: 2, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2096, column: 2)
!8641 = !DILocation(line: 2097, column: 2, scope: !8585)
!8642 = !DILocation(line: 2097, column: 13, scope: !8585)
!8643 = !DILocation(line: 2097, column: 22, scope: !8585)
!8644 = !DILocation(line: 2097, column: 27, scope: !8585)
!8645 = !DILocation(line: 2097, column: 32, scope: !8585)
!8646 = !DILocation(line: 2098, column: 2, scope: !8585)
!8647 = !DILocation(line: 2098, column: 13, scope: !8585)
!8648 = !DILocation(line: 2098, column: 22, scope: !8585)
!8649 = !DILocation(line: 2098, column: 27, scope: !8585)
!8650 = !DILocation(line: 2098, column: 32, scope: !8585)
!8651 = !DILocation(line: 2099, column: 2, scope: !8585)
!8652 = !DILocation(line: 2099, column: 13, scope: !8585)
!8653 = !DILocation(line: 2099, column: 22, scope: !8585)
!8654 = !DILocation(line: 2099, column: 27, scope: !8585)
!8655 = !DILocation(line: 2101, column: 28, scope: !8585)
!8656 = !DILocation(line: 2101, column: 32, scope: !8585)
!8657 = !DILocation(line: 2101, column: 38, scope: !8585)
!8658 = !DILocation(line: 2101, column: 49, scope: !8585)
!8659 = !DILocation(line: 2101, column: 8, scope: !8585)
!8660 = !DILocation(line: 2101, column: 6, scope: !8585)
!8661 = !DILocation(line: 2102, column: 6, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2102, column: 6)
!8663 = !DILocation(line: 2102, column: 6, scope: !8585)
!8664 = !DILocation(line: 2103, column: 3, scope: !8662)
!8665 = !DILocation(line: 2105, column: 2, scope: !8585)
!8666 = !DILabel(scope: !8585, name: "outlimiter", file: !3, line: 2107)
!8667 = !DILocation(line: 2107, column: 1, scope: !8585)
!8668 = !DILocation(line: 2108, column: 22, scope: !8585)
!8669 = !DILocation(line: 2108, column: 26, scope: !8585)
!8670 = !DILocation(line: 2108, column: 32, scope: !8585)
!8671 = !DILocation(line: 2108, column: 43, scope: !8585)
!8672 = !DILocation(line: 2108, column: 2, scope: !8585)
!8673 = !DILabel(scope: !8585, name: "outkzalloc", file: !3, line: 2110)
!8674 = !DILocation(line: 2110, column: 1, scope: !8585)
!8675 = !DILocation(line: 2111, column: 8, scope: !8585)
!8676 = !DILocation(line: 2111, column: 2, scope: !8585)
!8677 = !DILocation(line: 2112, column: 12, scope: !8585)
!8678 = !DILocation(line: 2114, column: 9, scope: !8585)
!8679 = !DILocation(line: 2114, column: 2, scope: !8585)
!8680 = !DILocation(line: 2115, column: 1, scope: !8585)
!8681 = distinct !DISubprogram(name: "sony_nc_lid_resume_setup", scope: !3, file: !3, line: 2371, type: !8529, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8682 = !DILocalVariable(name: "pd", arg: 1, scope: !8681, file: !3, line: 2371, type: !5006)
!8683 = !DILocation(line: 2371, column: 61, scope: !8681)
!8684 = !DILocalVariable(name: "handle", arg: 2, scope: !8681, file: !3, line: 2372, type: !7)
!8685 = !DILocation(line: 2372, column: 19, scope: !8681)
!8686 = !DILocalVariable(name: "result", scope: !8681, file: !3, line: 2374, type: !7)
!8687 = !DILocation(line: 2374, column: 15, scope: !8681)
!8688 = !DILocalVariable(name: "i", scope: !8681, file: !3, line: 2375, type: !109)
!8689 = !DILocation(line: 2375, column: 6, scope: !8681)
!8690 = !DILocation(line: 2377, column: 27, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2377, column: 6)
!8692 = !DILocation(line: 2377, column: 6, scope: !8691)
!8693 = !DILocation(line: 2377, column: 6, scope: !8681)
!8694 = !DILocation(line: 2378, column: 3, scope: !8691)
!8695 = !DILocation(line: 2380, column: 12, scope: !8681)
!8696 = !DILocation(line: 2380, column: 10, scope: !8681)
!8697 = !DILocation(line: 2381, column: 7, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2381, column: 6)
!8699 = !DILocation(line: 2381, column: 6, scope: !8681)
!8700 = !DILocation(line: 2382, column: 3, scope: !8698)
!8701 = !DILocation(line: 2384, column: 20, scope: !8681)
!8702 = !DILocation(line: 2384, column: 27, scope: !8681)
!8703 = !DILocation(line: 2384, column: 2, scope: !8681)
!8704 = !DILocation(line: 2384, column: 11, scope: !8681)
!8705 = !DILocation(line: 2384, column: 18, scope: !8681)
!8706 = !DILocation(line: 2385, column: 20, scope: !8681)
!8707 = !DILocation(line: 2385, column: 2, scope: !8681)
!8708 = !DILocation(line: 2385, column: 11, scope: !8681)
!8709 = !DILocation(line: 2385, column: 18, scope: !8681)
!8710 = !DILocation(line: 2387, column: 2, scope: !8681)
!8711 = !DILocation(line: 2387, column: 2, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2387, column: 2)
!8713 = !DILocation(line: 2388, column: 2, scope: !8681)
!8714 = !DILocation(line: 2388, column: 11, scope: !8681)
!8715 = !DILocation(line: 2388, column: 32, scope: !8681)
!8716 = !DILocation(line: 2388, column: 37, scope: !8681)
!8717 = !DILocation(line: 2388, column: 42, scope: !8681)
!8718 = !DILocation(line: 2389, column: 2, scope: !8681)
!8719 = !DILocation(line: 2389, column: 11, scope: !8681)
!8720 = !DILocation(line: 2389, column: 32, scope: !8681)
!8721 = !DILocation(line: 2389, column: 37, scope: !8681)
!8722 = !DILocation(line: 2389, column: 42, scope: !8681)
!8723 = !DILocation(line: 2390, column: 2, scope: !8681)
!8724 = !DILocation(line: 2390, column: 11, scope: !8681)
!8725 = !DILocation(line: 2390, column: 32, scope: !8681)
!8726 = !DILocation(line: 2390, column: 37, scope: !8681)
!8727 = !DILocation(line: 2391, column: 2, scope: !8681)
!8728 = !DILocation(line: 2391, column: 11, scope: !8681)
!8729 = !DILocation(line: 2391, column: 32, scope: !8681)
!8730 = !DILocation(line: 2391, column: 38, scope: !8681)
!8731 = !DILocation(line: 2393, column: 6, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2393, column: 6)
!8733 = !DILocation(line: 2393, column: 13, scope: !8732)
!8734 = !DILocation(line: 2393, column: 6, scope: !8681)
!8735 = !DILocation(line: 2394, column: 3, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2393, column: 24)
!8737 = !DILocation(line: 2394, column: 3, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2394, column: 3)
!8739 = !DILocation(line: 2395, column: 3, scope: !8736)
!8740 = !DILocation(line: 2395, column: 12, scope: !8736)
!8741 = !DILocation(line: 2395, column: 33, scope: !8736)
!8742 = !DILocation(line: 2395, column: 38, scope: !8736)
!8743 = !DILocation(line: 2395, column: 43, scope: !8736)
!8744 = !DILocation(line: 2396, column: 3, scope: !8736)
!8745 = !DILocation(line: 2396, column: 12, scope: !8736)
!8746 = !DILocation(line: 2396, column: 33, scope: !8736)
!8747 = !DILocation(line: 2396, column: 38, scope: !8736)
!8748 = !DILocation(line: 2396, column: 43, scope: !8736)
!8749 = !DILocation(line: 2397, column: 3, scope: !8736)
!8750 = !DILocation(line: 2397, column: 12, scope: !8736)
!8751 = !DILocation(line: 2397, column: 33, scope: !8736)
!8752 = !DILocation(line: 2397, column: 38, scope: !8736)
!8753 = !DILocation(line: 2398, column: 3, scope: !8736)
!8754 = !DILocation(line: 2398, column: 12, scope: !8736)
!8755 = !DILocation(line: 2398, column: 33, scope: !8736)
!8756 = !DILocation(line: 2398, column: 39, scope: !8736)
!8757 = !DILocation(line: 2400, column: 3, scope: !8736)
!8758 = !DILocation(line: 2400, column: 3, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2400, column: 3)
!8760 = !DILocation(line: 2401, column: 3, scope: !8736)
!8761 = !DILocation(line: 2401, column: 12, scope: !8736)
!8762 = !DILocation(line: 2401, column: 33, scope: !8736)
!8763 = !DILocation(line: 2401, column: 38, scope: !8736)
!8764 = !DILocation(line: 2401, column: 43, scope: !8736)
!8765 = !DILocation(line: 2402, column: 3, scope: !8736)
!8766 = !DILocation(line: 2402, column: 12, scope: !8736)
!8767 = !DILocation(line: 2402, column: 33, scope: !8736)
!8768 = !DILocation(line: 2402, column: 38, scope: !8736)
!8769 = !DILocation(line: 2402, column: 43, scope: !8736)
!8770 = !DILocation(line: 2403, column: 3, scope: !8736)
!8771 = !DILocation(line: 2403, column: 12, scope: !8736)
!8772 = !DILocation(line: 2403, column: 33, scope: !8736)
!8773 = !DILocation(line: 2403, column: 38, scope: !8736)
!8774 = !DILocation(line: 2404, column: 3, scope: !8736)
!8775 = !DILocation(line: 2404, column: 12, scope: !8736)
!8776 = !DILocation(line: 2404, column: 33, scope: !8736)
!8777 = !DILocation(line: 2404, column: 39, scope: !8736)
!8778 = !DILocation(line: 2405, column: 2, scope: !8736)
!8779 = !DILocation(line: 2406, column: 9, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2406, column: 2)
!8781 = !DILocation(line: 2406, column: 7, scope: !8780)
!8782 = !DILocation(line: 2406, column: 14, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2406, column: 2)
!8784 = !DILocation(line: 2406, column: 16, scope: !8783)
!8785 = !DILocation(line: 2406, column: 33, scope: !8783)
!8786 = !DILocation(line: 2407, column: 4, scope: !8783)
!8787 = !DILocation(line: 2407, column: 13, scope: !8783)
!8788 = !DILocation(line: 2407, column: 19, scope: !8783)
!8789 = !DILocation(line: 2407, column: 22, scope: !8783)
!8790 = !DILocation(line: 2407, column: 27, scope: !8783)
!8791 = !DILocation(line: 0, scope: !8783)
!8792 = !DILocation(line: 2406, column: 2, scope: !8780)
!8793 = !DILocation(line: 2408, column: 32, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2407, column: 38)
!8795 = !DILocation(line: 2408, column: 36, scope: !8794)
!8796 = !DILocation(line: 2408, column: 42, scope: !8794)
!8797 = !DILocation(line: 2408, column: 51, scope: !8794)
!8798 = !DILocation(line: 2408, column: 57, scope: !8794)
!8799 = !DILocation(line: 2408, column: 12, scope: !8794)
!8800 = !DILocation(line: 2408, column: 10, scope: !8794)
!8801 = !DILocation(line: 2409, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 2409, column: 7)
!8803 = !DILocation(line: 2409, column: 7, scope: !8794)
!8804 = !DILocation(line: 2410, column: 4, scope: !8802)
!8805 = !DILocation(line: 2411, column: 2, scope: !8794)
!8806 = !DILocation(line: 2407, column: 34, scope: !8783)
!8807 = !DILocation(line: 2406, column: 2, scope: !8783)
!8808 = distinct !{!8808, !8792, !8809}
!8809 = !DILocation(line: 2411, column: 2, scope: !8780)
!8810 = !DILocation(line: 2413, column: 2, scope: !8681)
!8811 = !DILabel(scope: !8681, name: "liderror", file: !3, line: 2415)
!8812 = !DILocation(line: 2415, column: 1, scope: !8681)
!8813 = !DILocation(line: 2416, column: 8, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 2416, column: 2)
!8815 = !DILocation(line: 2416, column: 7, scope: !8814)
!8816 = !DILocation(line: 2416, column: 12, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 2416, column: 2)
!8818 = !DILocation(line: 2416, column: 14, scope: !8817)
!8819 = !DILocation(line: 2416, column: 2, scope: !8814)
!8820 = !DILocation(line: 2417, column: 23, scope: !8817)
!8821 = !DILocation(line: 2417, column: 27, scope: !8817)
!8822 = !DILocation(line: 2417, column: 33, scope: !8817)
!8823 = !DILocation(line: 2417, column: 42, scope: !8817)
!8824 = !DILocation(line: 2417, column: 48, scope: !8817)
!8825 = !DILocation(line: 2417, column: 3, scope: !8817)
!8826 = !DILocation(line: 2416, column: 21, scope: !8817)
!8827 = !DILocation(line: 2416, column: 2, scope: !8817)
!8828 = distinct !{!8828, !8819, !8829}
!8829 = !DILocation(line: 2417, column: 50, scope: !8814)
!8830 = !DILocation(line: 2419, column: 8, scope: !8681)
!8831 = !DILocation(line: 2419, column: 2, scope: !8681)
!8832 = !DILocation(line: 2420, column: 10, scope: !8681)
!8833 = !DILocation(line: 2422, column: 9, scope: !8681)
!8834 = !DILocation(line: 2422, column: 2, scope: !8681)
!8835 = !DILocation(line: 2423, column: 1, scope: !8681)
!8836 = distinct !DISubprogram(name: "sony_nc_thermal_setup", scope: !3, file: !3, line: 2229, type: !5004, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8837 = !DILocalVariable(name: "pd", arg: 1, scope: !8836, file: !3, line: 2229, type: !5006)
!8838 = !DILocation(line: 2229, column: 58, scope: !8836)
!8839 = !DILocalVariable(name: "ret", scope: !8836, file: !3, line: 2231, type: !109)
!8840 = !DILocation(line: 2231, column: 6, scope: !8836)
!8841 = !DILocation(line: 2232, column: 14, scope: !8836)
!8842 = !DILocation(line: 2232, column: 12, scope: !8836)
!8843 = !DILocation(line: 2233, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2233, column: 6)
!8845 = !DILocation(line: 2233, column: 6, scope: !8836)
!8846 = !DILocation(line: 2234, column: 3, scope: !8844)
!8847 = !DILocation(line: 2236, column: 46, scope: !8836)
!8848 = !DILocation(line: 2236, column: 57, scope: !8836)
!8849 = !DILocation(line: 2236, column: 8, scope: !8836)
!8850 = !DILocation(line: 2236, column: 6, scope: !8836)
!8851 = !DILocation(line: 2237, column: 6, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2237, column: 6)
!8853 = !DILocation(line: 2237, column: 6, scope: !8836)
!8854 = !DILocation(line: 2238, column: 3, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2237, column: 11)
!8856 = !DILocation(line: 2239, column: 3, scope: !8855)
!8857 = !DILocation(line: 2242, column: 8, scope: !8836)
!8858 = !DILocation(line: 2242, column: 6, scope: !8836)
!8859 = !DILocation(line: 2243, column: 6, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2243, column: 6)
!8861 = !DILocation(line: 2243, column: 10, scope: !8860)
!8862 = !DILocation(line: 2243, column: 6, scope: !8836)
!8863 = !DILocation(line: 2244, column: 3, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 2243, column: 15)
!8865 = !DILocation(line: 2245, column: 3, scope: !8864)
!8866 = !DILocation(line: 2247, column: 20, scope: !8836)
!8867 = !DILocation(line: 2247, column: 2, scope: !8836)
!8868 = !DILocation(line: 2247, column: 13, scope: !8836)
!8869 = !DILocation(line: 2247, column: 18, scope: !8836)
!8870 = !DILocation(line: 2249, column: 2, scope: !8836)
!8871 = !DILocation(line: 2249, column: 2, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2249, column: 2)
!8873 = !DILocation(line: 2250, column: 2, scope: !8836)
!8874 = !DILocation(line: 2250, column: 13, scope: !8836)
!8875 = !DILocation(line: 2250, column: 27, scope: !8836)
!8876 = !DILocation(line: 2250, column: 32, scope: !8836)
!8877 = !DILocation(line: 2250, column: 37, scope: !8836)
!8878 = !DILocation(line: 2251, column: 2, scope: !8836)
!8879 = !DILocation(line: 2251, column: 13, scope: !8836)
!8880 = !DILocation(line: 2251, column: 27, scope: !8836)
!8881 = !DILocation(line: 2251, column: 32, scope: !8836)
!8882 = !DILocation(line: 2251, column: 37, scope: !8836)
!8883 = !DILocation(line: 2252, column: 2, scope: !8836)
!8884 = !DILocation(line: 2252, column: 13, scope: !8836)
!8885 = !DILocation(line: 2252, column: 27, scope: !8836)
!8886 = !DILocation(line: 2252, column: 32, scope: !8836)
!8887 = !DILocation(line: 2254, column: 2, scope: !8836)
!8888 = !DILocation(line: 2254, column: 2, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2254, column: 2)
!8890 = !DILocation(line: 2255, column: 2, scope: !8836)
!8891 = !DILocation(line: 2255, column: 13, scope: !8836)
!8892 = !DILocation(line: 2255, column: 23, scope: !8836)
!8893 = !DILocation(line: 2255, column: 28, scope: !8836)
!8894 = !DILocation(line: 2255, column: 33, scope: !8836)
!8895 = !DILocation(line: 2256, column: 2, scope: !8836)
!8896 = !DILocation(line: 2256, column: 13, scope: !8836)
!8897 = !DILocation(line: 2256, column: 23, scope: !8836)
!8898 = !DILocation(line: 2256, column: 28, scope: !8836)
!8899 = !DILocation(line: 2256, column: 33, scope: !8836)
!8900 = !DILocation(line: 2257, column: 2, scope: !8836)
!8901 = !DILocation(line: 2257, column: 13, scope: !8836)
!8902 = !DILocation(line: 2257, column: 23, scope: !8836)
!8903 = !DILocation(line: 2257, column: 28, scope: !8836)
!8904 = !DILocation(line: 2258, column: 2, scope: !8836)
!8905 = !DILocation(line: 2258, column: 13, scope: !8836)
!8906 = !DILocation(line: 2258, column: 23, scope: !8836)
!8907 = !DILocation(line: 2258, column: 29, scope: !8836)
!8908 = !DILocation(line: 2260, column: 28, scope: !8836)
!8909 = !DILocation(line: 2260, column: 32, scope: !8836)
!8910 = !DILocation(line: 2260, column: 38, scope: !8836)
!8911 = !DILocation(line: 2260, column: 49, scope: !8836)
!8912 = !DILocation(line: 2260, column: 8, scope: !8836)
!8913 = !DILocation(line: 2260, column: 6, scope: !8836)
!8914 = !DILocation(line: 2261, column: 6, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2261, column: 6)
!8916 = !DILocation(line: 2261, column: 6, scope: !8836)
!8917 = !DILocation(line: 2262, column: 3, scope: !8915)
!8918 = !DILocation(line: 2264, column: 28, scope: !8836)
!8919 = !DILocation(line: 2264, column: 32, scope: !8836)
!8920 = !DILocation(line: 2264, column: 38, scope: !8836)
!8921 = !DILocation(line: 2264, column: 49, scope: !8836)
!8922 = !DILocation(line: 2264, column: 8, scope: !8836)
!8923 = !DILocation(line: 2264, column: 6, scope: !8836)
!8924 = !DILocation(line: 2265, column: 6, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 2265, column: 6)
!8926 = !DILocation(line: 2265, column: 6, scope: !8836)
!8927 = !DILocation(line: 2266, column: 3, scope: !8925)
!8928 = !DILocation(line: 2268, column: 2, scope: !8836)
!8929 = !DILabel(scope: !8836, name: "outprofiles", file: !3, line: 2270)
!8930 = !DILocation(line: 2270, column: 1, scope: !8836)
!8931 = !DILocation(line: 2271, column: 22, scope: !8836)
!8932 = !DILocation(line: 2271, column: 26, scope: !8836)
!8933 = !DILocation(line: 2271, column: 32, scope: !8836)
!8934 = !DILocation(line: 2271, column: 43, scope: !8836)
!8935 = !DILocation(line: 2271, column: 2, scope: !8836)
!8936 = !DILabel(scope: !8836, name: "outkzalloc", file: !3, line: 2272)
!8937 = !DILocation(line: 2272, column: 1, scope: !8836)
!8938 = !DILocation(line: 2273, column: 8, scope: !8836)
!8939 = !DILocation(line: 2273, column: 2, scope: !8836)
!8940 = !DILocation(line: 2274, column: 12, scope: !8836)
!8941 = !DILocation(line: 2275, column: 9, scope: !8836)
!8942 = !DILocation(line: 2275, column: 2, scope: !8836)
!8943 = !DILocation(line: 2276, column: 1, scope: !8836)
!8944 = distinct !DISubprogram(name: "sony_nc_gfx_switch_setup", scope: !3, file: !3, line: 2505, type: !8529, scopeLine: 2507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8945 = !DILocalVariable(name: "pd", arg: 1, scope: !8944, file: !3, line: 2505, type: !5006)
!8946 = !DILocation(line: 2505, column: 61, scope: !8944)
!8947 = !DILocalVariable(name: "handle", arg: 2, scope: !8944, file: !3, line: 2506, type: !7)
!8948 = !DILocation(line: 2506, column: 16, scope: !8944)
!8949 = !DILocalVariable(name: "result", scope: !8944, file: !3, line: 2508, type: !7)
!8950 = !DILocation(line: 2508, column: 15, scope: !8944)
!8951 = !DILocation(line: 2510, column: 13, scope: !8944)
!8952 = !DILocation(line: 2510, column: 11, scope: !8944)
!8953 = !DILocation(line: 2511, column: 7, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 2511, column: 6)
!8955 = !DILocation(line: 2511, column: 6, scope: !8944)
!8956 = !DILocation(line: 2512, column: 3, scope: !8954)
!8957 = !DILocation(line: 2514, column: 21, scope: !8944)
!8958 = !DILocation(line: 2514, column: 2, scope: !8944)
!8959 = !DILocation(line: 2514, column: 12, scope: !8944)
!8960 = !DILocation(line: 2514, column: 19, scope: !8944)
!8961 = !DILocation(line: 2516, column: 2, scope: !8944)
!8962 = !DILocation(line: 2516, column: 2, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 2516, column: 2)
!8964 = !DILocation(line: 2517, column: 2, scope: !8944)
!8965 = !DILocation(line: 2517, column: 12, scope: !8944)
!8966 = !DILocation(line: 2517, column: 17, scope: !8944)
!8967 = !DILocation(line: 2517, column: 22, scope: !8944)
!8968 = !DILocation(line: 2517, column: 27, scope: !8944)
!8969 = !DILocation(line: 2518, column: 2, scope: !8944)
!8970 = !DILocation(line: 2518, column: 12, scope: !8944)
!8971 = !DILocation(line: 2518, column: 17, scope: !8944)
!8972 = !DILocation(line: 2518, column: 22, scope: !8944)
!8973 = !DILocation(line: 2518, column: 27, scope: !8944)
!8974 = !DILocation(line: 2519, column: 2, scope: !8944)
!8975 = !DILocation(line: 2519, column: 12, scope: !8944)
!8976 = !DILocation(line: 2519, column: 17, scope: !8944)
!8977 = !DILocation(line: 2519, column: 22, scope: !8944)
!8978 = !DILocation(line: 2521, column: 31, scope: !8944)
!8979 = !DILocation(line: 2521, column: 35, scope: !8944)
!8980 = !DILocation(line: 2521, column: 41, scope: !8944)
!8981 = !DILocation(line: 2521, column: 51, scope: !8944)
!8982 = !DILocation(line: 2521, column: 11, scope: !8944)
!8983 = !DILocation(line: 2521, column: 9, scope: !8944)
!8984 = !DILocation(line: 2522, column: 6, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 2522, column: 6)
!8986 = !DILocation(line: 2522, column: 6, scope: !8944)
!8987 = !DILocation(line: 2523, column: 3, scope: !8985)
!8988 = !DILocation(line: 2525, column: 2, scope: !8944)
!8989 = !DILabel(scope: !8944, name: "gfxerror", file: !3, line: 2527)
!8990 = !DILocation(line: 2527, column: 1, scope: !8944)
!8991 = !DILocation(line: 2528, column: 8, scope: !8944)
!8992 = !DILocation(line: 2528, column: 2, scope: !8944)
!8993 = !DILocation(line: 2529, column: 11, scope: !8944)
!8994 = !DILocation(line: 2531, column: 9, scope: !8944)
!8995 = !DILocation(line: 2531, column: 2, scope: !8944)
!8996 = !DILocation(line: 2532, column: 1, scope: !8944)
!8997 = distinct !DISubprogram(name: "sony_nc_highspeed_charging_setup", scope: !3, file: !3, line: 2577, type: !5004, scopeLine: 2578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!8998 = !DILocalVariable(name: "pd", arg: 1, scope: !8997, file: !3, line: 2577, type: !5006)
!8999 = !DILocation(line: 2577, column: 69, scope: !8997)
!9000 = !DILocalVariable(name: "result", scope: !8997, file: !3, line: 2579, type: !7)
!9001 = !DILocation(line: 2579, column: 15, scope: !8997)
!9002 = !DILocation(line: 2581, column: 6, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 2581, column: 6)
!9004 = !DILocation(line: 2581, column: 52, scope: !9003)
!9005 = !DILocation(line: 2581, column: 57, scope: !9003)
!9006 = !DILocation(line: 2581, column: 64, scope: !9003)
!9007 = !DILocation(line: 2581, column: 6, scope: !8997)
!9008 = !DILocation(line: 2585, column: 3, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 2581, column: 73)
!9010 = !DILocation(line: 2586, column: 3, scope: !9009)
!9011 = !DILocation(line: 2589, column: 15, scope: !8997)
!9012 = !DILocation(line: 2589, column: 13, scope: !8997)
!9013 = !DILocation(line: 2590, column: 7, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 2590, column: 6)
!9015 = !DILocation(line: 2590, column: 6, scope: !8997)
!9016 = !DILocation(line: 2591, column: 3, scope: !9014)
!9017 = !DILocation(line: 2593, column: 2, scope: !8997)
!9018 = !DILocation(line: 2593, column: 2, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 2593, column: 2)
!9020 = !DILocation(line: 2594, column: 2, scope: !8997)
!9021 = !DILocation(line: 2594, column: 14, scope: !8997)
!9022 = !DILocation(line: 2594, column: 19, scope: !8997)
!9023 = !DILocation(line: 2594, column: 24, scope: !8997)
!9024 = !DILocation(line: 2595, column: 2, scope: !8997)
!9025 = !DILocation(line: 2595, column: 14, scope: !8997)
!9026 = !DILocation(line: 2595, column: 19, scope: !8997)
!9027 = !DILocation(line: 2595, column: 24, scope: !8997)
!9028 = !DILocation(line: 2596, column: 2, scope: !8997)
!9029 = !DILocation(line: 2596, column: 14, scope: !8997)
!9030 = !DILocation(line: 2596, column: 19, scope: !8997)
!9031 = !DILocation(line: 2597, column: 2, scope: !8997)
!9032 = !DILocation(line: 2597, column: 14, scope: !8997)
!9033 = !DILocation(line: 2597, column: 20, scope: !8997)
!9034 = !DILocation(line: 2599, column: 31, scope: !8997)
!9035 = !DILocation(line: 2599, column: 35, scope: !8997)
!9036 = !DILocation(line: 2599, column: 40, scope: !8997)
!9037 = !DILocation(line: 2599, column: 11, scope: !8997)
!9038 = !DILocation(line: 2599, column: 9, scope: !8997)
!9039 = !DILocation(line: 2600, column: 6, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 2600, column: 6)
!9041 = !DILocation(line: 2600, column: 6, scope: !8997)
!9042 = !DILocation(line: 2601, column: 9, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 2600, column: 14)
!9044 = !DILocation(line: 2601, column: 3, scope: !9043)
!9045 = !DILocation(line: 2602, column: 14, scope: !9043)
!9046 = !DILocation(line: 2603, column: 10, scope: !9043)
!9047 = !DILocation(line: 2603, column: 3, scope: !9043)
!9048 = !DILocation(line: 2606, column: 2, scope: !8997)
!9049 = !DILocation(line: 2607, column: 1, scope: !8997)
!9050 = distinct !DISubprogram(name: "sony_nc_rfkill_setup", scope: !3, file: !3, line: 1698, type: !9051, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!109, !4529, !7}
!9053 = !DILocalVariable(name: "device", arg: 1, scope: !9050, file: !3, line: 1698, type: !4529)
!9054 = !DILocation(line: 1698, column: 53, scope: !9050)
!9055 = !DILocalVariable(name: "handle", arg: 2, scope: !9050, file: !3, line: 1699, type: !7)
!9056 = !DILocation(line: 1699, column: 16, scope: !9050)
!9057 = !DILocalVariable(name: "offset", scope: !9050, file: !3, line: 1701, type: !207)
!9058 = !DILocation(line: 1701, column: 6, scope: !9050)
!9059 = !DILocalVariable(name: "i", scope: !9050, file: !3, line: 1702, type: !109)
!9060 = !DILocation(line: 1702, column: 6, scope: !9050)
!9061 = !DILocalVariable(name: "buffer", scope: !9050, file: !3, line: 1703, type: !3250)
!9062 = !DILocation(line: 1703, column: 16, scope: !9050)
!9063 = !DILocation(line: 1705, column: 32, scope: !9050)
!9064 = !DILocation(line: 1705, column: 11, scope: !9050)
!9065 = !DILocation(line: 1705, column: 9, scope: !9050)
!9066 = !DILocation(line: 1706, column: 23, scope: !9050)
!9067 = !DILocation(line: 1706, column: 21, scope: !9050)
!9068 = !DILocation(line: 1708, column: 26, scope: !9050)
!9069 = !DILocation(line: 1708, column: 64, scope: !9050)
!9070 = !DILocation(line: 1708, column: 6, scope: !9050)
!9071 = !DILocation(line: 1708, column: 4, scope: !9050)
!9072 = !DILocation(line: 1710, column: 6, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1710, column: 6)
!9074 = !DILocation(line: 1710, column: 8, scope: !9073)
!9075 = !DILocation(line: 1710, column: 6, scope: !9050)
!9076 = !DILocation(line: 1711, column: 10, scope: !9073)
!9077 = !DILocation(line: 1711, column: 3, scope: !9073)
!9078 = !DILocation(line: 1732, column: 9, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 1732, column: 2)
!9080 = !DILocation(line: 1732, column: 7, scope: !9079)
!9081 = !DILocation(line: 1732, column: 14, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1732, column: 2)
!9083 = !DILocation(line: 1732, column: 16, scope: !9082)
!9084 = !DILocation(line: 1732, column: 2, scope: !9079)
!9085 = !DILocation(line: 1734, column: 14, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1734, column: 7)
!9087 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 1732, column: 43)
!9088 = !DILocation(line: 1734, column: 7, scope: !9086)
!9089 = !DILocation(line: 1734, column: 17, scope: !9086)
!9090 = !DILocation(line: 1734, column: 7, scope: !9087)
!9091 = !DILocation(line: 1735, column: 4, scope: !9086)
!9092 = !DILocation(line: 1737, column: 3, scope: !9087)
!9093 = !DILocation(line: 1737, column: 3, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 1737, column: 3)
!9095 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1737, column: 3)
!9096 = !DILocation(line: 1737, column: 3, scope: !9095)
!9097 = !DILocation(line: 1739, column: 14, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1739, column: 7)
!9099 = !DILocation(line: 1739, column: 7, scope: !9098)
!9100 = !DILocation(line: 1739, column: 17, scope: !9098)
!9101 = !DILocation(line: 1739, column: 22, scope: !9098)
!9102 = !DILocation(line: 1739, column: 26, scope: !9098)
!9103 = !DILocation(line: 1739, column: 7, scope: !9087)
!9104 = !DILocation(line: 1740, column: 25, scope: !9098)
!9105 = !DILocation(line: 1740, column: 4, scope: !9098)
!9106 = !DILocation(line: 1742, column: 14, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1742, column: 7)
!9108 = !DILocation(line: 1742, column: 7, scope: !9107)
!9109 = !DILocation(line: 1742, column: 17, scope: !9107)
!9110 = !DILocation(line: 1742, column: 25, scope: !9107)
!9111 = !DILocation(line: 1742, column: 29, scope: !9107)
!9112 = !DILocation(line: 1742, column: 7, scope: !9087)
!9113 = !DILocation(line: 1743, column: 25, scope: !9107)
!9114 = !DILocation(line: 1743, column: 4, scope: !9107)
!9115 = !DILocation(line: 1745, column: 23, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1745, column: 7)
!9117 = !DILocation(line: 1745, column: 16, scope: !9116)
!9118 = !DILocation(line: 1745, column: 14, scope: !9116)
!9119 = !DILocation(line: 1745, column: 27, scope: !9116)
!9120 = !DILocation(line: 1745, column: 35, scope: !9116)
!9121 = !DILocation(line: 1746, column: 21, scope: !9116)
!9122 = !DILocation(line: 1746, column: 14, scope: !9116)
!9123 = !DILocation(line: 1746, column: 12, scope: !9116)
!9124 = !DILocation(line: 1746, column: 25, scope: !9116)
!9125 = !DILocation(line: 1746, column: 34, scope: !9116)
!9126 = !DILocation(line: 1747, column: 6, scope: !9116)
!9127 = !DILocation(line: 1745, column: 7, scope: !9087)
!9128 = !DILocation(line: 1748, column: 25, scope: !9116)
!9129 = !DILocation(line: 1748, column: 4, scope: !9116)
!9130 = !DILocation(line: 1750, column: 14, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1750, column: 7)
!9132 = !DILocation(line: 1750, column: 7, scope: !9131)
!9133 = !DILocation(line: 1750, column: 17, scope: !9131)
!9134 = !DILocation(line: 1750, column: 25, scope: !9131)
!9135 = !DILocation(line: 1750, column: 29, scope: !9131)
!9136 = !DILocation(line: 1750, column: 7, scope: !9087)
!9137 = !DILocation(line: 1751, column: 25, scope: !9131)
!9138 = !DILocation(line: 1751, column: 4, scope: !9131)
!9139 = !DILocation(line: 1752, column: 2, scope: !9087)
!9140 = !DILocation(line: 1732, column: 39, scope: !9082)
!9141 = !DILocation(line: 1732, column: 2, scope: !9082)
!9142 = distinct !{!9142, !9084, !9143}
!9143 = !DILocation(line: 1752, column: 2, scope: !9079)
!9144 = !DILocation(line: 1753, column: 2, scope: !9050)
!9145 = !DILocation(line: 1754, column: 1, scope: !9050)
!9146 = distinct !DISubprogram(name: "sony_nc_kbd_backlight_setup", scope: !3, file: !3, line: 1863, type: !8529, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9147 = !DILocalVariable(name: "pd", arg: 1, scope: !9146, file: !3, line: 1863, type: !5006)
!9148 = !DILocation(line: 1863, column: 64, scope: !9146)
!9149 = !DILocalVariable(name: "handle", arg: 2, scope: !9146, file: !3, line: 1864, type: !7)
!9150 = !DILocation(line: 1864, column: 16, scope: !9146)
!9151 = !DILocalVariable(name: "result", scope: !9146, file: !3, line: 1866, type: !109)
!9152 = !DILocation(line: 1866, column: 6, scope: !9146)
!9153 = !DILocalVariable(name: "probe_base", scope: !9146, file: !3, line: 1867, type: !109)
!9154 = !DILocation(line: 1867, column: 6, scope: !9146)
!9155 = !DILocalVariable(name: "ctl_base", scope: !9146, file: !3, line: 1868, type: !109)
!9156 = !DILocation(line: 1868, column: 6, scope: !9146)
!9157 = !DILocalVariable(name: "ret", scope: !9146, file: !3, line: 1869, type: !109)
!9158 = !DILocation(line: 1869, column: 6, scope: !9146)
!9159 = !DILocation(line: 1871, column: 6, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1871, column: 6)
!9161 = !DILocation(line: 1871, column: 6, scope: !9146)
!9162 = !DILocation(line: 1872, column: 3, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1871, column: 17)
!9164 = !DILocation(line: 1874, column: 3, scope: !9163)
!9165 = !DILocation(line: 1880, column: 10, scope: !9146)
!9166 = !DILocation(line: 1880, column: 2, scope: !9146)
!9167 = !DILocation(line: 1882, column: 14, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1880, column: 18)
!9169 = !DILocation(line: 1883, column: 12, scope: !9168)
!9170 = !DILocation(line: 1884, column: 3, scope: !9168)
!9171 = !DILocation(line: 1886, column: 14, scope: !9168)
!9172 = !DILocation(line: 1887, column: 12, scope: !9168)
!9173 = !DILocation(line: 1888, column: 3, scope: !9168)
!9174 = !DILocation(line: 1890, column: 14, scope: !9168)
!9175 = !DILocation(line: 1891, column: 12, scope: !9168)
!9176 = !DILocation(line: 1892, column: 3, scope: !9168)
!9177 = !DILocation(line: 1895, column: 29, scope: !9146)
!9178 = !DILocation(line: 1895, column: 37, scope: !9146)
!9179 = !DILocation(line: 1895, column: 8, scope: !9146)
!9180 = !DILocation(line: 1895, column: 6, scope: !9146)
!9181 = !DILocation(line: 1896, column: 6, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1896, column: 6)
!9183 = !DILocation(line: 1896, column: 6, scope: !9146)
!9184 = !DILocation(line: 1897, column: 10, scope: !9182)
!9185 = !DILocation(line: 1897, column: 3, scope: !9182)
!9186 = !DILocation(line: 1899, column: 7, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1899, column: 6)
!9188 = !DILocation(line: 1899, column: 14, scope: !9187)
!9189 = !DILocation(line: 1899, column: 24, scope: !9187)
!9190 = !DILocation(line: 1899, column: 29, scope: !9187)
!9191 = !DILocation(line: 1899, column: 36, scope: !9187)
!9192 = !DILocation(line: 1899, column: 45, scope: !9187)
!9193 = !DILocation(line: 1900, column: 6, scope: !9187)
!9194 = !DILocation(line: 1900, column: 13, scope: !9187)
!9195 = !DILocation(line: 1899, column: 6, scope: !9146)
!9196 = !DILocation(line: 1901, column: 3, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1900, column: 22)
!9198 = !DILocation(line: 1901, column: 3, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1901, column: 3)
!9200 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1901, column: 3)
!9201 = !DILocation(line: 1901, column: 3, scope: !9200)
!9202 = !DILocation(line: 1902, column: 3, scope: !9197)
!9203 = !DILocation(line: 1905, column: 14, scope: !9146)
!9204 = !DILocation(line: 1905, column: 12, scope: !9146)
!9205 = !DILocation(line: 1906, column: 7, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1906, column: 6)
!9207 = !DILocation(line: 1906, column: 6, scope: !9146)
!9208 = !DILocation(line: 1907, column: 3, scope: !9206)
!9209 = !DILocation(line: 1909, column: 20, scope: !9146)
!9210 = !DILocation(line: 1909, column: 2, scope: !9146)
!9211 = !DILocation(line: 1909, column: 13, scope: !9146)
!9212 = !DILocation(line: 1909, column: 18, scope: !9146)
!9213 = !DILocation(line: 1910, column: 23, scope: !9146)
!9214 = !DILocation(line: 1910, column: 2, scope: !9146)
!9215 = !DILocation(line: 1910, column: 13, scope: !9146)
!9216 = !DILocation(line: 1910, column: 21, scope: !9146)
!9217 = !DILocation(line: 1911, column: 22, scope: !9146)
!9218 = !DILocation(line: 1911, column: 2, scope: !9146)
!9219 = !DILocation(line: 1911, column: 13, scope: !9146)
!9220 = !DILocation(line: 1911, column: 20, scope: !9146)
!9221 = !DILocation(line: 1912, column: 20, scope: !9146)
!9222 = !DILocation(line: 1912, column: 2, scope: !9146)
!9223 = !DILocation(line: 1912, column: 13, scope: !9146)
!9224 = !DILocation(line: 1912, column: 18, scope: !9146)
!9225 = !DILocation(line: 1914, column: 27, scope: !9146)
!9226 = !DILocation(line: 1914, column: 34, scope: !9146)
!9227 = !DILocation(line: 1914, column: 2, scope: !9146)
!9228 = !DILocation(line: 1914, column: 13, scope: !9146)
!9229 = !DILocation(line: 1914, column: 25, scope: !9146)
!9230 = !DILocation(line: 1916, column: 2, scope: !9146)
!9231 = !DILocation(line: 1916, column: 2, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1916, column: 2)
!9233 = !DILocation(line: 1917, column: 2, scope: !9146)
!9234 = !DILocation(line: 1917, column: 13, scope: !9146)
!9235 = !DILocation(line: 1917, column: 23, scope: !9146)
!9236 = !DILocation(line: 1917, column: 28, scope: !9146)
!9237 = !DILocation(line: 1917, column: 33, scope: !9146)
!9238 = !DILocation(line: 1918, column: 2, scope: !9146)
!9239 = !DILocation(line: 1918, column: 13, scope: !9146)
!9240 = !DILocation(line: 1918, column: 23, scope: !9146)
!9241 = !DILocation(line: 1918, column: 28, scope: !9146)
!9242 = !DILocation(line: 1918, column: 33, scope: !9146)
!9243 = !DILocation(line: 1919, column: 2, scope: !9146)
!9244 = !DILocation(line: 1919, column: 13, scope: !9146)
!9245 = !DILocation(line: 1919, column: 23, scope: !9146)
!9246 = !DILocation(line: 1919, column: 28, scope: !9146)
!9247 = !DILocation(line: 1920, column: 2, scope: !9146)
!9248 = !DILocation(line: 1920, column: 13, scope: !9146)
!9249 = !DILocation(line: 1920, column: 23, scope: !9146)
!9250 = !DILocation(line: 1920, column: 29, scope: !9146)
!9251 = !DILocation(line: 1922, column: 28, scope: !9146)
!9252 = !DILocation(line: 1922, column: 32, scope: !9146)
!9253 = !DILocation(line: 1922, column: 38, scope: !9146)
!9254 = !DILocation(line: 1922, column: 49, scope: !9146)
!9255 = !DILocation(line: 1922, column: 8, scope: !9146)
!9256 = !DILocation(line: 1922, column: 6, scope: !9146)
!9257 = !DILocation(line: 1923, column: 6, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1923, column: 6)
!9259 = !DILocation(line: 1923, column: 6, scope: !9146)
!9260 = !DILocation(line: 1924, column: 3, scope: !9258)
!9261 = !DILocation(line: 1926, column: 35, scope: !9146)
!9262 = !DILocation(line: 1926, column: 46, scope: !9146)
!9263 = !DILocation(line: 1926, column: 2, scope: !9146)
!9264 = !DILocation(line: 1928, column: 6, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1928, column: 6)
!9266 = !DILocation(line: 1928, column: 17, scope: !9265)
!9267 = !DILocation(line: 1928, column: 6, scope: !9146)
!9268 = !DILocation(line: 1929, column: 3, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 1928, column: 30)
!9270 = !DILocation(line: 1929, column: 3, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 1929, column: 3)
!9272 = !DILocation(line: 1930, column: 3, scope: !9269)
!9273 = !DILocation(line: 1930, column: 14, scope: !9269)
!9274 = !DILocation(line: 1930, column: 27, scope: !9269)
!9275 = !DILocation(line: 1930, column: 32, scope: !9269)
!9276 = !DILocation(line: 1930, column: 37, scope: !9269)
!9277 = !DILocation(line: 1931, column: 3, scope: !9269)
!9278 = !DILocation(line: 1931, column: 14, scope: !9269)
!9279 = !DILocation(line: 1931, column: 27, scope: !9269)
!9280 = !DILocation(line: 1931, column: 32, scope: !9269)
!9281 = !DILocation(line: 1931, column: 37, scope: !9269)
!9282 = !DILocation(line: 1932, column: 3, scope: !9269)
!9283 = !DILocation(line: 1932, column: 14, scope: !9269)
!9284 = !DILocation(line: 1932, column: 27, scope: !9269)
!9285 = !DILocation(line: 1932, column: 32, scope: !9269)
!9286 = !DILocation(line: 1934, column: 3, scope: !9269)
!9287 = !DILocation(line: 1934, column: 14, scope: !9269)
!9288 = !DILocation(line: 1934, column: 27, scope: !9269)
!9289 = !DILocation(line: 1934, column: 33, scope: !9269)
!9290 = !DILocation(line: 1937, column: 29, scope: !9269)
!9291 = !DILocation(line: 1937, column: 33, scope: !9269)
!9292 = !DILocation(line: 1937, column: 39, scope: !9269)
!9293 = !DILocation(line: 1937, column: 50, scope: !9269)
!9294 = !DILocation(line: 1937, column: 9, scope: !9269)
!9295 = !DILocation(line: 1937, column: 7, scope: !9269)
!9296 = !DILocation(line: 1938, column: 7, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 1938, column: 7)
!9298 = !DILocation(line: 1938, column: 7, scope: !9269)
!9299 = !DILocation(line: 1939, column: 4, scope: !9297)
!9300 = !DILocation(line: 1941, column: 39, scope: !9269)
!9301 = !DILocation(line: 1941, column: 50, scope: !9269)
!9302 = !DILocation(line: 1941, column: 3, scope: !9269)
!9303 = !DILocation(line: 1942, column: 2, scope: !9269)
!9304 = !DILocation(line: 1945, column: 2, scope: !9146)
!9305 = !DILabel(scope: !9146, name: "outmode", file: !3, line: 1947)
!9306 = !DILocation(line: 1947, column: 1, scope: !9146)
!9307 = !DILocation(line: 1948, column: 22, scope: !9146)
!9308 = !DILocation(line: 1948, column: 26, scope: !9146)
!9309 = !DILocation(line: 1948, column: 32, scope: !9146)
!9310 = !DILocation(line: 1948, column: 43, scope: !9146)
!9311 = !DILocation(line: 1948, column: 2, scope: !9146)
!9312 = !DILabel(scope: !9146, name: "outkzalloc", file: !3, line: 1949)
!9313 = !DILocation(line: 1949, column: 1, scope: !9146)
!9314 = !DILocation(line: 1950, column: 8, scope: !9146)
!9315 = !DILocation(line: 1950, column: 2, scope: !9146)
!9316 = !DILocation(line: 1951, column: 12, scope: !9146)
!9317 = !DILocation(line: 1952, column: 9, scope: !9146)
!9318 = !DILocation(line: 1952, column: 2, scope: !9146)
!9319 = !DILocation(line: 1953, column: 1, scope: !9146)
!9320 = distinct !DISubprogram(name: "sony_nc_lowbatt_setup", scope: !3, file: !3, line: 2651, type: !5004, scopeLine: 2652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9321 = !DILocalVariable(name: "pd", arg: 1, scope: !9320, file: !3, line: 2651, type: !5006)
!9322 = !DILocation(line: 2651, column: 58, scope: !9320)
!9323 = !DILocalVariable(name: "result", scope: !9320, file: !3, line: 2653, type: !7)
!9324 = !DILocation(line: 2653, column: 15, scope: !9320)
!9325 = !DILocation(line: 2655, column: 19, scope: !9320)
!9326 = !DILocation(line: 2655, column: 17, scope: !9320)
!9327 = !DILocation(line: 2656, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 2656, column: 6)
!9329 = !DILocation(line: 2656, column: 6, scope: !9320)
!9330 = !DILocation(line: 2657, column: 3, scope: !9328)
!9331 = !DILocation(line: 2659, column: 2, scope: !9320)
!9332 = !DILocation(line: 2659, column: 2, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 2659, column: 2)
!9334 = !DILocation(line: 2660, column: 2, scope: !9320)
!9335 = !DILocation(line: 2660, column: 18, scope: !9320)
!9336 = !DILocation(line: 2660, column: 23, scope: !9320)
!9337 = !DILocation(line: 2660, column: 28, scope: !9320)
!9338 = !DILocation(line: 2661, column: 2, scope: !9320)
!9339 = !DILocation(line: 2661, column: 18, scope: !9320)
!9340 = !DILocation(line: 2661, column: 23, scope: !9320)
!9341 = !DILocation(line: 2661, column: 28, scope: !9320)
!9342 = !DILocation(line: 2662, column: 2, scope: !9320)
!9343 = !DILocation(line: 2662, column: 18, scope: !9320)
!9344 = !DILocation(line: 2662, column: 23, scope: !9320)
!9345 = !DILocation(line: 2663, column: 2, scope: !9320)
!9346 = !DILocation(line: 2663, column: 18, scope: !9320)
!9347 = !DILocation(line: 2663, column: 24, scope: !9320)
!9348 = !DILocation(line: 2665, column: 31, scope: !9320)
!9349 = !DILocation(line: 2665, column: 35, scope: !9320)
!9350 = !DILocation(line: 2665, column: 40, scope: !9320)
!9351 = !DILocation(line: 2665, column: 11, scope: !9320)
!9352 = !DILocation(line: 2665, column: 9, scope: !9320)
!9353 = !DILocation(line: 2666, column: 6, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 2666, column: 6)
!9355 = !DILocation(line: 2666, column: 6, scope: !9320)
!9356 = !DILocation(line: 2667, column: 9, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 2666, column: 14)
!9358 = !DILocation(line: 2667, column: 3, scope: !9357)
!9359 = !DILocation(line: 2668, column: 18, scope: !9357)
!9360 = !DILocation(line: 2669, column: 10, scope: !9357)
!9361 = !DILocation(line: 2669, column: 3, scope: !9357)
!9362 = !DILocation(line: 2672, column: 2, scope: !9320)
!9363 = !DILocation(line: 2673, column: 1, scope: !9320)
!9364 = distinct !DISubprogram(name: "sony_nc_fanspeed_setup", scope: !3, file: !3, line: 2728, type: !5004, scopeLine: 2729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9365 = !DILocalVariable(name: "pd", arg: 1, scope: !9364, file: !3, line: 2728, type: !5006)
!9366 = !DILocation(line: 2728, column: 59, scope: !9364)
!9367 = !DILocalVariable(name: "result", scope: !9364, file: !3, line: 2730, type: !7)
!9368 = !DILocation(line: 2730, column: 15, scope: !9364)
!9369 = !DILocation(line: 2732, column: 15, scope: !9364)
!9370 = !DILocation(line: 2732, column: 13, scope: !9364)
!9371 = !DILocation(line: 2733, column: 7, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2733, column: 6)
!9373 = !DILocation(line: 2733, column: 6, scope: !9364)
!9374 = !DILocation(line: 2734, column: 3, scope: !9372)
!9375 = !DILocation(line: 2736, column: 15, scope: !9364)
!9376 = !DILocation(line: 2736, column: 13, scope: !9364)
!9377 = !DILocation(line: 2737, column: 7, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2737, column: 6)
!9379 = !DILocation(line: 2737, column: 6, scope: !9364)
!9380 = !DILocation(line: 2738, column: 10, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 2737, column: 19)
!9382 = !DILocation(line: 2739, column: 3, scope: !9381)
!9383 = !DILocation(line: 2742, column: 2, scope: !9364)
!9384 = !DILocation(line: 2742, column: 2, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2742, column: 2)
!9386 = !DILocation(line: 2743, column: 2, scope: !9364)
!9387 = !DILocation(line: 2743, column: 14, scope: !9364)
!9388 = !DILocation(line: 2743, column: 19, scope: !9364)
!9389 = !DILocation(line: 2743, column: 24, scope: !9364)
!9390 = !DILocation(line: 2744, column: 2, scope: !9364)
!9391 = !DILocation(line: 2744, column: 14, scope: !9364)
!9392 = !DILocation(line: 2744, column: 19, scope: !9364)
!9393 = !DILocation(line: 2744, column: 24, scope: !9364)
!9394 = !DILocation(line: 2745, column: 2, scope: !9364)
!9395 = !DILocation(line: 2745, column: 14, scope: !9364)
!9396 = !DILocation(line: 2745, column: 19, scope: !9364)
!9397 = !DILocation(line: 2746, column: 2, scope: !9364)
!9398 = !DILocation(line: 2746, column: 14, scope: !9364)
!9399 = !DILocation(line: 2746, column: 20, scope: !9364)
!9400 = !DILocation(line: 2748, column: 2, scope: !9364)
!9401 = !DILocation(line: 2748, column: 2, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2748, column: 2)
!9403 = !DILocation(line: 2749, column: 2, scope: !9364)
!9404 = !DILocation(line: 2749, column: 14, scope: !9364)
!9405 = !DILocation(line: 2749, column: 19, scope: !9364)
!9406 = !DILocation(line: 2749, column: 24, scope: !9364)
!9407 = !DILocation(line: 2750, column: 2, scope: !9364)
!9408 = !DILocation(line: 2750, column: 14, scope: !9364)
!9409 = !DILocation(line: 2750, column: 19, scope: !9364)
!9410 = !DILocation(line: 2750, column: 24, scope: !9364)
!9411 = !DILocation(line: 2751, column: 2, scope: !9364)
!9412 = !DILocation(line: 2751, column: 14, scope: !9364)
!9413 = !DILocation(line: 2751, column: 19, scope: !9364)
!9414 = !DILocation(line: 2752, column: 2, scope: !9364)
!9415 = !DILocation(line: 2752, column: 14, scope: !9364)
!9416 = !DILocation(line: 2752, column: 20, scope: !9364)
!9417 = !DILocation(line: 2754, column: 31, scope: !9364)
!9418 = !DILocation(line: 2754, column: 35, scope: !9364)
!9419 = !DILocation(line: 2754, column: 40, scope: !9364)
!9420 = !DILocation(line: 2754, column: 11, scope: !9364)
!9421 = !DILocation(line: 2754, column: 9, scope: !9364)
!9422 = !DILocation(line: 2755, column: 6, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2755, column: 6)
!9424 = !DILocation(line: 2755, column: 6, scope: !9364)
!9425 = !DILocation(line: 2756, column: 3, scope: !9423)
!9426 = !DILocation(line: 2758, column: 31, scope: !9364)
!9427 = !DILocation(line: 2758, column: 35, scope: !9364)
!9428 = !DILocation(line: 2758, column: 40, scope: !9364)
!9429 = !DILocation(line: 2758, column: 11, scope: !9364)
!9430 = !DILocation(line: 2758, column: 9, scope: !9364)
!9431 = !DILocation(line: 2759, column: 6, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2759, column: 6)
!9433 = !DILocation(line: 2759, column: 6, scope: !9364)
!9434 = !DILocation(line: 2760, column: 3, scope: !9432)
!9435 = !DILocation(line: 2762, column: 2, scope: !9364)
!9436 = !DILabel(scope: !9364, name: "out_hsf_handle", file: !3, line: 2764)
!9437 = !DILocation(line: 2764, column: 1, scope: !9364)
!9438 = !DILocation(line: 2765, column: 22, scope: !9364)
!9439 = !DILocation(line: 2765, column: 26, scope: !9364)
!9440 = !DILocation(line: 2765, column: 31, scope: !9364)
!9441 = !DILocation(line: 2765, column: 2, scope: !9364)
!9442 = !DILabel(scope: !9364, name: "out_fan_handle", file: !3, line: 2767)
!9443 = !DILocation(line: 2767, column: 1, scope: !9364)
!9444 = !DILocation(line: 2768, column: 8, scope: !9364)
!9445 = !DILocation(line: 2768, column: 2, scope: !9364)
!9446 = !DILocation(line: 2769, column: 13, scope: !9364)
!9447 = !DILocation(line: 2769, column: 2, scope: !9364)
!9448 = !DILabel(scope: !9364, name: "out_hsf_handle_alloc", file: !3, line: 2771)
!9449 = !DILocation(line: 2771, column: 1, scope: !9364)
!9450 = !DILocation(line: 2772, column: 8, scope: !9364)
!9451 = !DILocation(line: 2772, column: 2, scope: !9364)
!9452 = !DILocation(line: 2773, column: 13, scope: !9364)
!9453 = !DILocation(line: 2774, column: 9, scope: !9364)
!9454 = !DILocation(line: 2774, column: 2, scope: !9364)
!9455 = !DILocation(line: 2775, column: 1, scope: !9364)
!9456 = distinct !DISubprogram(name: "sony_nc_usb_charge_setup", scope: !3, file: !3, line: 2824, type: !5004, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9457 = !DILocalVariable(name: "pd", arg: 1, scope: !9456, file: !3, line: 2824, type: !5006)
!9458 = !DILocation(line: 2824, column: 61, scope: !9456)
!9459 = !DILocalVariable(name: "result", scope: !9456, file: !3, line: 2826, type: !7)
!9460 = !DILocation(line: 2826, column: 15, scope: !9456)
!9461 = !DILocation(line: 2828, column: 6, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 2828, column: 6)
!9463 = !DILocation(line: 2828, column: 52, scope: !9462)
!9464 = !DILocation(line: 2828, column: 57, scope: !9462)
!9465 = !DILocation(line: 2828, column: 64, scope: !9462)
!9466 = !DILocation(line: 2828, column: 6, scope: !9456)
!9467 = !DILocation(line: 2832, column: 3, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2828, column: 73)
!9469 = !DILocation(line: 2833, column: 3, scope: !9468)
!9470 = !DILocation(line: 2836, column: 14, scope: !9456)
!9471 = !DILocation(line: 2836, column: 12, scope: !9456)
!9472 = !DILocation(line: 2837, column: 7, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 2837, column: 6)
!9474 = !DILocation(line: 2837, column: 6, scope: !9456)
!9475 = !DILocation(line: 2838, column: 3, scope: !9473)
!9476 = !DILocation(line: 2840, column: 2, scope: !9456)
!9477 = !DILocation(line: 2840, column: 2, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 2840, column: 2)
!9479 = !DILocation(line: 2841, column: 2, scope: !9456)
!9480 = !DILocation(line: 2841, column: 13, scope: !9456)
!9481 = !DILocation(line: 2841, column: 18, scope: !9456)
!9482 = !DILocation(line: 2841, column: 23, scope: !9456)
!9483 = !DILocation(line: 2842, column: 2, scope: !9456)
!9484 = !DILocation(line: 2842, column: 13, scope: !9456)
!9485 = !DILocation(line: 2842, column: 18, scope: !9456)
!9486 = !DILocation(line: 2842, column: 23, scope: !9456)
!9487 = !DILocation(line: 2843, column: 2, scope: !9456)
!9488 = !DILocation(line: 2843, column: 13, scope: !9456)
!9489 = !DILocation(line: 2843, column: 18, scope: !9456)
!9490 = !DILocation(line: 2844, column: 2, scope: !9456)
!9491 = !DILocation(line: 2844, column: 13, scope: !9456)
!9492 = !DILocation(line: 2844, column: 19, scope: !9456)
!9493 = !DILocation(line: 2846, column: 31, scope: !9456)
!9494 = !DILocation(line: 2846, column: 35, scope: !9456)
!9495 = !DILocation(line: 2846, column: 40, scope: !9456)
!9496 = !DILocation(line: 2846, column: 11, scope: !9456)
!9497 = !DILocation(line: 2846, column: 9, scope: !9456)
!9498 = !DILocation(line: 2847, column: 6, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9456, file: !3, line: 2847, column: 6)
!9500 = !DILocation(line: 2847, column: 6, scope: !9456)
!9501 = !DILocation(line: 2848, column: 9, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 2847, column: 14)
!9503 = !DILocation(line: 2848, column: 3, scope: !9502)
!9504 = !DILocation(line: 2849, column: 13, scope: !9502)
!9505 = !DILocation(line: 2850, column: 10, scope: !9502)
!9506 = !DILocation(line: 2850, column: 3, scope: !9502)
!9507 = !DILocation(line: 2853, column: 2, scope: !9456)
!9508 = !DILocation(line: 2854, column: 1, scope: !9456)
!9509 = distinct !DISubprogram(name: "sony_nc_panelid_setup", scope: !3, file: !3, line: 2879, type: !5004, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9510 = !DILocalVariable(name: "pd", arg: 1, scope: !9509, file: !3, line: 2879, type: !5006)
!9511 = !DILocation(line: 2879, column: 58, scope: !9509)
!9512 = !DILocalVariable(name: "result", scope: !9509, file: !3, line: 2881, type: !7)
!9513 = !DILocation(line: 2881, column: 15, scope: !9509)
!9514 = !DILocation(line: 2883, column: 17, scope: !9509)
!9515 = !DILocation(line: 2883, column: 15, scope: !9509)
!9516 = !DILocation(line: 2884, column: 7, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 2884, column: 6)
!9518 = !DILocation(line: 2884, column: 6, scope: !9509)
!9519 = !DILocation(line: 2885, column: 3, scope: !9517)
!9520 = !DILocation(line: 2887, column: 2, scope: !9509)
!9521 = !DILocation(line: 2887, column: 2, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 2887, column: 2)
!9523 = !DILocation(line: 2888, column: 2, scope: !9509)
!9524 = !DILocation(line: 2888, column: 16, scope: !9509)
!9525 = !DILocation(line: 2888, column: 21, scope: !9509)
!9526 = !DILocation(line: 2888, column: 26, scope: !9509)
!9527 = !DILocation(line: 2889, column: 2, scope: !9509)
!9528 = !DILocation(line: 2889, column: 16, scope: !9509)
!9529 = !DILocation(line: 2889, column: 21, scope: !9509)
!9530 = !DILocation(line: 2889, column: 26, scope: !9509)
!9531 = !DILocation(line: 2890, column: 2, scope: !9509)
!9532 = !DILocation(line: 2890, column: 16, scope: !9509)
!9533 = !DILocation(line: 2890, column: 21, scope: !9509)
!9534 = !DILocation(line: 2891, column: 2, scope: !9509)
!9535 = !DILocation(line: 2891, column: 16, scope: !9509)
!9536 = !DILocation(line: 2891, column: 22, scope: !9509)
!9537 = !DILocation(line: 2893, column: 31, scope: !9509)
!9538 = !DILocation(line: 2893, column: 35, scope: !9509)
!9539 = !DILocation(line: 2893, column: 40, scope: !9509)
!9540 = !DILocation(line: 2893, column: 11, scope: !9509)
!9541 = !DILocation(line: 2893, column: 9, scope: !9509)
!9542 = !DILocation(line: 2894, column: 6, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 2894, column: 6)
!9544 = !DILocation(line: 2894, column: 6, scope: !9509)
!9545 = !DILocation(line: 2895, column: 9, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9543, file: !3, line: 2894, column: 14)
!9547 = !DILocation(line: 2895, column: 3, scope: !9546)
!9548 = !DILocation(line: 2896, column: 16, scope: !9546)
!9549 = !DILocation(line: 2897, column: 10, scope: !9546)
!9550 = !DILocation(line: 2897, column: 3, scope: !9546)
!9551 = !DILocation(line: 2900, column: 2, scope: !9509)
!9552 = !DILocation(line: 2901, column: 1, scope: !9509)
!9553 = distinct !DISubprogram(name: "sony_nc_smart_conn_setup", scope: !3, file: !3, line: 2934, type: !5004, scopeLine: 2935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9554 = !DILocalVariable(name: "pd", arg: 1, scope: !9553, file: !3, line: 2934, type: !5006)
!9555 = !DILocation(line: 2934, column: 61, scope: !9553)
!9556 = !DILocalVariable(name: "result", scope: !9553, file: !3, line: 2936, type: !7)
!9557 = !DILocation(line: 2936, column: 15, scope: !9553)
!9558 = !DILocation(line: 2938, column: 14, scope: !9553)
!9559 = !DILocation(line: 2938, column: 12, scope: !9553)
!9560 = !DILocation(line: 2939, column: 7, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 2939, column: 6)
!9562 = !DILocation(line: 2939, column: 6, scope: !9553)
!9563 = !DILocation(line: 2940, column: 3, scope: !9561)
!9564 = !DILocation(line: 2942, column: 2, scope: !9553)
!9565 = !DILocation(line: 2942, column: 2, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 2942, column: 2)
!9567 = !DILocation(line: 2943, column: 2, scope: !9553)
!9568 = !DILocation(line: 2943, column: 13, scope: !9553)
!9569 = !DILocation(line: 2943, column: 18, scope: !9553)
!9570 = !DILocation(line: 2943, column: 23, scope: !9553)
!9571 = !DILocation(line: 2944, column: 2, scope: !9553)
!9572 = !DILocation(line: 2944, column: 13, scope: !9553)
!9573 = !DILocation(line: 2944, column: 18, scope: !9553)
!9574 = !DILocation(line: 2944, column: 23, scope: !9553)
!9575 = !DILocation(line: 2945, column: 2, scope: !9553)
!9576 = !DILocation(line: 2945, column: 13, scope: !9553)
!9577 = !DILocation(line: 2945, column: 18, scope: !9553)
!9578 = !DILocation(line: 2946, column: 2, scope: !9553)
!9579 = !DILocation(line: 2946, column: 13, scope: !9553)
!9580 = !DILocation(line: 2946, column: 19, scope: !9553)
!9581 = !DILocation(line: 2948, column: 31, scope: !9553)
!9582 = !DILocation(line: 2948, column: 35, scope: !9553)
!9583 = !DILocation(line: 2948, column: 40, scope: !9553)
!9584 = !DILocation(line: 2948, column: 11, scope: !9553)
!9585 = !DILocation(line: 2948, column: 9, scope: !9553)
!9586 = !DILocation(line: 2949, column: 6, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 2949, column: 6)
!9588 = !DILocation(line: 2949, column: 6, scope: !9553)
!9589 = !DILocation(line: 2950, column: 9, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 2949, column: 14)
!9591 = !DILocation(line: 2950, column: 3, scope: !9590)
!9592 = !DILocation(line: 2951, column: 13, scope: !9590)
!9593 = !DILocation(line: 2952, column: 10, scope: !9590)
!9594 = !DILocation(line: 2952, column: 3, scope: !9590)
!9595 = !DILocation(line: 2955, column: 2, scope: !9553)
!9596 = !DILocation(line: 2956, column: 1, scope: !9553)
!9597 = distinct !DISubprogram(name: "sony_find_snc_handle", scope: !3, file: !3, line: 878, type: !3191, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9598 = !DILocalVariable(name: "handle", arg: 1, scope: !9597, file: !3, line: 878, type: !109)
!9599 = !DILocation(line: 878, column: 37, scope: !9597)
!9600 = !DILocalVariable(name: "i", scope: !9597, file: !3, line: 880, type: !109)
!9601 = !DILocation(line: 880, column: 6, scope: !9597)
!9602 = !DILocation(line: 883, column: 7, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 883, column: 6)
!9604 = !DILocation(line: 883, column: 15, scope: !9603)
!9605 = !DILocation(line: 883, column: 19, scope: !9603)
!9606 = !DILocation(line: 883, column: 6, scope: !9597)
!9607 = !DILocation(line: 884, column: 3, scope: !9603)
!9608 = !DILocation(line: 886, column: 9, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 886, column: 2)
!9610 = !DILocation(line: 886, column: 7, scope: !9609)
!9611 = !DILocation(line: 886, column: 14, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 886, column: 2)
!9613 = !DILocation(line: 886, column: 16, scope: !9612)
!9614 = !DILocation(line: 886, column: 2, scope: !9609)
!9615 = !DILocation(line: 887, column: 7, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 887, column: 7)
!9617 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 886, column: 29)
!9618 = !DILocation(line: 887, column: 16, scope: !9616)
!9619 = !DILocation(line: 887, column: 20, scope: !9616)
!9620 = !DILocation(line: 887, column: 26, scope: !9616)
!9621 = !DILocation(line: 887, column: 23, scope: !9616)
!9622 = !DILocation(line: 887, column: 7, scope: !9617)
!9623 = !DILocation(line: 888, column: 4, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 887, column: 34)
!9625 = !DILocation(line: 888, column: 4, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 888, column: 4)
!9627 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 888, column: 4)
!9628 = !DILocation(line: 888, column: 4, scope: !9627)
!9629 = !DILocation(line: 890, column: 11, scope: !9624)
!9630 = !DILocation(line: 890, column: 4, scope: !9624)
!9631 = !DILocation(line: 892, column: 2, scope: !9617)
!9632 = !DILocation(line: 886, column: 25, scope: !9612)
!9633 = !DILocation(line: 886, column: 2, scope: !9612)
!9634 = distinct !{!9634, !9614, !9635}
!9635 = !DILocation(line: 892, column: 2, scope: !9609)
!9636 = !DILocation(line: 893, column: 2, scope: !9597)
!9637 = !DILocation(line: 893, column: 2, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 893, column: 2)
!9639 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 893, column: 2)
!9640 = !DILocation(line: 893, column: 2, scope: !9639)
!9641 = !DILocation(line: 894, column: 2, scope: !9597)
!9642 = !DILocation(line: 895, column: 1, scope: !9597)
!9643 = distinct !DISubprogram(name: "sony_nc_touchpad_show", scope: !3, file: !3, line: 2996, type: !4489, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9644 = !DILocalVariable(name: "dev", arg: 1, scope: !9643, file: !3, line: 2996, type: !3523)
!9645 = !DILocation(line: 2996, column: 53, scope: !9643)
!9646 = !DILocalVariable(name: "attr", arg: 2, scope: !9643, file: !3, line: 2997, type: !4491)
!9647 = !DILocation(line: 2997, column: 28, scope: !9643)
!9648 = !DILocalVariable(name: "buffer", arg: 3, scope: !9643, file: !3, line: 2997, type: !181)
!9649 = !DILocation(line: 2997, column: 40, scope: !9643)
!9650 = !DILocalVariable(name: "result", scope: !9643, file: !3, line: 2999, type: !7)
!9651 = !DILocation(line: 2999, column: 15, scope: !9643)
!9652 = !DILocation(line: 3001, column: 27, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 3001, column: 6)
!9654 = !DILocation(line: 3001, column: 35, scope: !9653)
!9655 = !DILocation(line: 3001, column: 6, scope: !9653)
!9656 = !DILocation(line: 3001, column: 6, scope: !9643)
!9657 = !DILocation(line: 3002, column: 3, scope: !9653)
!9658 = !DILocation(line: 3004, column: 18, scope: !9643)
!9659 = !DILocation(line: 3004, column: 47, scope: !9643)
!9660 = !DILocation(line: 3004, column: 54, scope: !9643)
!9661 = !DILocation(line: 3004, column: 45, scope: !9643)
!9662 = !DILocation(line: 3004, column: 9, scope: !9643)
!9663 = !DILocation(line: 3004, column: 2, scope: !9643)
!9664 = !DILocation(line: 3005, column: 1, scope: !9643)
!9665 = distinct !DISubprogram(name: "sony_nc_touchpad_store", scope: !3, file: !3, line: 2974, type: !4494, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9666 = !DILocalVariable(name: "dev", arg: 1, scope: !9665, file: !3, line: 2974, type: !3523)
!9667 = !DILocation(line: 2974, column: 54, scope: !9665)
!9668 = !DILocalVariable(name: "attr", arg: 2, scope: !9665, file: !3, line: 2975, type: !4491)
!9669 = !DILocation(line: 2975, column: 28, scope: !9665)
!9670 = !DILocalVariable(name: "buffer", arg: 3, scope: !9665, file: !3, line: 2975, type: !422)
!9671 = !DILocation(line: 2975, column: 46, scope: !9665)
!9672 = !DILocalVariable(name: "count", arg: 4, scope: !9665, file: !3, line: 2975, type: !574)
!9673 = !DILocation(line: 2975, column: 61, scope: !9665)
!9674 = !DILocalVariable(name: "result", scope: !9665, file: !3, line: 2977, type: !7)
!9675 = !DILocation(line: 2977, column: 15, scope: !9665)
!9676 = !DILocalVariable(name: "value", scope: !9665, file: !3, line: 2978, type: !193)
!9677 = !DILocation(line: 2978, column: 16, scope: !9665)
!9678 = !DILocation(line: 2980, column: 6, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 2980, column: 6)
!9680 = !DILocation(line: 2980, column: 12, scope: !9679)
!9681 = !DILocation(line: 2980, column: 6, scope: !9665)
!9682 = !DILocation(line: 2981, column: 3, scope: !9679)
!9683 = !DILocation(line: 2983, column: 15, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 2983, column: 6)
!9685 = !DILocation(line: 2983, column: 6, scope: !9684)
!9686 = !DILocation(line: 2983, column: 35, scope: !9684)
!9687 = !DILocation(line: 2983, column: 38, scope: !9684)
!9688 = !DILocation(line: 2983, column: 44, scope: !9684)
!9689 = !DILocation(line: 2983, column: 6, scope: !9665)
!9690 = !DILocation(line: 2984, column: 3, scope: !9684)
!9691 = !DILocation(line: 2989, column: 27, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9665, file: !3, line: 2989, column: 6)
!9693 = !DILocation(line: 2989, column: 35, scope: !9692)
!9694 = !DILocation(line: 2990, column: 7, scope: !9692)
!9695 = !DILocation(line: 2990, column: 6, scope: !9692)
!9696 = !DILocation(line: 2990, column: 13, scope: !9692)
!9697 = !DILocation(line: 2990, column: 22, scope: !9692)
!9698 = !DILocation(line: 2989, column: 6, scope: !9692)
!9699 = !DILocation(line: 2989, column: 6, scope: !9665)
!9700 = !DILocation(line: 2991, column: 3, scope: !9692)
!9701 = !DILocation(line: 2993, column: 9, scope: !9665)
!9702 = !DILocation(line: 2993, column: 2, scope: !9665)
!9703 = !DILocation(line: 2994, column: 1, scope: !9665)
!9704 = distinct !DISubprogram(name: "kstrtoul", scope: !9705, file: !9705, line: 351, type: !9706, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9705 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!109, !422, !7, !4233}
!9708 = !DILocalVariable(name: "s", arg: 1, scope: !9704, file: !9705, line: 351, type: !422)
!9709 = !DILocation(line: 351, column: 53, scope: !9704)
!9710 = !DILocalVariable(name: "base", arg: 2, scope: !9704, file: !9705, line: 351, type: !7)
!9711 = !DILocation(line: 351, column: 69, scope: !9704)
!9712 = !DILocalVariable(name: "res", arg: 3, scope: !9704, file: !9705, line: 351, type: !4233)
!9713 = !DILocation(line: 351, column: 90, scope: !9704)
!9714 = !DILocation(line: 359, column: 20, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9704, file: !9705, line: 357, column: 6)
!9716 = !DILocation(line: 359, column: 23, scope: !9715)
!9717 = !DILocation(line: 359, column: 51, scope: !9715)
!9718 = !DILocation(line: 359, column: 10, scope: !9715)
!9719 = !DILocation(line: 359, column: 3, scope: !9715)
!9720 = distinct !DISubprogram(name: "sony_nc_battery_care_limit_show", scope: !3, file: !3, line: 2030, type: !4489, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9721 = !DILocalVariable(name: "dev", arg: 1, scope: !9720, file: !3, line: 2030, type: !3523)
!9722 = !DILocation(line: 2030, column: 63, scope: !9720)
!9723 = !DILocalVariable(name: "attr", arg: 2, scope: !9720, file: !3, line: 2031, type: !4491)
!9724 = !DILocation(line: 2031, column: 28, scope: !9720)
!9725 = !DILocalVariable(name: "buffer", arg: 3, scope: !9720, file: !3, line: 2031, type: !181)
!9726 = !DILocation(line: 2031, column: 40, scope: !9720)
!9727 = !DILocalVariable(name: "result", scope: !9720, file: !3, line: 2033, type: !7)
!9728 = !DILocation(line: 2033, column: 15, scope: !9720)
!9729 = !DILocalVariable(name: "status", scope: !9720, file: !3, line: 2033, type: !7)
!9730 = !DILocation(line: 2033, column: 23, scope: !9720)
!9731 = !DILocation(line: 2035, column: 27, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9720, file: !3, line: 2035, column: 6)
!9733 = !DILocation(line: 2035, column: 38, scope: !9732)
!9734 = !DILocation(line: 2035, column: 6, scope: !9732)
!9735 = !DILocation(line: 2035, column: 6, scope: !9720)
!9736 = !DILocation(line: 2036, column: 3, scope: !9732)
!9737 = !DILocation(line: 2038, column: 12, scope: !9720)
!9738 = !DILocation(line: 2038, column: 19, scope: !9720)
!9739 = !DILocation(line: 2038, column: 11, scope: !9720)
!9740 = !DILocation(line: 2038, column: 31, scope: !9720)
!9741 = !DILocation(line: 2038, column: 38, scope: !9720)
!9742 = !DILocation(line: 2038, column: 46, scope: !9720)
!9743 = !DILocation(line: 2038, column: 9, scope: !9720)
!9744 = !DILocation(line: 2039, column: 10, scope: !9720)
!9745 = !DILocation(line: 2039, column: 2, scope: !9720)
!9746 = !DILocation(line: 2041, column: 10, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9720, file: !3, line: 2039, column: 18)
!9748 = !DILocation(line: 2042, column: 3, scope: !9747)
!9749 = !DILocation(line: 2044, column: 10, scope: !9747)
!9750 = !DILocation(line: 2045, column: 3, scope: !9747)
!9751 = !DILocation(line: 2047, column: 10, scope: !9747)
!9752 = !DILocation(line: 2048, column: 3, scope: !9747)
!9753 = !DILocation(line: 2050, column: 10, scope: !9747)
!9754 = !DILocation(line: 2051, column: 3, scope: !9747)
!9755 = !DILocation(line: 2054, column: 18, scope: !9720)
!9756 = !DILocation(line: 2054, column: 45, scope: !9720)
!9757 = !DILocation(line: 2054, column: 9, scope: !9720)
!9758 = !DILocation(line: 2054, column: 2, scope: !9720)
!9759 = !DILocation(line: 2055, column: 1, scope: !9720)
!9760 = distinct !DISubprogram(name: "sony_nc_battery_care_limit_store", scope: !3, file: !3, line: 1973, type: !4494, scopeLine: 1976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9761 = !DILocalVariable(name: "dev", arg: 1, scope: !9760, file: !3, line: 1973, type: !3523)
!9762 = !DILocation(line: 1973, column: 64, scope: !9760)
!9763 = !DILocalVariable(name: "attr", arg: 2, scope: !9760, file: !3, line: 1974, type: !4491)
!9764 = !DILocation(line: 1974, column: 28, scope: !9760)
!9765 = !DILocalVariable(name: "buffer", arg: 3, scope: !9760, file: !3, line: 1975, type: !422)
!9766 = !DILocation(line: 1975, column: 15, scope: !9760)
!9767 = !DILocalVariable(name: "count", arg: 4, scope: !9760, file: !3, line: 1975, type: !574)
!9768 = !DILocation(line: 1975, column: 30, scope: !9760)
!9769 = !DILocalVariable(name: "result", scope: !9760, file: !3, line: 1977, type: !7)
!9770 = !DILocation(line: 1977, column: 15, scope: !9760)
!9771 = !DILocalVariable(name: "cmd", scope: !9760, file: !3, line: 1977, type: !7)
!9772 = !DILocation(line: 1977, column: 23, scope: !9760)
!9773 = !DILocalVariable(name: "value", scope: !9760, file: !3, line: 1978, type: !193)
!9774 = !DILocation(line: 1978, column: 16, scope: !9760)
!9775 = !DILocation(line: 1980, column: 6, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 1980, column: 6)
!9777 = !DILocation(line: 1980, column: 12, scope: !9776)
!9778 = !DILocation(line: 1980, column: 6, scope: !9760)
!9779 = !DILocation(line: 1981, column: 3, scope: !9776)
!9780 = !DILocation(line: 1983, column: 15, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 1983, column: 6)
!9782 = !DILocation(line: 1983, column: 6, scope: !9781)
!9783 = !DILocation(line: 1983, column: 6, scope: !9760)
!9784 = !DILocation(line: 1984, column: 3, scope: !9781)
!9785 = !DILocation(line: 1998, column: 6, scope: !9760)
!9786 = !DILocation(line: 2000, column: 6, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 2000, column: 6)
!9788 = !DILocation(line: 2000, column: 12, scope: !9787)
!9789 = !DILocation(line: 2000, column: 6, scope: !9760)
!9790 = !DILocation(line: 2001, column: 7, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 2001, column: 7)
!9792 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 2000, column: 17)
!9793 = !DILocation(line: 2001, column: 13, scope: !9791)
!9794 = !DILocation(line: 2001, column: 7, scope: !9792)
!9795 = !DILocation(line: 2002, column: 8, scope: !9791)
!9796 = !DILocation(line: 2002, column: 4, scope: !9791)
!9797 = !DILocation(line: 2004, column: 12, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 2004, column: 12)
!9799 = !DILocation(line: 2004, column: 18, scope: !9798)
!9800 = !DILocation(line: 2004, column: 12, scope: !9791)
!9801 = !DILocation(line: 2005, column: 8, scope: !9798)
!9802 = !DILocation(line: 2005, column: 4, scope: !9798)
!9803 = !DILocation(line: 2007, column: 12, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 2007, column: 12)
!9805 = !DILocation(line: 2007, column: 18, scope: !9804)
!9806 = !DILocation(line: 2007, column: 12, scope: !9798)
!9807 = !DILocation(line: 2008, column: 8, scope: !9804)
!9808 = !DILocation(line: 2008, column: 4, scope: !9804)
!9809 = !DILocation(line: 2011, column: 4, scope: !9804)
!9810 = !DILocation(line: 2018, column: 7, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 2018, column: 7)
!9812 = !DILocation(line: 2018, column: 18, scope: !9811)
!9813 = !DILocation(line: 2018, column: 25, scope: !9811)
!9814 = !DILocation(line: 2018, column: 7, scope: !9792)
!9815 = !DILocation(line: 2019, column: 10, scope: !9811)
!9816 = !DILocation(line: 2019, column: 17, scope: !9811)
!9817 = !DILocation(line: 2019, column: 21, scope: !9811)
!9818 = !DILocation(line: 2019, column: 14, scope: !9811)
!9819 = !DILocation(line: 2019, column: 8, scope: !9811)
!9820 = !DILocation(line: 2019, column: 4, scope: !9811)
!9821 = !DILocation(line: 2021, column: 10, scope: !9792)
!9822 = !DILocation(line: 2021, column: 14, scope: !9792)
!9823 = !DILocation(line: 2021, column: 21, scope: !9792)
!9824 = !DILocation(line: 2021, column: 7, scope: !9792)
!9825 = !DILocation(line: 2022, column: 2, scope: !9792)
!9826 = !DILocation(line: 2024, column: 27, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 2024, column: 6)
!9828 = !DILocation(line: 2024, column: 38, scope: !9827)
!9829 = !DILocation(line: 2024, column: 46, scope: !9827)
!9830 = !DILocation(line: 2024, column: 50, scope: !9827)
!9831 = !DILocation(line: 2024, column: 6, scope: !9827)
!9832 = !DILocation(line: 2024, column: 6, scope: !9760)
!9833 = !DILocation(line: 2025, column: 3, scope: !9827)
!9834 = !DILocation(line: 2027, column: 9, scope: !9760)
!9835 = !DILocation(line: 2027, column: 2, scope: !9760)
!9836 = !DILocation(line: 2028, column: 1, scope: !9760)
!9837 = distinct !DISubprogram(name: "sony_nc_battery_care_health_show", scope: !3, file: !3, line: 2057, type: !4489, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9838 = !DILocalVariable(name: "dev", arg: 1, scope: !9837, file: !3, line: 2057, type: !3523)
!9839 = !DILocation(line: 2057, column: 64, scope: !9837)
!9840 = !DILocalVariable(name: "attr", arg: 2, scope: !9837, file: !3, line: 2058, type: !4491)
!9841 = !DILocation(line: 2058, column: 28, scope: !9837)
!9842 = !DILocalVariable(name: "buffer", arg: 3, scope: !9837, file: !3, line: 2058, type: !181)
!9843 = !DILocation(line: 2058, column: 40, scope: !9837)
!9844 = !DILocalVariable(name: "count", scope: !9837, file: !3, line: 2060, type: !570)
!9845 = !DILocation(line: 2060, column: 10, scope: !9837)
!9846 = !DILocalVariable(name: "health", scope: !9837, file: !3, line: 2061, type: !7)
!9847 = !DILocation(line: 2061, column: 15, scope: !9837)
!9848 = !DILocation(line: 2063, column: 27, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 2063, column: 6)
!9850 = !DILocation(line: 2063, column: 38, scope: !9849)
!9851 = !DILocation(line: 2063, column: 6, scope: !9849)
!9852 = !DILocation(line: 2063, column: 6, scope: !9837)
!9853 = !DILocation(line: 2064, column: 3, scope: !9849)
!9854 = !DILocation(line: 2066, column: 19, scope: !9837)
!9855 = !DILocation(line: 2066, column: 46, scope: !9837)
!9856 = !DILocation(line: 2066, column: 53, scope: !9837)
!9857 = !DILocation(line: 2066, column: 10, scope: !9837)
!9858 = !DILocation(line: 2066, column: 8, scope: !9837)
!9859 = !DILocation(line: 2068, column: 9, scope: !9837)
!9860 = !DILocation(line: 2068, column: 2, scope: !9837)
!9861 = !DILocation(line: 2069, column: 1, scope: !9837)
!9862 = distinct !DISubprogram(name: "sony_nc_lid_resume_show", scope: !3, file: !3, line: 2356, type: !4489, scopeLine: 2359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9863 = !DILocalVariable(name: "dev", arg: 1, scope: !9862, file: !3, line: 2356, type: !3523)
!9864 = !DILocation(line: 2356, column: 55, scope: !9862)
!9865 = !DILocalVariable(name: "attr", arg: 2, scope: !9862, file: !3, line: 2357, type: !4491)
!9866 = !DILocation(line: 2357, column: 31, scope: !9862)
!9867 = !DILocalVariable(name: "buffer", arg: 3, scope: !9862, file: !3, line: 2358, type: !181)
!9868 = !DILocation(line: 2358, column: 12, scope: !9862)
!9869 = !DILocalVariable(name: "pos", scope: !9862, file: !3, line: 2360, type: !7)
!9870 = !DILocation(line: 2360, column: 15, scope: !9862)
!9871 = !DILocation(line: 2362, column: 2, scope: !9862)
!9872 = !DILocation(line: 2362, column: 9, scope: !9862)
!9873 = !DILocation(line: 2362, column: 13, scope: !9862)
!9874 = !DILocation(line: 2363, column: 8, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 2363, column: 7)
!9876 = distinct !DILexicalBlock(scope: !9862, file: !3, line: 2362, column: 31)
!9877 = !DILocation(line: 2363, column: 17, scope: !9875)
!9878 = !DILocation(line: 2363, column: 23, scope: !9875)
!9879 = !DILocation(line: 2363, column: 28, scope: !9875)
!9880 = !DILocation(line: 2363, column: 37, scope: !9875)
!9881 = !DILocation(line: 2363, column: 43, scope: !9875)
!9882 = !DILocation(line: 2363, column: 33, scope: !9875)
!9883 = !DILocation(line: 2363, column: 7, scope: !9876)
!9884 = !DILocation(line: 2364, column: 20, scope: !9875)
!9885 = !DILocation(line: 2365, column: 7, scope: !9875)
!9886 = !DILocation(line: 2365, column: 16, scope: !9875)
!9887 = !DILocation(line: 2365, column: 26, scope: !9875)
!9888 = !DILocation(line: 2365, column: 23, scope: !9875)
!9889 = !DILocation(line: 2365, column: 31, scope: !9875)
!9890 = !DILocation(line: 2364, column: 11, scope: !9875)
!9891 = !DILocation(line: 2364, column: 4, scope: !9875)
!9892 = !DILocation(line: 2366, column: 6, scope: !9876)
!9893 = distinct !{!9893, !9871, !9894}
!9894 = !DILocation(line: 2367, column: 2, scope: !9862)
!9895 = !DILocation(line: 2368, column: 2, scope: !9862)
!9896 = !DILocation(line: 2369, column: 1, scope: !9862)
!9897 = distinct !DISubprogram(name: "sony_nc_lid_resume_store", scope: !3, file: !3, line: 2315, type: !4494, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9898 = !DILocalVariable(name: "dev", arg: 1, scope: !9897, file: !3, line: 2315, type: !3523)
!9899 = !DILocation(line: 2315, column: 56, scope: !9897)
!9900 = !DILocalVariable(name: "attr", arg: 2, scope: !9897, file: !3, line: 2316, type: !4491)
!9901 = !DILocation(line: 2316, column: 31, scope: !9897)
!9902 = !DILocalVariable(name: "buffer", arg: 3, scope: !9897, file: !3, line: 2317, type: !422)
!9903 = !DILocation(line: 2317, column: 18, scope: !9897)
!9904 = !DILocalVariable(name: "count", arg: 4, scope: !9897, file: !3, line: 2317, type: !574)
!9905 = !DILocation(line: 2317, column: 33, scope: !9897)
!9906 = !DILocalVariable(name: "result", scope: !9897, file: !3, line: 2319, type: !7)
!9907 = !DILocation(line: 2319, column: 15, scope: !9897)
!9908 = !DILocalVariable(name: "value", scope: !9897, file: !3, line: 2320, type: !193)
!9909 = !DILocation(line: 2320, column: 16, scope: !9897)
!9910 = !DILocalVariable(name: "pos", scope: !9897, file: !3, line: 2321, type: !7)
!9911 = !DILocation(line: 2321, column: 15, scope: !9897)
!9912 = !DILocation(line: 2322, column: 6, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2322, column: 6)
!9914 = !DILocation(line: 2322, column: 12, scope: !9913)
!9915 = !DILocation(line: 2322, column: 6, scope: !9897)
!9916 = !DILocation(line: 2323, column: 3, scope: !9913)
!9917 = !DILocation(line: 2325, column: 15, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2325, column: 6)
!9919 = !DILocation(line: 2325, column: 6, scope: !9918)
!9920 = !DILocation(line: 2325, column: 35, scope: !9918)
!9921 = !DILocation(line: 2325, column: 38, scope: !9918)
!9922 = !DILocation(line: 2325, column: 44, scope: !9918)
!9923 = !DILocation(line: 2325, column: 6, scope: !9897)
!9924 = !DILocation(line: 2326, column: 3, scope: !9918)
!9925 = !DILocation(line: 2334, column: 2, scope: !9897)
!9926 = !DILocation(line: 2334, column: 9, scope: !9897)
!9927 = !DILocation(line: 2334, column: 13, scope: !9897)
!9928 = !DILocation(line: 2335, column: 8, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9930, file: !3, line: 2335, column: 7)
!9930 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2334, column: 31)
!9931 = !DILocation(line: 2335, column: 17, scope: !9929)
!9932 = !DILocation(line: 2335, column: 23, scope: !9929)
!9933 = !DILocation(line: 2335, column: 28, scope: !9929)
!9934 = !DILocation(line: 2335, column: 37, scope: !9929)
!9935 = !DILocation(line: 2335, column: 43, scope: !9929)
!9936 = !DILocation(line: 2335, column: 33, scope: !9929)
!9937 = !DILocation(line: 2335, column: 7, scope: !9930)
!9938 = !DILocation(line: 2336, column: 4, scope: !9929)
!9939 = !DILocation(line: 2337, column: 6, scope: !9930)
!9940 = distinct !{!9940, !9925, !9941}
!9941 = !DILocation(line: 2338, column: 2, scope: !9897)
!9942 = !DILocation(line: 2339, column: 6, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2339, column: 6)
!9944 = !DILocation(line: 2339, column: 10, scope: !9943)
!9945 = !DILocation(line: 2339, column: 6, scope: !9897)
!9946 = !DILocation(line: 2340, column: 3, scope: !9943)
!9947 = !DILocation(line: 2342, column: 6, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2342, column: 6)
!9949 = !DILocation(line: 2342, column: 6, scope: !9897)
!9950 = !DILocation(line: 2343, column: 11, scope: !9948)
!9951 = !DILocation(line: 2343, column: 20, scope: !9948)
!9952 = !DILocation(line: 2343, column: 35, scope: !9948)
!9953 = !DILocation(line: 2343, column: 32, scope: !9948)
!9954 = !DILocation(line: 2343, column: 27, scope: !9948)
!9955 = !DILocation(line: 2343, column: 9, scope: !9948)
!9956 = !DILocation(line: 2343, column: 3, scope: !9948)
!9957 = !DILocation(line: 2345, column: 11, scope: !9948)
!9958 = !DILocation(line: 2345, column: 20, scope: !9948)
!9959 = !DILocation(line: 2345, column: 36, scope: !9948)
!9960 = !DILocation(line: 2345, column: 33, scope: !9948)
!9961 = !DILocation(line: 2345, column: 29, scope: !9948)
!9962 = !DILocation(line: 2345, column: 27, scope: !9948)
!9963 = !DILocation(line: 2345, column: 9, scope: !9948)
!9964 = !DILocation(line: 2347, column: 27, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2347, column: 6)
!9966 = !DILocation(line: 2347, column: 36, scope: !9965)
!9967 = !DILocation(line: 2347, column: 44, scope: !9965)
!9968 = !DILocation(line: 2347, column: 50, scope: !9965)
!9969 = !DILocation(line: 2347, column: 58, scope: !9965)
!9970 = !DILocation(line: 2347, column: 6, scope: !9965)
!9971 = !DILocation(line: 2347, column: 6, scope: !9897)
!9972 = !DILocation(line: 2349, column: 3, scope: !9965)
!9973 = !DILocation(line: 2351, column: 20, scope: !9897)
!9974 = !DILocation(line: 2351, column: 2, scope: !9897)
!9975 = !DILocation(line: 2351, column: 11, scope: !9897)
!9976 = !DILocation(line: 2351, column: 18, scope: !9897)
!9977 = !DILocation(line: 2353, column: 9, scope: !9897)
!9978 = !DILocation(line: 2353, column: 2, scope: !9897)
!9979 = !DILocation(line: 2354, column: 1, scope: !9897)
!9980 = distinct !DISubprogram(name: "sony_nc_thermal_mode_get", scope: !3, file: !3, line: 2165, type: !5796, scopeLine: 2166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9981 = !DILocalVariable(name: "result", scope: !9980, file: !3, line: 2167, type: !7)
!9982 = !DILocation(line: 2167, column: 15, scope: !9980)
!9983 = !DILocation(line: 2169, column: 6, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 2169, column: 6)
!9985 = !DILocation(line: 2169, column: 6, scope: !9980)
!9986 = !DILocation(line: 2170, column: 3, scope: !9984)
!9987 = !DILocation(line: 2172, column: 9, scope: !9980)
!9988 = !DILocation(line: 2172, column: 16, scope: !9980)
!9989 = !DILocation(line: 2172, column: 2, scope: !9980)
!9990 = !DILocation(line: 2173, column: 1, scope: !9980)
!9991 = distinct !DISubprogram(name: "sony_nc_thermal_profiles_show", scope: !3, file: !3, line: 2175, type: !4489, scopeLine: 2177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!9992 = !DILocalVariable(name: "dev", arg: 1, scope: !9991, file: !3, line: 2175, type: !3523)
!9993 = !DILocation(line: 2175, column: 61, scope: !9991)
!9994 = !DILocalVariable(name: "attr", arg: 2, scope: !9991, file: !3, line: 2176, type: !4491)
!9995 = !DILocation(line: 2176, column: 28, scope: !9991)
!9996 = !DILocalVariable(name: "buffer", arg: 3, scope: !9991, file: !3, line: 2176, type: !181)
!9997 = !DILocation(line: 2176, column: 40, scope: !9991)
!9998 = !DILocalVariable(name: "cnt", scope: !9991, file: !3, line: 2178, type: !2122)
!9999 = !DILocation(line: 2178, column: 8, scope: !9991)
!10000 = !DILocalVariable(name: "idx", scope: !9991, file: !3, line: 2179, type: !574)
!10001 = !DILocation(line: 2179, column: 9, scope: !9991)
!10002 = !DILocation(line: 2181, column: 11, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9991, file: !3, line: 2181, column: 2)
!10004 = !DILocation(line: 2181, column: 7, scope: !10003)
!10005 = !DILocation(line: 2181, column: 16, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 2181, column: 2)
!10007 = !DILocation(line: 2181, column: 20, scope: !10006)
!10008 = !DILocation(line: 2181, column: 2, scope: !10003)
!10009 = !DILocation(line: 2182, column: 8, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10011, file: !3, line: 2182, column: 7)
!10011 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 2181, column: 46)
!10012 = !DILocation(line: 2182, column: 12, scope: !10010)
!10013 = !DILocation(line: 2182, column: 16, scope: !10010)
!10014 = !DILocation(line: 2182, column: 27, scope: !10010)
!10015 = !DILocation(line: 2182, column: 38, scope: !10010)
!10016 = !DILocation(line: 2182, column: 36, scope: !10010)
!10017 = !DILocation(line: 2182, column: 7, scope: !10011)
!10018 = !DILocation(line: 2183, column: 21, scope: !10010)
!10019 = !DILocation(line: 2183, column: 30, scope: !10010)
!10020 = !DILocation(line: 2183, column: 28, scope: !10010)
!10021 = !DILocation(line: 2183, column: 47, scope: !10010)
!10022 = !DILocation(line: 2183, column: 45, scope: !10010)
!10023 = !DILocation(line: 2184, column: 27, scope: !10010)
!10024 = !DILocation(line: 2184, column: 6, scope: !10010)
!10025 = !DILocation(line: 2183, column: 11, scope: !10010)
!10026 = !DILocation(line: 2183, column: 8, scope: !10010)
!10027 = !DILocation(line: 2183, column: 4, scope: !10010)
!10028 = !DILocation(line: 2185, column: 2, scope: !10011)
!10029 = !DILocation(line: 2181, column: 42, scope: !10006)
!10030 = !DILocation(line: 2181, column: 2, scope: !10006)
!10031 = distinct !{!10031, !10008, !10032}
!10032 = !DILocation(line: 2185, column: 2, scope: !10003)
!10033 = !DILocation(line: 2186, column: 19, scope: !9991)
!10034 = !DILocation(line: 2186, column: 28, scope: !9991)
!10035 = !DILocation(line: 2186, column: 26, scope: !9991)
!10036 = !DILocation(line: 2186, column: 45, scope: !9991)
!10037 = !DILocation(line: 2186, column: 43, scope: !9991)
!10038 = !DILocation(line: 2186, column: 9, scope: !9991)
!10039 = !DILocation(line: 2186, column: 6, scope: !9991)
!10040 = !DILocation(line: 2188, column: 9, scope: !9991)
!10041 = !DILocation(line: 2188, column: 2, scope: !9991)
!10042 = distinct !DISubprogram(name: "sony_nc_thermal_mode_show", scope: !3, file: !3, line: 2215, type: !4489, scopeLine: 2217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10043 = !DILocalVariable(name: "dev", arg: 1, scope: !10042, file: !3, line: 2215, type: !3523)
!10044 = !DILocation(line: 2215, column: 57, scope: !10042)
!10045 = !DILocalVariable(name: "attr", arg: 2, scope: !10042, file: !3, line: 2216, type: !4491)
!10046 = !DILocation(line: 2216, column: 28, scope: !10042)
!10047 = !DILocalVariable(name: "buffer", arg: 3, scope: !10042, file: !3, line: 2216, type: !181)
!10048 = !DILocation(line: 2216, column: 40, scope: !10042)
!10049 = !DILocalVariable(name: "count", scope: !10042, file: !3, line: 2218, type: !570)
!10050 = !DILocation(line: 2218, column: 10, scope: !10042)
!10051 = !DILocalVariable(name: "mode", scope: !10042, file: !3, line: 2219, type: !109)
!10052 = !DILocation(line: 2219, column: 6, scope: !10042)
!10053 = !DILocation(line: 2219, column: 13, scope: !10042)
!10054 = !DILocation(line: 2221, column: 6, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 2221, column: 6)
!10056 = !DILocation(line: 2221, column: 11, scope: !10055)
!10057 = !DILocation(line: 2221, column: 6, scope: !10042)
!10058 = !DILocation(line: 2222, column: 10, scope: !10055)
!10059 = !DILocation(line: 2222, column: 3, scope: !10055)
!10060 = !DILocation(line: 2224, column: 19, scope: !10042)
!10061 = !DILocation(line: 2224, column: 67, scope: !10042)
!10062 = !DILocation(line: 2224, column: 46, scope: !10042)
!10063 = !DILocation(line: 2224, column: 10, scope: !10042)
!10064 = !DILocation(line: 2224, column: 8, scope: !10042)
!10065 = !DILocation(line: 2226, column: 9, scope: !10042)
!10066 = !DILocation(line: 2226, column: 2, scope: !10042)
!10067 = !DILocation(line: 2227, column: 1, scope: !10042)
!10068 = distinct !DISubprogram(name: "sony_nc_thermal_mode_store", scope: !3, file: !3, line: 2191, type: !4494, scopeLine: 2194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10069 = !DILocalVariable(name: "dev", arg: 1, scope: !10068, file: !3, line: 2191, type: !3523)
!10070 = !DILocation(line: 2191, column: 58, scope: !10068)
!10071 = !DILocalVariable(name: "attr", arg: 2, scope: !10068, file: !3, line: 2192, type: !4491)
!10072 = !DILocation(line: 2192, column: 28, scope: !10068)
!10073 = !DILocalVariable(name: "buffer", arg: 3, scope: !10068, file: !3, line: 2193, type: !422)
!10074 = !DILocation(line: 2193, column: 15, scope: !10068)
!10075 = !DILocalVariable(name: "count", arg: 4, scope: !10068, file: !3, line: 2193, type: !574)
!10076 = !DILocation(line: 2193, column: 30, scope: !10068)
!10077 = !DILocalVariable(name: "cmd", scope: !10068, file: !3, line: 2195, type: !391)
!10078 = !DILocation(line: 2195, column: 17, scope: !10068)
!10079 = !DILocalVariable(name: "len", scope: !10068, file: !3, line: 2196, type: !574)
!10080 = !DILocation(line: 2196, column: 9, scope: !10068)
!10081 = !DILocation(line: 2196, column: 15, scope: !10068)
!10082 = !DILocation(line: 2198, column: 6, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 2198, column: 6)
!10084 = !DILocation(line: 2198, column: 12, scope: !10083)
!10085 = !DILocation(line: 2198, column: 6, scope: !10068)
!10086 = !DILocation(line: 2199, column: 3, scope: !10083)
!10087 = !DILocation(line: 2202, column: 6, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 2202, column: 6)
!10089 = !DILocation(line: 2202, column: 13, scope: !10088)
!10090 = !DILocation(line: 2202, column: 17, scope: !10088)
!10091 = !DILocation(line: 2202, column: 22, scope: !10088)
!10092 = !DILocation(line: 2202, column: 6, scope: !10068)
!10093 = !DILocation(line: 2203, column: 6, scope: !10088)
!10094 = !DILocation(line: 2203, column: 3, scope: !10088)
!10095 = !DILocation(line: 2205, column: 11, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 2205, column: 2)
!10097 = !DILocation(line: 2205, column: 7, scope: !10096)
!10098 = !DILocation(line: 2205, column: 16, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2205, column: 2)
!10100 = !DILocation(line: 2205, column: 20, scope: !10099)
!10101 = !DILocation(line: 2205, column: 2, scope: !10096)
!10102 = !DILocation(line: 2206, column: 15, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 2206, column: 7)
!10104 = !DILocation(line: 2206, column: 44, scope: !10103)
!10105 = !DILocation(line: 2206, column: 23, scope: !10103)
!10106 = !DILocation(line: 2206, column: 50, scope: !10103)
!10107 = !DILocation(line: 2206, column: 7, scope: !10103)
!10108 = !DILocation(line: 2206, column: 55, scope: !10103)
!10109 = !DILocation(line: 2206, column: 7, scope: !10099)
!10110 = !DILocation(line: 2207, column: 4, scope: !10103)
!10111 = !DILocation(line: 2206, column: 58, scope: !10103)
!10112 = !DILocation(line: 2205, column: 42, scope: !10099)
!10113 = !DILocation(line: 2205, column: 2, scope: !10099)
!10114 = distinct !{!10114, !10101, !10115}
!10115 = !DILocation(line: 2207, column: 4, scope: !10096)
!10116 = !DILocation(line: 2209, column: 31, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 2209, column: 6)
!10118 = !DILocation(line: 2209, column: 6, scope: !10117)
!10119 = !DILocation(line: 2209, column: 6, scope: !10068)
!10120 = !DILocation(line: 2210, column: 3, scope: !10117)
!10121 = !DILocation(line: 2212, column: 9, scope: !10068)
!10122 = !DILocation(line: 2212, column: 2, scope: !10068)
!10123 = !DILocation(line: 2213, column: 1, scope: !10068)
!10124 = distinct !DISubprogram(name: "sony_nc_thermal_mode_set", scope: !3, file: !3, line: 2144, type: !10125, scopeLine: 2145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!109, !391}
!10127 = !DILocalVariable(name: "mode", arg: 1, scope: !10124, file: !3, line: 2144, type: !391)
!10128 = !DILocation(line: 2144, column: 52, scope: !10124)
!10129 = !DILocalVariable(name: "result", scope: !10124, file: !3, line: 2146, type: !7)
!10130 = !DILocation(line: 2146, column: 15, scope: !10124)
!10131 = !DILocation(line: 2154, column: 7, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 2154, column: 6)
!10133 = !DILocation(line: 2154, column: 12, scope: !10132)
!10134 = !DILocation(line: 2154, column: 17, scope: !10132)
!10135 = !DILocation(line: 2154, column: 28, scope: !10132)
!10136 = !DILocation(line: 2154, column: 39, scope: !10132)
!10137 = !DILocation(line: 2154, column: 37, scope: !10132)
!10138 = !DILocation(line: 2154, column: 46, scope: !10132)
!10139 = !DILocation(line: 2154, column: 49, scope: !10132)
!10140 = !DILocation(line: 2154, column: 54, scope: !10132)
!10141 = !DILocation(line: 2154, column: 6, scope: !10124)
!10142 = !DILocation(line: 2155, column: 3, scope: !10132)
!10143 = !DILocation(line: 2157, column: 35, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10124, file: !3, line: 2157, column: 6)
!10145 = !DILocation(line: 2157, column: 40, scope: !10144)
!10146 = !DILocation(line: 2157, column: 48, scope: !10144)
!10147 = !DILocation(line: 2157, column: 6, scope: !10144)
!10148 = !DILocation(line: 2157, column: 6, scope: !10124)
!10149 = !DILocation(line: 2158, column: 3, scope: !10144)
!10150 = !DILocation(line: 2160, column: 20, scope: !10124)
!10151 = !DILocation(line: 2160, column: 2, scope: !10124)
!10152 = !DILocation(line: 2160, column: 13, scope: !10124)
!10153 = !DILocation(line: 2160, column: 18, scope: !10124)
!10154 = !DILocation(line: 2162, column: 2, scope: !10124)
!10155 = !DILocation(line: 2163, column: 1, scope: !10124)
!10156 = distinct !DISubprogram(name: "sony_nc_gfx_switch_status_show", scope: !3, file: !3, line: 2490, type: !4489, scopeLine: 2493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10157 = !DILocalVariable(name: "dev", arg: 1, scope: !10156, file: !3, line: 2490, type: !3523)
!10158 = !DILocation(line: 2490, column: 62, scope: !10156)
!10159 = !DILocalVariable(name: "attr", arg: 2, scope: !10156, file: !3, line: 2491, type: !4491)
!10160 = !DILocation(line: 2491, column: 37, scope: !10156)
!10161 = !DILocalVariable(name: "buffer", arg: 3, scope: !10156, file: !3, line: 2492, type: !181)
!10162 = !DILocation(line: 2492, column: 18, scope: !10156)
!10163 = !DILocalVariable(name: "pos", scope: !10156, file: !3, line: 2494, type: !109)
!10164 = !DILocation(line: 2494, column: 6, scope: !10156)
!10165 = !DILocation(line: 2494, column: 12, scope: !10156)
!10166 = !DILocation(line: 2496, column: 6, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 2496, column: 6)
!10168 = !DILocation(line: 2496, column: 10, scope: !10167)
!10169 = !DILocation(line: 2496, column: 6, scope: !10156)
!10170 = !DILocation(line: 2497, column: 10, scope: !10167)
!10171 = !DILocation(line: 2497, column: 3, scope: !10167)
!10172 = !DILocation(line: 2499, column: 18, scope: !10156)
!10173 = !DILocation(line: 2500, column: 6, scope: !10156)
!10174 = !DILocation(line: 2500, column: 10, scope: !10156)
!10175 = !DILocation(line: 2501, column: 6, scope: !10156)
!10176 = !DILocation(line: 2501, column: 10, scope: !10156)
!10177 = !DILocation(line: 2502, column: 6, scope: !10156)
!10178 = !DILocation(line: 2502, column: 10, scope: !10156)
!10179 = !DILocation(line: 2499, column: 9, scope: !10156)
!10180 = !DILocation(line: 2499, column: 2, scope: !10156)
!10181 = !DILocation(line: 2503, column: 1, scope: !10156)
!10182 = distinct !DISubprogram(name: "__sony_nc_gfx_switch_status_get", scope: !3, file: !3, line: 2455, type: !5796, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10183 = !DILocalVariable(name: "result", scope: !10182, file: !3, line: 2457, type: !7)
!10184 = !DILocation(line: 2457, column: 15, scope: !10182)
!10185 = !DILocation(line: 2459, column: 27, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10182, file: !3, line: 2459, column: 6)
!10187 = !DILocation(line: 2459, column: 37, scope: !10186)
!10188 = !DILocation(line: 2460, column: 5, scope: !10186)
!10189 = !DILocation(line: 2460, column: 15, scope: !10186)
!10190 = !DILocation(line: 2460, column: 22, scope: !10186)
!10191 = !DILocation(line: 2459, column: 6, scope: !10186)
!10192 = !DILocation(line: 2459, column: 6, scope: !10182)
!10193 = !DILocation(line: 2462, column: 3, scope: !10186)
!10194 = !DILocation(line: 2464, column: 10, scope: !10182)
!10195 = !DILocation(line: 2464, column: 20, scope: !10182)
!10196 = !DILocation(line: 2464, column: 2, scope: !10182)
!10197 = !DILocation(line: 2469, column: 10, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10182, file: !3, line: 2464, column: 28)
!10199 = !DILocation(line: 2469, column: 17, scope: !10198)
!10200 = !DILocation(line: 2469, column: 3, scope: !10198)
!10201 = !DILocation(line: 2475, column: 10, scope: !10198)
!10202 = !DILocation(line: 2475, column: 17, scope: !10198)
!10203 = !DILocation(line: 2475, column: 3, scope: !10198)
!10204 = !DILocation(line: 2482, column: 3, scope: !10198)
!10205 = !DILocation(line: 2482, column: 3, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 2482, column: 3)
!10207 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 2482, column: 3)
!10208 = !DILocation(line: 2482, column: 3, scope: !10207)
!10209 = !DILocation(line: 2483, column: 10, scope: !10198)
!10210 = !DILocation(line: 2483, column: 17, scope: !10198)
!10211 = !DILocation(line: 2484, column: 4, scope: !10198)
!10212 = !DILocation(line: 2484, column: 11, scope: !10198)
!10213 = !DILocation(line: 2483, column: 3, scope: !10198)
!10214 = !DILocation(line: 2487, column: 2, scope: !10182)
!10215 = !DILocation(line: 2488, column: 1, scope: !10182)
!10216 = distinct !DISubprogram(name: "sony_nc_highspeed_charging_show", scope: !3, file: !3, line: 2566, type: !4489, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10217 = !DILocalVariable(name: "dev", arg: 1, scope: !10216, file: !3, line: 2566, type: !3523)
!10218 = !DILocation(line: 2566, column: 63, scope: !10216)
!10219 = !DILocalVariable(name: "attr", arg: 2, scope: !10216, file: !3, line: 2567, type: !4491)
!10220 = !DILocation(line: 2567, column: 28, scope: !10216)
!10221 = !DILocalVariable(name: "buffer", arg: 3, scope: !10216, file: !3, line: 2567, type: !181)
!10222 = !DILocation(line: 2567, column: 40, scope: !10216)
!10223 = !DILocalVariable(name: "result", scope: !10216, file: !3, line: 2569, type: !7)
!10224 = !DILocation(line: 2569, column: 15, scope: !10216)
!10225 = !DILocation(line: 2571, column: 6, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 2571, column: 6)
!10227 = !DILocation(line: 2571, column: 6, scope: !10216)
!10228 = !DILocation(line: 2572, column: 3, scope: !10226)
!10229 = !DILocation(line: 2574, column: 18, scope: !10216)
!10230 = !DILocation(line: 2574, column: 45, scope: !10216)
!10231 = !DILocation(line: 2574, column: 52, scope: !10216)
!10232 = !DILocation(line: 2574, column: 9, scope: !10216)
!10233 = !DILocation(line: 2574, column: 2, scope: !10216)
!10234 = !DILocation(line: 2575, column: 1, scope: !10216)
!10235 = distinct !DISubprogram(name: "sony_nc_highspeed_charging_store", scope: !3, file: !3, line: 2547, type: !4494, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10236 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !3, line: 2547, type: !3523)
!10237 = !DILocation(line: 2547, column: 64, scope: !10235)
!10238 = !DILocalVariable(name: "attr", arg: 2, scope: !10235, file: !3, line: 2548, type: !4491)
!10239 = !DILocation(line: 2548, column: 28, scope: !10235)
!10240 = !DILocalVariable(name: "buffer", arg: 3, scope: !10235, file: !3, line: 2549, type: !422)
!10241 = !DILocation(line: 2549, column: 15, scope: !10235)
!10242 = !DILocalVariable(name: "count", arg: 4, scope: !10235, file: !3, line: 2549, type: !574)
!10243 = !DILocation(line: 2549, column: 30, scope: !10235)
!10244 = !DILocalVariable(name: "result", scope: !10235, file: !3, line: 2551, type: !7)
!10245 = !DILocation(line: 2551, column: 15, scope: !10235)
!10246 = !DILocalVariable(name: "value", scope: !10235, file: !3, line: 2552, type: !193)
!10247 = !DILocation(line: 2552, column: 16, scope: !10235)
!10248 = !DILocation(line: 2554, column: 6, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 2554, column: 6)
!10250 = !DILocation(line: 2554, column: 12, scope: !10249)
!10251 = !DILocation(line: 2554, column: 6, scope: !10235)
!10252 = !DILocation(line: 2555, column: 3, scope: !10249)
!10253 = !DILocation(line: 2557, column: 15, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 2557, column: 6)
!10255 = !DILocation(line: 2557, column: 6, scope: !10254)
!10256 = !DILocation(line: 2557, column: 35, scope: !10254)
!10257 = !DILocation(line: 2557, column: 38, scope: !10254)
!10258 = !DILocation(line: 2557, column: 44, scope: !10254)
!10259 = !DILocation(line: 2557, column: 6, scope: !10235)
!10260 = !DILocation(line: 2558, column: 3, scope: !10254)
!10261 = !DILocation(line: 2560, column: 35, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 2560, column: 6)
!10263 = !DILocation(line: 2560, column: 41, scope: !10262)
!10264 = !DILocation(line: 2560, column: 49, scope: !10262)
!10265 = !DILocation(line: 2560, column: 6, scope: !10262)
!10266 = !DILocation(line: 2560, column: 6, scope: !10235)
!10267 = !DILocation(line: 2561, column: 3, scope: !10262)
!10268 = !DILocation(line: 2563, column: 9, scope: !10235)
!10269 = !DILocation(line: 2563, column: 2, scope: !10235)
!10270 = !DILocation(line: 2564, column: 1, scope: !10235)
!10271 = distinct !DISubprogram(name: "sony_nc_setup_rfkill", scope: !3, file: !3, line: 1606, type: !10272, scopeLine: 1608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10272 = !DISubroutineType(types: !10273)
!10273 = !{!109, !4529, !133}
!10274 = !DILocalVariable(name: "device", arg: 1, scope: !10271, file: !3, line: 1606, type: !4529)
!10275 = !DILocation(line: 1606, column: 53, scope: !10271)
!10276 = !DILocalVariable(name: "nc_type", arg: 2, scope: !10271, file: !3, line: 1607, type: !133)
!10277 = !DILocation(line: 1607, column: 25, scope: !10271)
!10278 = !DILocalVariable(name: "err", scope: !10271, file: !3, line: 1609, type: !109)
!10279 = !DILocation(line: 1609, column: 6, scope: !10271)
!10280 = !DILocalVariable(name: "rfk", scope: !10271, file: !3, line: 1610, type: !5429)
!10281 = !DILocation(line: 1610, column: 17, scope: !10271)
!10282 = !DILocalVariable(name: "type", scope: !10271, file: !3, line: 1611, type: !140)
!10283 = !DILocation(line: 1611, column: 19, scope: !10271)
!10284 = !DILocalVariable(name: "name", scope: !10271, file: !3, line: 1612, type: !422)
!10285 = !DILocation(line: 1612, column: 14, scope: !10271)
!10286 = !DILocalVariable(name: "result", scope: !10271, file: !3, line: 1613, type: !109)
!10287 = !DILocation(line: 1613, column: 6, scope: !10271)
!10288 = !DILocalVariable(name: "hwblock", scope: !10271, file: !3, line: 1614, type: !844)
!10289 = !DILocation(line: 1614, column: 7, scope: !10271)
!10290 = !DILocalVariable(name: "swblock", scope: !10271, file: !3, line: 1614, type: !844)
!10291 = !DILocation(line: 1614, column: 16, scope: !10271)
!10292 = !DILocation(line: 1616, column: 10, scope: !10271)
!10293 = !DILocation(line: 1616, column: 2, scope: !10271)
!10294 = !DILocation(line: 1618, column: 8, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1616, column: 19)
!10296 = !DILocation(line: 1619, column: 8, scope: !10295)
!10297 = !DILocation(line: 1620, column: 3, scope: !10295)
!10298 = !DILocation(line: 1622, column: 8, scope: !10295)
!10299 = !DILocation(line: 1623, column: 8, scope: !10295)
!10300 = !DILocation(line: 1624, column: 3, scope: !10295)
!10301 = !DILocation(line: 1626, column: 8, scope: !10295)
!10302 = !DILocation(line: 1627, column: 8, scope: !10295)
!10303 = !DILocation(line: 1628, column: 3, scope: !10295)
!10304 = !DILocation(line: 1630, column: 8, scope: !10295)
!10305 = !DILocation(line: 1631, column: 8, scope: !10295)
!10306 = !DILocation(line: 1632, column: 3, scope: !10295)
!10307 = !DILocation(line: 1634, column: 3, scope: !10295)
!10308 = !DILocation(line: 1637, column: 21, scope: !10271)
!10309 = !DILocation(line: 1637, column: 28, scope: !10271)
!10310 = !DILocation(line: 1637, column: 36, scope: !10271)
!10311 = !DILocation(line: 1637, column: 41, scope: !10271)
!10312 = !DILocation(line: 1638, column: 33, scope: !10271)
!10313 = !DILocation(line: 1638, column: 25, scope: !10271)
!10314 = !DILocation(line: 1637, column: 8, scope: !10271)
!10315 = !DILocation(line: 1637, column: 6, scope: !10271)
!10316 = !DILocation(line: 1639, column: 7, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1639, column: 6)
!10318 = !DILocation(line: 1639, column: 6, scope: !10271)
!10319 = !DILocation(line: 1640, column: 3, scope: !10317)
!10320 = !DILocation(line: 1642, column: 29, scope: !10271)
!10321 = !DILocation(line: 1642, column: 8, scope: !10271)
!10322 = !DILocation(line: 1642, column: 6, scope: !10271)
!10323 = !DILocation(line: 1643, column: 6, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1643, column: 6)
!10325 = !DILocation(line: 1643, column: 10, scope: !10324)
!10326 = !DILocation(line: 1643, column: 6, scope: !10271)
!10327 = !DILocation(line: 1644, column: 18, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 1643, column: 15)
!10329 = !DILocation(line: 1644, column: 3, scope: !10328)
!10330 = !DILocation(line: 1645, column: 10, scope: !10328)
!10331 = !DILocation(line: 1645, column: 3, scope: !10328)
!10332 = !DILocation(line: 1647, column: 14, scope: !10271)
!10333 = !DILocation(line: 1647, column: 21, scope: !10271)
!10334 = !DILocation(line: 1647, column: 12, scope: !10271)
!10335 = !DILocation(line: 1647, column: 10, scope: !10271)
!10336 = !DILocation(line: 1649, column: 29, scope: !10271)
!10337 = !DILocation(line: 1650, column: 28, scope: !10271)
!10338 = !DILocation(line: 1650, column: 8, scope: !10271)
!10339 = !DILocation(line: 1649, column: 8, scope: !10271)
!10340 = !DILocation(line: 1649, column: 6, scope: !10271)
!10341 = !DILocation(line: 1652, column: 6, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1652, column: 6)
!10343 = !DILocation(line: 1652, column: 10, scope: !10342)
!10344 = !DILocation(line: 1652, column: 6, scope: !10271)
!10345 = !DILocation(line: 1653, column: 18, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 1652, column: 15)
!10347 = !DILocation(line: 1653, column: 3, scope: !10346)
!10348 = !DILocation(line: 1654, column: 10, scope: !10346)
!10349 = !DILocation(line: 1654, column: 3, scope: !10346)
!10350 = !DILocation(line: 1656, column: 14, scope: !10271)
!10351 = !DILocation(line: 1656, column: 21, scope: !10271)
!10352 = !DILocation(line: 1656, column: 12, scope: !10271)
!10353 = !DILocation(line: 1656, column: 10, scope: !10271)
!10354 = !DILocation(line: 1658, column: 23, scope: !10271)
!10355 = !DILocation(line: 1658, column: 28, scope: !10271)
!10356 = !DILocation(line: 1658, column: 2, scope: !10271)
!10357 = !DILocation(line: 1659, column: 22, scope: !10271)
!10358 = !DILocation(line: 1659, column: 27, scope: !10271)
!10359 = !DILocation(line: 1659, column: 2, scope: !10271)
!10360 = !DILocation(line: 1661, column: 24, scope: !10271)
!10361 = !DILocation(line: 1661, column: 8, scope: !10271)
!10362 = !DILocation(line: 1661, column: 6, scope: !10271)
!10363 = !DILocation(line: 1662, column: 6, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1662, column: 6)
!10365 = !DILocation(line: 1662, column: 6, scope: !10271)
!10366 = !DILocation(line: 1663, column: 18, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 1662, column: 11)
!10368 = !DILocation(line: 1663, column: 3, scope: !10367)
!10369 = !DILocation(line: 1664, column: 10, scope: !10367)
!10370 = !DILocation(line: 1664, column: 3, scope: !10367)
!10371 = !DILocation(line: 1666, column: 33, scope: !10271)
!10372 = !DILocation(line: 1666, column: 22, scope: !10271)
!10373 = !DILocation(line: 1666, column: 2, scope: !10271)
!10374 = !DILocation(line: 1666, column: 31, scope: !10271)
!10375 = !DILocation(line: 1667, column: 9, scope: !10271)
!10376 = !DILocation(line: 1667, column: 2, scope: !10271)
!10377 = !DILocation(line: 1668, column: 1, scope: !10271)
!10378 = distinct !DISubprogram(name: "sony_nc_rfkill_set", scope: !3, file: !3, line: 1591, type: !5444, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10379 = !DILocalVariable(name: "data", arg: 1, scope: !10378, file: !3, line: 1591, type: !177)
!10380 = !DILocation(line: 1591, column: 37, scope: !10378)
!10381 = !DILocalVariable(name: "blocked", arg: 2, scope: !10378, file: !3, line: 1591, type: !844)
!10382 = !DILocation(line: 1591, column: 48, scope: !10378)
!10383 = !DILocalVariable(name: "result", scope: !10378, file: !3, line: 1593, type: !109)
!10384 = !DILocation(line: 1593, column: 6, scope: !10378)
!10385 = !DILocalVariable(name: "argument", scope: !10378, file: !3, line: 1594, type: !109)
!10386 = !DILocation(line: 1594, column: 6, scope: !10378)
!10387 = !DILocation(line: 1594, column: 44, scope: !10378)
!10388 = !DILocation(line: 1594, column: 37, scope: !10378)
!10389 = !DILocation(line: 1594, column: 17, scope: !10378)
!10390 = !DILocation(line: 1594, column: 50, scope: !10378)
!10391 = !DILocation(line: 1596, column: 7, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 1596, column: 6)
!10393 = !DILocation(line: 1596, column: 6, scope: !10378)
!10394 = !DILocation(line: 1597, column: 12, scope: !10392)
!10395 = !DILocation(line: 1597, column: 3, scope: !10392)
!10396 = !DILocation(line: 1599, column: 30, scope: !10378)
!10397 = !DILocation(line: 1599, column: 50, scope: !10378)
!10398 = !DILocation(line: 1599, column: 9, scope: !10378)
!10399 = !DILocation(line: 1599, column: 2, scope: !10378)
!10400 = distinct !DISubprogram(name: "sony_nc_kbd_backlight_mode_show", scope: !3, file: !3, line: 1811, type: !4489, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10401 = !DILocalVariable(name: "dev", arg: 1, scope: !10400, file: !3, line: 1811, type: !3523)
!10402 = !DILocation(line: 1811, column: 63, scope: !10400)
!10403 = !DILocalVariable(name: "attr", arg: 2, scope: !10400, file: !3, line: 1812, type: !4491)
!10404 = !DILocation(line: 1812, column: 28, scope: !10400)
!10405 = !DILocalVariable(name: "buffer", arg: 3, scope: !10400, file: !3, line: 1812, type: !181)
!10406 = !DILocation(line: 1812, column: 40, scope: !10400)
!10407 = !DILocalVariable(name: "count", scope: !10400, file: !3, line: 1814, type: !570)
!10408 = !DILocation(line: 1814, column: 10, scope: !10400)
!10409 = !DILocation(line: 1815, column: 19, scope: !10400)
!10410 = !DILocation(line: 1815, column: 46, scope: !10400)
!10411 = !DILocation(line: 1815, column: 57, scope: !10400)
!10412 = !DILocation(line: 1815, column: 10, scope: !10400)
!10413 = !DILocation(line: 1815, column: 8, scope: !10400)
!10414 = !DILocation(line: 1816, column: 9, scope: !10400)
!10415 = !DILocation(line: 1816, column: 2, scope: !10400)
!10416 = distinct !DISubprogram(name: "sony_nc_kbd_backlight_mode_store", scope: !3, file: !3, line: 1791, type: !4494, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10417 = !DILocalVariable(name: "dev", arg: 1, scope: !10416, file: !3, line: 1791, type: !3523)
!10418 = !DILocation(line: 1791, column: 64, scope: !10416)
!10419 = !DILocalVariable(name: "attr", arg: 2, scope: !10416, file: !3, line: 1792, type: !4491)
!10420 = !DILocation(line: 1792, column: 28, scope: !10416)
!10421 = !DILocalVariable(name: "buffer", arg: 3, scope: !10416, file: !3, line: 1793, type: !422)
!10422 = !DILocation(line: 1793, column: 15, scope: !10416)
!10423 = !DILocalVariable(name: "count", arg: 4, scope: !10416, file: !3, line: 1793, type: !574)
!10424 = !DILocation(line: 1793, column: 30, scope: !10416)
!10425 = !DILocalVariable(name: "ret", scope: !10416, file: !3, line: 1795, type: !109)
!10426 = !DILocation(line: 1795, column: 6, scope: !10416)
!10427 = !DILocalVariable(name: "value", scope: !10416, file: !3, line: 1796, type: !193)
!10428 = !DILocation(line: 1796, column: 16, scope: !10416)
!10429 = !DILocation(line: 1798, column: 6, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 1798, column: 6)
!10431 = !DILocation(line: 1798, column: 12, scope: !10430)
!10432 = !DILocation(line: 1798, column: 6, scope: !10416)
!10433 = !DILocation(line: 1799, column: 3, scope: !10430)
!10434 = !DILocation(line: 1801, column: 15, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 1801, column: 6)
!10436 = !DILocation(line: 1801, column: 6, scope: !10435)
!10437 = !DILocation(line: 1801, column: 6, scope: !10416)
!10438 = !DILocation(line: 1802, column: 3, scope: !10435)
!10439 = !DILocation(line: 1804, column: 41, scope: !10416)
!10440 = !DILocation(line: 1804, column: 8, scope: !10416)
!10441 = !DILocation(line: 1804, column: 6, scope: !10416)
!10442 = !DILocation(line: 1805, column: 6, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 1805, column: 6)
!10444 = !DILocation(line: 1805, column: 10, scope: !10443)
!10445 = !DILocation(line: 1805, column: 6, scope: !10416)
!10446 = !DILocation(line: 1806, column: 10, scope: !10443)
!10447 = !DILocation(line: 1806, column: 3, scope: !10443)
!10448 = !DILocation(line: 1808, column: 9, scope: !10416)
!10449 = !DILocation(line: 1808, column: 2, scope: !10416)
!10450 = !DILocation(line: 1809, column: 1, scope: !10416)
!10451 = distinct !DISubprogram(name: "__sony_nc_kbd_backlight_mode_set", scope: !3, file: !3, line: 1769, type: !10452, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10452 = !DISubroutineType(types: !10453)
!10453 = !{!570, !223}
!10454 = !DILocalVariable(name: "value", arg: 1, scope: !10451, file: !3, line: 1769, type: !223)
!10455 = !DILocation(line: 1769, column: 52, scope: !10451)
!10456 = !DILocalVariable(name: "result", scope: !10451, file: !3, line: 1771, type: !109)
!10457 = !DILocation(line: 1771, column: 6, scope: !10451)
!10458 = !DILocation(line: 1773, column: 6, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 1773, column: 6)
!10460 = !DILocation(line: 1773, column: 12, scope: !10459)
!10461 = !DILocation(line: 1773, column: 6, scope: !10451)
!10462 = !DILocation(line: 1774, column: 3, scope: !10459)
!10463 = !DILocation(line: 1776, column: 27, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 1776, column: 6)
!10465 = !DILocation(line: 1776, column: 38, scope: !10464)
!10466 = !DILocation(line: 1777, column: 6, scope: !10464)
!10467 = !DILocation(line: 1777, column: 12, scope: !10464)
!10468 = !DILocation(line: 1777, column: 24, scope: !10464)
!10469 = !DILocation(line: 1777, column: 35, scope: !10464)
!10470 = !DILocation(line: 1777, column: 21, scope: !10464)
!10471 = !DILocation(line: 1776, column: 6, scope: !10464)
!10472 = !DILocation(line: 1776, column: 6, scope: !10451)
!10473 = !DILocation(line: 1778, column: 3, scope: !10464)
!10474 = !DILocation(line: 1781, column: 6, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 1781, column: 6)
!10476 = !DILocation(line: 1781, column: 12, scope: !10475)
!10477 = !DILocation(line: 1781, column: 6, scope: !10451)
!10478 = !DILocation(line: 1782, column: 24, scope: !10475)
!10479 = !DILocation(line: 1782, column: 35, scope: !10475)
!10480 = !DILocation(line: 1783, column: 6, scope: !10475)
!10481 = !DILocation(line: 1783, column: 12, scope: !10475)
!10482 = !DILocation(line: 1783, column: 24, scope: !10475)
!10483 = !DILocation(line: 1783, column: 35, scope: !10475)
!10484 = !DILocation(line: 1783, column: 40, scope: !10475)
!10485 = !DILocation(line: 1783, column: 21, scope: !10475)
!10486 = !DILocation(line: 1782, column: 3, scope: !10475)
!10487 = !DILocation(line: 1786, column: 20, scope: !10451)
!10488 = !DILocation(line: 1786, column: 2, scope: !10451)
!10489 = !DILocation(line: 1786, column: 13, scope: !10451)
!10490 = !DILocation(line: 1786, column: 18, scope: !10451)
!10491 = !DILocation(line: 1788, column: 2, scope: !10451)
!10492 = !DILocation(line: 1789, column: 1, scope: !10451)
!10493 = distinct !DISubprogram(name: "sony_nc_kbd_backlight_timeout_show", scope: !3, file: !3, line: 1855, type: !4489, scopeLine: 1857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10494 = !DILocalVariable(name: "dev", arg: 1, scope: !10493, file: !3, line: 1855, type: !3523)
!10495 = !DILocation(line: 1855, column: 66, scope: !10493)
!10496 = !DILocalVariable(name: "attr", arg: 2, scope: !10493, file: !3, line: 1856, type: !4491)
!10497 = !DILocation(line: 1856, column: 28, scope: !10493)
!10498 = !DILocalVariable(name: "buffer", arg: 3, scope: !10493, file: !3, line: 1856, type: !181)
!10499 = !DILocation(line: 1856, column: 40, scope: !10493)
!10500 = !DILocalVariable(name: "count", scope: !10493, file: !3, line: 1858, type: !570)
!10501 = !DILocation(line: 1858, column: 10, scope: !10493)
!10502 = !DILocation(line: 1859, column: 19, scope: !10493)
!10503 = !DILocation(line: 1859, column: 46, scope: !10493)
!10504 = !DILocation(line: 1859, column: 57, scope: !10493)
!10505 = !DILocation(line: 1859, column: 10, scope: !10493)
!10506 = !DILocation(line: 1859, column: 8, scope: !10493)
!10507 = !DILocation(line: 1860, column: 9, scope: !10493)
!10508 = !DILocation(line: 1860, column: 2, scope: !10493)
!10509 = distinct !DISubprogram(name: "sony_nc_kbd_backlight_timeout_store", scope: !3, file: !3, line: 1835, type: !4494, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10510 = !DILocalVariable(name: "dev", arg: 1, scope: !10509, file: !3, line: 1835, type: !3523)
!10511 = !DILocation(line: 1835, column: 67, scope: !10509)
!10512 = !DILocalVariable(name: "attr", arg: 2, scope: !10509, file: !3, line: 1836, type: !4491)
!10513 = !DILocation(line: 1836, column: 28, scope: !10509)
!10514 = !DILocalVariable(name: "buffer", arg: 3, scope: !10509, file: !3, line: 1837, type: !422)
!10515 = !DILocation(line: 1837, column: 15, scope: !10509)
!10516 = !DILocalVariable(name: "count", arg: 4, scope: !10509, file: !3, line: 1837, type: !574)
!10517 = !DILocation(line: 1837, column: 30, scope: !10509)
!10518 = !DILocalVariable(name: "ret", scope: !10509, file: !3, line: 1839, type: !109)
!10519 = !DILocation(line: 1839, column: 6, scope: !10509)
!10520 = !DILocalVariable(name: "value", scope: !10509, file: !3, line: 1840, type: !193)
!10521 = !DILocation(line: 1840, column: 16, scope: !10509)
!10522 = !DILocation(line: 1842, column: 6, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 1842, column: 6)
!10524 = !DILocation(line: 1842, column: 12, scope: !10523)
!10525 = !DILocation(line: 1842, column: 6, scope: !10509)
!10526 = !DILocation(line: 1843, column: 3, scope: !10523)
!10527 = !DILocation(line: 1845, column: 15, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 1845, column: 6)
!10529 = !DILocation(line: 1845, column: 6, scope: !10528)
!10530 = !DILocation(line: 1845, column: 6, scope: !10509)
!10531 = !DILocation(line: 1846, column: 3, scope: !10528)
!10532 = !DILocation(line: 1848, column: 44, scope: !10509)
!10533 = !DILocation(line: 1848, column: 8, scope: !10509)
!10534 = !DILocation(line: 1848, column: 6, scope: !10509)
!10535 = !DILocation(line: 1849, column: 6, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 1849, column: 6)
!10537 = !DILocation(line: 1849, column: 10, scope: !10536)
!10538 = !DILocation(line: 1849, column: 6, scope: !10509)
!10539 = !DILocation(line: 1850, column: 10, scope: !10536)
!10540 = !DILocation(line: 1850, column: 3, scope: !10536)
!10541 = !DILocation(line: 1852, column: 9, scope: !10509)
!10542 = !DILocation(line: 1852, column: 2, scope: !10509)
!10543 = !DILocation(line: 1853, column: 1, scope: !10509)
!10544 = distinct !DISubprogram(name: "__sony_nc_kbd_backlight_timeout_set", scope: !3, file: !3, line: 1819, type: !10545, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!109, !223}
!10547 = !DILocalVariable(name: "value", arg: 1, scope: !10544, file: !3, line: 1819, type: !223)
!10548 = !DILocation(line: 1819, column: 51, scope: !10544)
!10549 = !DILocalVariable(name: "result", scope: !10544, file: !3, line: 1821, type: !109)
!10550 = !DILocation(line: 1821, column: 6, scope: !10544)
!10551 = !DILocation(line: 1823, column: 6, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 1823, column: 6)
!10553 = !DILocation(line: 1823, column: 12, scope: !10552)
!10554 = !DILocation(line: 1823, column: 6, scope: !10544)
!10555 = !DILocation(line: 1824, column: 3, scope: !10552)
!10556 = !DILocation(line: 1826, column: 27, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 1826, column: 6)
!10558 = !DILocation(line: 1826, column: 38, scope: !10557)
!10559 = !DILocation(line: 1826, column: 47, scope: !10557)
!10560 = !DILocation(line: 1826, column: 53, scope: !10557)
!10561 = !DILocation(line: 1827, column: 6, scope: !10557)
!10562 = !DILocation(line: 1827, column: 17, scope: !10557)
!10563 = !DILocation(line: 1827, column: 22, scope: !10557)
!10564 = !DILocation(line: 1826, column: 62, scope: !10557)
!10565 = !DILocation(line: 1826, column: 6, scope: !10557)
!10566 = !DILocation(line: 1826, column: 6, scope: !10544)
!10567 = !DILocation(line: 1828, column: 3, scope: !10557)
!10568 = !DILocation(line: 1830, column: 23, scope: !10544)
!10569 = !DILocation(line: 1830, column: 2, scope: !10544)
!10570 = !DILocation(line: 1830, column: 13, scope: !10544)
!10571 = !DILocation(line: 1830, column: 21, scope: !10544)
!10572 = !DILocation(line: 1832, column: 2, scope: !10544)
!10573 = !DILocation(line: 1833, column: 1, scope: !10544)
!10574 = distinct !DISubprogram(name: "sony_nc_lowbatt_show", scope: !3, file: !3, line: 2640, type: !4489, scopeLine: 2642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10575 = !DILocalVariable(name: "dev", arg: 1, scope: !10574, file: !3, line: 2640, type: !3523)
!10576 = !DILocation(line: 2640, column: 52, scope: !10574)
!10577 = !DILocalVariable(name: "attr", arg: 2, scope: !10574, file: !3, line: 2641, type: !4491)
!10578 = !DILocation(line: 2641, column: 28, scope: !10574)
!10579 = !DILocalVariable(name: "buffer", arg: 3, scope: !10574, file: !3, line: 2641, type: !181)
!10580 = !DILocation(line: 2641, column: 40, scope: !10574)
!10581 = !DILocalVariable(name: "result", scope: !10574, file: !3, line: 2643, type: !7)
!10582 = !DILocation(line: 2643, column: 15, scope: !10574)
!10583 = !DILocation(line: 2645, column: 6, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10574, file: !3, line: 2645, column: 6)
!10585 = !DILocation(line: 2645, column: 6, scope: !10574)
!10586 = !DILocation(line: 2646, column: 3, scope: !10584)
!10587 = !DILocation(line: 2648, column: 18, scope: !10574)
!10588 = !DILocation(line: 2648, column: 45, scope: !10574)
!10589 = !DILocation(line: 2648, column: 52, scope: !10574)
!10590 = !DILocation(line: 2648, column: 9, scope: !10574)
!10591 = !DILocation(line: 2648, column: 2, scope: !10574)
!10592 = !DILocation(line: 2649, column: 1, scope: !10574)
!10593 = distinct !DISubprogram(name: "sony_nc_lowbatt_store", scope: !3, file: !3, line: 2621, type: !4494, scopeLine: 2624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10594 = !DILocalVariable(name: "dev", arg: 1, scope: !10593, file: !3, line: 2621, type: !3523)
!10595 = !DILocation(line: 2621, column: 53, scope: !10593)
!10596 = !DILocalVariable(name: "attr", arg: 2, scope: !10593, file: !3, line: 2622, type: !4491)
!10597 = !DILocation(line: 2622, column: 28, scope: !10593)
!10598 = !DILocalVariable(name: "buffer", arg: 3, scope: !10593, file: !3, line: 2623, type: !422)
!10599 = !DILocation(line: 2623, column: 15, scope: !10593)
!10600 = !DILocalVariable(name: "count", arg: 4, scope: !10593, file: !3, line: 2623, type: !574)
!10601 = !DILocation(line: 2623, column: 30, scope: !10593)
!10602 = !DILocalVariable(name: "result", scope: !10593, file: !3, line: 2625, type: !7)
!10603 = !DILocation(line: 2625, column: 15, scope: !10593)
!10604 = !DILocalVariable(name: "value", scope: !10593, file: !3, line: 2626, type: !193)
!10605 = !DILocation(line: 2626, column: 16, scope: !10593)
!10606 = !DILocation(line: 2628, column: 6, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2628, column: 6)
!10608 = !DILocation(line: 2628, column: 12, scope: !10607)
!10609 = !DILocation(line: 2628, column: 6, scope: !10593)
!10610 = !DILocation(line: 2629, column: 3, scope: !10607)
!10611 = !DILocation(line: 2631, column: 15, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2631, column: 6)
!10613 = !DILocation(line: 2631, column: 6, scope: !10612)
!10614 = !DILocation(line: 2631, column: 35, scope: !10612)
!10615 = !DILocation(line: 2631, column: 38, scope: !10612)
!10616 = !DILocation(line: 2631, column: 44, scope: !10612)
!10617 = !DILocation(line: 2631, column: 6, scope: !10593)
!10618 = !DILocation(line: 2632, column: 3, scope: !10612)
!10619 = !DILocation(line: 2634, column: 35, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2634, column: 6)
!10621 = !DILocation(line: 2634, column: 41, scope: !10620)
!10622 = !DILocation(line: 2634, column: 6, scope: !10620)
!10623 = !DILocation(line: 2634, column: 6, scope: !10593)
!10624 = !DILocation(line: 2635, column: 3, scope: !10620)
!10625 = !DILocation(line: 2637, column: 9, scope: !10593)
!10626 = !DILocation(line: 2637, column: 2, scope: !10593)
!10627 = !DILocation(line: 2638, column: 1, scope: !10593)
!10628 = distinct !DISubprogram(name: "sony_nc_fanspeed_show", scope: !3, file: !3, line: 2717, type: !4489, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10629 = !DILocalVariable(name: "dev", arg: 1, scope: !10628, file: !3, line: 2717, type: !3523)
!10630 = !DILocation(line: 2717, column: 53, scope: !10628)
!10631 = !DILocalVariable(name: "attr", arg: 2, scope: !10628, file: !3, line: 2718, type: !4491)
!10632 = !DILocation(line: 2718, column: 28, scope: !10628)
!10633 = !DILocalVariable(name: "buffer", arg: 3, scope: !10628, file: !3, line: 2718, type: !181)
!10634 = !DILocation(line: 2718, column: 40, scope: !10628)
!10635 = !DILocalVariable(name: "result", scope: !10628, file: !3, line: 2720, type: !7)
!10636 = !DILocation(line: 2720, column: 15, scope: !10628)
!10637 = !DILocation(line: 2722, column: 6, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 2722, column: 6)
!10639 = !DILocation(line: 2722, column: 6, scope: !10628)
!10640 = !DILocation(line: 2723, column: 3, scope: !10638)
!10641 = !DILocation(line: 2725, column: 18, scope: !10628)
!10642 = !DILocation(line: 2725, column: 45, scope: !10628)
!10643 = !DILocation(line: 2725, column: 52, scope: !10628)
!10644 = !DILocation(line: 2725, column: 9, scope: !10628)
!10645 = !DILocation(line: 2725, column: 2, scope: !10628)
!10646 = !DILocation(line: 2726, column: 1, scope: !10628)
!10647 = distinct !DISubprogram(name: "sony_nc_hsfan_show", scope: !3, file: !3, line: 2706, type: !4489, scopeLine: 2708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10648 = !DILocalVariable(name: "dev", arg: 1, scope: !10647, file: !3, line: 2706, type: !3523)
!10649 = !DILocation(line: 2706, column: 50, scope: !10647)
!10650 = !DILocalVariable(name: "attr", arg: 2, scope: !10647, file: !3, line: 2707, type: !4491)
!10651 = !DILocation(line: 2707, column: 28, scope: !10647)
!10652 = !DILocalVariable(name: "buffer", arg: 3, scope: !10647, file: !3, line: 2707, type: !181)
!10653 = !DILocation(line: 2707, column: 40, scope: !10647)
!10654 = !DILocalVariable(name: "result", scope: !10647, file: !3, line: 2709, type: !7)
!10655 = !DILocation(line: 2709, column: 15, scope: !10647)
!10656 = !DILocation(line: 2711, column: 6, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10647, file: !3, line: 2711, column: 6)
!10658 = !DILocation(line: 2711, column: 6, scope: !10647)
!10659 = !DILocation(line: 2712, column: 3, scope: !10657)
!10660 = !DILocation(line: 2714, column: 18, scope: !10647)
!10661 = !DILocation(line: 2714, column: 45, scope: !10647)
!10662 = !DILocation(line: 2714, column: 52, scope: !10647)
!10663 = !DILocation(line: 2714, column: 9, scope: !10647)
!10664 = !DILocation(line: 2714, column: 2, scope: !10647)
!10665 = !DILocation(line: 2715, column: 1, scope: !10647)
!10666 = distinct !DISubprogram(name: "sony_nc_hsfan_store", scope: !3, file: !3, line: 2687, type: !4494, scopeLine: 2690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10667 = !DILocalVariable(name: "dev", arg: 1, scope: !10666, file: !3, line: 2687, type: !3523)
!10668 = !DILocation(line: 2687, column: 51, scope: !10666)
!10669 = !DILocalVariable(name: "attr", arg: 2, scope: !10666, file: !3, line: 2688, type: !4491)
!10670 = !DILocation(line: 2688, column: 28, scope: !10666)
!10671 = !DILocalVariable(name: "buffer", arg: 3, scope: !10666, file: !3, line: 2689, type: !422)
!10672 = !DILocation(line: 2689, column: 15, scope: !10666)
!10673 = !DILocalVariable(name: "count", arg: 4, scope: !10666, file: !3, line: 2689, type: !574)
!10674 = !DILocation(line: 2689, column: 30, scope: !10666)
!10675 = !DILocalVariable(name: "result", scope: !10666, file: !3, line: 2691, type: !7)
!10676 = !DILocation(line: 2691, column: 15, scope: !10666)
!10677 = !DILocalVariable(name: "value", scope: !10666, file: !3, line: 2692, type: !193)
!10678 = !DILocation(line: 2692, column: 16, scope: !10666)
!10679 = !DILocation(line: 2694, column: 6, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 2694, column: 6)
!10681 = !DILocation(line: 2694, column: 12, scope: !10680)
!10682 = !DILocation(line: 2694, column: 6, scope: !10666)
!10683 = !DILocation(line: 2695, column: 3, scope: !10680)
!10684 = !DILocation(line: 2697, column: 15, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 2697, column: 6)
!10686 = !DILocation(line: 2697, column: 6, scope: !10685)
!10687 = !DILocation(line: 2697, column: 35, scope: !10685)
!10688 = !DILocation(line: 2697, column: 38, scope: !10685)
!10689 = !DILocation(line: 2697, column: 44, scope: !10685)
!10690 = !DILocation(line: 2697, column: 6, scope: !10666)
!10691 = !DILocation(line: 2698, column: 3, scope: !10685)
!10692 = !DILocation(line: 2700, column: 35, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 2700, column: 6)
!10694 = !DILocation(line: 2700, column: 41, scope: !10693)
!10695 = !DILocation(line: 2700, column: 49, scope: !10693)
!10696 = !DILocation(line: 2700, column: 6, scope: !10693)
!10697 = !DILocation(line: 2700, column: 6, scope: !10666)
!10698 = !DILocation(line: 2701, column: 3, scope: !10693)
!10699 = !DILocation(line: 2703, column: 9, scope: !10666)
!10700 = !DILocation(line: 2703, column: 2, scope: !10666)
!10701 = !DILocation(line: 2704, column: 1, scope: !10666)
!10702 = distinct !DISubprogram(name: "sony_nc_usb_charge_show", scope: !3, file: !3, line: 2813, type: !4489, scopeLine: 2815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10703 = !DILocalVariable(name: "dev", arg: 1, scope: !10702, file: !3, line: 2813, type: !3523)
!10704 = !DILocation(line: 2813, column: 55, scope: !10702)
!10705 = !DILocalVariable(name: "attr", arg: 2, scope: !10702, file: !3, line: 2814, type: !4491)
!10706 = !DILocation(line: 2814, column: 28, scope: !10702)
!10707 = !DILocalVariable(name: "buffer", arg: 3, scope: !10702, file: !3, line: 2814, type: !181)
!10708 = !DILocation(line: 2814, column: 40, scope: !10702)
!10709 = !DILocalVariable(name: "result", scope: !10702, file: !3, line: 2816, type: !7)
!10710 = !DILocation(line: 2816, column: 15, scope: !10702)
!10711 = !DILocation(line: 2818, column: 6, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2818, column: 6)
!10713 = !DILocation(line: 2818, column: 6, scope: !10702)
!10714 = !DILocation(line: 2819, column: 3, scope: !10712)
!10715 = !DILocation(line: 2821, column: 18, scope: !10702)
!10716 = !DILocation(line: 2821, column: 45, scope: !10702)
!10717 = !DILocation(line: 2821, column: 52, scope: !10702)
!10718 = !DILocation(line: 2821, column: 9, scope: !10702)
!10719 = !DILocation(line: 2821, column: 2, scope: !10702)
!10720 = !DILocation(line: 2822, column: 1, scope: !10702)
!10721 = distinct !DISubprogram(name: "sony_nc_usb_charge_store", scope: !3, file: !3, line: 2794, type: !4494, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10722 = !DILocalVariable(name: "dev", arg: 1, scope: !10721, file: !3, line: 2794, type: !3523)
!10723 = !DILocation(line: 2794, column: 56, scope: !10721)
!10724 = !DILocalVariable(name: "attr", arg: 2, scope: !10721, file: !3, line: 2795, type: !4491)
!10725 = !DILocation(line: 2795, column: 28, scope: !10721)
!10726 = !DILocalVariable(name: "buffer", arg: 3, scope: !10721, file: !3, line: 2796, type: !422)
!10727 = !DILocation(line: 2796, column: 15, scope: !10721)
!10728 = !DILocalVariable(name: "count", arg: 4, scope: !10721, file: !3, line: 2796, type: !574)
!10729 = !DILocation(line: 2796, column: 30, scope: !10721)
!10730 = !DILocalVariable(name: "result", scope: !10721, file: !3, line: 2798, type: !7)
!10731 = !DILocation(line: 2798, column: 15, scope: !10721)
!10732 = !DILocalVariable(name: "value", scope: !10721, file: !3, line: 2799, type: !193)
!10733 = !DILocation(line: 2799, column: 16, scope: !10721)
!10734 = !DILocation(line: 2801, column: 6, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2801, column: 6)
!10736 = !DILocation(line: 2801, column: 12, scope: !10735)
!10737 = !DILocation(line: 2801, column: 6, scope: !10721)
!10738 = !DILocation(line: 2802, column: 3, scope: !10735)
!10739 = !DILocation(line: 2804, column: 15, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2804, column: 6)
!10741 = !DILocation(line: 2804, column: 6, scope: !10740)
!10742 = !DILocation(line: 2804, column: 35, scope: !10740)
!10743 = !DILocation(line: 2804, column: 38, scope: !10740)
!10744 = !DILocation(line: 2804, column: 44, scope: !10740)
!10745 = !DILocation(line: 2804, column: 6, scope: !10721)
!10746 = !DILocation(line: 2805, column: 3, scope: !10740)
!10747 = !DILocation(line: 2807, column: 35, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2807, column: 6)
!10749 = !DILocation(line: 2807, column: 41, scope: !10748)
!10750 = !DILocation(line: 2807, column: 49, scope: !10748)
!10751 = !DILocation(line: 2807, column: 6, scope: !10748)
!10752 = !DILocation(line: 2807, column: 6, scope: !10721)
!10753 = !DILocation(line: 2808, column: 3, scope: !10748)
!10754 = !DILocation(line: 2810, column: 9, scope: !10721)
!10755 = !DILocation(line: 2810, column: 2, scope: !10721)
!10756 = !DILocation(line: 2811, column: 1, scope: !10721)
!10757 = distinct !DISubprogram(name: "sony_nc_panelid_show", scope: !3, file: !3, line: 2868, type: !4489, scopeLine: 2870, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10758 = !DILocalVariable(name: "dev", arg: 1, scope: !10757, file: !3, line: 2868, type: !3523)
!10759 = !DILocation(line: 2868, column: 52, scope: !10757)
!10760 = !DILocalVariable(name: "attr", arg: 2, scope: !10757, file: !3, line: 2869, type: !4491)
!10761 = !DILocation(line: 2869, column: 28, scope: !10757)
!10762 = !DILocalVariable(name: "buffer", arg: 3, scope: !10757, file: !3, line: 2869, type: !181)
!10763 = !DILocation(line: 2869, column: 40, scope: !10757)
!10764 = !DILocalVariable(name: "result", scope: !10757, file: !3, line: 2871, type: !7)
!10765 = !DILocation(line: 2871, column: 15, scope: !10757)
!10766 = !DILocation(line: 2873, column: 6, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 2873, column: 6)
!10768 = !DILocation(line: 2873, column: 6, scope: !10757)
!10769 = !DILocation(line: 2874, column: 3, scope: !10767)
!10770 = !DILocation(line: 2876, column: 18, scope: !10757)
!10771 = !DILocation(line: 2876, column: 45, scope: !10757)
!10772 = !DILocation(line: 2876, column: 9, scope: !10757)
!10773 = !DILocation(line: 2876, column: 2, scope: !10757)
!10774 = !DILocation(line: 2877, column: 1, scope: !10757)
!10775 = distinct !DISubprogram(name: "sony_nc_smart_conn_store", scope: !3, file: !3, line: 2915, type: !4494, scopeLine: 2918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10776 = !DILocalVariable(name: "dev", arg: 1, scope: !10775, file: !3, line: 2915, type: !3523)
!10777 = !DILocation(line: 2915, column: 56, scope: !10775)
!10778 = !DILocalVariable(name: "attr", arg: 2, scope: !10775, file: !3, line: 2916, type: !4491)
!10779 = !DILocation(line: 2916, column: 28, scope: !10775)
!10780 = !DILocalVariable(name: "buffer", arg: 3, scope: !10775, file: !3, line: 2917, type: !422)
!10781 = !DILocation(line: 2917, column: 15, scope: !10775)
!10782 = !DILocalVariable(name: "count", arg: 4, scope: !10775, file: !3, line: 2917, type: !574)
!10783 = !DILocation(line: 2917, column: 30, scope: !10775)
!10784 = !DILocalVariable(name: "result", scope: !10775, file: !3, line: 2919, type: !7)
!10785 = !DILocation(line: 2919, column: 15, scope: !10775)
!10786 = !DILocalVariable(name: "value", scope: !10775, file: !3, line: 2920, type: !193)
!10787 = !DILocation(line: 2920, column: 16, scope: !10775)
!10788 = !DILocation(line: 2922, column: 6, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 2922, column: 6)
!10790 = !DILocation(line: 2922, column: 12, scope: !10789)
!10791 = !DILocation(line: 2922, column: 6, scope: !10775)
!10792 = !DILocation(line: 2923, column: 3, scope: !10789)
!10793 = !DILocation(line: 2925, column: 15, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 2925, column: 6)
!10795 = !DILocation(line: 2925, column: 6, scope: !10794)
!10796 = !DILocation(line: 2925, column: 35, scope: !10794)
!10797 = !DILocation(line: 2925, column: 38, scope: !10794)
!10798 = !DILocation(line: 2925, column: 44, scope: !10794)
!10799 = !DILocation(line: 2925, column: 6, scope: !10775)
!10800 = !DILocation(line: 2926, column: 3, scope: !10794)
!10801 = !DILocation(line: 2928, column: 35, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 2928, column: 6)
!10803 = !DILocation(line: 2928, column: 41, scope: !10802)
!10804 = !DILocation(line: 2928, column: 6, scope: !10802)
!10805 = !DILocation(line: 2928, column: 6, scope: !10775)
!10806 = !DILocation(line: 2929, column: 3, scope: !10802)
!10807 = !DILocation(line: 2931, column: 9, scope: !10775)
!10808 = !DILocation(line: 2931, column: 2, scope: !10775)
!10809 = !DILocation(line: 2932, column: 1, scope: !10775)
!10810 = distinct !DISubprogram(name: "sony_nc_backlight_ng_read_limits", scope: !3, file: !3, line: 3042, type: !10811, scopeLine: 3044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10811 = !DISubroutineType(types: !10812)
!10812 = !{null, !109, !253}
!10813 = !DILocalVariable(name: "handle", arg: 1, scope: !10810, file: !3, line: 3042, type: !109)
!10814 = !DILocation(line: 3042, column: 50, scope: !10810)
!10815 = !DILocalVariable(name: "props", arg: 2, scope: !10810, file: !3, line: 3043, type: !253)
!10816 = !DILocation(line: 3043, column: 32, scope: !10810)
!10817 = !DILocalVariable(name: "offset", scope: !10810, file: !3, line: 3045, type: !207)
!10818 = !DILocation(line: 3045, column: 6, scope: !10810)
!10819 = !DILocalVariable(name: "i", scope: !10810, file: !3, line: 3046, type: !109)
!10820 = !DILocation(line: 3046, column: 6, scope: !10810)
!10821 = !DILocalVariable(name: "lvl_table_len", scope: !10810, file: !3, line: 3047, type: !109)
!10822 = !DILocation(line: 3047, column: 6, scope: !10810)
!10823 = !DILocalVariable(name: "min", scope: !10810, file: !3, line: 3048, type: !223)
!10824 = !DILocation(line: 3048, column: 5, scope: !10810)
!10825 = !DILocalVariable(name: "max", scope: !10810, file: !3, line: 3048, type: !223)
!10826 = !DILocation(line: 3048, column: 17, scope: !10810)
!10827 = !DILocalVariable(name: "buffer", scope: !10810, file: !3, line: 3049, type: !3250)
!10828 = !DILocation(line: 3049, column: 16, scope: !10810)
!10829 = !DILocation(line: 3051, column: 18, scope: !10810)
!10830 = !DILocation(line: 3051, column: 2, scope: !10810)
!10831 = !DILocation(line: 3051, column: 9, scope: !10810)
!10832 = !DILocation(line: 3051, column: 16, scope: !10810)
!10833 = !DILocation(line: 3052, column: 2, scope: !10810)
!10834 = !DILocation(line: 3052, column: 9, scope: !10810)
!10835 = !DILocation(line: 3052, column: 16, scope: !10810)
!10836 = !DILocation(line: 3053, column: 2, scope: !10810)
!10837 = !DILocation(line: 3053, column: 9, scope: !10810)
!10838 = !DILocation(line: 3053, column: 16, scope: !10810)
!10839 = !DILocation(line: 3055, column: 32, scope: !10810)
!10840 = !DILocation(line: 3055, column: 11, scope: !10810)
!10841 = !DILocation(line: 3055, column: 9, scope: !10810)
!10842 = !DILocation(line: 3060, column: 26, scope: !10810)
!10843 = !DILocation(line: 3060, column: 64, scope: !10810)
!10844 = !DILocation(line: 3060, column: 6, scope: !10810)
!10845 = !DILocation(line: 3060, column: 4, scope: !10810)
!10846 = !DILocation(line: 3062, column: 6, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 3062, column: 6)
!10848 = !DILocation(line: 3062, column: 8, scope: !10847)
!10849 = !DILocation(line: 3062, column: 6, scope: !10810)
!10850 = !DILocation(line: 3063, column: 3, scope: !10847)
!10851 = !DILocation(line: 3065, column: 10, scope: !10810)
!10852 = !DILocation(line: 3065, column: 2, scope: !10810)
!10853 = !DILocation(line: 3068, column: 17, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 3065, column: 18)
!10855 = !DILocation(line: 3069, column: 3, scope: !10854)
!10856 = !DILocation(line: 3073, column: 17, scope: !10854)
!10857 = !DILocation(line: 3074, column: 3, scope: !10854)
!10858 = !DILocation(line: 3081, column: 9, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 3081, column: 2)
!10860 = !DILocation(line: 3081, column: 7, scope: !10859)
!10861 = !DILocation(line: 3081, column: 14, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 3081, column: 2)
!10863 = !DILocation(line: 3081, column: 18, scope: !10862)
!10864 = !DILocation(line: 3081, column: 16, scope: !10862)
!10865 = !DILocation(line: 3081, column: 32, scope: !10862)
!10866 = !DILocation(line: 3081, column: 35, scope: !10862)
!10867 = !DILocation(line: 3081, column: 37, scope: !10862)
!10868 = !DILocation(line: 0, scope: !10862)
!10869 = !DILocation(line: 3081, column: 2, scope: !10859)
!10870 = !DILocation(line: 3083, column: 3, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 3081, column: 64)
!10872 = !DILocation(line: 3083, column: 3, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 3083, column: 3)
!10874 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 3083, column: 3)
!10875 = !DILocation(line: 3083, column: 3, scope: !10874)
!10876 = !DILocation(line: 3085, column: 15, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 3085, column: 7)
!10878 = !DILocation(line: 3085, column: 8, scope: !10877)
!10879 = !DILocation(line: 3085, column: 7, scope: !10871)
!10880 = !DILocation(line: 3086, column: 4, scope: !10877)
!10881 = !DILocation(line: 3088, column: 14, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 3088, column: 7)
!10883 = !DILocation(line: 3088, column: 7, scope: !10882)
!10884 = !DILocation(line: 3088, column: 19, scope: !10882)
!10885 = !DILocation(line: 3088, column: 17, scope: !10882)
!10886 = !DILocation(line: 3088, column: 7, scope: !10871)
!10887 = !DILocation(line: 3089, column: 17, scope: !10882)
!10888 = !DILocation(line: 3089, column: 10, scope: !10882)
!10889 = !DILocation(line: 3089, column: 8, scope: !10882)
!10890 = !DILocation(line: 3089, column: 4, scope: !10882)
!10891 = !DILocation(line: 3090, column: 14, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 3090, column: 7)
!10893 = !DILocation(line: 3090, column: 7, scope: !10892)
!10894 = !DILocation(line: 3090, column: 19, scope: !10892)
!10895 = !DILocation(line: 3090, column: 17, scope: !10892)
!10896 = !DILocation(line: 3090, column: 7, scope: !10871)
!10897 = !DILocation(line: 3091, column: 17, scope: !10892)
!10898 = !DILocation(line: 3091, column: 10, scope: !10892)
!10899 = !DILocation(line: 3091, column: 8, scope: !10892)
!10900 = !DILocation(line: 3091, column: 4, scope: !10892)
!10901 = !DILocation(line: 3092, column: 2, scope: !10871)
!10902 = !DILocation(line: 3081, column: 60, scope: !10862)
!10903 = !DILocation(line: 3081, column: 2, scope: !10862)
!10904 = distinct !{!10904, !10869, !10905}
!10905 = !DILocation(line: 3092, column: 2, scope: !10859)
!10906 = !DILocation(line: 3093, column: 18, scope: !10810)
!10907 = !DILocation(line: 3093, column: 2, scope: !10810)
!10908 = !DILocation(line: 3093, column: 9, scope: !10810)
!10909 = !DILocation(line: 3093, column: 16, scope: !10810)
!10910 = !DILocation(line: 3094, column: 18, scope: !10810)
!10911 = !DILocation(line: 3094, column: 2, scope: !10810)
!10912 = !DILocation(line: 3094, column: 9, scope: !10810)
!10913 = !DILocation(line: 3094, column: 16, scope: !10810)
!10914 = !DILocation(line: 3095, column: 2, scope: !10810)
!10915 = !DILocation(line: 3095, column: 2, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 3095, column: 2)
!10917 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 3095, column: 2)
!10918 = !DILocation(line: 3095, column: 2, scope: !10917)
!10919 = !DILocation(line: 3097, column: 1, scope: !10810)
!10920 = distinct !DISubprogram(name: "IS_ERR", scope: !10921, file: !10921, line: 34, type: !10922, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10921 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10922 = !DISubroutineType(types: !10923)
!10923 = !{!844, !2648}
!10924 = !DILocalVariable(name: "ptr", arg: 1, scope: !10920, file: !10921, line: 34, type: !2648)
!10925 = !DILocation(line: 34, column: 60, scope: !10920)
!10926 = !DILocation(line: 36, column: 9, scope: !10920)
!10927 = !DILocation(line: 36, column: 2, scope: !10920)
!10928 = distinct !DISubprogram(name: "sony_nc_update_status_ng", scope: !3, file: !3, line: 1044, type: !315, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10929 = !DILocalVariable(name: "bd", arg: 1, scope: !10928, file: !3, line: 1044, type: !257)
!10930 = !DILocation(line: 1044, column: 62, scope: !10928)
!10931 = !DILocalVariable(name: "value", scope: !10928, file: !3, line: 1046, type: !109)
!10932 = !DILocation(line: 1046, column: 6, scope: !10928)
!10933 = !DILocalVariable(name: "result", scope: !10928, file: !3, line: 1046, type: !109)
!10934 = !DILocation(line: 1046, column: 13, scope: !10928)
!10935 = !DILocalVariable(name: "sdev", scope: !10928, file: !3, line: 1047, type: !253)
!10936 = !DILocation(line: 1047, column: 31, scope: !10928)
!10937 = !DILocation(line: 1048, column: 46, scope: !10928)
!10938 = !DILocation(line: 1048, column: 34, scope: !10928)
!10939 = !DILocation(line: 1048, column: 3, scope: !10928)
!10940 = !DILocation(line: 1050, column: 10, scope: !10928)
!10941 = !DILocation(line: 1050, column: 14, scope: !10928)
!10942 = !DILocation(line: 1050, column: 20, scope: !10928)
!10943 = !DILocation(line: 1050, column: 33, scope: !10928)
!10944 = !DILocation(line: 1050, column: 39, scope: !10928)
!10945 = !DILocation(line: 1050, column: 31, scope: !10928)
!10946 = !DILocation(line: 1050, column: 8, scope: !10928)
!10947 = !DILocation(line: 1051, column: 27, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 1051, column: 6)
!10949 = !DILocation(line: 1051, column: 33, scope: !10948)
!10950 = !DILocation(line: 1051, column: 41, scope: !10948)
!10951 = !DILocation(line: 1051, column: 47, scope: !10948)
!10952 = !DILocation(line: 1051, column: 59, scope: !10948)
!10953 = !DILocation(line: 1051, column: 65, scope: !10948)
!10954 = !DILocation(line: 1051, column: 56, scope: !10948)
!10955 = !DILocation(line: 1051, column: 6, scope: !10948)
!10956 = !DILocation(line: 1051, column: 6, scope: !10928)
!10957 = !DILocation(line: 1053, column: 3, scope: !10948)
!10958 = !DILocation(line: 1055, column: 9, scope: !10928)
!10959 = !DILocation(line: 1055, column: 2, scope: !10928)
!10960 = !DILocation(line: 1056, column: 1, scope: !10928)
!10961 = distinct !DISubprogram(name: "sony_nc_get_brightness_ng", scope: !3, file: !3, line: 1033, type: !315, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10962 = !DILocalVariable(name: "bd", arg: 1, scope: !10961, file: !3, line: 1033, type: !257)
!10963 = !DILocation(line: 1033, column: 63, scope: !10961)
!10964 = !DILocalVariable(name: "result", scope: !10961, file: !3, line: 1035, type: !109)
!10965 = !DILocation(line: 1035, column: 6, scope: !10961)
!10966 = !DILocalVariable(name: "sdev", scope: !10961, file: !3, line: 1036, type: !253)
!10967 = !DILocation(line: 1036, column: 31, scope: !10961)
!10968 = !DILocation(line: 1037, column: 46, scope: !10961)
!10969 = !DILocation(line: 1037, column: 34, scope: !10961)
!10970 = !DILocation(line: 1037, column: 3, scope: !10961)
!10971 = !DILocation(line: 1039, column: 23, scope: !10961)
!10972 = !DILocation(line: 1039, column: 29, scope: !10961)
!10973 = !DILocation(line: 1039, column: 37, scope: !10961)
!10974 = !DILocation(line: 1039, column: 43, scope: !10961)
!10975 = !DILocation(line: 1039, column: 52, scope: !10961)
!10976 = !DILocation(line: 1039, column: 2, scope: !10961)
!10977 = !DILocation(line: 1041, column: 10, scope: !10961)
!10978 = !DILocation(line: 1041, column: 17, scope: !10961)
!10979 = !DILocation(line: 1041, column: 27, scope: !10961)
!10980 = !DILocation(line: 1041, column: 33, scope: !10961)
!10981 = !DILocation(line: 1041, column: 25, scope: !10961)
!10982 = !DILocation(line: 1041, column: 2, scope: !10961)
!10983 = distinct !DISubprogram(name: "bl_get_data", scope: !154, file: !154, line: 464, type: !10984, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!177, !257}
!10986 = !DILocalVariable(name: "bl_dev", arg: 1, scope: !10983, file: !154, line: 464, type: !257)
!10987 = !DILocation(line: 464, column: 59, scope: !10983)
!10988 = !DILocation(line: 466, column: 26, scope: !10983)
!10989 = !DILocation(line: 466, column: 34, scope: !10983)
!10990 = !DILocation(line: 466, column: 9, scope: !10983)
!10991 = !DILocation(line: 466, column: 2, scope: !10983)
!10992 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !10993, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!10993 = !DISubroutineType(types: !10994)
!10994 = !{!177, !4130}
!10995 = !DILocalVariable(name: "dev", arg: 1, scope: !10992, file: !73, line: 655, type: !4130)
!10996 = !DILocation(line: 655, column: 58, scope: !10992)
!10997 = !DILocation(line: 657, column: 9, scope: !10992)
!10998 = !DILocation(line: 657, column: 14, scope: !10992)
!10999 = !DILocation(line: 657, column: 2, scope: !10992)
!11000 = distinct !DISubprogram(name: "sony_backlight_update_status", scope: !3, file: !3, line: 1017, type: !315, scopeLine: 1018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11001 = !DILocalVariable(name: "bd", arg: 1, scope: !11000, file: !3, line: 1017, type: !257)
!11002 = !DILocation(line: 1017, column: 66, scope: !11000)
!11003 = !DILocalVariable(name: "arg", scope: !11000, file: !3, line: 1019, type: !109)
!11004 = !DILocation(line: 1019, column: 6, scope: !11000)
!11005 = !DILocation(line: 1019, column: 12, scope: !11000)
!11006 = !DILocation(line: 1019, column: 16, scope: !11000)
!11007 = !DILocation(line: 1019, column: 22, scope: !11000)
!11008 = !DILocation(line: 1019, column: 33, scope: !11000)
!11009 = !DILocation(line: 1020, column: 26, scope: !11000)
!11010 = !DILocation(line: 1020, column: 9, scope: !11000)
!11011 = !DILocation(line: 1020, column: 2, scope: !11000)
!11012 = distinct !DISubprogram(name: "sony_backlight_get_brightness", scope: !3, file: !3, line: 1023, type: !315, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11013 = !DILocalVariable(name: "bd", arg: 1, scope: !11012, file: !3, line: 1023, type: !257)
!11014 = !DILocation(line: 1023, column: 67, scope: !11012)
!11015 = !DILocalVariable(name: "value", scope: !11012, file: !3, line: 1025, type: !109)
!11016 = !DILocation(line: 1025, column: 6, scope: !11012)
!11017 = !DILocation(line: 1027, column: 23, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 1027, column: 6)
!11019 = !DILocation(line: 1027, column: 6, scope: !11018)
!11020 = !DILocation(line: 1027, column: 6, scope: !11012)
!11021 = !DILocation(line: 1028, column: 3, scope: !11018)
!11022 = !DILocation(line: 1030, column: 9, scope: !11012)
!11023 = !DILocation(line: 1030, column: 15, scope: !11012)
!11024 = !DILocation(line: 1030, column: 2, scope: !11012)
!11025 = !DILocation(line: 1031, column: 1, scope: !11012)
!11026 = distinct !DISubprogram(name: "brightness_default_validate", scope: !3, file: !3, line: 920, type: !4477, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11027 = !DILocalVariable(name: "direction", arg: 1, scope: !11026, file: !3, line: 920, type: !4479)
!11028 = !DILocation(line: 920, column: 50, scope: !11026)
!11029 = !DILocalVariable(name: "value", arg: 2, scope: !11026, file: !3, line: 920, type: !4479)
!11030 = !DILocation(line: 920, column: 71, scope: !11026)
!11031 = !DILocation(line: 922, column: 10, scope: !11026)
!11032 = !DILocation(line: 922, column: 2, scope: !11026)
!11033 = !DILocation(line: 924, column: 11, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 922, column: 21)
!11035 = !DILocation(line: 924, column: 17, scope: !11034)
!11036 = !DILocation(line: 924, column: 4, scope: !11034)
!11037 = !DILocation(line: 926, column: 8, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 926, column: 8)
!11039 = !DILocation(line: 926, column: 14, scope: !11038)
!11040 = !DILocation(line: 926, column: 19, scope: !11038)
!11041 = !DILocation(line: 926, column: 22, scope: !11038)
!11042 = !DILocation(line: 926, column: 28, scope: !11038)
!11043 = !DILocation(line: 926, column: 8, scope: !11034)
!11044 = !DILocation(line: 927, column: 12, scope: !11038)
!11045 = !DILocation(line: 927, column: 18, scope: !11038)
!11046 = !DILocation(line: 927, column: 5, scope: !11038)
!11047 = !DILocation(line: 928, column: 2, scope: !11034)
!11048 = !DILocation(line: 929, column: 2, scope: !11026)
!11049 = !DILocation(line: 930, column: 1, scope: !11026)
!11050 = distinct !DISubprogram(name: "sony_nc_sysfs_show", scope: !3, file: !3, line: 949, type: !4489, scopeLine: 951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11051 = !DILocalVariable(name: "dev", arg: 1, scope: !11050, file: !3, line: 949, type: !3523)
!11052 = !DILocation(line: 949, column: 50, scope: !11050)
!11053 = !DILocalVariable(name: "attr", arg: 2, scope: !11050, file: !3, line: 949, type: !4491)
!11054 = !DILocation(line: 949, column: 80, scope: !11050)
!11055 = !DILocalVariable(name: "buffer", arg: 3, scope: !11050, file: !3, line: 950, type: !181)
!11056 = !DILocation(line: 950, column: 16, scope: !11050)
!11057 = !DILocalVariable(name: "value", scope: !11050, file: !3, line: 952, type: !109)
!11058 = !DILocation(line: 952, column: 6, scope: !11050)
!11059 = !DILocalVariable(name: "ret", scope: !11050, file: !3, line: 952, type: !109)
!11060 = !DILocation(line: 952, column: 13, scope: !11050)
!11061 = !DILocalVariable(name: "item", scope: !11050, file: !3, line: 953, type: !4468)
!11062 = !DILocation(line: 953, column: 24, scope: !11050)
!11063 = !DILocalVariable(name: "__mptr", scope: !11064, file: !3, line: 954, type: !177)
!11064 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 954, column: 6)
!11065 = !DILocation(line: 954, column: 6, scope: !11064)
!11066 = !DILocation(line: 954, column: 6, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 954, column: 6)
!11068 = !DILocation(line: 956, column: 8, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 956, column: 6)
!11070 = !DILocation(line: 956, column: 14, scope: !11069)
!11071 = !DILocation(line: 956, column: 7, scope: !11069)
!11072 = !DILocation(line: 956, column: 6, scope: !11050)
!11073 = !DILocation(line: 957, column: 3, scope: !11069)
!11074 = !DILocation(line: 959, column: 25, scope: !11050)
!11075 = !DILocation(line: 959, column: 47, scope: !11050)
!11076 = !DILocation(line: 959, column: 53, scope: !11050)
!11077 = !DILocation(line: 959, column: 46, scope: !11050)
!11078 = !DILocation(line: 959, column: 8, scope: !11050)
!11079 = !DILocation(line: 959, column: 6, scope: !11050)
!11080 = !DILocation(line: 961, column: 6, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 961, column: 6)
!11082 = !DILocation(line: 961, column: 10, scope: !11081)
!11083 = !DILocation(line: 961, column: 6, scope: !11050)
!11084 = !DILocation(line: 962, column: 3, scope: !11081)
!11085 = !DILocation(line: 964, column: 6, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 964, column: 6)
!11087 = !DILocation(line: 964, column: 12, scope: !11086)
!11088 = !DILocation(line: 964, column: 6, scope: !11050)
!11089 = !DILocation(line: 965, column: 11, scope: !11086)
!11090 = !DILocation(line: 965, column: 17, scope: !11086)
!11091 = !DILocation(line: 965, column: 44, scope: !11086)
!11092 = !DILocation(line: 965, column: 9, scope: !11086)
!11093 = !DILocation(line: 965, column: 3, scope: !11086)
!11094 = !DILocation(line: 967, column: 18, scope: !11050)
!11095 = !DILocation(line: 967, column: 45, scope: !11050)
!11096 = !DILocation(line: 967, column: 9, scope: !11050)
!11097 = !DILocation(line: 967, column: 2, scope: !11050)
!11098 = !DILocation(line: 968, column: 1, scope: !11050)
!11099 = distinct !DISubprogram(name: "sony_nc_sysfs_store", scope: !3, file: !3, line: 970, type: !4494, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11100 = !DILocalVariable(name: "dev", arg: 1, scope: !11099, file: !3, line: 970, type: !3523)
!11101 = !DILocation(line: 970, column: 51, scope: !11099)
!11102 = !DILocalVariable(name: "attr", arg: 2, scope: !11099, file: !3, line: 971, type: !4491)
!11103 = !DILocation(line: 971, column: 36, scope: !11099)
!11104 = !DILocalVariable(name: "buffer", arg: 3, scope: !11099, file: !3, line: 972, type: !422)
!11105 = !DILocation(line: 972, column: 23, scope: !11099)
!11106 = !DILocalVariable(name: "count", arg: 4, scope: !11099, file: !3, line: 972, type: !574)
!11107 = !DILocation(line: 972, column: 38, scope: !11099)
!11108 = !DILocalVariable(name: "value", scope: !11099, file: !3, line: 974, type: !109)
!11109 = !DILocation(line: 974, column: 6, scope: !11099)
!11110 = !DILocalVariable(name: "ret", scope: !11099, file: !3, line: 975, type: !109)
!11111 = !DILocation(line: 975, column: 6, scope: !11099)
!11112 = !DILocalVariable(name: "item", scope: !11099, file: !3, line: 976, type: !4468)
!11113 = !DILocation(line: 976, column: 24, scope: !11099)
!11114 = !DILocalVariable(name: "__mptr", scope: !11115, file: !3, line: 977, type: !177)
!11115 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 977, column: 6)
!11116 = !DILocation(line: 977, column: 6, scope: !11115)
!11117 = !DILocation(line: 977, column: 6, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 977, column: 6)
!11119 = !DILocation(line: 979, column: 7, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 979, column: 6)
!11121 = !DILocation(line: 979, column: 13, scope: !11120)
!11122 = !DILocation(line: 979, column: 6, scope: !11099)
!11123 = !DILocation(line: 980, column: 3, scope: !11120)
!11124 = !DILocation(line: 982, column: 6, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 982, column: 6)
!11126 = !DILocation(line: 982, column: 12, scope: !11125)
!11127 = !DILocation(line: 982, column: 6, scope: !11099)
!11128 = !DILocation(line: 983, column: 3, scope: !11125)
!11129 = !DILocation(line: 985, column: 16, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 985, column: 6)
!11131 = !DILocation(line: 985, column: 6, scope: !11130)
!11132 = !DILocation(line: 985, column: 6, scope: !11099)
!11133 = !DILocation(line: 986, column: 3, scope: !11130)
!11134 = !DILocation(line: 988, column: 6, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 988, column: 6)
!11136 = !DILocation(line: 988, column: 12, scope: !11135)
!11137 = !DILocation(line: 988, column: 6, scope: !11099)
!11138 = !DILocation(line: 989, column: 11, scope: !11135)
!11139 = !DILocation(line: 989, column: 17, scope: !11135)
!11140 = !DILocation(line: 989, column: 43, scope: !11135)
!11141 = !DILocation(line: 989, column: 9, scope: !11135)
!11142 = !DILocation(line: 989, column: 3, scope: !11135)
!11143 = !DILocation(line: 991, column: 6, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 991, column: 6)
!11145 = !DILocation(line: 991, column: 12, scope: !11144)
!11146 = !DILocation(line: 991, column: 6, scope: !11099)
!11147 = !DILocation(line: 992, column: 10, scope: !11144)
!11148 = !DILocation(line: 992, column: 3, scope: !11144)
!11149 = !DILocation(line: 994, column: 25, scope: !11099)
!11150 = !DILocation(line: 994, column: 47, scope: !11099)
!11151 = !DILocation(line: 994, column: 53, scope: !11099)
!11152 = !DILocation(line: 994, column: 46, scope: !11099)
!11153 = !DILocation(line: 994, column: 8, scope: !11099)
!11154 = !DILocation(line: 994, column: 6, scope: !11099)
!11155 = !DILocation(line: 996, column: 6, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 996, column: 6)
!11157 = !DILocation(line: 996, column: 10, scope: !11156)
!11158 = !DILocation(line: 996, column: 6, scope: !11099)
!11159 = !DILocation(line: 997, column: 3, scope: !11156)
!11160 = !DILocation(line: 999, column: 16, scope: !11099)
!11161 = !DILocation(line: 999, column: 2, scope: !11099)
!11162 = !DILocation(line: 999, column: 8, scope: !11099)
!11163 = !DILocation(line: 999, column: 14, scope: !11099)
!11164 = !DILocation(line: 1000, column: 2, scope: !11099)
!11165 = !DILocation(line: 1000, column: 8, scope: !11099)
!11166 = !DILocation(line: 1000, column: 14, scope: !11099)
!11167 = !DILocation(line: 1001, column: 9, scope: !11099)
!11168 = !DILocation(line: 1001, column: 2, scope: !11099)
!11169 = !DILocation(line: 1002, column: 1, scope: !11099)
!11170 = distinct !DISubprogram(name: "boolean_validate", scope: !3, file: !3, line: 937, type: !4477, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11171 = !DILocalVariable(name: "direction", arg: 1, scope: !11170, file: !3, line: 937, type: !4479)
!11172 = !DILocation(line: 937, column: 39, scope: !11170)
!11173 = !DILocalVariable(name: "value", arg: 2, scope: !11170, file: !3, line: 937, type: !4479)
!11174 = !DILocation(line: 937, column: 60, scope: !11170)
!11175 = !DILocation(line: 939, column: 6, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 939, column: 6)
!11177 = !DILocation(line: 939, column: 16, scope: !11176)
!11178 = !DILocation(line: 939, column: 6, scope: !11170)
!11179 = !DILocation(line: 940, column: 7, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 940, column: 7)
!11181 = distinct !DILexicalBlock(scope: !11176, file: !3, line: 939, column: 36)
!11182 = !DILocation(line: 940, column: 13, scope: !11180)
!11183 = !DILocation(line: 940, column: 18, scope: !11180)
!11184 = !DILocation(line: 940, column: 21, scope: !11180)
!11185 = !DILocation(line: 940, column: 27, scope: !11180)
!11186 = !DILocation(line: 940, column: 7, scope: !11181)
!11187 = !DILocation(line: 941, column: 4, scope: !11180)
!11188 = !DILocation(line: 942, column: 2, scope: !11181)
!11189 = !DILocation(line: 943, column: 9, scope: !11170)
!11190 = !DILocation(line: 943, column: 2, scope: !11170)
!11191 = !DILocation(line: 944, column: 1, scope: !11170)
!11192 = distinct !DISubprogram(name: "sony_nc_touchpad_cleanup", scope: !3, file: !3, line: 3033, type: !5045, scopeLine: 3034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11193 = !DILocalVariable(name: "pd", arg: 1, scope: !11192, file: !3, line: 3033, type: !5006)
!11194 = !DILocation(line: 3033, column: 62, scope: !11192)
!11195 = !DILocation(line: 3035, column: 6, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 3035, column: 6)
!11197 = !DILocation(line: 3035, column: 6, scope: !11192)
!11198 = !DILocation(line: 3036, column: 23, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 3035, column: 14)
!11200 = !DILocation(line: 3036, column: 27, scope: !11199)
!11201 = !DILocation(line: 3036, column: 33, scope: !11199)
!11202 = !DILocation(line: 3036, column: 41, scope: !11199)
!11203 = !DILocation(line: 3036, column: 3, scope: !11199)
!11204 = !DILocation(line: 3037, column: 9, scope: !11199)
!11205 = !DILocation(line: 3037, column: 3, scope: !11199)
!11206 = !DILocation(line: 3038, column: 10, scope: !11199)
!11207 = !DILocation(line: 3039, column: 2, scope: !11199)
!11208 = !DILocation(line: 3040, column: 1, scope: !11192)
!11209 = distinct !DISubprogram(name: "sony_nc_battery_care_cleanup", scope: !3, file: !3, line: 2117, type: !5045, scopeLine: 2118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11210 = !DILocalVariable(name: "pd", arg: 1, scope: !11209, file: !3, line: 2117, type: !5006)
!11211 = !DILocation(line: 2117, column: 66, scope: !11209)
!11212 = !DILocation(line: 2119, column: 6, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 2119, column: 6)
!11214 = !DILocation(line: 2119, column: 6, scope: !11209)
!11215 = !DILocation(line: 2120, column: 23, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 2119, column: 17)
!11217 = !DILocation(line: 2120, column: 27, scope: !11216)
!11218 = !DILocation(line: 2120, column: 33, scope: !11216)
!11219 = !DILocation(line: 2120, column: 44, scope: !11216)
!11220 = !DILocation(line: 2120, column: 3, scope: !11216)
!11221 = !DILocation(line: 2121, column: 7, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11216, file: !3, line: 2121, column: 7)
!11223 = !DILocation(line: 2121, column: 18, scope: !11222)
!11224 = !DILocation(line: 2121, column: 25, scope: !11222)
!11225 = !DILocation(line: 2121, column: 7, scope: !11216)
!11226 = !DILocation(line: 2122, column: 24, scope: !11222)
!11227 = !DILocation(line: 2122, column: 28, scope: !11222)
!11228 = !DILocation(line: 2122, column: 34, scope: !11222)
!11229 = !DILocation(line: 2122, column: 45, scope: !11222)
!11230 = !DILocation(line: 2122, column: 4, scope: !11222)
!11231 = !DILocation(line: 2124, column: 9, scope: !11216)
!11232 = !DILocation(line: 2124, column: 3, scope: !11216)
!11233 = !DILocation(line: 2125, column: 13, scope: !11216)
!11234 = !DILocation(line: 2126, column: 2, scope: !11216)
!11235 = !DILocation(line: 2127, column: 1, scope: !11209)
!11236 = distinct !DISubprogram(name: "sony_nc_lid_resume_cleanup", scope: !3, file: !3, line: 2425, type: !5045, scopeLine: 2426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11237 = !DILocalVariable(name: "pd", arg: 1, scope: !11236, file: !3, line: 2425, type: !5006)
!11238 = !DILocation(line: 2425, column: 64, scope: !11236)
!11239 = !DILocalVariable(name: "i", scope: !11236, file: !3, line: 2427, type: !109)
!11240 = !DILocation(line: 2427, column: 6, scope: !11236)
!11241 = !DILocation(line: 2429, column: 6, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 2429, column: 6)
!11243 = !DILocation(line: 2429, column: 6, scope: !11236)
!11244 = !DILocation(line: 2430, column: 10, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 2430, column: 3)
!11246 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 2429, column: 15)
!11247 = !DILocation(line: 2430, column: 8, scope: !11245)
!11248 = !DILocation(line: 2430, column: 15, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 2430, column: 3)
!11250 = !DILocation(line: 2430, column: 17, scope: !11249)
!11251 = !DILocation(line: 2430, column: 3, scope: !11245)
!11252 = !DILocation(line: 2431, column: 9, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 2431, column: 8)
!11254 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 2430, column: 40)
!11255 = !DILocation(line: 2431, column: 18, scope: !11253)
!11256 = !DILocation(line: 2431, column: 24, scope: !11253)
!11257 = !DILocation(line: 2431, column: 27, scope: !11253)
!11258 = !DILocation(line: 2431, column: 32, scope: !11253)
!11259 = !DILocation(line: 2431, column: 8, scope: !11254)
!11260 = !DILocation(line: 2432, column: 5, scope: !11253)
!11261 = !DILocation(line: 2434, column: 24, scope: !11254)
!11262 = !DILocation(line: 2434, column: 28, scope: !11254)
!11263 = !DILocation(line: 2434, column: 34, scope: !11254)
!11264 = !DILocation(line: 2434, column: 43, scope: !11254)
!11265 = !DILocation(line: 2434, column: 49, scope: !11254)
!11266 = !DILocation(line: 2434, column: 4, scope: !11254)
!11267 = !DILocation(line: 2435, column: 3, scope: !11254)
!11268 = !DILocation(line: 2430, column: 36, scope: !11249)
!11269 = !DILocation(line: 2430, column: 3, scope: !11249)
!11270 = distinct !{!11270, !11251, !11271}
!11271 = !DILocation(line: 2435, column: 3, scope: !11245)
!11272 = !DILocation(line: 2437, column: 9, scope: !11246)
!11273 = !DILocation(line: 2437, column: 3, scope: !11246)
!11274 = !DILocation(line: 2438, column: 11, scope: !11246)
!11275 = !DILocation(line: 2439, column: 2, scope: !11246)
!11276 = !DILocation(line: 2440, column: 1, scope: !11236)
!11277 = distinct !DISubprogram(name: "sony_nc_thermal_cleanup", scope: !3, file: !3, line: 2278, type: !5045, scopeLine: 2279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11278 = !DILocalVariable(name: "pd", arg: 1, scope: !11277, file: !3, line: 2278, type: !5006)
!11279 = !DILocation(line: 2278, column: 61, scope: !11277)
!11280 = !DILocation(line: 2280, column: 6, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 2280, column: 6)
!11282 = !DILocation(line: 2280, column: 6, scope: !11277)
!11283 = !DILocation(line: 2281, column: 23, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 2280, column: 17)
!11285 = !DILocation(line: 2281, column: 27, scope: !11284)
!11286 = !DILocation(line: 2281, column: 33, scope: !11284)
!11287 = !DILocation(line: 2281, column: 44, scope: !11284)
!11288 = !DILocation(line: 2281, column: 3, scope: !11284)
!11289 = !DILocation(line: 2282, column: 23, scope: !11284)
!11290 = !DILocation(line: 2282, column: 27, scope: !11284)
!11291 = !DILocation(line: 2282, column: 33, scope: !11284)
!11292 = !DILocation(line: 2282, column: 44, scope: !11284)
!11293 = !DILocation(line: 2282, column: 3, scope: !11284)
!11294 = !DILocation(line: 2283, column: 9, scope: !11284)
!11295 = !DILocation(line: 2283, column: 3, scope: !11284)
!11296 = !DILocation(line: 2284, column: 13, scope: !11284)
!11297 = !DILocation(line: 2285, column: 2, scope: !11284)
!11298 = !DILocation(line: 2286, column: 1, scope: !11277)
!11299 = distinct !DISubprogram(name: "sony_nc_gfx_switch_cleanup", scope: !3, file: !3, line: 2534, type: !5045, scopeLine: 2535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11300 = !DILocalVariable(name: "pd", arg: 1, scope: !11299, file: !3, line: 2534, type: !5006)
!11301 = !DILocation(line: 2534, column: 64, scope: !11299)
!11302 = !DILocation(line: 2536, column: 6, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11299, file: !3, line: 2536, column: 6)
!11304 = !DILocation(line: 2536, column: 6, scope: !11299)
!11305 = !DILocation(line: 2537, column: 23, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 2536, column: 16)
!11307 = !DILocation(line: 2537, column: 27, scope: !11306)
!11308 = !DILocation(line: 2537, column: 33, scope: !11306)
!11309 = !DILocation(line: 2537, column: 43, scope: !11306)
!11310 = !DILocation(line: 2537, column: 3, scope: !11306)
!11311 = !DILocation(line: 2539, column: 9, scope: !11306)
!11312 = !DILocation(line: 2539, column: 3, scope: !11306)
!11313 = !DILocation(line: 2540, column: 12, scope: !11306)
!11314 = !DILocation(line: 2541, column: 2, scope: !11306)
!11315 = !DILocation(line: 2542, column: 1, scope: !11299)
!11316 = distinct !DISubprogram(name: "sony_nc_highspeed_charging_cleanup", scope: !3, file: !3, line: 2609, type: !5045, scopeLine: 2610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11317 = !DILocalVariable(name: "pd", arg: 1, scope: !11316, file: !3, line: 2609, type: !5006)
!11318 = !DILocation(line: 2609, column: 72, scope: !11316)
!11319 = !DILocation(line: 2611, column: 6, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 2611, column: 6)
!11321 = !DILocation(line: 2611, column: 6, scope: !11316)
!11322 = !DILocation(line: 2612, column: 23, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 2611, column: 18)
!11324 = !DILocation(line: 2612, column: 27, scope: !11323)
!11325 = !DILocation(line: 2612, column: 32, scope: !11323)
!11326 = !DILocation(line: 2612, column: 3, scope: !11323)
!11327 = !DILocation(line: 2613, column: 9, scope: !11323)
!11328 = !DILocation(line: 2613, column: 3, scope: !11323)
!11329 = !DILocation(line: 2614, column: 14, scope: !11323)
!11330 = !DILocation(line: 2615, column: 2, scope: !11323)
!11331 = !DILocation(line: 2616, column: 1, scope: !11316)
!11332 = distinct !DISubprogram(name: "sony_nc_kbd_backlight_cleanup", scope: !3, file: !3, line: 1955, type: !11333, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11333 = !DISubroutineType(types: !11334)
!11334 = !{null, !5006, !7}
!11335 = !DILocalVariable(name: "pd", arg: 1, scope: !11332, file: !3, line: 1955, type: !5006)
!11336 = !DILocation(line: 1955, column: 67, scope: !11332)
!11337 = !DILocalVariable(name: "handle", arg: 2, scope: !11332, file: !3, line: 1956, type: !7)
!11338 = !DILocation(line: 1956, column: 16, scope: !11332)
!11339 = !DILocation(line: 1958, column: 6, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1958, column: 6)
!11341 = !DILocation(line: 1958, column: 16, scope: !11340)
!11342 = !DILocation(line: 1958, column: 19, scope: !11340)
!11343 = !DILocation(line: 1958, column: 29, scope: !11340)
!11344 = !DILocation(line: 1958, column: 40, scope: !11340)
!11345 = !DILocation(line: 1958, column: 26, scope: !11340)
!11346 = !DILocation(line: 1958, column: 6, scope: !11332)
!11347 = !DILocation(line: 1959, column: 23, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 1958, column: 48)
!11349 = !DILocation(line: 1959, column: 27, scope: !11348)
!11350 = !DILocation(line: 1959, column: 33, scope: !11348)
!11351 = !DILocation(line: 1959, column: 44, scope: !11348)
!11352 = !DILocation(line: 1959, column: 3, scope: !11348)
!11353 = !DILocation(line: 1960, column: 7, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 1960, column: 7)
!11355 = !DILocation(line: 1960, column: 18, scope: !11354)
!11356 = !DILocation(line: 1960, column: 7, scope: !11348)
!11357 = !DILocation(line: 1961, column: 24, scope: !11354)
!11358 = !DILocation(line: 1961, column: 28, scope: !11354)
!11359 = !DILocation(line: 1961, column: 34, scope: !11354)
!11360 = !DILocation(line: 1961, column: 45, scope: !11354)
!11361 = !DILocation(line: 1961, column: 4, scope: !11354)
!11362 = !DILocation(line: 1962, column: 9, scope: !11348)
!11363 = !DILocation(line: 1962, column: 3, scope: !11348)
!11364 = !DILocation(line: 1963, column: 13, scope: !11348)
!11365 = !DILocation(line: 1964, column: 2, scope: !11348)
!11366 = !DILocation(line: 1965, column: 1, scope: !11332)
!11367 = distinct !DISubprogram(name: "sony_nc_lowbatt_cleanup", scope: !3, file: !3, line: 2675, type: !5045, scopeLine: 2676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11368 = !DILocalVariable(name: "pd", arg: 1, scope: !11367, file: !3, line: 2675, type: !5006)
!11369 = !DILocation(line: 2675, column: 61, scope: !11367)
!11370 = !DILocation(line: 2677, column: 6, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 2677, column: 6)
!11372 = !DILocation(line: 2677, column: 6, scope: !11367)
!11373 = !DILocation(line: 2678, column: 23, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11371, file: !3, line: 2677, column: 22)
!11375 = !DILocation(line: 2678, column: 27, scope: !11374)
!11376 = !DILocation(line: 2678, column: 32, scope: !11374)
!11377 = !DILocation(line: 2678, column: 3, scope: !11374)
!11378 = !DILocation(line: 2679, column: 9, scope: !11374)
!11379 = !DILocation(line: 2679, column: 3, scope: !11374)
!11380 = !DILocation(line: 2680, column: 18, scope: !11374)
!11381 = !DILocation(line: 2681, column: 2, scope: !11374)
!11382 = !DILocation(line: 2682, column: 1, scope: !11367)
!11383 = distinct !DISubprogram(name: "sony_nc_fanspeed_cleanup", scope: !3, file: !3, line: 2777, type: !5045, scopeLine: 2778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11384 = !DILocalVariable(name: "pd", arg: 1, scope: !11383, file: !3, line: 2777, type: !5006)
!11385 = !DILocation(line: 2777, column: 62, scope: !11383)
!11386 = !DILocation(line: 2779, column: 6, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 2779, column: 6)
!11388 = !DILocation(line: 2779, column: 6, scope: !11383)
!11389 = !DILocation(line: 2780, column: 23, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11387, file: !3, line: 2779, column: 18)
!11391 = !DILocation(line: 2780, column: 27, scope: !11390)
!11392 = !DILocation(line: 2780, column: 32, scope: !11390)
!11393 = !DILocation(line: 2780, column: 3, scope: !11390)
!11394 = !DILocation(line: 2781, column: 9, scope: !11390)
!11395 = !DILocation(line: 2781, column: 3, scope: !11390)
!11396 = !DILocation(line: 2782, column: 14, scope: !11390)
!11397 = !DILocation(line: 2783, column: 2, scope: !11390)
!11398 = !DILocation(line: 2784, column: 6, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 2784, column: 6)
!11400 = !DILocation(line: 2784, column: 6, scope: !11383)
!11401 = !DILocation(line: 2785, column: 23, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 2784, column: 18)
!11403 = !DILocation(line: 2785, column: 27, scope: !11402)
!11404 = !DILocation(line: 2785, column: 32, scope: !11402)
!11405 = !DILocation(line: 2785, column: 3, scope: !11402)
!11406 = !DILocation(line: 2786, column: 9, scope: !11402)
!11407 = !DILocation(line: 2786, column: 3, scope: !11402)
!11408 = !DILocation(line: 2787, column: 14, scope: !11402)
!11409 = !DILocation(line: 2788, column: 2, scope: !11402)
!11410 = !DILocation(line: 2789, column: 1, scope: !11383)
!11411 = distinct !DISubprogram(name: "sony_nc_usb_charge_cleanup", scope: !3, file: !3, line: 2856, type: !5045, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11412 = !DILocalVariable(name: "pd", arg: 1, scope: !11411, file: !3, line: 2856, type: !5006)
!11413 = !DILocation(line: 2856, column: 64, scope: !11411)
!11414 = !DILocation(line: 2858, column: 6, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 2858, column: 6)
!11416 = !DILocation(line: 2858, column: 6, scope: !11411)
!11417 = !DILocation(line: 2859, column: 23, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 2858, column: 17)
!11419 = !DILocation(line: 2859, column: 27, scope: !11418)
!11420 = !DILocation(line: 2859, column: 32, scope: !11418)
!11421 = !DILocation(line: 2859, column: 3, scope: !11418)
!11422 = !DILocation(line: 2860, column: 9, scope: !11418)
!11423 = !DILocation(line: 2860, column: 3, scope: !11418)
!11424 = !DILocation(line: 2861, column: 13, scope: !11418)
!11425 = !DILocation(line: 2862, column: 2, scope: !11418)
!11426 = !DILocation(line: 2863, column: 1, scope: !11411)
!11427 = distinct !DISubprogram(name: "sony_nc_panelid_cleanup", scope: !3, file: !3, line: 2903, type: !5045, scopeLine: 2904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11428 = !DILocalVariable(name: "pd", arg: 1, scope: !11427, file: !3, line: 2903, type: !5006)
!11429 = !DILocation(line: 2903, column: 61, scope: !11427)
!11430 = !DILocation(line: 2905, column: 6, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 2905, column: 6)
!11432 = !DILocation(line: 2905, column: 6, scope: !11427)
!11433 = !DILocation(line: 2906, column: 23, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 2905, column: 20)
!11435 = !DILocation(line: 2906, column: 27, scope: !11434)
!11436 = !DILocation(line: 2906, column: 32, scope: !11434)
!11437 = !DILocation(line: 2906, column: 3, scope: !11434)
!11438 = !DILocation(line: 2907, column: 9, scope: !11434)
!11439 = !DILocation(line: 2907, column: 3, scope: !11434)
!11440 = !DILocation(line: 2908, column: 16, scope: !11434)
!11441 = !DILocation(line: 2909, column: 2, scope: !11434)
!11442 = !DILocation(line: 2910, column: 1, scope: !11427)
!11443 = distinct !DISubprogram(name: "sony_nc_smart_conn_cleanup", scope: !3, file: !3, line: 2958, type: !5045, scopeLine: 2959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11444 = !DILocalVariable(name: "pd", arg: 1, scope: !11443, file: !3, line: 2958, type: !5006)
!11445 = !DILocation(line: 2958, column: 64, scope: !11443)
!11446 = !DILocation(line: 2960, column: 6, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11443, file: !3, line: 2960, column: 6)
!11448 = !DILocation(line: 2960, column: 6, scope: !11443)
!11449 = !DILocation(line: 2961, column: 23, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 2960, column: 17)
!11451 = !DILocation(line: 2961, column: 27, scope: !11450)
!11452 = !DILocation(line: 2961, column: 32, scope: !11450)
!11453 = !DILocation(line: 2961, column: 3, scope: !11450)
!11454 = !DILocation(line: 2962, column: 9, scope: !11450)
!11455 = !DILocation(line: 2962, column: 3, scope: !11450)
!11456 = !DILocation(line: 2963, column: 13, scope: !11450)
!11457 = !DILocation(line: 2964, column: 2, scope: !11450)
!11458 = !DILocation(line: 2965, column: 1, scope: !11443)
!11459 = distinct !DISubprogram(name: "sony_nc_hotkeys_decode", scope: !3, file: !3, line: 1141, type: !11460, scopeLine: 1142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11460 = !DISubroutineType(types: !11461)
!11461 = !{!109, !185, !7}
!11462 = !DILocalVariable(name: "event", arg: 1, scope: !11459, file: !3, line: 1141, type: !185)
!11463 = !DILocation(line: 1141, column: 39, scope: !11459)
!11464 = !DILocalVariable(name: "handle", arg: 2, scope: !11459, file: !3, line: 1141, type: !7)
!11465 = !DILocation(line: 1141, column: 59, scope: !11459)
!11466 = !DILocalVariable(name: "ret", scope: !11459, file: !3, line: 1143, type: !109)
!11467 = !DILocation(line: 1143, column: 6, scope: !11459)
!11468 = !DILocalVariable(name: "result", scope: !11459, file: !3, line: 1144, type: !7)
!11469 = !DILocation(line: 1144, column: 15, scope: !11459)
!11470 = !DILocalVariable(name: "key_event", scope: !11459, file: !3, line: 1145, type: !11471)
!11471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!11472 = !DILocation(line: 1145, column: 24, scope: !11459)
!11473 = !DILocation(line: 1147, column: 27, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1147, column: 6)
!11475 = !DILocation(line: 1147, column: 6, scope: !11474)
!11476 = !DILocation(line: 1147, column: 6, scope: !11459)
!11477 = !DILocation(line: 1148, column: 3, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 1147, column: 52)
!11479 = !DILocation(line: 1148, column: 3, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 1148, column: 3)
!11481 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 1148, column: 3)
!11482 = !DILocation(line: 1148, column: 3, scope: !11481)
!11483 = !DILocation(line: 1150, column: 3, scope: !11478)
!11484 = !DILocation(line: 1153, column: 9, scope: !11459)
!11485 = !DILocation(line: 1155, column: 6, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1155, column: 6)
!11487 = !DILocation(line: 1155, column: 13, scope: !11486)
!11488 = !DILocation(line: 1155, column: 6, scope: !11459)
!11489 = !DILocation(line: 1156, column: 13, scope: !11486)
!11490 = !DILocation(line: 1156, column: 3, scope: !11486)
!11491 = !DILocation(line: 1158, column: 13, scope: !11486)
!11492 = !DILocation(line: 1160, column: 2, scope: !11459)
!11493 = !DILocation(line: 1160, column: 9, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 1160, column: 2)
!11495 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1160, column: 2)
!11496 = !DILocation(line: 1160, column: 20, scope: !11494)
!11497 = !DILocation(line: 1160, column: 2, scope: !11495)
!11498 = !DILocation(line: 1161, column: 7, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !3, line: 1161, column: 7)
!11500 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 1160, column: 39)
!11501 = !DILocation(line: 1161, column: 18, scope: !11499)
!11502 = !DILocation(line: 1161, column: 26, scope: !11499)
!11503 = !DILocation(line: 1161, column: 23, scope: !11499)
!11504 = !DILocation(line: 1161, column: 7, scope: !11500)
!11505 = !DILocation(line: 1162, column: 10, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 1161, column: 34)
!11507 = !DILocation(line: 1162, column: 21, scope: !11506)
!11508 = !DILocation(line: 1162, column: 8, scope: !11506)
!11509 = !DILocation(line: 1163, column: 4, scope: !11506)
!11510 = !DILocation(line: 1165, column: 2, scope: !11500)
!11511 = !DILocation(line: 1160, column: 35, scope: !11494)
!11512 = !DILocation(line: 1160, column: 2, scope: !11494)
!11513 = distinct !{!11513, !11497, !11514}
!11514 = !DILocation(line: 1165, column: 2, scope: !11495)
!11515 = !DILocation(line: 1167, column: 7, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1167, column: 6)
!11517 = !DILocation(line: 1167, column: 18, scope: !11516)
!11518 = !DILocation(line: 1167, column: 6, scope: !11459)
!11519 = !DILocation(line: 1168, column: 3, scope: !11516)
!11520 = !DILocation(line: 1171, column: 9, scope: !11459)
!11521 = !DILocation(line: 1171, column: 2, scope: !11459)
!11522 = !DILocation(line: 1172, column: 1, scope: !11459)
!11523 = distinct !DISubprogram(name: "sony_laptop_report_input_event", scope: !3, file: !3, line: 374, type: !11524, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{null, !223}
!11526 = !DILocation(line: 407, column: 64, scope: !7684, inlinedAt: !11527)
!11527 = distinct !DILocation(line: 430, column: 3, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 430, column: 3)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 421, column: 14)
!11530 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 421, column: 6)
!11531 = !DILocation(line: 407, column: 84, scope: !7684, inlinedAt: !11527)
!11532 = !DILocation(line: 363, column: 74, scope: !7676, inlinedAt: !11533)
!11533 = distinct !DILocation(line: 434, column: 16, scope: !11529)
!11534 = !DILocation(line: 327, column: 67, scope: !6796, inlinedAt: !11535)
!11535 = distinct !DILocation(line: 430, column: 3, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 430, column: 3)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 430, column: 3)
!11538 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 430, column: 3)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 430, column: 3)
!11540 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 430, column: 3)
!11541 = !DILocalVariable(name: "event", arg: 1, scope: !11523, file: !3, line: 374, type: !223)
!11542 = !DILocation(line: 374, column: 47, scope: !11523)
!11543 = !DILocalVariable(name: "jog_dev", scope: !11523, file: !3, line: 376, type: !5061)
!11544 = !DILocation(line: 376, column: 20, scope: !11523)
!11545 = !DILocation(line: 376, column: 48, scope: !11523)
!11546 = !DILocalVariable(name: "key_dev", scope: !11523, file: !3, line: 377, type: !5061)
!11547 = !DILocation(line: 377, column: 20, scope: !11523)
!11548 = !DILocation(line: 377, column: 48, scope: !11523)
!11549 = !DILocalVariable(name: "kp", scope: !11523, file: !3, line: 378, type: !7545)
!11550 = !DILocation(line: 378, column: 30, scope: !11523)
!11551 = !DILocalVariable(name: "scancode", scope: !11523, file: !3, line: 379, type: !109)
!11552 = !DILocation(line: 379, column: 6, scope: !11523)
!11553 = !DILocation(line: 381, column: 6, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 381, column: 6)
!11555 = !DILocation(line: 381, column: 12, scope: !11554)
!11556 = !DILocation(line: 381, column: 43, scope: !11554)
!11557 = !DILocation(line: 382, column: 4, scope: !11554)
!11558 = !DILocation(line: 382, column: 10, scope: !11554)
!11559 = !DILocation(line: 381, column: 6, scope: !11523)
!11560 = !DILocation(line: 384, column: 3, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 382, column: 46)
!11562 = !DILocation(line: 388, column: 10, scope: !11523)
!11563 = !DILocation(line: 388, column: 2, scope: !11523)
!11564 = !DILocation(line: 392, column: 20, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 388, column: 17)
!11566 = !DILocation(line: 392, column: 3, scope: !11565)
!11567 = !DILocation(line: 393, column: 14, scope: !11565)
!11568 = !DILocation(line: 393, column: 3, scope: !11565)
!11569 = !DILocation(line: 394, column: 3, scope: !11565)
!11570 = !DILocation(line: 398, column: 20, scope: !11565)
!11571 = !DILocation(line: 398, column: 3, scope: !11565)
!11572 = !DILocation(line: 399, column: 14, scope: !11565)
!11573 = !DILocation(line: 399, column: 3, scope: !11565)
!11574 = !DILocation(line: 400, column: 3, scope: !11565)
!11575 = !DILocation(line: 404, column: 6, scope: !11565)
!11576 = !DILocation(line: 404, column: 10, scope: !11565)
!11577 = !DILocation(line: 405, column: 12, scope: !11565)
!11578 = !DILocation(line: 405, column: 6, scope: !11565)
!11579 = !DILocation(line: 405, column: 10, scope: !11565)
!11580 = !DILocation(line: 406, column: 3, scope: !11565)
!11581 = !DILocation(line: 409, column: 7, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 409, column: 7)
!11583 = !DILocation(line: 409, column: 13, scope: !11582)
!11584 = !DILocation(line: 409, column: 7, scope: !11565)
!11585 = !DILocation(line: 410, column: 4, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 409, column: 53)
!11587 = !DILocation(line: 410, column: 4, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 410, column: 4)
!11589 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 410, column: 4)
!11590 = !DILocation(line: 410, column: 4, scope: !11589)
!11591 = !DILocation(line: 411, column: 4, scope: !11586)
!11592 = !DILocation(line: 413, column: 43, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 413, column: 7)
!11594 = !DILocation(line: 413, column: 19, scope: !11593)
!11595 = !DILocation(line: 413, column: 17, scope: !11593)
!11596 = !DILocation(line: 413, column: 51, scope: !11593)
!11597 = !DILocation(line: 413, column: 7, scope: !11565)
!11598 = !DILocation(line: 414, column: 43, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 413, column: 58)
!11600 = !DILocation(line: 414, column: 13, scope: !11599)
!11601 = !DILocation(line: 414, column: 7, scope: !11599)
!11602 = !DILocation(line: 414, column: 11, scope: !11599)
!11603 = !DILocation(line: 415, column: 11, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 415, column: 8)
!11605 = !DILocation(line: 415, column: 15, scope: !11604)
!11606 = !DILocation(line: 415, column: 8, scope: !11599)
!11607 = !DILocation(line: 416, column: 14, scope: !11604)
!11608 = !DILocation(line: 416, column: 8, scope: !11604)
!11609 = !DILocation(line: 416, column: 12, scope: !11604)
!11610 = !DILocation(line: 416, column: 5, scope: !11604)
!11611 = !DILocation(line: 417, column: 3, scope: !11599)
!11612 = !DILocation(line: 418, column: 3, scope: !11565)
!11613 = !DILocation(line: 421, column: 9, scope: !11530)
!11614 = !DILocation(line: 421, column: 6, scope: !11530)
!11615 = !DILocation(line: 421, column: 6, scope: !11523)
!11616 = !DILocation(line: 424, column: 7, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 424, column: 7)
!11618 = !DILocation(line: 424, column: 16, scope: !11617)
!11619 = !DILocation(line: 424, column: 7, scope: !11529)
!11620 = !DILocation(line: 425, column: 19, scope: !11617)
!11621 = !DILocation(line: 425, column: 42, scope: !11617)
!11622 = !DILocation(line: 425, column: 4, scope: !11617)
!11623 = !DILocation(line: 426, column: 23, scope: !11529)
!11624 = !DILocation(line: 426, column: 31, scope: !11529)
!11625 = !DILocation(line: 426, column: 3, scope: !11529)
!11626 = !DILocation(line: 427, column: 17, scope: !11529)
!11627 = !DILocation(line: 427, column: 3, scope: !11529)
!11628 = !DILocalVariable(name: "__flags", scope: !11528, file: !3, line: 430, type: !193)
!11629 = !DILocation(line: 430, column: 3, scope: !11528)
!11630 = !DILocalVariable(name: "__ret", scope: !11528, file: !3, line: 430, type: !7)
!11631 = !DILocation(line: 430, column: 3, scope: !11540)
!11632 = !DILocalVariable(name: "__dummy", scope: !11633, file: !3, line: 430, type: !193)
!11633 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 430, column: 3)
!11634 = !DILocation(line: 430, column: 3, scope: !11633)
!11635 = !DILocalVariable(name: "__dummy2", scope: !11633, file: !3, line: 430, type: !193)
!11636 = !DILocation(line: 430, column: 3, scope: !11539)
!11637 = !DILocation(line: 430, column: 3, scope: !11538)
!11638 = !DILocation(line: 430, column: 3, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 430, column: 3)
!11640 = !DILocalVariable(name: "__dummy", scope: !11641, file: !3, line: 430, type: !193)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 430, column: 3)
!11642 = distinct !DILexicalBlock(scope: !11639, file: !3, line: 430, column: 3)
!11643 = !DILocation(line: 430, column: 3, scope: !11641)
!11644 = !DILocalVariable(name: "__dummy2", scope: !11641, file: !3, line: 430, type: !193)
!11645 = !DILocation(line: 430, column: 3, scope: !11642)
!11646 = !DILocation(line: 430, column: 3, scope: !11537)
!11647 = !{i32 -2140569531}
!11648 = !DILocation(line: 329, column: 10, scope: !6796, inlinedAt: !11535)
!11649 = !DILocation(line: 329, column: 16, scope: !6796, inlinedAt: !11535)
!11650 = !DILocation(line: 430, column: 3, scope: !11536)
!11651 = !DILocalVariable(name: "__tmp", scope: !11652, file: !3, line: 430, type: !6843)
!11652 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 430, column: 3)
!11653 = !DILocation(line: 430, column: 3, scope: !11652)
!11654 = !DILocalVariable(name: "__buf", scope: !11652, file: !3, line: 430, type: !2648)
!11655 = !DILocalVariable(name: "__n", scope: !11652, file: !3, line: 430, type: !193)
!11656 = !DILocalVariable(name: "__recsize", scope: !11652, file: !3, line: 430, type: !7567)
!11657 = !DILocalVariable(name: "__kfifo", scope: !11652, file: !3, line: 430, type: !6846)
!11658 = !DILocation(line: 409, column: 2, scope: !7771, inlinedAt: !11527)
!11659 = !DILocation(line: 409, column: 2, scope: !7776, inlinedAt: !11527)
!11660 = !DILocation(line: 409, column: 2, scope: !7777, inlinedAt: !11527)
!11661 = !DILocation(line: 409, column: 2, scope: !7784, inlinedAt: !11527)
!11662 = !DILocation(line: 409, column: 2, scope: !7787, inlinedAt: !11527)
!11663 = !DILocation(line: 434, column: 6, scope: !11529)
!11664 = !DILocation(line: 365, column: 27, scope: !7750, inlinedAt: !11533)
!11665 = !DILocation(line: 365, column: 6, scope: !7750, inlinedAt: !11533)
!11666 = !DILocation(line: 365, column: 6, scope: !7676, inlinedAt: !11533)
!11667 = !DILocation(line: 366, column: 12, scope: !7754, inlinedAt: !11533)
!11668 = !DILocation(line: 366, column: 14, scope: !7754, inlinedAt: !11533)
!11669 = !DILocation(line: 366, column: 7, scope: !7755, inlinedAt: !11533)
!11670 = !DILocation(line: 367, column: 4, scope: !7754, inlinedAt: !11533)
!11671 = !DILocation(line: 368, column: 28, scope: !7755, inlinedAt: !11533)
!11672 = !DILocation(line: 368, column: 10, scope: !7755, inlinedAt: !11533)
!11673 = !DILocation(line: 368, column: 3, scope: !7755, inlinedAt: !11533)
!11674 = !DILocation(line: 370, column: 29, scope: !7763, inlinedAt: !11533)
!11675 = !DILocation(line: 370, column: 10, scope: !7763, inlinedAt: !11533)
!11676 = !DILocation(line: 370, column: 3, scope: !7763, inlinedAt: !11533)
!11677 = !DILocation(line: 372, column: 1, scope: !7676, inlinedAt: !11533)
!11678 = !DILocation(line: 434, column: 14, scope: !11529)
!11679 = !DILocation(line: 433, column: 3, scope: !11529)
!11680 = !DILocation(line: 435, column: 2, scope: !11529)
!11681 = !DILocation(line: 436, column: 3, scope: !11530)
!11682 = !DILocation(line: 436, column: 3, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 436, column: 3)
!11684 = distinct !DILexicalBlock(scope: !11530, file: !3, line: 436, column: 3)
!11685 = !DILocation(line: 436, column: 3, scope: !11684)
!11686 = !DILocation(line: 437, column: 1, scope: !11523)
!11687 = distinct !DISubprogram(name: "sony_nc_rfkill_update", scope: !3, file: !3, line: 1670, type: !2410, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11688 = !DILocalVariable(name: "i", scope: !11687, file: !3, line: 1672, type: !133)
!11689 = !DILocation(line: 1672, column: 22, scope: !11687)
!11690 = !DILocalVariable(name: "result", scope: !11687, file: !3, line: 1673, type: !109)
!11691 = !DILocation(line: 1673, column: 6, scope: !11687)
!11692 = !DILocalVariable(name: "hwblock", scope: !11687, file: !3, line: 1674, type: !844)
!11693 = !DILocation(line: 1674, column: 7, scope: !11687)
!11694 = !DILocation(line: 1676, column: 23, scope: !11687)
!11695 = !DILocation(line: 1676, column: 2, scope: !11687)
!11696 = !DILocation(line: 1677, column: 14, scope: !11687)
!11697 = !DILocation(line: 1677, column: 21, scope: !11687)
!11698 = !DILocation(line: 1677, column: 12, scope: !11687)
!11699 = !DILocation(line: 1677, column: 10, scope: !11687)
!11700 = !DILocation(line: 1679, column: 9, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 1679, column: 2)
!11702 = !DILocation(line: 1679, column: 7, scope: !11701)
!11703 = !DILocation(line: 1679, column: 14, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11701, file: !3, line: 1679, column: 2)
!11705 = !DILocation(line: 1679, column: 16, scope: !11704)
!11706 = !DILocation(line: 1679, column: 2, scope: !11701)
!11707 = !DILocalVariable(name: "argument", scope: !11708, file: !3, line: 1680, type: !109)
!11708 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 1679, column: 38)
!11709 = !DILocation(line: 1680, column: 7, scope: !11708)
!11710 = !DILocation(line: 1680, column: 38, scope: !11708)
!11711 = !DILocation(line: 1680, column: 18, scope: !11708)
!11712 = !DILocation(line: 1682, column: 28, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 1682, column: 7)
!11714 = !DILocation(line: 1682, column: 8, scope: !11713)
!11715 = !DILocation(line: 1682, column: 7, scope: !11708)
!11716 = !DILocation(line: 1683, column: 4, scope: !11713)
!11717 = !DILocation(line: 1685, column: 7, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11708, file: !3, line: 1685, column: 7)
!11719 = !DILocation(line: 1685, column: 7, scope: !11708)
!11720 = !DILocation(line: 1686, column: 48, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !3, line: 1686, column: 8)
!11722 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 1685, column: 16)
!11723 = !DILocation(line: 1686, column: 28, scope: !11721)
!11724 = !DILocation(line: 1686, column: 8, scope: !11721)
!11725 = !DILocation(line: 1686, column: 8, scope: !11722)
!11726 = !DILocation(line: 1688, column: 4, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 1686, column: 59)
!11728 = !DILocation(line: 1689, column: 4, scope: !11722)
!11729 = !DILocation(line: 1692, column: 24, scope: !11708)
!11730 = !DILocation(line: 1692, column: 44, scope: !11708)
!11731 = !DILocation(line: 1692, column: 3, scope: !11708)
!11732 = !DILocation(line: 1693, column: 41, scope: !11708)
!11733 = !DILocation(line: 1693, column: 21, scope: !11708)
!11734 = !DILocation(line: 1694, column: 9, scope: !11708)
!11735 = !DILocation(line: 1694, column: 16, scope: !11708)
!11736 = !DILocation(line: 1694, column: 7, scope: !11708)
!11737 = !DILocation(line: 1693, column: 3, scope: !11708)
!11738 = !DILocation(line: 1695, column: 2, scope: !11708)
!11739 = !DILocation(line: 1679, column: 34, scope: !11704)
!11740 = !DILocation(line: 1679, column: 2, scope: !11704)
!11741 = distinct !{!11741, !11706, !11742}
!11742 = !DILocation(line: 1695, column: 2, scope: !11701)
!11743 = !DILocation(line: 1696, column: 1, scope: !11687)
!11744 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !11745, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11745 = !DISubroutineType(types: !11746)
!11746 = !{!422, !4130}
!11747 = !DILocalVariable(name: "dev", arg: 1, scope: !11744, file: !73, line: 609, type: !4130)
!11748 = !DILocation(line: 609, column: 57, scope: !11744)
!11749 = !DILocation(line: 612, column: 6, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11744, file: !73, line: 612, column: 6)
!11751 = !DILocation(line: 612, column: 11, scope: !11750)
!11752 = !DILocation(line: 612, column: 6, scope: !11744)
!11753 = !DILocation(line: 613, column: 10, scope: !11750)
!11754 = !DILocation(line: 613, column: 15, scope: !11750)
!11755 = !DILocation(line: 613, column: 3, scope: !11750)
!11756 = !DILocation(line: 615, column: 23, scope: !11744)
!11757 = !DILocation(line: 615, column: 28, scope: !11744)
!11758 = !DILocation(line: 615, column: 9, scope: !11744)
!11759 = !DILocation(line: 615, column: 2, scope: !11744)
!11760 = !DILocation(line: 616, column: 1, scope: !11744)
!11761 = distinct !DISubprogram(name: "input_report_rel", scope: !5063, file: !5063, line: 420, type: !7872, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11762 = !DILocalVariable(name: "dev", arg: 1, scope: !11761, file: !5063, line: 420, type: !5061)
!11763 = !DILocation(line: 420, column: 55, scope: !11761)
!11764 = !DILocalVariable(name: "code", arg: 2, scope: !11761, file: !5063, line: 420, type: !7)
!11765 = !DILocation(line: 420, column: 73, scope: !11761)
!11766 = !DILocalVariable(name: "value", arg: 3, scope: !11761, file: !5063, line: 420, type: !109)
!11767 = !DILocation(line: 420, column: 83, scope: !11761)
!11768 = !DILocation(line: 422, column: 14, scope: !11761)
!11769 = !DILocation(line: 422, column: 27, scope: !11761)
!11770 = !DILocation(line: 422, column: 33, scope: !11761)
!11771 = !DILocation(line: 422, column: 2, scope: !11761)
!11772 = !DILocation(line: 423, column: 1, scope: !11761)
!11773 = distinct !DISubprogram(name: "kobject_name", scope: !3528, file: !3528, line: 88, type: !11774, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11774 = !DISubroutineType(types: !11775)
!11775 = !{!422, !11776}
!11776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11777, size: 64)
!11777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3527)
!11778 = !DILocalVariable(name: "kobj", arg: 1, scope: !11773, file: !3528, line: 88, type: !11776)
!11779 = !DILocation(line: 88, column: 62, scope: !11773)
!11780 = !DILocation(line: 90, column: 9, scope: !11773)
!11781 = !DILocation(line: 90, column: 15, scope: !11773)
!11782 = !DILocation(line: 90, column: 2, scope: !11773)
!11783 = distinct !DISubprogram(name: "sony_nc_resume", scope: !3, file: !3, line: 1547, type: !3845, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11784 = !DILocalVariable(name: "dev", arg: 1, scope: !11783, file: !3, line: 1547, type: !3523)
!11785 = !DILocation(line: 1547, column: 42, scope: !11783)
!11786 = !DILocalVariable(name: "item", scope: !11783, file: !3, line: 1549, type: !4468)
!11787 = !DILocation(line: 1549, column: 24, scope: !11783)
!11788 = !DILocation(line: 1551, column: 12, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 1551, column: 2)
!11790 = !DILocation(line: 1551, column: 7, scope: !11789)
!11791 = !DILocation(line: 1551, column: 30, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 1551, column: 2)
!11793 = !DILocation(line: 1551, column: 36, scope: !11792)
!11794 = !DILocation(line: 1551, column: 2, scope: !11789)
!11795 = !DILocalVariable(name: "ret", scope: !11796, file: !3, line: 1552, type: !109)
!11796 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 1551, column: 50)
!11797 = !DILocation(line: 1552, column: 7, scope: !11796)
!11798 = !DILocation(line: 1554, column: 8, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 1554, column: 7)
!11800 = !DILocation(line: 1554, column: 14, scope: !11799)
!11801 = !DILocation(line: 1554, column: 7, scope: !11796)
!11802 = !DILocation(line: 1555, column: 4, scope: !11799)
!11803 = !DILocation(line: 1556, column: 26, scope: !11796)
!11804 = !DILocation(line: 1556, column: 48, scope: !11796)
!11805 = !DILocation(line: 1556, column: 54, scope: !11796)
!11806 = !DILocation(line: 1556, column: 47, scope: !11796)
!11807 = !DILocation(line: 1557, column: 13, scope: !11796)
!11808 = !DILocation(line: 1557, column: 19, scope: !11796)
!11809 = !DILocation(line: 1556, column: 9, scope: !11796)
!11810 = !DILocation(line: 1556, column: 7, scope: !11796)
!11811 = !DILocation(line: 1558, column: 7, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 1558, column: 7)
!11813 = !DILocation(line: 1558, column: 11, scope: !11812)
!11814 = !DILocation(line: 1558, column: 7, scope: !11796)
!11815 = !DILocation(line: 1559, column: 4, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 1558, column: 16)
!11817 = !DILocation(line: 1560, column: 4, scope: !11816)
!11818 = !DILocation(line: 1562, column: 2, scope: !11796)
!11819 = !DILocation(line: 1551, column: 46, scope: !11792)
!11820 = !DILocation(line: 1551, column: 2, scope: !11792)
!11821 = distinct !{!11821, !11794, !11822}
!11822 = !DILocation(line: 1562, column: 2, scope: !11789)
!11823 = !DILocation(line: 1564, column: 22, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 1564, column: 6)
!11825 = !DILocation(line: 1564, column: 6, scope: !11824)
!11826 = !DILocation(line: 1564, column: 6, scope: !11783)
!11827 = !DILocalVariable(name: "arg", scope: !11828, file: !3, line: 1565, type: !109)
!11828 = distinct !DILexicalBlock(scope: !11824, file: !3, line: 1564, column: 52)
!11829 = !DILocation(line: 1565, column: 7, scope: !11828)
!11830 = !DILocation(line: 1566, column: 24, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11828, file: !3, line: 1566, column: 7)
!11832 = !DILocation(line: 1566, column: 7, scope: !11831)
!11833 = !DILocation(line: 1566, column: 7, scope: !11828)
!11834 = !DILocation(line: 1567, column: 4, scope: !11831)
!11835 = !DILocation(line: 1567, column: 4, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 1567, column: 4)
!11837 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 1567, column: 4)
!11838 = !DILocation(line: 1567, column: 4, scope: !11837)
!11839 = !DILocation(line: 1568, column: 2, scope: !11828)
!11840 = !DILocation(line: 1570, column: 22, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 1570, column: 6)
!11842 = !DILocation(line: 1570, column: 6, scope: !11841)
!11843 = !DILocation(line: 1570, column: 6, scope: !11783)
!11844 = !DILocation(line: 1571, column: 3, scope: !11841)
!11845 = !DILocation(line: 1573, column: 2, scope: !11783)
!11846 = distinct !DISubprogram(name: "sony_nc_function_resume", scope: !3, file: !3, line: 1505, type: !2410, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11847 = !DILocalVariable(name: "i", scope: !11846, file: !3, line: 1507, type: !7)
!11848 = !DILocation(line: 1507, column: 15, scope: !11846)
!11849 = !DILocalVariable(name: "result", scope: !11846, file: !3, line: 1507, type: !7)
!11850 = !DILocation(line: 1507, column: 18, scope: !11846)
!11851 = !DILocalVariable(name: "bitmask", scope: !11846, file: !3, line: 1507, type: !7)
!11852 = !DILocation(line: 1507, column: 26, scope: !11846)
!11853 = !DILocalVariable(name: "arg", scope: !11846, file: !3, line: 1507, type: !7)
!11854 = !DILocation(line: 1507, column: 35, scope: !11846)
!11855 = !DILocation(line: 1509, column: 2, scope: !11846)
!11856 = !DILocation(line: 1509, column: 2, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11858, file: !3, line: 1509, column: 2)
!11858 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 1509, column: 2)
!11859 = !DILocation(line: 1509, column: 2, scope: !11858)
!11860 = !DILocation(line: 1511, column: 9, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 1511, column: 2)
!11862 = !DILocation(line: 1511, column: 7, scope: !11861)
!11863 = !DILocation(line: 1511, column: 14, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 1511, column: 2)
!11865 = !DILocation(line: 1511, column: 16, scope: !11864)
!11866 = !DILocation(line: 1511, column: 2, scope: !11861)
!11867 = !DILocalVariable(name: "handle", scope: !11868, file: !3, line: 1512, type: !7)
!11868 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 1511, column: 49)
!11869 = !DILocation(line: 1512, column: 16, scope: !11868)
!11870 = !DILocation(line: 1512, column: 25, scope: !11868)
!11871 = !DILocation(line: 1512, column: 34, scope: !11868)
!11872 = !DILocation(line: 1512, column: 38, scope: !11868)
!11873 = !DILocation(line: 1514, column: 8, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 1514, column: 7)
!11875 = !DILocation(line: 1514, column: 7, scope: !11868)
!11876 = !DILocation(line: 1515, column: 4, scope: !11874)
!11877 = !DILocation(line: 1517, column: 11, scope: !11868)
!11878 = !DILocation(line: 1517, column: 3, scope: !11868)
!11879 = !DILocation(line: 1522, column: 25, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 1517, column: 19)
!11881 = !DILocation(line: 1522, column: 4, scope: !11880)
!11882 = !DILocation(line: 1523, column: 4, scope: !11880)
!11883 = !DILocation(line: 1526, column: 25, scope: !11880)
!11884 = !DILocation(line: 1526, column: 4, scope: !11880)
!11885 = !DILocation(line: 1527, column: 4, scope: !11880)
!11886 = !DILocation(line: 1529, column: 4, scope: !11880)
!11887 = !DILocation(line: 1530, column: 4, scope: !11880)
!11888 = !DILocation(line: 1533, column: 4, scope: !11880)
!11889 = !DILocation(line: 1534, column: 4, scope: !11880)
!11890 = !DILocation(line: 1536, column: 4, scope: !11880)
!11891 = !DILocation(line: 1538, column: 2, scope: !11868)
!11892 = !DILocation(line: 1511, column: 45, scope: !11864)
!11893 = !DILocation(line: 1511, column: 2, scope: !11864)
!11894 = distinct !{!11894, !11866, !11895}
!11895 = !DILocation(line: 1538, column: 2, scope: !11861)
!11896 = !DILocation(line: 1541, column: 6, scope: !11846)
!11897 = !DILocation(line: 1542, column: 24, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 1542, column: 6)
!11899 = !DILocation(line: 1542, column: 7, scope: !11898)
!11900 = !DILocation(line: 1542, column: 6, scope: !11846)
!11901 = !DILocation(line: 1543, column: 20, scope: !11898)
!11902 = !DILocation(line: 1543, column: 3, scope: !11898)
!11903 = !DILocation(line: 1545, column: 1, scope: !11846)
!11904 = distinct !DISubprogram(name: "sony_nc_thermal_resume", scope: !3, file: !3, line: 2289, type: !2410, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!11905 = !DILocalVariable(name: "status", scope: !11904, file: !3, line: 2291, type: !109)
!11906 = !DILocation(line: 2291, column: 6, scope: !11904)
!11907 = !DILocation(line: 2293, column: 7, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 2293, column: 6)
!11909 = !DILocation(line: 2293, column: 6, scope: !11904)
!11910 = !DILocation(line: 2294, column: 3, scope: !11908)
!11911 = !DILocation(line: 2296, column: 11, scope: !11904)
!11912 = !DILocation(line: 2296, column: 9, scope: !11904)
!11913 = !DILocation(line: 2298, column: 6, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 2298, column: 6)
!11915 = !DILocation(line: 2298, column: 16, scope: !11914)
!11916 = !DILocation(line: 2298, column: 27, scope: !11914)
!11917 = !DILocation(line: 2298, column: 13, scope: !11914)
!11918 = !DILocation(line: 2298, column: 6, scope: !11904)
!11919 = !DILocation(line: 2299, column: 28, scope: !11914)
!11920 = !DILocation(line: 2299, column: 39, scope: !11914)
!11921 = !DILocation(line: 2299, column: 3, scope: !11914)
!11922 = !DILocation(line: 2300, column: 1, scope: !11904)
!11923 = !DILocalVariable(name: "device", arg: 1, scope: !5554, file: !3, line: 4691, type: !4529)
!11924 = !DILocation(line: 4691, column: 45, scope: !5554)
!11925 = !DILocalVariable(name: "result", scope: !5554, file: !3, line: 4693, type: !109)
!11926 = !DILocation(line: 4693, column: 6, scope: !5554)
!11927 = !DILocalVariable(name: "io", scope: !5554, file: !3, line: 4694, type: !4496)
!11928 = !DILocation(line: 4694, column: 26, scope: !5554)
!11929 = !DILocalVariable(name: "tmp_io", scope: !5554, file: !3, line: 4694, type: !4496)
!11930 = !DILocation(line: 4694, column: 31, scope: !5554)
!11931 = !DILocalVariable(name: "irq", scope: !5554, file: !3, line: 4695, type: !4510)
!11932 = !DILocation(line: 4695, column: 23, scope: !5554)
!11933 = !DILocalVariable(name: "tmp_irq", scope: !5554, file: !3, line: 4695, type: !4510)
!11934 = !DILocation(line: 4695, column: 29, scope: !5554)
!11935 = !DILocation(line: 4697, column: 22, scope: !5554)
!11936 = !DILocation(line: 4697, column: 20, scope: !5554)
!11937 = !DILocation(line: 4698, column: 9, scope: !5554)
!11938 = !DILocation(line: 4698, column: 2, scope: !5554)
!11939 = !DILocation(line: 4699, column: 2, scope: !5554)
!11940 = !DILocation(line: 4700, column: 2, scope: !5554)
!11941 = !DILocation(line: 4700, column: 2, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4700, column: 2)
!11943 = !DILocation(line: 4703, column: 39, scope: !5554)
!11944 = !DILocation(line: 4703, column: 11, scope: !5554)
!11945 = !DILocation(line: 4703, column: 9, scope: !5554)
!11946 = !DILocation(line: 4704, column: 6, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4704, column: 6)
!11948 = !DILocation(line: 4704, column: 6, scope: !5554)
!11949 = !DILocation(line: 4705, column: 3, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 4704, column: 14)
!11951 = !DILocation(line: 4706, column: 3, scope: !11950)
!11952 = !DILocation(line: 4710, column: 35, scope: !5554)
!11953 = !DILocation(line: 4710, column: 11, scope: !5554)
!11954 = !DILocation(line: 4710, column: 9, scope: !5554)
!11955 = !DILocation(line: 4711, column: 6, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4711, column: 6)
!11957 = !DILocation(line: 4711, column: 6, scope: !5554)
!11958 = !DILocation(line: 4712, column: 3, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 4711, column: 14)
!11960 = !DILocation(line: 4713, column: 3, scope: !11959)
!11961 = !DILocation(line: 4716, column: 11, scope: !5554)
!11962 = !DILocation(line: 4716, column: 9, scope: !5554)
!11963 = !DILocation(line: 4717, column: 6, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4717, column: 6)
!11965 = !DILocation(line: 4717, column: 6, scope: !5554)
!11966 = !DILocation(line: 4718, column: 3, scope: !11964)
!11967 = !DILocalVariable(name: "__mptr", scope: !11968, file: !3, line: 4721, type: !177)
!11968 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 4721, column: 2)
!11969 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4721, column: 2)
!11970 = !DILocation(line: 4721, column: 2, scope: !11968)
!11971 = !DILocation(line: 4721, column: 2, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 4721, column: 2)
!11973 = !DILocation(line: 4721, column: 2, scope: !11969)
!11974 = !DILocation(line: 4721, column: 2, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !3, line: 4721, column: 2)
!11976 = !DILocation(line: 4722, column: 7, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11978, file: !3, line: 4722, column: 7)
!11978 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 4721, column: 59)
!11979 = !DILocation(line: 4722, column: 7, scope: !11978)
!11980 = !DILocation(line: 4724, column: 4, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 4723, column: 39)
!11982 = !DILocation(line: 4724, column: 4, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11984, file: !3, line: 4724, column: 4)
!11984 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 4724, column: 4)
!11985 = !DILocation(line: 4724, column: 4, scope: !11984)
!11986 = !DILocation(line: 4728, column: 8, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11981, file: !3, line: 4728, column: 8)
!11988 = !DILocation(line: 4728, column: 12, scope: !11987)
!11989 = !DILocation(line: 4728, column: 16, scope: !11987)
!11990 = !DILocation(line: 4728, column: 8, scope: !11981)
!11991 = !DILocation(line: 4729, column: 9, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !3, line: 4729, column: 9)
!11993 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 4728, column: 25)
!11994 = !DILocation(line: 4729, column: 9, scope: !11993)
!11995 = !DILocation(line: 4732, column: 6, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 4731, column: 40)
!11997 = !DILocation(line: 4732, column: 6, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !3, line: 4732, column: 6)
!11999 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 4732, column: 6)
!12000 = !DILocation(line: 4732, column: 6, scope: !11999)
!12001 = !DILocation(line: 4735, column: 28, scope: !11996)
!12002 = !DILocation(line: 4735, column: 26, scope: !11996)
!12003 = !DILocation(line: 4736, column: 6, scope: !11996)
!12004 = !DILocation(line: 4739, column: 6, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 4738, column: 10)
!12006 = !DILocation(line: 4739, column: 6, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 4739, column: 6)
!12008 = distinct !DILexicalBlock(scope: !12005, file: !3, line: 4739, column: 6)
!12009 = !DILocation(line: 4739, column: 6, scope: !12008)
!12010 = !DILocation(line: 4743, column: 6, scope: !12005)
!12011 = !DILocation(line: 4746, column: 4, scope: !11993)
!12012 = !DILocation(line: 4748, column: 27, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 4747, column: 9)
!12014 = !DILocation(line: 4748, column: 25, scope: !12013)
!12015 = !DILocation(line: 4749, column: 5, scope: !12013)
!12016 = !DILocation(line: 4751, column: 3, scope: !11981)
!12017 = !DILocation(line: 4752, column: 2, scope: !11978)
!12018 = !DILocalVariable(name: "__mptr", scope: !12019, file: !3, line: 4721, type: !177)
!12019 = distinct !DILexicalBlock(scope: !11975, file: !3, line: 4721, column: 2)
!12020 = !DILocation(line: 4721, column: 2, scope: !12019)
!12021 = !DILocation(line: 4721, column: 2, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 4721, column: 2)
!12023 = distinct !{!12023, !11973, !12024}
!12024 = !DILocation(line: 4752, column: 2, scope: !11969)
!12025 = !DILocation(line: 4753, column: 16, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4753, column: 6)
!12027 = !DILocation(line: 4753, column: 7, scope: !12026)
!12028 = !DILocation(line: 4753, column: 6, scope: !5554)
!12029 = !DILocation(line: 4754, column: 3, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12026, file: !3, line: 4753, column: 28)
!12031 = !DILocation(line: 4755, column: 10, scope: !12030)
!12032 = !DILocation(line: 4756, column: 3, scope: !12030)
!12033 = !DILocalVariable(name: "__mptr", scope: !12034, file: !3, line: 4760, type: !177)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 4760, column: 2)
!12035 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4760, column: 2)
!12036 = !DILocation(line: 4760, column: 2, scope: !12034)
!12037 = !DILocation(line: 4760, column: 2, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 4760, column: 2)
!12039 = !DILocation(line: 4760, column: 2, scope: !12035)
!12040 = !DILocation(line: 4760, column: 2, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 4760, column: 2)
!12042 = !DILocation(line: 4761, column: 20, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !3, line: 4761, column: 7)
!12044 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 4760, column: 63)
!12045 = !DILocation(line: 4761, column: 25, scope: !12043)
!12046 = !DILocation(line: 4761, column: 29, scope: !12043)
!12047 = !DILocation(line: 4761, column: 8, scope: !12043)
!12048 = !DILocation(line: 4761, column: 7, scope: !12044)
!12049 = !DILocation(line: 4763, column: 4, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 4762, column: 36)
!12051 = !DILocation(line: 4763, column: 4, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 4763, column: 4)
!12053 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 4763, column: 4)
!12054 = !DILocation(line: 4763, column: 4, scope: !12053)
!12055 = !DILocation(line: 4769, column: 23, scope: !12050)
!12056 = !DILocation(line: 4769, column: 21, scope: !12050)
!12057 = !DILocation(line: 4770, column: 4, scope: !12050)
!12058 = !DILocation(line: 4772, column: 2, scope: !12044)
!12059 = !DILocalVariable(name: "__mptr", scope: !12060, file: !3, line: 4760, type: !177)
!12060 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 4760, column: 2)
!12061 = !DILocation(line: 4760, column: 2, scope: !12060)
!12062 = !DILocation(line: 4760, column: 2, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 4760, column: 2)
!12064 = distinct !{!12064, !12039, !12065}
!12065 = !DILocation(line: 4772, column: 2, scope: !12035)
!12066 = !DILocation(line: 4773, column: 16, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4773, column: 6)
!12068 = !DILocation(line: 4773, column: 7, scope: !12067)
!12069 = !DILocation(line: 4773, column: 6, scope: !5554)
!12070 = !DILocation(line: 4774, column: 3, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 4773, column: 25)
!12072 = !DILocation(line: 4775, column: 10, scope: !12071)
!12073 = !DILocation(line: 4776, column: 3, scope: !12071)
!12074 = !DILocation(line: 4780, column: 27, scope: !5554)
!12075 = !DILocation(line: 4780, column: 44, scope: !5554)
!12076 = !DILocation(line: 4780, column: 65, scope: !5554)
!12077 = !DILocation(line: 4780, column: 11, scope: !5554)
!12078 = !DILocation(line: 4780, column: 9, scope: !5554)
!12079 = !DILocation(line: 4781, column: 6, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4781, column: 6)
!12081 = !DILocation(line: 4781, column: 6, scope: !5554)
!12082 = !DILocation(line: 4782, column: 3, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 4781, column: 14)
!12084 = !DILocation(line: 4783, column: 3, scope: !12083)
!12085 = !DILocation(line: 4786, column: 27, scope: !5554)
!12086 = !DILocation(line: 4788, column: 11, scope: !5554)
!12087 = !DILocation(line: 4788, column: 9, scope: !5554)
!12088 = !DILocation(line: 4789, column: 6, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4789, column: 6)
!12090 = !DILocation(line: 4789, column: 6, scope: !5554)
!12091 = !DILocation(line: 4790, column: 3, scope: !12089)
!12092 = !DILocation(line: 4792, column: 31, scope: !5554)
!12093 = !DILocation(line: 4792, column: 47, scope: !5554)
!12094 = !DILocation(line: 4792, column: 51, scope: !5554)
!12095 = !DILocation(line: 4792, column: 11, scope: !5554)
!12096 = !DILocation(line: 4792, column: 9, scope: !5554)
!12097 = !DILocation(line: 4793, column: 6, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4793, column: 6)
!12099 = !DILocation(line: 4793, column: 6, scope: !5554)
!12100 = !DILocation(line: 4794, column: 3, scope: !12098)
!12101 = !DILocation(line: 4796, column: 2, scope: !5554)
!12102 = !DILocation(line: 4797, column: 2, scope: !5554)
!12103 = !DILabel(scope: !5554, name: "err_remove_pf", file: !3, line: 4799)
!12104 = !DILocation(line: 4799, column: 1, scope: !5554)
!12105 = !DILocation(line: 4800, column: 2, scope: !5554)
!12106 = !DILabel(scope: !5554, name: "err_disable_device", file: !3, line: 4802)
!12107 = !DILocation(line: 4802, column: 1, scope: !5554)
!12108 = !DILocation(line: 4803, column: 19, scope: !5554)
!12109 = !DILocation(line: 4803, column: 2, scope: !5554)
!12110 = !DILabel(scope: !5554, name: "err_free_irq", file: !3, line: 4805)
!12111 = !DILocation(line: 4805, column: 1, scope: !5554)
!12112 = !DILocation(line: 4806, column: 20, scope: !5554)
!12113 = !DILocation(line: 4806, column: 29, scope: !5554)
!12114 = !DILocation(line: 4806, column: 33, scope: !5554)
!12115 = !DILocation(line: 4806, column: 11, scope: !5554)
!12116 = !DILocation(line: 4806, column: 2, scope: !5554)
!12117 = !DILabel(scope: !5554, name: "err_release_region", file: !3, line: 4808)
!12118 = !DILocation(line: 4808, column: 1, scope: !5554)
!12119 = !DILocation(line: 4809, column: 2, scope: !5554)
!12120 = !DILocation(line: 4811, column: 15, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4811, column: 6)
!12122 = !DILocation(line: 4811, column: 27, scope: !12121)
!12123 = !DILocation(line: 4811, column: 31, scope: !12121)
!12124 = !DILocation(line: 4811, column: 6, scope: !12121)
!12125 = !DILocation(line: 4811, column: 6, scope: !5554)
!12126 = !DILocation(line: 4812, column: 3, scope: !12121)
!12127 = !DILabel(scope: !5554, name: "err_remove_compat", file: !3, line: 4815)
!12128 = !DILocation(line: 4815, column: 1, scope: !5554)
!12129 = !DILocation(line: 4816, column: 2, scope: !5554)
!12130 = !DILabel(scope: !5554, name: "err_remove_input", file: !3, line: 4818)
!12131 = !DILocation(line: 4818, column: 1, scope: !5554)
!12132 = !DILocation(line: 4819, column: 2, scope: !5554)
!12133 = !DILabel(scope: !5554, name: "err_free_resources", file: !3, line: 4821)
!12134 = !DILocation(line: 4821, column: 1, scope: !5554)
!12135 = !DILocalVariable(name: "__mptr", scope: !12136, file: !3, line: 4822, type: !177)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 4822, column: 2)
!12137 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4822, column: 2)
!12138 = !DILocation(line: 4822, column: 2, scope: !12136)
!12139 = !DILocation(line: 4822, column: 2, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12136, file: !3, line: 4822, column: 2)
!12141 = !DILocation(line: 4822, column: 2, scope: !12137)
!12142 = !DILocalVariable(name: "__mptr", scope: !12143, file: !3, line: 4822, type: !177)
!12143 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 4822, column: 2)
!12144 = !DILocation(line: 4822, column: 2, scope: !12143)
!12145 = !DILocation(line: 4822, column: 2, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 4822, column: 2)
!12147 = !DILocation(line: 4822, column: 2, scope: !12148)
!12148 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 4822, column: 2)
!12149 = !DILocation(line: 4823, column: 13, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 4822, column: 64)
!12151 = !DILocation(line: 4823, column: 17, scope: !12150)
!12152 = !DILocation(line: 4823, column: 3, scope: !12150)
!12153 = !DILocation(line: 4824, column: 9, scope: !12150)
!12154 = !DILocation(line: 4824, column: 3, scope: !12150)
!12155 = !DILocation(line: 4825, column: 2, scope: !12150)
!12156 = !DILocalVariable(name: "__mptr", scope: !12157, file: !3, line: 4822, type: !177)
!12157 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 4822, column: 2)
!12158 = !DILocation(line: 4822, column: 2, scope: !12157)
!12159 = !DILocation(line: 4822, column: 2, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 4822, column: 2)
!12161 = distinct !{!12161, !12141, !12162}
!12162 = !DILocation(line: 4825, column: 2, scope: !12137)
!12163 = !DILocalVariable(name: "__mptr", scope: !12164, file: !3, line: 4826, type: !177)
!12164 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 4826, column: 2)
!12165 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 4826, column: 2)
!12166 = !DILocation(line: 4826, column: 2, scope: !12164)
!12167 = !DILocation(line: 4826, column: 2, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 4826, column: 2)
!12169 = !DILocation(line: 4826, column: 2, scope: !12165)
!12170 = !DILocalVariable(name: "__mptr", scope: !12171, file: !3, line: 4826, type: !177)
!12171 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 4826, column: 2)
!12172 = !DILocation(line: 4826, column: 2, scope: !12171)
!12173 = !DILocation(line: 4826, column: 2, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 4826, column: 2)
!12175 = !DILocation(line: 4826, column: 2, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 4826, column: 2)
!12177 = !DILocation(line: 4827, column: 13, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 4826, column: 69)
!12179 = !DILocation(line: 4827, column: 18, scope: !12178)
!12180 = !DILocation(line: 4827, column: 3, scope: !12178)
!12181 = !DILocation(line: 4828, column: 9, scope: !12178)
!12182 = !DILocation(line: 4828, column: 3, scope: !12178)
!12183 = !DILocation(line: 4829, column: 2, scope: !12178)
!12184 = !DILocalVariable(name: "__mptr", scope: !12185, file: !3, line: 4826, type: !177)
!12185 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 4826, column: 2)
!12186 = !DILocation(line: 4826, column: 2, scope: !12185)
!12187 = !DILocation(line: 4826, column: 2, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12185, file: !3, line: 4826, column: 2)
!12189 = distinct !{!12189, !12169, !12190}
!12190 = !DILocation(line: 4829, column: 2, scope: !12165)
!12191 = !DILocation(line: 4830, column: 22, scope: !5554)
!12192 = !DILocation(line: 4831, column: 19, scope: !5554)
!12193 = !DILocation(line: 4833, column: 9, scope: !5554)
!12194 = !DILocation(line: 4833, column: 2, scope: !5554)
!12195 = !DILocation(line: 4834, column: 1, scope: !5554)
!12196 = distinct !DISubprogram(name: "sony_pic_remove", scope: !3, file: !3, line: 4651, type: !4708, scopeLine: 4652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12197 = !DILocalVariable(name: "device", arg: 1, scope: !12196, file: !3, line: 4651, type: !4529)
!12198 = !DILocation(line: 4651, column: 48, scope: !12196)
!12199 = !DILocalVariable(name: "io", scope: !12196, file: !3, line: 4653, type: !4496)
!12200 = !DILocation(line: 4653, column: 26, scope: !12196)
!12201 = !DILocalVariable(name: "tmp_io", scope: !12196, file: !3, line: 4653, type: !4496)
!12202 = !DILocation(line: 4653, column: 31, scope: !12196)
!12203 = !DILocalVariable(name: "irq", scope: !12196, file: !3, line: 4654, type: !4510)
!12204 = !DILocation(line: 4654, column: 23, scope: !12196)
!12205 = !DILocalVariable(name: "tmp_irq", scope: !12196, file: !3, line: 4654, type: !4510)
!12206 = !DILocation(line: 4654, column: 29, scope: !12196)
!12207 = !DILocation(line: 4656, column: 23, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4656, column: 6)
!12209 = !DILocation(line: 4656, column: 6, scope: !12208)
!12210 = !DILocation(line: 4656, column: 6, scope: !12196)
!12211 = !DILocation(line: 4657, column: 3, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 4656, column: 32)
!12213 = !DILocation(line: 4658, column: 3, scope: !12212)
!12214 = !DILocation(line: 4661, column: 20, scope: !12196)
!12215 = !DILocation(line: 4661, column: 29, scope: !12196)
!12216 = !DILocation(line: 4661, column: 33, scope: !12196)
!12217 = !DILocation(line: 4661, column: 11, scope: !12196)
!12218 = !DILocation(line: 4661, column: 2, scope: !12196)
!12219 = !DILocation(line: 4662, column: 2, scope: !12196)
!12220 = !DILocation(line: 4664, column: 15, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4664, column: 6)
!12222 = !DILocation(line: 4664, column: 27, scope: !12221)
!12223 = !DILocation(line: 4664, column: 31, scope: !12221)
!12224 = !DILocation(line: 4664, column: 6, scope: !12221)
!12225 = !DILocation(line: 4664, column: 6, scope: !12196)
!12226 = !DILocation(line: 4665, column: 3, scope: !12221)
!12227 = !DILocation(line: 4668, column: 2, scope: !12196)
!12228 = !DILocation(line: 4670, column: 2, scope: !12196)
!12229 = !DILocation(line: 4673, column: 22, scope: !12196)
!12230 = !DILocation(line: 4673, column: 38, scope: !12196)
!12231 = !DILocation(line: 4673, column: 42, scope: !12196)
!12232 = !DILocation(line: 4673, column: 2, scope: !12196)
!12233 = !DILocation(line: 4674, column: 2, scope: !12196)
!12234 = !DILocalVariable(name: "__mptr", scope: !12235, file: !3, line: 4676, type: !177)
!12235 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 4676, column: 2)
!12236 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4676, column: 2)
!12237 = !DILocation(line: 4676, column: 2, scope: !12235)
!12238 = !DILocation(line: 4676, column: 2, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12235, file: !3, line: 4676, column: 2)
!12240 = !DILocation(line: 4676, column: 2, scope: !12236)
!12241 = !DILocalVariable(name: "__mptr", scope: !12242, file: !3, line: 4676, type: !177)
!12242 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 4676, column: 2)
!12243 = !DILocation(line: 4676, column: 2, scope: !12242)
!12244 = !DILocation(line: 4676, column: 2, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12242, file: !3, line: 4676, column: 2)
!12246 = !DILocation(line: 4676, column: 2, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 4676, column: 2)
!12248 = !DILocation(line: 4677, column: 13, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 4676, column: 64)
!12250 = !DILocation(line: 4677, column: 17, scope: !12249)
!12251 = !DILocation(line: 4677, column: 3, scope: !12249)
!12252 = !DILocation(line: 4678, column: 9, scope: !12249)
!12253 = !DILocation(line: 4678, column: 3, scope: !12249)
!12254 = !DILocation(line: 4679, column: 2, scope: !12249)
!12255 = !DILocalVariable(name: "__mptr", scope: !12256, file: !3, line: 4676, type: !177)
!12256 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 4676, column: 2)
!12257 = !DILocation(line: 4676, column: 2, scope: !12256)
!12258 = !DILocation(line: 4676, column: 2, scope: !12259)
!12259 = distinct !DILexicalBlock(scope: !12256, file: !3, line: 4676, column: 2)
!12260 = distinct !{!12260, !12240, !12261}
!12261 = !DILocation(line: 4679, column: 2, scope: !12236)
!12262 = !DILocalVariable(name: "__mptr", scope: !12263, file: !3, line: 4680, type: !177)
!12263 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 4680, column: 2)
!12264 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4680, column: 2)
!12265 = !DILocation(line: 4680, column: 2, scope: !12263)
!12266 = !DILocation(line: 4680, column: 2, scope: !12267)
!12267 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 4680, column: 2)
!12268 = !DILocation(line: 4680, column: 2, scope: !12264)
!12269 = !DILocalVariable(name: "__mptr", scope: !12270, file: !3, line: 4680, type: !177)
!12270 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 4680, column: 2)
!12271 = !DILocation(line: 4680, column: 2, scope: !12270)
!12272 = !DILocation(line: 4680, column: 2, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 4680, column: 2)
!12274 = !DILocation(line: 4680, column: 2, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 4680, column: 2)
!12276 = !DILocation(line: 4681, column: 13, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 4680, column: 69)
!12278 = !DILocation(line: 4681, column: 18, scope: !12277)
!12279 = !DILocation(line: 4681, column: 3, scope: !12277)
!12280 = !DILocation(line: 4682, column: 9, scope: !12277)
!12281 = !DILocation(line: 4682, column: 3, scope: !12277)
!12282 = !DILocation(line: 4683, column: 2, scope: !12277)
!12283 = !DILocalVariable(name: "__mptr", scope: !12284, file: !3, line: 4680, type: !177)
!12284 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 4680, column: 2)
!12285 = !DILocation(line: 4680, column: 2, scope: !12284)
!12286 = !DILocation(line: 4680, column: 2, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 4680, column: 2)
!12288 = distinct !{!12288, !12268, !12289}
!12289 = !DILocation(line: 4683, column: 2, scope: !12264)
!12290 = !DILocation(line: 4684, column: 22, scope: !12196)
!12291 = !DILocation(line: 4685, column: 19, scope: !12196)
!12292 = !DILocation(line: 4687, column: 2, scope: !12196)
!12293 = !DILocation(line: 4687, column: 2, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 4687, column: 2)
!12295 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 4687, column: 2)
!12296 = !DILocation(line: 4687, column: 2, scope: !12295)
!12297 = !DILocation(line: 4688, column: 2, scope: !12196)
!12298 = !DILocation(line: 4689, column: 1, scope: !12196)
!12299 = distinct !DISubprogram(name: "sony_pic_detect_device_type", scope: !3, file: !3, line: 3672, type: !12300, scopeLine: 3673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12300 = !DISubroutineType(types: !12301)
!12301 = !{null, !4525}
!12302 = !DILocalVariable(name: "dev", arg: 1, scope: !12299, file: !3, line: 3672, type: !4525)
!12303 = !DILocation(line: 3672, column: 62, scope: !12299)
!12304 = !DILocalVariable(name: "pcidev", scope: !12299, file: !3, line: 3674, type: !12305)
!12305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12306, size: 64)
!12306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !12307, line: 309, size: 19264, elements: !12308)
!12307 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!12308 = !{!12309, !12310, !12369, !12370, !12371, !12372, !12383, !12384, !12385, !12386, !12387, !12388, !12389, !12390, !12391, !12392, !12393, !12394, !12395, !12396, !12397, !12398, !12399, !12464, !12465, !12466, !12468, !12469, !12470, !12471, !12472, !12473, !12474, !12475, !12476, !12477, !12478, !12479, !12480, !12481, !12482, !12483, !12484, !12485, !12486, !12487, !12490, !12491, !12492, !12493, !12494, !12495, !12496, !12497, !12499, !12500, !12501, !12502, !12503, !12504, !12505, !12506, !12507, !12508, !12509, !12510, !12511, !12512, !12513, !12514, !12515, !12516, !12517, !12518, !12519, !12520, !12521, !12522, !12523, !12524, !12525, !12526, !12527, !12528, !12529, !12530, !12531, !12532, !12533, !12534, !12535, !12536, !12538, !12539, !12540, !12541, !12542, !12543, !12545, !12546, !12547, !12550, !12557, !12558, !12559, !12560, !12561, !12562, !12563}
!12309 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !12306, file: !12307, line: 310, baseType: !301, size: 128)
!12310 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !12306, file: !12307, line: 311, baseType: !12311, size: 64, offset: 128)
!12311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12312, size: 64)
!12312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !12307, line: 605, size: 8064, elements: !12313)
!12313 = !{!12314, !12315, !12316, !12317, !12318, !12319, !12320, !12322, !12323, !12324, !12348, !12351, !12352, !12353, !12354, !12355, !12356, !12357, !12361, !12362, !12364, !12365, !12366, !12367, !12368}
!12314 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12312, file: !12307, line: 606, baseType: !301, size: 128)
!12315 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !12312, file: !12307, line: 607, baseType: !12311, size: 64, offset: 128)
!12316 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12312, file: !12307, line: 608, baseType: !301, size: 128, offset: 192)
!12317 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !12312, file: !12307, line: 609, baseType: !301, size: 128, offset: 320)
!12318 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !12312, file: !12307, line: 610, baseType: !12305, size: 64, offset: 448)
!12319 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !12312, file: !12307, line: 611, baseType: !301, size: 128, offset: 512)
!12320 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !12312, file: !12307, line: 613, baseType: !12321, size: 256, offset: 640)
!12321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5017, size: 256, elements: !375)
!12322 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !12312, file: !12307, line: 614, baseType: !301, size: 128, offset: 896)
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !12312, file: !12307, line: 615, baseType: !5018, size: 512, offset: 1024)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !12312, file: !12307, line: 617, baseType: !12325, size: 64, offset: 1536)
!12325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12326, size: 64)
!12326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !12307, line: 731, size: 320, elements: !12327)
!12327 = !{!12328, !12332, !12336, !12340, !12344}
!12328 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !12326, file: !12307, line: 732, baseType: !12329, size: 64)
!12329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12330, size: 64)
!12330 = !DISubroutineType(types: !12331)
!12331 = !{!109, !12311}
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !12326, file: !12307, line: 733, baseType: !12333, size: 64, offset: 64)
!12333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12334, size: 64)
!12334 = !DISubroutineType(types: !12335)
!12335 = !{null, !12311}
!12336 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !12326, file: !12307, line: 734, baseType: !12337, size: 64, offset: 128)
!12337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12338, size: 64)
!12338 = !DISubroutineType(types: !12339)
!12339 = !{!177, !12311, !7, !109}
!12340 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !12326, file: !12307, line: 735, baseType: !12341, size: 64, offset: 192)
!12341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12342, size: 64)
!12342 = !DISubroutineType(types: !12343)
!12343 = !{!109, !12311, !7, !109, !109, !1910}
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !12326, file: !12307, line: 736, baseType: !12345, size: 64, offset: 256)
!12345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12346, size: 64)
!12346 = !DISubroutineType(types: !12347)
!12347 = !{!109, !12311, !7, !109, !109, !185}
!12348 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !12312, file: !12307, line: 618, baseType: !12349, size: 64, offset: 1600)
!12349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12350, size: 64)
!12350 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !12307, line: 537, flags: DIFlagFwdDecl)
!12351 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !12312, file: !12307, line: 619, baseType: !177, size: 64, offset: 1664)
!12352 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !12312, file: !12307, line: 620, baseType: !4670, size: 64, offset: 1728)
!12353 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !12312, file: !12307, line: 622, baseType: !192, size: 8, offset: 1792)
!12354 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !12312, file: !12307, line: 623, baseType: !192, size: 8, offset: 1800)
!12355 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !12312, file: !12307, line: 624, baseType: !192, size: 8, offset: 1808)
!12356 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !12312, file: !12307, line: 625, baseType: !192, size: 8, offset: 1816)
!12357 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12312, file: !12307, line: 630, baseType: !12358, size: 384, offset: 1824)
!12358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 384, elements: !12359)
!12359 = !{!12360}
!12360 = !DISubrange(count: 48)
!12361 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !12312, file: !12307, line: 632, baseType: !391, size: 16, offset: 2208)
!12362 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !12312, file: !12307, line: 633, baseType: !12363, size: 16, offset: 2224)
!12363 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !12307, line: 237, baseType: !391)
!12364 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !12312, file: !12307, line: 634, baseType: !3523, size: 64, offset: 2240)
!12365 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !12312, file: !12307, line: 635, baseType: !3524, size: 5568, offset: 2304)
!12366 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !12312, file: !12307, line: 636, baseType: !3618, size: 64, offset: 7872)
!12367 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !12312, file: !12307, line: 637, baseType: !3618, size: 64, offset: 7936)
!12368 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !12312, file: !12307, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!12369 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !12306, file: !12307, line: 312, baseType: !12311, size: 64, offset: 192)
!12370 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !12306, file: !12307, line: 314, baseType: !177, size: 64, offset: 256)
!12371 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !12306, file: !12307, line: 315, baseType: !4670, size: 64, offset: 320)
!12372 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !12306, file: !12307, line: 316, baseType: !12373, size: 64, offset: 384)
!12373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12374, size: 64)
!12374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !12307, line: 69, size: 832, elements: !12375)
!12375 = !{!12376, !12377, !12378, !12381, !12382}
!12376 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !12374, file: !12307, line: 70, baseType: !12311, size: 64)
!12377 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12374, file: !12307, line: 71, baseType: !301, size: 128, offset: 64)
!12378 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !12374, file: !12307, line: 72, baseType: !12379, size: 64, offset: 192)
!12379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12380, size: 64)
!12380 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !12307, line: 72, flags: DIFlagFwdDecl)
!12381 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !12374, file: !12307, line: 73, baseType: !192, size: 8, offset: 256)
!12382 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !12374, file: !12307, line: 74, baseType: !3527, size: 512, offset: 320)
!12383 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !12306, file: !12307, line: 318, baseType: !7, size: 32, offset: 448)
!12384 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !12306, file: !12307, line: 319, baseType: !391, size: 16, offset: 480)
!12385 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12306, file: !12307, line: 320, baseType: !391, size: 16, offset: 496)
!12386 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !12306, file: !12307, line: 321, baseType: !391, size: 16, offset: 512)
!12387 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !12306, file: !12307, line: 322, baseType: !391, size: 16, offset: 528)
!12388 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !12306, file: !12307, line: 323, baseType: !7, size: 32, offset: 544)
!12389 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !12306, file: !12307, line: 324, baseType: !223, size: 8, offset: 576)
!12390 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !12306, file: !12307, line: 325, baseType: !223, size: 8, offset: 584)
!12391 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !12306, file: !12307, line: 330, baseType: !223, size: 8, offset: 592)
!12392 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !12306, file: !12307, line: 331, baseType: !223, size: 8, offset: 600)
!12393 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !12306, file: !12307, line: 332, baseType: !223, size: 8, offset: 608)
!12394 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !12306, file: !12307, line: 333, baseType: !223, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!12395 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !12306, file: !12307, line: 334, baseType: !223, size: 8, offset: 624)
!12396 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !12306, file: !12307, line: 335, baseType: !223, size: 8, offset: 632)
!12397 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !12306, file: !12307, line: 336, baseType: !1183, size: 16, offset: 640)
!12398 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !12306, file: !12307, line: 337, baseType: !4233, size: 64, offset: 704)
!12399 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !12306, file: !12307, line: 339, baseType: !12400, size: 64, offset: 768)
!12400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12401, size: 64)
!12401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !12307, line: 858, size: 2048, elements: !12402)
!12402 = !{!12403, !12404, !12405, !12417, !12421, !12425, !12429, !12433, !12434, !12438, !12457, !12458, !12459}
!12403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12401, file: !12307, line: 859, baseType: !301, size: 128)
!12404 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12401, file: !12307, line: 860, baseType: !422, size: 64, offset: 128)
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !12401, file: !12307, line: 861, baseType: !12406, size: 64, offset: 192)
!12406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12407, size: 64)
!12407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12408)
!12408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3897, line: 38, size: 256, elements: !12409)
!12409 = !{!12410, !12411, !12412, !12413, !12414, !12415, !12416}
!12410 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !12408, file: !3897, line: 39, baseType: !187, size: 32)
!12411 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12408, file: !3897, line: 39, baseType: !187, size: 32, offset: 32)
!12412 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !12408, file: !3897, line: 40, baseType: !187, size: 32, offset: 64)
!12413 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !12408, file: !3897, line: 40, baseType: !187, size: 32, offset: 96)
!12414 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !12408, file: !3897, line: 41, baseType: !187, size: 32, offset: 128)
!12415 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !12408, file: !3897, line: 41, baseType: !187, size: 32, offset: 160)
!12416 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !12408, file: !3897, line: 42, baseType: !3914, size: 64, offset: 192)
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !12401, file: !12307, line: 862, baseType: !12418, size: 64, offset: 256)
!12418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12419, size: 64)
!12419 = !DISubroutineType(types: !12420)
!12420 = !{!109, !12305, !12406}
!12421 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !12401, file: !12307, line: 863, baseType: !12422, size: 64, offset: 320)
!12422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12423, size: 64)
!12423 = !DISubroutineType(types: !12424)
!12424 = !{null, !12305}
!12425 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !12401, file: !12307, line: 864, baseType: !12426, size: 64, offset: 384)
!12426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12427, size: 64)
!12427 = !DISubroutineType(types: !12428)
!12428 = !{!109, !12305, !3925}
!12429 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !12401, file: !12307, line: 865, baseType: !12430, size: 64, offset: 448)
!12430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12431, size: 64)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{!109, !12305}
!12433 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !12401, file: !12307, line: 866, baseType: !12422, size: 64, offset: 512)
!12434 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !12401, file: !12307, line: 867, baseType: !12435, size: 64, offset: 576)
!12435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12436, size: 64)
!12436 = !DISubroutineType(types: !12437)
!12437 = !{!109, !12305, !109}
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !12401, file: !12307, line: 868, baseType: !12439, size: 64, offset: 640)
!12439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12440, size: 64)
!12440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12441)
!12441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !12307, line: 795, size: 384, elements: !12442)
!12442 = !{!12443, !12449, !12453, !12454, !12455, !12456}
!12443 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !12441, file: !12307, line: 797, baseType: !12444, size: 64)
!12444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12445, size: 64)
!12445 = !DISubroutineType(types: !12446)
!12446 = !{!12447, !12305, !12448}
!12447 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !12307, line: 772, baseType: !7)
!12448 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !12307, line: 180, baseType: !7)
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !12441, file: !12307, line: 801, baseType: !12450, size: 64, offset: 64)
!12450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12451, size: 64)
!12451 = !DISubroutineType(types: !12452)
!12452 = !{!12447, !12305}
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !12441, file: !12307, line: 804, baseType: !12450, size: 64, offset: 128)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !12441, file: !12307, line: 807, baseType: !12422, size: 64, offset: 192)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !12441, file: !12307, line: 808, baseType: !12422, size: 64, offset: 256)
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !12441, file: !12307, line: 811, baseType: !12422, size: 64, offset: 320)
!12457 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !12401, file: !12307, line: 869, baseType: !3604, size: 64, offset: 704)
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !12401, file: !12307, line: 870, baseType: !3885, size: 1152, offset: 768)
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !12401, file: !12307, line: 871, baseType: !12460, size: 128, offset: 1920)
!12460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !12307, line: 759, size: 128, elements: !12461)
!12461 = !{!12462, !12463}
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12460, file: !12307, line: 760, baseType: !285)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12460, file: !12307, line: 761, baseType: !301, size: 128)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !12306, file: !12307, line: 340, baseType: !207, size: 64, offset: 832)
!12465 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !12306, file: !12307, line: 346, baseType: !4288, size: 128, offset: 896)
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !12306, file: !12307, line: 348, baseType: !12467, size: 32, offset: 1024)
!12467 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !12307, line: 155, baseType: !109)
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !12306, file: !12307, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !12306, file: !12307, line: 352, baseType: !223, size: 8, offset: 1064)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !12306, file: !12307, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!12471 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !12306, file: !12307, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!12472 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !12306, file: !12307, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !12306, file: !12307, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !12306, file: !12307, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !12306, file: !12307, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!12476 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !12306, file: !12307, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !12306, file: !12307, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !12306, file: !12307, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !12306, file: !12307, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !12306, file: !12307, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!12481 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !12306, file: !12307, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!12482 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !12306, file: !12307, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!12483 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !12306, file: !12307, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !12306, file: !12307, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !12306, file: !12307, line: 376, baseType: !7, size: 32, offset: 1120)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !12306, file: !12307, line: 377, baseType: !7, size: 32, offset: 1152)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !12306, file: !12307, line: 380, baseType: !12488, size: 64, offset: 1216)
!12488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12489, size: 64)
!12489 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !12307, line: 303, flags: DIFlagFwdDecl)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !12306, file: !12307, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!12491 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !12306, file: !12307, line: 383, baseType: !109, size: 32, offset: 1312)
!12492 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !12306, file: !12307, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !12306, file: !12307, line: 387, baseType: !12448, size: 32, offset: 1376)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !12306, file: !12307, line: 388, baseType: !3524, size: 5568, offset: 1408)
!12495 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !12306, file: !12307, line: 390, baseType: !109, size: 32, offset: 6976)
!12496 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !12306, file: !12307, line: 396, baseType: !7, size: 32, offset: 7008)
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !12306, file: !12307, line: 397, baseType: !12498, size: 8704, offset: 7040)
!12498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5018, size: 8704, elements: !4964)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !12306, file: !12307, line: 399, baseType: !844, size: 8, offset: 15744)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !12306, file: !12307, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !12306, file: !12307, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!12502 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !12306, file: !12307, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !12306, file: !12307, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !12306, file: !12307, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !12306, file: !12307, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !12306, file: !12307, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !12306, file: !12307, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !12306, file: !12307, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !12306, file: !12307, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !12306, file: !12307, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !12306, file: !12307, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !12306, file: !12307, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !12306, file: !12307, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !12306, file: !12307, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !12306, file: !12307, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !12306, file: !12307, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !12306, file: !12307, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !12306, file: !12307, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !12306, file: !12307, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !12306, file: !12307, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !12306, file: !12307, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !12306, file: !12307, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !12306, file: !12307, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !12306, file: !12307, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !12306, file: !12307, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !12306, file: !12307, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !12306, file: !12307, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !12306, file: !12307, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !12306, file: !12307, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !12306, file: !12307, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !12306, file: !12307, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !12306, file: !12307, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !12306, file: !12307, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !12306, file: !12307, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !12306, file: !12307, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!12536 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !12306, file: !12307, line: 450, baseType: !12537, size: 16, offset: 15792)
!12537 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !12307, line: 206, baseType: !391)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !12306, file: !12307, line: 451, baseType: !327, size: 32, offset: 15808)
!12539 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !12306, file: !12307, line: 453, baseType: !4217, size: 512, offset: 15840)
!12540 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !12306, file: !12307, line: 454, baseType: !985, size: 64, offset: 16384)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !12306, file: !12307, line: 455, baseType: !3618, size: 64, offset: 16448)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !12306, file: !12307, line: 456, baseType: !109, size: 32, offset: 16512)
!12543 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !12306, file: !12307, line: 457, baseType: !12544, size: 1088, offset: 16576)
!12544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3618, size: 1088, elements: !4964)
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !12306, file: !12307, line: 458, baseType: !12544, size: 1088, offset: 17664)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !12306, file: !12307, line: 469, baseType: !3604, size: 64, offset: 18752)
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !12306, file: !12307, line: 471, baseType: !12548, size: 64, offset: 18816)
!12548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12549, size: 64)
!12549 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !12307, line: 304, flags: DIFlagFwdDecl)
!12550 = !DIDerivedType(tag: DW_TAG_member, scope: !12306, file: !12307, line: 478, baseType: !12551, size: 64, offset: 18880)
!12551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12306, file: !12307, line: 478, size: 64, elements: !12552)
!12552 = !{!12553, !12556}
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !12551, file: !12307, line: 479, baseType: !12554, size: 64)
!12554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12555, size: 64)
!12555 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !12307, line: 305, flags: DIFlagFwdDecl)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !12551, file: !12307, line: 480, baseType: !12305, size: 64)
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !12306, file: !12307, line: 482, baseType: !1183, size: 16, offset: 18944)
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !12306, file: !12307, line: 483, baseType: !223, size: 8, offset: 18960)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !12306, file: !12307, line: 497, baseType: !1183, size: 16, offset: 18976)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !12306, file: !12307, line: 498, baseType: !2646, size: 64, offset: 19008)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !12306, file: !12307, line: 499, baseType: !574, size: 64, offset: 19072)
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !12306, file: !12307, line: 500, baseType: !181, size: 64, offset: 19136)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !12306, file: !12307, line: 502, baseType: !193, size: 64, offset: 19200)
!12564 = !DILocation(line: 3674, column: 18, scope: !12299)
!12565 = !DILocation(line: 3676, column: 11, scope: !12299)
!12566 = !DILocation(line: 3676, column: 9, scope: !12299)
!12567 = !DILocation(line: 3678, column: 6, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 3678, column: 6)
!12569 = !DILocation(line: 3678, column: 6, scope: !12299)
!12570 = !DILocation(line: 3679, column: 3, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12568, file: !3, line: 3678, column: 14)
!12572 = !DILocation(line: 3679, column: 8, scope: !12571)
!12573 = !DILocation(line: 3679, column: 14, scope: !12571)
!12574 = !DILocation(line: 3680, column: 3, scope: !12571)
!12575 = !DILocation(line: 3680, column: 8, scope: !12571)
!12576 = !DILocation(line: 3680, column: 22, scope: !12571)
!12577 = !DILocation(line: 3681, column: 3, scope: !12571)
!12578 = !DILocation(line: 3681, column: 8, scope: !12571)
!12579 = !DILocation(line: 3681, column: 20, scope: !12571)
!12580 = !DILocation(line: 3682, column: 3, scope: !12571)
!12581 = !DILocation(line: 3685, column: 11, scope: !12299)
!12582 = !DILocation(line: 3685, column: 9, scope: !12299)
!12583 = !DILocation(line: 3687, column: 6, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 3687, column: 6)
!12585 = !DILocation(line: 3687, column: 6, scope: !12299)
!12586 = !DILocation(line: 3688, column: 3, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 3687, column: 14)
!12588 = !DILocation(line: 3688, column: 8, scope: !12587)
!12589 = !DILocation(line: 3688, column: 14, scope: !12587)
!12590 = !DILocation(line: 3689, column: 3, scope: !12587)
!12591 = !DILocation(line: 3689, column: 8, scope: !12587)
!12592 = !DILocation(line: 3689, column: 22, scope: !12587)
!12593 = !DILocation(line: 3690, column: 3, scope: !12587)
!12594 = !DILocation(line: 3690, column: 8, scope: !12587)
!12595 = !DILocation(line: 3690, column: 20, scope: !12587)
!12596 = !DILocation(line: 3691, column: 3, scope: !12587)
!12597 = !DILocation(line: 3694, column: 11, scope: !12299)
!12598 = !DILocation(line: 3694, column: 9, scope: !12299)
!12599 = !DILocation(line: 3696, column: 6, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 3696, column: 6)
!12601 = !DILocation(line: 3696, column: 6, scope: !12299)
!12602 = !DILocation(line: 3697, column: 3, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 3696, column: 14)
!12604 = !DILocation(line: 3697, column: 8, scope: !12603)
!12605 = !DILocation(line: 3697, column: 14, scope: !12603)
!12606 = !DILocation(line: 3698, column: 3, scope: !12603)
!12607 = !DILocation(line: 3698, column: 8, scope: !12603)
!12608 = !DILocation(line: 3698, column: 19, scope: !12603)
!12609 = !DILocation(line: 3699, column: 3, scope: !12603)
!12610 = !DILocation(line: 3699, column: 8, scope: !12603)
!12611 = !DILocation(line: 3699, column: 22, scope: !12603)
!12612 = !DILocation(line: 3700, column: 3, scope: !12603)
!12613 = !DILocation(line: 3700, column: 8, scope: !12603)
!12614 = !DILocation(line: 3700, column: 20, scope: !12603)
!12615 = !DILocation(line: 3701, column: 3, scope: !12603)
!12616 = !DILocation(line: 3704, column: 11, scope: !12299)
!12617 = !DILocation(line: 3704, column: 9, scope: !12299)
!12618 = !DILocation(line: 3706, column: 6, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 3706, column: 6)
!12620 = !DILocation(line: 3706, column: 6, scope: !12299)
!12621 = !DILocation(line: 3707, column: 3, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12619, file: !3, line: 3706, column: 14)
!12623 = !DILocation(line: 3707, column: 8, scope: !12622)
!12624 = !DILocation(line: 3707, column: 14, scope: !12622)
!12625 = !DILocation(line: 3708, column: 3, scope: !12622)
!12626 = !DILocation(line: 3708, column: 8, scope: !12622)
!12627 = !DILocation(line: 3708, column: 19, scope: !12622)
!12628 = !DILocation(line: 3709, column: 3, scope: !12622)
!12629 = !DILocation(line: 3709, column: 8, scope: !12622)
!12630 = !DILocation(line: 3709, column: 22, scope: !12622)
!12631 = !DILocation(line: 3710, column: 3, scope: !12622)
!12632 = !DILocation(line: 3710, column: 8, scope: !12622)
!12633 = !DILocation(line: 3710, column: 20, scope: !12622)
!12634 = !DILocation(line: 3711, column: 3, scope: !12622)
!12635 = !DILocation(line: 3714, column: 11, scope: !12299)
!12636 = !DILocation(line: 3714, column: 9, scope: !12299)
!12637 = !DILocation(line: 3716, column: 6, scope: !12638)
!12638 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 3716, column: 6)
!12639 = !DILocation(line: 3716, column: 6, scope: !12299)
!12640 = !DILocation(line: 3717, column: 3, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12638, file: !3, line: 3716, column: 14)
!12642 = !DILocation(line: 3717, column: 8, scope: !12641)
!12643 = !DILocation(line: 3717, column: 14, scope: !12641)
!12644 = !DILocation(line: 3718, column: 3, scope: !12641)
!12645 = !DILocation(line: 3718, column: 8, scope: !12641)
!12646 = !DILocation(line: 3718, column: 19, scope: !12641)
!12647 = !DILocation(line: 3719, column: 3, scope: !12641)
!12648 = !DILocation(line: 3719, column: 8, scope: !12641)
!12649 = !DILocation(line: 3719, column: 22, scope: !12641)
!12650 = !DILocation(line: 3720, column: 3, scope: !12641)
!12651 = !DILocation(line: 3720, column: 8, scope: !12641)
!12652 = !DILocation(line: 3720, column: 20, scope: !12641)
!12653 = !DILocation(line: 3721, column: 3, scope: !12641)
!12654 = !DILocation(line: 3725, column: 2, scope: !12299)
!12655 = !DILocation(line: 3725, column: 7, scope: !12299)
!12656 = !DILocation(line: 3725, column: 13, scope: !12299)
!12657 = !DILocation(line: 3726, column: 2, scope: !12299)
!12658 = !DILocation(line: 3726, column: 7, scope: !12299)
!12659 = !DILocation(line: 3726, column: 21, scope: !12299)
!12660 = !DILocation(line: 3727, column: 2, scope: !12299)
!12661 = !DILocation(line: 3727, column: 7, scope: !12299)
!12662 = !DILocation(line: 3727, column: 19, scope: !12299)
!12663 = !DILabel(scope: !12299, name: "out", file: !3, line: 3729)
!12664 = !DILocation(line: 3729, column: 1, scope: !12299)
!12665 = !DILocation(line: 3730, column: 14, scope: !12299)
!12666 = !DILocation(line: 3730, column: 2, scope: !12299)
!12667 = !DILocation(line: 3732, column: 2, scope: !12299)
!12668 = !DILocation(line: 3735, column: 1, scope: !12299)
!12669 = distinct !DISubprogram(name: "sony_pic_possible_resources", scope: !3, file: !3, line: 4423, type: !4708, scopeLine: 4424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12670 = !DILocalVariable(name: "device", arg: 1, scope: !12669, file: !3, line: 4423, type: !4529)
!12671 = !DILocation(line: 4423, column: 60, scope: !12669)
!12672 = !DILocalVariable(name: "result", scope: !12669, file: !3, line: 4425, type: !109)
!12673 = !DILocation(line: 4425, column: 6, scope: !12669)
!12674 = !DILocalVariable(name: "status", scope: !12669, file: !3, line: 4426, type: !183)
!12675 = !DILocation(line: 4426, column: 14, scope: !12669)
!12676 = !DILocation(line: 4428, column: 7, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4428, column: 6)
!12678 = !DILocation(line: 4428, column: 6, scope: !12669)
!12679 = !DILocation(line: 4429, column: 3, scope: !12677)
!12680 = !DILocation(line: 4433, column: 2, scope: !12669)
!12681 = !DILocation(line: 4433, column: 2, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 4433, column: 2)
!12683 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4433, column: 2)
!12684 = !DILocation(line: 4433, column: 2, scope: !12683)
!12685 = !DILocation(line: 4434, column: 31, scope: !12669)
!12686 = !DILocation(line: 4434, column: 11, scope: !12669)
!12687 = !DILocation(line: 4434, column: 9, scope: !12669)
!12688 = !DILocation(line: 4435, column: 6, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4435, column: 6)
!12690 = !DILocation(line: 4435, column: 6, scope: !12669)
!12691 = !DILocation(line: 4436, column: 3, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12689, file: !3, line: 4435, column: 14)
!12693 = !DILocation(line: 4437, column: 3, scope: !12692)
!12694 = !DILocation(line: 4440, column: 7, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4440, column: 6)
!12696 = !DILocation(line: 4440, column: 15, scope: !12695)
!12697 = !DILocation(line: 4440, column: 22, scope: !12695)
!12698 = !DILocation(line: 4440, column: 6, scope: !12669)
!12699 = !DILocation(line: 4441, column: 3, scope: !12695)
!12700 = !DILocation(line: 4441, column: 3, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12702, file: !3, line: 4441, column: 3)
!12702 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 4441, column: 3)
!12703 = !DILocation(line: 4441, column: 3, scope: !12702)
!12704 = !DILocation(line: 4443, column: 3, scope: !12695)
!12705 = !DILocation(line: 4443, column: 3, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12707, file: !3, line: 4443, column: 3)
!12707 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 4443, column: 3)
!12708 = !DILocation(line: 4443, column: 3, scope: !12707)
!12709 = !DILocation(line: 4448, column: 2, scope: !12669)
!12710 = !DILocation(line: 4448, column: 2, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !3, line: 4448, column: 2)
!12712 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4448, column: 2)
!12713 = !DILocation(line: 4448, column: 2, scope: !12712)
!12714 = !DILocation(line: 4449, column: 31, scope: !12669)
!12715 = !DILocation(line: 4449, column: 39, scope: !12669)
!12716 = !DILocation(line: 4449, column: 11, scope: !12669)
!12717 = !DILocation(line: 4449, column: 9, scope: !12669)
!12718 = !DILocation(line: 4451, column: 6, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 4451, column: 6)
!12720 = !DILocation(line: 4451, column: 6, scope: !12669)
!12721 = !DILocation(line: 4452, column: 3, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 4451, column: 28)
!12723 = !DILocation(line: 4453, column: 10, scope: !12722)
!12724 = !DILocation(line: 4454, column: 2, scope: !12722)
!12725 = !DILabel(scope: !12669, name: "end", file: !3, line: 4455)
!12726 = !DILocation(line: 4455, column: 1, scope: !12669)
!12727 = !DILocation(line: 4456, column: 9, scope: !12669)
!12728 = !DILocation(line: 4456, column: 2, scope: !12669)
!12729 = !DILocation(line: 4457, column: 1, scope: !12669)
!12730 = distinct !DISubprogram(name: "sonypi_compat_init", scope: !3, file: !3, line: 4323, type: !5796, scopeLine: 4323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12731 = !DILocation(line: 4323, column: 39, scope: !12730)
!12732 = distinct !DISubprogram(name: "request_irq", scope: !12733, file: !12733, line: 157, type: !12734, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12733 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!12734 = !DISubroutineType(types: !12735)
!12735 = !{!109, !7, !12736, !193, !422, !177}
!12736 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !12733, line: 92, baseType: !12737)
!12737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12738, size: 64)
!12738 = !DISubroutineType(types: !12739)
!12739 = !{!12740, !109, !177}
!12740 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !171, line: 17, baseType: !170)
!12741 = !DILocalVariable(name: "irq", arg: 1, scope: !12732, file: !12733, line: 157, type: !7)
!12742 = !DILocation(line: 157, column: 26, scope: !12732)
!12743 = !DILocalVariable(name: "handler", arg: 2, scope: !12732, file: !12733, line: 157, type: !12736)
!12744 = !DILocation(line: 157, column: 45, scope: !12732)
!12745 = !DILocalVariable(name: "flags", arg: 3, scope: !12732, file: !12733, line: 157, type: !193)
!12746 = !DILocation(line: 157, column: 68, scope: !12732)
!12747 = !DILocalVariable(name: "name", arg: 4, scope: !12732, file: !12733, line: 158, type: !422)
!12748 = !DILocation(line: 158, column: 18, scope: !12732)
!12749 = !DILocalVariable(name: "dev", arg: 5, scope: !12732, file: !12733, line: 158, type: !177)
!12750 = !DILocation(line: 158, column: 30, scope: !12732)
!12751 = !DILocation(line: 160, column: 30, scope: !12732)
!12752 = !DILocation(line: 160, column: 35, scope: !12732)
!12753 = !DILocation(line: 160, column: 50, scope: !12732)
!12754 = !DILocation(line: 160, column: 57, scope: !12732)
!12755 = !DILocation(line: 160, column: 63, scope: !12732)
!12756 = !DILocation(line: 160, column: 9, scope: !12732)
!12757 = !DILocation(line: 160, column: 2, scope: !12732)
!12758 = distinct !DISubprogram(name: "sony_pic_irq", scope: !3, file: !3, line: 4586, type: !12738, scopeLine: 4587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12759 = !DILocalVariable(name: "irq", arg: 1, scope: !12758, file: !3, line: 4586, type: !109)
!12760 = !DILocation(line: 4586, column: 37, scope: !12758)
!12761 = !DILocalVariable(name: "dev_id", arg: 2, scope: !12758, file: !3, line: 4586, type: !177)
!12762 = !DILocation(line: 4586, column: 48, scope: !12758)
!12763 = !DILocalVariable(name: "i", scope: !12758, file: !3, line: 4588, type: !109)
!12764 = !DILocation(line: 4588, column: 6, scope: !12758)
!12765 = !DILocalVariable(name: "j", scope: !12758, file: !3, line: 4588, type: !109)
!12766 = !DILocation(line: 4588, column: 9, scope: !12758)
!12767 = !DILocalVariable(name: "ev", scope: !12758, file: !3, line: 4589, type: !223)
!12768 = !DILocation(line: 4589, column: 5, scope: !12758)
!12769 = !DILocalVariable(name: "data_mask", scope: !12758, file: !3, line: 4590, type: !223)
!12770 = !DILocation(line: 4590, column: 5, scope: !12758)
!12771 = !DILocalVariable(name: "device_event", scope: !12758, file: !3, line: 4591, type: !223)
!12772 = !DILocation(line: 4591, column: 5, scope: !12758)
!12773 = !DILocalVariable(name: "dev", scope: !12758, file: !3, line: 4593, type: !4525)
!12774 = !DILocation(line: 4593, column: 23, scope: !12758)
!12775 = !DILocation(line: 4593, column: 53, scope: !12758)
!12776 = !DILocation(line: 4593, column: 29, scope: !12758)
!12777 = !DILocation(line: 4595, column: 13, scope: !12758)
!12778 = !DILocation(line: 4595, column: 18, scope: !12758)
!12779 = !DILocation(line: 4595, column: 30, scope: !12758)
!12780 = !DILocation(line: 4595, column: 34, scope: !12758)
!12781 = !DILocation(line: 4595, column: 7, scope: !12758)
!12782 = !DILocation(line: 4595, column: 5, scope: !12758)
!12783 = !DILocation(line: 4596, column: 6, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 4596, column: 6)
!12785 = !DILocation(line: 4596, column: 11, scope: !12784)
!12786 = !DILocation(line: 4596, column: 23, scope: !12784)
!12787 = !DILocation(line: 4596, column: 27, scope: !12784)
!12788 = !DILocation(line: 4596, column: 6, scope: !12758)
!12789 = !DILocation(line: 4597, column: 21, scope: !12784)
!12790 = !DILocation(line: 4597, column: 26, scope: !12784)
!12791 = !DILocation(line: 4597, column: 38, scope: !12784)
!12792 = !DILocation(line: 4597, column: 42, scope: !12784)
!12793 = !DILocation(line: 4597, column: 15, scope: !12784)
!12794 = !DILocation(line: 4597, column: 13, scope: !12784)
!12795 = !DILocation(line: 4597, column: 3, scope: !12784)
!12796 = !DILocation(line: 4599, column: 21, scope: !12784)
!12797 = !DILocation(line: 4599, column: 26, scope: !12784)
!12798 = !DILocation(line: 4599, column: 38, scope: !12784)
!12799 = !DILocation(line: 4599, column: 42, scope: !12784)
!12800 = !DILocation(line: 4600, column: 5, scope: !12784)
!12801 = !DILocation(line: 4600, column: 10, scope: !12784)
!12802 = !DILocation(line: 4599, column: 50, scope: !12784)
!12803 = !DILocation(line: 4599, column: 15, scope: !12784)
!12804 = !DILocation(line: 4599, column: 13, scope: !12784)
!12805 = !DILocation(line: 4602, column: 2, scope: !12758)
!12806 = !DILocation(line: 4602, column: 2, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12808, file: !3, line: 4602, column: 2)
!12808 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 4602, column: 2)
!12809 = !DILocation(line: 4602, column: 2, scope: !12808)
!12810 = !DILocation(line: 4606, column: 6, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 4606, column: 6)
!12812 = !DILocation(line: 4606, column: 9, scope: !12811)
!12813 = !DILocation(line: 4606, column: 17, scope: !12811)
!12814 = !DILocation(line: 4606, column: 20, scope: !12811)
!12815 = !DILocation(line: 4606, column: 23, scope: !12811)
!12816 = !DILocation(line: 4606, column: 6, scope: !12758)
!12817 = !DILocation(line: 4607, column: 3, scope: !12811)
!12818 = !DILocation(line: 4609, column: 9, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 4609, column: 2)
!12820 = !DILocation(line: 4609, column: 7, scope: !12819)
!12821 = !DILocation(line: 4609, column: 14, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 4609, column: 2)
!12823 = !DILocation(line: 4609, column: 19, scope: !12822)
!12824 = !DILocation(line: 4609, column: 31, scope: !12822)
!12825 = !DILocation(line: 4609, column: 34, scope: !12822)
!12826 = !DILocation(line: 4609, column: 2, scope: !12819)
!12827 = !DILocation(line: 4611, column: 8, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 4611, column: 7)
!12829 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 4609, column: 45)
!12830 = !DILocation(line: 4611, column: 20, scope: !12828)
!12831 = !DILocation(line: 4611, column: 25, scope: !12828)
!12832 = !DILocation(line: 4611, column: 37, scope: !12828)
!12833 = !DILocation(line: 4611, column: 40, scope: !12828)
!12834 = !DILocation(line: 4611, column: 18, scope: !12828)
!12835 = !DILocation(line: 4612, column: 7, scope: !12828)
!12836 = !DILocation(line: 4612, column: 12, scope: !12828)
!12837 = !DILocation(line: 4612, column: 24, scope: !12828)
!12838 = !DILocation(line: 4612, column: 27, scope: !12828)
!12839 = !DILocation(line: 4611, column: 46, scope: !12828)
!12840 = !DILocation(line: 4611, column: 7, scope: !12829)
!12841 = !DILocation(line: 4613, column: 4, scope: !12828)
!12842 = !DILocation(line: 4615, column: 9, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 4615, column: 7)
!12844 = !DILocation(line: 4615, column: 16, scope: !12843)
!12845 = !DILocation(line: 4615, column: 21, scope: !12843)
!12846 = !DILocation(line: 4615, column: 33, scope: !12843)
!12847 = !DILocation(line: 4615, column: 36, scope: !12843)
!12848 = !DILocation(line: 4615, column: 14, scope: !12843)
!12849 = !DILocation(line: 4615, column: 7, scope: !12829)
!12850 = !DILocation(line: 4616, column: 4, scope: !12843)
!12851 = !DILocation(line: 4618, column: 10, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 4618, column: 3)
!12853 = !DILocation(line: 4618, column: 8, scope: !12852)
!12854 = !DILocation(line: 4618, column: 15, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12852, file: !3, line: 4618, column: 3)
!12856 = !DILocation(line: 4618, column: 20, scope: !12855)
!12857 = !DILocation(line: 4618, column: 32, scope: !12855)
!12858 = !DILocation(line: 4618, column: 35, scope: !12855)
!12859 = !DILocation(line: 4618, column: 42, scope: !12855)
!12860 = !DILocation(line: 4618, column: 45, scope: !12855)
!12861 = !DILocation(line: 4618, column: 3, scope: !12852)
!12862 = !DILocation(line: 4619, column: 8, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 4619, column: 8)
!12864 = distinct !DILexicalBlock(scope: !12855, file: !3, line: 4618, column: 57)
!12865 = !DILocation(line: 4619, column: 14, scope: !12863)
!12866 = !DILocation(line: 4619, column: 19, scope: !12863)
!12867 = !DILocation(line: 4619, column: 31, scope: !12863)
!12868 = !DILocation(line: 4619, column: 34, scope: !12863)
!12869 = !DILocation(line: 4619, column: 41, scope: !12863)
!12870 = !DILocation(line: 4619, column: 44, scope: !12863)
!12871 = !DILocation(line: 4619, column: 11, scope: !12863)
!12872 = !DILocation(line: 4619, column: 8, scope: !12864)
!12873 = !DILocation(line: 4621, column: 6, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 4619, column: 50)
!12875 = !DILocation(line: 4621, column: 11, scope: !12874)
!12876 = !DILocation(line: 4621, column: 23, scope: !12874)
!12877 = !DILocation(line: 4621, column: 26, scope: !12874)
!12878 = !DILocation(line: 4621, column: 33, scope: !12874)
!12879 = !DILocation(line: 4621, column: 36, scope: !12874)
!12880 = !DILocation(line: 4620, column: 18, scope: !12874)
!12881 = !DILocation(line: 4623, column: 10, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 4623, column: 9)
!12883 = !DILocation(line: 4623, column: 9, scope: !12874)
!12884 = !DILocation(line: 4624, column: 6, scope: !12882)
!12885 = !DILocation(line: 4625, column: 5, scope: !12874)
!12886 = !DILocation(line: 4627, column: 3, scope: !12864)
!12887 = !DILocation(line: 4618, column: 53, scope: !12855)
!12888 = !DILocation(line: 4618, column: 3, scope: !12855)
!12889 = distinct !{!12889, !12861, !12890}
!12890 = !DILocation(line: 4627, column: 3, scope: !12852)
!12891 = !DILocation(line: 4628, column: 2, scope: !12829)
!12892 = !DILocation(line: 4609, column: 41, scope: !12822)
!12893 = !DILocation(line: 4609, column: 2, scope: !12822)
!12894 = distinct !{!12894, !12826, !12895}
!12895 = !DILocation(line: 4628, column: 2, scope: !12819)
!12896 = !DILocation(line: 4632, column: 6, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 4632, column: 6)
!12898 = !DILocation(line: 4632, column: 11, scope: !12897)
!12899 = !DILocation(line: 4632, column: 22, scope: !12897)
!12900 = !DILocation(line: 4632, column: 25, scope: !12897)
!12901 = !DILocation(line: 4632, column: 30, scope: !12897)
!12902 = !DILocation(line: 4632, column: 41, scope: !12897)
!12903 = !DILocation(line: 4632, column: 52, scope: !12897)
!12904 = !DILocation(line: 4632, column: 56, scope: !12897)
!12905 = !DILocation(line: 4632, column: 6, scope: !12758)
!12906 = !DILocation(line: 4633, column: 3, scope: !12897)
!12907 = !DILocation(line: 4635, column: 2, scope: !12758)
!12908 = !DILocation(line: 4635, column: 2, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 4635, column: 2)
!12910 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 4635, column: 2)
!12911 = !DILocation(line: 4635, column: 2, scope: !12910)
!12912 = !DILocation(line: 4638, column: 2, scope: !12758)
!12913 = !DILabel(scope: !12758, name: "found", file: !3, line: 4640)
!12914 = !DILocation(line: 4640, column: 1, scope: !12758)
!12915 = !DILocation(line: 4641, column: 33, scope: !12758)
!12916 = !DILocation(line: 4641, column: 2, scope: !12758)
!12917 = !DILocation(line: 4642, column: 29, scope: !12758)
!12918 = !DILocation(line: 4642, column: 2, scope: !12758)
!12919 = !DILocation(line: 4643, column: 2, scope: !12758)
!12920 = !DILocation(line: 4644, column: 1, scope: !12758)
!12921 = distinct !DISubprogram(name: "sony_pic_enable", scope: !3, file: !3, line: 4480, type: !12922, scopeLine: 4482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!12922 = !DISubroutineType(types: !12923)
!12923 = !{!109, !4529, !4496, !4510}
!12924 = !DILocalVariable(name: "device", arg: 1, scope: !12921, file: !3, line: 4480, type: !4529)
!12925 = !DILocation(line: 4480, column: 48, scope: !12921)
!12926 = !DILocalVariable(name: "ioport", arg: 2, scope: !12921, file: !3, line: 4481, type: !4496)
!12927 = !DILocation(line: 4481, column: 27, scope: !12921)
!12928 = !DILocalVariable(name: "irq", arg: 3, scope: !12921, file: !3, line: 4481, type: !4510)
!12929 = !DILocation(line: 4481, column: 56, scope: !12921)
!12930 = !DILocalVariable(name: "status", scope: !12921, file: !3, line: 4483, type: !183)
!12931 = !DILocation(line: 4483, column: 14, scope: !12921)
!12932 = !DILocalVariable(name: "result", scope: !12921, file: !3, line: 4484, type: !109)
!12933 = !DILocation(line: 4484, column: 6, scope: !12921)
!12934 = !DILocalVariable(name: "resource", scope: !12921, file: !3, line: 4501, type: !12935)
!12935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12936, size: 64)
!12936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12921, file: !3, line: 4496, size: 2176, elements: !12937)
!12937 = !{!12938, !13282, !13283, !13284}
!12938 = !DIDerivedType(tag: DW_TAG_member, name: "res1", scope: !12936, file: !3, line: 4497, baseType: !12939, size: 544)
!12939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource", file: !4501, line: 651, size: 544, elements: !12940)
!12940 = !{!12941, !12942, !12943}
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12939, file: !4501, line: 652, baseType: !185, size: 32)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12939, file: !4501, line: 653, baseType: !185, size: 32, offset: 32)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12939, file: !4501, line: 654, baseType: !12944, size: 480, offset: 64)
!12944 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_data", file: !4501, line: 614, size: 480, elements: !12945)
!12945 = !{!12946, !12947, !12955, !12961, !12962, !12967, !12973, !12978, !12986, !12990, !12998, !13006, !13012, !13052, !13070, !13088, !13100, !13112, !13120, !13140, !13156, !13176, !13198, !13211, !13223, !13236, !13250, !13261, !13273}
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !12944, file: !4501, line: 615, baseType: !4514, size: 56)
!12947 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !12944, file: !4501, line: 616, baseType: !12948, size: 40)
!12948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_dma", file: !4501, line: 148, size: 40, elements: !12949)
!12949 = !{!12950, !12951, !12952, !12953, !12954}
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12948, file: !4501, line: 149, baseType: !223, size: 8)
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "bus_master", scope: !12948, file: !4501, line: 150, baseType: !223, size: 8, offset: 8)
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !12948, file: !4501, line: 151, baseType: !223, size: 8, offset: 16)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "channel_count", scope: !12948, file: !4501, line: 152, baseType: !223, size: 8, offset: 24)
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !12948, file: !4501, line: 153, baseType: !4523, size: 8, offset: 32)
!12955 = !DIDerivedType(tag: DW_TAG_member, name: "start_dpf", scope: !12944, file: !4501, line: 617, baseType: !12956, size: 24)
!12956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_start_dependent", file: !4501, line: 156, size: 24, elements: !12957)
!12957 = !{!12958, !12959, !12960}
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !12956, file: !4501, line: 157, baseType: !223, size: 8)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility_priority", scope: !12956, file: !4501, line: 158, baseType: !223, size: 8, offset: 8)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "performance_robustness", scope: !12956, file: !4501, line: 159, baseType: !223, size: 8, offset: 16)
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !12944, file: !4501, line: 618, baseType: !4500, size: 56)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_io", scope: !12944, file: !4501, line: 619, baseType: !12963, size: 24)
!12963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_io", file: !4501, line: 175, size: 24, elements: !12964)
!12964 = !{!12965, !12966}
!12965 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !12963, file: !4501, line: 176, baseType: !1183, size: 16)
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !12963, file: !4501, line: 177, baseType: !223, size: 8, offset: 16)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_dma", scope: !12944, file: !4501, line: 620, baseType: !12968, size: 40)
!12968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_dma", file: !4501, line: 180, size: 40, elements: !12969)
!12969 = !{!12970, !12971, !12972}
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "request_lines", scope: !12968, file: !4501, line: 181, baseType: !1183, size: 16)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !12968, file: !4501, line: 182, baseType: !1183, size: 16, offset: 16)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !12968, file: !4501, line: 183, baseType: !223, size: 8, offset: 32)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !12944, file: !4501, line: 621, baseType: !12974, size: 24)
!12974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor", file: !4501, line: 195, size: 24, elements: !12975)
!12975 = !{!12976, !12977}
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !12974, file: !4501, line: 196, baseType: !1183, size: 16)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !12974, file: !4501, line: 197, baseType: !4523, size: 8, offset: 16)
!12978 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_typed", scope: !12944, file: !4501, line: 622, baseType: !12979, size: 160)
!12979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor_typed", file: !4501, line: 202, size: 160, elements: !12980)
!12980 = !{!12981, !12982, !12983, !12985}
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !12979, file: !4501, line: 203, baseType: !1183, size: 16)
!12982 = !DIDerivedType(tag: DW_TAG_member, name: "uuid_subtype", scope: !12979, file: !4501, line: 204, baseType: !223, size: 8, offset: 16)
!12983 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !12979, file: !4501, line: 205, baseType: !12984, size: 128, offset: 24)
!12984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 128, elements: !382)
!12985 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !12979, file: !4501, line: 206, baseType: !4523, size: 8, offset: 152)
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "end_tag", scope: !12944, file: !4501, line: 623, baseType: !12987, size: 8)
!12987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_end_tag", file: !4501, line: 209, size: 8, elements: !12988)
!12988 = !{!12989}
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !12987, file: !4501, line: 210, baseType: !223, size: 8)
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "memory24", scope: !12944, file: !4501, line: 624, baseType: !12991, size: 72)
!12991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory24", file: !4501, line: 213, size: 72, elements: !12992)
!12992 = !{!12993, !12994, !12995, !12996, !12997}
!12993 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !12991, file: !4501, line: 214, baseType: !223, size: 8)
!12994 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !12991, file: !4501, line: 215, baseType: !1183, size: 16, offset: 8)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !12991, file: !4501, line: 216, baseType: !1183, size: 16, offset: 24)
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !12991, file: !4501, line: 217, baseType: !1183, size: 16, offset: 40)
!12997 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !12991, file: !4501, line: 218, baseType: !1183, size: 16, offset: 56)
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "memory32", scope: !12944, file: !4501, line: 625, baseType: !12999, size: 136)
!12999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory32", file: !4501, line: 221, size: 136, elements: !13000)
!13000 = !{!13001, !13002, !13003, !13004, !13005}
!13001 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !12999, file: !4501, line: 222, baseType: !223, size: 8)
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !12999, file: !4501, line: 223, baseType: !185, size: 32, offset: 8)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !12999, file: !4501, line: 224, baseType: !185, size: 32, offset: 40)
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !12999, file: !4501, line: 225, baseType: !185, size: 32, offset: 72)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !12999, file: !4501, line: 226, baseType: !185, size: 32, offset: 104)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_memory32", scope: !12944, file: !4501, line: 626, baseType: !13007, size: 72)
!13007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_memory32", file: !4501, line: 229, size: 72, elements: !13008)
!13008 = !{!13009, !13010, !13011}
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !13007, file: !4501, line: 230, baseType: !223, size: 8)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !13007, file: !4501, line: 231, baseType: !185, size: 32, offset: 8)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !13007, file: !4501, line: 232, baseType: !185, size: 32, offset: 40)
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "address16", scope: !12944, file: !4501, line: 627, baseType: !13013, size: 240)
!13013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address16", file: !4501, line: 306, size: 240, elements: !13014)
!13014 = !{!13015, !13016, !13017, !13018, !13019, !13020, !13038, !13046}
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !13013, file: !4501, line: 307, baseType: !223, size: 8)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13013, file: !4501, line: 307, baseType: !223, size: 8, offset: 8)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !13013, file: !4501, line: 307, baseType: !223, size: 8, offset: 16)
!13018 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !13013, file: !4501, line: 307, baseType: !223, size: 8, offset: 24)
!13019 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !13013, file: !4501, line: 307, baseType: !223, size: 8, offset: 32)
!13020 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !13013, file: !4501, line: 307, baseType: !13021, size: 32, offset: 40)
!13021 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_attribute", file: !4501, line: 249, size: 32, elements: !13022)
!13022 = !{!13023, !13030, !13037}
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !13021, file: !4501, line: 250, baseType: !13024, size: 32)
!13024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_memory_attribute", file: !4501, line: 235, size: 32, elements: !13025)
!13025 = !{!13026, !13027, !13028, !13029}
!13026 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !13024, file: !4501, line: 236, baseType: !223, size: 8)
!13027 = !DIDerivedType(tag: DW_TAG_member, name: "caching", scope: !13024, file: !4501, line: 237, baseType: !223, size: 8, offset: 8)
!13028 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !13024, file: !4501, line: 238, baseType: !223, size: 8, offset: 16)
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !13024, file: !4501, line: 239, baseType: !223, size: 8, offset: 24)
!13030 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !13021, file: !4501, line: 251, baseType: !13031, size: 32)
!13031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_io_attribute", file: !4501, line: 242, size: 32, elements: !13032)
!13032 = !{!13033, !13034, !13035, !13036}
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !13031, file: !4501, line: 243, baseType: !223, size: 8)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !13031, file: !4501, line: 244, baseType: !223, size: 8, offset: 8)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "translation_type", scope: !13031, file: !4501, line: 245, baseType: !223, size: 8, offset: 16)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !13031, file: !4501, line: 246, baseType: !223, size: 8, offset: 24)
!13037 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !13021, file: !4501, line: 255, baseType: !223, size: 8)
!13038 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !13013, file: !4501, line: 307, baseType: !13039, size: 80, offset: 72)
!13039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address16_attribute", file: !4501, line: 279, size: 80, elements: !13040)
!13040 = !{!13041, !13042, !13043, !13044, !13045}
!13041 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !13039, file: !4501, line: 280, baseType: !1183, size: 16)
!13042 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !13039, file: !4501, line: 281, baseType: !1183, size: 16, offset: 16)
!13043 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !13039, file: !4501, line: 282, baseType: !1183, size: 16, offset: 32)
!13044 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !13039, file: !4501, line: 283, baseType: !1183, size: 16, offset: 48)
!13045 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !13039, file: !4501, line: 284, baseType: !1183, size: 16, offset: 64)
!13046 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13013, file: !4501, line: 308, baseType: !13047, size: 88, offset: 152)
!13047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_source", file: !4501, line: 263, size: 88, elements: !13048)
!13048 = !{!13049, !13050, !13051}
!13049 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !13047, file: !4501, line: 264, baseType: !223, size: 8)
!13050 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !13047, file: !4501, line: 265, baseType: !1183, size: 16, offset: 8)
!13051 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !13047, file: !4501, line: 266, baseType: !181, size: 64, offset: 24)
!13052 = !DIDerivedType(tag: DW_TAG_member, name: "address32", scope: !12944, file: !4501, line: 628, baseType: !13053, size: 320)
!13053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address32", file: !4501, line: 311, size: 320, elements: !13054)
!13054 = !{!13055, !13056, !13057, !13058, !13059, !13060, !13061, !13069}
!13055 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !13053, file: !4501, line: 312, baseType: !223, size: 8)
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13053, file: !4501, line: 312, baseType: !223, size: 8, offset: 8)
!13057 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !13053, file: !4501, line: 312, baseType: !223, size: 8, offset: 16)
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !13053, file: !4501, line: 312, baseType: !223, size: 8, offset: 24)
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !13053, file: !4501, line: 312, baseType: !223, size: 8, offset: 32)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !13053, file: !4501, line: 312, baseType: !13021, size: 32, offset: 40)
!13061 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !13053, file: !4501, line: 312, baseType: !13062, size: 160, offset: 72)
!13062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address32_attribute", file: !4501, line: 287, size: 160, elements: !13063)
!13063 = !{!13064, !13065, !13066, !13067, !13068}
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !13062, file: !4501, line: 288, baseType: !185, size: 32)
!13065 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !13062, file: !4501, line: 289, baseType: !185, size: 32, offset: 32)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !13062, file: !4501, line: 290, baseType: !185, size: 32, offset: 64)
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !13062, file: !4501, line: 291, baseType: !185, size: 32, offset: 96)
!13068 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !13062, file: !4501, line: 292, baseType: !185, size: 32, offset: 128)
!13069 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13053, file: !4501, line: 313, baseType: !13047, size: 88, offset: 232)
!13070 = !DIDerivedType(tag: DW_TAG_member, name: "address64", scope: !12944, file: !4501, line: 629, baseType: !13071, size: 480)
!13071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address64", file: !4501, line: 316, size: 480, elements: !13072)
!13072 = !{!13073, !13074, !13075, !13076, !13077, !13078, !13079, !13087}
!13073 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !13071, file: !4501, line: 317, baseType: !223, size: 8)
!13074 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13071, file: !4501, line: 317, baseType: !223, size: 8, offset: 8)
!13075 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !13071, file: !4501, line: 317, baseType: !223, size: 8, offset: 16)
!13076 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !13071, file: !4501, line: 317, baseType: !223, size: 8, offset: 24)
!13077 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !13071, file: !4501, line: 317, baseType: !223, size: 8, offset: 32)
!13078 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !13071, file: !4501, line: 317, baseType: !13021, size: 32, offset: 40)
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !13071, file: !4501, line: 317, baseType: !13080, size: 320, offset: 72)
!13080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address64_attribute", file: !4501, line: 295, size: 320, elements: !13081)
!13081 = !{!13082, !13083, !13084, !13085, !13086}
!13082 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !13080, file: !4501, line: 296, baseType: !207, size: 64)
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !13080, file: !4501, line: 297, baseType: !207, size: 64, offset: 64)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !13080, file: !4501, line: 298, baseType: !207, size: 64, offset: 128)
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !13080, file: !4501, line: 299, baseType: !207, size: 64, offset: 192)
!13086 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !13080, file: !4501, line: 300, baseType: !207, size: 64, offset: 256)
!13087 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13071, file: !4501, line: 318, baseType: !13047, size: 88, offset: 392)
!13088 = !DIDerivedType(tag: DW_TAG_member, name: "ext_address64", scope: !12944, file: !4501, line: 630, baseType: !13089, size: 464)
!13089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_address64", file: !4501, line: 321, size: 464, elements: !13090)
!13090 = !{!13091, !13092, !13093, !13094, !13095, !13096, !13097, !13098, !13099}
!13091 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !13089, file: !4501, line: 322, baseType: !223, size: 8)
!13092 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13089, file: !4501, line: 322, baseType: !223, size: 8, offset: 8)
!13093 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !13089, file: !4501, line: 322, baseType: !223, size: 8, offset: 16)
!13094 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !13089, file: !4501, line: 322, baseType: !223, size: 8, offset: 24)
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !13089, file: !4501, line: 322, baseType: !223, size: 8, offset: 32)
!13096 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !13089, file: !4501, line: 322, baseType: !13021, size: 32, offset: 40)
!13097 = !DIDerivedType(tag: DW_TAG_member, name: "revision_ID", scope: !13089, file: !4501, line: 322, baseType: !223, size: 8, offset: 72)
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !13089, file: !4501, line: 323, baseType: !13080, size: 320, offset: 80)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !13089, file: !4501, line: 324, baseType: !207, size: 64, offset: 400)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "extended_irq", scope: !12944, file: !4501, line: 631, baseType: !13101, size: 168)
!13101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_irq", file: !4501, line: 327, size: 168, elements: !13102)
!13102 = !{!13103, !13104, !13105, !13106, !13107, !13108, !13109, !13110}
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13101, file: !4501, line: 328, baseType: !223, size: 8)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !13101, file: !4501, line: 329, baseType: !223, size: 8, offset: 8)
!13105 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !13101, file: !4501, line: 330, baseType: !223, size: 8, offset: 16)
!13106 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !13101, file: !4501, line: 331, baseType: !223, size: 8, offset: 24)
!13107 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !13101, file: !4501, line: 332, baseType: !223, size: 8, offset: 32)
!13108 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !13101, file: !4501, line: 333, baseType: !223, size: 8, offset: 40)
!13109 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13101, file: !4501, line: 334, baseType: !13047, size: 88, offset: 48)
!13110 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !13101, file: !4501, line: 335, baseType: !13111, size: 32, offset: 136)
!13111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 32, elements: !1865)
!13112 = !DIDerivedType(tag: DW_TAG_member, name: "generic_reg", scope: !12944, file: !4501, line: 632, baseType: !13113, size: 96)
!13113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_generic_register", file: !4501, line: 338, size: 96, elements: !13114)
!13114 = !{!13115, !13116, !13117, !13118, !13119}
!13115 = !DIDerivedType(tag: DW_TAG_member, name: "space_id", scope: !13113, file: !4501, line: 339, baseType: !223, size: 8)
!13116 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width", scope: !13113, file: !4501, line: 340, baseType: !223, size: 8, offset: 8)
!13117 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !13113, file: !4501, line: 341, baseType: !223, size: 8, offset: 16)
!13118 = !DIDerivedType(tag: DW_TAG_member, name: "access_size", scope: !13113, file: !4501, line: 342, baseType: !223, size: 8, offset: 24)
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !13113, file: !4501, line: 343, baseType: !207, size: 64, offset: 32)
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "gpio", scope: !12944, file: !4501, line: 633, baseType: !13121, size: 352)
!13121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_gpio", file: !4501, line: 346, size: 352, elements: !13122)
!13122 = !{!13123, !13124, !13125, !13126, !13127, !13128, !13129, !13130, !13131, !13132, !13133, !13134, !13135, !13136, !13137, !13139}
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13121, file: !4501, line: 347, baseType: !223, size: 8)
!13124 = !DIDerivedType(tag: DW_TAG_member, name: "connection_type", scope: !13121, file: !4501, line: 348, baseType: !223, size: 8, offset: 8)
!13125 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13121, file: !4501, line: 349, baseType: !223, size: 8, offset: 16)
!13126 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !13121, file: !4501, line: 350, baseType: !223, size: 8, offset: 24)
!13127 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !13121, file: !4501, line: 351, baseType: !223, size: 8, offset: 32)
!13128 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !13121, file: !4501, line: 352, baseType: !223, size: 8, offset: 40)
!13129 = !DIDerivedType(tag: DW_TAG_member, name: "io_restriction", scope: !13121, file: !4501, line: 353, baseType: !223, size: 8, offset: 48)
!13130 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !13121, file: !4501, line: 354, baseType: !223, size: 8, offset: 56)
!13131 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !13121, file: !4501, line: 355, baseType: !223, size: 8, offset: 64)
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !13121, file: !4501, line: 356, baseType: !1183, size: 16, offset: 72)
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_timeout", scope: !13121, file: !4501, line: 357, baseType: !1183, size: 16, offset: 88)
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !13121, file: !4501, line: 358, baseType: !1183, size: 16, offset: 104)
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13121, file: !4501, line: 359, baseType: !1183, size: 16, offset: 120)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13121, file: !4501, line: 360, baseType: !13047, size: 88, offset: 136)
!13137 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !13121, file: !4501, line: 361, baseType: !13138, size: 64, offset: 224)
!13138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13121, file: !4501, line: 362, baseType: !222, size: 64, offset: 288)
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_serial_bus", scope: !12944, file: !4501, line: 634, baseType: !13141, size: 288)
!13141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_i2c_serialbus", file: !4501, line: 412, size: 288, elements: !13142)
!13142 = !{!13143, !13144, !13145, !13146, !13147, !13148, !13149, !13150, !13151, !13152, !13153, !13154, !13155}
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8)
!13144 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8, offset: 8)
!13145 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8, offset: 16)
!13146 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8, offset: 24)
!13147 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8, offset: 32)
!13148 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8, offset: 40)
!13149 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !13141, file: !4501, line: 413, baseType: !1183, size: 16, offset: 48)
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13141, file: !4501, line: 413, baseType: !1183, size: 16, offset: 64)
!13151 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13141, file: !4501, line: 413, baseType: !13047, size: 88, offset: 80)
!13152 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13141, file: !4501, line: 413, baseType: !222, size: 64, offset: 168)
!13153 = !DIDerivedType(tag: DW_TAG_member, name: "access_mode", scope: !13141, file: !4501, line: 413, baseType: !223, size: 8, offset: 232)
!13154 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !13141, file: !4501, line: 414, baseType: !1183, size: 16, offset: 240)
!13155 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !13141, file: !4501, line: 415, baseType: !185, size: 32, offset: 256)
!13156 = !DIDerivedType(tag: DW_TAG_member, name: "spi_serial_bus", scope: !12944, file: !4501, line: 635, baseType: !13157, size: 320)
!13157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_spi_serialbus", file: !4501, line: 423, size: 320, elements: !13158)
!13158 = !{!13159, !13160, !13161, !13162, !13163, !13164, !13165, !13166, !13167, !13168, !13169, !13170, !13171, !13172, !13173, !13174, !13175}
!13159 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8)
!13160 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8, offset: 8)
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8, offset: 16)
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8, offset: 24)
!13163 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8, offset: 32)
!13164 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8, offset: 40)
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !13157, file: !4501, line: 424, baseType: !1183, size: 16, offset: 48)
!13166 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13157, file: !4501, line: 424, baseType: !1183, size: 16, offset: 64)
!13167 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13157, file: !4501, line: 424, baseType: !13047, size: 88, offset: 80)
!13168 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13157, file: !4501, line: 424, baseType: !222, size: 64, offset: 168)
!13169 = !DIDerivedType(tag: DW_TAG_member, name: "wire_mode", scope: !13157, file: !4501, line: 424, baseType: !223, size: 8, offset: 232)
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "device_polarity", scope: !13157, file: !4501, line: 425, baseType: !223, size: 8, offset: 240)
!13171 = !DIDerivedType(tag: DW_TAG_member, name: "data_bit_length", scope: !13157, file: !4501, line: 426, baseType: !223, size: 8, offset: 248)
!13172 = !DIDerivedType(tag: DW_TAG_member, name: "clock_phase", scope: !13157, file: !4501, line: 427, baseType: !223, size: 8, offset: 256)
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "clock_polarity", scope: !13157, file: !4501, line: 428, baseType: !223, size: 8, offset: 264)
!13174 = !DIDerivedType(tag: DW_TAG_member, name: "device_selection", scope: !13157, file: !4501, line: 429, baseType: !1183, size: 16, offset: 272)
!13175 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !13157, file: !4501, line: 430, baseType: !185, size: 32, offset: 288)
!13176 = !DIDerivedType(tag: DW_TAG_member, name: "uart_serial_bus", scope: !12944, file: !4501, line: 636, baseType: !13177, size: 344)
!13177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_uart_serialbus", file: !4501, line: 453, size: 344, elements: !13178)
!13178 = !{!13179, !13180, !13181, !13182, !13183, !13184, !13185, !13186, !13187, !13188, !13189, !13190, !13191, !13192, !13193, !13194, !13195, !13196, !13197}
!13179 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8)
!13180 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8, offset: 8)
!13181 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8, offset: 16)
!13182 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8, offset: 24)
!13183 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8, offset: 32)
!13184 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8, offset: 40)
!13185 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !13177, file: !4501, line: 454, baseType: !1183, size: 16, offset: 48)
!13186 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13177, file: !4501, line: 454, baseType: !1183, size: 16, offset: 64)
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13177, file: !4501, line: 454, baseType: !13047, size: 88, offset: 80)
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13177, file: !4501, line: 454, baseType: !222, size: 64, offset: 168)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !13177, file: !4501, line: 454, baseType: !223, size: 8, offset: 232)
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !13177, file: !4501, line: 455, baseType: !223, size: 8, offset: 240)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !13177, file: !4501, line: 456, baseType: !223, size: 8, offset: 248)
!13192 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !13177, file: !4501, line: 457, baseType: !223, size: 8, offset: 256)
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !13177, file: !4501, line: 458, baseType: !223, size: 8, offset: 264)
!13194 = !DIDerivedType(tag: DW_TAG_member, name: "lines_enabled", scope: !13177, file: !4501, line: 459, baseType: !223, size: 8, offset: 272)
!13195 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_size", scope: !13177, file: !4501, line: 460, baseType: !1183, size: 16, offset: 280)
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_size", scope: !13177, file: !4501, line: 461, baseType: !1183, size: 16, offset: 296)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "default_baud_rate", scope: !13177, file: !4501, line: 462, baseType: !185, size: 32, offset: 312)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "common_serial_bus", scope: !12944, file: !4501, line: 637, baseType: !13199, size: 232)
!13199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_common_serialbus", file: !4501, line: 398, size: 232, elements: !13200)
!13200 = !{!13201, !13202, !13203, !13204, !13205, !13206, !13207, !13208, !13209, !13210}
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13199, file: !4501, line: 399, baseType: !223, size: 8)
!13202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13199, file: !4501, line: 399, baseType: !223, size: 8, offset: 8)
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13199, file: !4501, line: 399, baseType: !223, size: 8, offset: 16)
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !13199, file: !4501, line: 399, baseType: !223, size: 8, offset: 24)
!13205 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !13199, file: !4501, line: 399, baseType: !223, size: 8, offset: 32)
!13206 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !13199, file: !4501, line: 399, baseType: !223, size: 8, offset: 40)
!13207 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !13199, file: !4501, line: 399, baseType: !1183, size: 16, offset: 48)
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13199, file: !4501, line: 399, baseType: !1183, size: 16, offset: 64)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13199, file: !4501, line: 399, baseType: !13047, size: 88, offset: 80)
!13210 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13199, file: !4501, line: 399, baseType: !222, size: 64, offset: 168)
!13211 = !DIDerivedType(tag: DW_TAG_member, name: "pin_function", scope: !12944, file: !4501, line: 638, baseType: !13212, size: 288)
!13212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_function", file: !4501, line: 508, size: 288, elements: !13213)
!13213 = !{!13214, !13215, !13216, !13217, !13218, !13219, !13220, !13221, !13222}
!13214 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13212, file: !4501, line: 509, baseType: !223, size: 8)
!13215 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !13212, file: !4501, line: 510, baseType: !223, size: 8, offset: 8)
!13216 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !13212, file: !4501, line: 511, baseType: !223, size: 8, offset: 16)
!13217 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !13212, file: !4501, line: 512, baseType: !1183, size: 16, offset: 24)
!13218 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !13212, file: !4501, line: 513, baseType: !1183, size: 16, offset: 40)
!13219 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13212, file: !4501, line: 514, baseType: !1183, size: 16, offset: 56)
!13220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13212, file: !4501, line: 515, baseType: !13047, size: 88, offset: 72)
!13221 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !13212, file: !4501, line: 516, baseType: !13138, size: 64, offset: 160)
!13222 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13212, file: !4501, line: 517, baseType: !222, size: 64, offset: 224)
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !12944, file: !4501, line: 639, baseType: !13224, size: 312)
!13224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_config", file: !4501, line: 520, size: 312, elements: !13225)
!13225 = !{!13226, !13227, !13228, !13229, !13230, !13231, !13232, !13233, !13234, !13235}
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13224, file: !4501, line: 521, baseType: !223, size: 8)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13224, file: !4501, line: 522, baseType: !223, size: 8, offset: 8)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !13224, file: !4501, line: 523, baseType: !223, size: 8, offset: 16)
!13229 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !13224, file: !4501, line: 524, baseType: !223, size: 8, offset: 24)
!13230 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !13224, file: !4501, line: 525, baseType: !185, size: 32, offset: 32)
!13231 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !13224, file: !4501, line: 526, baseType: !1183, size: 16, offset: 64)
!13232 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13224, file: !4501, line: 527, baseType: !1183, size: 16, offset: 80)
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13224, file: !4501, line: 528, baseType: !13047, size: 88, offset: 96)
!13234 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !13224, file: !4501, line: 529, baseType: !13138, size: 64, offset: 184)
!13235 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13224, file: !4501, line: 530, baseType: !222, size: 64, offset: 248)
!13236 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group", scope: !12944, file: !4501, line: 640, baseType: !13237, size: 256)
!13237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group", file: !4501, line: 550, size: 256, elements: !13238)
!13238 = !{!13239, !13240, !13241, !13242, !13243, !13244, !13249}
!13239 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13237, file: !4501, line: 551, baseType: !223, size: 8)
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13237, file: !4501, line: 552, baseType: !223, size: 8, offset: 8)
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !13237, file: !4501, line: 553, baseType: !1183, size: 16, offset: 16)
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13237, file: !4501, line: 554, baseType: !1183, size: 16, offset: 32)
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !13237, file: !4501, line: 555, baseType: !13138, size: 64, offset: 48)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "resource_label", scope: !13237, file: !4501, line: 556, baseType: !13245, size: 80, offset: 112)
!13245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_label", file: !4501, line: 258, size: 80, elements: !13246)
!13246 = !{!13247, !13248}
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !13245, file: !4501, line: 259, baseType: !1183, size: 16)
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !13245, file: !4501, line: 260, baseType: !181, size: 64, offset: 16)
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13237, file: !4501, line: 557, baseType: !222, size: 64, offset: 192)
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_function", scope: !12944, file: !4501, line: 641, baseType: !13251, size: 288)
!13251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_function", file: !4501, line: 560, size: 288, elements: !13252)
!13252 = !{!13253, !13254, !13255, !13256, !13257, !13258, !13259, !13260}
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13251, file: !4501, line: 561, baseType: !223, size: 8)
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13251, file: !4501, line: 562, baseType: !223, size: 8, offset: 8)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !13251, file: !4501, line: 563, baseType: !223, size: 8, offset: 16)
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !13251, file: !4501, line: 564, baseType: !1183, size: 16, offset: 24)
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13251, file: !4501, line: 565, baseType: !1183, size: 16, offset: 40)
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13251, file: !4501, line: 566, baseType: !13047, size: 88, offset: 56)
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !13251, file: !4501, line: 567, baseType: !13245, size: 80, offset: 144)
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13251, file: !4501, line: 568, baseType: !222, size: 64, offset: 224)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_config", scope: !12944, file: !4501, line: 642, baseType: !13262, size: 312)
!13262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_config", file: !4501, line: 571, size: 312, elements: !13263)
!13263 = !{!13264, !13265, !13266, !13267, !13268, !13269, !13270, !13271, !13272}
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !13262, file: !4501, line: 572, baseType: !223, size: 8)
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13262, file: !4501, line: 573, baseType: !223, size: 8, offset: 8)
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !13262, file: !4501, line: 574, baseType: !223, size: 8, offset: 16)
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !13262, file: !4501, line: 575, baseType: !223, size: 8, offset: 24)
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !13262, file: !4501, line: 576, baseType: !185, size: 32, offset: 32)
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !13262, file: !4501, line: 577, baseType: !1183, size: 16, offset: 64)
!13270 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !13262, file: !4501, line: 578, baseType: !13047, size: 88, offset: 80)
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !13262, file: !4501, line: 579, baseType: !13245, size: 80, offset: 168)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !13262, file: !4501, line: 580, baseType: !222, size: 64, offset: 248)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !12944, file: !4501, line: 646, baseType: !13274, size: 72)
!13274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address", file: !4501, line: 303, size: 72, elements: !13275)
!13275 = !{!13276, !13277, !13278, !13279, !13280, !13281}
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !13274, file: !4501, line: 304, baseType: !223, size: 8)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !13274, file: !4501, line: 304, baseType: !223, size: 8, offset: 8)
!13278 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !13274, file: !4501, line: 304, baseType: !223, size: 8, offset: 16)
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !13274, file: !4501, line: 304, baseType: !223, size: 8, offset: 24)
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !13274, file: !4501, line: 304, baseType: !223, size: 8, offset: 32)
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !13274, file: !4501, line: 304, baseType: !13021, size: 32, offset: 40)
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "res2", scope: !12936, file: !3, line: 4498, baseType: !12939, size: 544, offset: 544)
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "res3", scope: !12936, file: !3, line: 4499, baseType: !12939, size: 544, offset: 1088)
!13284 = !DIDerivedType(tag: DW_TAG_member, name: "res4", scope: !12936, file: !3, line: 4500, baseType: !12939, size: 544, offset: 1632)
!13285 = !DILocation(line: 4501, column: 5, scope: !12921)
!13286 = !DILocalVariable(name: "buffer", scope: !12921, file: !3, line: 4502, type: !8031)
!13287 = !DILocation(line: 4502, column: 21, scope: !12921)
!13288 = !DILocation(line: 4504, column: 7, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 4504, column: 6)
!13290 = !DILocation(line: 4504, column: 14, scope: !13289)
!13291 = !DILocation(line: 4504, column: 18, scope: !13289)
!13292 = !DILocation(line: 4504, column: 6, scope: !12921)
!13293 = !DILocation(line: 4505, column: 3, scope: !13289)
!13294 = !DILocation(line: 4508, column: 13, scope: !12921)
!13295 = !DILocation(line: 4508, column: 11, scope: !12921)
!13296 = !DILocation(line: 4509, column: 7, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 4509, column: 6)
!13298 = !DILocation(line: 4509, column: 6, scope: !12921)
!13299 = !DILocation(line: 4510, column: 3, scope: !13297)
!13300 = !DILocation(line: 4512, column: 9, scope: !12921)
!13301 = !DILocation(line: 4512, column: 16, scope: !12921)
!13302 = !DILocation(line: 4513, column: 19, scope: !12921)
!13303 = !DILocation(line: 4513, column: 9, scope: !12921)
!13304 = !DILocation(line: 4513, column: 17, scope: !12921)
!13305 = !DILocation(line: 4516, column: 15, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 4516, column: 6)
!13307 = !DILocation(line: 4516, column: 21, scope: !13306)
!13308 = !DILocation(line: 4516, column: 6, scope: !12921)
!13309 = !DILocation(line: 4519, column: 3, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13306, file: !3, line: 4516, column: 45)
!13311 = !DILocation(line: 4519, column: 13, scope: !13310)
!13312 = !DILocation(line: 4519, column: 18, scope: !13310)
!13313 = !DILocation(line: 4519, column: 23, scope: !13310)
!13314 = !DILocation(line: 4520, column: 3, scope: !13310)
!13315 = !DILocation(line: 4520, column: 13, scope: !13310)
!13316 = !DILocation(line: 4520, column: 18, scope: !13310)
!13317 = !DILocation(line: 4520, column: 25, scope: !13310)
!13318 = !DILocation(line: 4521, column: 11, scope: !13310)
!13319 = !DILocation(line: 4521, column: 21, scope: !13310)
!13320 = !DILocation(line: 4521, column: 26, scope: !13310)
!13321 = !DILocation(line: 4521, column: 31, scope: !13310)
!13322 = !DILocation(line: 4521, column: 3, scope: !13310)
!13323 = !DILocation(line: 4521, column: 36, scope: !13310)
!13324 = !DILocation(line: 4521, column: 44, scope: !13310)
!13325 = !DILocation(line: 4524, column: 3, scope: !13310)
!13326 = !DILocation(line: 4524, column: 13, scope: !13310)
!13327 = !DILocation(line: 4524, column: 18, scope: !13310)
!13328 = !DILocation(line: 4524, column: 23, scope: !13310)
!13329 = !DILocation(line: 4525, column: 3, scope: !13310)
!13330 = !DILocation(line: 4525, column: 13, scope: !13310)
!13331 = !DILocation(line: 4525, column: 18, scope: !13310)
!13332 = !DILocation(line: 4525, column: 25, scope: !13310)
!13333 = !DILocation(line: 4526, column: 11, scope: !13310)
!13334 = !DILocation(line: 4526, column: 21, scope: !13310)
!13335 = !DILocation(line: 4526, column: 26, scope: !13310)
!13336 = !DILocation(line: 4526, column: 31, scope: !13310)
!13337 = !DILocation(line: 4526, column: 3, scope: !13310)
!13338 = !DILocation(line: 4526, column: 36, scope: !13310)
!13339 = !DILocation(line: 4526, column: 44, scope: !13310)
!13340 = !DILocation(line: 4530, column: 3, scope: !13310)
!13341 = !DILocation(line: 4530, column: 13, scope: !13310)
!13342 = !DILocation(line: 4530, column: 18, scope: !13310)
!13343 = !DILocation(line: 4530, column: 23, scope: !13310)
!13344 = !DILocation(line: 4531, column: 3, scope: !13310)
!13345 = !DILocation(line: 4531, column: 13, scope: !13310)
!13346 = !DILocation(line: 4531, column: 18, scope: !13310)
!13347 = !DILocation(line: 4531, column: 25, scope: !13310)
!13348 = !DILocation(line: 4532, column: 11, scope: !13310)
!13349 = !DILocation(line: 4532, column: 21, scope: !13310)
!13350 = !DILocation(line: 4532, column: 26, scope: !13310)
!13351 = !DILocation(line: 4532, column: 31, scope: !13310)
!13352 = !DILocation(line: 4532, column: 3, scope: !13310)
!13353 = !DILocation(line: 4532, column: 37, scope: !13310)
!13354 = !DILocation(line: 4532, column: 42, scope: !13310)
!13355 = !DILocation(line: 4535, column: 3, scope: !13310)
!13356 = !DILocation(line: 4535, column: 13, scope: !13310)
!13357 = !DILocation(line: 4535, column: 18, scope: !13310)
!13358 = !DILocation(line: 4535, column: 23, scope: !13310)
!13359 = !DILocation(line: 4535, column: 27, scope: !13310)
!13360 = !DILocation(line: 4535, column: 37, scope: !13310)
!13361 = !DILocation(line: 4537, column: 3, scope: !13310)
!13362 = !DILocation(line: 4537, column: 13, scope: !13310)
!13363 = !DILocation(line: 4537, column: 18, scope: !13310)
!13364 = !DILocation(line: 4537, column: 23, scope: !13310)
!13365 = !DILocation(line: 4538, column: 3, scope: !13310)
!13366 = !DILocation(line: 4538, column: 13, scope: !13310)
!13367 = !DILocation(line: 4538, column: 18, scope: !13310)
!13368 = !DILocation(line: 4538, column: 25, scope: !13310)
!13369 = !DILocation(line: 4539, column: 2, scope: !13310)
!13370 = !DILocation(line: 4543, column: 3, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13306, file: !3, line: 4541, column: 7)
!13372 = !DILocation(line: 4543, column: 13, scope: !13371)
!13373 = !DILocation(line: 4543, column: 18, scope: !13371)
!13374 = !DILocation(line: 4543, column: 23, scope: !13371)
!13375 = !DILocation(line: 4544, column: 3, scope: !13371)
!13376 = !DILocation(line: 4544, column: 13, scope: !13371)
!13377 = !DILocation(line: 4544, column: 18, scope: !13371)
!13378 = !DILocation(line: 4544, column: 25, scope: !13371)
!13379 = !DILocation(line: 4545, column: 11, scope: !13371)
!13380 = !DILocation(line: 4545, column: 21, scope: !13371)
!13381 = !DILocation(line: 4545, column: 26, scope: !13371)
!13382 = !DILocation(line: 4545, column: 31, scope: !13371)
!13383 = !DILocation(line: 4545, column: 3, scope: !13371)
!13384 = !DILocation(line: 4545, column: 36, scope: !13371)
!13385 = !DILocation(line: 4545, column: 44, scope: !13371)
!13386 = !DILocation(line: 4549, column: 3, scope: !13371)
!13387 = !DILocation(line: 4549, column: 13, scope: !13371)
!13388 = !DILocation(line: 4549, column: 18, scope: !13371)
!13389 = !DILocation(line: 4549, column: 23, scope: !13371)
!13390 = !DILocation(line: 4550, column: 3, scope: !13371)
!13391 = !DILocation(line: 4550, column: 13, scope: !13371)
!13392 = !DILocation(line: 4550, column: 18, scope: !13371)
!13393 = !DILocation(line: 4550, column: 25, scope: !13371)
!13394 = !DILocation(line: 4551, column: 11, scope: !13371)
!13395 = !DILocation(line: 4551, column: 21, scope: !13371)
!13396 = !DILocation(line: 4551, column: 26, scope: !13371)
!13397 = !DILocation(line: 4551, column: 31, scope: !13371)
!13398 = !DILocation(line: 4551, column: 3, scope: !13371)
!13399 = !DILocation(line: 4551, column: 37, scope: !13371)
!13400 = !DILocation(line: 4551, column: 42, scope: !13371)
!13401 = !DILocation(line: 4554, column: 3, scope: !13371)
!13402 = !DILocation(line: 4554, column: 13, scope: !13371)
!13403 = !DILocation(line: 4554, column: 18, scope: !13371)
!13404 = !DILocation(line: 4554, column: 23, scope: !13371)
!13405 = !DILocation(line: 4554, column: 27, scope: !13371)
!13406 = !DILocation(line: 4554, column: 37, scope: !13371)
!13407 = !DILocation(line: 4556, column: 3, scope: !13371)
!13408 = !DILocation(line: 4556, column: 13, scope: !13371)
!13409 = !DILocation(line: 4556, column: 18, scope: !13371)
!13410 = !DILocation(line: 4556, column: 23, scope: !13371)
!13411 = !DILocation(line: 4557, column: 3, scope: !13371)
!13412 = !DILocation(line: 4557, column: 13, scope: !13371)
!13413 = !DILocation(line: 4557, column: 18, scope: !13371)
!13414 = !DILocation(line: 4557, column: 25, scope: !13371)
!13415 = !DILocation(line: 4561, column: 2, scope: !12921)
!13416 = !DILocation(line: 4561, column: 2, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13418, file: !3, line: 4561, column: 2)
!13418 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 4561, column: 2)
!13419 = !DILocation(line: 4561, column: 2, scope: !13418)
!13420 = !DILocation(line: 4562, column: 38, scope: !12921)
!13421 = !DILocation(line: 4562, column: 46, scope: !12921)
!13422 = !DILocation(line: 4562, column: 11, scope: !12921)
!13423 = !DILocation(line: 4562, column: 9, scope: !12921)
!13424 = !DILocation(line: 4565, column: 6, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !12921, file: !3, line: 4565, column: 6)
!13426 = !DILocation(line: 4565, column: 6, scope: !12921)
!13427 = !DILocation(line: 4566, column: 3, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13425, file: !3, line: 4565, column: 28)
!13429 = !DILocation(line: 4567, column: 10, scope: !13428)
!13430 = !DILocation(line: 4568, column: 3, scope: !13428)
!13431 = !DILocation(line: 4572, column: 2, scope: !12921)
!13432 = !DILocation(line: 4573, column: 2, scope: !12921)
!13433 = !DILocation(line: 4574, column: 17, scope: !12921)
!13434 = !DILocation(line: 4574, column: 2, scope: !12921)
!13435 = !DILabel(scope: !12921, name: "end", file: !3, line: 4576)
!13436 = !DILocation(line: 4576, column: 1, scope: !12921)
!13437 = !DILocation(line: 4577, column: 8, scope: !12921)
!13438 = !DILocation(line: 4577, column: 2, scope: !12921)
!13439 = !DILocation(line: 4578, column: 9, scope: !12921)
!13440 = !DILocation(line: 4578, column: 2, scope: !12921)
!13441 = !DILocation(line: 4579, column: 1, scope: !12921)
!13442 = distinct !DISubprogram(name: "sony_pic_disable", scope: !3, file: !3, line: 4462, type: !4708, scopeLine: 4463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13443 = !DILocalVariable(name: "device", arg: 1, scope: !13442, file: !3, line: 4462, type: !4529)
!13444 = !DILocation(line: 4462, column: 49, scope: !13442)
!13445 = !DILocalVariable(name: "ret", scope: !13442, file: !3, line: 4464, type: !183)
!13446 = !DILocation(line: 4464, column: 14, scope: !13442)
!13447 = !DILocation(line: 4464, column: 41, scope: !13442)
!13448 = !DILocation(line: 4464, column: 49, scope: !13442)
!13449 = !DILocation(line: 4464, column: 20, scope: !13442)
!13450 = !DILocation(line: 4467, column: 6, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 4467, column: 6)
!13452 = !DILocation(line: 4467, column: 24, scope: !13451)
!13453 = !DILocation(line: 4467, column: 27, scope: !13451)
!13454 = !DILocation(line: 4467, column: 31, scope: !13451)
!13455 = !DILocation(line: 4467, column: 6, scope: !13442)
!13456 = !DILocation(line: 4468, column: 3, scope: !13451)
!13457 = !DILocation(line: 4470, column: 2, scope: !13442)
!13458 = !DILocation(line: 4470, column: 2, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !3, line: 4470, column: 2)
!13460 = distinct !DILexicalBlock(scope: !13442, file: !3, line: 4470, column: 2)
!13461 = !DILocation(line: 4470, column: 2, scope: !13460)
!13462 = !DILocation(line: 4471, column: 2, scope: !13442)
!13463 = !DILocation(line: 4472, column: 1, scope: !13442)
!13464 = distinct !DISubprogram(name: "sonypi_compat_exit", scope: !3, file: !3, line: 4324, type: !2410, scopeLine: 4324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13465 = !DILocation(line: 4324, column: 40, scope: !13464)
!13466 = distinct !DISubprogram(name: "list_del", scope: !13467, file: !13467, line: 144, type: !13468, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13467 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!13468 = !DISubroutineType(types: !13469)
!13469 = !{null, !304}
!13470 = !DILocalVariable(name: "entry", arg: 1, scope: !13466, file: !13467, line: 144, type: !304)
!13471 = !DILocation(line: 144, column: 47, scope: !13466)
!13472 = !DILocation(line: 146, column: 19, scope: !13466)
!13473 = !DILocation(line: 146, column: 2, scope: !13466)
!13474 = !DILocation(line: 147, column: 2, scope: !13466)
!13475 = !DILocation(line: 147, column: 9, scope: !13466)
!13476 = !DILocation(line: 147, column: 14, scope: !13466)
!13477 = !DILocation(line: 148, column: 2, scope: !13466)
!13478 = !DILocation(line: 148, column: 9, scope: !13466)
!13479 = !DILocation(line: 148, column: 14, scope: !13466)
!13480 = !DILocation(line: 149, column: 1, scope: !13466)
!13481 = distinct !DISubprogram(name: "type3_handle_irq", scope: !3, file: !3, line: 3653, type: !4779, scopeLine: 3654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13482 = !DILocalVariable(name: "data_mask", arg: 1, scope: !13481, file: !3, line: 3653, type: !4781)
!13483 = !DILocation(line: 3653, column: 38, scope: !13481)
!13484 = !DILocalVariable(name: "ev", arg: 2, scope: !13481, file: !3, line: 3653, type: !4781)
!13485 = !DILocation(line: 3653, column: 58, scope: !13481)
!13486 = !DILocation(line: 3662, column: 6, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13481, file: !3, line: 3662, column: 6)
!13488 = !DILocation(line: 3662, column: 16, scope: !13487)
!13489 = !DILocation(line: 3662, column: 6, scope: !13481)
!13490 = !DILocation(line: 3663, column: 7, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13492, file: !3, line: 3663, column: 7)
!13492 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 3662, column: 25)
!13493 = !DILocation(line: 3663, column: 10, scope: !13491)
!13494 = !DILocation(line: 3663, column: 18, scope: !13491)
!13495 = !DILocation(line: 3663, column: 21, scope: !13491)
!13496 = !DILocation(line: 3663, column: 24, scope: !13491)
!13497 = !DILocation(line: 3663, column: 7, scope: !13492)
!13498 = !DILocation(line: 3664, column: 4, scope: !13491)
!13499 = !DILocation(line: 3665, column: 12, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13491, file: !3, line: 3665, column: 12)
!13501 = !DILocation(line: 3665, column: 15, scope: !13500)
!13502 = !DILocation(line: 3665, column: 12, scope: !13491)
!13503 = !DILocation(line: 3666, column: 4, scope: !13500)
!13504 = !DILocation(line: 3667, column: 3, scope: !13492)
!13505 = !DILocation(line: 3669, column: 2, scope: !13481)
!13506 = !DILocation(line: 3670, column: 1, scope: !13481)
!13507 = distinct !DISubprogram(name: "sony_pic_read_possible_resource", scope: !3, file: !3, line: 4332, type: !13508, scopeLine: 4333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13508 = !DISubroutineType(types: !13509)
!13509 = !{!183, !13510, !177}
!13510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12939, size: 64)
!13511 = !DILocalVariable(name: "resource", arg: 1, scope: !13507, file: !3, line: 4332, type: !13510)
!13512 = !DILocation(line: 4332, column: 55, scope: !13507)
!13513 = !DILocalVariable(name: "context", arg: 2, scope: !13507, file: !3, line: 4332, type: !177)
!13514 = !DILocation(line: 4332, column: 71, scope: !13507)
!13515 = !DILocalVariable(name: "i", scope: !13507, file: !3, line: 4334, type: !185)
!13516 = !DILocation(line: 4334, column: 6, scope: !13507)
!13517 = !DILocalVariable(name: "dev", scope: !13507, file: !3, line: 4335, type: !4525)
!13518 = !DILocation(line: 4335, column: 23, scope: !13507)
!13519 = !DILocation(line: 4335, column: 52, scope: !13507)
!13520 = !DILocation(line: 4335, column: 29, scope: !13507)
!13521 = !DILocation(line: 4337, column: 10, scope: !13507)
!13522 = !DILocation(line: 4337, column: 20, scope: !13507)
!13523 = !DILocation(line: 4337, column: 2, scope: !13507)
!13524 = !DILocalVariable(name: "ioport", scope: !13525, file: !3, line: 4341, type: !4496)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 4339, column: 3)
!13526 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 4337, column: 26)
!13527 = !DILocation(line: 4341, column: 28, scope: !13525)
!13528 = !DILocation(line: 4341, column: 37, scope: !13525)
!13529 = !DILocation(line: 4342, column: 9, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13525, file: !3, line: 4342, column: 8)
!13531 = !DILocation(line: 4342, column: 8, scope: !13525)
!13532 = !DILocation(line: 4343, column: 5, scope: !13530)
!13533 = !DILocation(line: 4345, column: 14, scope: !13525)
!13534 = !DILocation(line: 4345, column: 22, scope: !13525)
!13535 = !DILocation(line: 4345, column: 29, scope: !13525)
!13536 = !DILocation(line: 4345, column: 34, scope: !13525)
!13537 = !DILocation(line: 4345, column: 4, scope: !13525)
!13538 = !DILocation(line: 4346, column: 4, scope: !13525)
!13539 = !DILocation(line: 4351, column: 3, scope: !13526)
!13540 = !DILocalVariable(name: "p", scope: !13541, file: !3, line: 4355, type: !13542)
!13541 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 4354, column: 3)
!13542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!13543 = !DILocation(line: 4355, column: 30, scope: !13541)
!13544 = !DILocation(line: 4355, column: 35, scope: !13541)
!13545 = !DILocation(line: 4355, column: 45, scope: !13541)
!13546 = !DILocation(line: 4355, column: 50, scope: !13541)
!13547 = !DILocalVariable(name: "interrupt", scope: !13541, file: !3, line: 4356, type: !4510)
!13548 = !DILocation(line: 4356, column: 25, scope: !13541)
!13549 = !DILocation(line: 4357, column: 9, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13541, file: !3, line: 4357, column: 8)
!13551 = !DILocation(line: 4357, column: 11, scope: !13550)
!13552 = !DILocation(line: 4357, column: 15, scope: !13550)
!13553 = !DILocation(line: 4357, column: 18, scope: !13550)
!13554 = !DILocation(line: 4357, column: 8, scope: !13541)
!13555 = !DILocation(line: 4362, column: 5, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13550, file: !3, line: 4357, column: 35)
!13557 = !DILocation(line: 4362, column: 5, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4362, column: 5)
!13559 = distinct !DILexicalBlock(scope: !13556, file: !3, line: 4362, column: 5)
!13560 = !DILocation(line: 4362, column: 5, scope: !13559)
!13561 = !DILocation(line: 4363, column: 5, scope: !13556)
!13562 = !DILocation(line: 4365, column: 11, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13541, file: !3, line: 4365, column: 4)
!13564 = !DILocation(line: 4365, column: 9, scope: !13563)
!13565 = !DILocation(line: 4365, column: 16, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13563, file: !3, line: 4365, column: 4)
!13567 = !DILocation(line: 4365, column: 20, scope: !13566)
!13568 = !DILocation(line: 4365, column: 23, scope: !13566)
!13569 = !DILocation(line: 4365, column: 18, scope: !13566)
!13570 = !DILocation(line: 4365, column: 4, scope: !13563)
!13571 = !DILocation(line: 4366, column: 10, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 4366, column: 9)
!13573 = distinct !DILexicalBlock(scope: !13566, file: !3, line: 4365, column: 45)
!13574 = !DILocation(line: 4366, column: 13, scope: !13572)
!13575 = !DILocation(line: 4366, column: 24, scope: !13572)
!13576 = !DILocation(line: 4366, column: 9, scope: !13573)
!13577 = !DILocation(line: 4367, column: 6, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 4366, column: 28)
!13579 = !DILocation(line: 4369, column: 6, scope: !13578)
!13580 = !DILocation(line: 4371, column: 17, scope: !13573)
!13581 = !DILocation(line: 4371, column: 15, scope: !13573)
!13582 = !DILocation(line: 4373, column: 10, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 4373, column: 9)
!13584 = !DILocation(line: 4373, column: 9, scope: !13573)
!13585 = !DILocation(line: 4374, column: 6, scope: !13583)
!13586 = !DILocation(line: 4376, column: 15, scope: !13573)
!13587 = !DILocation(line: 4376, column: 26, scope: !13573)
!13588 = !DILocation(line: 4376, column: 33, scope: !13573)
!13589 = !DILocation(line: 4376, column: 38, scope: !13573)
!13590 = !DILocation(line: 4376, column: 5, scope: !13573)
!13591 = !DILocation(line: 4377, column: 33, scope: !13573)
!13592 = !DILocation(line: 4377, column: 36, scope: !13573)
!13593 = !DILocation(line: 4377, column: 5, scope: !13573)
!13594 = !DILocation(line: 4377, column: 16, scope: !13573)
!13595 = !DILocation(line: 4377, column: 20, scope: !13573)
!13596 = !DILocation(line: 4377, column: 31, scope: !13573)
!13597 = !DILocation(line: 4378, column: 31, scope: !13573)
!13598 = !DILocation(line: 4378, column: 34, scope: !13573)
!13599 = !DILocation(line: 4378, column: 5, scope: !13573)
!13600 = !DILocation(line: 4378, column: 16, scope: !13573)
!13601 = !DILocation(line: 4378, column: 20, scope: !13573)
!13602 = !DILocation(line: 4378, column: 29, scope: !13573)
!13603 = !DILocation(line: 4379, column: 32, scope: !13573)
!13604 = !DILocation(line: 4379, column: 35, scope: !13573)
!13605 = !DILocation(line: 4379, column: 5, scope: !13573)
!13606 = !DILocation(line: 4379, column: 16, scope: !13573)
!13607 = !DILocation(line: 4379, column: 20, scope: !13573)
!13608 = !DILocation(line: 4379, column: 30, scope: !13573)
!13609 = !DILocation(line: 4380, column: 5, scope: !13573)
!13610 = !DILocation(line: 4380, column: 16, scope: !13573)
!13611 = !DILocation(line: 4380, column: 20, scope: !13573)
!13612 = !DILocation(line: 4380, column: 36, scope: !13573)
!13613 = !DILocation(line: 4381, column: 36, scope: !13573)
!13614 = !DILocation(line: 4381, column: 39, scope: !13573)
!13615 = !DILocation(line: 4381, column: 50, scope: !13573)
!13616 = !DILocation(line: 4381, column: 5, scope: !13573)
!13617 = !DILocation(line: 4381, column: 16, scope: !13573)
!13618 = !DILocation(line: 4381, column: 20, scope: !13573)
!13619 = !DILocation(line: 4381, column: 34, scope: !13573)
!13620 = !DILocation(line: 4382, column: 4, scope: !13573)
!13621 = !DILocation(line: 4365, column: 41, scope: !13566)
!13622 = !DILocation(line: 4365, column: 4, scope: !13566)
!13623 = distinct !{!13623, !13570, !13624}
!13624 = !DILocation(line: 4382, column: 4, scope: !13563)
!13625 = !DILocation(line: 4383, column: 4, scope: !13541)
!13626 = !DILocalVariable(name: "io", scope: !13627, file: !3, line: 4387, type: !13628)
!13627 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 4386, column: 3)
!13628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!13629 = !DILocation(line: 4387, column: 29, scope: !13627)
!13630 = !DILocation(line: 4387, column: 35, scope: !13627)
!13631 = !DILocation(line: 4387, column: 45, scope: !13627)
!13632 = !DILocation(line: 4387, column: 50, scope: !13627)
!13633 = !DILocalVariable(name: "ioport", scope: !13627, file: !3, line: 4388, type: !4496)
!13634 = !DILocation(line: 4388, column: 28, scope: !13627)
!13635 = !DILocalVariable(name: "__mptr", scope: !13636, file: !3, line: 4389, type: !177)
!13636 = distinct !DILexicalBlock(scope: !13627, file: !3, line: 4389, column: 5)
!13637 = !DILocation(line: 4389, column: 5, scope: !13636)
!13638 = !DILocation(line: 4389, column: 5, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13636, file: !3, line: 4389, column: 5)
!13640 = !DILocation(line: 4390, column: 9, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13627, file: !3, line: 4390, column: 8)
!13642 = !DILocation(line: 4390, column: 8, scope: !13627)
!13643 = !DILocation(line: 4391, column: 5, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13641, file: !3, line: 4390, column: 13)
!13645 = !DILocation(line: 4391, column: 5, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 4391, column: 5)
!13647 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 4391, column: 5)
!13648 = !DILocation(line: 4391, column: 5, scope: !13647)
!13649 = !DILocation(line: 4392, column: 5, scope: !13644)
!13650 = !DILocation(line: 4395, column: 9, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13627, file: !3, line: 4395, column: 8)
!13652 = !DILocation(line: 4395, column: 17, scope: !13651)
!13653 = !DILocation(line: 4395, column: 21, scope: !13651)
!13654 = !DILocation(line: 4395, column: 8, scope: !13627)
!13655 = !DILocation(line: 4396, column: 13, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13651, file: !3, line: 4395, column: 30)
!13657 = !DILocation(line: 4396, column: 21, scope: !13656)
!13658 = !DILocation(line: 4396, column: 5, scope: !13656)
!13659 = !DILocation(line: 4396, column: 26, scope: !13656)
!13660 = !DILocation(line: 4397, column: 5, scope: !13656)
!13661 = !DILocation(line: 4397, column: 5, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13663, file: !3, line: 4397, column: 5)
!13663 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 4397, column: 5)
!13664 = !DILocation(line: 4397, column: 5, scope: !13663)
!13665 = !DILocation(line: 4399, column: 4, scope: !13656)
!13666 = !DILocation(line: 4400, column: 14, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13651, file: !3, line: 4400, column: 13)
!13668 = !DILocation(line: 4400, column: 22, scope: !13667)
!13669 = !DILocation(line: 4400, column: 26, scope: !13667)
!13670 = !DILocation(line: 4400, column: 13, scope: !13651)
!13671 = !DILocation(line: 4401, column: 13, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 4400, column: 35)
!13673 = !DILocation(line: 4401, column: 21, scope: !13672)
!13674 = !DILocation(line: 4401, column: 5, scope: !13672)
!13675 = !DILocation(line: 4401, column: 26, scope: !13672)
!13676 = !DILocation(line: 4402, column: 5, scope: !13672)
!13677 = !DILocation(line: 4402, column: 5, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !3, line: 4402, column: 5)
!13679 = distinct !DILexicalBlock(scope: !13672, file: !3, line: 4402, column: 5)
!13680 = !DILocation(line: 4402, column: 5, scope: !13679)
!13681 = !DILocation(line: 4404, column: 4, scope: !13672)
!13682 = !DILocation(line: 4406, column: 5, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 4405, column: 9)
!13684 = !DILocation(line: 4407, column: 5, scope: !13683)
!13685 = !DILocation(line: 4409, column: 4, scope: !13627)
!13686 = !DILocation(line: 4413, column: 3, scope: !13526)
!13687 = !DILocation(line: 4416, column: 3, scope: !13526)
!13688 = !DILocation(line: 4416, column: 3, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 4416, column: 3)
!13690 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 4416, column: 3)
!13691 = !DILocation(line: 4416, column: 3, scope: !13690)
!13692 = !DILocation(line: 4418, column: 3, scope: !13526)
!13693 = !DILocation(line: 4421, column: 1, scope: !13507)
!13694 = distinct !DISubprogram(name: "list_add", scope: !13467, file: !13467, line: 84, type: !13695, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13695 = !DISubroutineType(types: !13696)
!13696 = !{null, !304, !304}
!13697 = !DILocalVariable(name: "new", arg: 1, scope: !13694, file: !13467, line: 84, type: !304)
!13698 = !DILocation(line: 84, column: 47, scope: !13694)
!13699 = !DILocalVariable(name: "head", arg: 2, scope: !13694, file: !13467, line: 84, type: !304)
!13700 = !DILocation(line: 84, column: 70, scope: !13694)
!13701 = !DILocation(line: 86, column: 13, scope: !13694)
!13702 = !DILocation(line: 86, column: 18, scope: !13694)
!13703 = !DILocation(line: 86, column: 24, scope: !13694)
!13704 = !DILocation(line: 86, column: 30, scope: !13694)
!13705 = !DILocation(line: 86, column: 2, scope: !13694)
!13706 = !DILocation(line: 87, column: 1, scope: !13694)
!13707 = distinct !DISubprogram(name: "__list_add", scope: !13467, file: !13467, line: 63, type: !13708, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !304, !304, !304}
!13710 = !DILocalVariable(name: "new", arg: 1, scope: !13707, file: !13467, line: 63, type: !304)
!13711 = !DILocation(line: 63, column: 49, scope: !13707)
!13712 = !DILocalVariable(name: "prev", arg: 2, scope: !13707, file: !13467, line: 64, type: !304)
!13713 = !DILocation(line: 64, column: 28, scope: !13707)
!13714 = !DILocalVariable(name: "next", arg: 3, scope: !13707, file: !13467, line: 65, type: !304)
!13715 = !DILocation(line: 65, column: 28, scope: !13707)
!13716 = !DILocation(line: 67, column: 24, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13707, file: !13467, line: 67, column: 6)
!13718 = !DILocation(line: 67, column: 29, scope: !13717)
!13719 = !DILocation(line: 67, column: 35, scope: !13717)
!13720 = !DILocation(line: 67, column: 7, scope: !13717)
!13721 = !DILocation(line: 67, column: 6, scope: !13707)
!13722 = !DILocation(line: 68, column: 3, scope: !13717)
!13723 = !DILocation(line: 70, column: 15, scope: !13707)
!13724 = !DILocation(line: 70, column: 2, scope: !13707)
!13725 = !DILocation(line: 70, column: 8, scope: !13707)
!13726 = !DILocation(line: 70, column: 13, scope: !13707)
!13727 = !DILocation(line: 71, column: 14, scope: !13707)
!13728 = !DILocation(line: 71, column: 2, scope: !13707)
!13729 = !DILocation(line: 71, column: 7, scope: !13707)
!13730 = !DILocation(line: 71, column: 12, scope: !13707)
!13731 = !DILocation(line: 72, column: 14, scope: !13707)
!13732 = !DILocation(line: 72, column: 2, scope: !13707)
!13733 = !DILocation(line: 72, column: 7, scope: !13707)
!13734 = !DILocation(line: 72, column: 12, scope: !13707)
!13735 = !DILocation(line: 73, column: 2, scope: !13707)
!13736 = !DILocation(line: 73, column: 2, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13707, file: !13467, line: 73, column: 2)
!13738 = !DILocation(line: 73, column: 2, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13737, file: !13467, line: 73, column: 2)
!13740 = !DILocation(line: 73, column: 2, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13737, file: !13467, line: 73, column: 2)
!13742 = !DILocation(line: 74, column: 1, scope: !13707)
!13743 = distinct !DISubprogram(name: "__list_add_valid", scope: !13467, file: !13467, line: 45, type: !13744, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{!844, !304, !304, !304}
!13746 = !DILocalVariable(name: "new", arg: 1, scope: !13743, file: !13467, line: 45, type: !304)
!13747 = !DILocation(line: 45, column: 55, scope: !13743)
!13748 = !DILocalVariable(name: "prev", arg: 2, scope: !13743, file: !13467, line: 46, type: !304)
!13749 = !DILocation(line: 46, column: 23, scope: !13743)
!13750 = !DILocalVariable(name: "next", arg: 3, scope: !13743, file: !13467, line: 47, type: !304)
!13751 = !DILocation(line: 47, column: 23, scope: !13743)
!13752 = !DILocation(line: 49, column: 2, scope: !13743)
!13753 = distinct !DISubprogram(name: "sonypi_compat_report_event", scope: !3, file: !3, line: 4325, type: !11524, scopeLine: 4325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13754 = !DILocalVariable(name: "event", arg: 1, scope: !13753, file: !3, line: 4325, type: !223)
!13755 = !DILocation(line: 4325, column: 43, scope: !13753)
!13756 = !DILocation(line: 4325, column: 52, scope: !13753)
!13757 = distinct !DISubprogram(name: "sony_pic_bluetoothpower_show", scope: !3, file: !3, line: 3955, type: !4489, scopeLine: 3957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13758 = !DILocalVariable(name: "dev", arg: 1, scope: !13757, file: !3, line: 3955, type: !3523)
!13759 = !DILocation(line: 3955, column: 60, scope: !13757)
!13760 = !DILocalVariable(name: "attr", arg: 2, scope: !13757, file: !3, line: 3956, type: !4491)
!13761 = !DILocation(line: 3956, column: 28, scope: !13757)
!13762 = !DILocalVariable(name: "buffer", arg: 3, scope: !13757, file: !3, line: 3956, type: !181)
!13763 = !DILocation(line: 3956, column: 40, scope: !13757)
!13764 = !DILocalVariable(name: "count", scope: !13757, file: !3, line: 3958, type: !570)
!13765 = !DILocation(line: 3958, column: 10, scope: !13757)
!13766 = !DILocation(line: 3959, column: 2, scope: !13757)
!13767 = !DILocation(line: 3960, column: 19, scope: !13757)
!13768 = !DILocation(line: 3960, column: 55, scope: !13757)
!13769 = !DILocation(line: 3960, column: 46, scope: !13757)
!13770 = !DILocation(line: 3960, column: 10, scope: !13757)
!13771 = !DILocation(line: 3960, column: 8, scope: !13757)
!13772 = !DILocation(line: 3961, column: 2, scope: !13757)
!13773 = !DILocation(line: 3962, column: 9, scope: !13757)
!13774 = !DILocation(line: 3962, column: 2, scope: !13757)
!13775 = distinct !DISubprogram(name: "sony_pic_bluetoothpower_store", scope: !3, file: !3, line: 3937, type: !4494, scopeLine: 3940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13776 = !DILocalVariable(name: "dev", arg: 1, scope: !13775, file: !3, line: 3937, type: !3523)
!13777 = !DILocation(line: 3937, column: 61, scope: !13775)
!13778 = !DILocalVariable(name: "attr", arg: 2, scope: !13775, file: !3, line: 3938, type: !4491)
!13779 = !DILocation(line: 3938, column: 28, scope: !13775)
!13780 = !DILocalVariable(name: "buffer", arg: 3, scope: !13775, file: !3, line: 3939, type: !422)
!13781 = !DILocation(line: 3939, column: 15, scope: !13775)
!13782 = !DILocalVariable(name: "count", arg: 4, scope: !13775, file: !3, line: 3939, type: !574)
!13783 = !DILocation(line: 3939, column: 30, scope: !13775)
!13784 = !DILocalVariable(name: "value", scope: !13775, file: !3, line: 3941, type: !193)
!13785 = !DILocation(line: 3941, column: 16, scope: !13775)
!13786 = !DILocation(line: 3942, column: 6, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13775, file: !3, line: 3942, column: 6)
!13788 = !DILocation(line: 3942, column: 12, scope: !13787)
!13789 = !DILocation(line: 3942, column: 6, scope: !13775)
!13790 = !DILocation(line: 3943, column: 3, scope: !13787)
!13791 = !DILocation(line: 3945, column: 15, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13775, file: !3, line: 3945, column: 6)
!13793 = !DILocation(line: 3945, column: 6, scope: !13792)
!13794 = !DILocation(line: 3945, column: 6, scope: !13775)
!13795 = !DILocation(line: 3946, column: 3, scope: !13792)
!13796 = !DILocation(line: 3948, column: 2, scope: !13775)
!13797 = !DILocation(line: 3949, column: 32, scope: !13775)
!13798 = !DILocation(line: 3949, column: 2, scope: !13775)
!13799 = !DILocation(line: 3950, column: 2, scope: !13775)
!13800 = !DILocation(line: 3952, column: 9, scope: !13775)
!13801 = !DILocation(line: 3952, column: 2, scope: !13775)
!13802 = !DILocation(line: 3953, column: 1, scope: !13775)
!13803 = distinct !DISubprogram(name: "__sony_pic_set_bluetoothpower", scope: !3, file: !3, line: 3927, type: !11524, scopeLine: 3928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13804 = !DILocalVariable(name: "state", arg: 1, scope: !13803, file: !3, line: 3927, type: !223)
!13805 = !DILocation(line: 3927, column: 46, scope: !13803)
!13806 = !DILocation(line: 3929, column: 12, scope: !13803)
!13807 = !DILocation(line: 3929, column: 11, scope: !13803)
!13808 = !DILocation(line: 3929, column: 10, scope: !13803)
!13809 = !DILocation(line: 3929, column: 8, scope: !13803)
!13810 = !DILocation(line: 3930, column: 15, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 3930, column: 6)
!13812 = !DILocation(line: 3930, column: 6, scope: !13811)
!13813 = !DILocation(line: 3930, column: 34, scope: !13811)
!13814 = !DILocation(line: 3930, column: 31, scope: !13811)
!13815 = !DILocation(line: 3930, column: 6, scope: !13803)
!13816 = !DILocation(line: 3931, column: 3, scope: !13811)
!13817 = !DILocation(line: 3932, column: 23, scope: !13803)
!13818 = !DILocation(line: 3932, column: 2, scope: !13803)
!13819 = !DILocation(line: 3933, column: 2, scope: !13803)
!13820 = !DILocation(line: 3934, column: 29, scope: !13803)
!13821 = !DILocation(line: 3934, column: 27, scope: !13803)
!13822 = !DILocation(line: 3935, column: 1, scope: !13803)
!13823 = distinct !DISubprogram(name: "sony_pic_wwanpower_show", scope: !3, file: !3, line: 3916, type: !4489, scopeLine: 3918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13824 = !DILocalVariable(name: "dev", arg: 1, scope: !13823, file: !3, line: 3916, type: !3523)
!13825 = !DILocation(line: 3916, column: 55, scope: !13823)
!13826 = !DILocalVariable(name: "attr", arg: 2, scope: !13823, file: !3, line: 3917, type: !4491)
!13827 = !DILocation(line: 3917, column: 28, scope: !13823)
!13828 = !DILocalVariable(name: "buffer", arg: 3, scope: !13823, file: !3, line: 3917, type: !181)
!13829 = !DILocation(line: 3917, column: 40, scope: !13823)
!13830 = !DILocalVariable(name: "count", scope: !13823, file: !3, line: 3919, type: !570)
!13831 = !DILocation(line: 3919, column: 10, scope: !13823)
!13832 = !DILocation(line: 3920, column: 2, scope: !13823)
!13833 = !DILocation(line: 3921, column: 19, scope: !13823)
!13834 = !DILocation(line: 3921, column: 55, scope: !13823)
!13835 = !DILocation(line: 3921, column: 46, scope: !13823)
!13836 = !DILocation(line: 3921, column: 10, scope: !13823)
!13837 = !DILocation(line: 3921, column: 8, scope: !13823)
!13838 = !DILocation(line: 3922, column: 2, scope: !13823)
!13839 = !DILocation(line: 3923, column: 9, scope: !13823)
!13840 = !DILocation(line: 3923, column: 2, scope: !13823)
!13841 = distinct !DISubprogram(name: "sony_pic_wwanpower_store", scope: !3, file: !3, line: 3898, type: !4494, scopeLine: 3901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13842 = !DILocalVariable(name: "dev", arg: 1, scope: !13841, file: !3, line: 3898, type: !3523)
!13843 = !DILocation(line: 3898, column: 56, scope: !13841)
!13844 = !DILocalVariable(name: "attr", arg: 2, scope: !13841, file: !3, line: 3899, type: !4491)
!13845 = !DILocation(line: 3899, column: 28, scope: !13841)
!13846 = !DILocalVariable(name: "buffer", arg: 3, scope: !13841, file: !3, line: 3900, type: !422)
!13847 = !DILocation(line: 3900, column: 15, scope: !13841)
!13848 = !DILocalVariable(name: "count", arg: 4, scope: !13841, file: !3, line: 3900, type: !574)
!13849 = !DILocation(line: 3900, column: 30, scope: !13841)
!13850 = !DILocalVariable(name: "value", scope: !13841, file: !3, line: 3902, type: !193)
!13851 = !DILocation(line: 3902, column: 16, scope: !13841)
!13852 = !DILocation(line: 3903, column: 6, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 3903, column: 6)
!13854 = !DILocation(line: 3903, column: 12, scope: !13853)
!13855 = !DILocation(line: 3903, column: 6, scope: !13841)
!13856 = !DILocation(line: 3904, column: 3, scope: !13853)
!13857 = !DILocation(line: 3906, column: 15, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 3906, column: 6)
!13859 = !DILocation(line: 3906, column: 6, scope: !13858)
!13860 = !DILocation(line: 3906, column: 6, scope: !13841)
!13861 = !DILocation(line: 3907, column: 3, scope: !13858)
!13862 = !DILocation(line: 3909, column: 2, scope: !13841)
!13863 = !DILocation(line: 3910, column: 27, scope: !13841)
!13864 = !DILocation(line: 3910, column: 2, scope: !13841)
!13865 = !DILocation(line: 3911, column: 2, scope: !13841)
!13866 = !DILocation(line: 3913, column: 9, scope: !13841)
!13867 = !DILocation(line: 3913, column: 2, scope: !13841)
!13868 = !DILocation(line: 3914, column: 1, scope: !13841)
!13869 = distinct !DISubprogram(name: "__sony_pic_set_wwanpower", scope: !3, file: !3, line: 3888, type: !11524, scopeLine: 3889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13870 = !DILocalVariable(name: "state", arg: 1, scope: !13869, file: !3, line: 3888, type: !223)
!13871 = !DILocation(line: 3888, column: 41, scope: !13869)
!13872 = !DILocation(line: 3890, column: 12, scope: !13869)
!13873 = !DILocation(line: 3890, column: 11, scope: !13869)
!13874 = !DILocation(line: 3890, column: 10, scope: !13869)
!13875 = !DILocation(line: 3890, column: 8, scope: !13869)
!13876 = !DILocation(line: 3891, column: 15, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13869, file: !3, line: 3891, column: 6)
!13878 = !DILocation(line: 3891, column: 6, scope: !13877)
!13879 = !DILocation(line: 3891, column: 29, scope: !13877)
!13880 = !DILocation(line: 3891, column: 26, scope: !13877)
!13881 = !DILocation(line: 3891, column: 6, scope: !13869)
!13882 = !DILocation(line: 3892, column: 3, scope: !13877)
!13883 = !DILocation(line: 3893, column: 23, scope: !13869)
!13884 = !DILocation(line: 3893, column: 2, scope: !13869)
!13885 = !DILocation(line: 3894, column: 2, scope: !13869)
!13886 = !DILocation(line: 3895, column: 24, scope: !13869)
!13887 = !DILocation(line: 3895, column: 22, scope: !13869)
!13888 = !DILocation(line: 3896, column: 1, scope: !13869)
!13889 = distinct !DISubprogram(name: "sony_pic_fanspeed_show", scope: !3, file: !3, line: 3995, type: !4489, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13890 = !DILocalVariable(name: "dev", arg: 1, scope: !13889, file: !3, line: 3995, type: !3523)
!13891 = !DILocation(line: 3995, column: 54, scope: !13889)
!13892 = !DILocalVariable(name: "attr", arg: 2, scope: !13889, file: !3, line: 3996, type: !4491)
!13893 = !DILocation(line: 3996, column: 28, scope: !13889)
!13894 = !DILocalVariable(name: "buffer", arg: 3, scope: !13889, file: !3, line: 3996, type: !181)
!13895 = !DILocation(line: 3996, column: 40, scope: !13889)
!13896 = !DILocalVariable(name: "value", scope: !13889, file: !3, line: 3998, type: !223)
!13897 = !DILocation(line: 3998, column: 5, scope: !13889)
!13898 = !DILocation(line: 3999, column: 6, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 3999, column: 6)
!13900 = !DILocation(line: 3999, column: 6, scope: !13889)
!13901 = !DILocation(line: 4000, column: 3, scope: !13899)
!13902 = !DILocation(line: 4002, column: 18, scope: !13889)
!13903 = !DILocation(line: 4002, column: 45, scope: !13889)
!13904 = !DILocation(line: 4002, column: 9, scope: !13889)
!13905 = !DILocation(line: 4002, column: 2, scope: !13889)
!13906 = !DILocation(line: 4003, column: 1, scope: !13889)
!13907 = distinct !DISubprogram(name: "sony_pic_fanspeed_store", scope: !3, file: !3, line: 3978, type: !4494, scopeLine: 3981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13908 = !DILocalVariable(name: "dev", arg: 1, scope: !13907, file: !3, line: 3978, type: !3523)
!13909 = !DILocation(line: 3978, column: 55, scope: !13907)
!13910 = !DILocalVariable(name: "attr", arg: 2, scope: !13907, file: !3, line: 3979, type: !4491)
!13911 = !DILocation(line: 3979, column: 28, scope: !13907)
!13912 = !DILocalVariable(name: "buffer", arg: 3, scope: !13907, file: !3, line: 3980, type: !422)
!13913 = !DILocation(line: 3980, column: 15, scope: !13907)
!13914 = !DILocalVariable(name: "count", arg: 4, scope: !13907, file: !3, line: 3980, type: !574)
!13915 = !DILocation(line: 3980, column: 30, scope: !13907)
!13916 = !DILocalVariable(name: "value", scope: !13907, file: !3, line: 3982, type: !193)
!13917 = !DILocation(line: 3982, column: 16, scope: !13907)
!13918 = !DILocation(line: 3983, column: 6, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 3983, column: 6)
!13920 = !DILocation(line: 3983, column: 12, scope: !13919)
!13921 = !DILocation(line: 3983, column: 6, scope: !13907)
!13922 = !DILocation(line: 3984, column: 3, scope: !13919)
!13923 = !DILocation(line: 3986, column: 15, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 3986, column: 6)
!13925 = !DILocation(line: 3986, column: 6, scope: !13924)
!13926 = !DILocation(line: 3986, column: 6, scope: !13907)
!13927 = !DILocation(line: 3987, column: 3, scope: !13924)
!13928 = !DILocation(line: 3989, column: 28, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13907, file: !3, line: 3989, column: 6)
!13930 = !DILocation(line: 3989, column: 6, scope: !13929)
!13931 = !DILocation(line: 3989, column: 6, scope: !13907)
!13932 = !DILocation(line: 3990, column: 3, scope: !13929)
!13933 = !DILocation(line: 3992, column: 9, scope: !13907)
!13934 = !DILocation(line: 3992, column: 2, scope: !13907)
!13935 = !DILocation(line: 3993, column: 1, scope: !13907)
!13936 = distinct !DISubprogram(name: "sony_pic_get_fanspeed", scope: !3, file: !3, line: 3973, type: !13937, scopeLine: 3974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13937 = !DISubroutineType(types: !13938)
!13938 = !{!109, !222}
!13939 = !DILocalVariable(name: "value", arg: 1, scope: !13936, file: !3, line: 3973, type: !222)
!13940 = !DILocation(line: 3973, column: 38, scope: !13936)
!13941 = !DILocation(line: 3975, column: 39, scope: !13936)
!13942 = !DILocation(line: 3975, column: 9, scope: !13936)
!13943 = !DILocation(line: 3975, column: 2, scope: !13936)
!13944 = distinct !DISubprogram(name: "sony_pic_set_fanspeed", scope: !3, file: !3, line: 3968, type: !8419, scopeLine: 3969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13945 = !DILocalVariable(name: "value", arg: 1, scope: !13944, file: !3, line: 3968, type: !193)
!13946 = !DILocation(line: 3968, column: 48, scope: !13944)
!13947 = !DILocation(line: 3970, column: 40, scope: !13944)
!13948 = !DILocation(line: 3970, column: 9, scope: !13944)
!13949 = !DILocation(line: 3970, column: 2, scope: !13944)
!13950 = distinct !DISubprogram(name: "__list_del_entry", scope: !13467, file: !13467, line: 130, type: !13468, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13951 = !DILocalVariable(name: "entry", arg: 1, scope: !13950, file: !13467, line: 130, type: !304)
!13952 = !DILocation(line: 130, column: 55, scope: !13950)
!13953 = !DILocation(line: 132, column: 30, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13950, file: !13467, line: 132, column: 6)
!13955 = !DILocation(line: 132, column: 7, scope: !13954)
!13956 = !DILocation(line: 132, column: 6, scope: !13950)
!13957 = !DILocation(line: 133, column: 3, scope: !13954)
!13958 = !DILocation(line: 135, column: 13, scope: !13950)
!13959 = !DILocation(line: 135, column: 20, scope: !13950)
!13960 = !DILocation(line: 135, column: 26, scope: !13950)
!13961 = !DILocation(line: 135, column: 33, scope: !13950)
!13962 = !DILocation(line: 135, column: 2, scope: !13950)
!13963 = !DILocation(line: 136, column: 1, scope: !13950)
!13964 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !13467, file: !13467, line: 51, type: !13965, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{!844, !304}
!13967 = !DILocalVariable(name: "entry", arg: 1, scope: !13964, file: !13467, line: 51, type: !304)
!13968 = !DILocation(line: 51, column: 61, scope: !13964)
!13969 = !DILocation(line: 53, column: 2, scope: !13964)
!13970 = distinct !DISubprogram(name: "__list_del", scope: !13467, file: !13467, line: 110, type: !13695, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13971 = !DILocalVariable(name: "prev", arg: 1, scope: !13970, file: !13467, line: 110, type: !304)
!13972 = !DILocation(line: 110, column: 50, scope: !13970)
!13973 = !DILocalVariable(name: "next", arg: 2, scope: !13970, file: !13467, line: 110, type: !304)
!13974 = !DILocation(line: 110, column: 75, scope: !13970)
!13975 = !DILocation(line: 112, column: 15, scope: !13970)
!13976 = !DILocation(line: 112, column: 2, scope: !13970)
!13977 = !DILocation(line: 112, column: 8, scope: !13970)
!13978 = !DILocation(line: 112, column: 13, scope: !13970)
!13979 = !DILocation(line: 113, column: 2, scope: !13970)
!13980 = !DILocation(line: 113, column: 2, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13970, file: !13467, line: 113, column: 2)
!13982 = !DILocation(line: 113, column: 2, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13981, file: !13467, line: 113, column: 2)
!13984 = !DILocation(line: 113, column: 2, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13981, file: !13467, line: 113, column: 2)
!13986 = !DILocation(line: 114, column: 1, scope: !13970)
!13987 = distinct !DISubprogram(name: "sony_pic_suspend", scope: !3, file: !3, line: 4837, type: !3845, scopeLine: 4838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!13988 = !DILocalVariable(name: "dev", arg: 1, scope: !13987, file: !3, line: 4837, type: !3523)
!13989 = !DILocation(line: 4837, column: 44, scope: !13987)
!13990 = !DILocalVariable(name: "__mptr", scope: !13991, file: !3, line: 4839, type: !177)
!13991 = distinct !DILexicalBlock(scope: !13992, file: !3, line: 4839, column: 23)
!13992 = distinct !DILexicalBlock(scope: !13987, file: !3, line: 4839, column: 6)
!13993 = !DILocation(line: 4839, column: 23, scope: !13991)
!13994 = !DILocation(line: 4839, column: 23, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13991, file: !3, line: 4839, column: 23)
!13996 = !DILocation(line: 4839, column: 6, scope: !13992)
!13997 = !DILocation(line: 4839, column: 6, scope: !13987)
!13998 = !DILocation(line: 4840, column: 3, scope: !13992)
!13999 = !DILocation(line: 4841, column: 2, scope: !13987)
!14000 = !DILocation(line: 4842, column: 1, scope: !13987)
!14001 = distinct !DISubprogram(name: "sony_pic_resume", scope: !3, file: !3, line: 4844, type: !3845, scopeLine: 4845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !299)
!14002 = !DILocalVariable(name: "dev", arg: 1, scope: !14001, file: !3, line: 4844, type: !3523)
!14003 = !DILocation(line: 4844, column: 43, scope: !14001)
!14004 = !DILocalVariable(name: "__mptr", scope: !14005, file: !3, line: 4846, type: !177)
!14005 = distinct !DILexicalBlock(scope: !14001, file: !3, line: 4846, column: 18)
!14006 = !DILocation(line: 4846, column: 18, scope: !14005)
!14007 = !DILocation(line: 4846, column: 18, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 4846, column: 18)
!14009 = !DILocation(line: 4847, column: 13, scope: !14001)
!14010 = !DILocation(line: 4847, column: 34, scope: !14001)
!14011 = !DILocation(line: 4846, column: 2, scope: !14001)
!14012 = !DILocation(line: 4848, column: 2, scope: !14001)
