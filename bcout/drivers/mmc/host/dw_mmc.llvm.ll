; ModuleID = '../bcout/drivers/mmc/host/dw_mmc.llvm.bc'
source_filename = "drivers/mmc/host/dw_mmc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_dw_mci_init6:\09\09\09"
module asm ".long\09dw_mci_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.42, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.45 }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { i64, i64 }
%union.anon.45 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.41, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.7, [0 x i64] }
%struct.anon.7 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.46, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.46 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.0, %union.anon.77, %struct.atomic_t, [8 x i8] }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.80, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.81, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.82, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.83, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.57, %struct.list_head, %struct.list_head, %union.anon.58 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.4 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.57 = type { %struct.list_head }
%union.anon.58 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.6, i32 }
%union.anon.6 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.47, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.47 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.26, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.26 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.48, %union.anon.49, %union.anon.50, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.53, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.48 = type { %struct.hlist_node }
%union.anon.49 = type { %struct.rb_node }
%union.anon.50 = type { %struct.anon.52 }
%struct.anon.52 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.53 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.54, void (i8*)*, i8* }
%union.anon.54 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.55, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.55 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.27, %union.anon.28, i32 }
%union.anon.27 = type { %struct.list_head }
%union.anon.28 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.80 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.81 = type { %struct.callback_head }
%union.anon.82 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.59 }
%union.anon.59 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.60, %union.anon.61 }
%union.anon.60 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.61 = type { i64 }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.63 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.63 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.83 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.77 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22, [48 x i8] }
%struct.anon.22 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.23, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.23 = type { %struct.anon.24 }
%struct.anon.24 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.8 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.25 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.25 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.13, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.14, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.15, %union.anon.19, %struct.key_restriction* }
%union.anon.13 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.14 = type { i64 }
%union.anon.15 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.16, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.16 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.19 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.29 }
%struct.anon.29 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.40, i32, [12 x i8] }
%union.anon.40 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.41 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.dw_mci = type { %struct.spinlock, %struct.spinlock, i8*, i8*, i32, i8, %struct.scatterlist*, %struct.sg_mapping_iter, %struct.mmc_request*, %struct.mmc_command*, %struct.mmc_data*, %struct.mmc_command, i32, i8, i32, i32, i32, i64, i8*, %struct.dw_mci_dma_ops*, i32, %struct.dw_mci_dma_slave*, i64, i32, i32, i32, i32, %struct.tasklet_struct, i64, i64, i32, %struct.list_head, i32, i32, i32, i16, %struct.device*, %struct.dw_mci_board*, %struct.dw_mci_drv_data*, i8*, %struct.clk*, %struct.clk*, %struct.dw_mci_slot*, i32, i32, i8, i8, %union.anon.79, void (%struct.dw_mci*, i8*, i32)*, void (%struct.dw_mci*, i8*, i32)*, i8, i64, i32, i32, %struct.timer_list, %struct.timer_list, %struct.timer_list }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.sg_mapping_iter = type { %struct.page*, i8*, i64, i64, %struct.sg_page_iter, i32, i32, i32 }
%struct.sg_page_iter = type { %struct.scatterlist*, i32, i32, i32 }
%struct.mmc_request = type { %struct.mmc_command*, %struct.mmc_command*, %struct.mmc_data*, %struct.mmc_command*, %struct.completion, %struct.completion, void (%struct.mmc_request*)*, void (%struct.mmc_request*)*, %struct.mmc_host*, i8, i32 }
%struct.mmc_host = type { %struct.device*, %struct.device, i32, %struct.mmc_host_ops*, %struct.mmc_pwrseq*, i32, i32, i32, i32, i32, i32, i32, %struct.notifier_block, %struct.wakeup_source*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, %struct.spinlock, %struct.mmc_ios, i16, i32, i32, i32, i32, i32, %struct.timer_list, i8, %struct.mmc_card*, %struct.wait_queue_head, %struct.mmc_ctx*, i32, %struct.mmc_ctx, %struct.delayed_work, i32, %struct.mmc_slot, %struct.mmc_bus_ops*, i32, i32, %struct.task_struct*, %struct.delayed_work, i8, %struct.atomic_t, i32, %struct.led_trigger*, %struct.mmc_supply, %struct.dentry*, %struct.mmc_request*, i32, i32, i32, i32, %struct.mmc_cqe_ops*, i8*, i32, i8, i8, i8, [41 x i8], [0 x i64] }
%struct.mmc_host_ops = type { void (%struct.mmc_host*, %struct.mmc_request*, i32)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*, i32)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_card*, i32, i32)* }
%struct.mmc_pwrseq = type opaque
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.mmc_ios = type { i32, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mmc_card = type { %struct.mmc_host*, %struct.device, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i8, [4 x i32], [4 x i32], [2 x i32], [16 x i32], %struct.mmc_cid, %struct.mmc_csd, %struct.mmc_ext_csd, %struct.sd_scr, %struct.sd_ssr, %struct.sd_switch_caps, i32, %struct.atomic_t, %struct.sdio_cccr, %struct.sdio_cis, [7 x %struct.sdio_func*], %struct.sdio_func*, i8, i8, i32, i8**, %struct.sdio_func_tuple*, i32, i32, i32, %struct.dentry*, [7 x %struct.mmc_part], i32, i32, %struct.workqueue_struct* }
%struct.mmc_cid = type { i32, [8 x i8], i8, i32, i16, i16, i8, i8, i8 }
%struct.mmc_csd = type { i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.mmc_ext_csd = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, i64, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, [8 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i32 }
%struct.sd_scr = type { i8, i8, i8, i8, i8, i8 }
%struct.sd_ssr = type { i32, i32, i32 }
%struct.sd_switch_caps = type { i32, i32, i32, i32, i32 }
%struct.sdio_cccr = type { i32, i32, i8 }
%struct.sdio_cis = type { i16, i16, i16, i32 }
%struct.sdio_func = type opaque
%struct.sdio_func_tuple = type opaque
%struct.mmc_part = type { i64, i32, [20 x i8], i8, i32 }
%struct.mmc_ctx = type { %struct.task_struct* }
%struct.mmc_slot = type { i32, i8, i8* }
%struct.mmc_bus_ops = type opaque
%struct.led_trigger = type opaque
%struct.mmc_supply = type { %struct.regulator*, %struct.regulator* }
%struct.regulator = type opaque
%struct.mmc_cqe_ops = type { i32 (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i1 (%struct.mmc_host*, %struct.mmc_request*, i8*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.mmc_data = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.mmc_command*, %struct.mmc_request*, i32, i32, %struct.scatterlist*, i32 }
%struct.mmc_command = type { i32, i32, [4 x i32], i32, i32, i32, i32, %struct.mmc_data*, %struct.mmc_request* }
%struct.dw_mci_dma_ops = type { {}*, i32 (%struct.dw_mci*, i32)*, void (i8*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)* }
%struct.dw_mci_dma_slave = type { %struct.dma_chan*, i32 }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.dma_filter = type { i1 (%struct.dma_chan*, i8*)*, i32, %struct.dma_slave_map* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.ida = type { %struct.xarray }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.78, i64 }
%union.anon.78 = type { void (i64)* }
%struct.dw_mci_board = type { i32, i32, i32, i32, i32, i32, %struct.reset_control*, %struct.dw_mci_dma_ops*, %struct.dma_pdata* }
%struct.reset_control = type opaque
%struct.dma_pdata = type opaque
%struct.dw_mci_drv_data = type { i64*, i32, {}*, void (%struct.dw_mci*, %struct.mmc_ios*)*, {}*, i32 (%struct.dw_mci_slot*, i32)*, i32 (%struct.dw_mci*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)* }
%struct.clk = type opaque
%struct.dw_mci_slot = type { %struct.mmc_host*, %struct.dw_mci*, i32, %struct.mmc_request*, %struct.list_head, i32, i32, i64, i32, i32 }
%union.anon.79 = type { i64 }
%struct.idmac_desc_64addr = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.idmac_desc = type { i32, i32, i32, i32 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}

@.str = private unnamed_addr constant [29 x i8] c"platform data not available\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"biu\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"failed to enable biu clock\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"ciu\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"failed to enable ciu clock\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Unable to set bus rate to %uHz\0A\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"Platform data must supply bus speed\0A\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"implementation specific init failed\0A\00", align 1
@.str.8 = private unnamed_addr constant [71 x i8] c"HCON reports a reserved host data width!\0ADefaulting to 32-bit access.\0A\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"drivers/mmc/host/dw_mmc.c\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"Version ID is %04x\0A\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"dw-mci\00", align 1
@.str.12 = private unnamed_addr constant [65 x i8] c"DW MMC controller at irq %d,%d bit host data width,%u deep fifo\0A\00", align 1
@__UNIQUE_ID___addressable_dw_mci_init320 = internal global i8* bitcast (i32 ()* @dw_mci_init to i8*), section ".discard.addressable", align 8, !dbg !0
@__exitcall_dw_mci_exit = internal global void ()* @dw_mci_exit, section ".exitcall.exit", align 8, !dbg !6315
@__UNIQUE_ID_description321 = internal constant [55 x i8] c"dw_mmc.description=DW Multimedia Card Interface driver\00", section ".modinfo", align 1, !dbg !6320
@__UNIQUE_ID_author322 = internal constant [40 x i8] c"dw_mmc.author=NXP Semiconductor VietNam\00", section ".modinfo", align 1, !dbg !6325
@__UNIQUE_ID_author323 = internal constant [43 x i8] c"dw_mmc.author=Imagination Technologies Ltd\00", section ".modinfo", align 1, !dbg !6330
@__UNIQUE_ID_file324 = internal constant [36 x i8] c"dw_mmc.file=drivers/mmc/host/dw_mmc\00", section ".modinfo", align 1, !dbg !6335
@__UNIQUE_ID_license325 = internal constant [22 x i8] c"dw_mmc.license=GPL v2\00", section ".modinfo", align 1, !dbg !6340
@.str.13 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"fifo-depth\00", align 1
@.str.15 = private unnamed_addr constant [74 x i8] c"fifo-depth property not found, using value of FIFOTH register as default\0A\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"card-detect-delay\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"data-addr\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"fifo-watermark-aligned\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"clock-frequency\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"Unexpected CMD11 timeout\0A\00", align 1
@.str.21 = private unnamed_addr constant [30 x i8] c"Unexpected interrupt latency\0A\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"CTO timeout when already completed\0A\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"Unexpected command timeout, state %d\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.24 = private unnamed_addr constant [35 x i8] c"Unexpected data interrupt latency\0A\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"DTO timeout when already completed\0A\00", align 1
@.str.26 = private unnamed_addr constant [35 x i8] c"Unexpected data timeout, state %d\0A\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"Timeout resetting block (ctrl reset %#x)\0A\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"IDMAC supports 64-bit address mode.\0A\00", align 1
@.str.29 = private unnamed_addr constant [37 x i8] c"IDMAC supports 32-bit address mode.\0A\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"%s: could not alloc DMA memory\0A\00", align 1
@__func__.dw_mci_init_dma = private unnamed_addr constant [16 x i8] c"dw_mci_init_dma\00", align 1
@.str.31 = private unnamed_addr constant [32 x i8] c"Using internal DMA controller.\0A\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"dma-names\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"dmas\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"Using external DMA controller.\0A\00", align 1
@.str.35 = private unnamed_addr constant [42 x i8] c"%s: Unable to initialize DMA Controller.\0A\00", align 1
@.str.36 = private unnamed_addr constant [31 x i8] c"DMA initialization not found.\0A\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"Using PIO mode.\0A\00", align 1
@dw_mci_idmac_ops = internal constant { i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*, i32)*, void (i8*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)* } { i32 (%struct.dw_mci*)* @dw_mci_idmac_init, i32 (%struct.dw_mci*, i32)* @dw_mci_idmac_start_dma, void (i8*)* @dw_mci_dmac_complete_dma, void (%struct.dw_mci*)* @dw_mci_idmac_stop_dma, void (%struct.dw_mci*)* @dw_mci_dma_cleanup, void (%struct.dw_mci*)* null }, align 8, !dbg !6343
@dw_mci_edmac_ops = internal constant { i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*, i32)*, void (i8*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)* } { i32 (%struct.dw_mci*)* @dw_mci_edmac_init, i32 (%struct.dw_mci*, i32)* @dw_mci_edmac_start_dma, void (i8*)* @dw_mci_dmac_complete_dma, void (%struct.dw_mci*)* @dw_mci_edmac_stop_dma, void (%struct.dw_mci*)* @dw_mci_dma_cleanup, void (%struct.dw_mci*)* @dw_mci_edmac_exit }, align 8, !dbg !6345
@.str.40 = private unnamed_addr constant [6 x i8] c"rx-tx\00", align 1
@.str.41 = private unnamed_addr constant [37 x i8] c"Failed to get external DMA channel.\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.42 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@dw_mci_edmac_start_dma.mszs = internal constant [8 x i32] [i32 1, i32 4, i32 8, i32 16, i32 32, i32 64, i32 128, i32 256], align 16, !dbg !6347
@.str.43 = private unnamed_addr constant [25 x i8] c"Failed to config edmac.\0A\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"Can't prepare slave sg.\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.45 = private unnamed_addr constant [54 x i8] c"Timeout sending command (cmd %#x arg %#x status %#x)\0A\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"Busy; trying anyway\0A\00", align 1
@dw_mci_adjust_fifoth.mszs = internal constant [8 x i32] [i32 1, i32 4, i32 8, i32 16, i32 32, i32 64, i32 128, i32 256], align 16, !dbg !6351
@.str.47 = private unnamed_addr constant [47 x i8] c"%s: Timeout waiting for dma_req to be cleared\0A\00", align 1
@__func__.dw_mci_reset = private unnamed_addr constant [13 x i8] c"dw_mci_reset\00", align 1
@.str.48 = private unnamed_addr constant [76 x i8] c"%s: fifo/dma reset bits didn't clear but ciu was reset, doing clock update\0A\00", align 1
@dw_mci_ops = internal constant %struct.mmc_host_ops { void (%struct.mmc_host*, %struct.mmc_request*, i32)* @dw_mci_post_req, void (%struct.mmc_host*, %struct.mmc_request*)* @dw_mci_pre_req, void (%struct.mmc_host*, %struct.mmc_request*)* @dw_mci_request, i32 (%struct.mmc_host*, %struct.mmc_request*)* null, void (%struct.mmc_host*, %struct.mmc_ios*)* @dw_mci_set_ios, i32 (%struct.mmc_host*)* @dw_mci_get_ro, i32 (%struct.mmc_host*)* @dw_mci_get_cd, void (%struct.mmc_host*, i32)* @dw_mci_enable_sdio_irq, void (%struct.mmc_host*)* @dw_mci_ack_sdio_irq, void (%struct.mmc_host*, %struct.mmc_card*)* @dw_mci_init_card, i32 (%struct.mmc_host*, %struct.mmc_ios*)* @dw_mci_switch_voltage, i32 (%struct.mmc_host*)* @dw_mci_card_busy, i32 (%struct.mmc_host*, i32)* @dw_mci_execute_tuning, i32 (%struct.mmc_host*, %struct.mmc_ios*)* @dw_mci_prepare_hs400_tuning, i32 (%struct.mmc_host*)* null, void (%struct.mmc_host*)* null, void (%struct.mmc_host*)* null, void (%struct.mmc_host*, %struct.mmc_ios*)* null, i32 (%struct.mmc_card*, i32, i32, i32, i32*)* null, void (%struct.mmc_host*)* @dw_mci_hw_reset, void (%struct.mmc_host*)* null, i32 (%struct.mmc_card*, i32, i32)* null }, align 8, !dbg !6356
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.49 = private unnamed_addr constant [32 x i8] c"Voltage change didn't complete\0A\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"mshc\00", align 1
@.str.51 = private unnamed_addr constant [26 x i8] c"invalid controller id %d\0A\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"card is polling.\0A\00", align 1
@.str.53 = private unnamed_addr constant [24 x i8] c"card is non-removable.\0A\00", align 1
@.str.54 = private unnamed_addr constant [33 x i8] c"failed to enable vmmc regulator\0A\00", align 1
@.str.55 = private unnamed_addr constant [24 x i8] c"failed to enable vqmmc\0A\00", align 1
@.str.56 = private unnamed_addr constant [66 x i8] c"Bus speed (slot %d) = %dHz (slot req %dHz, actual %dHZ div = %d)\0A\00", align 1
@.str.57 = private unnamed_addr constant [56 x i8] c"\016Synopsys Designware Multimedia Card Interface Driver\0A\00", align 1
@llvm.used = appending global [8 x i8*] [i8* bitcast (void ()* @dw_mci_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_dw_mci_init320 to i8*), i8* bitcast (void ()** @__exitcall_dw_mci_exit to i8*), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__UNIQUE_ID_description321, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_author322, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_author323, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_file324, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license325, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dw_mci_probe(%struct.dw_mci* %host) #0 !dbg !6364 {
entry:
  %lock.addr.i235 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i235, metadata !6365, metadata !DIExpression()), !dbg !6371
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !6374
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  %width = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %fifo_size = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral89 = alloca %struct.spinlock, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !6377, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !6379, metadata !DIExpression()), !dbg !6380
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6381
  %drv_data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 38, !dbg !6382
  %1 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data1, align 8, !dbg !6382
  store %struct.dw_mci_drv_data* %1, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6380
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6383, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6387, metadata !DIExpression()), !dbg !6388
  store i32 0, i32* %ret, align 4, !dbg !6388
  call void @llvm.dbg.declare(metadata i32* %fifo_size, metadata !6389, metadata !DIExpression()), !dbg !6390
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6391
  %pdata = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 37, !dbg !6393
  %3 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6393
  %tobool = icmp ne %struct.dw_mci_board* %3, null, !dbg !6391
  br i1 %tobool, label %if.end9, label %if.then, !dbg !6394

if.then:                                          ; preds = %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6395
  %call = call %struct.dw_mci_board* @dw_mci_parse_dt(%struct.dw_mci* %4) #12, !dbg !6397
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6398
  %pdata2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 37, !dbg !6399
  store %struct.dw_mci_board* %call, %struct.dw_mci_board** %pdata2, align 8, !dbg !6400
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6401
  %pdata3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 37, !dbg !6403
  %7 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata3, align 8, !dbg !6403
  %8 = bitcast %struct.dw_mci_board* %7 to i8*, !dbg !6401
  %call4 = call zeroext i1 @IS_ERR(i8* %8) #12, !dbg !6404
  br i1 %call4, label %if.then5, label %if.end, !dbg !6405

if.then5:                                         ; preds = %if.then
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6406
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 36, !dbg !6407
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6407
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6408
  %pdata6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 37, !dbg !6409
  %12 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata6, align 8, !dbg !6409
  %13 = bitcast %struct.dw_mci_board* %12 to i8*, !dbg !6408
  %call7 = call i64 @PTR_ERR(i8* %13) #12, !dbg !6410
  %conv = trunc i64 %call7 to i32, !dbg !6410
  %call8 = call i32 (%struct.device*, i32, i8*, ...) @dev_err_probe(%struct.device* %10, i32 %conv, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #12, !dbg !6411
  store i32 %call8, i32* %retval, align 4, !dbg !6412
  br label %return, !dbg !6412

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !6413

if.end9:                                          ; preds = %if.end, %entry
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6414
  %dev10 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 36, !dbg !6415
  %15 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !6415
  %call11 = call %struct.clk* @devm_clk_get(%struct.device* %15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !6416
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6417
  %biu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 40, !dbg !6418
  store %struct.clk* %call11, %struct.clk** %biu_clk, align 8, !dbg !6419
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6420
  %biu_clk12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 40, !dbg !6422
  %18 = load %struct.clk*, %struct.clk** %biu_clk12, align 8, !dbg !6422
  %19 = bitcast %struct.clk* %18 to i8*, !dbg !6420
  %call13 = call zeroext i1 @IS_ERR(i8* %19) #12, !dbg !6423
  br i1 %call13, label %if.then14, label %if.else, !dbg !6424

if.then14:                                        ; preds = %if.end9
  br label %if.end21, !dbg !6425

if.else:                                          ; preds = %if.end9
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6427
  %biu_clk15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 40, !dbg !6429
  %21 = load %struct.clk*, %struct.clk** %biu_clk15, align 8, !dbg !6429
  %call16 = call i32 @clk_prepare_enable(%struct.clk* %21) #12, !dbg !6430
  store i32 %call16, i32* %ret, align 4, !dbg !6431
  %22 = load i32, i32* %ret, align 4, !dbg !6432
  %tobool17 = icmp ne i32 %22, 0, !dbg !6432
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6434

if.then18:                                        ; preds = %if.else
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6435
  %dev19 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 36, !dbg !6435
  %24 = load %struct.device*, %struct.device** %dev19, align 8, !dbg !6435
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %24, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !6435
  %25 = load i32, i32* %ret, align 4, !dbg !6437
  store i32 %25, i32* %retval, align 4, !dbg !6438
  br label %return, !dbg !6438

if.end20:                                         ; preds = %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then14
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6439
  %dev22 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 36, !dbg !6440
  %27 = load %struct.device*, %struct.device** %dev22, align 8, !dbg !6440
  %call23 = call %struct.clk* @devm_clk_get(%struct.device* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !6441
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6442
  %ciu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 41, !dbg !6443
  store %struct.clk* %call23, %struct.clk** %ciu_clk, align 8, !dbg !6444
  %29 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6445
  %ciu_clk24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %29, i32 0, i32 41, !dbg !6447
  %30 = load %struct.clk*, %struct.clk** %ciu_clk24, align 8, !dbg !6447
  %31 = bitcast %struct.clk* %30 to i8*, !dbg !6445
  %call25 = call zeroext i1 @IS_ERR(i8* %31) #12, !dbg !6448
  br i1 %call25, label %if.then26, label %if.else29, !dbg !6449

if.then26:                                        ; preds = %if.end21
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6450
  %pdata27 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %32, i32 0, i32 37, !dbg !6452
  %33 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata27, align 8, !dbg !6452
  %bus_hz = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %33, i32 0, i32 0, !dbg !6453
  %34 = load i32, i32* %bus_hz, align 8, !dbg !6453
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6454
  %bus_hz28 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 32, !dbg !6455
  store i32 %34, i32* %bus_hz28, align 8, !dbg !6456
  br label %if.end56, !dbg !6457

if.else29:                                        ; preds = %if.end21
  %36 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6458
  %ciu_clk30 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %36, i32 0, i32 41, !dbg !6460
  %37 = load %struct.clk*, %struct.clk** %ciu_clk30, align 8, !dbg !6460
  %call31 = call i32 @clk_prepare_enable(%struct.clk* %37) #12, !dbg !6461
  store i32 %call31, i32* %ret, align 4, !dbg !6462
  %38 = load i32, i32* %ret, align 4, !dbg !6463
  %tobool32 = icmp ne i32 %38, 0, !dbg !6463
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !6465

if.then33:                                        ; preds = %if.else29
  %39 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6466
  %dev34 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %39, i32 0, i32 36, !dbg !6466
  %40 = load %struct.device*, %struct.device** %dev34, align 8, !dbg !6466
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %40, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !6466
  br label %err_clk_biu, !dbg !6468

if.end35:                                         ; preds = %if.else29
  %41 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6469
  %pdata36 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %41, i32 0, i32 37, !dbg !6471
  %42 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata36, align 8, !dbg !6471
  %bus_hz37 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %42, i32 0, i32 0, !dbg !6472
  %43 = load i32, i32* %bus_hz37, align 8, !dbg !6472
  %tobool38 = icmp ne i32 %43, 0, !dbg !6469
  br i1 %tobool38, label %if.then39, label %if.end51, !dbg !6473

if.then39:                                        ; preds = %if.end35
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6474
  %ciu_clk40 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 41, !dbg !6476
  %45 = load %struct.clk*, %struct.clk** %ciu_clk40, align 8, !dbg !6476
  %46 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6477
  %pdata41 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %46, i32 0, i32 37, !dbg !6478
  %47 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata41, align 8, !dbg !6478
  %bus_hz42 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %47, i32 0, i32 0, !dbg !6479
  %48 = load i32, i32* %bus_hz42, align 8, !dbg !6479
  %conv43 = zext i32 %48 to i64, !dbg !6477
  %call44 = call i32 @clk_set_rate(%struct.clk* %45, i64 %conv43) #12, !dbg !6480
  store i32 %call44, i32* %ret, align 4, !dbg !6481
  %49 = load i32, i32* %ret, align 4, !dbg !6482
  %tobool45 = icmp ne i32 %49, 0, !dbg !6482
  br i1 %tobool45, label %if.then46, label %if.end50, !dbg !6484

if.then46:                                        ; preds = %if.then39
  %50 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6485
  %dev47 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %50, i32 0, i32 36, !dbg !6485
  %51 = load %struct.device*, %struct.device** %dev47, align 8, !dbg !6485
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6485
  %pdata48 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %52, i32 0, i32 37, !dbg !6485
  %53 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata48, align 8, !dbg !6485
  %bus_hz49 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %53, i32 0, i32 0, !dbg !6485
  %54 = load i32, i32* %bus_hz49, align 8, !dbg !6485
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %51, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i32 %54) #13, !dbg !6485
  br label %if.end50, !dbg !6485

if.end50:                                         ; preds = %if.then46, %if.then39
  br label %if.end51, !dbg !6486

if.end51:                                         ; preds = %if.end50, %if.end35
  %55 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6487
  %ciu_clk52 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %55, i32 0, i32 41, !dbg !6488
  %56 = load %struct.clk*, %struct.clk** %ciu_clk52, align 8, !dbg !6488
  %call53 = call i64 @clk_get_rate(%struct.clk* %56) #12, !dbg !6489
  %conv54 = trunc i64 %call53 to i32, !dbg !6489
  %57 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6490
  %bus_hz55 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %57, i32 0, i32 32, !dbg !6491
  store i32 %conv54, i32* %bus_hz55, align 8, !dbg !6492
  br label %if.end56

if.end56:                                         ; preds = %if.end51, %if.then26
  %58 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6493
  %bus_hz57 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %58, i32 0, i32 32, !dbg !6495
  %59 = load i32, i32* %bus_hz57, align 8, !dbg !6495
  %tobool58 = icmp ne i32 %59, 0, !dbg !6493
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !6496

if.then59:                                        ; preds = %if.end56
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6497
  %dev60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 36, !dbg !6497
  %61 = load %struct.device*, %struct.device** %dev60, align 8, !dbg !6497
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %61, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !6497
  store i32 -19, i32* %ret, align 4, !dbg !6499
  br label %err_clk_ciu, !dbg !6500

if.end61:                                         ; preds = %if.end56
  %62 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6501
  %pdata62 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %62, i32 0, i32 37, !dbg !6503
  %63 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata62, align 8, !dbg !6503
  %rstc = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %63, i32 0, i32 6, !dbg !6504
  %64 = load %struct.reset_control*, %struct.reset_control** %rstc, align 8, !dbg !6504
  %65 = bitcast %struct.reset_control* %64 to i8*, !dbg !6501
  %call63 = call zeroext i1 @IS_ERR(i8* %65) #12, !dbg !6505
  br i1 %call63, label %if.end71, label %if.then64, !dbg !6506

if.then64:                                        ; preds = %if.end61
  %66 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6507
  %pdata65 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %66, i32 0, i32 37, !dbg !6509
  %67 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata65, align 8, !dbg !6509
  %rstc66 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %67, i32 0, i32 6, !dbg !6510
  %68 = load %struct.reset_control*, %struct.reset_control** %rstc66, align 8, !dbg !6510
  %call67 = call i32 @reset_control_assert(%struct.reset_control* %68) #12, !dbg !6511
  call void @usleep_range(i64 10, i64 50) #12, !dbg !6512
  %69 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6513
  %pdata68 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %69, i32 0, i32 37, !dbg !6514
  %70 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata68, align 8, !dbg !6514
  %rstc69 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %70, i32 0, i32 6, !dbg !6515
  %71 = load %struct.reset_control*, %struct.reset_control** %rstc69, align 8, !dbg !6515
  %call70 = call i32 @reset_control_deassert(%struct.reset_control* %71) #12, !dbg !6516
  br label %if.end71, !dbg !6517

if.end71:                                         ; preds = %if.then64, %if.end61
  %72 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6518
  %tobool72 = icmp ne %struct.dw_mci_drv_data* %72, null, !dbg !6518
  br i1 %tobool72, label %land.lhs.true, label %if.end83, !dbg !6520

land.lhs.true:                                    ; preds = %if.end71
  %73 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6521
  %init = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %73, i32 0, i32 2, !dbg !6522
  %init73 = bitcast {}** %init to i32 (%struct.dw_mci*)**, !dbg !6522
  %74 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %init73, align 8, !dbg !6522
  %tobool74 = icmp ne i32 (%struct.dw_mci*)* %74, null, !dbg !6521
  br i1 %tobool74, label %if.then75, label %if.end83, !dbg !6523

if.then75:                                        ; preds = %land.lhs.true
  %75 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6524
  %init76 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %75, i32 0, i32 2, !dbg !6526
  %init77 = bitcast {}** %init76 to i32 (%struct.dw_mci*)**, !dbg !6526
  %76 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %init77, align 8, !dbg !6526
  %77 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6527
  %call78 = call i32 %76(%struct.dw_mci* %77) #12, !dbg !6524
  store i32 %call78, i32* %ret, align 4, !dbg !6528
  %78 = load i32, i32* %ret, align 4, !dbg !6529
  %tobool79 = icmp ne i32 %78, 0, !dbg !6529
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !6531

if.then80:                                        ; preds = %if.then75
  %79 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6532
  %dev81 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %79, i32 0, i32 36, !dbg !6532
  %80 = load %struct.device*, %struct.device** %dev81, align 8, !dbg !6532
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %80, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0)) #13, !dbg !6532
  br label %err_clk_ciu, !dbg !6534

if.end82:                                         ; preds = %if.then75
  br label %if.end83, !dbg !6535

if.end83:                                         ; preds = %if.end82, %land.lhs.true, %if.end71
  %81 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6536
  %cmd11_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %81, i32 0, i32 54, !dbg !6536
  call void @init_timer_key(%struct.timer_list* %cmd11_timer, void (%struct.timer_list*)* @dw_mci_cmd11_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !6536
  %82 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6537
  %cto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %82, i32 0, i32 55, !dbg !6537
  call void @init_timer_key(%struct.timer_list* %cto_timer, void (%struct.timer_list*)* @dw_mci_cto_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !6537
  %83 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6538
  %dto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %83, i32 0, i32 56, !dbg !6538
  call void @init_timer_key(%struct.timer_list* %dto_timer, void (%struct.timer_list*)* @dw_mci_dto_timer, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !6538
  br label %do.body, !dbg !6539

do.body:                                          ; preds = %if.end83
  %84 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6540
  %lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %84, i32 0, i32 0, !dbg !6540
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %85 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6541
  %86 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %85, i32 0, i32 0, !dbg !6542
  %rlock.i = bitcast %union.anon* %86 to %struct.raw_spinlock*, !dbg !6542
  %87 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6540
  %lock85 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %87, i32 0, i32 0, !dbg !6540
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6540
  %rlock = bitcast %union.anon* %88 to %struct.raw_spinlock*, !dbg !6540
  %89 = bitcast %struct.spinlock* %lock85 to i8*, !dbg !6540
  %90 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 1 %90, i64 0, i1 false), !dbg !6540
  br label %do.end, !dbg !6540

do.end:                                           ; preds = %do.body
  br label %do.body86, !dbg !6543

do.body86:                                        ; preds = %do.end
  %91 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6544
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %91, i32 0, i32 1, !dbg !6544
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i235, align 8
  %92 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i235, align 8, !dbg !6545
  %93 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %92, i32 0, i32 0, !dbg !6546
  %rlock.i236 = bitcast %union.anon* %93 to %struct.raw_spinlock*, !dbg !6546
  %94 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6544
  %irq_lock88 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %94, i32 0, i32 1, !dbg !6544
  %95 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral89, i32 0, i32 0, !dbg !6544
  %rlock90 = bitcast %union.anon* %95 to %struct.raw_spinlock*, !dbg !6544
  %96 = bitcast %struct.spinlock* %irq_lock88 to i8*, !dbg !6544
  %97 = bitcast %struct.spinlock* %.compoundliteral89 to i8*, !dbg !6544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 1 %97, i64 0, i1 false), !dbg !6544
  br label %do.end91, !dbg !6544

do.end91:                                         ; preds = %do.body86
  %98 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6547
  %queue = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %98, i32 0, i32 31, !dbg !6548
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #12, !dbg !6549
  %99 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6550
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %99, i32 0, i32 2, !dbg !6550
  %100 = load i8*, i8** %regs, align 8, !dbg !6550
  %add.ptr = getelementptr i8, i8* %100, i64 112, !dbg !6550
  %call92 = call i32 @__readl(i8* %add.ptr) #12, !dbg !6550
  %shr = lshr i32 %call92, 7, !dbg !6550
  %and = and i32 %shr, 7, !dbg !6550
  store i32 %and, i32* %i, align 4, !dbg !6551
  %101 = load i32, i32* %i, align 4, !dbg !6552
  %tobool93 = icmp ne i32 %101, 0, !dbg !6552
  br i1 %tobool93, label %if.else95, label %if.then94, !dbg !6554

if.then94:                                        ; preds = %do.end91
  %102 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6555
  %push_data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %102, i32 0, i32 48, !dbg !6557
  store void (%struct.dw_mci*, i8*, i32)* @dw_mci_push_data16, void (%struct.dw_mci*, i8*, i32)** %push_data, align 8, !dbg !6558
  %103 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6559
  %pull_data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %103, i32 0, i32 49, !dbg !6560
  store void (%struct.dw_mci*, i8*, i32)* @dw_mci_pull_data16, void (%struct.dw_mci*, i8*, i32)** %pull_data, align 8, !dbg !6561
  store i32 16, i32* %width, align 4, !dbg !6562
  %104 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6563
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %104, i32 0, i32 44, !dbg !6564
  store i32 1, i32* %data_shift, align 4, !dbg !6565
  br label %if.end138, !dbg !6566

if.else95:                                        ; preds = %do.end91
  %105 = load i32, i32* %i, align 4, !dbg !6567
  %cmp = icmp eq i32 %105, 2, !dbg !6569
  br i1 %cmp, label %if.then97, label %if.else101, !dbg !6570

if.then97:                                        ; preds = %if.else95
  %106 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6571
  %push_data98 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %106, i32 0, i32 48, !dbg !6573
  store void (%struct.dw_mci*, i8*, i32)* @dw_mci_push_data64, void (%struct.dw_mci*, i8*, i32)** %push_data98, align 8, !dbg !6574
  %107 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6575
  %pull_data99 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %107, i32 0, i32 49, !dbg !6576
  store void (%struct.dw_mci*, i8*, i32)* @dw_mci_pull_data64, void (%struct.dw_mci*, i8*, i32)** %pull_data99, align 8, !dbg !6577
  store i32 64, i32* %width, align 4, !dbg !6578
  %108 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6579
  %data_shift100 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %108, i32 0, i32 44, !dbg !6580
  store i32 3, i32* %data_shift100, align 4, !dbg !6581
  br label %if.end137, !dbg !6582

if.else101:                                       ; preds = %if.else95
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6583, metadata !DIExpression()), !dbg !6586
  %109 = load i32, i32* %i, align 4, !dbg !6586
  %cmp102 = icmp ne i32 %109, 1, !dbg !6586
  %lnot = xor i1 %cmp102, true, !dbg !6586
  %lnot104 = xor i1 %lnot, true, !dbg !6586
  %lnot.ext = zext i1 %lnot104 to i32, !dbg !6586
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6586
  %110 = load i32, i32* %__ret_warn_on, align 4, !dbg !6587
  %tobool105 = icmp ne i32 %110, 0, !dbg !6587
  %lnot106 = xor i1 %tobool105, true, !dbg !6587
  %lnot108 = xor i1 %lnot106, true, !dbg !6587
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !6587
  %conv110 = sext i32 %lnot.ext109 to i64, !dbg !6587
  %tobool111 = icmp ne i64 %conv110, 0, !dbg !6587
  br i1 %tobool111, label %if.then112, label %if.end127, !dbg !6586

if.then112:                                       ; preds = %if.else101
  br label %do.body113, !dbg !6587

do.body113:                                       ; preds = %if.then112
  br label %do.body114, !dbg !6589

do.body114:                                       ; preds = %do.body113
  br label %do.end115, !dbg !6591

do.end115:                                        ; preds = %do.body114
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.8, i64 0, i64 0)) #12, !dbg !6589
  br label %do.body116, !dbg !6589

do.body116:                                       ; preds = %do.end115
  br label %do.body117, !dbg !6593

do.body117:                                       ; preds = %do.body116
  br label %do.end118, !dbg !6595

do.end118:                                        ; preds = %do.body117
  br label %do.body119, !dbg !6593

do.body119:                                       ; preds = %do.end118
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 3250, i32 2313, i64 12) #8, !dbg !6597, !srcloc !6599
  br label %do.end120, !dbg !6597

do.end120:                                        ; preds = %do.body119
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 319) #8, !dbg !6600, !srcloc !6602
  br label %do.body121, !dbg !6593

do.body121:                                       ; preds = %do.end120
  br label %do.end122, !dbg !6603

do.end122:                                        ; preds = %do.body121
  br label %do.end123, !dbg !6593

do.end123:                                        ; preds = %do.end122
  br label %do.body124, !dbg !6589

do.body124:                                       ; preds = %do.end123
  br label %do.end125, !dbg !6605

do.end125:                                        ; preds = %do.body124
  br label %do.end126, !dbg !6589

do.end126:                                        ; preds = %do.end125
  br label %if.end127, !dbg !6589

if.end127:                                        ; preds = %do.end126, %if.else101
  %111 = load i32, i32* %__ret_warn_on, align 4, !dbg !6586
  %tobool128 = icmp ne i32 %111, 0, !dbg !6586
  %lnot129 = xor i1 %tobool128, true, !dbg !6586
  %lnot131 = xor i1 %lnot129, true, !dbg !6586
  %lnot.ext132 = zext i1 %lnot131 to i32, !dbg !6586
  %conv133 = sext i32 %lnot.ext132 to i64, !dbg !6586
  store i64 %conv133, i64* %tmp, align 8, !dbg !6587
  %112 = load i64, i64* %tmp, align 8, !dbg !6586
  %113 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6607
  %push_data134 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %113, i32 0, i32 48, !dbg !6608
  store void (%struct.dw_mci*, i8*, i32)* @dw_mci_push_data32, void (%struct.dw_mci*, i8*, i32)** %push_data134, align 8, !dbg !6609
  %114 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6610
  %pull_data135 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %114, i32 0, i32 49, !dbg !6611
  store void (%struct.dw_mci*, i8*, i32)* @dw_mci_pull_data32, void (%struct.dw_mci*, i8*, i32)** %pull_data135, align 8, !dbg !6612
  store i32 32, i32* %width, align 4, !dbg !6613
  %115 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6614
  %data_shift136 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %115, i32 0, i32 44, !dbg !6615
  store i32 2, i32* %data_shift136, align 4, !dbg !6616
  br label %if.end137

if.end137:                                        ; preds = %if.end127, %if.then97
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then94
  %116 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6617
  %call139 = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %116, i32 7) #12, !dbg !6619
  br i1 %call139, label %if.end141, label %if.then140, !dbg !6620

if.then140:                                       ; preds = %if.end138
  store i32 -19, i32* %ret, align 4, !dbg !6621
  br label %err_clk_ciu, !dbg !6623

if.end141:                                        ; preds = %if.end138
  %117 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6624
  %pdata142 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %117, i32 0, i32 37, !dbg !6625
  %118 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata142, align 8, !dbg !6625
  %dma_ops = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %118, i32 0, i32 7, !dbg !6626
  %119 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !6626
  %120 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6627
  %dma_ops143 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %120, i32 0, i32 19, !dbg !6628
  store %struct.dw_mci_dma_ops* %119, %struct.dw_mci_dma_ops** %dma_ops143, align 8, !dbg !6629
  %121 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6630
  call void @dw_mci_init_dma(%struct.dw_mci* %121) #12, !dbg !6631
  %122 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6632
  %regs144 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %122, i32 0, i32 2, !dbg !6632
  %123 = load i8*, i8** %regs144, align 8, !dbg !6632
  %add.ptr145 = getelementptr i8, i8* %123, i64 68, !dbg !6632
  call void @__writel(i32 -1, i8* %add.ptr145) #12, !dbg !6632
  %124 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6633
  %regs146 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %124, i32 0, i32 2, !dbg !6633
  %125 = load i8*, i8** %regs146, align 8, !dbg !6633
  %add.ptr147 = getelementptr i8, i8* %125, i64 36, !dbg !6633
  call void @__writel(i32 0, i8* %add.ptr147) #12, !dbg !6633
  %126 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6634
  %regs148 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %126, i32 0, i32 2, !dbg !6634
  %127 = load i8*, i8** %regs148, align 8, !dbg !6634
  %add.ptr149 = getelementptr i8, i8* %127, i64 20, !dbg !6634
  call void @__writel(i32 -1, i8* %add.ptr149) #12, !dbg !6634
  %128 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6635
  %pdata150 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %128, i32 0, i32 37, !dbg !6637
  %129 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata150, align 8, !dbg !6637
  %fifo_depth = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %129, i32 0, i32 4, !dbg !6638
  %130 = load i32, i32* %fifo_depth, align 8, !dbg !6638
  %tobool151 = icmp ne i32 %130, 0, !dbg !6635
  br i1 %tobool151, label %if.else158, label %if.then152, !dbg !6639

if.then152:                                       ; preds = %if.end141
  %131 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6640
  %regs153 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %131, i32 0, i32 2, !dbg !6640
  %132 = load i8*, i8** %regs153, align 8, !dbg !6640
  %add.ptr154 = getelementptr i8, i8* %132, i64 76, !dbg !6640
  %call155 = call i32 @__readl(i8* %add.ptr154) #12, !dbg !6640
  store i32 %call155, i32* %fifo_size, align 4, !dbg !6642
  %133 = load i32, i32* %fifo_size, align 4, !dbg !6643
  %shr156 = lshr i32 %133, 16, !dbg !6644
  %and157 = and i32 %shr156, 4095, !dbg !6645
  %add = add i32 1, %and157, !dbg !6646
  store i32 %add, i32* %fifo_size, align 4, !dbg !6647
  br label %if.end161, !dbg !6648

if.else158:                                       ; preds = %if.end141
  %134 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6649
  %pdata159 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %134, i32 0, i32 37, !dbg !6651
  %135 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata159, align 8, !dbg !6651
  %fifo_depth160 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %135, i32 0, i32 4, !dbg !6652
  %136 = load i32, i32* %fifo_depth160, align 8, !dbg !6652
  store i32 %136, i32* %fifo_size, align 4, !dbg !6653
  br label %if.end161

if.end161:                                        ; preds = %if.else158, %if.then152
  %137 = load i32, i32* %fifo_size, align 4, !dbg !6654
  %138 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6655
  %fifo_depth162 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %138, i32 0, i32 43, !dbg !6656
  store i32 %137, i32* %fifo_depth162, align 8, !dbg !6657
  %139 = load i32, i32* %fifo_size, align 4, !dbg !6658
  %div = udiv i32 %139, 2, !dbg !6658
  %sub = sub i32 %div, 1, !dbg !6658
  %and163 = and i32 %sub, 4095, !dbg !6658
  %shl = shl i32 %and163, 16, !dbg !6658
  %or = or i32 536870912, %shl, !dbg !6658
  %140 = load i32, i32* %fifo_size, align 4, !dbg !6658
  %div164 = udiv i32 %140, 2, !dbg !6658
  %and165 = and i32 %div164, 4095, !dbg !6658
  %or166 = or i32 %or, %and165, !dbg !6658
  %141 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6659
  %fifoth_val = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %141, i32 0, i32 34, !dbg !6660
  store i32 %or166, i32* %fifoth_val, align 8, !dbg !6661
  %142 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6662
  %fifoth_val167 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %142, i32 0, i32 34, !dbg !6662
  %143 = load i32, i32* %fifoth_val167, align 8, !dbg !6662
  %144 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6662
  %regs168 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %144, i32 0, i32 2, !dbg !6662
  %145 = load i8*, i8** %regs168, align 8, !dbg !6662
  %add.ptr169 = getelementptr i8, i8* %145, i64 76, !dbg !6662
  call void @__writel(i32 %143, i8* %add.ptr169) #12, !dbg !6662
  %146 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6663
  %regs170 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %146, i32 0, i32 2, !dbg !6663
  %147 = load i8*, i8** %regs170, align 8, !dbg !6663
  %add.ptr171 = getelementptr i8, i8* %147, i64 16, !dbg !6663
  call void @__writel(i32 0, i8* %add.ptr171) #12, !dbg !6663
  %148 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6664
  %regs172 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %148, i32 0, i32 2, !dbg !6664
  %149 = load i8*, i8** %regs172, align 8, !dbg !6664
  %add.ptr173 = getelementptr i8, i8* %149, i64 12, !dbg !6664
  call void @__writel(i32 0, i8* %add.ptr173) #12, !dbg !6664
  %150 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6665
  %regs174 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %150, i32 0, i32 2, !dbg !6665
  %151 = load i8*, i8** %regs174, align 8, !dbg !6665
  %add.ptr175 = getelementptr i8, i8* %151, i64 108, !dbg !6665
  %call176 = call i32 @__readl(i8* %add.ptr175) #12, !dbg !6665
  %and177 = and i32 %call176, 65535, !dbg !6665
  %conv178 = trunc i32 %and177 to i16, !dbg !6665
  %152 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6666
  %verid = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %152, i32 0, i32 35, !dbg !6667
  store i16 %conv178, i16* %verid, align 4, !dbg !6668
  %153 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6669
  %dev179 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %153, i32 0, i32 36, !dbg !6669
  %154 = load %struct.device*, %struct.device** %dev179, align 8, !dbg !6669
  %155 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6669
  %verid180 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %155, i32 0, i32 35, !dbg !6669
  %156 = load i16, i16* %verid180, align 4, !dbg !6669
  %conv181 = zext i16 %156 to i32, !dbg !6669
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %154, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i32 %conv181) #13, !dbg !6669
  %157 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6670
  %data_addr_override = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %157, i32 0, i32 4, !dbg !6672
  %158 = load i32, i32* %data_addr_override, align 8, !dbg !6672
  %tobool182 = icmp ne i32 %158, 0, !dbg !6670
  br i1 %tobool182, label %if.then183, label %if.else187, !dbg !6673

if.then183:                                       ; preds = %if.end161
  %159 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6674
  %regs184 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %159, i32 0, i32 2, !dbg !6675
  %160 = load i8*, i8** %regs184, align 8, !dbg !6675
  %161 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6676
  %data_addr_override185 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %161, i32 0, i32 4, !dbg !6677
  %162 = load i32, i32* %data_addr_override185, align 8, !dbg !6677
  %idx.ext = zext i32 %162 to i64, !dbg !6678
  %add.ptr186 = getelementptr i8, i8* %160, i64 %idx.ext, !dbg !6678
  %163 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6679
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %163, i32 0, i32 3, !dbg !6680
  store i8* %add.ptr186, i8** %fifo_reg, align 8, !dbg !6681
  br label %if.end201, !dbg !6679

if.else187:                                       ; preds = %if.end161
  %164 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6682
  %verid188 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %164, i32 0, i32 35, !dbg !6684
  %165 = load i16, i16* %verid188, align 4, !dbg !6684
  %conv189 = zext i16 %165 to i32, !dbg !6682
  %cmp190 = icmp slt i32 %conv189, 9226, !dbg !6685
  br i1 %cmp190, label %if.then192, label %if.else196, !dbg !6686

if.then192:                                       ; preds = %if.else187
  %166 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6687
  %regs193 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %166, i32 0, i32 2, !dbg !6688
  %167 = load i8*, i8** %regs193, align 8, !dbg !6688
  %add.ptr194 = getelementptr i8, i8* %167, i64 256, !dbg !6689
  %168 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6690
  %fifo_reg195 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %168, i32 0, i32 3, !dbg !6691
  store i8* %add.ptr194, i8** %fifo_reg195, align 8, !dbg !6692
  br label %if.end200, !dbg !6690

if.else196:                                       ; preds = %if.else187
  %169 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6693
  %regs197 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %169, i32 0, i32 2, !dbg !6694
  %170 = load i8*, i8** %regs197, align 8, !dbg !6694
  %add.ptr198 = getelementptr i8, i8* %170, i64 512, !dbg !6695
  %171 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6696
  %fifo_reg199 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %171, i32 0, i32 3, !dbg !6697
  store i8* %add.ptr198, i8** %fifo_reg199, align 8, !dbg !6698
  br label %if.end200

if.end200:                                        ; preds = %if.else196, %if.then192
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.then183
  %172 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6699
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %172, i32 0, i32 27, !dbg !6700
  %173 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6701
  %174 = ptrtoint %struct.dw_mci* %173 to i64, !dbg !6702
  call void @tasklet_init(%struct.tasklet_struct* %tasklet, void (i64)* @dw_mci_tasklet_func, i64 %174) #12, !dbg !6703
  %175 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6704
  %dev202 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %175, i32 0, i32 36, !dbg !6705
  %176 = load %struct.device*, %struct.device** %dev202, align 8, !dbg !6705
  %177 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6706
  %irq = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %177, i32 0, i32 52, !dbg !6707
  %178 = load i32, i32* %irq, align 8, !dbg !6707
  %179 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6708
  %irq_flags = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %179, i32 0, i32 51, !dbg !6709
  %180 = load i64, i64* %irq_flags, align 8, !dbg !6709
  %181 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6710
  %182 = bitcast %struct.dw_mci* %181 to i8*, !dbg !6710
  %call203 = call i32 @devm_request_irq(%struct.device* %176, i32 %178, i32 (i32, i8*)* @dw_mci_interrupt, i64 %180, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* %182) #12, !dbg !6711
  store i32 %call203, i32* %ret, align 4, !dbg !6712
  %183 = load i32, i32* %ret, align 4, !dbg !6713
  %tobool204 = icmp ne i32 %183, 0, !dbg !6713
  br i1 %tobool204, label %if.then205, label %if.end206, !dbg !6715

if.then205:                                       ; preds = %if.end201
  br label %err_dmaunmap, !dbg !6716

if.end206:                                        ; preds = %if.end201
  %184 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6717
  %regs207 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %184, i32 0, i32 2, !dbg !6717
  %185 = load i8*, i8** %regs207, align 8, !dbg !6717
  %add.ptr208 = getelementptr i8, i8* %185, i64 36, !dbg !6717
  call void @__writel(i32 47102, i8* %add.ptr208) #12, !dbg !6717
  %186 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6718
  %regs209 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %186, i32 0, i32 2, !dbg !6718
  %187 = load i8*, i8** %regs209, align 8, !dbg !6718
  %add.ptr210 = getelementptr i8, i8* %187, i64 0, !dbg !6718
  call void @__writel(i32 16, i8* %add.ptr210) #12, !dbg !6718
  %188 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6719
  %dev211 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %188, i32 0, i32 36, !dbg !6719
  %189 = load %struct.device*, %struct.device** %dev211, align 8, !dbg !6719
  %190 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6719
  %irq212 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %190, i32 0, i32 52, !dbg !6719
  %191 = load i32, i32* %irq212, align 8, !dbg !6719
  %192 = load i32, i32* %width, align 4, !dbg !6719
  %193 = load i32, i32* %fifo_size, align 4, !dbg !6719
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %189, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.12, i64 0, i64 0), i32 %191, i32 %192, i32 %193) #13, !dbg !6719
  %194 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6720
  %call213 = call i32 @dw_mci_init_slot(%struct.dw_mci* %194) #12, !dbg !6721
  store i32 %call213, i32* %ret, align 4, !dbg !6722
  %195 = load i32, i32* %ret, align 4, !dbg !6723
  %tobool214 = icmp ne i32 %195, 0, !dbg !6723
  br i1 %tobool214, label %if.then215, label %if.end216, !dbg !6725

if.then215:                                       ; preds = %if.end206
  br label %err_dmaunmap, !dbg !6726

if.end216:                                        ; preds = %if.end206
  %196 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6728
  call void @dw_mci_enable_cd(%struct.dw_mci* %196) #12, !dbg !6729
  store i32 0, i32* %retval, align 4, !dbg !6730
  br label %return, !dbg !6730

err_dmaunmap:                                     ; preds = %if.then215, %if.then205
  call void @llvm.dbg.label(metadata !6731), !dbg !6732
  %197 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6733
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %197, i32 0, i32 14, !dbg !6735
  %198 = load i32, i32* %use_dma, align 8, !dbg !6735
  %tobool217 = icmp ne i32 %198, 0, !dbg !6733
  br i1 %tobool217, label %land.lhs.true218, label %if.end224, !dbg !6736

land.lhs.true218:                                 ; preds = %err_dmaunmap
  %199 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6737
  %dma_ops219 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %199, i32 0, i32 19, !dbg !6738
  %200 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops219, align 8, !dbg !6738
  %exit = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %200, i32 0, i32 5, !dbg !6739
  %201 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %exit, align 8, !dbg !6739
  %tobool220 = icmp ne void (%struct.dw_mci*)* %201, null, !dbg !6737
  br i1 %tobool220, label %if.then221, label %if.end224, !dbg !6740

if.then221:                                       ; preds = %land.lhs.true218
  %202 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6741
  %dma_ops222 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %202, i32 0, i32 19, !dbg !6742
  %203 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops222, align 8, !dbg !6742
  %exit223 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %203, i32 0, i32 5, !dbg !6743
  %204 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %exit223, align 8, !dbg !6743
  %205 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6744
  call void %204(%struct.dw_mci* %205) #12, !dbg !6741
  br label %if.end224, !dbg !6741

if.end224:                                        ; preds = %if.then221, %land.lhs.true218, %err_dmaunmap
  %206 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6745
  %pdata225 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %206, i32 0, i32 37, !dbg !6747
  %207 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata225, align 8, !dbg !6747
  %rstc226 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %207, i32 0, i32 6, !dbg !6748
  %208 = load %struct.reset_control*, %struct.reset_control** %rstc226, align 8, !dbg !6748
  %209 = bitcast %struct.reset_control* %208 to i8*, !dbg !6745
  %call227 = call zeroext i1 @IS_ERR(i8* %209) #12, !dbg !6749
  br i1 %call227, label %if.end232, label %if.then228, !dbg !6750

if.then228:                                       ; preds = %if.end224
  %210 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6751
  %pdata229 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %210, i32 0, i32 37, !dbg !6752
  %211 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata229, align 8, !dbg !6752
  %rstc230 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %211, i32 0, i32 6, !dbg !6753
  %212 = load %struct.reset_control*, %struct.reset_control** %rstc230, align 8, !dbg !6753
  %call231 = call i32 @reset_control_assert(%struct.reset_control* %212) #12, !dbg !6754
  br label %if.end232, !dbg !6754

if.end232:                                        ; preds = %if.then228, %if.end224
  br label %err_clk_ciu, !dbg !6755

err_clk_ciu:                                      ; preds = %if.end232, %if.then140, %if.then80, %if.then59
  call void @llvm.dbg.label(metadata !6756), !dbg !6757
  %213 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6758
  %ciu_clk233 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %213, i32 0, i32 41, !dbg !6759
  %214 = load %struct.clk*, %struct.clk** %ciu_clk233, align 8, !dbg !6759
  call void @clk_disable_unprepare(%struct.clk* %214) #12, !dbg !6760
  br label %err_clk_biu, !dbg !6760

err_clk_biu:                                      ; preds = %err_clk_ciu, %if.then33
  call void @llvm.dbg.label(metadata !6761), !dbg !6762
  %215 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6763
  %biu_clk234 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %215, i32 0, i32 40, !dbg !6764
  %216 = load %struct.clk*, %struct.clk** %biu_clk234, align 8, !dbg !6764
  call void @clk_disable_unprepare(%struct.clk* %216) #12, !dbg !6765
  %217 = load i32, i32* %ret, align 4, !dbg !6766
  store i32 %217, i32* %retval, align 4, !dbg !6767
  br label %return, !dbg !6767

return:                                           ; preds = %err_clk_biu, %if.end216, %if.then18, %if.then5
  %218 = load i32, i32* %retval, align 4, !dbg !6768
  ret i32 %218, !dbg !6768
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dw_mci_board* @dw_mci_parse_dt(%struct.dw_mci* %host) #0 !dbg !6769 {
entry:
  %retval = alloca %struct.dw_mci_board*, align 8
  %host.addr = alloca %struct.dw_mci*, align 8
  %pdata = alloca %struct.dw_mci_board*, align 8
  %dev = alloca %struct.device*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  %ret = alloca i32, align 4
  %clock_frequency = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !6772, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.declare(metadata %struct.dw_mci_board** %pdata, metadata !6774, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6776, metadata !DIExpression()), !dbg !6777
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6778
  %dev1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 36, !dbg !6779
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !6779
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !6777
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !6780, metadata !DIExpression()), !dbg !6781
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6782
  %drv_data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 38, !dbg !6783
  %3 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data2, align 8, !dbg !6783
  store %struct.dw_mci_drv_data* %3, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6781
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.declare(metadata i32* %clock_frequency, metadata !6786, metadata !DIExpression()), !dbg !6787
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6788
  %call = call i8* @devm_kzalloc(%struct.device* %4, i64 48, i32 3264) #12, !dbg !6789
  %5 = bitcast i8* %call to %struct.dw_mci_board*, !dbg !6789
  store %struct.dw_mci_board* %5, %struct.dw_mci_board** %pdata, align 8, !dbg !6790
  %6 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6791
  %tobool = icmp ne %struct.dw_mci_board* %6, null, !dbg !6791
  br i1 %tobool, label %if.end, label %if.then, !dbg !6793

if.then:                                          ; preds = %entry
  %call3 = call i8* @ERR_PTR(i64 -12) #12, !dbg !6794
  %7 = bitcast i8* %call3 to %struct.dw_mci_board*, !dbg !6794
  store %struct.dw_mci_board* %7, %struct.dw_mci_board** %retval, align 8, !dbg !6795
  br label %return, !dbg !6795

if.end:                                           ; preds = %entry
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6796
  %call4 = call %struct.reset_control* @devm_reset_control_get_optional_exclusive(%struct.device* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !6797
  %9 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6798
  %rstc = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %9, i32 0, i32 6, !dbg !6799
  store %struct.reset_control* %call4, %struct.reset_control** %rstc, align 8, !dbg !6800
  %10 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6801
  %rstc5 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %10, i32 0, i32 6, !dbg !6803
  %11 = load %struct.reset_control*, %struct.reset_control** %rstc5, align 8, !dbg !6803
  %12 = bitcast %struct.reset_control* %11 to i8*, !dbg !6801
  %call6 = call zeroext i1 @IS_ERR(i8* %12) #12, !dbg !6804
  br i1 %call6, label %if.then7, label %if.end13, !dbg !6805

if.then7:                                         ; preds = %if.end
  %13 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6806
  %rstc8 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %13, i32 0, i32 6, !dbg !6809
  %14 = load %struct.reset_control*, %struct.reset_control** %rstc8, align 8, !dbg !6809
  %15 = bitcast %struct.reset_control* %14 to i8*, !dbg !6806
  %call9 = call i64 @PTR_ERR(i8* %15) #12, !dbg !6810
  %cmp = icmp eq i64 %call9, -517, !dbg !6811
  br i1 %cmp, label %if.then10, label %if.end12, !dbg !6812

if.then10:                                        ; preds = %if.then7
  %call11 = call i8* @ERR_PTR(i64 -517) #12, !dbg !6813
  %16 = bitcast i8* %call11 to %struct.dw_mci_board*, !dbg !6813
  store %struct.dw_mci_board* %16, %struct.dw_mci_board** %retval, align 8, !dbg !6814
  br label %return, !dbg !6814

if.end12:                                         ; preds = %if.then7
  br label %if.end13, !dbg !6815

if.end13:                                         ; preds = %if.end12, %if.end
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6816
  %18 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6818
  %fifo_depth = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %18, i32 0, i32 4, !dbg !6819
  %call14 = call i32 @device_property_read_u32(%struct.device* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i32* %fifo_depth) #12, !dbg !6820
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6820
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6821

if.then16:                                        ; preds = %if.end13
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6822
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %19, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !6822
  br label %if.end17, !dbg !6822

if.end17:                                         ; preds = %if.then16, %if.end13
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6823
  %21 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6824
  %detect_delay_ms = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %21, i32 0, i32 5, !dbg !6825
  %call18 = call i32 @device_property_read_u32(%struct.device* %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i32* %detect_delay_ms) #12, !dbg !6826
  %22 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6827
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6828
  %data_addr_override = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 4, !dbg !6829
  %call19 = call i32 @device_property_read_u32(%struct.device* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i64 0, i64 0), i32* %data_addr_override) #12, !dbg !6830
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6831
  %call20 = call zeroext i1 @device_property_present(%struct.device* %24, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0)) #12, !dbg !6833
  br i1 %call20, label %if.then21, label %if.end22, !dbg !6834

if.then21:                                        ; preds = %if.end17
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6835
  %wm_aligned = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 5, !dbg !6836
  store i8 1, i8* %wm_aligned, align 4, !dbg !6837
  br label %if.end22, !dbg !6835

if.end22:                                         ; preds = %if.then21, %if.end17
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6838
  %call23 = call i32 @device_property_read_u32(%struct.device* %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i32* %clock_frequency) #12, !dbg !6840
  %tobool24 = icmp ne i32 %call23, 0, !dbg !6840
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !6841

if.then25:                                        ; preds = %if.end22
  %27 = load i32, i32* %clock_frequency, align 4, !dbg !6842
  %28 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6843
  %bus_hz = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %28, i32 0, i32 0, !dbg !6844
  store i32 %27, i32* %bus_hz, align 8, !dbg !6845
  br label %if.end26, !dbg !6843

if.end26:                                         ; preds = %if.then25, %if.end22
  %29 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6846
  %tobool27 = icmp ne %struct.dw_mci_drv_data* %29, null, !dbg !6846
  br i1 %tobool27, label %land.lhs.true, label %if.end38, !dbg !6848

land.lhs.true:                                    ; preds = %if.end26
  %30 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6849
  %parse_dt = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %30, i32 0, i32 4, !dbg !6850
  %parse_dt28 = bitcast {}** %parse_dt to i32 (%struct.dw_mci*)**, !dbg !6850
  %31 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %parse_dt28, align 8, !dbg !6850
  %tobool29 = icmp ne i32 (%struct.dw_mci*)* %31, null, !dbg !6849
  br i1 %tobool29, label %if.then30, label %if.end38, !dbg !6851

if.then30:                                        ; preds = %land.lhs.true
  %32 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !6852
  %parse_dt31 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %32, i32 0, i32 4, !dbg !6854
  %parse_dt32 = bitcast {}** %parse_dt31 to i32 (%struct.dw_mci*)**, !dbg !6854
  %33 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %parse_dt32, align 8, !dbg !6854
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !6855
  %call33 = call i32 %33(%struct.dw_mci* %34) #12, !dbg !6852
  store i32 %call33, i32* %ret, align 4, !dbg !6856
  %35 = load i32, i32* %ret, align 4, !dbg !6857
  %tobool34 = icmp ne i32 %35, 0, !dbg !6857
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !6859

if.then35:                                        ; preds = %if.then30
  %36 = load i32, i32* %ret, align 4, !dbg !6860
  %conv = sext i32 %36 to i64, !dbg !6860
  %call36 = call i8* @ERR_PTR(i64 %conv) #12, !dbg !6861
  %37 = bitcast i8* %call36 to %struct.dw_mci_board*, !dbg !6861
  store %struct.dw_mci_board* %37, %struct.dw_mci_board** %retval, align 8, !dbg !6862
  br label %return, !dbg !6862

if.end37:                                         ; preds = %if.then30
  br label %if.end38, !dbg !6863

if.end38:                                         ; preds = %if.end37, %land.lhs.true, %if.end26
  %38 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !6864
  store %struct.dw_mci_board* %38, %struct.dw_mci_board** %retval, align 8, !dbg !6865
  br label %return, !dbg !6865

return:                                           ; preds = %if.end38, %if.then35, %if.then10, %if.then
  %39 = load %struct.dw_mci_board*, %struct.dw_mci_board** %retval, align 8, !dbg !6866
  ret %struct.dw_mci_board* %39, !dbg !6866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !6867 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6871, metadata !DIExpression()), !dbg !6872
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6873
  %1 = ptrtoint i8* %0 to i64, !dbg !6873
  %2 = inttoptr i64 %1 to i8*, !dbg !6873
  %3 = ptrtoint i8* %2 to i64, !dbg !6873
  %cmp = icmp uge i64 %3, -4095, !dbg !6873
  %lnot = xor i1 %cmp, true, !dbg !6873
  %lnot1 = xor i1 %lnot, true, !dbg !6873
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6873
  %conv = sext i32 %lnot.ext to i64, !dbg !6873
  %tobool = icmp ne i64 %conv, 0, !dbg !6873
  ret i1 %tobool, !dbg !6874
}

; Function Attrs: noredzone
declare dso_local i32 @dev_err_probe(%struct.device*, i32, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !6875 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6880
  %1 = ptrtoint i8* %0 to i64, !dbg !6881
  ret i64 %1, !dbg !6882
}

; Function Attrs: noredzone
declare dso_local %struct.clk* @devm_clk_get(%struct.device*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_prepare_enable(%struct.clk* %clk) #0 !dbg !6883 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !6886, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6888, metadata !DIExpression()), !dbg !6889
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6890
  %call = call i32 @clk_prepare(%struct.clk* %0) #12, !dbg !6891
  store i32 %call, i32* %ret, align 4, !dbg !6892
  %1 = load i32, i32* %ret, align 4, !dbg !6893
  %tobool = icmp ne i32 %1, 0, !dbg !6893
  br i1 %tobool, label %if.then, label %if.end, !dbg !6895

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !6896
  store i32 %2, i32* %retval, align 4, !dbg !6897
  br label %return, !dbg !6897

if.end:                                           ; preds = %entry
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6898
  %call1 = call i32 @clk_enable(%struct.clk* %3) #12, !dbg !6899
  store i32 %call1, i32* %ret, align 4, !dbg !6900
  %4 = load i32, i32* %ret, align 4, !dbg !6901
  %tobool2 = icmp ne i32 %4, 0, !dbg !6901
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6903

if.then3:                                         ; preds = %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6904
  call void @clk_unprepare(%struct.clk* %5) #12, !dbg !6905
  br label %if.end4, !dbg !6905

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !6906
  store i32 %6, i32* %retval, align 4, !dbg !6907
  br label %return, !dbg !6907

return:                                           ; preds = %if.end4, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !6908
  ret i32 %7, !dbg !6908
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @clk_set_rate(%struct.clk*, i64) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i64 @clk_get_rate(%struct.clk*) #2

; Function Attrs: noredzone
declare dso_local i32 @reset_control_assert(%struct.reset_control*) #2

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @reset_control_deassert(%struct.reset_control*) #2

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_cmd11_timer(%struct.timer_list* %t) #0 !dbg !6909 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_mci*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !6912, metadata !DIExpression()), !dbg !6913
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6914, metadata !DIExpression()), !dbg !6916
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !6916
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !6916
  store i8* %1, i8** %__mptr, align 8, !dbg !6916
  br label %do.body, !dbg !6916

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6917

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6916
  %add.ptr = getelementptr i8, i8* %2, i64 -488, !dbg !6916
  %3 = bitcast i8* %add.ptr to %struct.dw_mci*, !dbg !6916
  store %struct.dw_mci* %3, %struct.dw_mci** %tmp, align 8, !dbg !6917
  %4 = load %struct.dw_mci*, %struct.dw_mci** %tmp, align 8, !dbg !6916
  store %struct.dw_mci* %4, %struct.dw_mci** %host, align 8, !dbg !6913
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6919
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 30, !dbg !6921
  %6 = load i32, i32* %state, align 8, !dbg !6921
  %cmp = icmp ne i32 %6, 6, !dbg !6922
  br i1 %cmp, label %if.then, label %if.end, !dbg !6923

if.then:                                          ; preds = %do.end
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6924
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 36, !dbg !6924
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6924
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %8, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !6924
  br label %return, !dbg !6926

if.end:                                           ; preds = %do.end
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6927
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 23, !dbg !6928
  store i32 256, i32* %cmd_status, align 8, !dbg !6929
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6930
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 28, !dbg !6931
  call void @set_bit(i64 0, i64* %pending_events) #12, !dbg !6932
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6933
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 27, !dbg !6934
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #12, !dbg !6935
  br label %return, !dbg !6936

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_cto_timer(%struct.timer_list* %t) #0 !dbg !6937 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !6938, metadata !DIExpression()), !dbg !6942
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !6945
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !6946
  %t.addr = alloca %struct.timer_list*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_mci*, align 8
  %irqflags = alloca i64, align 8
  %pending = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !6955, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6957, metadata !DIExpression()), !dbg !6959
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !6959
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !6959
  store i8* %1, i8** %__mptr, align 8, !dbg !6959
  br label %do.body, !dbg !6959

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6960

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6959
  %add.ptr = getelementptr i8, i8* %2, i64 -528, !dbg !6959
  %3 = bitcast i8* %add.ptr to %struct.dw_mci*, !dbg !6959
  store %struct.dw_mci* %3, %struct.dw_mci** %tmp, align 8, !dbg !6960
  %4 = load %struct.dw_mci*, %struct.dw_mci** %tmp, align 8, !dbg !6959
  store %struct.dw_mci* %4, %struct.dw_mci** %host, align 8, !dbg !6956
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata i32* %pending, metadata !6964, metadata !DIExpression()), !dbg !6965
  br label %do.body1, !dbg !6966

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6967

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6968, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6971, metadata !DIExpression()), !dbg !6970
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6970
  %conv = zext i1 %cmp to i32, !dbg !6970
  store i32 1, i32* %tmp3, align 4, !dbg !6970
  %5 = load i32, i32* %tmp3, align 4, !dbg !6970
  br label %do.body4, !dbg !6972

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6973

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6974

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6976, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6980, metadata !DIExpression()), !dbg !6979
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6979
  %conv10 = zext i1 %cmp9 to i32, !dbg !6979
  store i32 1, i32* %tmp11, align 4, !dbg !6979
  %6 = load i32, i32* %tmp11, align 4, !dbg !6979
  %call = call i64 @arch_local_irq_save() #12, !dbg !6981
  store i64 %call, i64* %irqflags, align 8, !dbg !6981
  br label %do.end12, !dbg !6981

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6974

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6973

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6982, !srcloc !6983
  br label %do.body15, !dbg !6982

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6984
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 1, !dbg !6984
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6985
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6986
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !6986
  br label %do.end17, !dbg !6984

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6982

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6973

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6972

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6967

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6987
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 2, !dbg !6987
  %11 = load i8*, i8** %regs, align 8, !dbg !6987
  %add.ptr22 = getelementptr i8, i8* %11, i64 64, !dbg !6987
  %call23 = call i32 @__readl(i8* %add.ptr22) #12, !dbg !6987
  store i32 %call23, i32* %pending, align 4, !dbg !6988
  %12 = load i32, i32* %pending, align 4, !dbg !6989
  %conv24 = zext i32 %12 to i64, !dbg !6989
  %and = and i64 %conv24, 4422, !dbg !6991
  %tobool = icmp ne i64 %and, 0, !dbg !6991
  br i1 %tobool, label %if.then, label %if.end, !dbg !6992

if.then:                                          ; preds = %do.end21
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6993
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 36, !dbg !6993
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6993
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %14, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !6993
  br label %exit, !dbg !6995

if.end:                                           ; preds = %do.end21
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !6996
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 28, !dbg !6998
  %call25 = call zeroext i1 @test_bit(i64 0, i64* %pending_events) #12, !dbg !6999
  br i1 %call25, label %if.then26, label %if.end28, !dbg !7000

if.then26:                                        ; preds = %if.end
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7001
  %dev27 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 36, !dbg !7001
  %17 = load %struct.device*, %struct.device** %dev27, align 8, !dbg !7001
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !7001
  br label %exit, !dbg !7003

if.end28:                                         ; preds = %if.end
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7004
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 30, !dbg !7005
  %19 = load i32, i32* %state, align 8, !dbg !7005
  switch i32 %19, label %sw.default [
    i32 6, label %sw.bb
    i32 1, label %sw.bb
    i32 4, label %sw.bb
  ], !dbg !7006

sw.bb:                                            ; preds = %if.end28, %if.end28, %if.end28
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7007
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 23, !dbg !7009
  store i32 256, i32* %cmd_status, align 8, !dbg !7010
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7011
  %pending_events29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 28, !dbg !7012
  call void @set_bit(i64 0, i64* %pending_events29) #12, !dbg !7013
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7014
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 27, !dbg !7015
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #12, !dbg !7016
  br label %sw.epilog, !dbg !7017

sw.default:                                       ; preds = %if.end28
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7018
  %dev30 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 36, !dbg !7018
  %24 = load %struct.device*, %struct.device** %dev30, align 8, !dbg !7018
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7018
  %state31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 30, !dbg !7018
  %26 = load i32, i32* %state31, align 8, !dbg !7018
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %24, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0), i32 %26) #13, !dbg !7018
  br label %sw.epilog, !dbg !7019

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %exit, !dbg !7020

exit:                                             ; preds = %sw.epilog, %if.then26, %if.then
  call void @llvm.dbg.label(metadata !7021), !dbg !7022
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7023
  %irq_lock32 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 1, !dbg !7024
  %28 = load i64, i64* %irqflags, align 8, !dbg !7025
  store %struct.spinlock* %irq_lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !7029
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !7029
  store i32 1, i32* %tmp.i, align 4, !dbg !7029
  %29 = load i32, i32* %tmp.i, align 4, !dbg !7029
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !7036
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !7036
  store i32 1, i32* %tmp8.i, align 4, !dbg !7036
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !7036
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !7038
  call void @arch_local_irq_restore(i64 %31) #14, !dbg !7038
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7039, !srcloc !7041
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !7042
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !7042
  %rlock.i34 = bitcast %union.anon* %33 to %struct.raw_spinlock*, !dbg !7042
  ret void, !dbg !7044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_dto_timer(%struct.timer_list* %t) #0 !dbg !7045 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !6938, metadata !DIExpression()), !dbg !7046
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !7048
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !7049
  %t.addr = alloca %struct.timer_list*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dw_mci*, align 8
  %irqflags = alloca i64, align 8
  %pending = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !7058, metadata !DIExpression()), !dbg !7059
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7060, metadata !DIExpression()), !dbg !7062
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !7062
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !7062
  store i8* %1, i8** %__mptr, align 8, !dbg !7062
  br label %do.body, !dbg !7062

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7063

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7062
  %add.ptr = getelementptr i8, i8* %2, i64 -568, !dbg !7062
  %3 = bitcast i8* %add.ptr to %struct.dw_mci*, !dbg !7062
  store %struct.dw_mci* %3, %struct.dw_mci** %tmp, align 8, !dbg !7063
  %4 = load %struct.dw_mci*, %struct.dw_mci** %tmp, align 8, !dbg !7062
  store %struct.dw_mci* %4, %struct.dw_mci** %host, align 8, !dbg !7059
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !7065, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.declare(metadata i32* %pending, metadata !7067, metadata !DIExpression()), !dbg !7068
  br label %do.body1, !dbg !7069

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !7070

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7071, metadata !DIExpression()), !dbg !7073
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7074, metadata !DIExpression()), !dbg !7073
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7073
  %conv = zext i1 %cmp to i32, !dbg !7073
  store i32 1, i32* %tmp3, align 4, !dbg !7073
  %5 = load i32, i32* %tmp3, align 4, !dbg !7073
  br label %do.body4, !dbg !7075

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !7076

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !7077

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !7079, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !7083, metadata !DIExpression()), !dbg !7082
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !7082
  %conv10 = zext i1 %cmp9 to i32, !dbg !7082
  store i32 1, i32* %tmp11, align 4, !dbg !7082
  %6 = load i32, i32* %tmp11, align 4, !dbg !7082
  %call = call i64 @arch_local_irq_save() #12, !dbg !7084
  store i64 %call, i64* %irqflags, align 8, !dbg !7084
  br label %do.end12, !dbg !7084

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !7077

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !7076

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7085, !srcloc !7086
  br label %do.body15, !dbg !7085

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7087
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 1, !dbg !7087
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7088
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !7089
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !7089
  br label %do.end17, !dbg !7087

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !7085

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7076

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !7075

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !7070

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7090
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 2, !dbg !7090
  %11 = load i8*, i8** %regs, align 8, !dbg !7090
  %add.ptr22 = getelementptr i8, i8* %11, i64 64, !dbg !7090
  %call23 = call i32 @__readl(i8* %add.ptr22) #12, !dbg !7090
  store i32 %call23, i32* %pending, align 4, !dbg !7091
  %12 = load i32, i32* %pending, align 4, !dbg !7092
  %conv24 = zext i32 %12 to i64, !dbg !7092
  %and = and i64 %conv24, 8, !dbg !7094
  %tobool = icmp ne i64 %and, 0, !dbg !7094
  br i1 %tobool, label %if.then, label %if.end, !dbg !7095

if.then:                                          ; preds = %do.end21
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7096
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 36, !dbg !7096
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7096
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %14, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)) #13, !dbg !7096
  br label %exit, !dbg !7098

if.end:                                           ; preds = %do.end21
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7099
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 28, !dbg !7101
  %call25 = call zeroext i1 @test_bit(i64 2, i64* %pending_events) #12, !dbg !7102
  br i1 %call25, label %if.then26, label %if.end28, !dbg !7103

if.then26:                                        ; preds = %if.end
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7104
  %dev27 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 36, !dbg !7104
  %17 = load %struct.device*, %struct.device** %dev27, align 8, !dbg !7104
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !7104
  br label %exit, !dbg !7106

if.end28:                                         ; preds = %if.end
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7107
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 30, !dbg !7108
  %19 = load i32, i32* %state, align 8, !dbg !7108
  switch i32 %19, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb
  ], !dbg !7109

sw.bb:                                            ; preds = %if.end28, %if.end28
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7110
  %data_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 24, !dbg !7112
  store i32 512, i32* %data_status, align 4, !dbg !7113
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7114
  %pending_events29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 28, !dbg !7115
  call void @set_bit(i64 3, i64* %pending_events29) #12, !dbg !7116
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7117
  %pending_events30 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 28, !dbg !7118
  call void @set_bit(i64 2, i64* %pending_events30) #12, !dbg !7119
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7120
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 27, !dbg !7121
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #12, !dbg !7122
  br label %sw.epilog, !dbg !7123

sw.default:                                       ; preds = %if.end28
  %24 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7124
  %dev31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %24, i32 0, i32 36, !dbg !7124
  %25 = load %struct.device*, %struct.device** %dev31, align 8, !dbg !7124
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7124
  %state32 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 30, !dbg !7124
  %27 = load i32, i32* %state32, align 8, !dbg !7124
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %25, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26, i64 0, i64 0), i32 %27) #13, !dbg !7124
  br label %sw.epilog, !dbg !7125

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %exit, !dbg !7126

exit:                                             ; preds = %sw.epilog, %if.then26, %if.then
  call void @llvm.dbg.label(metadata !7127), !dbg !7128
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7129
  %irq_lock33 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 1, !dbg !7130
  %29 = load i64, i64* %irqflags, align 8, !dbg !7131
  store %struct.spinlock* %irq_lock33, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !7132
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !7132
  store i32 1, i32* %tmp.i, align 4, !dbg !7132
  %30 = load i32, i32* %tmp.i, align 4, !dbg !7132
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !7133
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !7133
  store i32 1, i32* %tmp8.i, align 4, !dbg !7133
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !7133
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !7134
  call void @arch_local_irq_restore(i64 %32) #14, !dbg !7134
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7135, !srcloc !7041
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !7136
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !7136
  %rlock.i35 = bitcast %union.anon* %34 to %struct.raw_spinlock*, !dbg !7136
  ret void, !dbg !7137
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !7138 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  br label %do.body, !dbg !7144

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7145

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7147

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7145

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7149
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7149
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7149
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7149
  br label %do.end3, !dbg !7149

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7145

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7151
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7152
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7153
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7154
  ret void, !dbg !7155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__readl(i8* %addr) #0 !dbg !7156 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7163, metadata !DIExpression()), !dbg !7164
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7165, metadata !DIExpression()), !dbg !7164
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !7164
  %1 = bitcast i8* %0 to i32*, !dbg !7164
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* %1) #8, !dbg !7164, !srcloc !7166
  store i32 %2, i32* %ret, align 4, !dbg !7164
  %3 = load i32, i32* %ret, align 4, !dbg !7164
  ret i32 %3, !dbg !7164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_push_data16(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !7167 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %data = alloca %struct.mmc_data*, align 8
  %init_cnt = alloca i32, align 4
  %len = alloca i32, align 4
  %pdata = alloca i16*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !7174, metadata !DIExpression()), !dbg !7175
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7176
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 10, !dbg !7177
  %1 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !7177
  store %struct.mmc_data* %1, %struct.mmc_data** %data, align 8, !dbg !7175
  call void @llvm.dbg.declare(metadata i32* %init_cnt, metadata !7178, metadata !DIExpression()), !dbg !7179
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !7180
  store i32 %2, i32* %init_cnt, align 4, !dbg !7179
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7181
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 46, !dbg !7181
  %4 = load i8, i8* %part_buf_count, align 1, !dbg !7181
  %tobool = icmp ne i8 %4, 0, !dbg !7181
  %lnot = xor i1 %tobool, true, !dbg !7181
  %lnot2 = xor i1 %lnot, true, !dbg !7181
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7181
  %conv = sext i32 %lnot.ext to i64, !dbg !7181
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7181
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !7183

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7184, metadata !DIExpression()), !dbg !7186
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7187
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7188
  %7 = load i32, i32* %cnt.addr, align 4, !dbg !7189
  %call = call i32 @dw_mci_push_part_bytes(%struct.dw_mci* %5, i8* %6, i32 %7) #12, !dbg !7190
  store i32 %call, i32* %len, align 4, !dbg !7186
  %8 = load i32, i32* %len, align 4, !dbg !7191
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !7192
  %idx.ext = sext i32 %8 to i64, !dbg !7192
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !7192
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !7192
  %10 = load i32, i32* %len, align 4, !dbg !7193
  %11 = load i32, i32* %cnt.addr, align 4, !dbg !7194
  %sub = sub i32 %11, %10, !dbg !7194
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !7194
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7195
  %part_buf_count4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 46, !dbg !7197
  %13 = load i8, i8* %part_buf_count4, align 1, !dbg !7197
  %conv5 = zext i8 %13 to i32, !dbg !7195
  %cmp = icmp eq i32 %conv5, 2, !dbg !7198
  br i1 %cmp, label %if.then7, label %if.end, !dbg !7199

if.then7:                                         ; preds = %if.then
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7200
  %15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 47, !dbg !7200
  %part_buf16 = bitcast %union.anon.79* %15 to i16*, !dbg !7200
  %16 = load i16, i16* %part_buf16, align 8, !dbg !7200
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7200
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 3, !dbg !7200
  %18 = load i8*, i8** %fifo_reg, align 8, !dbg !7200
  call void @__writew(i16 zeroext %16, i8* %18) #12, !dbg !7200
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7202
  %part_buf_count8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 46, !dbg !7203
  store i8 0, i8* %part_buf_count8, align 1, !dbg !7204
  br label %if.end, !dbg !7205

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end9, !dbg !7206

if.end9:                                          ; preds = %if.end, %entry
  call void @llvm.dbg.declare(metadata i16** %pdata, metadata !7207, metadata !DIExpression()), !dbg !7210
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !7211
  %21 = bitcast i8* %20 to i16*, !dbg !7211
  store i16* %21, i16** %pdata, align 8, !dbg !7210
  br label %for.cond, !dbg !7212

for.cond:                                         ; preds = %for.inc, %if.end9
  %22 = load i32, i32* %cnt.addr, align 4, !dbg !7213
  %cmp10 = icmp sge i32 %22, 2, !dbg !7216
  br i1 %cmp10, label %for.body, label %for.end, !dbg !7217

for.body:                                         ; preds = %for.cond
  %23 = load i16*, i16** %pdata, align 8, !dbg !7218
  %incdec.ptr = getelementptr i16, i16* %23, i32 1, !dbg !7218
  store i16* %incdec.ptr, i16** %pdata, align 8, !dbg !7218
  %24 = load i16, i16* %23, align 2, !dbg !7218
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7218
  %fifo_reg12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 3, !dbg !7218
  %26 = load i8*, i8** %fifo_reg12, align 8, !dbg !7218
  call void @__writew(i16 zeroext %24, i8* %26) #12, !dbg !7218
  br label %for.inc, !dbg !7218

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %cnt.addr, align 4, !dbg !7219
  %sub13 = sub i32 %27, 2, !dbg !7219
  store i32 %sub13, i32* %cnt.addr, align 4, !dbg !7219
  br label %for.cond, !dbg !7220, !llvm.loop !7221

for.end:                                          ; preds = %for.cond
  %28 = load i16*, i16** %pdata, align 8, !dbg !7223
  %29 = bitcast i16* %28 to i8*, !dbg !7223
  store i8* %29, i8** %buf.addr, align 8, !dbg !7224
  %30 = load i32, i32* %cnt.addr, align 4, !dbg !7225
  %tobool14 = icmp ne i32 %30, 0, !dbg !7225
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !7227

if.then15:                                        ; preds = %for.end
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7228
  %32 = load i8*, i8** %buf.addr, align 8, !dbg !7230
  %33 = load i32, i32* %cnt.addr, align 4, !dbg !7231
  call void @dw_mci_set_part_bytes(%struct.dw_mci* %31, i8* %32, i32 %33) #12, !dbg !7232
  %34 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7233
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %34, i32 0, i32 7, !dbg !7235
  %35 = load i32, i32* %bytes_xfered, align 4, !dbg !7235
  %36 = load i32, i32* %init_cnt, align 4, !dbg !7236
  %add = add i32 %35, %36, !dbg !7237
  %37 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7238
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %37, i32 0, i32 2, !dbg !7239
  %38 = load i32, i32* %blksz, align 8, !dbg !7239
  %39 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7240
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %39, i32 0, i32 3, !dbg !7241
  %40 = load i32, i32* %blocks, align 4, !dbg !7241
  %mul = mul i32 %38, %40, !dbg !7242
  %cmp16 = icmp eq i32 %add, %mul, !dbg !7243
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !7244

if.then18:                                        ; preds = %if.then15
  %41 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7245
  %42 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %41, i32 0, i32 47, !dbg !7245
  %part_buf1619 = bitcast %union.anon.79* %42 to i16*, !dbg !7245
  %43 = load i16, i16* %part_buf1619, align 8, !dbg !7245
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7245
  %fifo_reg20 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 3, !dbg !7245
  %45 = load i8*, i8** %fifo_reg20, align 8, !dbg !7245
  call void @__writew(i16 zeroext %43, i8* %45) #12, !dbg !7245
  br label %if.end21, !dbg !7245

if.end21:                                         ; preds = %if.then18, %if.then15
  br label %if.end22, !dbg !7246

if.end22:                                         ; preds = %if.end21, %for.end
  ret void, !dbg !7247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_pull_data16(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !7248 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %pdata = alloca i16*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7249, metadata !DIExpression()), !dbg !7250
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7251, metadata !DIExpression()), !dbg !7252
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata i16** %pdata, metadata !7255, metadata !DIExpression()), !dbg !7257
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7258
  %1 = bitcast i8* %0 to i16*, !dbg !7258
  store i16* %1, i16** %pdata, align 8, !dbg !7257
  br label %for.cond, !dbg !7259

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !7260
  %cmp = icmp sge i32 %2, 2, !dbg !7263
  br i1 %cmp, label %for.body, label %for.end, !dbg !7264

for.body:                                         ; preds = %for.cond
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7265
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 3, !dbg !7265
  %4 = load i8*, i8** %fifo_reg, align 8, !dbg !7265
  %call = call zeroext i16 @__readw(i8* %4) #12, !dbg !7265
  %5 = load i16*, i16** %pdata, align 8, !dbg !7266
  %incdec.ptr = getelementptr i16, i16* %5, i32 1, !dbg !7266
  store i16* %incdec.ptr, i16** %pdata, align 8, !dbg !7266
  store i16 %call, i16* %5, align 2, !dbg !7267
  br label %for.inc, !dbg !7268

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %cnt.addr, align 4, !dbg !7269
  %sub = sub i32 %6, 2, !dbg !7269
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !7269
  br label %for.cond, !dbg !7270, !llvm.loop !7271

for.end:                                          ; preds = %for.cond
  %7 = load i16*, i16** %pdata, align 8, !dbg !7273
  %8 = bitcast i16* %7 to i8*, !dbg !7273
  store i8* %8, i8** %buf.addr, align 8, !dbg !7274
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !7275
  %tobool = icmp ne i32 %9, 0, !dbg !7275
  br i1 %tobool, label %if.then, label %if.end, !dbg !7277

if.then:                                          ; preds = %for.end
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7278
  %fifo_reg1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 3, !dbg !7278
  %11 = load i8*, i8** %fifo_reg1, align 8, !dbg !7278
  %call2 = call zeroext i16 @__readw(i8* %11) #12, !dbg !7278
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7280
  %13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 47, !dbg !7281
  %part_buf16 = bitcast %union.anon.79* %13 to i16*, !dbg !7281
  store i16 %call2, i16* %part_buf16, align 8, !dbg !7282
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7283
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !7284
  %16 = load i32, i32* %cnt.addr, align 4, !dbg !7285
  call void @dw_mci_pull_final_bytes(%struct.dw_mci* %14, i8* %15, i32 %16) #12, !dbg !7286
  br label %if.end, !dbg !7287

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !7288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_push_data64(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !7289 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %data = alloca %struct.mmc_data*, align 8
  %init_cnt = alloca i32, align 4
  %len = alloca i32, align 4
  %pdata = alloca i64*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7290, metadata !DIExpression()), !dbg !7291
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7292, metadata !DIExpression()), !dbg !7293
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !7296, metadata !DIExpression()), !dbg !7297
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7298
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 10, !dbg !7299
  %1 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !7299
  store %struct.mmc_data* %1, %struct.mmc_data** %data, align 8, !dbg !7297
  call void @llvm.dbg.declare(metadata i32* %init_cnt, metadata !7300, metadata !DIExpression()), !dbg !7301
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !7302
  store i32 %2, i32* %init_cnt, align 4, !dbg !7301
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7303
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 46, !dbg !7303
  %4 = load i8, i8* %part_buf_count, align 1, !dbg !7303
  %tobool = icmp ne i8 %4, 0, !dbg !7303
  %lnot = xor i1 %tobool, true, !dbg !7303
  %lnot2 = xor i1 %lnot, true, !dbg !7303
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7303
  %conv = sext i32 %lnot.ext to i64, !dbg !7303
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7303
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !7305

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7306, metadata !DIExpression()), !dbg !7308
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7309
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7310
  %7 = load i32, i32* %cnt.addr, align 4, !dbg !7311
  %call = call i32 @dw_mci_push_part_bytes(%struct.dw_mci* %5, i8* %6, i32 %7) #12, !dbg !7312
  store i32 %call, i32* %len, align 4, !dbg !7308
  %8 = load i32, i32* %len, align 4, !dbg !7313
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !7314
  %idx.ext = sext i32 %8 to i64, !dbg !7314
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !7314
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !7314
  %10 = load i32, i32* %len, align 4, !dbg !7315
  %11 = load i32, i32* %cnt.addr, align 4, !dbg !7316
  %sub = sub i32 %11, %10, !dbg !7316
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !7316
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7317
  %part_buf_count4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 46, !dbg !7319
  %13 = load i8, i8* %part_buf_count4, align 1, !dbg !7319
  %conv5 = zext i8 %13 to i32, !dbg !7317
  %cmp = icmp eq i32 %conv5, 8, !dbg !7320
  br i1 %cmp, label %if.then7, label %if.end, !dbg !7321

if.then7:                                         ; preds = %if.then
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7322
  %15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 47, !dbg !7322
  %part_buf = bitcast %union.anon.79* %15 to i64*, !dbg !7322
  %16 = load i64, i64* %part_buf, align 8, !dbg !7322
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7322
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 3, !dbg !7322
  %18 = load i8*, i8** %fifo_reg, align 8, !dbg !7322
  call void @__writeq(i64 %16, i8* %18) #12, !dbg !7322
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7324
  %part_buf_count8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 46, !dbg !7325
  store i8 0, i8* %part_buf_count8, align 1, !dbg !7326
  br label %if.end, !dbg !7327

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end9, !dbg !7328

if.end9:                                          ; preds = %if.end, %entry
  call void @llvm.dbg.declare(metadata i64** %pdata, metadata !7329, metadata !DIExpression()), !dbg !7331
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !7332
  %21 = bitcast i8* %20 to i64*, !dbg !7332
  store i64* %21, i64** %pdata, align 8, !dbg !7331
  br label %for.cond, !dbg !7333

for.cond:                                         ; preds = %for.inc, %if.end9
  %22 = load i32, i32* %cnt.addr, align 4, !dbg !7334
  %cmp10 = icmp sge i32 %22, 8, !dbg !7337
  br i1 %cmp10, label %for.body, label %for.end, !dbg !7338

for.body:                                         ; preds = %for.cond
  %23 = load i64*, i64** %pdata, align 8, !dbg !7339
  %incdec.ptr = getelementptr i64, i64* %23, i32 1, !dbg !7339
  store i64* %incdec.ptr, i64** %pdata, align 8, !dbg !7339
  %24 = load i64, i64* %23, align 8, !dbg !7339
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7339
  %fifo_reg12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 3, !dbg !7339
  %26 = load i8*, i8** %fifo_reg12, align 8, !dbg !7339
  call void @__writeq(i64 %24, i8* %26) #12, !dbg !7339
  br label %for.inc, !dbg !7339

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %cnt.addr, align 4, !dbg !7340
  %sub13 = sub i32 %27, 8, !dbg !7340
  store i32 %sub13, i32* %cnt.addr, align 4, !dbg !7340
  br label %for.cond, !dbg !7341, !llvm.loop !7342

for.end:                                          ; preds = %for.cond
  %28 = load i64*, i64** %pdata, align 8, !dbg !7344
  %29 = bitcast i64* %28 to i8*, !dbg !7344
  store i8* %29, i8** %buf.addr, align 8, !dbg !7345
  %30 = load i32, i32* %cnt.addr, align 4, !dbg !7346
  %tobool14 = icmp ne i32 %30, 0, !dbg !7346
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !7348

if.then15:                                        ; preds = %for.end
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7349
  %32 = load i8*, i8** %buf.addr, align 8, !dbg !7351
  %33 = load i32, i32* %cnt.addr, align 4, !dbg !7352
  call void @dw_mci_set_part_bytes(%struct.dw_mci* %31, i8* %32, i32 %33) #12, !dbg !7353
  %34 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7354
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %34, i32 0, i32 7, !dbg !7356
  %35 = load i32, i32* %bytes_xfered, align 4, !dbg !7356
  %36 = load i32, i32* %init_cnt, align 4, !dbg !7357
  %add = add i32 %35, %36, !dbg !7358
  %37 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7359
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %37, i32 0, i32 2, !dbg !7360
  %38 = load i32, i32* %blksz, align 8, !dbg !7360
  %39 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7361
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %39, i32 0, i32 3, !dbg !7362
  %40 = load i32, i32* %blocks, align 4, !dbg !7362
  %mul = mul i32 %38, %40, !dbg !7363
  %cmp16 = icmp eq i32 %add, %mul, !dbg !7364
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !7365

if.then18:                                        ; preds = %if.then15
  %41 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7366
  %42 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %41, i32 0, i32 47, !dbg !7366
  %part_buf19 = bitcast %union.anon.79* %42 to i64*, !dbg !7366
  %43 = load i64, i64* %part_buf19, align 8, !dbg !7366
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7366
  %fifo_reg20 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 3, !dbg !7366
  %45 = load i8*, i8** %fifo_reg20, align 8, !dbg !7366
  call void @__writeq(i64 %43, i8* %45) #12, !dbg !7366
  br label %if.end21, !dbg !7366

if.end21:                                         ; preds = %if.then18, %if.then15
  br label %if.end22, !dbg !7367

if.end22:                                         ; preds = %if.end21, %for.end
  ret void, !dbg !7368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_pull_data64(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !7369 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %pdata = alloca i64*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7372, metadata !DIExpression()), !dbg !7373
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !7374, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.declare(metadata i64** %pdata, metadata !7376, metadata !DIExpression()), !dbg !7378
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7379
  %1 = bitcast i8* %0 to i64*, !dbg !7379
  store i64* %1, i64** %pdata, align 8, !dbg !7378
  br label %for.cond, !dbg !7380

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !7381
  %cmp = icmp sge i32 %2, 8, !dbg !7384
  br i1 %cmp, label %for.body, label %for.end, !dbg !7385

for.body:                                         ; preds = %for.cond
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7386
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 3, !dbg !7386
  %4 = load i8*, i8** %fifo_reg, align 8, !dbg !7386
  %call = call i64 @__readq(i8* %4) #12, !dbg !7386
  %5 = load i64*, i64** %pdata, align 8, !dbg !7387
  %incdec.ptr = getelementptr i64, i64* %5, i32 1, !dbg !7387
  store i64* %incdec.ptr, i64** %pdata, align 8, !dbg !7387
  store i64 %call, i64* %5, align 8, !dbg !7388
  br label %for.inc, !dbg !7389

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %cnt.addr, align 4, !dbg !7390
  %sub = sub i32 %6, 8, !dbg !7390
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !7390
  br label %for.cond, !dbg !7391, !llvm.loop !7392

for.end:                                          ; preds = %for.cond
  %7 = load i64*, i64** %pdata, align 8, !dbg !7394
  %8 = bitcast i64* %7 to i8*, !dbg !7394
  store i8* %8, i8** %buf.addr, align 8, !dbg !7395
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !7396
  %tobool = icmp ne i32 %9, 0, !dbg !7396
  br i1 %tobool, label %if.then, label %if.end, !dbg !7398

if.then:                                          ; preds = %for.end
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7399
  %fifo_reg1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 3, !dbg !7399
  %11 = load i8*, i8** %fifo_reg1, align 8, !dbg !7399
  %call2 = call i64 @__readq(i8* %11) #12, !dbg !7399
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7401
  %13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 47, !dbg !7402
  %part_buf = bitcast %union.anon.79* %13 to i64*, !dbg !7402
  store i64 %call2, i64* %part_buf, align 8, !dbg !7403
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7404
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !7405
  %16 = load i32, i32* %cnt.addr, align 4, !dbg !7406
  call void @dw_mci_pull_final_bytes(%struct.dw_mci* %14, i8* %15, i32 %16) #12, !dbg !7407
  br label %if.end, !dbg !7408

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !7409
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_push_data32(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !7410 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %data = alloca %struct.mmc_data*, align 8
  %init_cnt = alloca i32, align 4
  %len = alloca i32, align 4
  %pdata = alloca i32*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !7417, metadata !DIExpression()), !dbg !7418
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7419
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 10, !dbg !7420
  %1 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !7420
  store %struct.mmc_data* %1, %struct.mmc_data** %data, align 8, !dbg !7418
  call void @llvm.dbg.declare(metadata i32* %init_cnt, metadata !7421, metadata !DIExpression()), !dbg !7422
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !7423
  store i32 %2, i32* %init_cnt, align 4, !dbg !7422
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7424
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 46, !dbg !7424
  %4 = load i8, i8* %part_buf_count, align 1, !dbg !7424
  %tobool = icmp ne i8 %4, 0, !dbg !7424
  %lnot = xor i1 %tobool, true, !dbg !7424
  %lnot2 = xor i1 %lnot, true, !dbg !7424
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7424
  %conv = sext i32 %lnot.ext to i64, !dbg !7424
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7424
  br i1 %tobool3, label %if.then, label %if.end9, !dbg !7426

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7427, metadata !DIExpression()), !dbg !7429
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7430
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7431
  %7 = load i32, i32* %cnt.addr, align 4, !dbg !7432
  %call = call i32 @dw_mci_push_part_bytes(%struct.dw_mci* %5, i8* %6, i32 %7) #12, !dbg !7433
  store i32 %call, i32* %len, align 4, !dbg !7429
  %8 = load i32, i32* %len, align 4, !dbg !7434
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !7435
  %idx.ext = sext i32 %8 to i64, !dbg !7435
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !7435
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !7435
  %10 = load i32, i32* %len, align 4, !dbg !7436
  %11 = load i32, i32* %cnt.addr, align 4, !dbg !7437
  %sub = sub i32 %11, %10, !dbg !7437
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !7437
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7438
  %part_buf_count4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 46, !dbg !7440
  %13 = load i8, i8* %part_buf_count4, align 1, !dbg !7440
  %conv5 = zext i8 %13 to i32, !dbg !7438
  %cmp = icmp eq i32 %conv5, 4, !dbg !7441
  br i1 %cmp, label %if.then7, label %if.end, !dbg !7442

if.then7:                                         ; preds = %if.then
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7443
  %15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 47, !dbg !7443
  %part_buf32 = bitcast %union.anon.79* %15 to i32*, !dbg !7443
  %16 = load i32, i32* %part_buf32, align 8, !dbg !7443
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7443
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 3, !dbg !7443
  %18 = load i8*, i8** %fifo_reg, align 8, !dbg !7443
  call void @__writel(i32 %16, i8* %18) #12, !dbg !7443
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7445
  %part_buf_count8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 46, !dbg !7446
  store i8 0, i8* %part_buf_count8, align 1, !dbg !7447
  br label %if.end, !dbg !7448

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end9, !dbg !7449

if.end9:                                          ; preds = %if.end, %entry
  call void @llvm.dbg.declare(metadata i32** %pdata, metadata !7450, metadata !DIExpression()), !dbg !7452
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !7453
  %21 = bitcast i8* %20 to i32*, !dbg !7453
  store i32* %21, i32** %pdata, align 8, !dbg !7452
  br label %for.cond, !dbg !7454

for.cond:                                         ; preds = %for.inc, %if.end9
  %22 = load i32, i32* %cnt.addr, align 4, !dbg !7455
  %cmp10 = icmp sge i32 %22, 4, !dbg !7458
  br i1 %cmp10, label %for.body, label %for.end, !dbg !7459

for.body:                                         ; preds = %for.cond
  %23 = load i32*, i32** %pdata, align 8, !dbg !7460
  %incdec.ptr = getelementptr i32, i32* %23, i32 1, !dbg !7460
  store i32* %incdec.ptr, i32** %pdata, align 8, !dbg !7460
  %24 = load i32, i32* %23, align 4, !dbg !7460
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7460
  %fifo_reg12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 3, !dbg !7460
  %26 = load i8*, i8** %fifo_reg12, align 8, !dbg !7460
  call void @__writel(i32 %24, i8* %26) #12, !dbg !7460
  br label %for.inc, !dbg !7460

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %cnt.addr, align 4, !dbg !7461
  %sub13 = sub i32 %27, 4, !dbg !7461
  store i32 %sub13, i32* %cnt.addr, align 4, !dbg !7461
  br label %for.cond, !dbg !7462, !llvm.loop !7463

for.end:                                          ; preds = %for.cond
  %28 = load i32*, i32** %pdata, align 8, !dbg !7465
  %29 = bitcast i32* %28 to i8*, !dbg !7465
  store i8* %29, i8** %buf.addr, align 8, !dbg !7466
  %30 = load i32, i32* %cnt.addr, align 4, !dbg !7467
  %tobool14 = icmp ne i32 %30, 0, !dbg !7467
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !7469

if.then15:                                        ; preds = %for.end
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7470
  %32 = load i8*, i8** %buf.addr, align 8, !dbg !7472
  %33 = load i32, i32* %cnt.addr, align 4, !dbg !7473
  call void @dw_mci_set_part_bytes(%struct.dw_mci* %31, i8* %32, i32 %33) #12, !dbg !7474
  %34 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7475
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %34, i32 0, i32 7, !dbg !7477
  %35 = load i32, i32* %bytes_xfered, align 4, !dbg !7477
  %36 = load i32, i32* %init_cnt, align 4, !dbg !7478
  %add = add i32 %35, %36, !dbg !7479
  %37 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7480
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %37, i32 0, i32 2, !dbg !7481
  %38 = load i32, i32* %blksz, align 8, !dbg !7481
  %39 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7482
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %39, i32 0, i32 3, !dbg !7483
  %40 = load i32, i32* %blocks, align 4, !dbg !7483
  %mul = mul i32 %38, %40, !dbg !7484
  %cmp16 = icmp eq i32 %add, %mul, !dbg !7485
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !7486

if.then18:                                        ; preds = %if.then15
  %41 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7487
  %42 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %41, i32 0, i32 47, !dbg !7487
  %part_buf3219 = bitcast %union.anon.79* %42 to i32*, !dbg !7487
  %43 = load i32, i32* %part_buf3219, align 8, !dbg !7487
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7487
  %fifo_reg20 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 3, !dbg !7487
  %45 = load i8*, i8** %fifo_reg20, align 8, !dbg !7487
  call void @__writel(i32 %43, i8* %45) #12, !dbg !7487
  br label %if.end21, !dbg !7487

if.end21:                                         ; preds = %if.then18, %if.then15
  br label %if.end22, !dbg !7488

if.end22:                                         ; preds = %if.end21, %for.end
  ret void, !dbg !7489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_pull_data32(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !7490 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %pdata = alloca i32*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7491, metadata !DIExpression()), !dbg !7492
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7493, metadata !DIExpression()), !dbg !7494
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.declare(metadata i32** %pdata, metadata !7497, metadata !DIExpression()), !dbg !7499
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7500
  %1 = bitcast i8* %0 to i32*, !dbg !7500
  store i32* %1, i32** %pdata, align 8, !dbg !7499
  br label %for.cond, !dbg !7501

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !7502
  %cmp = icmp sge i32 %2, 4, !dbg !7505
  br i1 %cmp, label %for.body, label %for.end, !dbg !7506

for.body:                                         ; preds = %for.cond
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7507
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 3, !dbg !7507
  %4 = load i8*, i8** %fifo_reg, align 8, !dbg !7507
  %call = call i32 @__readl(i8* %4) #12, !dbg !7507
  %5 = load i32*, i32** %pdata, align 8, !dbg !7508
  %incdec.ptr = getelementptr i32, i32* %5, i32 1, !dbg !7508
  store i32* %incdec.ptr, i32** %pdata, align 8, !dbg !7508
  store i32 %call, i32* %5, align 4, !dbg !7509
  br label %for.inc, !dbg !7510

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %cnt.addr, align 4, !dbg !7511
  %sub = sub i32 %6, 4, !dbg !7511
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !7511
  br label %for.cond, !dbg !7512, !llvm.loop !7513

for.end:                                          ; preds = %for.cond
  %7 = load i32*, i32** %pdata, align 8, !dbg !7515
  %8 = bitcast i32* %7 to i8*, !dbg !7515
  store i8* %8, i8** %buf.addr, align 8, !dbg !7516
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !7517
  %tobool = icmp ne i32 %9, 0, !dbg !7517
  br i1 %tobool, label %if.then, label %if.end, !dbg !7519

if.then:                                          ; preds = %for.end
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7520
  %fifo_reg1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 3, !dbg !7520
  %11 = load i8*, i8** %fifo_reg1, align 8, !dbg !7520
  %call2 = call i32 @__readl(i8* %11) #12, !dbg !7520
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7522
  %13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 47, !dbg !7523
  %part_buf32 = bitcast %union.anon.79* %13 to i32*, !dbg !7523
  store i32 %call2, i32* %part_buf32, align 8, !dbg !7524
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7525
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !7526
  %16 = load i32, i32* %cnt.addr, align 4, !dbg !7527
  call void @dw_mci_pull_final_bytes(%struct.dw_mci* %14, i8* %15, i32 %16) #12, !dbg !7528
  br label %if.end, !dbg !7529

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !7530
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %host, i32 %reset) #0 !dbg !7531 {
entry:
  %retval = alloca i1, align 1
  %host.addr = alloca %struct.dw_mci*, align 8
  %reset.addr = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  store i32 %reset, i32* %reset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reset.addr, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !7538, metadata !DIExpression()), !dbg !7539
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7540
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 2, !dbg !7540
  %1 = load i8*, i8** %regs, align 8, !dbg !7540
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !7540
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !7540
  store i32 %call, i32* %ctrl, align 4, !dbg !7541
  %2 = load i32, i32* %reset.addr, align 4, !dbg !7542
  %3 = load i32, i32* %ctrl, align 4, !dbg !7543
  %or = or i32 %3, %2, !dbg !7543
  store i32 %or, i32* %ctrl, align 4, !dbg !7543
  %4 = load i32, i32* %ctrl, align 4, !dbg !7544
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7544
  %regs1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 2, !dbg !7544
  %6 = load i8*, i8** %regs1, align 8, !dbg !7544
  %add.ptr2 = getelementptr i8, i8* %6, i64 0, !dbg !7544
  call void @__writel(i32 %4, i8* %add.ptr2) #12, !dbg !7544
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !7545, metadata !DIExpression()), !dbg !7548
  store i64 500000, i64* %__timeout_us, align 8, !dbg !7548
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !7549, metadata !DIExpression()), !dbg !7548
  store i64 1, i64* %__delay_us, align 8, !dbg !7548
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !7550, metadata !DIExpression()), !dbg !7548
  %call3 = call i64 @ktime_get() #12, !dbg !7548
  %7 = load i64, i64* %__timeout_us, align 8, !dbg !7548
  %call4 = call i64 @ktime_add_us(i64 %call3, i64 %7) #12, !dbg !7548
  store i64 %call4, i64* %__timeout, align 8, !dbg !7548
  br label %for.cond, !dbg !7548

for.cond:                                         ; preds = %if.end24, %entry
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7551
  %regs5 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !7551
  %9 = load i8*, i8** %regs5, align 8, !dbg !7551
  %add.ptr6 = getelementptr i8, i8* %9, i64 0, !dbg !7551
  %call7 = call i32 @readl(i8* %add.ptr6) #12, !dbg !7551
  store i32 %call7, i32* %ctrl, align 4, !dbg !7551
  %10 = load i32, i32* %ctrl, align 4, !dbg !7555
  %11 = load i32, i32* %reset.addr, align 4, !dbg !7555
  %and = and i32 %10, %11, !dbg !7555
  %tobool = icmp ne i32 %and, 0, !dbg !7555
  br i1 %tobool, label %if.end, label %if.then, !dbg !7551

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !7555

if.end:                                           ; preds = %for.cond
  %12 = load i64, i64* %__timeout_us, align 8, !dbg !7557
  %tobool8 = icmp ne i64 %12, 0, !dbg !7557
  br i1 %tobool8, label %land.lhs.true, label %if.end15, !dbg !7557

land.lhs.true:                                    ; preds = %if.end
  %call9 = call i64 @ktime_get() #12, !dbg !7557
  %13 = load i64, i64* %__timeout, align 8, !dbg !7557
  %call10 = call i32 @ktime_compare(i64 %call9, i64 %13) #12, !dbg !7557
  %cmp = icmp sgt i32 %call10, 0, !dbg !7557
  br i1 %cmp, label %if.then11, label %if.end15, !dbg !7551

if.then11:                                        ; preds = %land.lhs.true
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7559
  %regs12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 2, !dbg !7559
  %15 = load i8*, i8** %regs12, align 8, !dbg !7559
  %add.ptr13 = getelementptr i8, i8* %15, i64 0, !dbg !7559
  %call14 = call i32 @readl(i8* %add.ptr13) #12, !dbg !7559
  store i32 %call14, i32* %ctrl, align 4, !dbg !7559
  br label %for.end, !dbg !7559

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %16 = load i64, i64* %__delay_us, align 8, !dbg !7561
  %tobool16 = icmp ne i64 %16, 0, !dbg !7561
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !7551

if.then17:                                        ; preds = %if.end15
  %17 = load i64, i64* %__delay_us, align 8, !dbg !7563
  %18 = call i1 @llvm.is.constant.i64(i64 %17), !dbg !7563
  br i1 %18, label %if.then18, label %if.else22, !dbg !7566

if.then18:                                        ; preds = %if.then17
  %19 = load i64, i64* %__delay_us, align 8, !dbg !7567
  %div = udiv i64 %19, 20000, !dbg !7567
  %cmp19 = icmp uge i64 %div, 1, !dbg !7567
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !7570

if.then20:                                        ; preds = %if.then18
  call void @__bad_udelay() #12, !dbg !7567
  br label %if.end21, !dbg !7567

if.else:                                          ; preds = %if.then18
  %20 = load i64, i64* %__delay_us, align 8, !dbg !7567
  %mul = mul i64 %20, 4295, !dbg !7567
  call void @__const_udelay(i64 %mul) #12, !dbg !7567
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  br label %if.end23, !dbg !7570

if.else22:                                        ; preds = %if.then17
  %21 = load i64, i64* %__delay_us, align 8, !dbg !7571
  call void @__udelay(i64 %21) #12, !dbg !7571
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.end21
  br label %if.end24, !dbg !7561

if.end24:                                         ; preds = %if.end23, %if.end15
  br label %for.cond, !dbg !7573, !llvm.loop !7574

for.end:                                          ; preds = %if.then11, %if.then
  %22 = load i32, i32* %ctrl, align 4, !dbg !7548
  %23 = load i32, i32* %reset.addr, align 4, !dbg !7548
  %and25 = and i32 %22, %23, !dbg !7548
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7548
  %lnot = xor i1 %tobool26, true, !dbg !7548
  %24 = zext i1 %lnot to i64, !dbg !7548
  %cond = select i1 %lnot, i32 0, i32 -110, !dbg !7548
  store i32 %cond, i32* %tmp, align 4, !dbg !7575
  %25 = load i32, i32* %tmp, align 4, !dbg !7548
  %tobool27 = icmp ne i32 %25, 0, !dbg !7576
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !7577

if.then28:                                        ; preds = %for.end
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7578
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 36, !dbg !7578
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7578
  %28 = load i32, i32* %ctrl, align 4, !dbg !7578
  %29 = load i32, i32* %reset.addr, align 4, !dbg !7578
  %and29 = and i32 %28, %29, !dbg !7578
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0), i32 %and29) #13, !dbg !7578
  store i1 false, i1* %retval, align 1, !dbg !7580
  br label %return, !dbg !7580

if.end30:                                         ; preds = %for.end
  store i1 true, i1* %retval, align 1, !dbg !7581
  br label %return, !dbg !7581

return:                                           ; preds = %if.end30, %if.then28
  %30 = load i1, i1* %retval, align 1, !dbg !7582
  ret i1 %30, !dbg !7582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_init_dma(%struct.dw_mci* %host) #0 !dbg !7583 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %addr_config = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.declare(metadata i32* %addr_config, metadata !7586, metadata !DIExpression()), !dbg !7587
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7588, metadata !DIExpression()), !dbg !7589
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7590
  %dev1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 36, !dbg !7591
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !7591
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !7589
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7592
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 2, !dbg !7592
  %3 = load i8*, i8** %regs, align 8, !dbg !7592
  %add.ptr = getelementptr i8, i8* %3, i64 112, !dbg !7592
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !7592
  %shr = lshr i32 %call, 16, !dbg !7592
  %and = and i32 %shr, 3, !dbg !7592
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7593
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 14, !dbg !7594
  store i32 %and, i32* %use_dma, align 8, !dbg !7595
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7596
  %use_dma2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 14, !dbg !7598
  %6 = load i32, i32* %use_dma2, align 8, !dbg !7598
  %cmp = icmp eq i32 %6, 0, !dbg !7599
  br i1 %cmp, label %if.then, label %if.else, !dbg !7600

if.then:                                          ; preds = %entry
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7601
  %use_dma3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 14, !dbg !7603
  store i32 1, i32* %use_dma3, align 8, !dbg !7604
  br label %if.end11, !dbg !7605

if.else:                                          ; preds = %entry
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7606
  %use_dma4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 14, !dbg !7608
  %9 = load i32, i32* %use_dma4, align 8, !dbg !7608
  %cmp5 = icmp eq i32 %9, 1, !dbg !7609
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !7610

lor.lhs.false:                                    ; preds = %if.else
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7611
  %use_dma6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 14, !dbg !7612
  %11 = load i32, i32* %use_dma6, align 8, !dbg !7612
  %cmp7 = icmp eq i32 %11, 2, !dbg !7613
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !7614

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7615
  %use_dma9 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 14, !dbg !7617
  store i32 2, i32* %use_dma9, align 8, !dbg !7618
  br label %if.end, !dbg !7619

if.else10:                                        ; preds = %lor.lhs.false
  br label %no_dma, !dbg !7620

if.end:                                           ; preds = %if.then8
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7622
  %use_dma12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 14, !dbg !7624
  %14 = load i32, i32* %use_dma12, align 8, !dbg !7624
  %cmp13 = icmp eq i32 %14, 1, !dbg !7625
  br i1 %cmp13, label %if.then14, label %if.else41, !dbg !7626

if.then14:                                        ; preds = %if.end11
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7627
  %regs15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 2, !dbg !7627
  %16 = load i8*, i8** %regs15, align 8, !dbg !7627
  %add.ptr16 = getelementptr i8, i8* %16, i64 112, !dbg !7627
  %call17 = call i32 @__readl(i8* %add.ptr16) #12, !dbg !7627
  %shr18 = lshr i32 %call17, 27, !dbg !7627
  %and19 = and i32 %shr18, 1, !dbg !7627
  store i32 %and19, i32* %addr_config, align 4, !dbg !7629
  %17 = load i32, i32* %addr_config, align 4, !dbg !7630
  %cmp20 = icmp eq i32 %17, 1, !dbg !7632
  br i1 %cmp20, label %if.then21, label %if.else29, !dbg !7633

if.then21:                                        ; preds = %if.then14
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7634
  %dma_64bit_address = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 16, !dbg !7636
  store i32 1, i32* %dma_64bit_address, align 8, !dbg !7637
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7638
  %dev22 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 36, !dbg !7638
  %20 = load %struct.device*, %struct.device** %dev22, align 8, !dbg !7638
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %20, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !7638
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7639
  %dev23 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 36, !dbg !7641
  %22 = load %struct.device*, %struct.device** %dev23, align 8, !dbg !7641
  %call24 = call i32 @dma_set_mask(%struct.device* %22, i64 -1) #12, !dbg !7642
  %tobool = icmp ne i32 %call24, 0, !dbg !7642
  br i1 %tobool, label %if.end28, label %if.then25, !dbg !7643

if.then25:                                        ; preds = %if.then21
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7644
  %dev26 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 36, !dbg !7645
  %24 = load %struct.device*, %struct.device** %dev26, align 8, !dbg !7645
  %call27 = call i32 @dma_set_coherent_mask(%struct.device* %24, i64 -1) #12, !dbg !7646
  br label %if.end28, !dbg !7646

if.end28:                                         ; preds = %if.then25, %if.then21
  br label %if.end32, !dbg !7647

if.else29:                                        ; preds = %if.then14
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7648
  %dma_64bit_address30 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 16, !dbg !7650
  store i32 0, i32* %dma_64bit_address30, align 8, !dbg !7651
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7652
  %dev31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 36, !dbg !7652
  %27 = load %struct.device*, %struct.device** %dev31, align 8, !dbg !7652
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %27, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !7652
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.end28
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7653
  %dev33 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 36, !dbg !7654
  %29 = load %struct.device*, %struct.device** %dev33, align 8, !dbg !7654
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7655
  %sg_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %30, i32 0, i32 17, !dbg !7656
  %call34 = call i8* @dmam_alloc_coherent(%struct.device* %29, i64 4096, i64* %sg_dma, i32 3264) #12, !dbg !7657
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7658
  %sg_cpu = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 18, !dbg !7659
  store i8* %call34, i8** %sg_cpu, align 8, !dbg !7660
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7661
  %sg_cpu35 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %32, i32 0, i32 18, !dbg !7663
  %33 = load i8*, i8** %sg_cpu35, align 8, !dbg !7663
  %tobool36 = icmp ne i8* %33, null, !dbg !7661
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !7664

if.then37:                                        ; preds = %if.end32
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7665
  %dev38 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %34, i32 0, i32 36, !dbg !7665
  %35 = load %struct.device*, %struct.device** %dev38, align 8, !dbg !7665
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %35, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.dw_mci_init_dma, i64 0, i64 0)) #13, !dbg !7665
  br label %no_dma, !dbg !7667

if.end39:                                         ; preds = %if.end32
  %36 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7668
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %36, i32 0, i32 19, !dbg !7669
  store %struct.dw_mci_dma_ops* bitcast ({ i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*, i32)*, void (i8*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)* }* @dw_mci_idmac_ops to %struct.dw_mci_dma_ops*), %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !7670
  %37 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7671
  %dev40 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %37, i32 0, i32 36, !dbg !7671
  %38 = load %struct.device*, %struct.device** %dev40, align 8, !dbg !7671
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %38, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0)) #13, !dbg !7671
  br label %if.end50, !dbg !7672

if.else41:                                        ; preds = %if.end11
  %39 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7673
  %call42 = call i32 @device_property_read_string_array(%struct.device* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8** null, i64 0) #12, !dbg !7676
  %cmp43 = icmp slt i32 %call42, 0, !dbg !7677
  br i1 %cmp43, label %if.then46, label %lor.lhs.false44, !dbg !7678

lor.lhs.false44:                                  ; preds = %if.else41
  %40 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7679
  %call45 = call zeroext i1 @device_property_present(%struct.device* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #12, !dbg !7680
  br i1 %call45, label %if.end47, label %if.then46, !dbg !7681

if.then46:                                        ; preds = %lor.lhs.false44, %if.else41
  br label %no_dma, !dbg !7682

if.end47:                                         ; preds = %lor.lhs.false44
  %41 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7684
  %dma_ops48 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %41, i32 0, i32 19, !dbg !7685
  store %struct.dw_mci_dma_ops* bitcast ({ i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*, i32)*, void (i8*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)*, void (%struct.dw_mci*)* }* @dw_mci_edmac_ops to %struct.dw_mci_dma_ops*), %struct.dw_mci_dma_ops** %dma_ops48, align 8, !dbg !7686
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7687
  %dev49 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 36, !dbg !7687
  %43 = load %struct.device*, %struct.device** %dev49, align 8, !dbg !7687
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %43, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !7687
  br label %if.end50

if.end50:                                         ; preds = %if.end47, %if.end39
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7688
  %dma_ops51 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 19, !dbg !7690
  %45 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops51, align 8, !dbg !7690
  %init = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %45, i32 0, i32 0, !dbg !7691
  %init52 = bitcast {}** %init to i32 (%struct.dw_mci*)**, !dbg !7691
  %46 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %init52, align 8, !dbg !7691
  %tobool53 = icmp ne i32 (%struct.dw_mci*)* %46, null, !dbg !7688
  br i1 %tobool53, label %land.lhs.true, label %if.else71, !dbg !7692

land.lhs.true:                                    ; preds = %if.end50
  %47 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7693
  %dma_ops54 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %47, i32 0, i32 19, !dbg !7694
  %48 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops54, align 8, !dbg !7694
  %start = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %48, i32 0, i32 1, !dbg !7695
  %49 = load i32 (%struct.dw_mci*, i32)*, i32 (%struct.dw_mci*, i32)** %start, align 8, !dbg !7695
  %tobool55 = icmp ne i32 (%struct.dw_mci*, i32)* %49, null, !dbg !7693
  br i1 %tobool55, label %land.lhs.true56, label %if.else71, !dbg !7696

land.lhs.true56:                                  ; preds = %land.lhs.true
  %50 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7697
  %dma_ops57 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %50, i32 0, i32 19, !dbg !7698
  %51 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops57, align 8, !dbg !7698
  %stop = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %51, i32 0, i32 3, !dbg !7699
  %52 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %stop, align 8, !dbg !7699
  %tobool58 = icmp ne void (%struct.dw_mci*)* %52, null, !dbg !7697
  br i1 %tobool58, label %land.lhs.true59, label %if.else71, !dbg !7700

land.lhs.true59:                                  ; preds = %land.lhs.true56
  %53 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7701
  %dma_ops60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %53, i32 0, i32 19, !dbg !7702
  %54 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops60, align 8, !dbg !7702
  %cleanup = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %54, i32 0, i32 4, !dbg !7703
  %55 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %cleanup, align 8, !dbg !7703
  %tobool61 = icmp ne void (%struct.dw_mci*)* %55, null, !dbg !7701
  br i1 %tobool61, label %if.then62, label %if.else71, !dbg !7704

if.then62:                                        ; preds = %land.lhs.true59
  %56 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7705
  %dma_ops63 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %56, i32 0, i32 19, !dbg !7708
  %57 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops63, align 8, !dbg !7708
  %init64 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %57, i32 0, i32 0, !dbg !7709
  %init65 = bitcast {}** %init64 to i32 (%struct.dw_mci*)**, !dbg !7709
  %58 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %init65, align 8, !dbg !7709
  %59 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7710
  %call66 = call i32 %58(%struct.dw_mci* %59) #12, !dbg !7705
  %tobool67 = icmp ne i32 %call66, 0, !dbg !7705
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !7711

if.then68:                                        ; preds = %if.then62
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7712
  %dev69 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 36, !dbg !7712
  %61 = load %struct.device*, %struct.device** %dev69, align 8, !dbg !7712
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %61, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.dw_mci_init_dma, i64 0, i64 0)) #13, !dbg !7712
  br label %no_dma, !dbg !7714

if.end70:                                         ; preds = %if.then62
  br label %if.end73, !dbg !7715

if.else71:                                        ; preds = %land.lhs.true59, %land.lhs.true56, %land.lhs.true, %if.end50
  %62 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7716
  %dev72 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %62, i32 0, i32 36, !dbg !7716
  %63 = load %struct.device*, %struct.device** %dev72, align 8, !dbg !7716
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %63, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !7716
  br label %no_dma, !dbg !7718

if.end73:                                         ; preds = %if.end70
  br label %return, !dbg !7719

no_dma:                                           ; preds = %if.else71, %if.then68, %if.then46, %if.then37, %if.else10
  call void @llvm.dbg.label(metadata !7720), !dbg !7721
  %64 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7722
  %dev74 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %64, i32 0, i32 36, !dbg !7722
  %65 = load %struct.device*, %struct.device** %dev74, align 8, !dbg !7722
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %65, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)) #13, !dbg !7722
  %66 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !7723
  %use_dma75 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %66, i32 0, i32 14, !dbg !7724
  store i32 0, i32* %use_dma75, align 8, !dbg !7725
  br label %return, !dbg !7726

return:                                           ; preds = %no_dma, %if.end73
  ret void, !dbg !7726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writel(i32 %val, i8* %addr) #0 !dbg !7727 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7731, metadata !DIExpression()), !dbg !7732
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7733, metadata !DIExpression()), !dbg !7732
  %0 = load i32, i32* %val.addr, align 4, !dbg !7732
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !7732
  %2 = bitcast i8* %1 to i32*, !dbg !7732
  call void asm sideeffect "movl $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #8, !dbg !7732, !srcloc !7734
  ret void, !dbg !7732
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @tasklet_init(%struct.tasklet_struct*, void (i64)*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_tasklet_func(i64 %priv) #0 !dbg !7735 {
entry:
  %lock.addr.i123 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i123, metadata !7736, metadata !DIExpression()), !dbg !7740
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7742, metadata !DIExpression()), !dbg !7744
  %priv.addr = alloca i64, align 8
  %host = alloca %struct.dw_mci*, align 8
  %data = alloca %struct.mmc_data*, align 8
  %cmd = alloca %struct.mmc_command*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  %state = alloca i32, align 4
  %prev_state = alloca i32, align 4
  %err = alloca i32, align 4
  store i64 %priv, i64* %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %priv.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !7748, metadata !DIExpression()), !dbg !7749
  %0 = load i64, i64* %priv.addr, align 8, !dbg !7750
  %1 = inttoptr i64 %0 to %struct.dw_mci*, !dbg !7751
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !7749
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !7752, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata i32* %state, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.declare(metadata i32* %prev_state, metadata !7760, metadata !DIExpression()), !dbg !7761
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7762, metadata !DIExpression()), !dbg !7763
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7764
  %lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 0, !dbg !7765
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7766, !srcloc !7768
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7769
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7769
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !7769
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7771
  %state1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 30, !dbg !7772
  %6 = load i32, i32* %state1, align 8, !dbg !7772
  store i32 %6, i32* %state, align 4, !dbg !7773
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7774
  %data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 10, !dbg !7775
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data2, align 8, !dbg !7775
  store %struct.mmc_data* %8, %struct.mmc_data** %data, align 8, !dbg !7776
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7777
  %mrq3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 8, !dbg !7778
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq3, align 8, !dbg !7778
  store %struct.mmc_request* %10, %struct.mmc_request** %mrq, align 8, !dbg !7779
  br label %do.body, !dbg !7780

do.body:                                          ; preds = %do.cond, %entry
  %11 = load i32, i32* %state, align 4, !dbg !7781
  store i32 %11, i32* %prev_state, align 4, !dbg !7783
  %12 = load i32, i32* %state, align 4, !dbg !7784
  switch i32 %12, label %sw.epilog [
    i32 0, label %sw.bb
    i32 7, label %sw.bb
    i32 6, label %sw.bb4
    i32 1, label %sw.bb4
    i32 2, label %sw.bb25
    i32 3, label %sw.bb51
    i32 4, label %sw.bb89
    i32 5, label %sw.bb114
  ], !dbg !7785

sw.bb:                                            ; preds = %do.body, %do.body
  br label %sw.epilog, !dbg !7786

sw.bb4:                                           ; preds = %do.body, %do.body
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7788
  %call = call zeroext i1 @dw_mci_clear_pending_cmd_complete(%struct.dw_mci* %13) #12, !dbg !7790
  br i1 %call, label %if.end, label %if.then, !dbg !7791

if.then:                                          ; preds = %sw.bb4
  br label %sw.epilog, !dbg !7792

if.end:                                           ; preds = %sw.bb4
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7793
  %cmd5 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 9, !dbg !7794
  %15 = load %struct.mmc_command*, %struct.mmc_command** %cmd5, align 8, !dbg !7794
  store %struct.mmc_command* %15, %struct.mmc_command** %cmd, align 8, !dbg !7795
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7796
  %cmd6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 9, !dbg !7797
  store %struct.mmc_command* null, %struct.mmc_command** %cmd6, align 8, !dbg !7798
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7799
  %completed_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 29, !dbg !7800
  call void @set_bit(i64 0, i64* %completed_events) #12, !dbg !7801
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7802
  %19 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !7803
  %call7 = call i32 @dw_mci_command_complete(%struct.dw_mci* %18, %struct.mmc_command* %19) #12, !dbg !7804
  store i32 %call7, i32* %err, align 4, !dbg !7805
  %20 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !7806
  %21 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7808
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %21, i32 0, i32 0, !dbg !7809
  %22 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !7809
  %cmp = icmp eq %struct.mmc_command* %20, %22, !dbg !7810
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !7811

land.lhs.true:                                    ; preds = %if.end
  %23 = load i32, i32* %err, align 4, !dbg !7812
  %tobool = icmp ne i32 %23, 0, !dbg !7812
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !7813

if.then8:                                         ; preds = %land.lhs.true
  %24 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7814
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7816
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 42, !dbg !7817
  %26 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !7817
  %27 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7818
  %cmd9 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %27, i32 0, i32 1, !dbg !7819
  %28 = load %struct.mmc_command*, %struct.mmc_command** %cmd9, align 8, !dbg !7819
  call void @__dw_mci_start_request(%struct.dw_mci* %24, %struct.dw_mci_slot* %26, %struct.mmc_command* %28) #12, !dbg !7820
  br label %unlock, !dbg !7821

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %29 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !7822
  %data11 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %29, i32 0, i32 7, !dbg !7824
  %30 = load %struct.mmc_data*, %struct.mmc_data** %data11, align 8, !dbg !7824
  %tobool12 = icmp ne %struct.mmc_data* %30, null, !dbg !7822
  br i1 %tobool12, label %land.lhs.true13, label %if.end19, !dbg !7825

land.lhs.true13:                                  ; preds = %if.end10
  %31 = load i32, i32* %err, align 4, !dbg !7826
  %tobool14 = icmp ne i32 %31, 0, !dbg !7826
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !7827

if.then15:                                        ; preds = %land.lhs.true13
  %32 = load i32, i32* %err, align 4, !dbg !7828
  %cmp16 = icmp ne i32 %32, -110, !dbg !7831
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7832

if.then17:                                        ; preds = %if.then15
  store i32 2, i32* %state, align 4, !dbg !7833
  br label %do.cond, !dbg !7835

if.end18:                                         ; preds = %if.then15
  %33 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7836
  call void @dw_mci_stop_dma(%struct.dw_mci* %33) #12, !dbg !7837
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7838
  %35 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7839
  call void @send_stop_abort(%struct.dw_mci* %34, %struct.mmc_data* %35) #12, !dbg !7840
  store i32 4, i32* %state, align 4, !dbg !7841
  br label %sw.epilog, !dbg !7842

if.end19:                                         ; preds = %land.lhs.true13, %if.end10
  %36 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !7843
  %data20 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %36, i32 0, i32 7, !dbg !7845
  %37 = load %struct.mmc_data*, %struct.mmc_data** %data20, align 8, !dbg !7845
  %tobool21 = icmp ne %struct.mmc_data* %37, null, !dbg !7843
  br i1 %tobool21, label %lor.lhs.false, label %if.then23, !dbg !7846

lor.lhs.false:                                    ; preds = %if.end19
  %38 = load i32, i32* %err, align 4, !dbg !7847
  %tobool22 = icmp ne i32 %38, 0, !dbg !7847
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !7848

if.then23:                                        ; preds = %lor.lhs.false, %if.end19
  %39 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7849
  %40 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7851
  call void @dw_mci_request_end(%struct.dw_mci* %39, %struct.mmc_request* %40) #12, !dbg !7852
  br label %unlock, !dbg !7853

if.end24:                                         ; preds = %lor.lhs.false
  store i32 2, i32* %state, align 4, !dbg !7854
  store i32 2, i32* %prev_state, align 4, !dbg !7855
  br label %sw.bb25, !dbg !7856

sw.bb25:                                          ; preds = %do.body, %if.end24
  %41 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7857
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %41, i32 0, i32 28, !dbg !7859
  %call26 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %pending_events) #12, !dbg !7860
  br i1 %call26, label %if.then27, label %if.end31, !dbg !7861

if.then27:                                        ; preds = %sw.bb25
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7862
  call void @dw_mci_stop_dma(%struct.dw_mci* %42) #12, !dbg !7864
  %43 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7865
  %data_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %43, i32 0, i32 24, !dbg !7867
  %44 = load i32, i32* %data_status, align 4, !dbg !7867
  %conv = zext i32 %44 to i64, !dbg !7865
  %and = and i64 %conv, 33280, !dbg !7868
  %tobool28 = icmp ne i64 %and, 0, !dbg !7868
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !7869

if.then29:                                        ; preds = %if.then27
  %45 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7870
  %46 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7871
  call void @send_stop_abort(%struct.dw_mci* %45, %struct.mmc_data* %46) #12, !dbg !7872
  br label %if.end30, !dbg !7872

if.end30:                                         ; preds = %if.then29, %if.then27
  store i32 5, i32* %state, align 4, !dbg !7873
  br label %sw.epilog, !dbg !7874

if.end31:                                         ; preds = %sw.bb25
  %47 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7875
  %pending_events32 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %47, i32 0, i32 28, !dbg !7877
  %call33 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %pending_events32) #12, !dbg !7878
  br i1 %call33, label %if.end39, label %if.then34, !dbg !7879

if.then34:                                        ; preds = %if.end31
  %48 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7880
  %dir_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %48, i32 0, i32 26, !dbg !7883
  %49 = load i32, i32* %dir_status, align 4, !dbg !7883
  %cmp35 = icmp eq i32 %49, 2, !dbg !7884
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !7885

if.then37:                                        ; preds = %if.then34
  %50 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7886
  call void @dw_mci_set_drto(%struct.dw_mci* %50) #12, !dbg !7887
  br label %if.end38, !dbg !7887

if.end38:                                         ; preds = %if.then37, %if.then34
  br label %sw.epilog, !dbg !7888

if.end39:                                         ; preds = %if.end31
  %51 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7889
  %completed_events40 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %51, i32 0, i32 29, !dbg !7890
  call void @set_bit(i64 1, i64* %completed_events40) #12, !dbg !7891
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7892
  %pending_events41 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %52, i32 0, i32 28, !dbg !7894
  %call42 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %pending_events41) #12, !dbg !7895
  br i1 %call42, label %if.then43, label %if.end50, !dbg !7896

if.then43:                                        ; preds = %if.end39
  %53 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7897
  call void @dw_mci_stop_dma(%struct.dw_mci* %53) #12, !dbg !7899
  %54 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7900
  %data_status44 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %54, i32 0, i32 24, !dbg !7902
  %55 = load i32, i32* %data_status44, align 4, !dbg !7902
  %conv45 = zext i32 %55 to i64, !dbg !7900
  %and46 = and i64 %conv45, 33280, !dbg !7903
  %tobool47 = icmp ne i64 %and46, 0, !dbg !7903
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !7904

if.then48:                                        ; preds = %if.then43
  %56 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7905
  %57 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7906
  call void @send_stop_abort(%struct.dw_mci* %56, %struct.mmc_data* %57) #12, !dbg !7907
  br label %if.end49, !dbg !7907

if.end49:                                         ; preds = %if.then48, %if.then43
  store i32 5, i32* %state, align 4, !dbg !7908
  br label %sw.epilog, !dbg !7909

if.end50:                                         ; preds = %if.end39
  store i32 3, i32* %state, align 4, !dbg !7910
  store i32 3, i32* %prev_state, align 4, !dbg !7911
  br label %sw.bb51, !dbg !7912

sw.bb51:                                          ; preds = %do.body, %if.end50
  %58 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7913
  %call52 = call zeroext i1 @dw_mci_clear_pending_data_complete(%struct.dw_mci* %58) #12, !dbg !7915
  br i1 %call52, label %if.end59, label %if.then53, !dbg !7916

if.then53:                                        ; preds = %sw.bb51
  %59 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7917
  %dir_status54 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %59, i32 0, i32 26, !dbg !7920
  %60 = load i32, i32* %dir_status54, align 4, !dbg !7920
  %cmp55 = icmp eq i32 %60, 2, !dbg !7921
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !7922

if.then57:                                        ; preds = %if.then53
  %61 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7923
  call void @dw_mci_set_drto(%struct.dw_mci* %61) #12, !dbg !7924
  br label %if.end58, !dbg !7924

if.end58:                                         ; preds = %if.then57, %if.then53
  br label %sw.epilog, !dbg !7925

if.end59:                                         ; preds = %sw.bb51
  %62 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7926
  %data60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %62, i32 0, i32 10, !dbg !7927
  store %struct.mmc_data* null, %struct.mmc_data** %data60, align 8, !dbg !7928
  %63 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7929
  %completed_events61 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %63, i32 0, i32 29, !dbg !7930
  call void @set_bit(i64 2, i64* %completed_events61) #12, !dbg !7931
  %64 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7932
  %65 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7933
  %call62 = call i32 @dw_mci_data_complete(%struct.dw_mci* %64, %struct.mmc_data* %65) #12, !dbg !7934
  store i32 %call62, i32* %err, align 4, !dbg !7935
  %66 = load i32, i32* %err, align 4, !dbg !7936
  %tobool63 = icmp ne i32 %66, 0, !dbg !7936
  br i1 %tobool63, label %if.else, label %if.then64, !dbg !7938

if.then64:                                        ; preds = %if.end59
  %67 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7939
  %stop = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %67, i32 0, i32 8, !dbg !7942
  %68 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !7942
  %tobool65 = icmp ne %struct.mmc_command* %68, null, !dbg !7939
  br i1 %tobool65, label %lor.lhs.false66, label %if.then69, !dbg !7943

lor.lhs.false66:                                  ; preds = %if.then64
  %69 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7944
  %sbc67 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %69, i32 0, i32 0, !dbg !7945
  %70 = load %struct.mmc_command*, %struct.mmc_command** %sbc67, align 8, !dbg !7945
  %tobool68 = icmp ne %struct.mmc_command* %70, null, !dbg !7944
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !7946

if.then69:                                        ; preds = %lor.lhs.false66, %if.then64
  %71 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7947
  %sbc70 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %71, i32 0, i32 0, !dbg !7950
  %72 = load %struct.mmc_command*, %struct.mmc_command** %sbc70, align 8, !dbg !7950
  %tobool71 = icmp ne %struct.mmc_command* %72, null, !dbg !7947
  br i1 %tobool71, label %land.lhs.true72, label %if.end77, !dbg !7951

land.lhs.true72:                                  ; preds = %if.then69
  %73 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7952
  %stop73 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %73, i32 0, i32 8, !dbg !7953
  %74 = load %struct.mmc_command*, %struct.mmc_command** %stop73, align 8, !dbg !7953
  %tobool74 = icmp ne %struct.mmc_command* %74, null, !dbg !7952
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !7954

if.then75:                                        ; preds = %land.lhs.true72
  %75 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7955
  %stop76 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %75, i32 0, i32 8, !dbg !7956
  %76 = load %struct.mmc_command*, %struct.mmc_command** %stop76, align 8, !dbg !7956
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %76, i32 0, i32 5, !dbg !7957
  store i32 0, i32* %error, align 8, !dbg !7958
  br label %if.end77, !dbg !7955

if.end77:                                         ; preds = %if.then75, %land.lhs.true72, %if.then69
  %77 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7959
  %78 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7960
  call void @dw_mci_request_end(%struct.dw_mci* %77, %struct.mmc_request* %78) #12, !dbg !7961
  br label %unlock, !dbg !7962

if.end78:                                         ; preds = %lor.lhs.false66
  %79 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7963
  %stop79 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %79, i32 0, i32 8, !dbg !7965
  %80 = load %struct.mmc_command*, %struct.mmc_command** %stop79, align 8, !dbg !7965
  %tobool80 = icmp ne %struct.mmc_command* %80, null, !dbg !7963
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !7966

if.then81:                                        ; preds = %if.end78
  %81 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7967
  %82 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !7968
  call void @send_stop_abort(%struct.dw_mci* %81, %struct.mmc_data* %82) #12, !dbg !7969
  br label %if.end82, !dbg !7969

if.end82:                                         ; preds = %if.then81, %if.end78
  br label %if.end88, !dbg !7970

if.else:                                          ; preds = %if.end59
  %83 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7971
  %pending_events83 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %83, i32 0, i32 28, !dbg !7974
  %call84 = call zeroext i1 @test_bit(i64 0, i64* %pending_events83) #12, !dbg !7975
  br i1 %call84, label %if.end87, label %if.then85, !dbg !7976

if.then85:                                        ; preds = %if.else
  %84 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7977
  %cmd86 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %84, i32 0, i32 9, !dbg !7979
  store %struct.mmc_command* null, %struct.mmc_command** %cmd86, align 8, !dbg !7980
  %85 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7981
  %86 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7982
  call void @dw_mci_request_end(%struct.dw_mci* %85, %struct.mmc_request* %86) #12, !dbg !7983
  br label %unlock, !dbg !7984

if.end87:                                         ; preds = %if.else
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end82
  store i32 4, i32* %state, align 4, !dbg !7985
  store i32 4, i32* %prev_state, align 4, !dbg !7986
  br label %sw.bb89, !dbg !7987

sw.bb89:                                          ; preds = %do.body, %if.end88
  %87 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !7988
  %call90 = call zeroext i1 @dw_mci_clear_pending_cmd_complete(%struct.dw_mci* %87) #12, !dbg !7990
  br i1 %call90, label %if.end92, label %if.then91, !dbg !7991

if.then91:                                        ; preds = %sw.bb89
  br label %sw.epilog, !dbg !7992

if.end92:                                         ; preds = %sw.bb89
  %88 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7993
  %cmd93 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %88, i32 0, i32 1, !dbg !7995
  %89 = load %struct.mmc_command*, %struct.mmc_command** %cmd93, align 8, !dbg !7995
  %error94 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %89, i32 0, i32 5, !dbg !7996
  %90 = load i32, i32* %error94, align 8, !dbg !7996
  %tobool95 = icmp ne i32 %90, 0, !dbg !7993
  br i1 %tobool95, label %land.lhs.true96, label %if.end101, !dbg !7997

land.lhs.true96:                                  ; preds = %if.end92
  %91 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7998
  %data97 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %91, i32 0, i32 2, !dbg !7999
  %92 = load %struct.mmc_data*, %struct.mmc_data** %data97, align 8, !dbg !7999
  %tobool98 = icmp ne %struct.mmc_data* %92, null, !dbg !7998
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !8000

if.then99:                                        ; preds = %land.lhs.true96
  %93 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8001
  %call100 = call zeroext i1 @dw_mci_reset(%struct.dw_mci* %93) #12, !dbg !8002
  br label %if.end101, !dbg !8002

if.end101:                                        ; preds = %if.then99, %land.lhs.true96, %if.end92
  %94 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8003
  %cmd102 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %94, i32 0, i32 9, !dbg !8004
  store %struct.mmc_command* null, %struct.mmc_command** %cmd102, align 8, !dbg !8005
  %95 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8006
  %data103 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %95, i32 0, i32 10, !dbg !8007
  store %struct.mmc_data* null, %struct.mmc_data** %data103, align 8, !dbg !8008
  %96 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8009
  %sbc104 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %96, i32 0, i32 0, !dbg !8011
  %97 = load %struct.mmc_command*, %struct.mmc_command** %sbc104, align 8, !dbg !8011
  %tobool105 = icmp ne %struct.mmc_command* %97, null, !dbg !8009
  br i1 %tobool105, label %if.else112, label %land.lhs.true106, !dbg !8012

land.lhs.true106:                                 ; preds = %if.end101
  %98 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8013
  %stop107 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %98, i32 0, i32 3, !dbg !8014
  %99 = load %struct.mmc_command*, %struct.mmc_command** %stop107, align 8, !dbg !8014
  %tobool108 = icmp ne %struct.mmc_command* %99, null, !dbg !8013
  br i1 %tobool108, label %if.then109, label %if.else112, !dbg !8015

if.then109:                                       ; preds = %land.lhs.true106
  %100 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8016
  %101 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8017
  %stop110 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %101, i32 0, i32 3, !dbg !8018
  %102 = load %struct.mmc_command*, %struct.mmc_command** %stop110, align 8, !dbg !8018
  %call111 = call i32 @dw_mci_command_complete(%struct.dw_mci* %100, %struct.mmc_command* %102) #12, !dbg !8019
  br label %if.end113, !dbg !8019

if.else112:                                       ; preds = %land.lhs.true106, %if.end101
  %103 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8020
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %103, i32 0, i32 23, !dbg !8021
  store i32 0, i32* %cmd_status, align 8, !dbg !8022
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.then109
  %104 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8023
  %105 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8024
  call void @dw_mci_request_end(%struct.dw_mci* %104, %struct.mmc_request* %105) #12, !dbg !8025
  br label %unlock, !dbg !8026

sw.bb114:                                         ; preds = %do.body
  %106 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8027
  %pending_events115 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %106, i32 0, i32 28, !dbg !8029
  %call116 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %pending_events115) #12, !dbg !8030
  br i1 %call116, label %if.end118, label %if.then117, !dbg !8031

if.then117:                                       ; preds = %sw.bb114
  br label %sw.epilog, !dbg !8032

if.end118:                                        ; preds = %sw.bb114
  store i32 3, i32* %state, align 4, !dbg !8033
  br label %sw.epilog, !dbg !8034

sw.epilog:                                        ; preds = %do.body, %if.end118, %if.then117, %if.then91, %if.end58, %if.end49, %if.end38, %if.end30, %if.end18, %if.then, %sw.bb
  br label %do.cond, !dbg !8035

do.cond:                                          ; preds = %sw.epilog, %if.then17
  %107 = load i32, i32* %state, align 4, !dbg !8036
  %108 = load i32, i32* %prev_state, align 4, !dbg !8037
  %cmp119 = icmp ne i32 %107, %108, !dbg !8038
  br i1 %cmp119, label %do.body, label %do.end, !dbg !8035, !llvm.loop !8039

do.end:                                           ; preds = %do.cond
  %109 = load i32, i32* %state, align 4, !dbg !8041
  %110 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8042
  %state121 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %110, i32 0, i32 30, !dbg !8043
  store i32 %109, i32* %state121, align 8, !dbg !8044
  br label %unlock, !dbg !8042

unlock:                                           ; preds = %do.end, %if.end113, %if.then85, %if.end77, %if.then23, %if.then8
  call void @llvm.dbg.label(metadata !8045), !dbg !8046
  %111 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8047
  %lock122 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %111, i32 0, i32 0, !dbg !8048
  store %struct.spinlock* %lock122, %struct.spinlock** %lock.addr.i123, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8049, !srcloc !8051
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i123, align 8, !dbg !8052
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !8052
  %rlock.i124 = bitcast %union.anon* %113 to %struct.raw_spinlock*, !dbg !8052
  ret void, !dbg !8054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #0 !dbg !8055 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8060, metadata !DIExpression()), !dbg !8061
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !8062, metadata !DIExpression()), !dbg !8063
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !8064, metadata !DIExpression()), !dbg !8065
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !8066, metadata !DIExpression()), !dbg !8067
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8068, metadata !DIExpression()), !dbg !8069
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8070
  %1 = load i32, i32* %irq.addr, align 4, !dbg !8071
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !8072
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !8073
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !8074
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !8075
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #12, !dbg !8076
  ret i32 %call, !dbg !8077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_interrupt(i32 %irq, i8* %dev_id) #0 !dbg !8078 {
entry:
  %lock.addr.i272 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i272, metadata !6938, metadata !DIExpression()), !dbg !8079
  %flags.addr.i273 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i273, metadata !6944, metadata !DIExpression()), !dbg !8085
  %tmp.i274 = alloca i32, align 4
  %tmp8.i275 = alloca i32, align 4
  %lock.addr.i270 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i270, metadata !6365, metadata !DIExpression()), !dbg !8086
  %lock.addr.i265 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i265, metadata !6938, metadata !DIExpression()), !dbg !8093
  %flags.addr.i266 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i266, metadata !6944, metadata !DIExpression()), !dbg !8097
  %tmp.i267 = alloca i32, align 4
  %tmp8.i268 = alloca i32, align 4
  %lock.addr.i263 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i263, metadata !6365, metadata !DIExpression()), !dbg !8098
  %lock.addr.i258 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i258, metadata !6938, metadata !DIExpression()), !dbg !8105
  %flags.addr.i259 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i259, metadata !6944, metadata !DIExpression()), !dbg !8109
  %tmp.i260 = alloca i32, align 4
  %tmp8.i261 = alloca i32, align 4
  %lock.addr.i256 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i256, metadata !6365, metadata !DIExpression()), !dbg !8110
  %lock.addr.i254 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i254, metadata !6938, metadata !DIExpression()), !dbg !8117
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !8121
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !8122
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %pending = alloca i32, align 4
  %slot = alloca %struct.dw_mci_slot*, align 8
  %irqflags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy15 = alloca i64, align 8
  %__dummy216 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  %__dummy38 = alloca i64, align 8
  %__dummy239 = alloca i64, align 8
  %tmp42 = alloca i32, align 4
  %__dummy46 = alloca i64, align 8
  %__dummy247 = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  %__dummy82 = alloca i64, align 8
  %__dummy283 = alloca i64, align 8
  %tmp86 = alloca i32, align 4
  %__dummy90 = alloca i64, align 8
  %__dummy291 = alloca i64, align 8
  %tmp94 = alloca i32, align 4
  %__dummy163 = alloca i64, align 8
  %__dummy2164 = alloca i64, align 8
  %tmp167 = alloca i32, align 4
  %__dummy171 = alloca i64, align 8
  %__dummy2172 = alloca i64, align 8
  %tmp175 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !8129, metadata !DIExpression()), !dbg !8130
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8131, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !8133, metadata !DIExpression()), !dbg !8134
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !8135
  %1 = bitcast i8* %0 to %struct.dw_mci*, !dbg !8135
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !8134
  call void @llvm.dbg.declare(metadata i32* %pending, metadata !8136, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !8138, metadata !DIExpression()), !dbg !8139
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8140
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 42, !dbg !8141
  %3 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot1, align 8, !dbg !8141
  store %struct.dw_mci_slot* %3, %struct.dw_mci_slot** %slot, align 8, !dbg !8139
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !8142, metadata !DIExpression()), !dbg !8143
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8144
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 2, !dbg !8144
  %5 = load i8*, i8** %regs, align 8, !dbg !8144
  %add.ptr = getelementptr i8, i8* %5, i64 64, !dbg !8144
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !8144
  store i32 %call, i32* %pending, align 4, !dbg !8145
  %6 = load i32, i32* %pending, align 4, !dbg !8146
  %tobool = icmp ne i32 %6, 0, !dbg !8146
  br i1 %tobool, label %if.then, label %if.end211, !dbg !8147

if.then:                                          ; preds = %entry
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8148
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 30, !dbg !8149
  %8 = load i32, i32* %state, align 8, !dbg !8149
  %cmp = icmp eq i32 %8, 6, !dbg !8150
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8151

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %pending, align 4, !dbg !8152
  %conv = zext i32 %9 to i64, !dbg !8152
  %and = and i64 %conv, 1024, !dbg !8153
  %tobool2 = icmp ne i64 %and, 0, !dbg !8153
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8154

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8155
  %regs4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 2, !dbg !8155
  %11 = load i8*, i8** %regs4, align 8, !dbg !8155
  %add.ptr5 = getelementptr i8, i8* %11, i64 68, !dbg !8155
  call void @__writel(i32 1024, i8* %add.ptr5) #12, !dbg !8155
  %12 = load i32, i32* %pending, align 4, !dbg !8156
  %conv6 = zext i32 %12 to i64, !dbg !8156
  %and7 = and i64 %conv6, -1025, !dbg !8156
  %conv8 = trunc i64 %and7 to i32, !dbg !8156
  store i32 %conv8, i32* %pending, align 4, !dbg !8156
  br label %do.body, !dbg !8157

do.body:                                          ; preds = %if.then3
  br label %do.body9, !dbg !8158

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8159, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8162, metadata !DIExpression()), !dbg !8161
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !8161
  %conv11 = zext i1 %cmp10 to i32, !dbg !8161
  store i32 1, i32* %tmp, align 4, !dbg !8161
  %13 = load i32, i32* %tmp, align 4, !dbg !8161
  br label %do.body12, !dbg !8163

do.body12:                                        ; preds = %do.body9
  br label %do.body13, !dbg !8164

do.body13:                                        ; preds = %do.body12
  br label %do.body14, !dbg !8165

do.body14:                                        ; preds = %do.body13
  call void @llvm.dbg.declare(metadata i64* %__dummy15, metadata !8167, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.declare(metadata i64* %__dummy216, metadata !8171, metadata !DIExpression()), !dbg !8170
  %cmp17 = icmp eq i64* %__dummy15, %__dummy216, !dbg !8170
  %conv18 = zext i1 %cmp17 to i32, !dbg !8170
  store i32 1, i32* %tmp19, align 4, !dbg !8170
  %14 = load i32, i32* %tmp19, align 4, !dbg !8170
  %call20 = call i64 @arch_local_irq_save() #12, !dbg !8172
  store i64 %call20, i64* %irqflags, align 8, !dbg !8172
  br label %do.end, !dbg !8172

do.end:                                           ; preds = %do.body14
  br label %do.end21, !dbg !8165

do.end21:                                         ; preds = %do.end
  br label %do.body22, !dbg !8164

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8173, !srcloc !8174
  br label %do.body23, !dbg !8173

do.body23:                                        ; preds = %do.body22
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8175
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 1, !dbg !8175
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8176
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8177
  %rlock.i = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !8177
  br label %do.end25, !dbg !8175

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !8173

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !8164

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !8163

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !8158

do.end29:                                         ; preds = %do.end28
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8178
  %19 = load i32, i32* %pending, align 4, !dbg !8179
  call void @dw_mci_cmd_interrupt(%struct.dw_mci* %18, i32 %19) #12, !dbg !8180
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8181
  %irq_lock30 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 1, !dbg !8182
  %21 = load i64, i64* %irqflags, align 8, !dbg !8183
  store %struct.spinlock* %irq_lock30, %struct.spinlock** %lock.addr.i254, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !8184
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !8184
  store i32 1, i32* %tmp.i, align 4, !dbg !8184
  %22 = load i32, i32* %tmp.i, align 4, !dbg !8184
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !8185
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !8185
  store i32 1, i32* %tmp8.i, align 4, !dbg !8185
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !8185
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !8186
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !8186
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8187, !srcloc !7041
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i254, align 8, !dbg !8188
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !8188
  %rlock.i255 = bitcast %union.anon* %26 to %struct.raw_spinlock*, !dbg !8188
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8189
  %cmd11_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 54, !dbg !8190
  %call31 = call i32 @del_timer(%struct.timer_list* %cmd11_timer) #12, !dbg !8191
  br label %if.end, !dbg !8192

if.end:                                           ; preds = %do.end29, %land.lhs.true, %if.then
  %28 = load i32, i32* %pending, align 4, !dbg !8193
  %conv32 = zext i32 %28 to i64, !dbg !8193
  %and33 = and i64 %conv32, 4418, !dbg !8194
  %tobool34 = icmp ne i64 %and33, 0, !dbg !8194
  br i1 %tobool34, label %if.then35, label %if.end67, !dbg !8195

if.then35:                                        ; preds = %if.end
  br label %do.body36, !dbg !8196

do.body36:                                        ; preds = %if.then35
  br label %do.body37, !dbg !8197

do.body37:                                        ; preds = %do.body36
  call void @llvm.dbg.declare(metadata i64* %__dummy38, metadata !8198, metadata !DIExpression()), !dbg !8200
  call void @llvm.dbg.declare(metadata i64* %__dummy239, metadata !8201, metadata !DIExpression()), !dbg !8200
  %cmp40 = icmp eq i64* %__dummy38, %__dummy239, !dbg !8200
  %conv41 = zext i1 %cmp40 to i32, !dbg !8200
  store i32 1, i32* %tmp42, align 4, !dbg !8200
  %29 = load i32, i32* %tmp42, align 4, !dbg !8200
  br label %do.body43, !dbg !8202

do.body43:                                        ; preds = %do.body37
  br label %do.body44, !dbg !8203

do.body44:                                        ; preds = %do.body43
  br label %do.body45, !dbg !8204

do.body45:                                        ; preds = %do.body44
  call void @llvm.dbg.declare(metadata i64* %__dummy46, metadata !8206, metadata !DIExpression()), !dbg !8209
  call void @llvm.dbg.declare(metadata i64* %__dummy247, metadata !8210, metadata !DIExpression()), !dbg !8209
  %cmp48 = icmp eq i64* %__dummy46, %__dummy247, !dbg !8209
  %conv49 = zext i1 %cmp48 to i32, !dbg !8209
  store i32 1, i32* %tmp50, align 4, !dbg !8209
  %30 = load i32, i32* %tmp50, align 4, !dbg !8209
  %call51 = call i64 @arch_local_irq_save() #12, !dbg !8211
  store i64 %call51, i64* %irqflags, align 8, !dbg !8211
  br label %do.end52, !dbg !8211

do.end52:                                         ; preds = %do.body45
  br label %do.end53, !dbg !8204

do.end53:                                         ; preds = %do.end52
  br label %do.body54, !dbg !8203

do.body54:                                        ; preds = %do.end53
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8212, !srcloc !8213
  br label %do.body55, !dbg !8212

do.body55:                                        ; preds = %do.body54
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8214
  %irq_lock56 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 1, !dbg !8214
  store %struct.spinlock* %irq_lock56, %struct.spinlock** %lock.addr.i256, align 8
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i256, align 8, !dbg !8215
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !8216
  %rlock.i257 = bitcast %union.anon* %33 to %struct.raw_spinlock*, !dbg !8216
  br label %do.end58, !dbg !8214

do.end58:                                         ; preds = %do.body55
  br label %do.end59, !dbg !8212

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !8203

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !8202

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !8197

do.end62:                                         ; preds = %do.end61
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8217
  %cto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %34, i32 0, i32 55, !dbg !8218
  %call63 = call i32 @del_timer(%struct.timer_list* %cto_timer) #12, !dbg !8219
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8220
  %regs64 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 2, !dbg !8220
  %36 = load i8*, i8** %regs64, align 8, !dbg !8220
  %add.ptr65 = getelementptr i8, i8* %36, i64 68, !dbg !8220
  call void @__writel(i32 4418, i8* %add.ptr65) #12, !dbg !8220
  %37 = load i32, i32* %pending, align 4, !dbg !8221
  %38 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8222
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %38, i32 0, i32 23, !dbg !8223
  store i32 %37, i32* %cmd_status, align 8, !dbg !8224
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8225, !srcloc !8226
  %39 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8227
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %39, i32 0, i32 28, !dbg !8228
  call void @set_bit(i64 0, i64* %pending_events) #12, !dbg !8229
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8230
  %irq_lock66 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 1, !dbg !8231
  %41 = load i64, i64* %irqflags, align 8, !dbg !8232
  store %struct.spinlock* %irq_lock66, %struct.spinlock** %lock.addr.i258, align 8
  store i64 %41, i64* %flags.addr.i259, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !8233
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !8233
  store i32 1, i32* %tmp.i260, align 4, !dbg !8233
  %42 = load i32, i32* %tmp.i260, align 4, !dbg !8233
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !8234
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !8234
  store i32 1, i32* %tmp8.i261, align 4, !dbg !8234
  %43 = load i32, i32* %tmp8.i261, align 4, !dbg !8234
  %44 = load i64, i64* %flags.addr.i259, align 8, !dbg !8235
  call void @arch_local_irq_restore(i64 %44) #14, !dbg !8235
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8236, !srcloc !7041
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i258, align 8, !dbg !8237
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !8237
  %rlock.i262 = bitcast %union.anon* %46 to %struct.raw_spinlock*, !dbg !8237
  br label %if.end67, !dbg !8238

if.end67:                                         ; preds = %do.end62, %if.end
  %47 = load i32, i32* %pending, align 4, !dbg !8239
  %conv68 = zext i32 %47 to i64, !dbg !8239
  %and69 = and i64 %conv68, 46720, !dbg !8241
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8241
  br i1 %tobool70, label %if.then71, label %if.end75, !dbg !8242

if.then71:                                        ; preds = %if.end67
  %48 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8243
  %regs72 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %48, i32 0, i32 2, !dbg !8243
  %49 = load i8*, i8** %regs72, align 8, !dbg !8243
  %add.ptr73 = getelementptr i8, i8* %49, i64 68, !dbg !8243
  call void @__writel(i32 46720, i8* %add.ptr73) #12, !dbg !8243
  %50 = load i32, i32* %pending, align 4, !dbg !8245
  %51 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8246
  %data_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %51, i32 0, i32 24, !dbg !8247
  store i32 %50, i32* %data_status, align 4, !dbg !8248
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8249, !srcloc !8250
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8251
  %pending_events74 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %52, i32 0, i32 28, !dbg !8252
  call void @set_bit(i64 3, i64* %pending_events74) #12, !dbg !8253
  %53 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8254
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %53, i32 0, i32 27, !dbg !8255
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #12, !dbg !8256
  br label %if.end75, !dbg !8257

if.end75:                                         ; preds = %if.then71, %if.end67
  %54 = load i32, i32* %pending, align 4, !dbg !8258
  %conv76 = zext i32 %54 to i64, !dbg !8258
  %and77 = and i64 %conv76, 8, !dbg !8259
  %tobool78 = icmp ne i64 %and77, 0, !dbg !8259
  br i1 %tobool78, label %if.then79, label %if.end126, !dbg !8260

if.then79:                                        ; preds = %if.end75
  br label %do.body80, !dbg !8261

do.body80:                                        ; preds = %if.then79
  br label %do.body81, !dbg !8262

do.body81:                                        ; preds = %do.body80
  call void @llvm.dbg.declare(metadata i64* %__dummy82, metadata !8263, metadata !DIExpression()), !dbg !8265
  call void @llvm.dbg.declare(metadata i64* %__dummy283, metadata !8266, metadata !DIExpression()), !dbg !8265
  %cmp84 = icmp eq i64* %__dummy82, %__dummy283, !dbg !8265
  %conv85 = zext i1 %cmp84 to i32, !dbg !8265
  store i32 1, i32* %tmp86, align 4, !dbg !8265
  %55 = load i32, i32* %tmp86, align 4, !dbg !8265
  br label %do.body87, !dbg !8267

do.body87:                                        ; preds = %do.body81
  br label %do.body88, !dbg !8268

do.body88:                                        ; preds = %do.body87
  br label %do.body89, !dbg !8269

do.body89:                                        ; preds = %do.body88
  call void @llvm.dbg.declare(metadata i64* %__dummy90, metadata !8271, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata i64* %__dummy291, metadata !8275, metadata !DIExpression()), !dbg !8274
  %cmp92 = icmp eq i64* %__dummy90, %__dummy291, !dbg !8274
  %conv93 = zext i1 %cmp92 to i32, !dbg !8274
  store i32 1, i32* %tmp94, align 4, !dbg !8274
  %56 = load i32, i32* %tmp94, align 4, !dbg !8274
  %call95 = call i64 @arch_local_irq_save() #12, !dbg !8276
  store i64 %call95, i64* %irqflags, align 8, !dbg !8276
  br label %do.end96, !dbg !8276

do.end96:                                         ; preds = %do.body89
  br label %do.end97, !dbg !8269

do.end97:                                         ; preds = %do.end96
  br label %do.body98, !dbg !8268

do.body98:                                        ; preds = %do.end97
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8277, !srcloc !8278
  br label %do.body99, !dbg !8277

do.body99:                                        ; preds = %do.body98
  %57 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8279
  %irq_lock100 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %57, i32 0, i32 1, !dbg !8279
  store %struct.spinlock* %irq_lock100, %struct.spinlock** %lock.addr.i263, align 8
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i263, align 8, !dbg !8280
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !8281
  %rlock.i264 = bitcast %union.anon* %59 to %struct.raw_spinlock*, !dbg !8281
  br label %do.end102, !dbg !8279

do.end102:                                        ; preds = %do.body99
  br label %do.end103, !dbg !8277

do.end103:                                        ; preds = %do.end102
  br label %do.end104, !dbg !8268

do.end104:                                        ; preds = %do.end103
  br label %do.end105, !dbg !8267

do.end105:                                        ; preds = %do.end104
  br label %do.end106, !dbg !8262

do.end106:                                        ; preds = %do.end105
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8282
  %dto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 56, !dbg !8283
  %call107 = call i32 @del_timer(%struct.timer_list* %dto_timer) #12, !dbg !8284
  %61 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8285
  %regs108 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %61, i32 0, i32 2, !dbg !8285
  %62 = load i8*, i8** %regs108, align 8, !dbg !8285
  %add.ptr109 = getelementptr i8, i8* %62, i64 68, !dbg !8285
  call void @__writel(i32 8, i8* %add.ptr109) #12, !dbg !8285
  %63 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8286
  %data_status110 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %63, i32 0, i32 24, !dbg !8288
  %64 = load i32, i32* %data_status110, align 4, !dbg !8288
  %tobool111 = icmp ne i32 %64, 0, !dbg !8286
  br i1 %tobool111, label %if.end114, label %if.then112, !dbg !8289

if.then112:                                       ; preds = %do.end106
  %65 = load i32, i32* %pending, align 4, !dbg !8290
  %66 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8291
  %data_status113 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %66, i32 0, i32 24, !dbg !8292
  store i32 %65, i32* %data_status113, align 4, !dbg !8293
  br label %if.end114, !dbg !8291

if.end114:                                        ; preds = %if.then112, %do.end106
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8294, !srcloc !8295
  %67 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8296
  %dir_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %67, i32 0, i32 26, !dbg !8298
  %68 = load i32, i32* %dir_status, align 4, !dbg !8298
  %cmp115 = icmp eq i32 %68, 2, !dbg !8299
  br i1 %cmp115, label %if.then117, label %if.end122, !dbg !8300

if.then117:                                       ; preds = %if.end114
  %69 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8301
  %sg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %69, i32 0, i32 6, !dbg !8304
  %70 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !8304
  %cmp118 = icmp ne %struct.scatterlist* %70, null, !dbg !8305
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !8306

if.then120:                                       ; preds = %if.then117
  %71 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8307
  call void @dw_mci_read_data_pio(%struct.dw_mci* %71, i1 zeroext true) #12, !dbg !8308
  br label %if.end121, !dbg !8308

if.end121:                                        ; preds = %if.then120, %if.then117
  br label %if.end122, !dbg !8309

if.end122:                                        ; preds = %if.end121, %if.end114
  %72 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8310
  %pending_events123 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %72, i32 0, i32 28, !dbg !8311
  call void @set_bit(i64 2, i64* %pending_events123) #12, !dbg !8312
  %73 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8313
  %tasklet124 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %73, i32 0, i32 27, !dbg !8314
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet124) #12, !dbg !8315
  %74 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8316
  %irq_lock125 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %74, i32 0, i32 1, !dbg !8317
  %75 = load i64, i64* %irqflags, align 8, !dbg !8318
  store %struct.spinlock* %irq_lock125, %struct.spinlock** %lock.addr.i265, align 8
  store i64 %75, i64* %flags.addr.i266, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !8319
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !8319
  store i32 1, i32* %tmp.i267, align 4, !dbg !8319
  %76 = load i32, i32* %tmp.i267, align 4, !dbg !8319
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !8320
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !8320
  store i32 1, i32* %tmp8.i268, align 4, !dbg !8320
  %77 = load i32, i32* %tmp8.i268, align 4, !dbg !8320
  %78 = load i64, i64* %flags.addr.i266, align 8, !dbg !8321
  call void @arch_local_irq_restore(i64 %78) #14, !dbg !8321
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8322, !srcloc !7041
  %79 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i265, align 8, !dbg !8323
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %79, i32 0, i32 0, !dbg !8323
  %rlock.i269 = bitcast %union.anon* %80 to %struct.raw_spinlock*, !dbg !8323
  br label %if.end126, !dbg !8324

if.end126:                                        ; preds = %if.end122, %if.end75
  %81 = load i32, i32* %pending, align 4, !dbg !8325
  %conv127 = zext i32 %81 to i64, !dbg !8325
  %and128 = and i64 %conv127, 32, !dbg !8327
  %tobool129 = icmp ne i64 %and128, 0, !dbg !8327
  br i1 %tobool129, label %if.then130, label %if.end141, !dbg !8328

if.then130:                                       ; preds = %if.end126
  %82 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8329
  %regs131 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %82, i32 0, i32 2, !dbg !8329
  %83 = load i8*, i8** %regs131, align 8, !dbg !8329
  %add.ptr132 = getelementptr i8, i8* %83, i64 68, !dbg !8329
  call void @__writel(i32 32, i8* %add.ptr132) #12, !dbg !8329
  %84 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8331
  %dir_status133 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %84, i32 0, i32 26, !dbg !8333
  %85 = load i32, i32* %dir_status133, align 4, !dbg !8333
  %cmp134 = icmp eq i32 %85, 2, !dbg !8334
  br i1 %cmp134, label %land.lhs.true136, label %if.end140, !dbg !8335

land.lhs.true136:                                 ; preds = %if.then130
  %86 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8336
  %sg137 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %86, i32 0, i32 6, !dbg !8337
  %87 = load %struct.scatterlist*, %struct.scatterlist** %sg137, align 8, !dbg !8337
  %tobool138 = icmp ne %struct.scatterlist* %87, null, !dbg !8336
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !8338

if.then139:                                       ; preds = %land.lhs.true136
  %88 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8339
  call void @dw_mci_read_data_pio(%struct.dw_mci* %88, i1 zeroext false) #12, !dbg !8340
  br label %if.end140, !dbg !8340

if.end140:                                        ; preds = %if.then139, %land.lhs.true136, %if.then130
  br label %if.end141, !dbg !8341

if.end141:                                        ; preds = %if.end140, %if.end126
  %89 = load i32, i32* %pending, align 4, !dbg !8342
  %conv142 = zext i32 %89 to i64, !dbg !8342
  %and143 = and i64 %conv142, 16, !dbg !8344
  %tobool144 = icmp ne i64 %and143, 0, !dbg !8344
  br i1 %tobool144, label %if.then145, label %if.end156, !dbg !8345

if.then145:                                       ; preds = %if.end141
  %90 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8346
  %regs146 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %90, i32 0, i32 2, !dbg !8346
  %91 = load i8*, i8** %regs146, align 8, !dbg !8346
  %add.ptr147 = getelementptr i8, i8* %91, i64 68, !dbg !8346
  call void @__writel(i32 16, i8* %add.ptr147) #12, !dbg !8346
  %92 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8348
  %dir_status148 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %92, i32 0, i32 26, !dbg !8350
  %93 = load i32, i32* %dir_status148, align 4, !dbg !8350
  %cmp149 = icmp eq i32 %93, 1, !dbg !8351
  br i1 %cmp149, label %land.lhs.true151, label %if.end155, !dbg !8352

land.lhs.true151:                                 ; preds = %if.then145
  %94 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8353
  %sg152 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %94, i32 0, i32 6, !dbg !8354
  %95 = load %struct.scatterlist*, %struct.scatterlist** %sg152, align 8, !dbg !8354
  %tobool153 = icmp ne %struct.scatterlist* %95, null, !dbg !8353
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !8355

if.then154:                                       ; preds = %land.lhs.true151
  %96 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8356
  call void @dw_mci_write_data_pio(%struct.dw_mci* %96) #12, !dbg !8357
  br label %if.end155, !dbg !8357

if.end155:                                        ; preds = %if.then154, %land.lhs.true151, %if.then145
  br label %if.end156, !dbg !8358

if.end156:                                        ; preds = %if.end155, %if.end141
  %97 = load i32, i32* %pending, align 4, !dbg !8359
  %conv157 = zext i32 %97 to i64, !dbg !8359
  %and158 = and i64 %conv157, 4, !dbg !8360
  %tobool159 = icmp ne i64 %and158, 0, !dbg !8360
  br i1 %tobool159, label %if.then160, label %if.end191, !dbg !8361

if.then160:                                       ; preds = %if.end156
  br label %do.body161, !dbg !8362

do.body161:                                       ; preds = %if.then160
  br label %do.body162, !dbg !8363

do.body162:                                       ; preds = %do.body161
  call void @llvm.dbg.declare(metadata i64* %__dummy163, metadata !8364, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.declare(metadata i64* %__dummy2164, metadata !8367, metadata !DIExpression()), !dbg !8366
  %cmp165 = icmp eq i64* %__dummy163, %__dummy2164, !dbg !8366
  %conv166 = zext i1 %cmp165 to i32, !dbg !8366
  store i32 1, i32* %tmp167, align 4, !dbg !8366
  %98 = load i32, i32* %tmp167, align 4, !dbg !8366
  br label %do.body168, !dbg !8368

do.body168:                                       ; preds = %do.body162
  br label %do.body169, !dbg !8369

do.body169:                                       ; preds = %do.body168
  br label %do.body170, !dbg !8370

do.body170:                                       ; preds = %do.body169
  call void @llvm.dbg.declare(metadata i64* %__dummy171, metadata !8372, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.declare(metadata i64* %__dummy2172, metadata !8376, metadata !DIExpression()), !dbg !8375
  %cmp173 = icmp eq i64* %__dummy171, %__dummy2172, !dbg !8375
  %conv174 = zext i1 %cmp173 to i32, !dbg !8375
  store i32 1, i32* %tmp175, align 4, !dbg !8375
  %99 = load i32, i32* %tmp175, align 4, !dbg !8375
  %call176 = call i64 @arch_local_irq_save() #12, !dbg !8377
  store i64 %call176, i64* %irqflags, align 8, !dbg !8377
  br label %do.end177, !dbg !8377

do.end177:                                        ; preds = %do.body170
  br label %do.end178, !dbg !8370

do.end178:                                        ; preds = %do.end177
  br label %do.body179, !dbg !8369

do.body179:                                       ; preds = %do.end178
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8378, !srcloc !8379
  br label %do.body180, !dbg !8378

do.body180:                                       ; preds = %do.body179
  %100 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8380
  %irq_lock181 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %100, i32 0, i32 1, !dbg !8380
  store %struct.spinlock* %irq_lock181, %struct.spinlock** %lock.addr.i270, align 8
  %101 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i270, align 8, !dbg !8381
  %102 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %101, i32 0, i32 0, !dbg !8382
  %rlock.i271 = bitcast %union.anon* %102 to %struct.raw_spinlock*, !dbg !8382
  br label %do.end183, !dbg !8380

do.end183:                                        ; preds = %do.body180
  br label %do.end184, !dbg !8378

do.end184:                                        ; preds = %do.end183
  br label %do.end185, !dbg !8369

do.end185:                                        ; preds = %do.end184
  br label %do.end186, !dbg !8368

do.end186:                                        ; preds = %do.end185
  br label %do.end187, !dbg !8363

do.end187:                                        ; preds = %do.end186
  %103 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8383
  %regs188 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %103, i32 0, i32 2, !dbg !8383
  %104 = load i8*, i8** %regs188, align 8, !dbg !8383
  %add.ptr189 = getelementptr i8, i8* %104, i64 68, !dbg !8383
  call void @__writel(i32 4, i8* %add.ptr189) #12, !dbg !8383
  %105 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8384
  %106 = load i32, i32* %pending, align 4, !dbg !8385
  call void @dw_mci_cmd_interrupt(%struct.dw_mci* %105, i32 %106) #12, !dbg !8386
  %107 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8387
  %irq_lock190 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %107, i32 0, i32 1, !dbg !8388
  %108 = load i64, i64* %irqflags, align 8, !dbg !8389
  store %struct.spinlock* %irq_lock190, %struct.spinlock** %lock.addr.i272, align 8
  store i64 %108, i64* %flags.addr.i273, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !8390
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !8390
  store i32 1, i32* %tmp.i274, align 4, !dbg !8390
  %109 = load i32, i32* %tmp.i274, align 4, !dbg !8390
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !8391
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !8391
  store i32 1, i32* %tmp8.i275, align 4, !dbg !8391
  %110 = load i32, i32* %tmp8.i275, align 4, !dbg !8391
  %111 = load i64, i64* %flags.addr.i273, align 8, !dbg !8392
  call void @arch_local_irq_restore(i64 %111) #14, !dbg !8392
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8393, !srcloc !7041
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i272, align 8, !dbg !8394
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !8394
  %rlock.i276 = bitcast %union.anon* %113 to %struct.raw_spinlock*, !dbg !8394
  br label %if.end191, !dbg !8395

if.end191:                                        ; preds = %do.end187, %if.end156
  %114 = load i32, i32* %pending, align 4, !dbg !8396
  %conv192 = zext i32 %114 to i64, !dbg !8396
  %and193 = and i64 %conv192, 1, !dbg !8398
  %tobool194 = icmp ne i64 %and193, 0, !dbg !8398
  br i1 %tobool194, label %if.then195, label %if.end198, !dbg !8399

if.then195:                                       ; preds = %if.end191
  %115 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8400
  %regs196 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %115, i32 0, i32 2, !dbg !8400
  %116 = load i8*, i8** %regs196, align 8, !dbg !8400
  %add.ptr197 = getelementptr i8, i8* %116, i64 68, !dbg !8400
  call void @__writel(i32 1, i8* %add.ptr197) #12, !dbg !8400
  %117 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8402
  call void @dw_mci_handle_cd(%struct.dw_mci* %117) #12, !dbg !8403
  br label %if.end198, !dbg !8404

if.end198:                                        ; preds = %if.then195, %if.end191
  %118 = load i32, i32* %pending, align 4, !dbg !8405
  %conv199 = zext i32 %118 to i64, !dbg !8405
  %119 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8407
  %sdio_id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %119, i32 0, i32 9, !dbg !8407
  %120 = load i32, i32* %sdio_id, align 4, !dbg !8407
  %add = add i32 16, %120, !dbg !8407
  %sh_prom = zext i32 %add to i64, !dbg !8407
  %shl = shl i64 1, %sh_prom, !dbg !8407
  %and200 = and i64 %conv199, %shl, !dbg !8408
  %tobool201 = icmp ne i64 %and200, 0, !dbg !8408
  br i1 %tobool201, label %if.then202, label %if.end210, !dbg !8409

if.then202:                                       ; preds = %if.end198
  %121 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8410
  %sdio_id203 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %121, i32 0, i32 9, !dbg !8410
  %122 = load i32, i32* %sdio_id203, align 4, !dbg !8410
  %add204 = add i32 16, %122, !dbg !8410
  %sh_prom205 = zext i32 %add204 to i64, !dbg !8410
  %shl206 = shl i64 1, %sh_prom205, !dbg !8410
  %conv207 = trunc i64 %shl206 to i32, !dbg !8410
  %123 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8410
  %regs208 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %123, i32 0, i32 2, !dbg !8410
  %124 = load i8*, i8** %regs208, align 8, !dbg !8410
  %add.ptr209 = getelementptr i8, i8* %124, i64 68, !dbg !8410
  call void @__writel(i32 %conv207, i8* %add.ptr209) #12, !dbg !8410
  %125 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8412
  call void @__dw_mci_enable_sdio_irq(%struct.dw_mci_slot* %125, i32 0) #12, !dbg !8413
  %126 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8414
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %126, i32 0, i32 0, !dbg !8415
  %127 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8415
  call void @sdio_signal_irq(%struct.mmc_host* %127) #12, !dbg !8416
  br label %if.end210, !dbg !8417

if.end210:                                        ; preds = %if.then202, %if.end198
  br label %if.end211, !dbg !8418

if.end211:                                        ; preds = %if.end210, %entry
  %128 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8419
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %128, i32 0, i32 14, !dbg !8421
  %129 = load i32, i32* %use_dma, align 8, !dbg !8421
  %cmp212 = icmp ne i32 %129, 1, !dbg !8422
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !8423

if.then214:                                       ; preds = %if.end211
  store i32 1, i32* %retval, align 4, !dbg !8424
  br label %return, !dbg !8424

if.end215:                                        ; preds = %if.end211
  %130 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8425
  %dma_64bit_address = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %130, i32 0, i32 16, !dbg !8427
  %131 = load i32, i32* %dma_64bit_address, align 8, !dbg !8427
  %cmp216 = icmp eq i32 %131, 1, !dbg !8428
  br i1 %cmp216, label %if.then218, label %if.else, !dbg !8429

if.then218:                                       ; preds = %if.end215
  %132 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8430
  %regs219 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %132, i32 0, i32 2, !dbg !8430
  %133 = load i8*, i8** %regs219, align 8, !dbg !8430
  %add.ptr220 = getelementptr i8, i8* %133, i64 144, !dbg !8430
  %call221 = call i32 @__readl(i8* %add.ptr220) #12, !dbg !8430
  store i32 %call221, i32* %pending, align 4, !dbg !8432
  %134 = load i32, i32* %pending, align 4, !dbg !8433
  %conv222 = zext i32 %134 to i64, !dbg !8433
  %and223 = and i64 %conv222, 3, !dbg !8435
  %tobool224 = icmp ne i64 %and223, 0, !dbg !8435
  br i1 %tobool224, label %if.then225, label %if.end234, !dbg !8436

if.then225:                                       ; preds = %if.then218
  %135 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8437
  %regs226 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %135, i32 0, i32 2, !dbg !8437
  %136 = load i8*, i8** %regs226, align 8, !dbg !8437
  %add.ptr227 = getelementptr i8, i8* %136, i64 144, !dbg !8437
  call void @__writel(i32 3, i8* %add.ptr227) #12, !dbg !8437
  %137 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8439
  %regs228 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %137, i32 0, i32 2, !dbg !8439
  %138 = load i8*, i8** %regs228, align 8, !dbg !8439
  %add.ptr229 = getelementptr i8, i8* %138, i64 144, !dbg !8439
  call void @__writel(i32 256, i8* %add.ptr229) #12, !dbg !8439
  %139 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8440
  %pending_events230 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %139, i32 0, i32 28, !dbg !8442
  %call231 = call zeroext i1 @test_bit(i64 3, i64* %pending_events230) #12, !dbg !8443
  br i1 %call231, label %if.end233, label %if.then232, !dbg !8444

if.then232:                                       ; preds = %if.then225
  %140 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8445
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %140, i32 0, i32 19, !dbg !8446
  %141 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !8446
  %complete = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %141, i32 0, i32 2, !dbg !8447
  %142 = load void (i8*)*, void (i8*)** %complete, align 8, !dbg !8447
  %143 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8448
  %144 = bitcast %struct.dw_mci* %143 to i8*, !dbg !8449
  call void %142(i8* %144) #12, !dbg !8445
  br label %if.end233, !dbg !8445

if.end233:                                        ; preds = %if.then232, %if.then225
  br label %if.end234, !dbg !8450

if.end234:                                        ; preds = %if.end233, %if.then218
  br label %if.end253, !dbg !8451

if.else:                                          ; preds = %if.end215
  %145 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8452
  %regs235 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %145, i32 0, i32 2, !dbg !8452
  %146 = load i8*, i8** %regs235, align 8, !dbg !8452
  %add.ptr236 = getelementptr i8, i8* %146, i64 140, !dbg !8452
  %call237 = call i32 @__readl(i8* %add.ptr236) #12, !dbg !8452
  store i32 %call237, i32* %pending, align 4, !dbg !8454
  %147 = load i32, i32* %pending, align 4, !dbg !8455
  %conv238 = zext i32 %147 to i64, !dbg !8455
  %and239 = and i64 %conv238, 3, !dbg !8457
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8457
  br i1 %tobool240, label %if.then241, label %if.end252, !dbg !8458

if.then241:                                       ; preds = %if.else
  %148 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8459
  %regs242 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %148, i32 0, i32 2, !dbg !8459
  %149 = load i8*, i8** %regs242, align 8, !dbg !8459
  %add.ptr243 = getelementptr i8, i8* %149, i64 140, !dbg !8459
  call void @__writel(i32 3, i8* %add.ptr243) #12, !dbg !8459
  %150 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8461
  %regs244 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %150, i32 0, i32 2, !dbg !8461
  %151 = load i8*, i8** %regs244, align 8, !dbg !8461
  %add.ptr245 = getelementptr i8, i8* %151, i64 140, !dbg !8461
  call void @__writel(i32 256, i8* %add.ptr245) #12, !dbg !8461
  %152 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8462
  %pending_events246 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %152, i32 0, i32 28, !dbg !8464
  %call247 = call zeroext i1 @test_bit(i64 3, i64* %pending_events246) #12, !dbg !8465
  br i1 %call247, label %if.end251, label %if.then248, !dbg !8466

if.then248:                                       ; preds = %if.then241
  %153 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8467
  %dma_ops249 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %153, i32 0, i32 19, !dbg !8468
  %154 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops249, align 8, !dbg !8468
  %complete250 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %154, i32 0, i32 2, !dbg !8469
  %155 = load void (i8*)*, void (i8*)** %complete250, align 8, !dbg !8469
  %156 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8470
  %157 = bitcast %struct.dw_mci* %156 to i8*, !dbg !8471
  call void %155(i8* %157) #12, !dbg !8467
  br label %if.end251, !dbg !8467

if.end251:                                        ; preds = %if.then248, %if.then241
  br label %if.end252, !dbg !8472

if.end252:                                        ; preds = %if.end251, %if.else
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.end234
  store i32 1, i32* %retval, align 4, !dbg !8473
  br label %return, !dbg !8473

return:                                           ; preds = %if.end253, %if.then214
  %158 = load i32, i32* %retval, align 4, !dbg !8474
  ret i32 %158, !dbg !8474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_init_slot(%struct.dw_mci* %host) #0 !dbg !8475 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %mmc = alloca %struct.mmc_host*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %ret = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc, metadata !8478, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !8480, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8482, metadata !DIExpression()), !dbg !8483
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8484
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 36, !dbg !8485
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8485
  %call = call %struct.mmc_host* @mmc_alloc_host(i32 72, %struct.device* %1) #12, !dbg !8486
  store %struct.mmc_host* %call, %struct.mmc_host** %mmc, align 8, !dbg !8487
  %2 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8488
  %tobool = icmp ne %struct.mmc_host* %2, null, !dbg !8488
  br i1 %tobool, label %if.end, label %if.then, !dbg !8490

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8491
  br label %return, !dbg !8491

if.end:                                           ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8492
  %call1 = call i8* @mmc_priv(%struct.mmc_host* %3) #12, !dbg !8493
  %4 = bitcast i8* %call1 to %struct.dw_mci_slot*, !dbg !8493
  store %struct.dw_mci_slot* %4, %struct.dw_mci_slot** %slot, align 8, !dbg !8494
  %5 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8495
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %5, i32 0, i32 8, !dbg !8496
  store i32 0, i32* %id, align 8, !dbg !8497
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8498
  %sdio_id0 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 53, !dbg !8499
  %7 = load i32, i32* %sdio_id0, align 4, !dbg !8499
  %8 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8500
  %id2 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %8, i32 0, i32 8, !dbg !8501
  %9 = load i32, i32* %id2, align 8, !dbg !8501
  %add = add i32 %7, %9, !dbg !8502
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8503
  %sdio_id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 9, !dbg !8504
  store i32 %add, i32* %sdio_id, align 4, !dbg !8505
  %11 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8506
  %12 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8507
  %mmc3 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %12, i32 0, i32 0, !dbg !8508
  store %struct.mmc_host* %11, %struct.mmc_host** %mmc3, align 8, !dbg !8509
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8510
  %14 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8511
  %host4 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %14, i32 0, i32 1, !dbg !8512
  store %struct.dw_mci* %13, %struct.dw_mci** %host4, align 8, !dbg !8513
  %15 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8514
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8515
  %slot5 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 42, !dbg !8516
  store %struct.dw_mci_slot* %15, %struct.dw_mci_slot** %slot5, align 8, !dbg !8517
  %17 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8518
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 3, !dbg !8519
  store %struct.mmc_host_ops* @dw_mci_ops, %struct.mmc_host_ops** %ops, align 8, !dbg !8520
  %18 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8521
  %call6 = call i32 @mmc_regulator_get_supply(%struct.mmc_host* %18) #12, !dbg !8522
  store i32 %call6, i32* %ret, align 4, !dbg !8523
  %19 = load i32, i32* %ret, align 4, !dbg !8524
  %tobool7 = icmp ne i32 %19, 0, !dbg !8524
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8526

if.then8:                                         ; preds = %if.end
  br label %err_host_allocated, !dbg !8527

if.end9:                                          ; preds = %if.end
  %20 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8528
  %ocr_avail = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %20, i32 0, i32 8, !dbg !8530
  %21 = load i32, i32* %ocr_avail, align 4, !dbg !8530
  %tobool10 = icmp ne i32 %21, 0, !dbg !8528
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !8531

if.then11:                                        ; preds = %if.end9
  %22 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8532
  %ocr_avail12 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 8, !dbg !8533
  store i32 3145728, i32* %ocr_avail12, align 4, !dbg !8534
  br label %if.end13, !dbg !8532

if.end13:                                         ; preds = %if.then11, %if.end9
  %23 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8535
  %call14 = call i32 @mmc_of_parse(%struct.mmc_host* %23) #12, !dbg !8536
  store i32 %call14, i32* %ret, align 4, !dbg !8537
  %24 = load i32, i32* %ret, align 4, !dbg !8538
  %tobool15 = icmp ne i32 %24, 0, !dbg !8538
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8540

if.then16:                                        ; preds = %if.end13
  br label %err_host_allocated, !dbg !8541

if.end17:                                         ; preds = %if.end13
  %25 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8542
  %call18 = call i32 @dw_mci_init_slot_caps(%struct.dw_mci_slot* %25) #12, !dbg !8543
  store i32 %call18, i32* %ret, align 4, !dbg !8544
  %26 = load i32, i32* %ret, align 4, !dbg !8545
  %tobool19 = icmp ne i32 %26, 0, !dbg !8545
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !8547

if.then20:                                        ; preds = %if.end17
  br label %err_host_allocated, !dbg !8548

if.end21:                                         ; preds = %if.end17
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8549
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 14, !dbg !8551
  %28 = load i32, i32* %use_dma, align 8, !dbg !8551
  %cmp = icmp eq i32 %28, 1, !dbg !8552
  br i1 %cmp, label %if.then22, label %if.else, !dbg !8553

if.then22:                                        ; preds = %if.end21
  %29 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8554
  %ring_size = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %29, i32 0, i32 20, !dbg !8556
  %30 = load i32, i32* %ring_size, align 8, !dbg !8556
  %conv = trunc i32 %30 to i16, !dbg !8554
  %31 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8557
  %max_segs = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %31, i32 0, i32 22, !dbg !8558
  store i16 %conv, i16* %max_segs, align 8, !dbg !8559
  %32 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8560
  %max_blk_size = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %32, i32 0, i32 25, !dbg !8561
  store i32 65535, i32* %max_blk_size, align 64, !dbg !8562
  %33 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8563
  %max_seg_size = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %33, i32 0, i32 21, !dbg !8564
  store i32 4096, i32* %max_seg_size, align 4, !dbg !8565
  %34 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8566
  %max_seg_size23 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 21, !dbg !8567
  %35 = load i32, i32* %max_seg_size23, align 4, !dbg !8567
  %36 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8568
  %ring_size24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %36, i32 0, i32 20, !dbg !8569
  %37 = load i32, i32* %ring_size24, align 8, !dbg !8569
  %mul = mul i32 %35, %37, !dbg !8570
  %38 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8571
  %max_req_size = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %38, i32 0, i32 24, !dbg !8572
  store i32 %mul, i32* %max_req_size, align 4, !dbg !8573
  %39 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8574
  %max_req_size25 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %39, i32 0, i32 24, !dbg !8575
  %40 = load i32, i32* %max_req_size25, align 4, !dbg !8575
  %div = udiv i32 %40, 512, !dbg !8576
  %41 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8577
  %max_blk_count = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %41, i32 0, i32 26, !dbg !8578
  store i32 %div, i32* %max_blk_count, align 4, !dbg !8579
  br label %if.end50, !dbg !8580

if.else:                                          ; preds = %if.end21
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8581
  %use_dma26 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 14, !dbg !8583
  %43 = load i32, i32* %use_dma26, align 8, !dbg !8583
  %cmp27 = icmp eq i32 %43, 2, !dbg !8584
  br i1 %cmp27, label %if.then29, label %if.else39, !dbg !8585

if.then29:                                        ; preds = %if.else
  %44 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8586
  %max_segs30 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %44, i32 0, i32 22, !dbg !8588
  store i16 64, i16* %max_segs30, align 8, !dbg !8589
  %45 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8590
  %max_blk_size31 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %45, i32 0, i32 25, !dbg !8591
  store i32 65535, i32* %max_blk_size31, align 64, !dbg !8592
  %46 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8593
  %max_blk_count32 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %46, i32 0, i32 26, !dbg !8594
  store i32 65535, i32* %max_blk_count32, align 4, !dbg !8595
  %47 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8596
  %max_blk_size33 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %47, i32 0, i32 25, !dbg !8597
  %48 = load i32, i32* %max_blk_size33, align 64, !dbg !8597
  %49 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8598
  %max_blk_count34 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %49, i32 0, i32 26, !dbg !8599
  %50 = load i32, i32* %max_blk_count34, align 4, !dbg !8599
  %mul35 = mul i32 %48, %50, !dbg !8600
  %51 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8601
  %max_req_size36 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %51, i32 0, i32 24, !dbg !8602
  store i32 %mul35, i32* %max_req_size36, align 4, !dbg !8603
  %52 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8604
  %max_req_size37 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %52, i32 0, i32 24, !dbg !8605
  %53 = load i32, i32* %max_req_size37, align 4, !dbg !8605
  %54 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8606
  %max_seg_size38 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %54, i32 0, i32 21, !dbg !8607
  store i32 %53, i32* %max_seg_size38, align 4, !dbg !8608
  br label %if.end49, !dbg !8609

if.else39:                                        ; preds = %if.else
  %55 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8610
  %max_segs40 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %55, i32 0, i32 22, !dbg !8612
  store i16 64, i16* %max_segs40, align 8, !dbg !8613
  %56 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8614
  %max_blk_size41 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %56, i32 0, i32 25, !dbg !8615
  store i32 65535, i32* %max_blk_size41, align 64, !dbg !8616
  %57 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8617
  %max_blk_count42 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %57, i32 0, i32 26, !dbg !8618
  store i32 512, i32* %max_blk_count42, align 4, !dbg !8619
  %58 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8620
  %max_blk_size43 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %58, i32 0, i32 25, !dbg !8621
  %59 = load i32, i32* %max_blk_size43, align 64, !dbg !8621
  %60 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8622
  %max_blk_count44 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %60, i32 0, i32 26, !dbg !8623
  %61 = load i32, i32* %max_blk_count44, align 4, !dbg !8623
  %mul45 = mul i32 %59, %61, !dbg !8624
  %62 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8625
  %max_req_size46 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %62, i32 0, i32 24, !dbg !8626
  store i32 %mul45, i32* %max_req_size46, align 4, !dbg !8627
  %63 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8628
  %max_req_size47 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %63, i32 0, i32 24, !dbg !8629
  %64 = load i32, i32* %max_req_size47, align 4, !dbg !8629
  %65 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8630
  %max_seg_size48 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %65, i32 0, i32 21, !dbg !8631
  store i32 %64, i32* %max_seg_size48, align 4, !dbg !8632
  br label %if.end49

if.end49:                                         ; preds = %if.else39, %if.then29
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then22
  %66 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8633
  %call51 = call i32 @dw_mci_get_cd(%struct.mmc_host* %66) #12, !dbg !8634
  %67 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8635
  %call52 = call i32 @mmc_add_host(%struct.mmc_host* %67) #12, !dbg !8636
  store i32 %call52, i32* %ret, align 4, !dbg !8637
  %68 = load i32, i32* %ret, align 4, !dbg !8638
  %tobool53 = icmp ne i32 %68, 0, !dbg !8638
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !8640

if.then54:                                        ; preds = %if.end50
  br label %err_host_allocated, !dbg !8641

if.end55:                                         ; preds = %if.end50
  store i32 0, i32* %retval, align 4, !dbg !8642
  br label %return, !dbg !8642

err_host_allocated:                               ; preds = %if.then54, %if.then20, %if.then16, %if.then8
  call void @llvm.dbg.label(metadata !8643), !dbg !8644
  %69 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8645
  call void @mmc_free_host(%struct.mmc_host* %69) #12, !dbg !8646
  %70 = load i32, i32* %ret, align 4, !dbg !8647
  store i32 %70, i32* %retval, align 4, !dbg !8648
  br label %return, !dbg !8648

return:                                           ; preds = %err_host_allocated, %if.end55, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !8649
  ret i32 %71, !dbg !8649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_enable_cd(%struct.dw_mci* %host) #0 !dbg !8650 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !6938, metadata !DIExpression()), !dbg !8651
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !8655
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !8656
  %host.addr = alloca %struct.dw_mci*, align 8
  %irqflags = alloca i64, align 8
  %temp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !8665, metadata !DIExpression()), !dbg !8666
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !8667, metadata !DIExpression()), !dbg !8668
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8669
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 42, !dbg !8671
  %1 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8671
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %1, i32 0, i32 0, !dbg !8672
  %2 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8672
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 17, !dbg !8673
  %3 = load i32, i32* %caps, align 4, !dbg !8673
  %and = and i32 %3, 32, !dbg !8674
  %tobool = icmp ne i32 %and, 0, !dbg !8674
  br i1 %tobool, label %if.then, label %if.end, !dbg !8675

if.then:                                          ; preds = %entry
  br label %if.end30, !dbg !8676

if.end:                                           ; preds = %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8677
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 42, !dbg !8678
  %5 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot1, align 8, !dbg !8678
  %mmc2 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %5, i32 0, i32 0, !dbg !8679
  %6 = load %struct.mmc_host*, %struct.mmc_host** %mmc2, align 8, !dbg !8679
  %call = call i32 @mmc_gpio_get_cd(%struct.mmc_host* %6) #12, !dbg !8680
  %cmp = icmp slt i32 %call, 0, !dbg !8681
  br i1 %cmp, label %if.then3, label %if.end30, !dbg !8682

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !8683

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !8684

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8685, metadata !DIExpression()), !dbg !8687
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8688, metadata !DIExpression()), !dbg !8687
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !8687
  %conv = zext i1 %cmp5 to i32, !dbg !8687
  store i32 1, i32* %tmp, align 4, !dbg !8687
  %7 = load i32, i32* %tmp, align 4, !dbg !8687
  br label %do.body6, !dbg !8689

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !8690

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !8691

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !8693, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !8697, metadata !DIExpression()), !dbg !8696
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !8696
  %conv12 = zext i1 %cmp11 to i32, !dbg !8696
  store i32 1, i32* %tmp13, align 4, !dbg !8696
  %8 = load i32, i32* %tmp13, align 4, !dbg !8696
  %call14 = call i64 @arch_local_irq_save() #12, !dbg !8698
  store i64 %call14, i64* %irqflags, align 8, !dbg !8698
  br label %do.end, !dbg !8698

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !8691

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !8690

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8699, !srcloc !8700
  br label %do.body17, !dbg !8699

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8701
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 1, !dbg !8701
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8702
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8703
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !8703
  br label %do.end19, !dbg !8701

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8699

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8690

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8689

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8684

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8704
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 2, !dbg !8704
  %13 = load i8*, i8** %regs, align 8, !dbg !8704
  %add.ptr = getelementptr i8, i8* %13, i64 36, !dbg !8704
  %call24 = call i32 @__readl(i8* %add.ptr) #12, !dbg !8704
  store i32 %call24, i32* %temp, align 4, !dbg !8705
  %14 = load i32, i32* %temp, align 4, !dbg !8706
  %conv25 = zext i32 %14 to i64, !dbg !8706
  %or = or i64 %conv25, 1, !dbg !8706
  %conv26 = trunc i64 %or to i32, !dbg !8706
  store i32 %conv26, i32* %temp, align 4, !dbg !8706
  %15 = load i32, i32* %temp, align 4, !dbg !8707
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8707
  %regs27 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 2, !dbg !8707
  %17 = load i8*, i8** %regs27, align 8, !dbg !8707
  %add.ptr28 = getelementptr i8, i8* %17, i64 36, !dbg !8707
  call void @__writel(i32 %15, i8* %add.ptr28) #12, !dbg !8707
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8708
  %irq_lock29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 1, !dbg !8709
  %19 = load i64, i64* %irqflags, align 8, !dbg !8710
  store %struct.spinlock* %irq_lock29, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !8711
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !8711
  store i32 1, i32* %tmp.i, align 4, !dbg !8711
  %20 = load i32, i32* %tmp.i, align 4, !dbg !8711
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !8712
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !8712
  store i32 1, i32* %tmp8.i, align 4, !dbg !8712
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !8712
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !8713
  call void @arch_local_irq_restore(i64 %22) #14, !dbg !8713
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8714, !srcloc !7041
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !8715
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !8715
  %rlock.i32 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !8715
  br label %if.end30, !dbg !8716

if.end30:                                         ; preds = %if.then, %do.end23, %if.end
  ret void, !dbg !8717
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_disable_unprepare(%struct.clk* %clk) #0 !dbg !8718 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !8723
  call void @clk_disable(%struct.clk* %0) #12, !dbg !8724
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !8725
  call void @clk_unprepare(%struct.clk* %1) #12, !dbg !8726
  ret void, !dbg !8727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dw_mci_remove(%struct.dw_mci* %host) #0 !dbg !8728 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8731
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 42, !dbg !8733
  %1 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8733
  %tobool = icmp ne %struct.dw_mci_slot* %1, null, !dbg !8731
  br i1 %tobool, label %if.then, label %if.end, !dbg !8734

if.then:                                          ; preds = %entry
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8735
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 42, !dbg !8736
  %3 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot1, align 8, !dbg !8736
  call void @dw_mci_cleanup_slot(%struct.dw_mci_slot* %3) #12, !dbg !8737
  br label %if.end, !dbg !8737

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8738
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 2, !dbg !8738
  %5 = load i8*, i8** %regs, align 8, !dbg !8738
  %add.ptr = getelementptr i8, i8* %5, i64 68, !dbg !8738
  call void @__writel(i32 -1, i8* %add.ptr) #12, !dbg !8738
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8739
  %regs2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 2, !dbg !8739
  %7 = load i8*, i8** %regs2, align 8, !dbg !8739
  %add.ptr3 = getelementptr i8, i8* %7, i64 36, !dbg !8739
  call void @__writel(i32 0, i8* %add.ptr3) #12, !dbg !8739
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8740
  %regs4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !8740
  %9 = load i8*, i8** %regs4, align 8, !dbg !8740
  %add.ptr5 = getelementptr i8, i8* %9, i64 16, !dbg !8740
  call void @__writel(i32 0, i8* %add.ptr5) #12, !dbg !8740
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8741
  %regs6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 2, !dbg !8741
  %11 = load i8*, i8** %regs6, align 8, !dbg !8741
  %add.ptr7 = getelementptr i8, i8* %11, i64 12, !dbg !8741
  call void @__writel(i32 0, i8* %add.ptr7) #12, !dbg !8741
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8742
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 14, !dbg !8744
  %13 = load i32, i32* %use_dma, align 8, !dbg !8744
  %tobool8 = icmp ne i32 %13, 0, !dbg !8742
  br i1 %tobool8, label %land.lhs.true, label %if.end13, !dbg !8745

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8746
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 19, !dbg !8747
  %15 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !8747
  %exit = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %15, i32 0, i32 5, !dbg !8748
  %16 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %exit, align 8, !dbg !8748
  %tobool9 = icmp ne void (%struct.dw_mci*)* %16, null, !dbg !8746
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !8749

if.then10:                                        ; preds = %land.lhs.true
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8750
  %dma_ops11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 19, !dbg !8751
  %18 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops11, align 8, !dbg !8751
  %exit12 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %18, i32 0, i32 5, !dbg !8752
  %19 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %exit12, align 8, !dbg !8752
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8753
  call void %19(%struct.dw_mci* %20) #12, !dbg !8750
  br label %if.end13, !dbg !8750

if.end13:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8754
  %pdata = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 37, !dbg !8756
  %22 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !8756
  %rstc = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %22, i32 0, i32 6, !dbg !8757
  %23 = load %struct.reset_control*, %struct.reset_control** %rstc, align 8, !dbg !8757
  %24 = bitcast %struct.reset_control* %23 to i8*, !dbg !8754
  %call = call zeroext i1 @IS_ERR(i8* %24) #12, !dbg !8758
  br i1 %call, label %if.end18, label %if.then14, !dbg !8759

if.then14:                                        ; preds = %if.end13
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8760
  %pdata15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 37, !dbg !8761
  %26 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata15, align 8, !dbg !8761
  %rstc16 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %26, i32 0, i32 6, !dbg !8762
  %27 = load %struct.reset_control*, %struct.reset_control** %rstc16, align 8, !dbg !8762
  %call17 = call i32 @reset_control_assert(%struct.reset_control* %27) #12, !dbg !8763
  br label %if.end18, !dbg !8763

if.end18:                                         ; preds = %if.then14, %if.end13
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8764
  %ciu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 41, !dbg !8765
  %29 = load %struct.clk*, %struct.clk** %ciu_clk, align 8, !dbg !8765
  call void @clk_disable_unprepare(%struct.clk* %29) #12, !dbg !8766
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !8767
  %biu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %30, i32 0, i32 40, !dbg !8768
  %31 = load %struct.clk*, %struct.clk** %biu_clk, align 8, !dbg !8768
  call void @clk_disable_unprepare(%struct.clk* %31) #12, !dbg !8769
  ret void, !dbg !8770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_cleanup_slot(%struct.dw_mci_slot* %slot) #0 !dbg !8771 {
entry:
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !8776
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 0, !dbg !8777
  %1 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8777
  call void @mmc_remove_host(%struct.mmc_host* %1) #12, !dbg !8778
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !8779
  %host = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !8780
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8780
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 42, !dbg !8781
  store %struct.dw_mci_slot* null, %struct.dw_mci_slot** %slot1, align 8, !dbg !8782
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !8783
  %mmc2 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %4, i32 0, i32 0, !dbg !8784
  %5 = load %struct.mmc_host*, %struct.mmc_host** %mmc2, align 8, !dbg !8784
  call void @mmc_free_host(%struct.mmc_host* %5) #12, !dbg !8785
  ret void, !dbg !8786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dw_mci_runtime_suspend(%struct.device* %dev) #0 !dbg !8787 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %host = alloca %struct.dw_mci*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !8790, metadata !DIExpression()), !dbg !8791
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8792
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !8793
  %1 = bitcast i8* %call to %struct.dw_mci*, !dbg !8793
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !8791
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8794
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 14, !dbg !8796
  %3 = load i32, i32* %use_dma, align 8, !dbg !8796
  %tobool = icmp ne i32 %3, 0, !dbg !8794
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8797

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8798
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 19, !dbg !8799
  %5 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !8799
  %exit = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %5, i32 0, i32 5, !dbg !8800
  %6 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %exit, align 8, !dbg !8800
  %tobool1 = icmp ne void (%struct.dw_mci*)* %6, null, !dbg !8798
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8801

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8802
  %dma_ops2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 19, !dbg !8803
  %8 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops2, align 8, !dbg !8803
  %exit3 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %8, i32 0, i32 5, !dbg !8804
  %9 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %exit3, align 8, !dbg !8804
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8805
  call void %9(%struct.dw_mci* %10) #12, !dbg !8802
  br label %if.end, !dbg !8802

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8806
  %ciu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 41, !dbg !8807
  %12 = load %struct.clk*, %struct.clk** %ciu_clk, align 8, !dbg !8807
  call void @clk_disable_unprepare(%struct.clk* %12) #12, !dbg !8808
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8809
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 42, !dbg !8811
  %14 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8811
  %tobool4 = icmp ne %struct.dw_mci_slot* %14, null, !dbg !8809
  br i1 %tobool4, label %land.lhs.true5, label %if.end13, !dbg !8812

land.lhs.true5:                                   ; preds = %if.end
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8813
  %slot6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 42, !dbg !8814
  %16 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot6, align 8, !dbg !8814
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %16, i32 0, i32 0, !dbg !8815
  %17 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8815
  %call7 = call zeroext i1 @mmc_can_gpio_cd(%struct.mmc_host* %17) #12, !dbg !8816
  br i1 %call7, label %if.then12, label %lor.lhs.false, !dbg !8817

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8818
  %slot8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 42, !dbg !8819
  %19 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot8, align 8, !dbg !8819
  %mmc9 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %19, i32 0, i32 0, !dbg !8820
  %20 = load %struct.mmc_host*, %struct.mmc_host** %mmc9, align 8, !dbg !8820
  %call10 = call i32 @mmc_card_is_removable(%struct.mmc_host* %20) #12, !dbg !8821
  %tobool11 = icmp ne i32 %call10, 0, !dbg !8821
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8822

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true5
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8823
  %biu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 40, !dbg !8824
  %22 = load %struct.clk*, %struct.clk** %biu_clk, align 8, !dbg !8824
  call void @clk_disable_unprepare(%struct.clk* %22) #12, !dbg !8825
  br label %if.end13, !dbg !8825

if.end13:                                         ; preds = %if.then12, %lor.lhs.false, %if.end
  ret i32 0, !dbg !8826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !8827 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8832
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !8833
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8833
  ret i8* %1, !dbg !8834
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mmc_can_gpio_cd(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_card_is_removable(%struct.mmc_host* %host) #0 !dbg !8835 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8838
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !8839
  %1 = load i32, i32* %caps, align 4, !dbg !8839
  %and = and i32 %1, 256, !dbg !8840
  %tobool = icmp ne i32 %and, 0, !dbg !8841
  %lnot = xor i1 %tobool, true, !dbg !8841
  %lnot.ext = zext i1 %lnot to i32, !dbg !8841
  ret i32 %lnot.ext, !dbg !8842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dw_mci_runtime_resume(%struct.device* %dev) #0 !dbg !8843 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  %host = alloca %struct.dw_mci*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8846, metadata !DIExpression()), !dbg !8847
  store i32 0, i32* %ret, align 4, !dbg !8847
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !8848, metadata !DIExpression()), !dbg !8849
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8850
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !8851
  %1 = bitcast i8* %call to %struct.dw_mci*, !dbg !8851
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !8849
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8852
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 42, !dbg !8854
  %3 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8854
  %tobool = icmp ne %struct.dw_mci_slot* %3, null, !dbg !8852
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8855

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8856
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 42, !dbg !8857
  %5 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot1, align 8, !dbg !8857
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %5, i32 0, i32 0, !dbg !8858
  %6 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !8858
  %call2 = call zeroext i1 @mmc_can_gpio_cd(%struct.mmc_host* %6) #12, !dbg !8859
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8860

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8861
  %slot3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 42, !dbg !8862
  %8 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot3, align 8, !dbg !8862
  %mmc4 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %8, i32 0, i32 0, !dbg !8863
  %9 = load %struct.mmc_host*, %struct.mmc_host** %mmc4, align 8, !dbg !8863
  %call5 = call i32 @mmc_card_is_removable(%struct.mmc_host* %9) #12, !dbg !8864
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8864
  br i1 %tobool6, label %if.end10, label %if.then, !dbg !8865

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8866
  %biu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 40, !dbg !8868
  %11 = load %struct.clk*, %struct.clk** %biu_clk, align 8, !dbg !8868
  %call7 = call i32 @clk_prepare_enable(%struct.clk* %11) #12, !dbg !8869
  store i32 %call7, i32* %ret, align 4, !dbg !8870
  %12 = load i32, i32* %ret, align 4, !dbg !8871
  %tobool8 = icmp ne i32 %12, 0, !dbg !8871
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !8873

if.then9:                                         ; preds = %if.then
  %13 = load i32, i32* %ret, align 4, !dbg !8874
  store i32 %13, i32* %retval, align 4, !dbg !8875
  br label %return, !dbg !8875

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !8876

if.end10:                                         ; preds = %if.end, %lor.lhs.false, %entry
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8877
  %ciu_clk = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 41, !dbg !8878
  %15 = load %struct.clk*, %struct.clk** %ciu_clk, align 8, !dbg !8878
  %call11 = call i32 @clk_prepare_enable(%struct.clk* %15) #12, !dbg !8879
  store i32 %call11, i32* %ret, align 4, !dbg !8880
  %16 = load i32, i32* %ret, align 4, !dbg !8881
  %tobool12 = icmp ne i32 %16, 0, !dbg !8881
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8883

if.then13:                                        ; preds = %if.end10
  br label %err, !dbg !8884

if.end14:                                         ; preds = %if.end10
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8885
  %call15 = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %17, i32 7) #12, !dbg !8887
  br i1 %call15, label %if.end18, label %if.then16, !dbg !8888

if.then16:                                        ; preds = %if.end14
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8889
  %ciu_clk17 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 41, !dbg !8891
  %19 = load %struct.clk*, %struct.clk** %ciu_clk17, align 8, !dbg !8891
  call void @clk_disable_unprepare(%struct.clk* %19) #12, !dbg !8892
  store i32 -19, i32* %ret, align 4, !dbg !8893
  br label %err, !dbg !8894

if.end18:                                         ; preds = %if.end14
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8895
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 14, !dbg !8897
  %21 = load i32, i32* %use_dma, align 8, !dbg !8897
  %tobool19 = icmp ne i32 %21, 0, !dbg !8895
  br i1 %tobool19, label %land.lhs.true20, label %if.end28, !dbg !8898

land.lhs.true20:                                  ; preds = %if.end18
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8899
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 19, !dbg !8900
  %23 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !8900
  %init = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %23, i32 0, i32 0, !dbg !8901
  %init21 = bitcast {}** %init to i32 (%struct.dw_mci*)**, !dbg !8901
  %24 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %init21, align 8, !dbg !8901
  %tobool22 = icmp ne i32 (%struct.dw_mci*)* %24, null, !dbg !8899
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !8902

if.then23:                                        ; preds = %land.lhs.true20
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8903
  %dma_ops24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 19, !dbg !8904
  %26 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops24, align 8, !dbg !8904
  %init25 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %26, i32 0, i32 0, !dbg !8905
  %init26 = bitcast {}** %init25 to i32 (%struct.dw_mci*)**, !dbg !8905
  %27 = load i32 (%struct.dw_mci*)*, i32 (%struct.dw_mci*)** %init26, align 8, !dbg !8905
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8906
  %call27 = call i32 %27(%struct.dw_mci* %28) #12, !dbg !8903
  br label %if.end28, !dbg !8903

if.end28:                                         ; preds = %if.then23, %land.lhs.true20, %if.end18
  %29 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8907
  %fifoth_val = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %29, i32 0, i32 34, !dbg !8907
  %30 = load i32, i32* %fifoth_val, align 8, !dbg !8907
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8907
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 2, !dbg !8907
  %32 = load i8*, i8** %regs, align 8, !dbg !8907
  %add.ptr = getelementptr i8, i8* %32, i64 76, !dbg !8907
  call void @__writel(i32 %30, i8* %add.ptr) #12, !dbg !8907
  %33 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8908
  %prev_blksz = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %33, i32 0, i32 12, !dbg !8909
  store i32 0, i32* %prev_blksz, align 8, !dbg !8910
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8911
  %regs29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %34, i32 0, i32 2, !dbg !8911
  %35 = load i8*, i8** %regs29, align 8, !dbg !8911
  %add.ptr30 = getelementptr i8, i8* %35, i64 20, !dbg !8911
  call void @__writel(i32 -1, i8* %add.ptr30) #12, !dbg !8911
  %36 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8912
  %regs31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %36, i32 0, i32 2, !dbg !8912
  %37 = load i8*, i8** %regs31, align 8, !dbg !8912
  %add.ptr32 = getelementptr i8, i8* %37, i64 68, !dbg !8912
  call void @__writel(i32 -1, i8* %add.ptr32) #12, !dbg !8912
  %38 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8913
  %regs33 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %38, i32 0, i32 2, !dbg !8913
  %39 = load i8*, i8** %regs33, align 8, !dbg !8913
  %add.ptr34 = getelementptr i8, i8* %39, i64 36, !dbg !8913
  call void @__writel(i32 47102, i8* %add.ptr34) #12, !dbg !8913
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8914
  %regs35 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 2, !dbg !8914
  %41 = load i8*, i8** %regs35, align 8, !dbg !8914
  %add.ptr36 = getelementptr i8, i8* %41, i64 0, !dbg !8914
  call void @__writel(i32 16, i8* %add.ptr36) #12, !dbg !8914
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8915
  %slot37 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 42, !dbg !8917
  %43 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot37, align 8, !dbg !8917
  %mmc38 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %43, i32 0, i32 0, !dbg !8918
  %44 = load %struct.mmc_host*, %struct.mmc_host** %mmc38, align 8, !dbg !8918
  %pm_flags = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %44, i32 0, i32 53, !dbg !8919
  %45 = load i32, i32* %pm_flags, align 64, !dbg !8919
  %and = and i32 %45, 1, !dbg !8920
  %tobool39 = icmp ne i32 %and, 0, !dbg !8920
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !8921

if.then40:                                        ; preds = %if.end28
  %46 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8922
  %slot41 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %46, i32 0, i32 42, !dbg !8923
  %47 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot41, align 8, !dbg !8923
  %mmc42 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %47, i32 0, i32 0, !dbg !8924
  %48 = load %struct.mmc_host*, %struct.mmc_host** %mmc42, align 8, !dbg !8924
  %49 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8925
  %slot43 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %49, i32 0, i32 42, !dbg !8926
  %50 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot43, align 8, !dbg !8926
  %mmc44 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %50, i32 0, i32 0, !dbg !8927
  %51 = load %struct.mmc_host*, %struct.mmc_host** %mmc44, align 8, !dbg !8927
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %51, i32 0, i32 29, !dbg !8928
  call void @dw_mci_set_ios(%struct.mmc_host* %48, %struct.mmc_ios* %ios) #12, !dbg !8929
  br label %if.end45, !dbg !8929

if.end45:                                         ; preds = %if.then40, %if.end28
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8930
  %slot46 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %52, i32 0, i32 42, !dbg !8931
  %53 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot46, align 8, !dbg !8931
  call void @dw_mci_setup_bus(%struct.dw_mci_slot* %53, i1 zeroext true) #12, !dbg !8932
  %54 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8933
  %slot47 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %54, i32 0, i32 42, !dbg !8935
  %55 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot47, align 8, !dbg !8935
  %mmc48 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %55, i32 0, i32 0, !dbg !8936
  %56 = load %struct.mmc_host*, %struct.mmc_host** %mmc48, align 8, !dbg !8936
  %call49 = call zeroext i1 @sdio_irq_claimed(%struct.mmc_host* %56) #12, !dbg !8937
  br i1 %call49, label %if.then50, label %if.end52, !dbg !8938

if.then50:                                        ; preds = %if.end45
  %57 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8939
  %slot51 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %57, i32 0, i32 42, !dbg !8940
  %58 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot51, align 8, !dbg !8940
  call void @__dw_mci_enable_sdio_irq(%struct.dw_mci_slot* %58, i32 1) #12, !dbg !8941
  br label %if.end52, !dbg !8941

if.end52:                                         ; preds = %if.then50, %if.end45
  %59 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8942
  call void @dw_mci_enable_cd(%struct.dw_mci* %59) #12, !dbg !8943
  store i32 0, i32* %retval, align 4, !dbg !8944
  br label %return, !dbg !8944

err:                                              ; preds = %if.then16, %if.then13
  call void @llvm.dbg.label(metadata !8945), !dbg !8946
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8947
  %slot53 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 42, !dbg !8949
  %61 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot53, align 8, !dbg !8949
  %tobool54 = icmp ne %struct.dw_mci_slot* %61, null, !dbg !8947
  br i1 %tobool54, label %land.lhs.true55, label %if.end66, !dbg !8950

land.lhs.true55:                                  ; preds = %err
  %62 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8951
  %slot56 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %62, i32 0, i32 42, !dbg !8952
  %63 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot56, align 8, !dbg !8952
  %mmc57 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %63, i32 0, i32 0, !dbg !8953
  %64 = load %struct.mmc_host*, %struct.mmc_host** %mmc57, align 8, !dbg !8953
  %call58 = call zeroext i1 @mmc_can_gpio_cd(%struct.mmc_host* %64) #12, !dbg !8954
  br i1 %call58, label %if.then64, label %lor.lhs.false59, !dbg !8955

lor.lhs.false59:                                  ; preds = %land.lhs.true55
  %65 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8956
  %slot60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %65, i32 0, i32 42, !dbg !8957
  %66 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot60, align 8, !dbg !8957
  %mmc61 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %66, i32 0, i32 0, !dbg !8958
  %67 = load %struct.mmc_host*, %struct.mmc_host** %mmc61, align 8, !dbg !8958
  %call62 = call i32 @mmc_card_is_removable(%struct.mmc_host* %67) #12, !dbg !8959
  %tobool63 = icmp ne i32 %call62, 0, !dbg !8959
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !8960

if.then64:                                        ; preds = %lor.lhs.false59, %land.lhs.true55
  %68 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8961
  %biu_clk65 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %68, i32 0, i32 40, !dbg !8962
  %69 = load %struct.clk*, %struct.clk** %biu_clk65, align 8, !dbg !8962
  call void @clk_disable_unprepare(%struct.clk* %69) #12, !dbg !8963
  br label %if.end66, !dbg !8963

if.end66:                                         ; preds = %if.then64, %lor.lhs.false59, %err
  %70 = load i32, i32* %ret, align 4, !dbg !8964
  store i32 %70, i32* %retval, align 4, !dbg !8965
  br label %return, !dbg !8965

return:                                           ; preds = %if.end66, %if.end52, %if.then9
  %71 = load i32, i32* %retval, align 4, !dbg !8966
  ret i32 %71, !dbg !8966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_set_ios(%struct.mmc_host* %mmc, %struct.mmc_ios* %ios) #0 !dbg !8967 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %ios.addr = alloca %struct.mmc_ios*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  %regs = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !8968, metadata !DIExpression()), !dbg !8969
  store %struct.mmc_ios* %ios, %struct.mmc_ios** %ios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ios** %ios.addr, metadata !8970, metadata !DIExpression()), !dbg !8971
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !8972, metadata !DIExpression()), !dbg !8973
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !8974
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !8975
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !8975
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !8973
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !8976, metadata !DIExpression()), !dbg !8977
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8978
  %host = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !8979
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !8979
  %drv_data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 38, !dbg !8980
  %4 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data1, align 8, !dbg !8980
  store %struct.dw_mci_drv_data* %4, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !8977
  call void @llvm.dbg.declare(metadata i32* %regs, metadata !8981, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8983, metadata !DIExpression()), !dbg !8984
  %5 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !8985
  %bus_width = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %5, i32 0, i32 6, !dbg !8986
  %6 = load i8, i8* %bus_width, align 1, !dbg !8986
  %conv = zext i8 %6 to i32, !dbg !8985
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb2
  ], !dbg !8987

sw.bb:                                            ; preds = %entry
  %7 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8988
  %ctype = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %7, i32 0, i32 2, !dbg !8990
  store i32 1, i32* %ctype, align 8, !dbg !8991
  br label %sw.epilog, !dbg !8992

sw.bb2:                                           ; preds = %entry
  %8 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8993
  %ctype3 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %8, i32 0, i32 2, !dbg !8994
  store i32 65536, i32* %ctype3, align 8, !dbg !8995
  br label %sw.epilog, !dbg !8996

sw.default:                                       ; preds = %entry
  %9 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !8997
  %ctype4 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %9, i32 0, i32 2, !dbg !8998
  store i32 0, i32* %ctype4, align 8, !dbg !8999
  br label %sw.epilog, !dbg !9000

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9001
  %host5 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 1, !dbg !9001
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host5, align 8, !dbg !9001
  %regs6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 2, !dbg !9001
  %12 = load i8*, i8** %regs6, align 8, !dbg !9001
  %add.ptr = getelementptr i8, i8* %12, i64 116, !dbg !9001
  %call7 = call i32 @__readl(i8* %add.ptr) #12, !dbg !9001
  store i32 %call7, i32* %regs, align 4, !dbg !9002
  %13 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9003
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %13, i32 0, i32 7, !dbg !9005
  %14 = load i8, i8* %timing, align 4, !dbg !9005
  %conv8 = zext i8 %14 to i32, !dbg !9003
  %cmp = icmp eq i32 %conv8, 8, !dbg !9006
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9007

lor.lhs.false:                                    ; preds = %sw.epilog
  %15 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9008
  %timing10 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %15, i32 0, i32 7, !dbg !9009
  %16 = load i8, i8* %timing10, align 4, !dbg !9009
  %conv11 = zext i8 %16 to i32, !dbg !9008
  %cmp12 = icmp eq i32 %conv11, 7, !dbg !9010
  br i1 %cmp12, label %if.then, label %lor.lhs.false14, !dbg !9011

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %17 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9012
  %timing15 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %17, i32 0, i32 7, !dbg !9013
  %18 = load i8, i8* %timing15, align 4, !dbg !9013
  %conv16 = zext i8 %18 to i32, !dbg !9012
  %cmp17 = icmp eq i32 %conv16, 10, !dbg !9014
  br i1 %cmp17, label %if.then, label %if.else, !dbg !9015

if.then:                                          ; preds = %lor.lhs.false14, %lor.lhs.false, %sw.epilog
  %19 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9016
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %19, i32 0, i32 8, !dbg !9017
  %20 = load i32, i32* %id, align 8, !dbg !9017
  %shl = shl i32 1, %20, !dbg !9018
  %shl19 = shl i32 %shl, 16, !dbg !9019
  %21 = load i32, i32* %regs, align 4, !dbg !9020
  %or = or i32 %21, %shl19, !dbg !9020
  store i32 %or, i32* %regs, align 4, !dbg !9020
  br label %if.end, !dbg !9021

if.else:                                          ; preds = %lor.lhs.false14
  %22 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9022
  %id20 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %22, i32 0, i32 8, !dbg !9023
  %23 = load i32, i32* %id20, align 8, !dbg !9023
  %shl21 = shl i32 1, %23, !dbg !9024
  %shl22 = shl i32 %shl21, 16, !dbg !9025
  %neg = xor i32 %shl22, -1, !dbg !9026
  %24 = load i32, i32* %regs, align 4, !dbg !9027
  %and = and i32 %24, %neg, !dbg !9027
  store i32 %and, i32* %regs, align 4, !dbg !9027
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %regs, align 4, !dbg !9028
  %26 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9028
  %host23 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %26, i32 0, i32 1, !dbg !9028
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host23, align 8, !dbg !9028
  %regs24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 2, !dbg !9028
  %28 = load i8*, i8** %regs24, align 8, !dbg !9028
  %add.ptr25 = getelementptr i8, i8* %28, i64 116, !dbg !9028
  call void @__writel(i32 %25, i8* %add.ptr25) #12, !dbg !9028
  %29 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9029
  %timing26 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %29, i32 0, i32 7, !dbg !9030
  %30 = load i8, i8* %timing26, align 4, !dbg !9030
  %31 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9031
  %host27 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %31, i32 0, i32 1, !dbg !9032
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host27, align 8, !dbg !9032
  %timing28 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %32, i32 0, i32 13, !dbg !9033
  store i8 %30, i8* %timing28, align 4, !dbg !9034
  %33 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9035
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %33, i32 0, i32 0, !dbg !9036
  %34 = load i32, i32* %clock, align 4, !dbg !9036
  %35 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9037
  %clock29 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %35, i32 0, i32 5, !dbg !9038
  store i32 %34, i32* %clock29, align 8, !dbg !9039
  %36 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !9040
  %tobool = icmp ne %struct.dw_mci_drv_data* %36, null, !dbg !9040
  br i1 %tobool, label %land.lhs.true, label %if.end34, !dbg !9042

land.lhs.true:                                    ; preds = %if.end
  %37 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !9043
  %set_ios = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %37, i32 0, i32 3, !dbg !9044
  %38 = load void (%struct.dw_mci*, %struct.mmc_ios*)*, void (%struct.dw_mci*, %struct.mmc_ios*)** %set_ios, align 8, !dbg !9044
  %tobool30 = icmp ne void (%struct.dw_mci*, %struct.mmc_ios*)* %38, null, !dbg !9043
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !9045

if.then31:                                        ; preds = %land.lhs.true
  %39 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !9046
  %set_ios32 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %39, i32 0, i32 3, !dbg !9047
  %40 = load void (%struct.dw_mci*, %struct.mmc_ios*)*, void (%struct.dw_mci*, %struct.mmc_ios*)** %set_ios32, align 8, !dbg !9047
  %41 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9048
  %host33 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %41, i32 0, i32 1, !dbg !9049
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host33, align 8, !dbg !9049
  %43 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9050
  call void %40(%struct.dw_mci* %42, %struct.mmc_ios* %43) #12, !dbg !9046
  br label %if.end34, !dbg !9046

if.end34:                                         ; preds = %if.then31, %land.lhs.true, %if.end
  %44 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9051
  %power_mode = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %44, i32 0, i32 5, !dbg !9052
  %45 = load i8, i8* %power_mode, align 2, !dbg !9052
  %conv35 = zext i8 %45 to i32, !dbg !9051
  switch i32 %conv35, label %sw.default118 [
    i32 1, label %sw.bb36
    i32 2, label %sw.bb57
    i32 0, label %sw.bb83
  ], !dbg !9053

sw.bb36:                                          ; preds = %if.end34
  %46 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9054
  %supply = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %46, i32 0, i32 55, !dbg !9057
  %vmmc = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply, i32 0, i32 0, !dbg !9058
  %47 = load %struct.regulator*, %struct.regulator** %vmmc, align 16, !dbg !9058
  %48 = bitcast %struct.regulator* %47 to i8*, !dbg !9054
  %call37 = call zeroext i1 @IS_ERR(i8* %48) #12, !dbg !9059
  br i1 %call37, label %if.end46, label %if.then38, !dbg !9060

if.then38:                                        ; preds = %sw.bb36
  %49 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9061
  %50 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9063
  %supply39 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %50, i32 0, i32 55, !dbg !9064
  %vmmc40 = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply39, i32 0, i32 0, !dbg !9065
  %51 = load %struct.regulator*, %struct.regulator** %vmmc40, align 16, !dbg !9065
  %52 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9066
  %vdd = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %52, i32 0, i32 1, !dbg !9067
  %53 = load i16, i16* %vdd, align 4, !dbg !9067
  %call41 = call i32 @mmc_regulator_set_ocr(%struct.mmc_host* %49, %struct.regulator* %51, i16 zeroext %53) #12, !dbg !9068
  store i32 %call41, i32* %ret, align 4, !dbg !9069
  %54 = load i32, i32* %ret, align 4, !dbg !9070
  %tobool42 = icmp ne i32 %54, 0, !dbg !9070
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !9072

if.then43:                                        ; preds = %if.then38
  %55 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9073
  %host44 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %55, i32 0, i32 1, !dbg !9073
  %56 = load %struct.dw_mci*, %struct.dw_mci** %host44, align 8, !dbg !9073
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %56, i32 0, i32 36, !dbg !9073
  %57 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9073
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %57, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.54, i64 0, i64 0)) #13, !dbg !9073
  br label %if.end130, !dbg !9075

if.end45:                                         ; preds = %if.then38
  br label %if.end46, !dbg !9076

if.end46:                                         ; preds = %if.end45, %sw.bb36
  %58 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9077
  %flags = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %58, i32 0, i32 7, !dbg !9078
  call void @set_bit(i64 1, i64* %flags) #12, !dbg !9079
  %59 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9080
  %host47 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %59, i32 0, i32 1, !dbg !9080
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host47, align 8, !dbg !9080
  %regs48 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 2, !dbg !9080
  %61 = load i8*, i8** %regs48, align 8, !dbg !9080
  %add.ptr49 = getelementptr i8, i8* %61, i64 4, !dbg !9080
  %call50 = call i32 @__readl(i8* %add.ptr49) #12, !dbg !9080
  store i32 %call50, i32* %regs, align 4, !dbg !9081
  %62 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9082
  %id51 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %62, i32 0, i32 8, !dbg !9083
  %63 = load i32, i32* %id51, align 8, !dbg !9083
  %shl52 = shl i32 1, %63, !dbg !9084
  %64 = load i32, i32* %regs, align 4, !dbg !9085
  %or53 = or i32 %64, %shl52, !dbg !9085
  store i32 %or53, i32* %regs, align 4, !dbg !9085
  %65 = load i32, i32* %regs, align 4, !dbg !9086
  %66 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9086
  %host54 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %66, i32 0, i32 1, !dbg !9086
  %67 = load %struct.dw_mci*, %struct.dw_mci** %host54, align 8, !dbg !9086
  %regs55 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %67, i32 0, i32 2, !dbg !9086
  %68 = load i8*, i8** %regs55, align 8, !dbg !9086
  %add.ptr56 = getelementptr i8, i8* %68, i64 4, !dbg !9086
  call void @__writel(i32 %65, i8* %add.ptr56) #12, !dbg !9086
  br label %sw.epilog119, !dbg !9087

sw.bb57:                                          ; preds = %if.end34
  %69 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9088
  %host58 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %69, i32 0, i32 1, !dbg !9090
  %70 = load %struct.dw_mci*, %struct.dw_mci** %host58, align 8, !dbg !9090
  %vqmmc_enabled = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %70, i32 0, i32 50, !dbg !9091
  %71 = load i8, i8* %vqmmc_enabled, align 8, !dbg !9091
  %tobool59 = trunc i8 %71 to i1, !dbg !9091
  br i1 %tobool59, label %if.end82, label %if.then60, !dbg !9092

if.then60:                                        ; preds = %sw.bb57
  %72 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9093
  %supply61 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %72, i32 0, i32 55, !dbg !9096
  %vqmmc = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply61, i32 0, i32 1, !dbg !9097
  %73 = load %struct.regulator*, %struct.regulator** %vqmmc, align 8, !dbg !9097
  %74 = bitcast %struct.regulator* %73 to i8*, !dbg !9093
  %call62 = call zeroext i1 @IS_ERR(i8* %74) #12, !dbg !9098
  br i1 %call62, label %if.else76, label %if.then63, !dbg !9099

if.then63:                                        ; preds = %if.then60
  %75 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9100
  %supply64 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %75, i32 0, i32 55, !dbg !9102
  %vqmmc65 = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply64, i32 0, i32 1, !dbg !9103
  %76 = load %struct.regulator*, %struct.regulator** %vqmmc65, align 8, !dbg !9103
  %call66 = call i32 @regulator_enable(%struct.regulator* %76) #12, !dbg !9104
  store i32 %call66, i32* %ret, align 4, !dbg !9105
  %77 = load i32, i32* %ret, align 4, !dbg !9106
  %cmp67 = icmp slt i32 %77, 0, !dbg !9108
  br i1 %cmp67, label %if.then69, label %if.else72, !dbg !9109

if.then69:                                        ; preds = %if.then63
  %78 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9110
  %host70 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %78, i32 0, i32 1, !dbg !9110
  %79 = load %struct.dw_mci*, %struct.dw_mci** %host70, align 8, !dbg !9110
  %dev71 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %79, i32 0, i32 36, !dbg !9110
  %80 = load %struct.device*, %struct.device** %dev71, align 8, !dbg !9110
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %80, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.55, i64 0, i64 0)) #13, !dbg !9110
  br label %if.end75, !dbg !9110

if.else72:                                        ; preds = %if.then63
  %81 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9111
  %host73 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %81, i32 0, i32 1, !dbg !9112
  %82 = load %struct.dw_mci*, %struct.dw_mci** %host73, align 8, !dbg !9112
  %vqmmc_enabled74 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %82, i32 0, i32 50, !dbg !9113
  store i8 1, i8* %vqmmc_enabled74, align 8, !dbg !9114
  br label %if.end75

if.end75:                                         ; preds = %if.else72, %if.then69
  br label %if.end79, !dbg !9115

if.else76:                                        ; preds = %if.then60
  %83 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9116
  %host77 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %83, i32 0, i32 1, !dbg !9118
  %84 = load %struct.dw_mci*, %struct.dw_mci** %host77, align 8, !dbg !9118
  %vqmmc_enabled78 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %84, i32 0, i32 50, !dbg !9119
  store i8 1, i8* %vqmmc_enabled78, align 8, !dbg !9120
  br label %if.end79

if.end79:                                         ; preds = %if.else76, %if.end75
  %85 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9121
  %host80 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %85, i32 0, i32 1, !dbg !9122
  %86 = load %struct.dw_mci*, %struct.dw_mci** %host80, align 8, !dbg !9122
  %call81 = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %86, i32 7) #12, !dbg !9123
  br label %if.end82, !dbg !9124

if.end82:                                         ; preds = %if.end79, %sw.bb57
  %87 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9125
  call void @dw_mci_setup_bus(%struct.dw_mci_slot* %87, i1 zeroext false) #12, !dbg !9126
  br label %sw.epilog119, !dbg !9127

sw.bb83:                                          ; preds = %if.end34
  %88 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9128
  call void @dw_mci_setup_bus(%struct.dw_mci_slot* %88, i1 zeroext false) #12, !dbg !9129
  %89 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9130
  %supply84 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %89, i32 0, i32 55, !dbg !9132
  %vmmc85 = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply84, i32 0, i32 0, !dbg !9133
  %90 = load %struct.regulator*, %struct.regulator** %vmmc85, align 16, !dbg !9133
  %91 = bitcast %struct.regulator* %90 to i8*, !dbg !9130
  %call86 = call zeroext i1 @IS_ERR(i8* %91) #12, !dbg !9134
  br i1 %call86, label %if.end91, label %if.then87, !dbg !9135

if.then87:                                        ; preds = %sw.bb83
  %92 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9136
  %93 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9137
  %supply88 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %93, i32 0, i32 55, !dbg !9138
  %vmmc89 = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply88, i32 0, i32 0, !dbg !9139
  %94 = load %struct.regulator*, %struct.regulator** %vmmc89, align 16, !dbg !9139
  %call90 = call i32 @mmc_regulator_set_ocr(%struct.mmc_host* %92, %struct.regulator* %94, i16 zeroext 0) #12, !dbg !9140
  br label %if.end91, !dbg !9140

if.end91:                                         ; preds = %if.then87, %sw.bb83
  %95 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9141
  %supply92 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %95, i32 0, i32 55, !dbg !9143
  %vqmmc93 = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply92, i32 0, i32 1, !dbg !9144
  %96 = load %struct.regulator*, %struct.regulator** %vqmmc93, align 8, !dbg !9144
  %97 = bitcast %struct.regulator* %96 to i8*, !dbg !9141
  %call94 = call zeroext i1 @IS_ERR(i8* %97) #12, !dbg !9145
  br i1 %call94, label %if.end104, label %land.lhs.true95, !dbg !9146

land.lhs.true95:                                  ; preds = %if.end91
  %98 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9147
  %host96 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %98, i32 0, i32 1, !dbg !9148
  %99 = load %struct.dw_mci*, %struct.dw_mci** %host96, align 8, !dbg !9148
  %vqmmc_enabled97 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %99, i32 0, i32 50, !dbg !9149
  %100 = load i8, i8* %vqmmc_enabled97, align 8, !dbg !9149
  %tobool98 = trunc i8 %100 to i1, !dbg !9149
  br i1 %tobool98, label %if.then100, label %if.end104, !dbg !9150

if.then100:                                       ; preds = %land.lhs.true95
  %101 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !9151
  %supply101 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %101, i32 0, i32 55, !dbg !9152
  %vqmmc102 = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply101, i32 0, i32 1, !dbg !9153
  %102 = load %struct.regulator*, %struct.regulator** %vqmmc102, align 8, !dbg !9153
  %call103 = call i32 @regulator_disable(%struct.regulator* %102) #12, !dbg !9154
  br label %if.end104, !dbg !9154

if.end104:                                        ; preds = %if.then100, %land.lhs.true95, %if.end91
  %103 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9155
  %host105 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %103, i32 0, i32 1, !dbg !9156
  %104 = load %struct.dw_mci*, %struct.dw_mci** %host105, align 8, !dbg !9156
  %vqmmc_enabled106 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %104, i32 0, i32 50, !dbg !9157
  store i8 0, i8* %vqmmc_enabled106, align 8, !dbg !9158
  %105 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9159
  %host107 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %105, i32 0, i32 1, !dbg !9159
  %106 = load %struct.dw_mci*, %struct.dw_mci** %host107, align 8, !dbg !9159
  %regs108 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %106, i32 0, i32 2, !dbg !9159
  %107 = load i8*, i8** %regs108, align 8, !dbg !9159
  %add.ptr109 = getelementptr i8, i8* %107, i64 4, !dbg !9159
  %call110 = call i32 @__readl(i8* %add.ptr109) #12, !dbg !9159
  store i32 %call110, i32* %regs, align 4, !dbg !9160
  %108 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9161
  %id111 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %108, i32 0, i32 8, !dbg !9162
  %109 = load i32, i32* %id111, align 8, !dbg !9162
  %shl112 = shl i32 1, %109, !dbg !9163
  %neg113 = xor i32 %shl112, -1, !dbg !9164
  %110 = load i32, i32* %regs, align 4, !dbg !9165
  %and114 = and i32 %110, %neg113, !dbg !9165
  store i32 %and114, i32* %regs, align 4, !dbg !9165
  %111 = load i32, i32* %regs, align 4, !dbg !9166
  %112 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9166
  %host115 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %112, i32 0, i32 1, !dbg !9166
  %113 = load %struct.dw_mci*, %struct.dw_mci** %host115, align 8, !dbg !9166
  %regs116 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %113, i32 0, i32 2, !dbg !9166
  %114 = load i8*, i8** %regs116, align 8, !dbg !9166
  %add.ptr117 = getelementptr i8, i8* %114, i64 4, !dbg !9166
  call void @__writel(i32 %111, i8* %add.ptr117) #12, !dbg !9166
  br label %sw.epilog119, !dbg !9167

sw.default118:                                    ; preds = %if.end34
  br label %sw.epilog119, !dbg !9168

sw.epilog119:                                     ; preds = %sw.default118, %if.end104, %if.end82, %if.end46
  %115 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9169
  %host120 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %115, i32 0, i32 1, !dbg !9171
  %116 = load %struct.dw_mci*, %struct.dw_mci** %host120, align 8, !dbg !9171
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %116, i32 0, i32 30, !dbg !9172
  %117 = load i32, i32* %state, align 8, !dbg !9172
  %cmp121 = icmp eq i32 %117, 7, !dbg !9173
  br i1 %cmp121, label %land.lhs.true123, label %if.end130, !dbg !9174

land.lhs.true123:                                 ; preds = %sw.epilog119
  %118 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !9175
  %clock124 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %118, i32 0, i32 0, !dbg !9176
  %119 = load i32, i32* %clock124, align 4, !dbg !9176
  %cmp125 = icmp ne i32 %119, 0, !dbg !9177
  br i1 %cmp125, label %if.then127, label %if.end130, !dbg !9178

if.then127:                                       ; preds = %land.lhs.true123
  %120 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !9179
  %host128 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %120, i32 0, i32 1, !dbg !9180
  %121 = load %struct.dw_mci*, %struct.dw_mci** %host128, align 8, !dbg !9180
  %state129 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %121, i32 0, i32 30, !dbg !9181
  store i32 0, i32* %state129, align 8, !dbg !9182
  br label %if.end130, !dbg !9179

if.end130:                                        ; preds = %if.then43, %if.then127, %land.lhs.true123, %sw.epilog119
  ret void, !dbg !9183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_setup_bus(%struct.dw_mci_slot* %slot, i1 zeroext %force_clkinit) #0 !dbg !9184 {
entry:
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %force_clkinit.addr = alloca i8, align 1
  %host = alloca %struct.dw_mci*, align 8
  %clock = alloca i32, align 4
  %div = alloca i32, align 4
  %clk_en_a = alloca i32, align 4
  %sdmmc_cmd_bits = alloca i32, align 4
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  %frombool = zext i1 %force_clkinit to i8
  store i8 %frombool, i8* %force_clkinit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force_clkinit.addr, metadata !9189, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !9191, metadata !DIExpression()), !dbg !9192
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9193
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 1, !dbg !9194
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !9194
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !9192
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !9195, metadata !DIExpression()), !dbg !9196
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9197
  %clock2 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 5, !dbg !9198
  %3 = load i32, i32* %clock2, align 8, !dbg !9198
  store i32 %3, i32* %clock, align 4, !dbg !9196
  call void @llvm.dbg.declare(metadata i32* %div, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.declare(metadata i32* %clk_en_a, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata i32* %sdmmc_cmd_bits, metadata !9203, metadata !DIExpression()), !dbg !9204
  store i32 2105344, i32* %sdmmc_cmd_bits, align 4, !dbg !9204
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9205
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 30, !dbg !9207
  %5 = load i32, i32* %state, align 8, !dbg !9207
  %cmp = icmp eq i32 %5, 7, !dbg !9208
  br i1 %cmp, label %if.then, label %if.end, !dbg !9209

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %sdmmc_cmd_bits, align 4, !dbg !9210
  %conv = zext i32 %6 to i64, !dbg !9210
  %or = or i64 %conv, 268435456, !dbg !9210
  %conv3 = trunc i64 %or to i32, !dbg !9210
  store i32 %conv3, i32* %sdmmc_cmd_bits, align 4, !dbg !9210
  br label %if.end, !dbg !9211

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9212
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %7, i32 0, i32 0, !dbg !9213
  %8 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !9213
  %actual_clock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 58, !dbg !9214
  store i32 0, i32* %actual_clock, align 16, !dbg !9215
  %9 = load i32, i32* %clock, align 4, !dbg !9216
  %tobool = icmp ne i32 %9, 0, !dbg !9216
  br i1 %tobool, label %if.else, label %if.then4, !dbg !9218

if.then4:                                         ; preds = %if.end
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9219
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 2, !dbg !9219
  %11 = load i8*, i8** %regs, align 8, !dbg !9219
  %add.ptr = getelementptr i8, i8* %11, i64 16, !dbg !9219
  call void @__writel(i32 0, i8* %add.ptr) #12, !dbg !9219
  %12 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9221
  %13 = load i32, i32* %sdmmc_cmd_bits, align 4, !dbg !9222
  call void @mci_send_cmd(%struct.dw_mci_slot* %12, i32 %13, i32 0) #12, !dbg !9223
  br label %if.end86, !dbg !9224

if.else:                                          ; preds = %if.end
  %14 = load i32, i32* %clock, align 4, !dbg !9225
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9227
  %current_speed = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 33, !dbg !9228
  %16 = load i32, i32* %current_speed, align 4, !dbg !9228
  %cmp5 = icmp ne i32 %14, %16, !dbg !9229
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !9230

lor.lhs.false:                                    ; preds = %if.else
  %17 = load i8, i8* %force_clkinit.addr, align 1, !dbg !9231
  %tobool7 = trunc i8 %17 to i1, !dbg !9231
  br i1 %tobool7, label %if.then9, label %if.end85, !dbg !9232

if.then9:                                         ; preds = %lor.lhs.false, %if.else
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9233
  %bus_hz = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 32, !dbg !9235
  %19 = load i32, i32* %bus_hz, align 8, !dbg !9235
  %20 = load i32, i32* %clock, align 4, !dbg !9236
  %div10 = udiv i32 %19, %20, !dbg !9237
  store i32 %div10, i32* %div, align 4, !dbg !9238
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9239
  %bus_hz11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 32, !dbg !9241
  %22 = load i32, i32* %bus_hz11, align 8, !dbg !9241
  %23 = load i32, i32* %clock, align 4, !dbg !9242
  %rem = urem i32 %22, %23, !dbg !9243
  %tobool12 = icmp ne i32 %rem, 0, !dbg !9243
  br i1 %tobool12, label %land.lhs.true, label %if.end17, !dbg !9244

land.lhs.true:                                    ; preds = %if.then9
  %24 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9245
  %bus_hz13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %24, i32 0, i32 32, !dbg !9246
  %25 = load i32, i32* %bus_hz13, align 8, !dbg !9246
  %26 = load i32, i32* %clock, align 4, !dbg !9247
  %cmp14 = icmp ugt i32 %25, %26, !dbg !9248
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9249

if.then16:                                        ; preds = %land.lhs.true
  %27 = load i32, i32* %div, align 4, !dbg !9250
  %add = add i32 %27, 1, !dbg !9250
  store i32 %add, i32* %div, align 4, !dbg !9250
  br label %if.end17, !dbg !9251

if.end17:                                         ; preds = %if.then16, %land.lhs.true, %if.then9
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9252
  %bus_hz18 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 32, !dbg !9253
  %29 = load i32, i32* %bus_hz18, align 8, !dbg !9253
  %30 = load i32, i32* %clock, align 4, !dbg !9254
  %cmp19 = icmp ne i32 %29, %30, !dbg !9255
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !9256

cond.true:                                        ; preds = %if.end17
  %31 = load i32, i32* %div, align 4, !dbg !9257
  %add21 = add i32 %31, 2, !dbg !9257
  %sub = sub i32 %add21, 1, !dbg !9257
  %div22 = udiv i32 %sub, 2, !dbg !9257
  br label %cond.end, !dbg !9256

cond.false:                                       ; preds = %if.end17
  br label %cond.end, !dbg !9256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div22, %cond.true ], [ 0, %cond.false ], !dbg !9256
  store i32 %cond, i32* %div, align 4, !dbg !9258
  %32 = load i32, i32* %clock, align 4, !dbg !9259
  %33 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9261
  %__clk_old = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %33, i32 0, i32 6, !dbg !9262
  %34 = load i32, i32* %__clk_old, align 4, !dbg !9262
  %cmp23 = icmp ne i32 %32, %34, !dbg !9263
  br i1 %cmp23, label %land.lhs.true25, label %lor.lhs.false26, !dbg !9264

land.lhs.true25:                                  ; preds = %cond.end
  %35 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9265
  %flags = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %35, i32 0, i32 7, !dbg !9266
  %call = call zeroext i1 @test_bit(i64 4, i64* %flags) #12, !dbg !9267
  br i1 %call, label %lor.lhs.false26, label %if.then29, !dbg !9268

lor.lhs.false26:                                  ; preds = %land.lhs.true25, %cond.end
  %36 = load i8, i8* %force_clkinit.addr, align 1, !dbg !9269
  %tobool27 = trunc i8 %36 to i1, !dbg !9269
  br i1 %tobool27, label %if.then29, label %if.end52, !dbg !9270

if.then29:                                        ; preds = %lor.lhs.false26, %land.lhs.true25
  %37 = load i8, i8* %force_clkinit.addr, align 1, !dbg !9271
  %tobool30 = trunc i8 %37 to i1, !dbg !9271
  br i1 %tobool30, label %if.end42, label %if.then31, !dbg !9274

if.then31:                                        ; preds = %if.then29
  %38 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9275
  %mmc32 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %38, i32 0, i32 0, !dbg !9275
  %39 = load %struct.mmc_host*, %struct.mmc_host** %mmc32, align 8, !dbg !9275
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %39, i32 0, i32 1, !dbg !9275
  %40 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9275
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %40, i32 0, i32 8, !dbg !9275
  %41 = load i32, i32* %id, align 8, !dbg !9275
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9275
  %bus_hz33 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 32, !dbg !9275
  %43 = load i32, i32* %bus_hz33, align 8, !dbg !9275
  %44 = load i32, i32* %clock, align 4, !dbg !9275
  %45 = load i32, i32* %div, align 4, !dbg !9275
  %tobool34 = icmp ne i32 %45, 0, !dbg !9275
  br i1 %tobool34, label %cond.true35, label %cond.false38, !dbg !9275

cond.true35:                                      ; preds = %if.then31
  %46 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9275
  %bus_hz36 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %46, i32 0, i32 32, !dbg !9275
  %47 = load i32, i32* %bus_hz36, align 8, !dbg !9275
  %48 = load i32, i32* %div, align 4, !dbg !9275
  %div37 = udiv i32 %47, %48, !dbg !9275
  %shr = lshr i32 %div37, 1, !dbg !9275
  br label %cond.end40, !dbg !9275

cond.false38:                                     ; preds = %if.then31
  %49 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9275
  %bus_hz39 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %49, i32 0, i32 32, !dbg !9275
  %50 = load i32, i32* %bus_hz39, align 8, !dbg !9275
  br label %cond.end40, !dbg !9275

cond.end40:                                       ; preds = %cond.false38, %cond.true35
  %cond41 = phi i32 [ %shr, %cond.true35 ], [ %50, %cond.false38 ], !dbg !9275
  %51 = load i32, i32* %div, align 4, !dbg !9275
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %class_dev, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.56, i64 0, i64 0), i32 %41, i32 %43, i32 %44, i32 %cond41, i32 %51) #13, !dbg !9275
  br label %if.end42, !dbg !9275

if.end42:                                         ; preds = %cond.end40, %if.then29
  %52 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9276
  %mmc43 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %52, i32 0, i32 0, !dbg !9278
  %53 = load %struct.mmc_host*, %struct.mmc_host** %mmc43, align 8, !dbg !9278
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %53, i32 0, i32 17, !dbg !9279
  %54 = load i32, i32* %caps, align 4, !dbg !9279
  %and = and i32 %54, 32, !dbg !9280
  %tobool44 = icmp ne i32 %and, 0, !dbg !9280
  br i1 %tobool44, label %land.lhs.true45, label %if.end51, !dbg !9281

land.lhs.true45:                                  ; preds = %if.end42
  %55 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9282
  %mmc46 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %55, i32 0, i32 0, !dbg !9283
  %56 = load %struct.mmc_host*, %struct.mmc_host** %mmc46, align 8, !dbg !9283
  %f_min = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %56, i32 0, i32 5, !dbg !9284
  %57 = load i32, i32* %f_min, align 8, !dbg !9284
  %58 = load i32, i32* %clock, align 4, !dbg !9285
  %cmp47 = icmp eq i32 %57, %58, !dbg !9286
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !9287

if.then49:                                        ; preds = %land.lhs.true45
  %59 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9288
  %flags50 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %59, i32 0, i32 7, !dbg !9289
  call void @set_bit(i64 4, i64* %flags50) #12, !dbg !9290
  br label %if.end51, !dbg !9290

if.end51:                                         ; preds = %if.then49, %land.lhs.true45, %if.end42
  br label %if.end52, !dbg !9291

if.end52:                                         ; preds = %if.end51, %lor.lhs.false26
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9292
  %regs53 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 2, !dbg !9292
  %61 = load i8*, i8** %regs53, align 8, !dbg !9292
  %add.ptr54 = getelementptr i8, i8* %61, i64 16, !dbg !9292
  call void @__writel(i32 0, i8* %add.ptr54) #12, !dbg !9292
  %62 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9293
  %regs55 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %62, i32 0, i32 2, !dbg !9293
  %63 = load i8*, i8** %regs55, align 8, !dbg !9293
  %add.ptr56 = getelementptr i8, i8* %63, i64 12, !dbg !9293
  call void @__writel(i32 0, i8* %add.ptr56) #12, !dbg !9293
  %64 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9294
  %65 = load i32, i32* %sdmmc_cmd_bits, align 4, !dbg !9295
  call void @mci_send_cmd(%struct.dw_mci_slot* %64, i32 %65, i32 0) #12, !dbg !9296
  %66 = load i32, i32* %div, align 4, !dbg !9297
  %67 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9297
  %regs57 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %67, i32 0, i32 2, !dbg !9297
  %68 = load i8*, i8** %regs57, align 8, !dbg !9297
  %add.ptr58 = getelementptr i8, i8* %68, i64 8, !dbg !9297
  call void @__writel(i32 %66, i8* %add.ptr58) #12, !dbg !9297
  %69 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9298
  %70 = load i32, i32* %sdmmc_cmd_bits, align 4, !dbg !9299
  call void @mci_send_cmd(%struct.dw_mci_slot* %69, i32 %70, i32 0) #12, !dbg !9300
  %71 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9301
  %id59 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %71, i32 0, i32 8, !dbg !9302
  %72 = load i32, i32* %id59, align 8, !dbg !9302
  %sh_prom = zext i32 %72 to i64, !dbg !9303
  %shl = shl i64 1, %sh_prom, !dbg !9303
  %conv60 = trunc i64 %shl to i32, !dbg !9304
  store i32 %conv60, i32* %clk_en_a, align 4, !dbg !9305
  %73 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9306
  %flags61 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %73, i32 0, i32 7, !dbg !9308
  %call62 = call zeroext i1 @test_bit(i64 2, i64* %flags61) #12, !dbg !9309
  br i1 %call62, label %if.end70, label %if.then63, !dbg !9310

if.then63:                                        ; preds = %if.end52
  %74 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9311
  %id64 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %74, i32 0, i32 8, !dbg !9312
  %75 = load i32, i32* %id64, align 8, !dbg !9312
  %sh_prom65 = zext i32 %75 to i64, !dbg !9313
  %shl66 = shl i64 65536, %sh_prom65, !dbg !9313
  %76 = load i32, i32* %clk_en_a, align 4, !dbg !9314
  %conv67 = zext i32 %76 to i64, !dbg !9314
  %or68 = or i64 %conv67, %shl66, !dbg !9314
  %conv69 = trunc i64 %or68 to i32, !dbg !9314
  store i32 %conv69, i32* %clk_en_a, align 4, !dbg !9314
  br label %if.end70, !dbg !9315

if.end70:                                         ; preds = %if.then63, %if.end52
  %77 = load i32, i32* %clk_en_a, align 4, !dbg !9316
  %78 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9316
  %regs71 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %78, i32 0, i32 2, !dbg !9316
  %79 = load i8*, i8** %regs71, align 8, !dbg !9316
  %add.ptr72 = getelementptr i8, i8* %79, i64 16, !dbg !9316
  call void @__writel(i32 %77, i8* %add.ptr72) #12, !dbg !9316
  %80 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9317
  %81 = load i32, i32* %sdmmc_cmd_bits, align 4, !dbg !9318
  call void @mci_send_cmd(%struct.dw_mci_slot* %80, i32 %81, i32 0) #12, !dbg !9319
  %82 = load i32, i32* %clock, align 4, !dbg !9320
  %83 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9321
  %__clk_old73 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %83, i32 0, i32 6, !dbg !9322
  store i32 %82, i32* %__clk_old73, align 4, !dbg !9323
  %84 = load i32, i32* %div, align 4, !dbg !9324
  %tobool74 = icmp ne i32 %84, 0, !dbg !9324
  br i1 %tobool74, label %cond.true75, label %cond.false79, !dbg !9324

cond.true75:                                      ; preds = %if.end70
  %85 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9325
  %bus_hz76 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %85, i32 0, i32 32, !dbg !9326
  %86 = load i32, i32* %bus_hz76, align 8, !dbg !9326
  %87 = load i32, i32* %div, align 4, !dbg !9327
  %div77 = udiv i32 %86, %87, !dbg !9328
  %shr78 = lshr i32 %div77, 1, !dbg !9329
  br label %cond.end81, !dbg !9324

cond.false79:                                     ; preds = %if.end70
  %88 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9330
  %bus_hz80 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %88, i32 0, i32 32, !dbg !9331
  %89 = load i32, i32* %bus_hz80, align 8, !dbg !9331
  br label %cond.end81, !dbg !9324

cond.end81:                                       ; preds = %cond.false79, %cond.true75
  %cond82 = phi i32 [ %shr78, %cond.true75 ], [ %89, %cond.false79 ], !dbg !9324
  %90 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9332
  %mmc83 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %90, i32 0, i32 0, !dbg !9333
  %91 = load %struct.mmc_host*, %struct.mmc_host** %mmc83, align 8, !dbg !9333
  %actual_clock84 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %91, i32 0, i32 58, !dbg !9334
  store i32 %cond82, i32* %actual_clock84, align 16, !dbg !9335
  br label %if.end85, !dbg !9336

if.end85:                                         ; preds = %cond.end81, %lor.lhs.false
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then4
  %92 = load i32, i32* %clock, align 4, !dbg !9337
  %93 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9338
  %current_speed87 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %93, i32 0, i32 33, !dbg !9339
  store i32 %92, i32* %current_speed87, align 4, !dbg !9340
  %94 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9341
  %ctype = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %94, i32 0, i32 2, !dbg !9341
  %95 = load i32, i32* %ctype, align 8, !dbg !9341
  %96 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9341
  %id88 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %96, i32 0, i32 8, !dbg !9341
  %97 = load i32, i32* %id88, align 8, !dbg !9341
  %shl89 = shl i32 %95, %97, !dbg !9341
  %98 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9341
  %regs90 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %98, i32 0, i32 2, !dbg !9341
  %99 = load i8*, i8** %regs90, align 8, !dbg !9341
  %add.ptr91 = getelementptr i8, i8* %99, i64 24, !dbg !9341
  call void @__writel(i32 %shl89, i8* %add.ptr91) #12, !dbg !9341
  ret void, !dbg !9342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sdio_irq_claimed(%struct.mmc_host* %host) #0 !dbg !9343 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9346, metadata !DIExpression()), !dbg !9347
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9348
  %sdio_irqs = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 48, !dbg !9349
  %1 = load i32, i32* %sdio_irqs, align 4, !dbg !9349
  %cmp = icmp ugt i32 %1, 0, !dbg !9350
  ret i1 %cmp, !dbg !9351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dw_mci_enable_sdio_irq(%struct.dw_mci_slot* %slot, i32 %enb) #0 !dbg !9352 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !6938, metadata !DIExpression()), !dbg !9355
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !9357
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !9358
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %enb.addr = alloca i32, align 4
  %host = alloca %struct.dw_mci*, align 8
  %irqflags = alloca i64, align 8
  %int_mask = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !9365, metadata !DIExpression()), !dbg !9366
  store i32 %enb, i32* %enb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enb.addr, metadata !9367, metadata !DIExpression()), !dbg !9368
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !9369, metadata !DIExpression()), !dbg !9370
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9371
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 1, !dbg !9372
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !9372
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !9370
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !9373, metadata !DIExpression()), !dbg !9374
  call void @llvm.dbg.declare(metadata i32* %int_mask, metadata !9375, metadata !DIExpression()), !dbg !9376
  br label %do.body, !dbg !9377

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9378

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9379, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9382, metadata !DIExpression()), !dbg !9381
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9381
  %conv = zext i1 %cmp to i32, !dbg !9381
  store i32 1, i32* %tmp, align 4, !dbg !9381
  %2 = load i32, i32* %tmp, align 4, !dbg !9381
  br label %do.body3, !dbg !9383

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9384

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !9385

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !9387, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9391, metadata !DIExpression()), !dbg !9390
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !9390
  %conv9 = zext i1 %cmp8 to i32, !dbg !9390
  store i32 1, i32* %tmp10, align 4, !dbg !9390
  %3 = load i32, i32* %tmp10, align 4, !dbg !9390
  %call = call i64 @arch_local_irq_save() #12, !dbg !9392
  store i64 %call, i64* %irqflags, align 8, !dbg !9392
  br label %do.end, !dbg !9392

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !9385

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9384

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9393, !srcloc !9394
  br label %do.body13, !dbg !9393

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9395
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 1, !dbg !9395
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9396
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9397
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !9397
  br label %do.end15, !dbg !9395

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9393

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9384

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9383

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9378

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9398
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 2, !dbg !9398
  %8 = load i8*, i8** %regs, align 8, !dbg !9398
  %add.ptr = getelementptr i8, i8* %8, i64 36, !dbg !9398
  %call20 = call i32 @__readl(i8* %add.ptr) #12, !dbg !9398
  store i32 %call20, i32* %int_mask, align 4, !dbg !9399
  %9 = load i32, i32* %enb.addr, align 4, !dbg !9400
  %tobool = icmp ne i32 %9, 0, !dbg !9400
  br i1 %tobool, label %if.then, label %if.else, !dbg !9402

if.then:                                          ; preds = %do.end19
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9403
  %sdio_id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 9, !dbg !9403
  %11 = load i32, i32* %sdio_id, align 4, !dbg !9403
  %add = add i32 16, %11, !dbg !9403
  %sh_prom = zext i32 %add to i64, !dbg !9403
  %shl = shl i64 1, %sh_prom, !dbg !9403
  %12 = load i32, i32* %int_mask, align 4, !dbg !9404
  %conv21 = zext i32 %12 to i64, !dbg !9404
  %or = or i64 %conv21, %shl, !dbg !9404
  %conv22 = trunc i64 %or to i32, !dbg !9404
  store i32 %conv22, i32* %int_mask, align 4, !dbg !9404
  br label %if.end, !dbg !9405

if.else:                                          ; preds = %do.end19
  %13 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !9406
  %sdio_id23 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %13, i32 0, i32 9, !dbg !9406
  %14 = load i32, i32* %sdio_id23, align 4, !dbg !9406
  %add24 = add i32 16, %14, !dbg !9406
  %sh_prom25 = zext i32 %add24 to i64, !dbg !9406
  %shl26 = shl i64 1, %sh_prom25, !dbg !9406
  %neg = xor i64 %shl26, -1, !dbg !9407
  %15 = load i32, i32* %int_mask, align 4, !dbg !9408
  %conv27 = zext i32 %15 to i64, !dbg !9408
  %and = and i64 %conv27, %neg, !dbg !9408
  %conv28 = trunc i64 %and to i32, !dbg !9408
  store i32 %conv28, i32* %int_mask, align 4, !dbg !9408
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i32, i32* %int_mask, align 4, !dbg !9409
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9409
  %regs29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 2, !dbg !9409
  %18 = load i8*, i8** %regs29, align 8, !dbg !9409
  %add.ptr30 = getelementptr i8, i8* %18, i64 36, !dbg !9409
  call void @__writel(i32 %16, i8* %add.ptr30) #12, !dbg !9409
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !9410
  %irq_lock31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 1, !dbg !9411
  %20 = load i64, i64* %irqflags, align 8, !dbg !9412
  store %struct.spinlock* %irq_lock31, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !9413
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !9413
  store i32 1, i32* %tmp.i, align 4, !dbg !9413
  %21 = load i32, i32* %tmp.i, align 4, !dbg !9413
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !9414
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !9414
  store i32 1, i32* %tmp8.i, align 4, !dbg !9414
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !9414
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !9415
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !9415
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9416, !srcloc !7041
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !9417
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !9417
  %rlock.i33 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !9417
  ret void, !dbg !9418
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_exit() #5 section ".exit.text" !dbg !9419 {
entry:
  ret void, !dbg !9420
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_init() #5 section ".init.text" !dbg !9421 {
entry:
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.57, i64 0, i64 0)) #13, !dbg !9424
  ret i32 0, !dbg !9425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #0 !dbg !9426 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9429, metadata !DIExpression()), !dbg !9430
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9433, metadata !DIExpression()), !dbg !9434
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9435
  %1 = load i64, i64* %size.addr, align 8, !dbg !9436
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !9437
  %or = or i32 %2, 256, !dbg !9438
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #12, !dbg !9439
  ret i8* %call, !dbg !9440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !9441 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !9444, metadata !DIExpression()), !dbg !9445
  %0 = load i64, i64* %error.addr, align 8, !dbg !9446
  %1 = inttoptr i64 %0 to i8*, !dbg !9447
  ret i8* %1, !dbg !9448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.reset_control* @devm_reset_control_get_optional_exclusive(%struct.device* %dev, i8* %id) #0 !dbg !9449 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9452, metadata !DIExpression()), !dbg !9453
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !9454, metadata !DIExpression()), !dbg !9455
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9456
  %1 = load i8*, i8** %id.addr, align 8, !dbg !9457
  %call = call %struct.reset_control* @__devm_reset_control_get(%struct.device* %0, i8* %1, i32 0, i1 zeroext false, i1 zeroext true, i1 zeroext true) #12, !dbg !9458
  ret %struct.reset_control* %call, !dbg !9459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_property_read_u32(%struct.device* %dev, i8* %propname, i32* %val) #0 !dbg !9460 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %propname.addr = alloca i8*, align 8
  %val.addr = alloca i32*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9464, metadata !DIExpression()), !dbg !9465
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !9466, metadata !DIExpression()), !dbg !9467
  store i32* %val, i32** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %val.addr, metadata !9468, metadata !DIExpression()), !dbg !9469
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9470
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !9471
  %2 = load i32*, i32** %val.addr, align 8, !dbg !9472
  %call = call i32 @device_property_read_u32_array(%struct.device* %0, i8* %1, i32* %2, i64 1) #12, !dbg !9473
  ret i32 %call, !dbg !9474
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @device_property_present(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.reset_control* @__devm_reset_control_get(%struct.device*, i8*, i32, i1 zeroext, i1 zeroext, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @device_property_read_u32_array(%struct.device*, i8*, i32*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @clk_prepare(%struct.clk*) #2

; Function Attrs: noredzone
declare dso_local i32 @clk_enable(%struct.clk*) #2

; Function Attrs: noredzone
declare dso_local void @clk_unprepare(%struct.clk*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !9475 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9481, metadata !DIExpression()), !dbg !9484
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9486, metadata !DIExpression()), !dbg !9487
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9488, metadata !DIExpression()), !dbg !9493
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9495, metadata !DIExpression()), !dbg !9496
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9501
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9502
  %div = sdiv i64 %1, 64, !dbg !9502
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9503
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9501
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9504
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9505
  %conv.i = trunc i64 %4 to i32, !dbg !9505
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !9506
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9507
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9507
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !9507
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9508
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9509
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !9510
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !9512
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !9513

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !9514
  %12 = bitcast i64* %11 to i8*, !dbg !9514
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9514
  %shr.i = ashr i64 %13, 3, !dbg !9514
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !9514
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !9516
  %and.i = and i64 %14, 7, !dbg !9516
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !9516
  %shl.i = shl i32 1, %sh_prom.i, !dbg !9516
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #8, !dbg !9517, !srcloc !9518
  br label %arch_set_bit.exit, !dbg !9519

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !9520
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !9522
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !9523, !srcloc !9524
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !9525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #0 !dbg !9526 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !9527, metadata !DIExpression()), !dbg !9528
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !9529
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !9531
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #12, !dbg !9532
  br i1 %call, label %if.end, label %if.then, !dbg !9533

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !9534
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #12, !dbg !9535
  br label %if.end, !dbg !9535

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !9537 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9541, metadata !DIExpression()), !dbg !9542
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  ret i1 true, !dbg !9545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !9546 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9550, metadata !DIExpression()), !dbg !9551
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  ret void, !dbg !9556
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !9557 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9560, metadata !DIExpression()), !dbg !9562
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9564, metadata !DIExpression()), !dbg !9565
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !9566, metadata !DIExpression()), !dbg !9568
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9569, metadata !DIExpression()), !dbg !9571
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9573, metadata !DIExpression()), !dbg !9574
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9575, metadata !DIExpression()), !dbg !9576
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9577, metadata !DIExpression()), !dbg !9578
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9579
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9580
  %div = sdiv i64 %1, 64, !dbg !9580
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9581
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9579
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9582
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9583
  %conv.i = trunc i64 %4 to i32, !dbg !9583
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !9584
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9585
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9585
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !9585
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9586
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !9587
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !9568
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !9568
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #8, !dbg !9568, !srcloc !9588
  store i8 %11, i8* %c.i, align 1, !dbg !9568
  %12 = load i8, i8* %c.i, align 1, !dbg !9568
  %tobool.i = trunc i8 %12 to i1, !dbg !9568
  %frombool.i = zext i1 %tobool.i to i8, !dbg !9568
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !9568
  %13 = load i8, i8* %tmp.i, align 1, !dbg !9568
  %tobool1.i = trunc i8 %13 to i1, !dbg !9568
  ret i1 %tobool1.i, !dbg !9589
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !9590 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !9594, metadata !DIExpression()), !dbg !9595
  %call = call i64 @arch_local_save_flags() #12, !dbg !9596
  store i64 %call, i64* %f, align 8, !dbg !9597
  call void @arch_local_irq_disable() #12, !dbg !9598
  %0 = load i64, i64* %f, align 8, !dbg !9599
  ret i64 %0, !dbg !9600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !9601 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !9607, metadata !DIExpression()), !dbg !9609
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !9611, metadata !DIExpression()), !dbg !9612
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !9613, metadata !DIExpression()), !dbg !9614
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9615, metadata !DIExpression()), !dbg !9617
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9619, metadata !DIExpression()), !dbg !9620
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9621, metadata !DIExpression()), !dbg !9623
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9625, metadata !DIExpression()), !dbg !9626
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9627, metadata !DIExpression()), !dbg !9628
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9631
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9632
  %div = sdiv i64 %1, 64, !dbg !9632
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9633
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9631
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9634
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9635
  %conv.i = trunc i64 %4 to i32, !dbg !9635
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !9636
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9637
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9637
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !9637
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9638
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !9638
  br i1 %8, label %cond.true, label %cond.false, !dbg !9638

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !9638
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !9638
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !9639
  %and.i = and i64 %11, 63, !dbg !9640
  %shl.i = shl i64 1, %and.i, !dbg !9641
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !9642
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9643
  %shr.i = ashr i64 %13, 6, !dbg !9644
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !9642
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !9642
  %and1.i = and i64 %shl.i, %14, !dbg !9645
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !9646
  %conv = zext i1 %cmp.i to i32, !dbg !9638
  br label %cond.end, !dbg !9638

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !9638
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !9638
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !9647
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !9648
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #8, !dbg !9649, !srcloc !9650
  store i8 %19, i8* %oldbit.i, align 1, !dbg !9649
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !9651
  %tobool.i = trunc i8 %20 to i1, !dbg !9651
  %conv2 = zext i1 %tobool.i to i32, !dbg !9638
  br label %cond.end, !dbg !9638

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !9638
  %tobool = icmp ne i32 %cond, 0, !dbg !9638
  ret i1 %tobool, !dbg !9652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !9653 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9654, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9657, metadata !DIExpression()), !dbg !9656
  %0 = load i64, i64* %__edi, align 8, !dbg !9656
  store i64 %0, i64* %__edi, align 8, !dbg !9656
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9658, metadata !DIExpression()), !dbg !9656
  %1 = load i64, i64* %__esi, align 8, !dbg !9656
  store i64 %1, i64* %__esi, align 8, !dbg !9656
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9659, metadata !DIExpression()), !dbg !9656
  %2 = load i64, i64* %__edx, align 8, !dbg !9656
  store i64 %2, i64* %__edx, align 8, !dbg !9656
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9660, metadata !DIExpression()), !dbg !9656
  %3 = load i64, i64* %__ecx, align 8, !dbg !9656
  store i64 %3, i64* %__ecx, align 8, !dbg !9656
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9661, metadata !DIExpression()), !dbg !9656
  %4 = load i64, i64* %__eax, align 8, !dbg !9656
  store i64 %4, i64* %__eax, align 8, !dbg !9656
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9656
  %6 = call i64 @llvm.read_register.i64(metadata !6358), !dbg !9662
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !9662, !srcloc !9665
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9662
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9662
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9662
  call void @llvm.write_register.i64(metadata !6358, i64 %asmresult1), !dbg !9662
  %8 = load i64, i64* %__eax, align 8, !dbg !9662
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9666, metadata !DIExpression()), !dbg !9668
  store i64 -1, i64* %__mask, align 8, !dbg !9668
  %9 = load i64, i64* %__mask, align 8, !dbg !9668
  store i64 %9, i64* %tmp, align 8, !dbg !9668
  %10 = load i64, i64* %tmp, align 8, !dbg !9668
  %and = and i64 %8, %10, !dbg !9662
  store i64 %and, i64* %__ret, align 8, !dbg !9662
  %11 = load i64, i64* %__ret, align 8, !dbg !9656
  store i64 %11, i64* %tmp2, align 8, !dbg !9669
  %12 = load i64, i64* %tmp2, align 8, !dbg !9656
  ret i64 %12, !dbg !9670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !9671 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9672, metadata !DIExpression()), !dbg !9674
  %0 = load i64, i64* %__edi, align 8, !dbg !9674
  store i64 %0, i64* %__edi, align 8, !dbg !9674
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9675, metadata !DIExpression()), !dbg !9674
  %1 = load i64, i64* %__esi, align 8, !dbg !9674
  store i64 %1, i64* %__esi, align 8, !dbg !9674
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9676, metadata !DIExpression()), !dbg !9674
  %2 = load i64, i64* %__edx, align 8, !dbg !9674
  store i64 %2, i64* %__edx, align 8, !dbg !9674
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9677, metadata !DIExpression()), !dbg !9674
  %3 = load i64, i64* %__ecx, align 8, !dbg !9674
  store i64 %3, i64* %__ecx, align 8, !dbg !9674
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9678, metadata !DIExpression()), !dbg !9674
  %4 = load i64, i64* %__eax, align 8, !dbg !9674
  store i64 %4, i64* %__eax, align 8, !dbg !9674
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !9674
  %6 = call i64 @llvm.read_register.i64(metadata !6358), !dbg !9674
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !9674, !srcloc !9679
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9674
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9674
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9674
  call void @llvm.write_register.i64(metadata !6358, i64 %asmresult1), !dbg !9674
  ret void, !dbg !9680
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !9681 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9682, metadata !DIExpression()), !dbg !9683
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  ret i1 true, !dbg !9686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !9687 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9690, metadata !DIExpression()), !dbg !9692
  %0 = load i64, i64* %__edi, align 8, !dbg !9692
  store i64 %0, i64* %__edi, align 8, !dbg !9692
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9693, metadata !DIExpression()), !dbg !9692
  %1 = load i64, i64* %__esi, align 8, !dbg !9692
  store i64 %1, i64* %__esi, align 8, !dbg !9692
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9694, metadata !DIExpression()), !dbg !9692
  %2 = load i64, i64* %__edx, align 8, !dbg !9692
  store i64 %2, i64* %__edx, align 8, !dbg !9692
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9695, metadata !DIExpression()), !dbg !9692
  %3 = load i64, i64* %__ecx, align 8, !dbg !9692
  store i64 %3, i64* %__ecx, align 8, !dbg !9692
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9696, metadata !DIExpression()), !dbg !9692
  %4 = load i64, i64* %__eax, align 8, !dbg !9692
  store i64 %4, i64* %__eax, align 8, !dbg !9692
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !9692
  %6 = call i64 @llvm.read_register.i64(metadata !6358), !dbg !9692
  %7 = load i64, i64* %f.addr, align 8, !dbg !9692
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !9692, !srcloc !9697
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !9692
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !9692
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9692
  call void @llvm.write_register.i64(metadata !6358, i64 %asmresult1), !dbg !9692
  ret void, !dbg !9698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_push_part_bytes(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !9699 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %__UNIQUE_ID___x307 = alloca i32, align 4
  %__UNIQUE_ID___y308 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9704, metadata !DIExpression()), !dbg !9705
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x307, metadata !9708, metadata !DIExpression()), !dbg !9710
  %0 = load i32, i32* %cnt.addr, align 4, !dbg !9710
  store i32 %0, i32* %__UNIQUE_ID___x307, align 4, !dbg !9710
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y308, metadata !9711, metadata !DIExpression()), !dbg !9710
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9710
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 44, !dbg !9710
  %2 = load i32, i32* %data_shift, align 4, !dbg !9710
  %shl = shl i32 1, %2, !dbg !9710
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9710
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 46, !dbg !9710
  %4 = load i8, i8* %part_buf_count, align 1, !dbg !9710
  %conv = zext i8 %4 to i32, !dbg !9710
  %sub = sub i32 %shl, %conv, !dbg !9710
  store i32 %sub, i32* %__UNIQUE_ID___y308, align 4, !dbg !9710
  %5 = load i32, i32* %__UNIQUE_ID___x307, align 4, !dbg !9710
  %6 = load i32, i32* %__UNIQUE_ID___y308, align 4, !dbg !9710
  %cmp = icmp slt i32 %5, %6, !dbg !9710
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9710

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %__UNIQUE_ID___x307, align 4, !dbg !9710
  br label %cond.end, !dbg !9710

cond.false:                                       ; preds = %entry
  %8 = load i32, i32* %__UNIQUE_ID___y308, align 4, !dbg !9710
  br label %cond.end, !dbg !9710

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !9710
  store i32 %cond, i32* %tmp, align 4, !dbg !9710
  %9 = load i32, i32* %tmp, align 4, !dbg !9710
  store i32 %9, i32* %cnt.addr, align 4, !dbg !9712
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9713
  %11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 47, !dbg !9714
  %part_buf = bitcast %union.anon.79* %11 to i64*, !dbg !9714
  %12 = bitcast i64* %part_buf to i8*, !dbg !9715
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9716
  %part_buf_count2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 46, !dbg !9717
  %14 = load i8, i8* %part_buf_count2, align 1, !dbg !9717
  %conv3 = zext i8 %14 to i32, !dbg !9716
  %idx.ext = sext i32 %conv3 to i64, !dbg !9718
  %add.ptr = getelementptr i8, i8* %12, i64 %idx.ext, !dbg !9718
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !9719
  %16 = load i32, i32* %cnt.addr, align 4, !dbg !9720
  %conv4 = sext i32 %16 to i64, !dbg !9720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %15, i64 %conv4, i1 false), !dbg !9721
  %17 = load i32, i32* %cnt.addr, align 4, !dbg !9722
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9723
  %part_buf_count5 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 46, !dbg !9724
  %19 = load i8, i8* %part_buf_count5, align 1, !dbg !9725
  %conv6 = zext i8 %19 to i32, !dbg !9725
  %add = add i32 %conv6, %17, !dbg !9725
  %conv7 = trunc i32 %add to i8, !dbg !9725
  store i8 %conv7, i8* %part_buf_count5, align 1, !dbg !9725
  %20 = load i32, i32* %cnt.addr, align 4, !dbg !9726
  ret i32 %20, !dbg !9727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writew(i16 zeroext %val, i8* %addr) #0 !dbg !9728 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9731, metadata !DIExpression()), !dbg !9732
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9733, metadata !DIExpression()), !dbg !9732
  %0 = load i16, i16* %val.addr, align 2, !dbg !9732
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9732
  %2 = bitcast i8* %1 to i16*, !dbg !9732
  call void asm sideeffect "movw $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #8, !dbg !9732, !srcloc !9734
  ret void, !dbg !9732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_set_part_bytes(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !9735 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !9736, metadata !DIExpression()), !dbg !9737
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9742
  %1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 47, !dbg !9743
  %part_buf = bitcast %union.anon.79* %1 to i64*, !dbg !9743
  %2 = bitcast i64* %part_buf to i8*, !dbg !9744
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !9745
  %4 = load i32, i32* %cnt.addr, align 4, !dbg !9746
  %conv = sext i32 %4 to i64, !dbg !9746
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !9744
  %5 = load i32, i32* %cnt.addr, align 4, !dbg !9747
  %conv1 = trunc i32 %5 to i8, !dbg !9747
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9748
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 46, !dbg !9749
  store i8 %conv1, i8* %part_buf_count, align 1, !dbg !9750
  ret void, !dbg !9751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @__readw(i8* %addr) #0 !dbg !9752 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9755, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !9757, metadata !DIExpression()), !dbg !9756
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9756
  %1 = bitcast i8* %0 to i16*, !dbg !9756
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i16* %1) #8, !dbg !9756, !srcloc !9758
  store i16 %2, i16* %ret, align 2, !dbg !9756
  %3 = load i16, i16* %ret, align 2, !dbg !9756
  ret i16 %3, !dbg !9756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_pull_final_bytes(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !9759 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !9760, metadata !DIExpression()), !dbg !9761
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9762, metadata !DIExpression()), !dbg !9763
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !9764, metadata !DIExpression()), !dbg !9765
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !9766
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9767
  %2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 47, !dbg !9768
  %part_buf = bitcast %union.anon.79* %2 to i64*, !dbg !9768
  %3 = bitcast i64* %part_buf to i8*, !dbg !9769
  %4 = load i32, i32* %cnt.addr, align 4, !dbg !9770
  %conv = sext i32 %4 to i64, !dbg !9770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 8 %3, i64 %conv, i1 false), !dbg !9769
  %5 = load i32, i32* %cnt.addr, align 4, !dbg !9771
  %conv1 = trunc i32 %5 to i8, !dbg !9771
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9772
  %part_buf_start = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 45, !dbg !9773
  store i8 %conv1, i8* %part_buf_start, align 8, !dbg !9774
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9775
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 44, !dbg !9776
  %8 = load i32, i32* %data_shift, align 4, !dbg !9776
  %shl = shl i32 1, %8, !dbg !9777
  %9 = load i32, i32* %cnt.addr, align 4, !dbg !9778
  %sub = sub i32 %shl, %9, !dbg !9779
  %conv2 = trunc i32 %sub to i8, !dbg !9780
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9781
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 46, !dbg !9782
  store i8 %conv2, i8* %part_buf_count, align 1, !dbg !9783
  ret void, !dbg !9784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writeq(i64 %val, i8* %addr) #0 !dbg !9785 {
entry:
  %val.addr = alloca i64, align 8
  %addr.addr = alloca i8*, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9790, metadata !DIExpression()), !dbg !9789
  %0 = load i64, i64* %val.addr, align 8, !dbg !9789
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9789
  %2 = bitcast i8* %1 to i64*, !dbg !9789
  call void asm sideeffect "movq $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i64 %0, i64* %2) #8, !dbg !9789, !srcloc !9791
  ret void, !dbg !9789
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__readq(i8* %addr) #0 !dbg !9792 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i64, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9795, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !9797, metadata !DIExpression()), !dbg !9796
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9796
  %1 = bitcast i8* %0 to i64*, !dbg !9796
  %2 = call i64 asm sideeffect "movq $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i64* %1) #8, !dbg !9796, !srcloc !9798
  store i64 %2, i64* %ret, align 8, !dbg !9796
  %3 = load i64, i64* %ret, align 8, !dbg !9796
  ret i64 %3, !dbg !9796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_us(i64 %kt, i64 %usec) #0 !dbg !9799 {
entry:
  %kt.addr = alloca i64, align 8
  %usec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !9804, metadata !DIExpression()), !dbg !9805
  store i64 %usec, i64* %usec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %usec.addr, metadata !9806, metadata !DIExpression()), !dbg !9807
  %0 = load i64, i64* %kt.addr, align 8, !dbg !9808
  %1 = load i64, i64* %usec.addr, align 8, !dbg !9808
  %mul = mul i64 %1, 1000, !dbg !9808
  %add = add i64 %0, %mul, !dbg !9808
  ret i64 %add, !dbg !9809
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !9810 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9813, metadata !DIExpression()), !dbg !9812
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9812
  %1 = bitcast i8* %0 to i32*, !dbg !9812
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #8, !dbg !9812, !srcloc !9814
  store i32 %2, i32* %ret, align 4, !dbg !9812
  %3 = load i32, i32* %ret, align 4, !dbg !9812
  ret i32 %3, !dbg !9812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #0 !dbg !9815 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !9820, metadata !DIExpression()), !dbg !9821
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !9822
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !9824
  %cmp = icmp slt i64 %0, %1, !dbg !9825
  br i1 %cmp, label %if.then, label %if.end, !dbg !9826

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9827
  br label %return, !dbg !9827

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !9828
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !9830
  %cmp3 = icmp sgt i64 %2, %3, !dbg !9831
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9832

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9833
  br label %return, !dbg !9833

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9834
  br label %return, !dbg !9834

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9835
  ret i32 %4, !dbg !9835
}

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #2

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dmam_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #0 !dbg !9836 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9848
  %1 = load i64, i64* %size.addr, align 8, !dbg !9849
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !9850
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !9851
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !9852
  %and = and i32 %4, 8192, !dbg !9853
  %tobool = icmp ne i32 %and, 0, !dbg !9854
  %5 = zext i1 %tobool to i64, !dbg !9854
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !9854
  %call = call i8* @dmam_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !9855
  ret i8* %call, !dbg !9856
}

; Function Attrs: noredzone
declare dso_local i32 @device_property_read_string_array(%struct.device*, i8*, i8**, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @dmam_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_idmac_init(%struct.dw_mci* %host) #0 !dbg !9857 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.idmac_desc_64addr*, align 8
  %p20 = alloca %struct.idmac_desc*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9860, metadata !DIExpression()), !dbg !9861
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9862
  %dma_64bit_address = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 16, !dbg !9864
  %1 = load i32, i32* %dma_64bit_address, align 8, !dbg !9864
  %cmp = icmp eq i32 %1, 1, !dbg !9865
  br i1 %cmp, label %if.then, label %if.else, !dbg !9866

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.idmac_desc_64addr** %p, metadata !9867, metadata !DIExpression()), !dbg !9880
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9881
  %ring_size = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 20, !dbg !9882
  store i32 128, i32* %ring_size, align 8, !dbg !9883
  store i32 0, i32* %i, align 4, !dbg !9884
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9886
  %sg_cpu = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 18, !dbg !9887
  %4 = load i8*, i8** %sg_cpu, align 8, !dbg !9887
  %5 = bitcast i8* %4 to %struct.idmac_desc_64addr*, !dbg !9886
  store %struct.idmac_desc_64addr* %5, %struct.idmac_desc_64addr** %p, align 8, !dbg !9888
  br label %for.cond, !dbg !9889

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !9890
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9892
  %ring_size1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 20, !dbg !9893
  %8 = load i32, i32* %ring_size1, align 8, !dbg !9893
  %sub = sub i32 %8, 1, !dbg !9894
  %cmp2 = icmp ult i32 %6, %sub, !dbg !9895
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9896

for.body:                                         ; preds = %for.cond
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9897
  %sg_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 17, !dbg !9899
  %10 = load i64, i64* %sg_dma, align 8, !dbg !9899
  %11 = load i32, i32* %i, align 4, !dbg !9900
  %add = add i32 %11, 1, !dbg !9901
  %conv = sext i32 %add to i64, !dbg !9902
  %mul = mul i64 32, %conv, !dbg !9903
  %add3 = add i64 %10, %mul, !dbg !9904
  %and = and i64 %add3, 4294967295, !dbg !9905
  %conv4 = trunc i64 %and to i32, !dbg !9906
  %12 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9907
  %des6 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %12, i32 0, i32 6, !dbg !9908
  store i32 %conv4, i32* %des6, align 4, !dbg !9909
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9910
  %sg_dma5 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 17, !dbg !9911
  %14 = load i64, i64* %sg_dma5, align 8, !dbg !9911
  %15 = load i32, i32* %i, align 4, !dbg !9912
  %add6 = add i32 %15, 1, !dbg !9913
  %conv7 = sext i32 %add6 to i64, !dbg !9914
  %mul8 = mul i64 32, %conv7, !dbg !9915
  %add9 = add i64 %14, %mul8, !dbg !9916
  %shr = lshr i64 %add9, 32, !dbg !9917
  %conv10 = trunc i64 %shr to i32, !dbg !9918
  %16 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9919
  %des7 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %16, i32 0, i32 7, !dbg !9920
  store i32 %conv10, i32* %des7, align 4, !dbg !9921
  %17 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9922
  %des0 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %17, i32 0, i32 0, !dbg !9923
  store i32 0, i32* %des0, align 4, !dbg !9924
  %18 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9925
  %des1 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %18, i32 0, i32 1, !dbg !9926
  store i32 0, i32* %des1, align 4, !dbg !9927
  %19 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9928
  %des2 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %19, i32 0, i32 2, !dbg !9929
  store i32 0, i32* %des2, align 4, !dbg !9930
  %20 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9931
  %des3 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %20, i32 0, i32 3, !dbg !9932
  store i32 0, i32* %des3, align 4, !dbg !9933
  br label %for.inc, !dbg !9934

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !9935
  %inc = add i32 %21, 1, !dbg !9935
  store i32 %inc, i32* %i, align 4, !dbg !9935
  %22 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9936
  %incdec.ptr = getelementptr %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %22, i32 1, !dbg !9936
  store %struct.idmac_desc_64addr* %incdec.ptr, %struct.idmac_desc_64addr** %p, align 8, !dbg !9936
  br label %for.cond, !dbg !9937, !llvm.loop !9938

for.end:                                          ; preds = %for.cond
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9940
  %sg_dma11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 17, !dbg !9941
  %24 = load i64, i64* %sg_dma11, align 8, !dbg !9941
  %and12 = and i64 %24, 4294967295, !dbg !9942
  %conv13 = trunc i64 %and12 to i32, !dbg !9940
  %25 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9943
  %des614 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %25, i32 0, i32 6, !dbg !9944
  store i32 %conv13, i32* %des614, align 4, !dbg !9945
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9946
  %sg_dma15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 17, !dbg !9947
  %27 = load i64, i64* %sg_dma15, align 8, !dbg !9947
  %shr16 = lshr i64 %27, 32, !dbg !9948
  %conv17 = trunc i64 %shr16 to i32, !dbg !9949
  %28 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9950
  %des718 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %28, i32 0, i32 7, !dbg !9951
  store i32 %conv17, i32* %des718, align 4, !dbg !9952
  %29 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %p, align 8, !dbg !9953
  %des019 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %29, i32 0, i32 0, !dbg !9954
  store i32 32, i32* %des019, align 4, !dbg !9955
  br label %if.end, !dbg !9956

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.idmac_desc** %p20, metadata !9957, metadata !DIExpression()), !dbg !9966
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9967
  %ring_size21 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %30, i32 0, i32 20, !dbg !9968
  store i32 256, i32* %ring_size21, align 8, !dbg !9969
  store i32 0, i32* %i, align 4, !dbg !9970
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9972
  %sg_cpu22 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 18, !dbg !9973
  %32 = load i8*, i8** %sg_cpu22, align 8, !dbg !9973
  %33 = bitcast i8* %32 to %struct.idmac_desc*, !dbg !9972
  store %struct.idmac_desc* %33, %struct.idmac_desc** %p20, align 8, !dbg !9974
  br label %for.cond23, !dbg !9975

for.cond23:                                       ; preds = %for.inc38, %if.else
  %34 = load i32, i32* %i, align 4, !dbg !9976
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9978
  %ring_size24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 20, !dbg !9979
  %36 = load i32, i32* %ring_size24, align 8, !dbg !9979
  %sub25 = sub i32 %36, 1, !dbg !9980
  %cmp26 = icmp ult i32 %34, %sub25, !dbg !9981
  br i1 %cmp26, label %for.body28, label %for.end41, !dbg !9982

for.body28:                                       ; preds = %for.cond23
  %37 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !9983
  %sg_dma29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %37, i32 0, i32 17, !dbg !9983
  %38 = load i64, i64* %sg_dma29, align 8, !dbg !9983
  %39 = load i32, i32* %i, align 4, !dbg !9983
  %add30 = add i32 %39, 1, !dbg !9983
  %conv31 = sext i32 %add30 to i64, !dbg !9983
  %mul32 = mul i64 16, %conv31, !dbg !9983
  %add33 = add i64 %38, %mul32, !dbg !9983
  %conv34 = trunc i64 %add33 to i32, !dbg !9983
  %40 = load %struct.idmac_desc*, %struct.idmac_desc** %p20, align 8, !dbg !9985
  %des335 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %40, i32 0, i32 3, !dbg !9986
  store i32 %conv34, i32* %des335, align 4, !dbg !9987
  %41 = load %struct.idmac_desc*, %struct.idmac_desc** %p20, align 8, !dbg !9988
  %des036 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %41, i32 0, i32 0, !dbg !9989
  store i32 0, i32* %des036, align 4, !dbg !9990
  %42 = load %struct.idmac_desc*, %struct.idmac_desc** %p20, align 8, !dbg !9991
  %des137 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %42, i32 0, i32 1, !dbg !9992
  store i32 0, i32* %des137, align 4, !dbg !9993
  br label %for.inc38, !dbg !9994

for.inc38:                                        ; preds = %for.body28
  %43 = load i32, i32* %i, align 4, !dbg !9995
  %inc39 = add i32 %43, 1, !dbg !9995
  store i32 %inc39, i32* %i, align 4, !dbg !9995
  %44 = load %struct.idmac_desc*, %struct.idmac_desc** %p20, align 8, !dbg !9996
  %incdec.ptr40 = getelementptr %struct.idmac_desc, %struct.idmac_desc* %44, i32 1, !dbg !9996
  store %struct.idmac_desc* %incdec.ptr40, %struct.idmac_desc** %p20, align 8, !dbg !9996
  br label %for.cond23, !dbg !9997, !llvm.loop !9998

for.end41:                                        ; preds = %for.cond23
  %45 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10000
  %sg_dma42 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %45, i32 0, i32 17, !dbg !10000
  %46 = load i64, i64* %sg_dma42, align 8, !dbg !10000
  %conv43 = trunc i64 %46 to i32, !dbg !10000
  %47 = load %struct.idmac_desc*, %struct.idmac_desc** %p20, align 8, !dbg !10001
  %des344 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %47, i32 0, i32 3, !dbg !10002
  store i32 %conv43, i32* %des344, align 4, !dbg !10003
  %48 = load %struct.idmac_desc*, %struct.idmac_desc** %p20, align 8, !dbg !10004
  %des045 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %48, i32 0, i32 0, !dbg !10005
  store i32 32, i32* %des045, align 4, !dbg !10006
  br label %if.end

if.end:                                           ; preds = %for.end41, %for.end
  %49 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10007
  call void @dw_mci_idmac_reset(%struct.dw_mci* %49) #12, !dbg !10008
  %50 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10009
  %dma_64bit_address46 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %50, i32 0, i32 16, !dbg !10011
  %51 = load i32, i32* %dma_64bit_address46, align 8, !dbg !10011
  %cmp47 = icmp eq i32 %51, 1, !dbg !10012
  br i1 %cmp47, label %if.then49, label %if.else62, !dbg !10013

if.then49:                                        ; preds = %if.end
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10014
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %52, i32 0, i32 2, !dbg !10014
  %53 = load i8*, i8** %regs, align 8, !dbg !10014
  %add.ptr = getelementptr i8, i8* %53, i64 144, !dbg !10014
  call void @__writel(i32 823, i8* %add.ptr) #12, !dbg !10014
  %54 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10016
  %regs50 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %54, i32 0, i32 2, !dbg !10016
  %55 = load i8*, i8** %regs50, align 8, !dbg !10016
  %add.ptr51 = getelementptr i8, i8* %55, i64 148, !dbg !10016
  call void @__writel(i32 259, i8* %add.ptr51) #12, !dbg !10016
  %56 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10017
  %sg_dma52 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %56, i32 0, i32 17, !dbg !10017
  %57 = load i64, i64* %sg_dma52, align 8, !dbg !10017
  %and53 = and i64 %57, 4294967295, !dbg !10017
  %conv54 = trunc i64 %and53 to i32, !dbg !10017
  %58 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10017
  %regs55 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %58, i32 0, i32 2, !dbg !10017
  %59 = load i8*, i8** %regs55, align 8, !dbg !10017
  %add.ptr56 = getelementptr i8, i8* %59, i64 136, !dbg !10017
  call void @__writel(i32 %conv54, i8* %add.ptr56) #12, !dbg !10017
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10018
  %sg_dma57 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 17, !dbg !10018
  %61 = load i64, i64* %sg_dma57, align 8, !dbg !10018
  %shr58 = lshr i64 %61, 32, !dbg !10018
  %conv59 = trunc i64 %shr58 to i32, !dbg !10018
  %62 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10018
  %regs60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %62, i32 0, i32 2, !dbg !10018
  %63 = load i8*, i8** %regs60, align 8, !dbg !10018
  %add.ptr61 = getelementptr i8, i8* %63, i64 140, !dbg !10018
  call void @__writel(i32 %conv59, i8* %add.ptr61) #12, !dbg !10018
  br label %if.end71, !dbg !10019

if.else62:                                        ; preds = %if.end
  %64 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10020
  %regs63 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %64, i32 0, i32 2, !dbg !10020
  %65 = load i8*, i8** %regs63, align 8, !dbg !10020
  %add.ptr64 = getelementptr i8, i8* %65, i64 140, !dbg !10020
  call void @__writel(i32 823, i8* %add.ptr64) #12, !dbg !10020
  %66 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10022
  %regs65 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %66, i32 0, i32 2, !dbg !10022
  %67 = load i8*, i8** %regs65, align 8, !dbg !10022
  %add.ptr66 = getelementptr i8, i8* %67, i64 144, !dbg !10022
  call void @__writel(i32 259, i8* %add.ptr66) #12, !dbg !10022
  %68 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10023
  %sg_dma67 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %68, i32 0, i32 17, !dbg !10023
  %69 = load i64, i64* %sg_dma67, align 8, !dbg !10023
  %conv68 = trunc i64 %69 to i32, !dbg !10023
  %70 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10023
  %regs69 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %70, i32 0, i32 2, !dbg !10023
  %71 = load i8*, i8** %regs69, align 8, !dbg !10023
  %add.ptr70 = getelementptr i8, i8* %71, i64 136, !dbg !10023
  call void @__writel(i32 %conv68, i8* %add.ptr70) #12, !dbg !10023
  br label %if.end71

if.end71:                                         ; preds = %if.else62, %if.then49
  ret i32 0, !dbg !10024
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_idmac_start_dma(%struct.dw_mci* %host, i32 %sg_len) #0 !dbg !10025 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %sg_len.addr = alloca i32, align 4
  %temp = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10026, metadata !DIExpression()), !dbg !10027
  store i32 %sg_len, i32* %sg_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_len.addr, metadata !10028, metadata !DIExpression()), !dbg !10029
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !10030, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10032, metadata !DIExpression()), !dbg !10033
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10034
  %dma_64bit_address = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 16, !dbg !10036
  %1 = load i32, i32* %dma_64bit_address, align 8, !dbg !10036
  %cmp = icmp eq i32 %1, 1, !dbg !10037
  br i1 %cmp, label %if.then, label %if.else, !dbg !10038

if.then:                                          ; preds = %entry
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10039
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10040
  %data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 10, !dbg !10041
  %4 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10041
  %5 = load i32, i32* %sg_len.addr, align 4, !dbg !10042
  %call = call i32 @dw_mci_prepare_desc64(%struct.dw_mci* %2, %struct.mmc_data* %4, i32 %5) #12, !dbg !10043
  store i32 %call, i32* %ret, align 4, !dbg !10044
  br label %if.end, !dbg !10045

if.else:                                          ; preds = %entry
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10046
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10047
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 10, !dbg !10048
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !10048
  %9 = load i32, i32* %sg_len.addr, align 4, !dbg !10049
  %call2 = call i32 @dw_mci_prepare_desc32(%struct.dw_mci* %6, %struct.mmc_data* %8, i32 %9) #12, !dbg !10050
  store i32 %call2, i32* %ret, align 4, !dbg !10051
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %ret, align 4, !dbg !10052
  %tobool = icmp ne i32 %10, 0, !dbg !10052
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !10054

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !10055

if.end4:                                          ; preds = %if.end
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10056, !srcloc !10057
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10058
  %call5 = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %11, i32 4) #12, !dbg !10059
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10060
  call void @dw_mci_idmac_reset(%struct.dw_mci* %12) #12, !dbg !10061
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10062
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 2, !dbg !10062
  %14 = load i8*, i8** %regs, align 8, !dbg !10062
  %add.ptr = getelementptr i8, i8* %14, i64 0, !dbg !10062
  %call6 = call i32 @__readl(i8* %add.ptr) #12, !dbg !10062
  store i32 %call6, i32* %temp, align 4, !dbg !10063
  %15 = load i32, i32* %temp, align 4, !dbg !10064
  %conv = zext i32 %15 to i64, !dbg !10064
  %or = or i64 %conv, 33554432, !dbg !10064
  %conv7 = trunc i64 %or to i32, !dbg !10064
  store i32 %conv7, i32* %temp, align 4, !dbg !10064
  %16 = load i32, i32* %temp, align 4, !dbg !10065
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10065
  %regs8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 2, !dbg !10065
  %18 = load i8*, i8** %regs8, align 8, !dbg !10065
  %add.ptr9 = getelementptr i8, i8* %18, i64 0, !dbg !10065
  call void @__writel(i32 %16, i8* %add.ptr9) #12, !dbg !10065
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10066, !srcloc !10067
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10068
  %regs10 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 2, !dbg !10068
  %20 = load i8*, i8** %regs10, align 8, !dbg !10068
  %add.ptr11 = getelementptr i8, i8* %20, i64 128, !dbg !10068
  %call12 = call i32 @__readl(i8* %add.ptr11) #12, !dbg !10068
  store i32 %call12, i32* %temp, align 4, !dbg !10069
  %21 = load i32, i32* %temp, align 4, !dbg !10070
  %conv13 = zext i32 %21 to i64, !dbg !10070
  %or14 = or i64 %conv13, 130, !dbg !10070
  %conv15 = trunc i64 %or14 to i32, !dbg !10070
  store i32 %conv15, i32* %temp, align 4, !dbg !10070
  %22 = load i32, i32* %temp, align 4, !dbg !10071
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10071
  %regs16 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 2, !dbg !10071
  %24 = load i8*, i8** %regs16, align 8, !dbg !10071
  %add.ptr17 = getelementptr i8, i8* %24, i64 128, !dbg !10071
  call void @__writel(i32 %22, i8* %add.ptr17) #12, !dbg !10071
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10072
  %regs18 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 2, !dbg !10072
  %26 = load i8*, i8** %regs18, align 8, !dbg !10072
  %add.ptr19 = getelementptr i8, i8* %26, i64 132, !dbg !10072
  call void @__writel(i32 1, i8* %add.ptr19) #12, !dbg !10072
  br label %out, !dbg !10072

out:                                              ; preds = %if.end4, %if.then3
  call void @llvm.dbg.label(metadata !10073), !dbg !10074
  %27 = load i32, i32* %ret, align 4, !dbg !10075
  ret i32 %27, !dbg !10076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_dmac_complete_dma(i8* %arg) #0 !dbg !10077 {
entry:
  %arg.addr = alloca i8*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %data = alloca %struct.mmc_data*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !10080, metadata !DIExpression()), !dbg !10081
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !10082
  %1 = bitcast i8* %0 to %struct.dw_mci*, !dbg !10082
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !10081
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !10083, metadata !DIExpression()), !dbg !10084
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10085
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 10, !dbg !10086
  %3 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !10086
  store %struct.mmc_data* %3, %struct.mmc_data** %data, align 8, !dbg !10084
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10087
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 14, !dbg !10089
  %5 = load i32, i32* %use_dma, align 8, !dbg !10089
  %cmp = icmp eq i32 %5, 2, !dbg !10090
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10091

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10092
  %tobool = icmp ne %struct.mmc_data* %6, null, !dbg !10092
  br i1 %tobool, label %land.lhs.true2, label %if.end, !dbg !10093

land.lhs.true2:                                   ; preds = %land.lhs.true
  %7 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10094
  %flags = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %7, i32 0, i32 6, !dbg !10095
  %8 = load i32, i32* %flags, align 8, !dbg !10095
  %conv = zext i32 %8 to i64, !dbg !10094
  %and = and i64 %conv, 512, !dbg !10096
  %tobool3 = icmp ne i64 %and, 0, !dbg !10096
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10097

if.then:                                          ; preds = %land.lhs.true2
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10098
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 42, !dbg !10098
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !10098
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 0, !dbg !10098
  %11 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !10098
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 0, !dbg !10098
  %12 = load %struct.device*, %struct.device** %parent, align 64, !dbg !10098
  %13 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10099
  %sg = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %13, i32 0, i32 12, !dbg !10100
  %14 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10100
  %15 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10101
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %15, i32 0, i32 10, !dbg !10102
  %16 = load i32, i32* %sg_len, align 8, !dbg !10102
  call void @dma_sync_sg_for_cpu(%struct.device* %12, %struct.scatterlist* %14, i32 %16, i32 2) #12, !dbg !10103
  br label %if.end, !dbg !10103

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10104
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 19, !dbg !10105
  %18 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !10105
  %cleanup = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %18, i32 0, i32 4, !dbg !10106
  %19 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %cleanup, align 8, !dbg !10106
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10107
  call void %19(%struct.dw_mci* %20) #12, !dbg !10104
  %21 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10108
  %tobool4 = icmp ne %struct.mmc_data* %21, null, !dbg !10108
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10110

if.then5:                                         ; preds = %if.end
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10111
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 28, !dbg !10113
  call void @set_bit(i64 1, i64* %pending_events) #12, !dbg !10114
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !10115
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 27, !dbg !10116
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #12, !dbg !10117
  br label %if.end6, !dbg !10118

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !10119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_idmac_stop_dma(%struct.dw_mci* %host) #0 !dbg !10120 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %temp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10121, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !10123, metadata !DIExpression()), !dbg !10124
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10125
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 2, !dbg !10125
  %1 = load i8*, i8** %regs, align 8, !dbg !10125
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !10125
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !10125
  store i32 %call, i32* %temp, align 4, !dbg !10126
  %2 = load i32, i32* %temp, align 4, !dbg !10127
  %conv = zext i32 %2 to i64, !dbg !10127
  %and = and i64 %conv, -33554433, !dbg !10127
  %conv1 = trunc i64 %and to i32, !dbg !10127
  store i32 %conv1, i32* %temp, align 4, !dbg !10127
  %3 = load i32, i32* %temp, align 4, !dbg !10128
  %conv2 = zext i32 %3 to i64, !dbg !10128
  %or = or i64 %conv2, 4, !dbg !10128
  %conv3 = trunc i64 %or to i32, !dbg !10128
  store i32 %conv3, i32* %temp, align 4, !dbg !10128
  %4 = load i32, i32* %temp, align 4, !dbg !10129
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10129
  %regs4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 2, !dbg !10129
  %6 = load i8*, i8** %regs4, align 8, !dbg !10129
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !10129
  call void @__writel(i32 %4, i8* %add.ptr5) #12, !dbg !10129
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10130
  %regs6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 2, !dbg !10130
  %8 = load i8*, i8** %regs6, align 8, !dbg !10130
  %add.ptr7 = getelementptr i8, i8* %8, i64 128, !dbg !10130
  %call8 = call i32 @__readl(i8* %add.ptr7) #12, !dbg !10130
  store i32 %call8, i32* %temp, align 4, !dbg !10131
  %9 = load i32, i32* %temp, align 4, !dbg !10132
  %conv9 = zext i32 %9 to i64, !dbg !10132
  %and10 = and i64 %conv9, -131, !dbg !10132
  %conv11 = trunc i64 %and10 to i32, !dbg !10132
  store i32 %conv11, i32* %temp, align 4, !dbg !10132
  %10 = load i32, i32* %temp, align 4, !dbg !10133
  %conv12 = zext i32 %10 to i64, !dbg !10133
  %or13 = or i64 %conv12, 1, !dbg !10133
  %conv14 = trunc i64 %or13 to i32, !dbg !10133
  store i32 %conv14, i32* %temp, align 4, !dbg !10133
  %11 = load i32, i32* %temp, align 4, !dbg !10134
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10134
  %regs15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 2, !dbg !10134
  %13 = load i8*, i8** %regs15, align 8, !dbg !10134
  %add.ptr16 = getelementptr i8, i8* %13, i64 128, !dbg !10134
  call void @__writel(i32 %11, i8* %add.ptr16) #12, !dbg !10134
  ret void, !dbg !10135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_dma_cleanup(%struct.dw_mci* %host) #0 !dbg !10136 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %data = alloca %struct.mmc_data*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10141
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 10, !dbg !10142
  %1 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !10142
  store %struct.mmc_data* %1, %struct.mmc_data** %data, align 8, !dbg !10140
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10143
  %tobool = icmp ne %struct.mmc_data* %2, null, !dbg !10143
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10145

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10146
  %host_cookie = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %3, i32 0, i32 13, !dbg !10147
  %4 = load i32, i32* %host_cookie, align 8, !dbg !10147
  %cmp = icmp eq i32 %4, 2, !dbg !10148
  br i1 %cmp, label %if.then, label %if.end, !dbg !10149

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10150
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 36, !dbg !10150
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10150
  %7 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10150
  %sg = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %7, i32 0, i32 12, !dbg !10150
  %8 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10150
  %9 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10150
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %9, i32 0, i32 10, !dbg !10150
  %10 = load i32, i32* %sg_len, align 8, !dbg !10150
  %11 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10150
  %call = call i32 @mmc_get_dma_dir(%struct.mmc_data* %11) #12, !dbg !10150
  call void @dma_unmap_sg_attrs(%struct.device* %6, %struct.scatterlist* %8, i32 %10, i32 %call, i64 0) #12, !dbg !10150
  %12 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10152
  %host_cookie2 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %12, i32 0, i32 13, !dbg !10153
  store i32 0, i32* %host_cookie2, align 8, !dbg !10154
  br label %if.end, !dbg !10155

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !10156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_idmac_reset(%struct.dw_mci* %host) #0 !dbg !10157 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %bmod = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata i32* %bmod, metadata !10160, metadata !DIExpression()), !dbg !10161
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10162
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 2, !dbg !10162
  %1 = load i8*, i8** %regs, align 8, !dbg !10162
  %add.ptr = getelementptr i8, i8* %1, i64 128, !dbg !10162
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !10162
  store i32 %call, i32* %bmod, align 4, !dbg !10161
  %2 = load i32, i32* %bmod, align 4, !dbg !10163
  %conv = zext i32 %2 to i64, !dbg !10163
  %or = or i64 %conv, 1, !dbg !10163
  %conv1 = trunc i64 %or to i32, !dbg !10163
  store i32 %conv1, i32* %bmod, align 4, !dbg !10163
  %3 = load i32, i32* %bmod, align 4, !dbg !10164
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10164
  %regs2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 2, !dbg !10164
  %5 = load i8*, i8** %regs2, align 8, !dbg !10164
  %add.ptr3 = getelementptr i8, i8* %5, i64 128, !dbg !10164
  call void @__writel(i32 %3, i8* %add.ptr3) #12, !dbg !10164
  ret void, !dbg !10165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_prepare_desc64(%struct.dw_mci* %host, %struct.mmc_data* %data, i32 %sg_len) #0 !dbg !10166 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %sg_len.addr = alloca i32, align 4
  %desc_len = alloca i32, align 4
  %desc_first = alloca %struct.idmac_desc_64addr*, align 8
  %desc_last = alloca %struct.idmac_desc_64addr*, align 8
  %desc = alloca %struct.idmac_desc_64addr*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  %mem_addr = alloca i64, align 8
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  store i32 %sg_len, i32* %sg_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_len.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata i32* %desc_len, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.declare(metadata %struct.idmac_desc_64addr** %desc_first, metadata !10177, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.declare(metadata %struct.idmac_desc_64addr** %desc_last, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata %struct.idmac_desc_64addr** %desc, metadata !10181, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10183, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10185, metadata !DIExpression()), !dbg !10186
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10187
  %sg_cpu = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 18, !dbg !10188
  %1 = load i8*, i8** %sg_cpu, align 8, !dbg !10188
  %2 = bitcast i8* %1 to %struct.idmac_desc_64addr*, !dbg !10187
  store %struct.idmac_desc_64addr* %2, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10189
  store %struct.idmac_desc_64addr* %2, %struct.idmac_desc_64addr** %desc_last, align 8, !dbg !10190
  store %struct.idmac_desc_64addr* %2, %struct.idmac_desc_64addr** %desc_first, align 8, !dbg !10191
  store i32 0, i32* %i, align 4, !dbg !10192
  br label %for.cond, !dbg !10194

for.cond:                                         ; preds = %for.inc46, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10195
  %4 = load i32, i32* %sg_len.addr, align 4, !dbg !10197
  %cmp = icmp ult i32 %3, %4, !dbg !10198
  br i1 %cmp, label %for.body, label %for.end47, !dbg !10199

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %length, metadata !10200, metadata !DIExpression()), !dbg !10202
  %5 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !10203
  %sg = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %5, i32 0, i32 12, !dbg !10203
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10203
  %7 = load i32, i32* %i, align 4, !dbg !10203
  %idxprom = sext i32 %7 to i64, !dbg !10203
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %6, i64 %idxprom, !dbg !10203
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %arrayidx, i32 0, i32 4, !dbg !10203
  %8 = load i32, i32* %dma_length, align 8, !dbg !10203
  store i32 %8, i32* %length, align 4, !dbg !10202
  call void @llvm.dbg.declare(metadata i64* %mem_addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  %9 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !10206
  %sg1 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %9, i32 0, i32 12, !dbg !10206
  %10 = load %struct.scatterlist*, %struct.scatterlist** %sg1, align 8, !dbg !10206
  %11 = load i32, i32* %i, align 4, !dbg !10206
  %idxprom2 = sext i32 %11 to i64, !dbg !10206
  %arrayidx3 = getelementptr %struct.scatterlist, %struct.scatterlist* %10, i64 %idxprom2, !dbg !10206
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %arrayidx3, i32 0, i32 3, !dbg !10206
  %12 = load i64, i64* %dma_address, align 8, !dbg !10206
  store i64 %12, i64* %mem_addr, align 8, !dbg !10205
  br label %for.cond4, !dbg !10207

for.cond4:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %length, align 4, !dbg !10208
  %tobool = icmp ne i32 %13, 0, !dbg !10211
  br i1 %tobool, label %for.body5, label %for.end45, !dbg !10211

for.body5:                                        ; preds = %for.cond4
  %14 = load i32, i32* %length, align 4, !dbg !10212
  %cmp6 = icmp ule i32 %14, 4096, !dbg !10214
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !10215

cond.true:                                        ; preds = %for.body5
  %15 = load i32, i32* %length, align 4, !dbg !10216
  br label %cond.end, !dbg !10215

cond.false:                                       ; preds = %for.body5
  br label %cond.end, !dbg !10215

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ 4096, %cond.false ], !dbg !10215
  store i32 %cond, i32* %desc_len, align 4, !dbg !10217
  %16 = load i32, i32* %desc_len, align 4, !dbg !10218
  %17 = load i32, i32* %length, align 4, !dbg !10219
  %sub = sub i32 %17, %16, !dbg !10219
  store i32 %sub, i32* %length, align 4, !dbg !10219
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !10220, metadata !DIExpression()), !dbg !10223
  store i64 100000, i64* %__timeout_us, align 8, !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !10224, metadata !DIExpression()), !dbg !10223
  store i64 10, i64* %__delay_us, align 8, !dbg !10223
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !10225, metadata !DIExpression()), !dbg !10223
  %call = call i64 @ktime_get() #12, !dbg !10223
  %18 = load i64, i64* %__timeout_us, align 8, !dbg !10223
  %call7 = call i64 @ktime_add_us(i64 %call, i64 %18) #12, !dbg !10223
  store i64 %call7, i64* %__timeout, align 8, !dbg !10223
  br label %for.cond8, !dbg !10223

for.cond8:                                        ; preds = %if.end29, %cond.end
  %19 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10226
  %des0 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %19, i32 0, i32 0, !dbg !10226
  %20 = bitcast i32* %des0 to i8*, !dbg !10226
  %call9 = call i32 @readl(i8* %20) #12, !dbg !10226
  store i32 %call9, i32* %val, align 4, !dbg !10226
  %21 = load i32, i32* %val, align 4, !dbg !10230
  %conv = zext i32 %21 to i64, !dbg !10230
  %and = and i64 %conv, 2147483648, !dbg !10230
  %tobool10 = icmp ne i64 %and, 0, !dbg !10230
  br i1 %tobool10, label %if.end, label %if.then, !dbg !10226

if.then:                                          ; preds = %for.cond8
  br label %for.end, !dbg !10230

if.end:                                           ; preds = %for.cond8
  %22 = load i64, i64* %__timeout_us, align 8, !dbg !10232
  %tobool11 = icmp ne i64 %22, 0, !dbg !10232
  br i1 %tobool11, label %land.lhs.true, label %if.end19, !dbg !10232

land.lhs.true:                                    ; preds = %if.end
  %call12 = call i64 @ktime_get() #12, !dbg !10232
  %23 = load i64, i64* %__timeout, align 8, !dbg !10232
  %call13 = call i32 @ktime_compare(i64 %call12, i64 %23) #12, !dbg !10232
  %cmp14 = icmp sgt i32 %call13, 0, !dbg !10232
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !10226

if.then16:                                        ; preds = %land.lhs.true
  %24 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10234
  %des017 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %24, i32 0, i32 0, !dbg !10234
  %25 = bitcast i32* %des017 to i8*, !dbg !10234
  %call18 = call i32 @readl(i8* %25) #12, !dbg !10234
  store i32 %call18, i32* %val, align 4, !dbg !10234
  br label %for.end, !dbg !10234

if.end19:                                         ; preds = %land.lhs.true, %if.end
  %26 = load i64, i64* %__delay_us, align 8, !dbg !10236
  %tobool20 = icmp ne i64 %26, 0, !dbg !10236
  br i1 %tobool20, label %if.then21, label %if.end29, !dbg !10226

if.then21:                                        ; preds = %if.end19
  %27 = load i64, i64* %__delay_us, align 8, !dbg !10238
  %28 = call i1 @llvm.is.constant.i64(i64 %27), !dbg !10238
  br i1 %28, label %if.then22, label %if.else27, !dbg !10241

if.then22:                                        ; preds = %if.then21
  %29 = load i64, i64* %__delay_us, align 8, !dbg !10242
  %div = udiv i64 %29, 20000, !dbg !10242
  %cmp23 = icmp uge i64 %div, 1, !dbg !10242
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !10245

if.then25:                                        ; preds = %if.then22
  call void @__bad_udelay() #12, !dbg !10242
  br label %if.end26, !dbg !10242

if.else:                                          ; preds = %if.then22
  %30 = load i64, i64* %__delay_us, align 8, !dbg !10242
  %mul = mul i64 %30, 4295, !dbg !10242
  call void @__const_udelay(i64 %mul) #12, !dbg !10242
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  br label %if.end28, !dbg !10245

if.else27:                                        ; preds = %if.then21
  %31 = load i64, i64* %__delay_us, align 8, !dbg !10246
  call void @__udelay(i64 %31) #12, !dbg !10246
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.end26
  br label %if.end29, !dbg !10236

if.end29:                                         ; preds = %if.end28, %if.end19
  br label %for.cond8, !dbg !10248, !llvm.loop !10249

for.end:                                          ; preds = %if.then16, %if.then
  %32 = load i32, i32* %val, align 4, !dbg !10223
  %conv30 = zext i32 %32 to i64, !dbg !10223
  %and31 = and i64 %conv30, 2147483648, !dbg !10223
  %tobool32 = icmp ne i64 %and31, 0, !dbg !10223
  %lnot = xor i1 %tobool32, true, !dbg !10223
  %33 = zext i1 %lnot to i64, !dbg !10223
  %cond33 = select i1 %lnot, i32 0, i32 -110, !dbg !10223
  store i32 %cond33, i32* %tmp, align 4, !dbg !10250
  %34 = load i32, i32* %tmp, align 4, !dbg !10223
  %tobool34 = icmp ne i32 %34, 0, !dbg !10251
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !10252

if.then35:                                        ; preds = %for.end
  br label %err_own_bit, !dbg !10253

if.end36:                                         ; preds = %for.end
  %35 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10254
  %des037 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %35, i32 0, i32 0, !dbg !10255
  store i32 -2147483630, i32* %des037, align 4, !dbg !10256
  %36 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10257
  %des2 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %36, i32 0, i32 2, !dbg !10257
  %37 = load i32, i32* %des2, align 4, !dbg !10257
  %and38 = and i32 %37, 67100672, !dbg !10257
  %38 = load i32, i32* %desc_len, align 4, !dbg !10257
  %and39 = and i32 %38, 8191, !dbg !10257
  %or = or i32 %and38, %and39, !dbg !10257
  %39 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10257
  %des240 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %39, i32 0, i32 2, !dbg !10257
  store i32 %or, i32* %des240, align 4, !dbg !10257
  %40 = load i64, i64* %mem_addr, align 8, !dbg !10258
  %and41 = and i64 %40, 4294967295, !dbg !10259
  %conv42 = trunc i64 %and41 to i32, !dbg !10258
  %41 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10260
  %des4 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %41, i32 0, i32 4, !dbg !10261
  store i32 %conv42, i32* %des4, align 4, !dbg !10262
  %42 = load i64, i64* %mem_addr, align 8, !dbg !10263
  %shr = lshr i64 %42, 32, !dbg !10264
  %conv43 = trunc i64 %shr to i32, !dbg !10263
  %43 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10265
  %des5 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %43, i32 0, i32 5, !dbg !10266
  store i32 %conv43, i32* %des5, align 4, !dbg !10267
  %44 = load i32, i32* %desc_len, align 4, !dbg !10268
  %conv44 = zext i32 %44 to i64, !dbg !10268
  %45 = load i64, i64* %mem_addr, align 8, !dbg !10269
  %add = add i64 %45, %conv44, !dbg !10269
  store i64 %add, i64* %mem_addr, align 8, !dbg !10269
  %46 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10270
  store %struct.idmac_desc_64addr* %46, %struct.idmac_desc_64addr** %desc_last, align 8, !dbg !10271
  br label %for.inc, !dbg !10272

for.inc:                                          ; preds = %if.end36
  %47 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10273
  %incdec.ptr = getelementptr %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %47, i32 1, !dbg !10273
  store %struct.idmac_desc_64addr* %incdec.ptr, %struct.idmac_desc_64addr** %desc, align 8, !dbg !10273
  br label %for.cond4, !dbg !10274, !llvm.loop !10275

for.end45:                                        ; preds = %for.cond4
  br label %for.inc46, !dbg !10277

for.inc46:                                        ; preds = %for.end45
  %48 = load i32, i32* %i, align 4, !dbg !10278
  %inc = add i32 %48, 1, !dbg !10278
  store i32 %inc, i32* %i, align 4, !dbg !10278
  br label %for.cond, !dbg !10279, !llvm.loop !10280

for.end47:                                        ; preds = %for.cond
  %49 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc_first, align 8, !dbg !10282
  %des048 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %49, i32 0, i32 0, !dbg !10283
  %50 = load i32, i32* %des048, align 4, !dbg !10284
  %conv49 = zext i32 %50 to i64, !dbg !10284
  %or50 = or i64 %conv49, 8, !dbg !10284
  %conv51 = trunc i64 %or50 to i32, !dbg !10284
  store i32 %conv51, i32* %des048, align 4, !dbg !10284
  %51 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc_last, align 8, !dbg !10285
  %des052 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %51, i32 0, i32 0, !dbg !10286
  %52 = load i32, i32* %des052, align 4, !dbg !10287
  %conv53 = zext i32 %52 to i64, !dbg !10287
  %and54 = and i64 %conv53, -19, !dbg !10287
  %conv55 = trunc i64 %and54 to i32, !dbg !10287
  store i32 %conv55, i32* %des052, align 4, !dbg !10287
  %53 = load %struct.idmac_desc_64addr*, %struct.idmac_desc_64addr** %desc_last, align 8, !dbg !10288
  %des056 = getelementptr inbounds %struct.idmac_desc_64addr, %struct.idmac_desc_64addr* %53, i32 0, i32 0, !dbg !10289
  %54 = load i32, i32* %des056, align 4, !dbg !10290
  %conv57 = zext i32 %54 to i64, !dbg !10290
  %or58 = or i64 %conv57, 4, !dbg !10290
  %conv59 = trunc i64 %or58 to i32, !dbg !10290
  store i32 %conv59, i32* %des056, align 4, !dbg !10290
  store i32 0, i32* %retval, align 4, !dbg !10291
  br label %return, !dbg !10291

err_own_bit:                                      ; preds = %if.then35
  call void @llvm.dbg.label(metadata !10292), !dbg !10293
  %55 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10294
  %sg_cpu60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %55, i32 0, i32 18, !dbg !10295
  %56 = load i8*, i8** %sg_cpu60, align 8, !dbg !10295
  call void @llvm.memset.p0i8.i64(i8* align 1 %56, i8 0, i64 4096, i1 false), !dbg !10296
  %57 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10297
  %call61 = call i32 @dw_mci_idmac_init(%struct.dw_mci* %57) #12, !dbg !10298
  store i32 -22, i32* %retval, align 4, !dbg !10299
  br label %return, !dbg !10299

return:                                           ; preds = %err_own_bit, %for.end47
  %58 = load i32, i32* %retval, align 4, !dbg !10300
  ret i32 %58, !dbg !10300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_prepare_desc32(%struct.dw_mci* %host, %struct.mmc_data* %data, i32 %sg_len) #0 !dbg !10301 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %sg_len.addr = alloca i32, align 4
  %desc_len = alloca i32, align 4
  %desc_first = alloca %struct.idmac_desc*, align 8
  %desc_last = alloca %struct.idmac_desc*, align 8
  %desc = alloca %struct.idmac_desc*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  %length = alloca i32, align 4
  %mem_addr = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  store i32 %sg_len, i32* %sg_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_len.addr, metadata !10306, metadata !DIExpression()), !dbg !10307
  call void @llvm.dbg.declare(metadata i32* %desc_len, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.declare(metadata %struct.idmac_desc** %desc_first, metadata !10310, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.declare(metadata %struct.idmac_desc** %desc_last, metadata !10312, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.declare(metadata %struct.idmac_desc** %desc, metadata !10314, metadata !DIExpression()), !dbg !10315
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10316, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10318, metadata !DIExpression()), !dbg !10319
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10320
  %sg_cpu = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 18, !dbg !10321
  %1 = load i8*, i8** %sg_cpu, align 8, !dbg !10321
  %2 = bitcast i8* %1 to %struct.idmac_desc*, !dbg !10320
  store %struct.idmac_desc* %2, %struct.idmac_desc** %desc, align 8, !dbg !10322
  store %struct.idmac_desc* %2, %struct.idmac_desc** %desc_last, align 8, !dbg !10323
  store %struct.idmac_desc* %2, %struct.idmac_desc** %desc_first, align 8, !dbg !10324
  store i32 0, i32* %i, align 4, !dbg !10325
  br label %for.cond, !dbg !10327

for.cond:                                         ; preds = %for.inc42, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10328
  %4 = load i32, i32* %sg_len.addr, align 4, !dbg !10330
  %cmp = icmp ult i32 %3, %4, !dbg !10331
  br i1 %cmp, label %for.body, label %for.end43, !dbg !10332

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %length, metadata !10333, metadata !DIExpression()), !dbg !10335
  %5 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !10336
  %sg = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %5, i32 0, i32 12, !dbg !10336
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10336
  %7 = load i32, i32* %i, align 4, !dbg !10336
  %idxprom = sext i32 %7 to i64, !dbg !10336
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %6, i64 %idxprom, !dbg !10336
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %arrayidx, i32 0, i32 4, !dbg !10336
  %8 = load i32, i32* %dma_length, align 8, !dbg !10336
  store i32 %8, i32* %length, align 4, !dbg !10335
  call void @llvm.dbg.declare(metadata i32* %mem_addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  %9 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !10339
  %sg1 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %9, i32 0, i32 12, !dbg !10339
  %10 = load %struct.scatterlist*, %struct.scatterlist** %sg1, align 8, !dbg !10339
  %11 = load i32, i32* %i, align 4, !dbg !10339
  %idxprom2 = sext i32 %11 to i64, !dbg !10339
  %arrayidx3 = getelementptr %struct.scatterlist, %struct.scatterlist* %10, i64 %idxprom2, !dbg !10339
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %arrayidx3, i32 0, i32 3, !dbg !10339
  %12 = load i64, i64* %dma_address, align 8, !dbg !10339
  %conv = trunc i64 %12 to i32, !dbg !10339
  store i32 %conv, i32* %mem_addr, align 4, !dbg !10338
  br label %for.cond4, !dbg !10340

for.cond4:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %length, align 4, !dbg !10341
  %tobool = icmp ne i32 %13, 0, !dbg !10344
  br i1 %tobool, label %for.body5, label %for.end41, !dbg !10344

for.body5:                                        ; preds = %for.cond4
  %14 = load i32, i32* %length, align 4, !dbg !10345
  %cmp6 = icmp ule i32 %14, 4096, !dbg !10347
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !10348

cond.true:                                        ; preds = %for.body5
  %15 = load i32, i32* %length, align 4, !dbg !10349
  br label %cond.end, !dbg !10348

cond.false:                                       ; preds = %for.body5
  br label %cond.end, !dbg !10348

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ 4096, %cond.false ], !dbg !10348
  store i32 %cond, i32* %desc_len, align 4, !dbg !10350
  %16 = load i32, i32* %desc_len, align 4, !dbg !10351
  %17 = load i32, i32* %length, align 4, !dbg !10352
  %sub = sub i32 %17, %16, !dbg !10352
  store i32 %sub, i32* %length, align 4, !dbg !10352
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !10353, metadata !DIExpression()), !dbg !10356
  store i64 100000, i64* %__timeout_us, align 8, !dbg !10356
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !10357, metadata !DIExpression()), !dbg !10356
  store i64 10, i64* %__delay_us, align 8, !dbg !10356
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !10358, metadata !DIExpression()), !dbg !10356
  %call = call i64 @ktime_get() #12, !dbg !10356
  %18 = load i64, i64* %__timeout_us, align 8, !dbg !10356
  %call8 = call i64 @ktime_add_us(i64 %call, i64 %18) #12, !dbg !10356
  store i64 %call8, i64* %__timeout, align 8, !dbg !10356
  br label %for.cond9, !dbg !10356

for.cond9:                                        ; preds = %if.end30, %cond.end
  %19 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10359
  %des0 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %19, i32 0, i32 0, !dbg !10359
  %20 = bitcast i32* %des0 to i8*, !dbg !10359
  %call10 = call i32 @readl(i8* %20) #12, !dbg !10359
  store i32 %call10, i32* %val, align 4, !dbg !10359
  %21 = load i32, i32* %val, align 4, !dbg !10363
  %and = and i32 %21, -2147483648, !dbg !10363
  %tobool11 = icmp ne i32 %and, 0, !dbg !10363
  br i1 %tobool11, label %if.end, label %if.then, !dbg !10359

if.then:                                          ; preds = %for.cond9
  br label %for.end, !dbg !10363

if.end:                                           ; preds = %for.cond9
  %22 = load i64, i64* %__timeout_us, align 8, !dbg !10365
  %tobool12 = icmp ne i64 %22, 0, !dbg !10365
  br i1 %tobool12, label %land.lhs.true, label %if.end20, !dbg !10365

land.lhs.true:                                    ; preds = %if.end
  %call13 = call i64 @ktime_get() #12, !dbg !10365
  %23 = load i64, i64* %__timeout, align 8, !dbg !10365
  %call14 = call i32 @ktime_compare(i64 %call13, i64 %23) #12, !dbg !10365
  %cmp15 = icmp sgt i32 %call14, 0, !dbg !10365
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !10359

if.then17:                                        ; preds = %land.lhs.true
  %24 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10367
  %des018 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %24, i32 0, i32 0, !dbg !10367
  %25 = bitcast i32* %des018 to i8*, !dbg !10367
  %call19 = call i32 @readl(i8* %25) #12, !dbg !10367
  store i32 %call19, i32* %val, align 4, !dbg !10367
  br label %for.end, !dbg !10367

if.end20:                                         ; preds = %land.lhs.true, %if.end
  %26 = load i64, i64* %__delay_us, align 8, !dbg !10369
  %tobool21 = icmp ne i64 %26, 0, !dbg !10369
  br i1 %tobool21, label %if.then22, label %if.end30, !dbg !10359

if.then22:                                        ; preds = %if.end20
  %27 = load i64, i64* %__delay_us, align 8, !dbg !10371
  %28 = call i1 @llvm.is.constant.i64(i64 %27), !dbg !10371
  br i1 %28, label %if.then23, label %if.else28, !dbg !10374

if.then23:                                        ; preds = %if.then22
  %29 = load i64, i64* %__delay_us, align 8, !dbg !10375
  %div = udiv i64 %29, 20000, !dbg !10375
  %cmp24 = icmp uge i64 %div, 1, !dbg !10375
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !10378

if.then26:                                        ; preds = %if.then23
  call void @__bad_udelay() #12, !dbg !10375
  br label %if.end27, !dbg !10375

if.else:                                          ; preds = %if.then23
  %30 = load i64, i64* %__delay_us, align 8, !dbg !10375
  %mul = mul i64 %30, 4295, !dbg !10375
  call void @__const_udelay(i64 %mul) #12, !dbg !10375
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then26
  br label %if.end29, !dbg !10378

if.else28:                                        ; preds = %if.then22
  %31 = load i64, i64* %__delay_us, align 8, !dbg !10379
  call void @__udelay(i64 %31) #12, !dbg !10379
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.end27
  br label %if.end30, !dbg !10369

if.end30:                                         ; preds = %if.end29, %if.end20
  br label %for.cond9, !dbg !10381, !llvm.loop !10382

for.end:                                          ; preds = %if.then17, %if.then
  %32 = load i32, i32* %val, align 4, !dbg !10356
  %and31 = and i32 %32, -2147483648, !dbg !10356
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10356
  %lnot = xor i1 %tobool32, true, !dbg !10356
  %33 = zext i1 %lnot to i64, !dbg !10356
  %cond33 = select i1 %lnot, i32 0, i32 -110, !dbg !10356
  store i32 %cond33, i32* %tmp, align 4, !dbg !10383
  %34 = load i32, i32* %tmp, align 4, !dbg !10356
  %tobool34 = icmp ne i32 %34, 0, !dbg !10384
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !10385

if.then35:                                        ; preds = %for.end
  br label %err_own_bit, !dbg !10386

if.end36:                                         ; preds = %for.end
  %35 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10387
  %des037 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %35, i32 0, i32 0, !dbg !10388
  store i32 -2147483630, i32* %des037, align 4, !dbg !10389
  %36 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10390
  %des1 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %36, i32 0, i32 1, !dbg !10390
  %37 = load i32, i32* %des1, align 4, !dbg !10390
  %and38 = and i32 %37, 67100672, !dbg !10390
  %38 = load i32, i32* %desc_len, align 4, !dbg !10390
  %and39 = and i32 %38, 8191, !dbg !10390
  %or = or i32 %and38, %and39, !dbg !10390
  %39 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10390
  %des140 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %39, i32 0, i32 1, !dbg !10390
  store i32 %or, i32* %des140, align 4, !dbg !10390
  %40 = load i32, i32* %mem_addr, align 4, !dbg !10391
  %41 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10392
  %des2 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %41, i32 0, i32 2, !dbg !10393
  store i32 %40, i32* %des2, align 4, !dbg !10394
  %42 = load i32, i32* %desc_len, align 4, !dbg !10395
  %43 = load i32, i32* %mem_addr, align 4, !dbg !10396
  %add = add i32 %43, %42, !dbg !10396
  store i32 %add, i32* %mem_addr, align 4, !dbg !10396
  %44 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10397
  store %struct.idmac_desc* %44, %struct.idmac_desc** %desc_last, align 8, !dbg !10398
  br label %for.inc, !dbg !10399

for.inc:                                          ; preds = %if.end36
  %45 = load %struct.idmac_desc*, %struct.idmac_desc** %desc, align 8, !dbg !10400
  %incdec.ptr = getelementptr %struct.idmac_desc, %struct.idmac_desc* %45, i32 1, !dbg !10400
  store %struct.idmac_desc* %incdec.ptr, %struct.idmac_desc** %desc, align 8, !dbg !10400
  br label %for.cond4, !dbg !10401, !llvm.loop !10402

for.end41:                                        ; preds = %for.cond4
  br label %for.inc42, !dbg !10404

for.inc42:                                        ; preds = %for.end41
  %46 = load i32, i32* %i, align 4, !dbg !10405
  %inc = add i32 %46, 1, !dbg !10405
  store i32 %inc, i32* %i, align 4, !dbg !10405
  br label %for.cond, !dbg !10406, !llvm.loop !10407

for.end43:                                        ; preds = %for.cond
  %47 = load %struct.idmac_desc*, %struct.idmac_desc** %desc_first, align 8, !dbg !10409
  %des044 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %47, i32 0, i32 0, !dbg !10410
  %48 = load i32, i32* %des044, align 4, !dbg !10411
  %or45 = or i32 %48, 8, !dbg !10411
  store i32 %or45, i32* %des044, align 4, !dbg !10411
  %49 = load %struct.idmac_desc*, %struct.idmac_desc** %desc_last, align 8, !dbg !10412
  %des046 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %49, i32 0, i32 0, !dbg !10413
  %50 = load i32, i32* %des046, align 4, !dbg !10414
  %and47 = and i32 %50, -19, !dbg !10414
  store i32 %and47, i32* %des046, align 4, !dbg !10414
  %51 = load %struct.idmac_desc*, %struct.idmac_desc** %desc_last, align 8, !dbg !10415
  %des048 = getelementptr inbounds %struct.idmac_desc, %struct.idmac_desc* %51, i32 0, i32 0, !dbg !10416
  %52 = load i32, i32* %des048, align 4, !dbg !10417
  %or49 = or i32 %52, 4, !dbg !10417
  store i32 %or49, i32* %des048, align 4, !dbg !10417
  store i32 0, i32* %retval, align 4, !dbg !10418
  br label %return, !dbg !10418

err_own_bit:                                      ; preds = %if.then35
  call void @llvm.dbg.label(metadata !10419), !dbg !10420
  %53 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10421
  %sg_cpu50 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %53, i32 0, i32 18, !dbg !10422
  %54 = load i8*, i8** %sg_cpu50, align 8, !dbg !10422
  call void @llvm.memset.p0i8.i64(i8* align 1 %54, i8 0, i64 4096, i1 false), !dbg !10423
  %55 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10424
  %call51 = call i32 @dw_mci_idmac_init(%struct.dw_mci* %55) #12, !dbg !10425
  store i32 -22, i32* %retval, align 4, !dbg !10426
  br label %return, !dbg !10426

return:                                           ; preds = %err_own_bit, %for.end43
  %56 = load i32, i32* %retval, align 4, !dbg !10427
  ret i32 %56, !dbg !10427
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local void @dma_sync_sg_for_cpu(%struct.device*, %struct.scatterlist*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @dma_unmap_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_get_dma_dir(%struct.mmc_data* %data) #0 !dbg !10428 {
entry:
  %data.addr = alloca %struct.mmc_data*, align 8
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !10431, metadata !DIExpression()), !dbg !10432
  %0 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !10433
  %flags = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %0, i32 0, i32 6, !dbg !10434
  %1 = load i32, i32* %flags, align 8, !dbg !10434
  %conv = zext i32 %1 to i64, !dbg !10433
  %and = and i64 %conv, 256, !dbg !10435
  %tobool = icmp ne i64 %and, 0, !dbg !10433
  %2 = zext i1 %tobool to i64, !dbg !10433
  %cond = select i1 %tobool, i32 1, i32 2, !dbg !10433
  ret i32 %cond, !dbg !10436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_edmac_init(%struct.dw_mci* %host) #0 !dbg !10437 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %ret = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  %call = call i8* @kzalloc(i64 16, i32 3264) #12, !dbg !10440
  %0 = bitcast i8* %call to %struct.dw_mci_dma_slave*, !dbg !10440
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10441
  %dms = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 21, !dbg !10442
  store %struct.dw_mci_dma_slave* %0, %struct.dw_mci_dma_slave** %dms, align 8, !dbg !10443
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10444
  %dms1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 21, !dbg !10446
  %3 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms1, align 8, !dbg !10446
  %tobool = icmp ne %struct.dw_mci_dma_slave* %3, null, !dbg !10444
  br i1 %tobool, label %if.end, label %if.then, !dbg !10447

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10448
  br label %return, !dbg !10448

if.end:                                           ; preds = %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10449
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 36, !dbg !10450
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10450
  %call2 = call %struct.dma_chan* @dma_request_chan(%struct.device* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !10451
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10452
  %dms3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 21, !dbg !10453
  %7 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms3, align 8, !dbg !10453
  %ch = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %7, i32 0, i32 0, !dbg !10454
  store %struct.dma_chan* %call2, %struct.dma_chan** %ch, align 8, !dbg !10455
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10456
  %dms4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 21, !dbg !10458
  %9 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms4, align 8, !dbg !10458
  %ch5 = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %9, i32 0, i32 0, !dbg !10459
  %10 = load %struct.dma_chan*, %struct.dma_chan** %ch5, align 8, !dbg !10459
  %11 = bitcast %struct.dma_chan* %10 to i8*, !dbg !10456
  %call6 = call zeroext i1 @IS_ERR(i8* %11) #12, !dbg !10460
  br i1 %call6, label %if.then7, label %if.end14, !dbg !10461

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10462, metadata !DIExpression()), !dbg !10464
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10465
  %dms8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 21, !dbg !10466
  %13 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms8, align 8, !dbg !10466
  %ch9 = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %13, i32 0, i32 0, !dbg !10467
  %14 = load %struct.dma_chan*, %struct.dma_chan** %ch9, align 8, !dbg !10467
  %15 = bitcast %struct.dma_chan* %14 to i8*, !dbg !10465
  %call10 = call i64 @PTR_ERR(i8* %15) #12, !dbg !10468
  %conv = trunc i64 %call10 to i32, !dbg !10468
  store i32 %conv, i32* %ret, align 4, !dbg !10464
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10469
  %dev11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 36, !dbg !10469
  %17 = load %struct.device*, %struct.device** %dev11, align 8, !dbg !10469
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41, i64 0, i64 0)) #13, !dbg !10469
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10470
  %dms12 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 21, !dbg !10471
  %19 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms12, align 8, !dbg !10471
  %20 = bitcast %struct.dw_mci_dma_slave* %19 to i8*, !dbg !10470
  call void @kfree(i8* %20) #12, !dbg !10472
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10473
  %dms13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 21, !dbg !10474
  store %struct.dw_mci_dma_slave* null, %struct.dw_mci_dma_slave** %dms13, align 8, !dbg !10475
  %22 = load i32, i32* %ret, align 4, !dbg !10476
  store i32 %22, i32* %retval, align 4, !dbg !10477
  br label %return, !dbg !10477

if.end14:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10478
  br label %return, !dbg !10478

return:                                           ; preds = %if.end14, %if.then7, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10479
  ret i32 %23, !dbg !10479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_edmac_start_dma(%struct.dw_mci* %host, i32 %sg_len) #0 !dbg !6349 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %sg_len.addr = alloca i32, align 4
  %cfg = alloca %struct.dma_slave_config, align 8
  %desc = alloca %struct.dma_async_tx_descriptor*, align 8
  %sgl = alloca %struct.scatterlist*, align 8
  %sg_elems = alloca i32, align 4
  %fifoth_val = alloca i32, align 4
  %fifo_offset = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10480, metadata !DIExpression()), !dbg !10481
  store i32 %sg_len, i32* %sg_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_len.addr, metadata !10482, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.declare(metadata %struct.dma_slave_config* %cfg, metadata !10484, metadata !DIExpression()), !dbg !10485
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %desc, metadata !10486, metadata !DIExpression()), !dbg !10487
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %desc, align 8, !dbg !10487
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl, metadata !10488, metadata !DIExpression()), !dbg !10489
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10490
  %data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 10, !dbg !10491
  %1 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !10491
  %sg = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %1, i32 0, i32 12, !dbg !10492
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !10492
  store %struct.scatterlist* %2, %struct.scatterlist** %sgl, align 8, !dbg !10489
  call void @llvm.dbg.declare(metadata i32* %sg_elems, metadata !10493, metadata !DIExpression()), !dbg !10494
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10495
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 10, !dbg !10496
  %4 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !10496
  %sg_len2 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %4, i32 0, i32 10, !dbg !10497
  %5 = load i32, i32* %sg_len2, align 8, !dbg !10497
  store i32 %5, i32* %sg_elems, align 4, !dbg !10494
  call void @llvm.dbg.declare(metadata i32* %fifoth_val, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata i32* %fifo_offset, metadata !10500, metadata !DIExpression()), !dbg !10501
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10502
  %fifo_reg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 3, !dbg !10503
  %7 = load i8*, i8** %fifo_reg, align 8, !dbg !10503
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10504
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !10505
  %9 = load i8*, i8** %regs, align 8, !dbg !10505
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64, !dbg !10506
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64, !dbg !10506
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10506
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !10502
  store i32 %conv, i32* %fifo_offset, align 4, !dbg !10501
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10507, metadata !DIExpression()), !dbg !10508
  store i32 0, i32* %ret, align 4, !dbg !10508
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10509
  %phy_regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 22, !dbg !10510
  %11 = load i64, i64* %phy_regs, align 8, !dbg !10510
  %12 = load i32, i32* %fifo_offset, align 4, !dbg !10511
  %conv3 = zext i32 %12 to i64, !dbg !10511
  %add = add i64 %11, %conv3, !dbg !10512
  %dst_addr = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 2, !dbg !10513
  store i64 %add, i64* %dst_addr, align 8, !dbg !10514
  %dst_addr4 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 2, !dbg !10515
  %13 = load i64, i64* %dst_addr4, align 8, !dbg !10515
  %src_addr = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 1, !dbg !10516
  store i64 %13, i64* %src_addr, align 8, !dbg !10517
  %dst_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 4, !dbg !10518
  store i32 4, i32* %dst_addr_width, align 4, !dbg !10519
  %src_addr_width = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 3, !dbg !10520
  store i32 4, i32* %src_addr_width, align 8, !dbg !10521
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10522
  %regs5 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 2, !dbg !10522
  %15 = load i8*, i8** %regs5, align 8, !dbg !10522
  %add.ptr = getelementptr i8, i8* %15, i64 76, !dbg !10522
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !10522
  store i32 %call, i32* %fifoth_val, align 4, !dbg !10523
  %16 = load i32, i32* %fifoth_val, align 4, !dbg !10524
  %shr = lshr i32 %16, 28, !dbg !10525
  %and = and i32 %shr, 7, !dbg !10526
  %idxprom = zext i32 %and to i64, !dbg !10527
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @dw_mci_edmac_start_dma.mszs, i64 0, i64 %idxprom, !dbg !10527
  %17 = load i32, i32* %arrayidx, align 4, !dbg !10527
  %dst_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 6, !dbg !10528
  store i32 %17, i32* %dst_maxburst, align 4, !dbg !10529
  %dst_maxburst6 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 6, !dbg !10530
  %18 = load i32, i32* %dst_maxburst6, align 4, !dbg !10530
  %src_maxburst = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 5, !dbg !10531
  store i32 %18, i32* %src_maxburst, align 8, !dbg !10532
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10533
  %data7 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 10, !dbg !10535
  %20 = load %struct.mmc_data*, %struct.mmc_data** %data7, align 8, !dbg !10535
  %flags = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %20, i32 0, i32 6, !dbg !10536
  %21 = load i32, i32* %flags, align 8, !dbg !10536
  %conv8 = zext i32 %21 to i64, !dbg !10533
  %and9 = and i64 %conv8, 256, !dbg !10537
  %tobool = icmp ne i64 %and9, 0, !dbg !10537
  br i1 %tobool, label %if.then, label %if.else, !dbg !10538

if.then:                                          ; preds = %entry
  %direction = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 0, !dbg !10539
  store i32 1, i32* %direction, align 8, !dbg !10540
  br label %if.end, !dbg !10541

if.else:                                          ; preds = %entry
  %direction10 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 0, !dbg !10542
  store i32 2, i32* %direction10, align 8, !dbg !10543
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10544
  %dms = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 21, !dbg !10545
  %23 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms, align 8, !dbg !10545
  %ch = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %23, i32 0, i32 0, !dbg !10546
  %24 = load %struct.dma_chan*, %struct.dma_chan** %ch, align 8, !dbg !10546
  %call11 = call i32 @dmaengine_slave_config(%struct.dma_chan* %24, %struct.dma_slave_config* %cfg) #12, !dbg !10547
  store i32 %call11, i32* %ret, align 4, !dbg !10548
  %25 = load i32, i32* %ret, align 4, !dbg !10549
  %tobool12 = icmp ne i32 %25, 0, !dbg !10549
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10551

if.then13:                                        ; preds = %if.end
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10552
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 36, !dbg !10552
  %27 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10552
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i64 0, i64 0)) #13, !dbg !10552
  store i32 -16, i32* %retval, align 4, !dbg !10554
  br label %return, !dbg !10554

if.end14:                                         ; preds = %if.end
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10555
  %dms15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 21, !dbg !10556
  %29 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms15, align 8, !dbg !10556
  %ch16 = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %29, i32 0, i32 0, !dbg !10557
  %30 = load %struct.dma_chan*, %struct.dma_chan** %ch16, align 8, !dbg !10557
  %31 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10558
  %32 = load i32, i32* %sg_len.addr, align 4, !dbg !10559
  %direction17 = getelementptr inbounds %struct.dma_slave_config, %struct.dma_slave_config* %cfg, i32 0, i32 0, !dbg !10560
  %33 = load i32, i32* %direction17, align 8, !dbg !10560
  %call18 = call %struct.dma_async_tx_descriptor* @dmaengine_prep_slave_sg(%struct.dma_chan* %30, %struct.scatterlist* %31, i32 %32, i32 %33, i64 3) #12, !dbg !10561
  store %struct.dma_async_tx_descriptor* %call18, %struct.dma_async_tx_descriptor** %desc, align 8, !dbg !10562
  %34 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc, align 8, !dbg !10563
  %tobool19 = icmp ne %struct.dma_async_tx_descriptor* %34, null, !dbg !10563
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !10565

if.then20:                                        ; preds = %if.end14
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10566
  %dev21 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 36, !dbg !10566
  %36 = load %struct.device*, %struct.device** %dev21, align 8, !dbg !10566
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %36, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i64 0, i64 0)) #13, !dbg !10566
  store i32 -16, i32* %retval, align 4, !dbg !10568
  br label %return, !dbg !10568

if.end22:                                         ; preds = %if.end14
  %37 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc, align 8, !dbg !10569
  %callback = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %37, i32 0, i32 6, !dbg !10570
  store void (i8*)* @dw_mci_dmac_complete_dma, void (i8*)** %callback, align 8, !dbg !10571
  %38 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10572
  %39 = bitcast %struct.dw_mci* %38 to i8*, !dbg !10573
  %40 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc, align 8, !dbg !10574
  %callback_param = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %40, i32 0, i32 8, !dbg !10575
  store i8* %39, i8** %callback_param, align 8, !dbg !10576
  %41 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc, align 8, !dbg !10577
  %call23 = call i32 @dmaengine_submit(%struct.dma_async_tx_descriptor* %41) #12, !dbg !10578
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10579
  %data24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 10, !dbg !10581
  %43 = load %struct.mmc_data*, %struct.mmc_data** %data24, align 8, !dbg !10581
  %flags25 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %43, i32 0, i32 6, !dbg !10582
  %44 = load i32, i32* %flags25, align 8, !dbg !10582
  %conv26 = zext i32 %44 to i64, !dbg !10579
  %and27 = and i64 %conv26, 256, !dbg !10583
  %tobool28 = icmp ne i64 %and27, 0, !dbg !10583
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !10584

if.then29:                                        ; preds = %if.end22
  %45 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10585
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %45, i32 0, i32 42, !dbg !10585
  %46 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !10585
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %46, i32 0, i32 0, !dbg !10585
  %47 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !10585
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %47, i32 0, i32 0, !dbg !10585
  %48 = load %struct.device*, %struct.device** %parent, align 64, !dbg !10585
  %49 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !10586
  %50 = load i32, i32* %sg_elems, align 4, !dbg !10587
  call void @dma_sync_sg_for_device(%struct.device* %48, %struct.scatterlist* %49, i32 %50, i32 1) #12, !dbg !10588
  br label %if.end30, !dbg !10588

if.end30:                                         ; preds = %if.then29, %if.end22
  %51 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10589
  %dms31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %51, i32 0, i32 21, !dbg !10590
  %52 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms31, align 8, !dbg !10590
  %ch32 = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %52, i32 0, i32 0, !dbg !10591
  %53 = load %struct.dma_chan*, %struct.dma_chan** %ch32, align 8, !dbg !10591
  call void @dma_async_issue_pending(%struct.dma_chan* %53) #12, !dbg !10592
  store i32 0, i32* %retval, align 4, !dbg !10593
  br label %return, !dbg !10593

return:                                           ; preds = %if.end30, %if.then20, %if.then13
  %54 = load i32, i32* %retval, align 4, !dbg !10594
  ret i32 %54, !dbg !10594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_edmac_stop_dma(%struct.dw_mci* %host) #0 !dbg !10595 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10596, metadata !DIExpression()), !dbg !10597
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10598
  %dms = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 21, !dbg !10599
  %1 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms, align 8, !dbg !10599
  %ch = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %1, i32 0, i32 0, !dbg !10600
  %2 = load %struct.dma_chan*, %struct.dma_chan** %ch, align 8, !dbg !10600
  %call = call i32 @dmaengine_terminate_async(%struct.dma_chan* %2) #12, !dbg !10601
  ret void, !dbg !10602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_edmac_exit(%struct.dw_mci* %host) #0 !dbg !10603 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10606
  %dms = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 21, !dbg !10608
  %1 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms, align 8, !dbg !10608
  %tobool = icmp ne %struct.dw_mci_dma_slave* %1, null, !dbg !10606
  br i1 %tobool, label %if.then, label %if.end10, !dbg !10609

if.then:                                          ; preds = %entry
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10610
  %dms1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 21, !dbg !10613
  %3 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms1, align 8, !dbg !10613
  %ch = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %3, i32 0, i32 0, !dbg !10614
  %4 = load %struct.dma_chan*, %struct.dma_chan** %ch, align 8, !dbg !10614
  %tobool2 = icmp ne %struct.dma_chan* %4, null, !dbg !10610
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10615

if.then3:                                         ; preds = %if.then
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10616
  %dms4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 21, !dbg !10618
  %6 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms4, align 8, !dbg !10618
  %ch5 = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %6, i32 0, i32 0, !dbg !10619
  %7 = load %struct.dma_chan*, %struct.dma_chan** %ch5, align 8, !dbg !10619
  call void @dma_release_channel(%struct.dma_chan* %7) #12, !dbg !10620
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10621
  %dms6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 21, !dbg !10622
  %9 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms6, align 8, !dbg !10622
  %ch7 = getelementptr inbounds %struct.dw_mci_dma_slave, %struct.dw_mci_dma_slave* %9, i32 0, i32 0, !dbg !10623
  store %struct.dma_chan* null, %struct.dma_chan** %ch7, align 8, !dbg !10624
  br label %if.end, !dbg !10625

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10626
  %dms8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 21, !dbg !10627
  %11 = load %struct.dw_mci_dma_slave*, %struct.dw_mci_dma_slave** %dms8, align 8, !dbg !10627
  %12 = bitcast %struct.dw_mci_dma_slave* %11 to i8*, !dbg !10626
  call void @kfree(i8* %12) #12, !dbg !10628
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !10629
  %dms9 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 21, !dbg !10630
  store %struct.dw_mci_dma_slave* null, %struct.dw_mci_dma_slave** %dms9, align 8, !dbg !10631
  br label %if.end10, !dbg !10632

if.end10:                                         ; preds = %if.end, %entry
  ret void, !dbg !10633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !10634 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10637, metadata !DIExpression()), !dbg !10641
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10647, metadata !DIExpression()), !dbg !10648
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10649, metadata !DIExpression()), !dbg !10650
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10651, metadata !DIExpression()), !dbg !10652
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10653, metadata !DIExpression()), !dbg !10657
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10659, metadata !DIExpression()), !dbg !10663
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10665, metadata !DIExpression()), !dbg !10669
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10674, metadata !DIExpression()), !dbg !10675
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10676, metadata !DIExpression()), !dbg !10677
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10678, metadata !DIExpression()), !dbg !10679
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10680, metadata !DIExpression()), !dbg !10681
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10682, metadata !DIExpression()), !dbg !10683
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10684, metadata !DIExpression()), !dbg !10685
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10686, metadata !DIExpression()), !dbg !10687
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10688, metadata !DIExpression()), !dbg !10689
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  %0 = load i64, i64* %size.addr, align 8, !dbg !10694
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10695
  %or = or i32 %1, 256, !dbg !10696
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10697
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !10698
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !10699

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10700
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !10701
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10702

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10703
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !10704
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10705
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !10706
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10683
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !10707
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10708
  %10 = load i32, i32* %order.i.i, align 4, !dbg !10709
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10710
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10711
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10712
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !10713
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10713
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10713
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10713
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !10713
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10714
  br label %kmalloc.exit, !dbg !10714

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10715
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10716
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10716
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10718

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10719
  br label %kmalloc_index.exit.i, !dbg !10719

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10720
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10722
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10723

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10724
  br label %kmalloc_index.exit.i, !dbg !10724

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10725
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10727
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10728

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10729
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10730
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10731

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10732
  br label %kmalloc_index.exit.i, !dbg !10732

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10733
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10735
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10736

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10737
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10738
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10739

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10740
  br label %kmalloc_index.exit.i, !dbg !10740

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10741
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !10743
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10744

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10745
  br label %kmalloc_index.exit.i, !dbg !10745

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10746
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !10748
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10749

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10750
  br label %kmalloc_index.exit.i, !dbg !10750

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10751
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !10753
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10754

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10755
  br label %kmalloc_index.exit.i, !dbg !10755

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10756
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !10758
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10759

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10760
  br label %kmalloc_index.exit.i, !dbg !10760

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10761
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !10763
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10764

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10765
  br label %kmalloc_index.exit.i, !dbg !10765

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10766
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !10768
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10769

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10770
  br label %kmalloc_index.exit.i, !dbg !10770

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10771
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !10773
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10774

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10775
  br label %kmalloc_index.exit.i, !dbg !10775

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10776
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !10778
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10779

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10780
  br label %kmalloc_index.exit.i, !dbg !10780

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10781
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !10783
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10784

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10785
  br label %kmalloc_index.exit.i, !dbg !10785

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10786
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !10788
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10789

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10790
  br label %kmalloc_index.exit.i, !dbg !10790

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10791
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !10793
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10794

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10795
  br label %kmalloc_index.exit.i, !dbg !10795

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10796
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !10798
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10799

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10800
  br label %kmalloc_index.exit.i, !dbg !10800

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10801
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !10803
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10804

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10805
  br label %kmalloc_index.exit.i, !dbg !10805

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10806
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !10808
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10809

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10810
  br label %kmalloc_index.exit.i, !dbg !10810

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10811
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !10813
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10814

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10815
  br label %kmalloc_index.exit.i, !dbg !10815

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10816
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !10818
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10819

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10820
  br label %kmalloc_index.exit.i, !dbg !10820

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10821
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !10823
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10824

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10825
  br label %kmalloc_index.exit.i, !dbg !10825

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10826
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !10828
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10829

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10830
  br label %kmalloc_index.exit.i, !dbg !10830

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10831
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !10833
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10834

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10835
  br label %kmalloc_index.exit.i, !dbg !10835

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10836
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !10838
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10839

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10840
  br label %kmalloc_index.exit.i, !dbg !10840

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10841
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !10843
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10844

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10845
  br label %kmalloc_index.exit.i, !dbg !10845

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10846
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10848
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10849

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10850
  br label %kmalloc_index.exit.i, !dbg !10850

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10851
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10853
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10854

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10855
  br label %kmalloc_index.exit.i, !dbg !10855

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10856
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10858
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10859

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10860
  br label %kmalloc_index.exit.i, !dbg !10860

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !10861, !srcloc !10864
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 142) #8, !dbg !10865, !srcloc !10868
  unreachable, !dbg !10869

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !10870
  store i32 %45, i32* %index.i, align 4, !dbg !10871
  %46 = load i32, i32* %index.i, align 4, !dbg !10872
  %tobool.i = icmp ne i32 %46, 0, !dbg !10872
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10874

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10875
  br label %kmalloc.exit, !dbg !10875

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !10876
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10877
  %and.i.i = and i32 %48, 17, !dbg !10877
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10877
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10877
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10877
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10877
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10879

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10880
  br label %kmalloc_type.exit.i, !dbg !10880

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10881
  %and2.i.i = and i32 %49, 1, !dbg !10882
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10881
  %50 = zext i1 %tobool3.i.i to i64, !dbg !10881
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10881
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10883
  br label %kmalloc_type.exit.i, !dbg !10883

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !10884
  %idxprom.i = zext i32 %51 to i64, !dbg !10885
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10885
  %52 = load i32, i32* %index.i, align 4, !dbg !10886
  %idxprom6.i = zext i32 %52 to i64, !dbg !10885
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10885
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10885
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !10887
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !10888
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10889
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10890
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !10891
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10891
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10891
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10891
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !10891
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10652
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10892
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !10893
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10894
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10895
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !10896
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10897
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10898
  store i8* %62, i8** %retval.i, align 8, !dbg !10899
  br label %kmalloc.exit, !dbg !10899

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !10900
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10901
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !10902
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10902
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10902
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10902
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !10902
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10903
  br label %kmalloc.exit, !dbg !10903

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10904
  ret i8* %65, !dbg !10905
}

; Function Attrs: noredzone
declare dso_local %struct.dma_chan* @dma_request_chan(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !10906 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10910, metadata !DIExpression()), !dbg !10914
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10916, metadata !DIExpression()), !dbg !10917
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10918, metadata !DIExpression()), !dbg !10919
  %0 = load i64, i64* %size.addr, align 8, !dbg !10920
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10922
  br i1 %1, label %if.then, label %if.end447, !dbg !10923

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10924
  %tobool = icmp ne i64 %2, 0, !dbg !10924
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10927

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10928
  br label %return, !dbg !10928

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10929
  %cmp = icmp ult i64 %3, 4096, !dbg !10931
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10932

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10933
  br label %return, !dbg !10933

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub = sub i64 %4, 1, !dbg !10934
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10934
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10934

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub4 = sub i64 %6, 1, !dbg !10934
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10934
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10934

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub6 = sub i64 %8, 1, !dbg !10934
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10934
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10934

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10934

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub9 = sub i64 %9, 1, !dbg !10934
  %and = and i64 %sub9, -9223372036854775808, !dbg !10934
  %tobool10 = icmp ne i64 %and, 0, !dbg !10934
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10934

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10934

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub13 = sub i64 %10, 1, !dbg !10934
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10934
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10934
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10934

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10934

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub18 = sub i64 %11, 1, !dbg !10934
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10934
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10934
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10934

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10934

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub23 = sub i64 %12, 1, !dbg !10934
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10934
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10934
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10934

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10934

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub28 = sub i64 %13, 1, !dbg !10934
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10934
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10934
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10934

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10934

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub33 = sub i64 %14, 1, !dbg !10934
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10934
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10934
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10934

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10934

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub38 = sub i64 %15, 1, !dbg !10934
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10934
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10934
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10934

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10934

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub43 = sub i64 %16, 1, !dbg !10934
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10934
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10934
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10934

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10934

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub48 = sub i64 %17, 1, !dbg !10934
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10934
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10934
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10934

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10934

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub53 = sub i64 %18, 1, !dbg !10934
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10934
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10934
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10934

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10934

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub58 = sub i64 %19, 1, !dbg !10934
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10934
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10934
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10934

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10934

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub63 = sub i64 %20, 1, !dbg !10934
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10934
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10934
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10934

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10934

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub68 = sub i64 %21, 1, !dbg !10934
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10934
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10934
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10934

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10934

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub73 = sub i64 %22, 1, !dbg !10934
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10934
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10934
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10934

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10934

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub78 = sub i64 %23, 1, !dbg !10934
  %and79 = and i64 %sub78, 562949953421312, !dbg !10934
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10934
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10934

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10934

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub83 = sub i64 %24, 1, !dbg !10934
  %and84 = and i64 %sub83, 281474976710656, !dbg !10934
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10934
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10934

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10934

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub88 = sub i64 %25, 1, !dbg !10934
  %and89 = and i64 %sub88, 140737488355328, !dbg !10934
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10934
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10934

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10934

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub93 = sub i64 %26, 1, !dbg !10934
  %and94 = and i64 %sub93, 70368744177664, !dbg !10934
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10934
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10934

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10934

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub98 = sub i64 %27, 1, !dbg !10934
  %and99 = and i64 %sub98, 35184372088832, !dbg !10934
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10934
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10934

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10934

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub103 = sub i64 %28, 1, !dbg !10934
  %and104 = and i64 %sub103, 17592186044416, !dbg !10934
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10934
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10934

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10934

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub108 = sub i64 %29, 1, !dbg !10934
  %and109 = and i64 %sub108, 8796093022208, !dbg !10934
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10934
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10934

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10934

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub113 = sub i64 %30, 1, !dbg !10934
  %and114 = and i64 %sub113, 4398046511104, !dbg !10934
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10934
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10934

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10934

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub118 = sub i64 %31, 1, !dbg !10934
  %and119 = and i64 %sub118, 2199023255552, !dbg !10934
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10934
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10934

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10934

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub123 = sub i64 %32, 1, !dbg !10934
  %and124 = and i64 %sub123, 1099511627776, !dbg !10934
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10934
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10934

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10934

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub128 = sub i64 %33, 1, !dbg !10934
  %and129 = and i64 %sub128, 549755813888, !dbg !10934
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10934
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10934

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10934

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub133 = sub i64 %34, 1, !dbg !10934
  %and134 = and i64 %sub133, 274877906944, !dbg !10934
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10934
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10934

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10934

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub138 = sub i64 %35, 1, !dbg !10934
  %and139 = and i64 %sub138, 137438953472, !dbg !10934
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10934
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10934

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10934

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub143 = sub i64 %36, 1, !dbg !10934
  %and144 = and i64 %sub143, 68719476736, !dbg !10934
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10934
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10934

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10934

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub148 = sub i64 %37, 1, !dbg !10934
  %and149 = and i64 %sub148, 34359738368, !dbg !10934
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10934
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10934

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10934

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub153 = sub i64 %38, 1, !dbg !10934
  %and154 = and i64 %sub153, 17179869184, !dbg !10934
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10934
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10934

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10934

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub158 = sub i64 %39, 1, !dbg !10934
  %and159 = and i64 %sub158, 8589934592, !dbg !10934
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10934
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10934

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10934

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub163 = sub i64 %40, 1, !dbg !10934
  %and164 = and i64 %sub163, 4294967296, !dbg !10934
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10934
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10934

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10934

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub168 = sub i64 %41, 1, !dbg !10934
  %and169 = and i64 %sub168, 2147483648, !dbg !10934
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10934
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10934

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10934

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub173 = sub i64 %42, 1, !dbg !10934
  %and174 = and i64 %sub173, 1073741824, !dbg !10934
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10934
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10934

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10934

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub178 = sub i64 %43, 1, !dbg !10934
  %and179 = and i64 %sub178, 536870912, !dbg !10934
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10934
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10934

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10934

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub183 = sub i64 %44, 1, !dbg !10934
  %and184 = and i64 %sub183, 268435456, !dbg !10934
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10934
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10934

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10934

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub188 = sub i64 %45, 1, !dbg !10934
  %and189 = and i64 %sub188, 134217728, !dbg !10934
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10934
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10934

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10934

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub193 = sub i64 %46, 1, !dbg !10934
  %and194 = and i64 %sub193, 67108864, !dbg !10934
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10934
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10934

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10934

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub198 = sub i64 %47, 1, !dbg !10934
  %and199 = and i64 %sub198, 33554432, !dbg !10934
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10934
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10934

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10934

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub203 = sub i64 %48, 1, !dbg !10934
  %and204 = and i64 %sub203, 16777216, !dbg !10934
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10934
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10934

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10934

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub208 = sub i64 %49, 1, !dbg !10934
  %and209 = and i64 %sub208, 8388608, !dbg !10934
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10934
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10934

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10934

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub213 = sub i64 %50, 1, !dbg !10934
  %and214 = and i64 %sub213, 4194304, !dbg !10934
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10934
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10934

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10934

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub218 = sub i64 %51, 1, !dbg !10934
  %and219 = and i64 %sub218, 2097152, !dbg !10934
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10934
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10934

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10934

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub223 = sub i64 %52, 1, !dbg !10934
  %and224 = and i64 %sub223, 1048576, !dbg !10934
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10934
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10934

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10934

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub228 = sub i64 %53, 1, !dbg !10934
  %and229 = and i64 %sub228, 524288, !dbg !10934
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10934
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10934

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10934

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub233 = sub i64 %54, 1, !dbg !10934
  %and234 = and i64 %sub233, 262144, !dbg !10934
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10934
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10934

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10934

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub238 = sub i64 %55, 1, !dbg !10934
  %and239 = and i64 %sub238, 131072, !dbg !10934
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10934
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10934

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10934

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub243 = sub i64 %56, 1, !dbg !10934
  %and244 = and i64 %sub243, 65536, !dbg !10934
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10934
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10934

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10934

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub248 = sub i64 %57, 1, !dbg !10934
  %and249 = and i64 %sub248, 32768, !dbg !10934
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10934
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10934

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10934

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub253 = sub i64 %58, 1, !dbg !10934
  %and254 = and i64 %sub253, 16384, !dbg !10934
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10934
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10934

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10934

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub258 = sub i64 %59, 1, !dbg !10934
  %and259 = and i64 %sub258, 8192, !dbg !10934
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10934
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10934

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10934

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub263 = sub i64 %60, 1, !dbg !10934
  %and264 = and i64 %sub263, 4096, !dbg !10934
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10934
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10934

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10934

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub268 = sub i64 %61, 1, !dbg !10934
  %and269 = and i64 %sub268, 2048, !dbg !10934
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10934
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10934

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10934

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub273 = sub i64 %62, 1, !dbg !10934
  %and274 = and i64 %sub273, 1024, !dbg !10934
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10934
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10934

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10934

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub278 = sub i64 %63, 1, !dbg !10934
  %and279 = and i64 %sub278, 512, !dbg !10934
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10934
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10934

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10934

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub283 = sub i64 %64, 1, !dbg !10934
  %and284 = and i64 %sub283, 256, !dbg !10934
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10934
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10934

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10934

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub288 = sub i64 %65, 1, !dbg !10934
  %and289 = and i64 %sub288, 128, !dbg !10934
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10934
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10934

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10934

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub293 = sub i64 %66, 1, !dbg !10934
  %and294 = and i64 %sub293, 64, !dbg !10934
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10934
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10934

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10934

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub298 = sub i64 %67, 1, !dbg !10934
  %and299 = and i64 %sub298, 32, !dbg !10934
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10934
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10934

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10934

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub303 = sub i64 %68, 1, !dbg !10934
  %and304 = and i64 %sub303, 16, !dbg !10934
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10934
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10934

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10934

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub308 = sub i64 %69, 1, !dbg !10934
  %and309 = and i64 %sub308, 8, !dbg !10934
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10934
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10934

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10934

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub313 = sub i64 %70, 1, !dbg !10934
  %and314 = and i64 %sub313, 4, !dbg !10934
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10934
  %71 = zext i1 %tobool315 to i64, !dbg !10934
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10934
  br label %cond.end, !dbg !10934

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10934
  br label %cond.end317, !dbg !10934

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10934
  br label %cond.end319, !dbg !10934

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10934
  br label %cond.end321, !dbg !10934

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10934
  br label %cond.end323, !dbg !10934

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10934
  br label %cond.end325, !dbg !10934

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10934
  br label %cond.end327, !dbg !10934

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10934
  br label %cond.end329, !dbg !10934

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10934
  br label %cond.end331, !dbg !10934

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10934
  br label %cond.end333, !dbg !10934

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10934
  br label %cond.end335, !dbg !10934

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10934
  br label %cond.end337, !dbg !10934

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10934
  br label %cond.end339, !dbg !10934

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10934
  br label %cond.end341, !dbg !10934

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10934
  br label %cond.end343, !dbg !10934

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10934
  br label %cond.end345, !dbg !10934

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10934
  br label %cond.end347, !dbg !10934

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10934
  br label %cond.end349, !dbg !10934

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10934
  br label %cond.end351, !dbg !10934

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10934
  br label %cond.end353, !dbg !10934

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10934
  br label %cond.end355, !dbg !10934

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10934
  br label %cond.end357, !dbg !10934

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10934
  br label %cond.end359, !dbg !10934

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10934
  br label %cond.end361, !dbg !10934

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10934
  br label %cond.end363, !dbg !10934

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10934
  br label %cond.end365, !dbg !10934

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10934
  br label %cond.end367, !dbg !10934

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10934
  br label %cond.end369, !dbg !10934

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10934
  br label %cond.end371, !dbg !10934

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10934
  br label %cond.end373, !dbg !10934

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10934
  br label %cond.end375, !dbg !10934

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10934
  br label %cond.end377, !dbg !10934

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10934
  br label %cond.end379, !dbg !10934

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10934
  br label %cond.end381, !dbg !10934

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10934
  br label %cond.end383, !dbg !10934

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10934
  br label %cond.end385, !dbg !10934

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10934
  br label %cond.end387, !dbg !10934

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10934
  br label %cond.end389, !dbg !10934

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10934
  br label %cond.end391, !dbg !10934

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10934
  br label %cond.end393, !dbg !10934

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10934
  br label %cond.end395, !dbg !10934

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10934
  br label %cond.end397, !dbg !10934

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10934
  br label %cond.end399, !dbg !10934

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10934
  br label %cond.end401, !dbg !10934

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10934
  br label %cond.end403, !dbg !10934

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10934
  br label %cond.end405, !dbg !10934

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10934
  br label %cond.end407, !dbg !10934

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10934
  br label %cond.end409, !dbg !10934

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10934
  br label %cond.end411, !dbg !10934

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10934
  br label %cond.end413, !dbg !10934

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10934
  br label %cond.end415, !dbg !10934

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10934
  br label %cond.end417, !dbg !10934

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10934
  br label %cond.end419, !dbg !10934

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10934
  br label %cond.end421, !dbg !10934

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10934
  br label %cond.end423, !dbg !10934

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10934
  br label %cond.end425, !dbg !10934

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10934
  br label %cond.end427, !dbg !10934

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10934
  br label %cond.end429, !dbg !10934

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10934
  br label %cond.end431, !dbg !10934

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10934
  br label %cond.end433, !dbg !10934

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10934
  br label %cond.end435, !dbg !10934

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10934
  br label %cond.end437, !dbg !10934

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10934
  br label %cond.end440, !dbg !10934

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10934

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10934
  br label %cond.end444, !dbg !10934

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10934
  %sub443 = sub i64 %72, 1, !dbg !10934
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !10934
  br label %cond.end444, !dbg !10934

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10934
  %sub446 = sub i32 %cond445, 12, !dbg !10935
  %add = add i32 %sub446, 1, !dbg !10936
  store i32 %add, i32* %retval, align 4, !dbg !10937
  br label %return, !dbg !10937

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10938
  %dec = add i64 %73, -1, !dbg !10938
  store i64 %dec, i64* %size.addr, align 8, !dbg !10938
  %74 = load i64, i64* %size.addr, align 8, !dbg !10939
  %shr = lshr i64 %74, 12, !dbg !10939
  store i64 %shr, i64* %size.addr, align 8, !dbg !10939
  %75 = load i64, i64* %size.addr, align 8, !dbg !10940
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10917
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10941
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10942
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #7, !dbg !10941, !srcloc !10943
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10941
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10944
  %add.i = add i32 %79, 1, !dbg !10945
  store i32 %add.i, i32* %retval, align 4, !dbg !10946
  br label %return, !dbg !10946

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10947
  ret i32 %80, !dbg !10947
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !10948 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10910, metadata !DIExpression()), !dbg !10952
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10916, metadata !DIExpression()), !dbg !10954
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10955, metadata !DIExpression()), !dbg !10956
  %0 = load i64, i64* %n.addr, align 8, !dbg !10957
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10954
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10958
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10959
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !10958, !srcloc !10943
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10958
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10960
  %add.i = add i32 %4, 1, !dbg !10961
  %sub = sub i32 %add.i, 1, !dbg !10962
  ret i32 %sub, !dbg !10963
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10964 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10970, metadata !DIExpression()), !dbg !10971
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10976
  ret i8* %0, !dbg !10977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dmaengine_slave_config(%struct.dma_chan* %chan, %struct.dma_slave_config* %config) #0 !dbg !10978 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  %config.addr = alloca %struct.dma_slave_config*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10979, metadata !DIExpression()), !dbg !10980
  store %struct.dma_slave_config* %config, %struct.dma_slave_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_slave_config** %config.addr, metadata !10981, metadata !DIExpression()), !dbg !10982
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10983
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !10985
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !10985
  %device_config = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 42, !dbg !10986
  %2 = load i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)** %device_config, align 8, !dbg !10986
  %tobool = icmp ne i32 (%struct.dma_chan*, %struct.dma_slave_config*)* %2, null, !dbg !10983
  br i1 %tobool, label %if.then, label %if.end, !dbg !10987

if.then:                                          ; preds = %entry
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10988
  %device1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %3, i32 0, i32 0, !dbg !10989
  %4 = load %struct.dma_device*, %struct.dma_device** %device1, align 8, !dbg !10989
  %device_config2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 42, !dbg !10990
  %5 = load i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)** %device_config2, align 8, !dbg !10990
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !10991
  %7 = load %struct.dma_slave_config*, %struct.dma_slave_config** %config.addr, align 8, !dbg !10992
  %call = call i32 %5(%struct.dma_chan* %6, %struct.dma_slave_config* %7) #12, !dbg !10988
  store i32 %call, i32* %retval, align 4, !dbg !10993
  br label %return, !dbg !10993

if.end:                                           ; preds = %entry
  store i32 -38, i32* %retval, align 4, !dbg !10994
  br label %return, !dbg !10994

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10995
  ret i32 %8, !dbg !10995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_async_tx_descriptor* @dmaengine_prep_slave_sg(%struct.dma_chan* %chan, %struct.scatterlist* %sgl, i32 %sg_len, i32 %dir, i64 %flags) #0 !dbg !10996 {
entry:
  %retval = alloca %struct.dma_async_tx_descriptor*, align 8
  %chan.addr = alloca %struct.dma_chan*, align 8
  %sgl.addr = alloca %struct.scatterlist*, align 8
  %sg_len.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %flags.addr = alloca i64, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !10999, metadata !DIExpression()), !dbg !11000
  store %struct.scatterlist* %sgl, %struct.scatterlist** %sgl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sgl.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  store i32 %sg_len, i32* %sg_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sg_len.addr, metadata !11003, metadata !DIExpression()), !dbg !11004
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !11007, metadata !DIExpression()), !dbg !11008
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11009
  %tobool = icmp ne %struct.dma_chan* %0, null, !dbg !11009
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11011

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11012
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %1, i32 0, i32 0, !dbg !11013
  %2 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !11013
  %tobool1 = icmp ne %struct.dma_device* %2, null, !dbg !11012
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !11014

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11015
  %device3 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %3, i32 0, i32 0, !dbg !11016
  %4 = load %struct.dma_device*, %struct.dma_device** %device3, align 8, !dbg !11016
  %device_prep_slave_sg = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 37, !dbg !11017
  %5 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)** %device_prep_slave_sg, align 8, !dbg !11017
  %tobool4 = icmp ne %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)* %5, null, !dbg !11015
  br i1 %tobool4, label %if.end, label %if.then, !dbg !11018

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store %struct.dma_async_tx_descriptor* null, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !11019
  br label %return, !dbg !11019

if.end:                                           ; preds = %lor.lhs.false2
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11020
  %device5 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %6, i32 0, i32 0, !dbg !11021
  %7 = load %struct.dma_device*, %struct.dma_device** %device5, align 8, !dbg !11021
  %device_prep_slave_sg6 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %7, i32 0, i32 37, !dbg !11022
  %8 = load %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)** %device_prep_slave_sg6, align 8, !dbg !11022
  %9 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11023
  %10 = load %struct.scatterlist*, %struct.scatterlist** %sgl.addr, align 8, !dbg !11024
  %11 = load i32, i32* %sg_len.addr, align 4, !dbg !11025
  %12 = load i32, i32* %dir.addr, align 4, !dbg !11026
  %13 = load i64, i64* %flags.addr, align 8, !dbg !11027
  %call = call %struct.dma_async_tx_descriptor* %8(%struct.dma_chan* %9, %struct.scatterlist* %10, i32 %11, i32 %12, i64 %13, i8* null) #12, !dbg !11020
  store %struct.dma_async_tx_descriptor* %call, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !11028
  br label %return, !dbg !11028

return:                                           ; preds = %if.end, %if.then
  %14 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %retval, align 8, !dbg !11029
  ret %struct.dma_async_tx_descriptor* %14, !dbg !11029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dmaengine_submit(%struct.dma_async_tx_descriptor* %desc) #0 !dbg !11030 {
entry:
  %desc.addr = alloca %struct.dma_async_tx_descriptor*, align 8
  store %struct.dma_async_tx_descriptor* %desc, %struct.dma_async_tx_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_async_tx_descriptor** %desc.addr, metadata !11031, metadata !DIExpression()), !dbg !11032
  %0 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !11033
  %tx_submit = getelementptr inbounds %struct.dma_async_tx_descriptor, %struct.dma_async_tx_descriptor* %0, i32 0, i32 4, !dbg !11034
  %1 = load i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)** %tx_submit, align 8, !dbg !11034
  %2 = load %struct.dma_async_tx_descriptor*, %struct.dma_async_tx_descriptor** %desc.addr, align 8, !dbg !11035
  %call = call i32 %1(%struct.dma_async_tx_descriptor* %2) #12, !dbg !11033
  ret i32 %call, !dbg !11036
}

; Function Attrs: noredzone
declare dso_local void @dma_sync_sg_for_device(%struct.device*, %struct.scatterlist*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_async_issue_pending(%struct.dma_chan* %chan) #0 !dbg !11037 {
entry:
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !11038, metadata !DIExpression()), !dbg !11039
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11040
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !11041
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !11041
  %device_issue_pending = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 48, !dbg !11042
  %2 = load void (%struct.dma_chan*)*, void (%struct.dma_chan*)** %device_issue_pending, align 8, !dbg !11042
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11043
  call void %2(%struct.dma_chan* %3) #12, !dbg !11040
  ret void, !dbg !11044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dmaengine_terminate_async(%struct.dma_chan* %chan) #0 !dbg !11045 {
entry:
  %retval = alloca i32, align 4
  %chan.addr = alloca %struct.dma_chan*, align 8
  store %struct.dma_chan* %chan, %struct.dma_chan** %chan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_chan** %chan.addr, metadata !11046, metadata !DIExpression()), !dbg !11047
  %0 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11048
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %0, i32 0, i32 0, !dbg !11050
  %1 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !11050
  %device_terminate_all = getelementptr inbounds %struct.dma_device, %struct.dma_device* %1, i32 0, i32 45, !dbg !11051
  %2 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_terminate_all, align 8, !dbg !11051
  %tobool = icmp ne i32 (%struct.dma_chan*)* %2, null, !dbg !11048
  br i1 %tobool, label %if.then, label %if.end, !dbg !11052

if.then:                                          ; preds = %entry
  %3 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11053
  %device1 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %3, i32 0, i32 0, !dbg !11054
  %4 = load %struct.dma_device*, %struct.dma_device** %device1, align 8, !dbg !11054
  %device_terminate_all2 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %4, i32 0, i32 45, !dbg !11055
  %5 = load i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)** %device_terminate_all2, align 8, !dbg !11055
  %6 = load %struct.dma_chan*, %struct.dma_chan** %chan.addr, align 8, !dbg !11056
  %call = call i32 %5(%struct.dma_chan* %6) #12, !dbg !11053
  store i32 %call, i32* %retval, align 4, !dbg !11057
  br label %return, !dbg !11057

if.end:                                           ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11058
  br label %return, !dbg !11058

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !11059
  ret i32 %7, !dbg !11059
}

; Function Attrs: noredzone
declare dso_local void @dma_release_channel(%struct.dma_chan*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dw_mci_clear_pending_cmd_complete(%struct.dw_mci* %host) #0 !dbg !11060 {
entry:
  %retval = alloca i1, align 1
  %host.addr = alloca %struct.dw_mci*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11063, metadata !DIExpression()), !dbg !11064
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11065
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 28, !dbg !11067
  %call = call zeroext i1 @test_bit(i64 0, i64* %pending_events) #12, !dbg !11068
  br i1 %call, label %if.end, label %if.then, !dbg !11069

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11070
  br label %return, !dbg !11070

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11071, metadata !DIExpression()), !dbg !11073
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11073
  %cto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 55, !dbg !11073
  %call1 = call i32 @del_timer(%struct.timer_list* %cto_timer) #12, !dbg !11073
  %tobool = icmp ne i32 %call1, 0, !dbg !11073
  %lnot = xor i1 %tobool, true, !dbg !11073
  %lnot2 = xor i1 %lnot, true, !dbg !11073
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11073
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11073
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !11074
  %tobool3 = icmp ne i32 %2, 0, !dbg !11074
  %lnot4 = xor i1 %tobool3, true, !dbg !11074
  %lnot6 = xor i1 %lnot4, true, !dbg !11074
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11074
  %conv = sext i32 %lnot.ext7 to i64, !dbg !11074
  %tobool8 = icmp ne i64 %conv, 0, !dbg !11074
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !11073

if.then9:                                         ; preds = %if.end
  br label %do.body, !dbg !11074

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !11076

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !11078

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !11076

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 1937, i32 2305, i64 12) #8, !dbg !11080, !srcloc !11082
  br label %do.end12, !dbg !11080

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 305) #8, !dbg !11083, !srcloc !11085
  br label %do.body13, !dbg !11076

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !11086

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !11076

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !11076

if.end16:                                         ; preds = %do.end15, %if.end
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11073
  %tobool17 = icmp ne i32 %3, 0, !dbg !11073
  %lnot18 = xor i1 %tobool17, true, !dbg !11073
  %lnot20 = xor i1 %lnot18, true, !dbg !11073
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !11073
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !11073
  store i64 %conv22, i64* %tmp, align 8, !dbg !11074
  %4 = load i64, i64* %tmp, align 8, !dbg !11073
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11088
  %pending_events23 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 28, !dbg !11089
  call void @clear_bit(i64 0, i64* %pending_events23) #12, !dbg !11090
  store i1 true, i1* %retval, align 1, !dbg !11091
  br label %return, !dbg !11091

return:                                           ; preds = %if.end16, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !11092
  ret i1 %6, !dbg !11092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_command_complete(%struct.dw_mci* %host, %struct.mmc_command* %cmd) #0 !dbg !11093 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %cmd.addr = alloca %struct.mmc_command*, align 8
  %status = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11096, metadata !DIExpression()), !dbg !11097
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd.addr, metadata !11098, metadata !DIExpression()), !dbg !11099
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11100, metadata !DIExpression()), !dbg !11101
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11102
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 23, !dbg !11103
  %1 = load i32, i32* %cmd_status, align 8, !dbg !11103
  store i32 %1, i32* %status, align 4, !dbg !11101
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11104
  %cmd_status1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 23, !dbg !11105
  store i32 0, i32* %cmd_status1, align 8, !dbg !11106
  %3 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11107
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %3, i32 0, i32 3, !dbg !11109
  %4 = load i32, i32* %flags, align 8, !dbg !11109
  %and = and i32 %4, 1, !dbg !11110
  %tobool = icmp ne i32 %and, 0, !dbg !11110
  br i1 %tobool, label %if.then, label %if.end32, !dbg !11111

if.then:                                          ; preds = %entry
  %5 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11112
  %flags2 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %5, i32 0, i32 3, !dbg !11115
  %6 = load i32, i32* %flags2, align 8, !dbg !11115
  %and3 = and i32 %6, 2, !dbg !11116
  %tobool4 = icmp ne i32 %and3, 0, !dbg !11116
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !11117

if.then5:                                         ; preds = %if.then
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11118
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 2, !dbg !11118
  %8 = load i8*, i8** %regs, align 8, !dbg !11118
  %add.ptr = getelementptr i8, i8* %8, i64 48, !dbg !11118
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !11118
  %9 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11120
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %9, i32 0, i32 2, !dbg !11121
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 3, !dbg !11120
  store i32 %call, i32* %arrayidx, align 4, !dbg !11122
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11123
  %regs6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 2, !dbg !11123
  %11 = load i8*, i8** %regs6, align 8, !dbg !11123
  %add.ptr7 = getelementptr i8, i8* %11, i64 52, !dbg !11123
  %call8 = call i32 @__readl(i8* %add.ptr7) #12, !dbg !11123
  %12 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11124
  %resp9 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %12, i32 0, i32 2, !dbg !11125
  %arrayidx10 = getelementptr [4 x i32], [4 x i32]* %resp9, i64 0, i64 2, !dbg !11124
  store i32 %call8, i32* %arrayidx10, align 8, !dbg !11126
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11127
  %regs11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 2, !dbg !11127
  %14 = load i8*, i8** %regs11, align 8, !dbg !11127
  %add.ptr12 = getelementptr i8, i8* %14, i64 56, !dbg !11127
  %call13 = call i32 @__readl(i8* %add.ptr12) #12, !dbg !11127
  %15 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11128
  %resp14 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %15, i32 0, i32 2, !dbg !11129
  %arrayidx15 = getelementptr [4 x i32], [4 x i32]* %resp14, i64 0, i64 1, !dbg !11128
  store i32 %call13, i32* %arrayidx15, align 4, !dbg !11130
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11131
  %regs16 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 2, !dbg !11131
  %17 = load i8*, i8** %regs16, align 8, !dbg !11131
  %add.ptr17 = getelementptr i8, i8* %17, i64 60, !dbg !11131
  %call18 = call i32 @__readl(i8* %add.ptr17) #12, !dbg !11131
  %18 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11132
  %resp19 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %18, i32 0, i32 2, !dbg !11133
  %arrayidx20 = getelementptr [4 x i32], [4 x i32]* %resp19, i64 0, i64 0, !dbg !11132
  store i32 %call18, i32* %arrayidx20, align 8, !dbg !11134
  br label %if.end, !dbg !11135

if.else:                                          ; preds = %if.then
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11136
  %regs21 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 2, !dbg !11136
  %20 = load i8*, i8** %regs21, align 8, !dbg !11136
  %add.ptr22 = getelementptr i8, i8* %20, i64 48, !dbg !11136
  %call23 = call i32 @__readl(i8* %add.ptr22) #12, !dbg !11136
  %21 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11138
  %resp24 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %21, i32 0, i32 2, !dbg !11139
  %arrayidx25 = getelementptr [4 x i32], [4 x i32]* %resp24, i64 0, i64 0, !dbg !11138
  store i32 %call23, i32* %arrayidx25, align 8, !dbg !11140
  %22 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11141
  %resp26 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %22, i32 0, i32 2, !dbg !11142
  %arrayidx27 = getelementptr [4 x i32], [4 x i32]* %resp26, i64 0, i64 1, !dbg !11141
  store i32 0, i32* %arrayidx27, align 4, !dbg !11143
  %23 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11144
  %resp28 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %23, i32 0, i32 2, !dbg !11145
  %arrayidx29 = getelementptr [4 x i32], [4 x i32]* %resp28, i64 0, i64 2, !dbg !11144
  store i32 0, i32* %arrayidx29, align 8, !dbg !11146
  %24 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11147
  %resp30 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %24, i32 0, i32 2, !dbg !11148
  %arrayidx31 = getelementptr [4 x i32], [4 x i32]* %resp30, i64 0, i64 3, !dbg !11147
  store i32 0, i32* %arrayidx31, align 4, !dbg !11149
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end32, !dbg !11150

if.end32:                                         ; preds = %if.end, %entry
  %25 = load i32, i32* %status, align 4, !dbg !11151
  %conv = zext i32 %25 to i64, !dbg !11151
  %and33 = and i64 %conv, 256, !dbg !11153
  %tobool34 = icmp ne i64 %and33, 0, !dbg !11153
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !11154

if.then35:                                        ; preds = %if.end32
  %26 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11155
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %26, i32 0, i32 5, !dbg !11156
  store i32 -110, i32* %error, align 8, !dbg !11157
  br label %if.end55, !dbg !11155

if.else36:                                        ; preds = %if.end32
  %27 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11158
  %flags37 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %27, i32 0, i32 3, !dbg !11160
  %28 = load i32, i32* %flags37, align 8, !dbg !11160
  %and38 = and i32 %28, 4, !dbg !11161
  %tobool39 = icmp ne i32 %and38, 0, !dbg !11161
  br i1 %tobool39, label %land.lhs.true, label %if.else45, !dbg !11162

land.lhs.true:                                    ; preds = %if.else36
  %29 = load i32, i32* %status, align 4, !dbg !11163
  %conv40 = zext i32 %29 to i64, !dbg !11163
  %and41 = and i64 %conv40, 64, !dbg !11164
  %tobool42 = icmp ne i64 %and41, 0, !dbg !11164
  br i1 %tobool42, label %if.then43, label %if.else45, !dbg !11165

if.then43:                                        ; preds = %land.lhs.true
  %30 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11166
  %error44 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %30, i32 0, i32 5, !dbg !11167
  store i32 -84, i32* %error44, align 8, !dbg !11168
  br label %if.end54, !dbg !11166

if.else45:                                        ; preds = %land.lhs.true, %if.else36
  %31 = load i32, i32* %status, align 4, !dbg !11169
  %conv46 = zext i32 %31 to i64, !dbg !11169
  %and47 = and i64 %conv46, 2, !dbg !11171
  %tobool48 = icmp ne i64 %and47, 0, !dbg !11171
  br i1 %tobool48, label %if.then49, label %if.else51, !dbg !11172

if.then49:                                        ; preds = %if.else45
  %32 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11173
  %error50 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %32, i32 0, i32 5, !dbg !11174
  store i32 -5, i32* %error50, align 8, !dbg !11175
  br label %if.end53, !dbg !11173

if.else51:                                        ; preds = %if.else45
  %33 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11176
  %error52 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %33, i32 0, i32 5, !dbg !11177
  store i32 0, i32* %error52, align 8, !dbg !11178
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then49
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then43
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then35
  %34 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11179
  %error56 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %34, i32 0, i32 5, !dbg !11180
  %35 = load i32, i32* %error56, align 8, !dbg !11180
  ret i32 %35, !dbg !11181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__dw_mci_start_request(%struct.dw_mci* %host, %struct.dw_mci_slot* %slot, %struct.mmc_command* %cmd) #0 !dbg !11182 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !6938, metadata !DIExpression()), !dbg !11185
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !11189
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !11190, metadata !DIExpression()), !dbg !11195
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !11198
  %host.addr = alloca %struct.dw_mci*, align 8
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %cmd.addr = alloca %struct.mmc_command*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  %data = alloca %struct.mmc_data*, align 8
  %cmdflags = alloca i32, align 4
  %irqflags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy24 = alloca i64, align 8
  %__dummy225 = alloca i64, align 8
  %tmp28 = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !11207, metadata !DIExpression()), !dbg !11208
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd.addr, metadata !11209, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !11211, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !11213, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %cmdflags, metadata !11215, metadata !DIExpression()), !dbg !11216
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !11217
  %mrq1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 3, !dbg !11218
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq1, align 8, !dbg !11218
  store %struct.mmc_request* %1, %struct.mmc_request** %mrq, align 8, !dbg !11219
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !11220
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11221
  %mrq2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 8, !dbg !11222
  store %struct.mmc_request* %2, %struct.mmc_request** %mrq2, align 8, !dbg !11223
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11224
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 28, !dbg !11225
  store i64 0, i64* %pending_events, align 8, !dbg !11226
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11227
  %completed_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 29, !dbg !11228
  store i64 0, i64* %completed_events, align 8, !dbg !11229
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11230
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 23, !dbg !11231
  store i32 0, i32* %cmd_status, align 8, !dbg !11232
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11233
  %data_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 24, !dbg !11234
  store i32 0, i32* %data_status, align 4, !dbg !11235
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11236
  %dir_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 26, !dbg !11237
  store i32 0, i32* %dir_status, align 4, !dbg !11238
  %9 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11239
  %data3 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %9, i32 0, i32 7, !dbg !11240
  %10 = load %struct.mmc_data*, %struct.mmc_data** %data3, align 8, !dbg !11240
  store %struct.mmc_data* %10, %struct.mmc_data** %data, align 8, !dbg !11241
  %11 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11242
  %tobool = icmp ne %struct.mmc_data* %11, null, !dbg !11242
  br i1 %tobool, label %if.then, label %if.end, !dbg !11244

if.then:                                          ; preds = %entry
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11245
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 2, !dbg !11245
  %13 = load i8*, i8** %regs, align 8, !dbg !11245
  %add.ptr = getelementptr i8, i8* %13, i64 20, !dbg !11245
  call void @__writel(i32 -1, i8* %add.ptr) #12, !dbg !11245
  %14 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11247
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %14, i32 0, i32 2, !dbg !11247
  %15 = load i32, i32* %blksz, align 8, !dbg !11247
  %16 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11247
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %16, i32 0, i32 3, !dbg !11247
  %17 = load i32, i32* %blocks, align 4, !dbg !11247
  %mul = mul i32 %15, %17, !dbg !11247
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11247
  %regs4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 2, !dbg !11247
  %19 = load i8*, i8** %regs4, align 8, !dbg !11247
  %add.ptr5 = getelementptr i8, i8* %19, i64 32, !dbg !11247
  call void @__writel(i32 %mul, i8* %add.ptr5) #12, !dbg !11247
  %20 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11248
  %blksz6 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %20, i32 0, i32 2, !dbg !11248
  %21 = load i32, i32* %blksz6, align 8, !dbg !11248
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11248
  %regs7 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 2, !dbg !11248
  %23 = load i8*, i8** %regs7, align 8, !dbg !11248
  %add.ptr8 = getelementptr i8, i8* %23, i64 28, !dbg !11248
  call void @__writel(i32 %21, i8* %add.ptr8) #12, !dbg !11248
  br label %if.end, !dbg !11249

if.end:                                           ; preds = %if.then, %entry
  %24 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !11250
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %24, i32 0, i32 0, !dbg !11251
  %25 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !11251
  %26 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11252
  %call = call i32 @dw_mci_prepare_command(%struct.mmc_host* %25, %struct.mmc_command* %26) #12, !dbg !11253
  store i32 %call, i32* %cmdflags, align 4, !dbg !11254
  %27 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !11255
  %flags = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %27, i32 0, i32 7, !dbg !11257
  %call9 = call zeroext i1 @test_and_clear_bit(i64 1, i64* %flags) #12, !dbg !11258
  br i1 %call9, label %if.then10, label %if.end12, !dbg !11259

if.then10:                                        ; preds = %if.end
  %28 = load i32, i32* %cmdflags, align 4, !dbg !11260
  %conv = zext i32 %28 to i64, !dbg !11260
  %or = or i64 %conv, 32768, !dbg !11260
  %conv11 = trunc i64 %or to i32, !dbg !11260
  store i32 %conv11, i32* %cmdflags, align 4, !dbg !11260
  br label %if.end12, !dbg !11261

if.end12:                                         ; preds = %if.then10, %if.end
  %29 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11262
  %tobool13 = icmp ne %struct.mmc_data* %29, null, !dbg !11262
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11264

if.then14:                                        ; preds = %if.end12
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11265
  %31 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11267
  call void @dw_mci_submit_data(%struct.dw_mci* %30, %struct.mmc_data* %31) #12, !dbg !11268
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11269, !srcloc !11270
  br label %if.end15, !dbg !11271

if.end15:                                         ; preds = %if.then14, %if.end12
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11272
  %33 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11273
  %34 = load i32, i32* %cmdflags, align 4, !dbg !11274
  call void @dw_mci_start_command(%struct.dw_mci* %32, %struct.mmc_command* %33, i32 %34) #12, !dbg !11275
  %35 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11276
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %35, i32 0, i32 0, !dbg !11277
  %36 = load i32, i32* %opcode, align 8, !dbg !11277
  %cmp = icmp eq i32 %36, 11, !dbg !11278
  br i1 %cmp, label %if.then17, label %if.end47, !dbg !11279

if.then17:                                        ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !11280, metadata !DIExpression()), !dbg !11281
  br label %do.body, !dbg !11282

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !11283

do.body18:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11284, metadata !DIExpression()), !dbg !11286
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11287, metadata !DIExpression()), !dbg !11286
  %cmp19 = icmp eq i64* %__dummy, %__dummy2, !dbg !11286
  %conv20 = zext i1 %cmp19 to i32, !dbg !11286
  store i32 1, i32* %tmp, align 4, !dbg !11286
  %37 = load i32, i32* %tmp, align 4, !dbg !11286
  br label %do.body21, !dbg !11288

do.body21:                                        ; preds = %do.body18
  br label %do.body22, !dbg !11289

do.body22:                                        ; preds = %do.body21
  br label %do.body23, !dbg !11290

do.body23:                                        ; preds = %do.body22
  call void @llvm.dbg.declare(metadata i64* %__dummy24, metadata !11292, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.declare(metadata i64* %__dummy225, metadata !11296, metadata !DIExpression()), !dbg !11295
  %cmp26 = icmp eq i64* %__dummy24, %__dummy225, !dbg !11295
  %conv27 = zext i1 %cmp26 to i32, !dbg !11295
  store i32 1, i32* %tmp28, align 4, !dbg !11295
  %38 = load i32, i32* %tmp28, align 4, !dbg !11295
  %call29 = call i64 @arch_local_irq_save() #12, !dbg !11297
  store i64 %call29, i64* %irqflags, align 8, !dbg !11297
  br label %do.end, !dbg !11297

do.end:                                           ; preds = %do.body23
  br label %do.end30, !dbg !11290

do.end30:                                         ; preds = %do.end
  br label %do.body31, !dbg !11289

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11298, !srcloc !11299
  br label %do.body32, !dbg !11298

do.body32:                                        ; preds = %do.body31
  %39 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11300
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %39, i32 0, i32 1, !dbg !11300
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11301
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !11302
  %rlock.i = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !11302
  br label %do.end34, !dbg !11300

do.end34:                                         ; preds = %do.body32
  br label %do.end35, !dbg !11298

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !11289

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !11288

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !11283

do.end38:                                         ; preds = %do.end37
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11303
  %pending_events39 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 28, !dbg !11304
  %call40 = call zeroext i1 @test_bit(i64 0, i64* %pending_events39) #12, !dbg !11305
  br i1 %call40, label %if.end45, label %if.then41, !dbg !11306

if.then41:                                        ; preds = %do.end38
  %43 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11307
  %cmd11_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %43, i32 0, i32 54, !dbg !11308
  %44 = load volatile i64, i64* @jiffies, align 8, !dbg !11309
  store i32 500, i32* %m.addr.i, align 4
  %45 = load i32, i32* %m.addr.i, align 4, !dbg !11310
  %46 = call i1 @llvm.is.constant.i32(i32 %45) #8, !dbg !11312
  br i1 %46, label %if.then.i, label %if.else.i, !dbg !11313

if.then.i:                                        ; preds = %if.then41
  %47 = load i32, i32* %m.addr.i, align 4, !dbg !11314
  %cmp.i = icmp slt i32 %47, 0, !dbg !11317
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11318

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11319
  br label %msecs_to_jiffies.exit, !dbg !11319

if.end.i:                                         ; preds = %if.then.i
  %48 = load i32, i32* %m.addr.i, align 4, !dbg !11320
  %call.i = call i64 @_msecs_to_jiffies(i32 %48) #14, !dbg !11321
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11322
  br label %msecs_to_jiffies.exit, !dbg !11322

if.else.i:                                        ; preds = %if.then41
  %49 = load i32, i32* %m.addr.i, align 4, !dbg !11323
  %call2.i = call i64 @__msecs_to_jiffies(i32 %49) #14, !dbg !11325
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11326
  br label %msecs_to_jiffies.exit, !dbg !11326

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %50 = load i64, i64* %retval.i, align 8, !dbg !11327
  %add = add i64 %44, %50, !dbg !11328
  %add43 = add i64 %add, 1, !dbg !11329
  %call44 = call i32 @mod_timer(%struct.timer_list* %cmd11_timer, i64 %add43) #12, !dbg !11330
  br label %if.end45, !dbg !11330

if.end45:                                         ; preds = %msecs_to_jiffies.exit, %do.end38
  %51 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11331
  %irq_lock46 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %51, i32 0, i32 1, !dbg !11332
  %52 = load i64, i64* %irqflags, align 8, !dbg !11333
  store %struct.spinlock* %irq_lock46, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %52, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !11334
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !11334
  store i32 1, i32* %tmp.i, align 4, !dbg !11334
  %53 = load i32, i32* %tmp.i, align 4, !dbg !11334
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !11335
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !11335
  store i32 1, i32* %tmp8.i, align 4, !dbg !11335
  %54 = load i32, i32* %tmp8.i, align 4, !dbg !11335
  %55 = load i64, i64* %flags.addr.i, align 8, !dbg !11336
  call void @arch_local_irq_restore(i64 %55) #14, !dbg !11336
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11337, !srcloc !7041
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !11338
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !11338
  %rlock.i50 = bitcast %union.anon* %57 to %struct.raw_spinlock*, !dbg !11338
  br label %if.end47, !dbg !11339

if.end47:                                         ; preds = %if.end45, %if.end15
  %58 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11340
  %59 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11341
  %call48 = call i32 @dw_mci_prep_stop_abort(%struct.dw_mci* %58, %struct.mmc_command* %59) #12, !dbg !11342
  %60 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11343
  %stop_cmdr = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %60, i32 0, i32 25, !dbg !11344
  store i32 %call48, i32* %stop_cmdr, align 8, !dbg !11345
  ret void, !dbg !11346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_stop_dma(%struct.dw_mci* %host) #0 !dbg !11347 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11348, metadata !DIExpression()), !dbg !11349
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11350
  %using_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 15, !dbg !11352
  %1 = load i32, i32* %using_dma, align 4, !dbg !11352
  %tobool = icmp ne i32 %1, 0, !dbg !11350
  br i1 %tobool, label %if.then, label %if.end, !dbg !11353

if.then:                                          ; preds = %entry
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11354
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 19, !dbg !11356
  %3 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !11356
  %stop = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %3, i32 0, i32 3, !dbg !11357
  %4 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %stop, align 8, !dbg !11357
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11358
  call void %4(%struct.dw_mci* %5) #12, !dbg !11354
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11359
  %dma_ops1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 19, !dbg !11360
  %7 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops1, align 8, !dbg !11360
  %cleanup = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %7, i32 0, i32 4, !dbg !11361
  %8 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %cleanup, align 8, !dbg !11361
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11362
  call void %8(%struct.dw_mci* %9) #12, !dbg !11359
  br label %if.end, !dbg !11363

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11364
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 28, !dbg !11365
  call void @set_bit(i64 1, i64* %pending_events) #12, !dbg !11366
  ret void, !dbg !11367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @send_stop_abort(%struct.dw_mci* %host, %struct.mmc_data* %data) #0 !dbg !11368 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %stop = alloca %struct.mmc_command*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11369, metadata !DIExpression()), !dbg !11370
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !11371, metadata !DIExpression()), !dbg !11372
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %stop, metadata !11373, metadata !DIExpression()), !dbg !11374
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11375
  %stop_abort = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 11, !dbg !11376
  store %struct.mmc_command* %stop_abort, %struct.mmc_command** %stop, align 8, !dbg !11374
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11377
  %2 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !11378
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11379
  %stop_cmdr = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 25, !dbg !11380
  %4 = load i32, i32* %stop_cmdr, align 8, !dbg !11380
  call void @dw_mci_start_command(%struct.dw_mci* %1, %struct.mmc_command* %2, i32 %4) #12, !dbg !11381
  ret void, !dbg !11382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_request_end(%struct.dw_mci* %host, %struct.mmc_request* %mrq) #0 !dbg !11383 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !7742, metadata !DIExpression()), !dbg !11386
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7736, metadata !DIExpression()), !dbg !11388
  %host.addr = alloca %struct.dw_mci*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %prev_mmc = alloca %struct.mmc_host*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp30 = alloca %struct.dw_mci_slot*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !11392, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !11394, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %prev_mmc, metadata !11396, metadata !DIExpression()), !dbg !11397
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11398
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 42, !dbg !11399
  %1 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot1, align 8, !dbg !11399
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %1, i32 0, i32 0, !dbg !11400
  %2 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !11400
  store %struct.mmc_host* %2, %struct.mmc_host** %prev_mmc, align 8, !dbg !11397
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11401, metadata !DIExpression()), !dbg !11403
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11403
  %cmd = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 9, !dbg !11403
  %4 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !11403
  %tobool = icmp ne %struct.mmc_command* %4, null, !dbg !11403
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !11403

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11403
  %data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 10, !dbg !11403
  %6 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11403
  %tobool2 = icmp ne %struct.mmc_data* %6, null, !dbg !11403
  br label %lor.end, !dbg !11403

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lnot = xor i1 %7, true, !dbg !11403
  %lnot3 = xor i1 %lnot, true, !dbg !11403
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11403
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11403
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !11404
  %tobool4 = icmp ne i32 %8, 0, !dbg !11404
  %lnot5 = xor i1 %tobool4, true, !dbg !11404
  %lnot7 = xor i1 %lnot5, true, !dbg !11404
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11404
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11404
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11404
  br i1 %tobool9, label %if.then, label %if.end, !dbg !11403

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !11404

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !11406

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !11408

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !11406

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 1798, i32 2305, i64 12) #8, !dbg !11410, !srcloc !11412
  br label %do.end12, !dbg !11410

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 303) #8, !dbg !11413, !srcloc !11415
  br label %do.body13, !dbg !11406

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !11416

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !11406

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !11406

if.end:                                           ; preds = %do.end15, %lor.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !11403
  %tobool16 = icmp ne i32 %9, 0, !dbg !11403
  %lnot17 = xor i1 %tobool16, true, !dbg !11403
  %lnot19 = xor i1 %lnot17, true, !dbg !11403
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !11403
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !11403
  store i64 %conv21, i64* %tmp, align 8, !dbg !11404
  %10 = load i64, i64* %tmp, align 8, !dbg !11403
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11418
  %slot22 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 42, !dbg !11419
  %12 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot22, align 8, !dbg !11419
  %mrq23 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %12, i32 0, i32 3, !dbg !11420
  store %struct.mmc_request* null, %struct.mmc_request** %mrq23, align 8, !dbg !11421
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11422
  %mrq24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 8, !dbg !11423
  store %struct.mmc_request* null, %struct.mmc_request** %mrq24, align 8, !dbg !11424
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11425
  %queue = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 31, !dbg !11427
  %call = call i32 @list_empty(%struct.list_head* %queue) #12, !dbg !11428
  %tobool25 = icmp ne i32 %call, 0, !dbg !11428
  br i1 %tobool25, label %if.else, label %if.then26, !dbg !11429

if.then26:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11430, metadata !DIExpression()), !dbg !11433
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11433
  %queue27 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 31, !dbg !11433
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue27, i32 0, i32 0, !dbg !11433
  %16 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11433
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !11433
  store i8* %17, i8** %__mptr, align 8, !dbg !11433
  br label %do.body28, !dbg !11433

do.body28:                                        ; preds = %if.then26
  br label %do.end29, !dbg !11434

do.end29:                                         ; preds = %do.body28
  %18 = load i8*, i8** %__mptr, align 8, !dbg !11433
  %add.ptr = getelementptr i8, i8* %18, i64 -32, !dbg !11433
  %19 = bitcast i8* %add.ptr to %struct.dw_mci_slot*, !dbg !11433
  store %struct.dw_mci_slot* %19, %struct.dw_mci_slot** %tmp30, align 8, !dbg !11434
  %20 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %tmp30, align 8, !dbg !11433
  store %struct.dw_mci_slot* %20, %struct.dw_mci_slot** %slot, align 8, !dbg !11436
  %21 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11437
  %queue_node = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %21, i32 0, i32 4, !dbg !11438
  call void @list_del(%struct.list_head* %queue_node) #12, !dbg !11439
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11440
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 30, !dbg !11441
  store i32 1, i32* %state, align 8, !dbg !11442
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11443
  %24 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11444
  call void @dw_mci_start_request(%struct.dw_mci* %23, %struct.dw_mci_slot* %24) #12, !dbg !11445
  br label %if.end38, !dbg !11446

if.else:                                          ; preds = %if.end
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11447
  %state31 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 30, !dbg !11450
  %26 = load i32, i32* %state31, align 8, !dbg !11450
  %cmp = icmp eq i32 %26, 6, !dbg !11451
  br i1 %cmp, label %if.then33, label %if.else35, !dbg !11452

if.then33:                                        ; preds = %if.else
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11453
  %state34 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 30, !dbg !11454
  store i32 7, i32* %state34, align 8, !dbg !11455
  br label %if.end37, !dbg !11453

if.else35:                                        ; preds = %if.else
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11456
  %state36 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 30, !dbg !11457
  store i32 0, i32* %state36, align 8, !dbg !11458
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then33
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %do.end29
  %29 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11459
  %lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %29, i32 0, i32 0, !dbg !11460
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11461, !srcloc !8051
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11462
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !11462
  %rlock.i = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !11462
  %32 = load %struct.mmc_host*, %struct.mmc_host** %prev_mmc, align 8, !dbg !11463
  %33 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !11464
  call void @mmc_request_done(%struct.mmc_host* %32, %struct.mmc_request* %33) #12, !dbg !11465
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11466
  %lock39 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %34, i32 0, i32 0, !dbg !11467
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i40, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11468, !srcloc !7768
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !11469
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !11469
  %rlock.i41 = bitcast %union.anon* %36 to %struct.raw_spinlock*, !dbg !11469
  ret void, !dbg !11470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !11471 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11472, metadata !DIExpression()), !dbg !11474
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11476, metadata !DIExpression()), !dbg !11477
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !11478, metadata !DIExpression()), !dbg !11480
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9569, metadata !DIExpression()), !dbg !11481
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9573, metadata !DIExpression()), !dbg !11483
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11484, metadata !DIExpression()), !dbg !11485
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11488
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11489
  %div = sdiv i64 %1, 64, !dbg !11489
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11490
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11488
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11491
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11492
  %conv.i = trunc i64 %4 to i32, !dbg !11492
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !11493
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11494
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11494
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !11494
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11495
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11496
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !11480
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !11480
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #8, !dbg !11480, !srcloc !11497
  store i8 %11, i8* %c.i, align 1, !dbg !11480
  %12 = load i8, i8* %c.i, align 1, !dbg !11480
  %tobool.i = trunc i8 %12 to i1, !dbg !11480
  %frombool.i = zext i1 %tobool.i to i8, !dbg !11480
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !11480
  %13 = load i8, i8* %tmp.i, align 1, !dbg !11480
  %tobool1.i = trunc i8 %13 to i1, !dbg !11480
  ret i1 %tobool1.i, !dbg !11498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_set_drto(%struct.dw_mci* %host) #0 !dbg !11499 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !11190, metadata !DIExpression()), !dbg !11500
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !6938, metadata !DIExpression()), !dbg !11503
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !11505
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !11506
  %host.addr = alloca %struct.dw_mci*, align 8
  %drto_clks = alloca i32, align 4
  %drto_div = alloca i32, align 4
  %drto_ms = alloca i32, align 4
  %irqflags = alloca i64, align 8
  %_tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp12 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11513, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.declare(metadata i32* %drto_clks, metadata !11515, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.declare(metadata i32* %drto_div, metadata !11517, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.declare(metadata i32* %drto_ms, metadata !11519, metadata !DIExpression()), !dbg !11520
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !11521, metadata !DIExpression()), !dbg !11522
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11523
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 2, !dbg !11523
  %1 = load i8*, i8** %regs, align 8, !dbg !11523
  %add.ptr = getelementptr i8, i8* %1, i64 20, !dbg !11523
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !11523
  %shr = lshr i32 %call, 8, !dbg !11524
  store i32 %shr, i32* %drto_clks, align 4, !dbg !11525
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11526
  %regs1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 2, !dbg !11526
  %3 = load i8*, i8** %regs1, align 8, !dbg !11526
  %add.ptr2 = getelementptr i8, i8* %3, i64 8, !dbg !11526
  %call3 = call i32 @__readl(i8* %add.ptr2) #12, !dbg !11526
  %and = and i32 %call3, 255, !dbg !11527
  %mul = mul i32 %and, 2, !dbg !11528
  store i32 %mul, i32* %drto_div, align 4, !dbg !11529
  %4 = load i32, i32* %drto_div, align 4, !dbg !11530
  %cmp = icmp eq i32 %4, 0, !dbg !11532
  br i1 %cmp, label %if.then, label %if.end, !dbg !11533

if.then:                                          ; preds = %entry
  store i32 1, i32* %drto_div, align 4, !dbg !11534
  br label %if.end, !dbg !11535

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %_tmp, metadata !11536, metadata !DIExpression()), !dbg !11538
  %5 = load i32, i32* %drto_clks, align 4, !dbg !11538
  %conv = zext i32 %5 to i64, !dbg !11538
  %mul4 = mul i64 1000, %conv, !dbg !11538
  %6 = load i32, i32* %drto_div, align 4, !dbg !11538
  %conv5 = zext i32 %6 to i64, !dbg !11538
  %mul6 = mul i64 %mul4, %conv5, !dbg !11538
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11538
  %bus_hz = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 32, !dbg !11538
  %8 = load i32, i32* %bus_hz, align 8, !dbg !11538
  %conv7 = zext i32 %8 to i64, !dbg !11538
  %add = add i64 %mul6, %conv7, !dbg !11538
  %sub = sub i64 %add, 1, !dbg !11538
  store i64 %sub, i64* %_tmp, align 8, !dbg !11538
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !11539, metadata !DIExpression()), !dbg !11541
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11541
  %bus_hz8 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 32, !dbg !11541
  %10 = load i32, i32* %bus_hz8, align 8, !dbg !11541
  store i32 %10, i32* %__base, align 4, !dbg !11541
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !11542, metadata !DIExpression()), !dbg !11541
  %11 = load i64, i64* %_tmp, align 8, !dbg !11541
  %12 = load i32, i32* %__base, align 4, !dbg !11541
  %conv9 = zext i32 %12 to i64, !dbg !11541
  %rem = urem i64 %11, %conv9, !dbg !11541
  %conv10 = trunc i64 %rem to i32, !dbg !11541
  store i32 %conv10, i32* %__rem, align 4, !dbg !11541
  %13 = load i64, i64* %_tmp, align 8, !dbg !11541
  %14 = load i32, i32* %__base, align 4, !dbg !11541
  %conv11 = zext i32 %14 to i64, !dbg !11541
  %div = udiv i64 %13, %conv11, !dbg !11541
  store i64 %div, i64* %_tmp, align 8, !dbg !11541
  %15 = load i32, i32* %__rem, align 4, !dbg !11541
  store i32 %15, i32* %tmp, align 4, !dbg !11541
  %16 = load i32, i32* %tmp, align 4, !dbg !11541
  %17 = load i64, i64* %_tmp, align 8, !dbg !11538
  store i64 %17, i64* %tmp12, align 8, !dbg !11538
  %18 = load i64, i64* %tmp12, align 8, !dbg !11538
  %conv13 = trunc i64 %18 to i32, !dbg !11543
  store i32 %conv13, i32* %drto_ms, align 4, !dbg !11544
  %19 = load i32, i32* %drto_ms, align 4, !dbg !11545
  %add14 = add i32 %19, 10, !dbg !11545
  store i32 %add14, i32* %drto_ms, align 4, !dbg !11545
  br label %do.body, !dbg !11546

do.body:                                          ; preds = %if.end
  br label %do.body15, !dbg !11547

do.body15:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11548, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11551, metadata !DIExpression()), !dbg !11550
  %cmp16 = icmp eq i64* %__dummy, %__dummy2, !dbg !11550
  %conv17 = zext i1 %cmp16 to i32, !dbg !11550
  store i32 1, i32* %tmp18, align 4, !dbg !11550
  %20 = load i32, i32* %tmp18, align 4, !dbg !11550
  br label %do.body19, !dbg !11552

do.body19:                                        ; preds = %do.body15
  br label %do.body20, !dbg !11553

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !11554

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !11556, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !11560, metadata !DIExpression()), !dbg !11559
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !11559
  %conv25 = zext i1 %cmp24 to i32, !dbg !11559
  store i32 1, i32* %tmp26, align 4, !dbg !11559
  %21 = load i32, i32* %tmp26, align 4, !dbg !11559
  %call27 = call i64 @arch_local_irq_save() #12, !dbg !11561
  store i64 %call27, i64* %irqflags, align 8, !dbg !11561
  br label %do.end, !dbg !11561

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !11554

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !11553

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11562, !srcloc !11563
  br label %do.body30, !dbg !11562

do.body30:                                        ; preds = %do.body29
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11564
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 1, !dbg !11564
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11565
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !11566
  %rlock.i = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !11566
  br label %do.end32, !dbg !11564

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !11562

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !11553

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !11552

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !11547

do.end36:                                         ; preds = %do.end35
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11567
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 28, !dbg !11568
  %call37 = call zeroext i1 @test_bit(i64 2, i64* %pending_events) #12, !dbg !11569
  br i1 %call37, label %if.end42, label %if.then38, !dbg !11570

if.then38:                                        ; preds = %do.end36
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11571
  %dto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 56, !dbg !11572
  %27 = load volatile i64, i64* @jiffies, align 8, !dbg !11573
  %28 = load i32, i32* %drto_ms, align 4, !dbg !11574
  store i32 %28, i32* %m.addr.i, align 4
  %29 = load i32, i32* %m.addr.i, align 4, !dbg !11575
  %30 = call i1 @llvm.is.constant.i32(i32 %29) #8, !dbg !11576
  br i1 %30, label %if.then.i, label %if.else.i, !dbg !11577

if.then.i:                                        ; preds = %if.then38
  %31 = load i32, i32* %m.addr.i, align 4, !dbg !11578
  %cmp.i = icmp slt i32 %31, 0, !dbg !11579
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11580

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11581
  br label %msecs_to_jiffies.exit, !dbg !11581

if.end.i:                                         ; preds = %if.then.i
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !11582
  %call.i = call i64 @_msecs_to_jiffies(i32 %32) #14, !dbg !11583
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11584
  br label %msecs_to_jiffies.exit, !dbg !11584

if.else.i:                                        ; preds = %if.then38
  %33 = load i32, i32* %m.addr.i, align 4, !dbg !11585
  %call2.i = call i64 @__msecs_to_jiffies(i32 %33) #14, !dbg !11586
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11587
  br label %msecs_to_jiffies.exit, !dbg !11587

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %34 = load i64, i64* %retval.i, align 8, !dbg !11588
  %add40 = add i64 %27, %34, !dbg !11589
  %call41 = call i32 @mod_timer(%struct.timer_list* %dto_timer, i64 %add40) #12, !dbg !11590
  br label %if.end42, !dbg !11590

if.end42:                                         ; preds = %msecs_to_jiffies.exit, %do.end36
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11591
  %irq_lock43 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 1, !dbg !11592
  %36 = load i64, i64* %irqflags, align 8, !dbg !11593
  store %struct.spinlock* %irq_lock43, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !11594
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !11594
  store i32 1, i32* %tmp.i, align 4, !dbg !11594
  %37 = load i32, i32* %tmp.i, align 4, !dbg !11594
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !11595
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !11595
  store i32 1, i32* %tmp8.i, align 4, !dbg !11595
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !11595
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !11596
  call void @arch_local_irq_restore(i64 %39) #14, !dbg !11596
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11597, !srcloc !7041
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !11598
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !11598
  %rlock.i45 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !11598
  ret void, !dbg !11599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dw_mci_clear_pending_data_complete(%struct.dw_mci* %host) #0 !dbg !11600 {
entry:
  %retval = alloca i1, align 1
  %host.addr = alloca %struct.dw_mci*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11601, metadata !DIExpression()), !dbg !11602
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11603
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 28, !dbg !11605
  %call = call zeroext i1 @test_bit(i64 2, i64* %pending_events) #12, !dbg !11606
  br i1 %call, label %if.end, label %if.then, !dbg !11607

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11608
  br label %return, !dbg !11608

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11609, metadata !DIExpression()), !dbg !11611
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11611
  %dto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 56, !dbg !11611
  %call1 = call i32 @del_timer(%struct.timer_list* %dto_timer) #12, !dbg !11611
  %tobool = icmp ne i32 %call1, 0, !dbg !11611
  %lnot = xor i1 %tobool, true, !dbg !11611
  %lnot2 = xor i1 %lnot, true, !dbg !11611
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11611
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11611
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !11612
  %tobool3 = icmp ne i32 %2, 0, !dbg !11612
  %lnot4 = xor i1 %tobool3, true, !dbg !11612
  %lnot6 = xor i1 %lnot4, true, !dbg !11612
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !11612
  %conv = sext i32 %lnot.ext7 to i64, !dbg !11612
  %tobool8 = icmp ne i64 %conv, 0, !dbg !11612
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !11611

if.then9:                                         ; preds = %if.end
  br label %do.body, !dbg !11612

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !11614

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !11616

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !11614

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 1949, i32 2305, i64 12) #8, !dbg !11618, !srcloc !11620
  br label %do.end12, !dbg !11618

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 306) #8, !dbg !11621, !srcloc !11623
  br label %do.body13, !dbg !11614

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !11624

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !11614

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !11614

if.end16:                                         ; preds = %do.end15, %if.end
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11611
  %tobool17 = icmp ne i32 %3, 0, !dbg !11611
  %lnot18 = xor i1 %tobool17, true, !dbg !11611
  %lnot20 = xor i1 %lnot18, true, !dbg !11611
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !11611
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !11611
  store i64 %conv22, i64* %tmp, align 8, !dbg !11612
  %4 = load i64, i64* %tmp, align 8, !dbg !11611
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11626
  %pending_events23 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 28, !dbg !11627
  call void @clear_bit(i64 2, i64* %pending_events23) #12, !dbg !11628
  store i1 true, i1* %retval, align 1, !dbg !11629
  br label %return, !dbg !11629

return:                                           ; preds = %if.end16, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !11630
  ret i1 %6, !dbg !11630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_data_complete(%struct.dw_mci* %host, %struct.mmc_data* %data) #0 !dbg !11631 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %status = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !11636, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11638, metadata !DIExpression()), !dbg !11639
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11640
  %data_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 24, !dbg !11641
  %1 = load i32, i32* %data_status, align 4, !dbg !11641
  store i32 %1, i32* %status, align 4, !dbg !11639
  %2 = load i32, i32* %status, align 4, !dbg !11642
  %conv = zext i32 %2 to i64, !dbg !11642
  %and = and i64 %conv, 46720, !dbg !11644
  %tobool = icmp ne i64 %and, 0, !dbg !11644
  br i1 %tobool, label %if.then, label %if.else30, !dbg !11645

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %status, align 4, !dbg !11646
  %conv1 = zext i32 %3 to i64, !dbg !11646
  %and2 = and i64 %conv1, 512, !dbg !11649
  %tobool3 = icmp ne i64 %and2, 0, !dbg !11649
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !11650

if.then4:                                         ; preds = %if.then
  %4 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11651
  %error = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %4, i32 0, i32 5, !dbg !11653
  store i32 -110, i32* %error, align 4, !dbg !11654
  br label %if.end29, !dbg !11655

if.else:                                          ; preds = %if.then
  %5 = load i32, i32* %status, align 4, !dbg !11656
  %conv5 = zext i32 %5 to i64, !dbg !11656
  %and6 = and i64 %conv5, 128, !dbg !11658
  %tobool7 = icmp ne i64 %and6, 0, !dbg !11658
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !11659

if.then8:                                         ; preds = %if.else
  %6 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11660
  %error9 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %6, i32 0, i32 5, !dbg !11662
  store i32 -84, i32* %error9, align 4, !dbg !11663
  br label %if.end28, !dbg !11664

if.else10:                                        ; preds = %if.else
  %7 = load i32, i32* %status, align 4, !dbg !11665
  %conv11 = zext i32 %7 to i64, !dbg !11665
  %and12 = and i64 %conv11, 32768, !dbg !11667
  %tobool13 = icmp ne i64 %and12, 0, !dbg !11667
  br i1 %tobool13, label %if.then14, label %if.else25, !dbg !11668

if.then14:                                        ; preds = %if.else10
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11669
  %dir_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 26, !dbg !11672
  %9 = load i32, i32* %dir_status, align 4, !dbg !11672
  %cmp = icmp eq i32 %9, 1, !dbg !11673
  br i1 %cmp, label %if.then16, label %if.else18, !dbg !11674

if.then16:                                        ; preds = %if.then14
  %10 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11675
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %10, i32 0, i32 7, !dbg !11677
  store i32 0, i32* %bytes_xfered, align 4, !dbg !11678
  %11 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11679
  %error17 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %11, i32 0, i32 5, !dbg !11680
  store i32 -110, i32* %error17, align 4, !dbg !11681
  br label %if.end24, !dbg !11682

if.else18:                                        ; preds = %if.then14
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11683
  %dir_status19 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 26, !dbg !11685
  %13 = load i32, i32* %dir_status19, align 4, !dbg !11685
  %cmp20 = icmp eq i32 %13, 2, !dbg !11686
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !11687

if.then22:                                        ; preds = %if.else18
  %14 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11688
  %error23 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %14, i32 0, i32 5, !dbg !11690
  store i32 -84, i32* %error23, align 4, !dbg !11691
  br label %if.end, !dbg !11692

if.end:                                           ; preds = %if.then22, %if.else18
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then16
  br label %if.end27, !dbg !11693

if.else25:                                        ; preds = %if.else10
  %15 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11694
  %error26 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %15, i32 0, i32 5, !dbg !11696
  store i32 -84, i32* %error26, align 4, !dbg !11697
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.end24
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then8
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then4
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11698
  %call = call zeroext i1 @dw_mci_reset(%struct.dw_mci* %16) #12, !dbg !11699
  br label %if.end33, !dbg !11700

if.else30:                                        ; preds = %entry
  %17 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11701
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %17, i32 0, i32 3, !dbg !11703
  %18 = load i32, i32* %blocks, align 4, !dbg !11703
  %19 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11704
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %19, i32 0, i32 2, !dbg !11705
  %20 = load i32, i32* %blksz, align 8, !dbg !11705
  %mul = mul i32 %18, %20, !dbg !11706
  %21 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11707
  %bytes_xfered31 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %21, i32 0, i32 7, !dbg !11708
  store i32 %mul, i32* %bytes_xfered31, align 4, !dbg !11709
  %22 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11710
  %error32 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %22, i32 0, i32 5, !dbg !11711
  store i32 0, i32* %error32, align 4, !dbg !11712
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.end29
  %23 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !11713
  %error34 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %23, i32 0, i32 5, !dbg !11714
  %24 = load i32, i32* %error34, align 4, !dbg !11714
  ret i32 %24, !dbg !11715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dw_mci_reset(%struct.dw_mci* %host) #0 !dbg !11716 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %flags = alloca i32, align 4
  %ret = alloca i8, align 1
  %status = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !11719, metadata !DIExpression()), !dbg !11720
  store i32 3, i32* %flags, align 4, !dbg !11720
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !11721, metadata !DIExpression()), !dbg !11722
  store i8 0, i8* %ret, align 1, !dbg !11722
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11723, metadata !DIExpression()), !dbg !11724
  store i32 0, i32* %status, align 4, !dbg !11724
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11725
  %sg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 6, !dbg !11727
  %1 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !11727
  %tobool = icmp ne %struct.scatterlist* %1, null, !dbg !11725
  br i1 %tobool, label %if.then, label %if.end, !dbg !11728

if.then:                                          ; preds = %entry
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11729
  %sg_miter = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 7, !dbg !11731
  call void @sg_miter_stop(%struct.sg_mapping_iter* %sg_miter) #12, !dbg !11732
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11733
  %sg1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 6, !dbg !11734
  store %struct.scatterlist* null, %struct.scatterlist** %sg1, align 8, !dbg !11735
  br label %if.end, !dbg !11736

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11737
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 14, !dbg !11739
  %5 = load i32, i32* %use_dma, align 8, !dbg !11739
  %tobool2 = icmp ne i32 %5, 0, !dbg !11737
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !11740

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %flags, align 4, !dbg !11741
  %conv = zext i32 %6 to i64, !dbg !11741
  %or = or i64 %conv, 4, !dbg !11741
  %conv4 = trunc i64 %or to i32, !dbg !11741
  store i32 %conv4, i32* %flags, align 4, !dbg !11741
  br label %if.end5, !dbg !11742

if.end5:                                          ; preds = %if.then3, %if.end
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11743
  %8 = load i32, i32* %flags, align 4, !dbg !11745
  %call = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %7, i32 %8) #12, !dbg !11746
  br i1 %call, label %if.then6, label %if.else48, !dbg !11747

if.then6:                                         ; preds = %if.end5
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11748
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 2, !dbg !11748
  %10 = load i8*, i8** %regs, align 8, !dbg !11748
  %add.ptr = getelementptr i8, i8* %10, i64 68, !dbg !11748
  call void @__writel(i32 -1, i8* %add.ptr) #12, !dbg !11748
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11750
  %use_dma7 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 14, !dbg !11752
  %12 = load i32, i32* %use_dma7, align 8, !dbg !11752
  %tobool8 = icmp ne i32 %12, 0, !dbg !11750
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !11753

if.then9:                                         ; preds = %if.then6
  store i8 1, i8* %ret, align 1, !dbg !11754
  br label %ciu_out, !dbg !11756

if.end10:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !11757, metadata !DIExpression()), !dbg !11760
  store i64 500000, i64* %__timeout_us, align 8, !dbg !11760
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !11761, metadata !DIExpression()), !dbg !11760
  store i64 1, i64* %__delay_us, align 8, !dbg !11760
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !11762, metadata !DIExpression()), !dbg !11760
  %call11 = call i64 @ktime_get() #12, !dbg !11760
  %13 = load i64, i64* %__timeout_us, align 8, !dbg !11760
  %call12 = call i64 @ktime_add_us(i64 %call11, i64 %13) #12, !dbg !11760
  store i64 %call12, i64* %__timeout, align 8, !dbg !11760
  br label %for.cond, !dbg !11760

for.cond:                                         ; preds = %if.end38, %if.end10
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11763
  %regs13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 2, !dbg !11763
  %15 = load i8*, i8** %regs13, align 8, !dbg !11763
  %add.ptr14 = getelementptr i8, i8* %15, i64 72, !dbg !11763
  %call15 = call i32 @readl(i8* %add.ptr14) #12, !dbg !11763
  store i32 %call15, i32* %status, align 4, !dbg !11763
  %16 = load i32, i32* %status, align 4, !dbg !11767
  %conv16 = zext i32 %16 to i64, !dbg !11767
  %and = and i64 %conv16, 2147483648, !dbg !11767
  %tobool17 = icmp ne i64 %and, 0, !dbg !11767
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !11763

if.then18:                                        ; preds = %for.cond
  br label %for.end, !dbg !11767

if.end19:                                         ; preds = %for.cond
  %17 = load i64, i64* %__timeout_us, align 8, !dbg !11769
  %tobool20 = icmp ne i64 %17, 0, !dbg !11769
  br i1 %tobool20, label %land.lhs.true, label %if.end28, !dbg !11769

land.lhs.true:                                    ; preds = %if.end19
  %call21 = call i64 @ktime_get() #12, !dbg !11769
  %18 = load i64, i64* %__timeout, align 8, !dbg !11769
  %call22 = call i32 @ktime_compare(i64 %call21, i64 %18) #12, !dbg !11769
  %cmp = icmp sgt i32 %call22, 0, !dbg !11769
  br i1 %cmp, label %if.then24, label %if.end28, !dbg !11763

if.then24:                                        ; preds = %land.lhs.true
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11771
  %regs25 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 2, !dbg !11771
  %20 = load i8*, i8** %regs25, align 8, !dbg !11771
  %add.ptr26 = getelementptr i8, i8* %20, i64 72, !dbg !11771
  %call27 = call i32 @readl(i8* %add.ptr26) #12, !dbg !11771
  store i32 %call27, i32* %status, align 4, !dbg !11771
  br label %for.end, !dbg !11771

if.end28:                                         ; preds = %land.lhs.true, %if.end19
  %21 = load i64, i64* %__delay_us, align 8, !dbg !11773
  %tobool29 = icmp ne i64 %21, 0, !dbg !11773
  br i1 %tobool29, label %if.then30, label %if.end38, !dbg !11763

if.then30:                                        ; preds = %if.end28
  %22 = load i64, i64* %__delay_us, align 8, !dbg !11775
  %23 = call i1 @llvm.is.constant.i64(i64 %22), !dbg !11775
  br i1 %23, label %if.then31, label %if.else36, !dbg !11778

if.then31:                                        ; preds = %if.then30
  %24 = load i64, i64* %__delay_us, align 8, !dbg !11779
  %div = udiv i64 %24, 20000, !dbg !11779
  %cmp32 = icmp uge i64 %div, 1, !dbg !11779
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !11782

if.then34:                                        ; preds = %if.then31
  call void @__bad_udelay() #12, !dbg !11779
  br label %if.end35, !dbg !11779

if.else:                                          ; preds = %if.then31
  %25 = load i64, i64* %__delay_us, align 8, !dbg !11779
  %mul = mul i64 %25, 4295, !dbg !11779
  call void @__const_udelay(i64 %mul) #12, !dbg !11779
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then34
  br label %if.end37, !dbg !11782

if.else36:                                        ; preds = %if.then30
  %26 = load i64, i64* %__delay_us, align 8, !dbg !11783
  call void @__udelay(i64 %26) #12, !dbg !11783
  br label %if.end37

if.end37:                                         ; preds = %if.else36, %if.end35
  br label %if.end38, !dbg !11773

if.end38:                                         ; preds = %if.end37, %if.end28
  br label %for.cond, !dbg !11785, !llvm.loop !11786

for.end:                                          ; preds = %if.then24, %if.then18
  %27 = load i32, i32* %status, align 4, !dbg !11760
  %conv39 = zext i32 %27 to i64, !dbg !11760
  %and40 = and i64 %conv39, 2147483648, !dbg !11760
  %tobool41 = icmp ne i64 %and40, 0, !dbg !11760
  %lnot = xor i1 %tobool41, true, !dbg !11760
  %28 = zext i1 %lnot to i64, !dbg !11760
  %cond = select i1 %lnot, i32 0, i32 -110, !dbg !11760
  store i32 %cond, i32* %tmp, align 4, !dbg !11787
  %29 = load i32, i32* %tmp, align 4, !dbg !11760
  %tobool42 = icmp ne i32 %29, 0, !dbg !11788
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !11789

if.then43:                                        ; preds = %for.end
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11790
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %30, i32 0, i32 36, !dbg !11790
  %31 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11790
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %31, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.dw_mci_reset, i64 0, i64 0)) #13, !dbg !11790
  br label %ciu_out, !dbg !11792

if.end44:                                         ; preds = %for.end
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11793
  %call45 = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %32, i32 2) #12, !dbg !11795
  br i1 %call45, label %if.end47, label %if.then46, !dbg !11796

if.then46:                                        ; preds = %if.end44
  br label %ciu_out, !dbg !11797

if.end47:                                         ; preds = %if.end44
  br label %if.end58, !dbg !11798

if.else48:                                        ; preds = %if.end5
  %33 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11799
  %regs49 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %33, i32 0, i32 2, !dbg !11799
  %34 = load i8*, i8** %regs49, align 8, !dbg !11799
  %add.ptr50 = getelementptr i8, i8* %34, i64 0, !dbg !11799
  %call51 = call i32 @__readl(i8* %add.ptr50) #12, !dbg !11799
  %conv52 = zext i32 %call51 to i64, !dbg !11799
  %and53 = and i64 %conv52, 1, !dbg !11802
  %tobool54 = icmp ne i64 %and53, 0, !dbg !11802
  br i1 %tobool54, label %if.end57, label %if.then55, !dbg !11803

if.then55:                                        ; preds = %if.else48
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11804
  %dev56 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 36, !dbg !11804
  %36 = load %struct.device*, %struct.device** %dev56, align 8, !dbg !11804
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %36, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.dw_mci_reset, i64 0, i64 0)) #13, !dbg !11804
  br label %ciu_out, !dbg !11806

if.end57:                                         ; preds = %if.else48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end47
  %37 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11807
  %use_dma59 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %37, i32 0, i32 14, !dbg !11809
  %38 = load i32, i32* %use_dma59, align 8, !dbg !11809
  %cmp60 = icmp eq i32 %38, 1, !dbg !11810
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !11811

if.then62:                                        ; preds = %if.end58
  %39 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11812
  %call63 = call i32 @dw_mci_idmac_init(%struct.dw_mci* %39) #12, !dbg !11813
  br label %if.end64, !dbg !11813

if.end64:                                         ; preds = %if.then62, %if.end58
  store i8 1, i8* %ret, align 1, !dbg !11814
  br label %ciu_out, !dbg !11815

ciu_out:                                          ; preds = %if.end64, %if.then55, %if.then46, %if.then43, %if.then9
  call void @llvm.dbg.label(metadata !11816), !dbg !11817
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !11818
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 42, !dbg !11819
  %41 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11819
  call void @mci_send_cmd(%struct.dw_mci_slot* %41, i32 2097152, i32 0) #12, !dbg !11820
  %42 = load i8, i8* %ret, align 1, !dbg !11821
  %tobool65 = trunc i8 %42 to i1, !dbg !11821
  ret i1 %tobool65, !dbg !11822
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !11823 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11824, metadata !DIExpression()), !dbg !11826
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11828, metadata !DIExpression()), !dbg !11829
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9488, metadata !DIExpression()), !dbg !11830
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9495, metadata !DIExpression()), !dbg !11832
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11833, metadata !DIExpression()), !dbg !11834
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11835, metadata !DIExpression()), !dbg !11836
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11837
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11838
  %div = sdiv i64 %1, 64, !dbg !11838
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11839
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11837
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11840
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11841
  %conv.i = trunc i64 %4 to i32, !dbg !11841
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !11842
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11843
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11843
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !11843
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11844
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11845
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !11846
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !11848
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !11849

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !11850
  %12 = bitcast i64* %11 to i8*, !dbg !11850
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11850
  %shr.i = ashr i64 %13, 3, !dbg !11850
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !11850
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !11852
  %and.i = and i64 %14, 7, !dbg !11852
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !11852
  %shl.i = shl i32 1, %sh_prom.i, !dbg !11852
  %neg.i = xor i32 %shl.i, -1, !dbg !11853
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #8, !dbg !11854, !srcloc !11855
  br label %arch_clear_bit.exit, !dbg !11856

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !11857
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !11859
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !11860, !srcloc !11861
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !11862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_prepare_command(%struct.mmc_host* %mmc, %struct.mmc_command* %cmd) #0 !dbg !11863 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %cmd.addr = alloca %struct.mmc_command*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %cmdr = alloca i32, align 4
  %clk_en_a = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !11866, metadata !DIExpression()), !dbg !11867
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd.addr, metadata !11868, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !11870, metadata !DIExpression()), !dbg !11871
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !11872
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !11873
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !11873
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !11871
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !11874, metadata !DIExpression()), !dbg !11875
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11876
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !11877
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !11877
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !11875
  call void @llvm.dbg.declare(metadata i32* %cmdr, metadata !11878, metadata !DIExpression()), !dbg !11879
  %4 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11880
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %4, i32 0, i32 5, !dbg !11881
  store i32 -115, i32* %error, align 8, !dbg !11882
  %5 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11883
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %5, i32 0, i32 0, !dbg !11884
  %6 = load i32, i32* %opcode, align 8, !dbg !11884
  store i32 %6, i32* %cmdr, align 4, !dbg !11885
  %7 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11886
  %opcode2 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %7, i32 0, i32 0, !dbg !11888
  %8 = load i32, i32* %opcode2, align 8, !dbg !11888
  %cmp = icmp eq i32 %8, 12, !dbg !11889
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11890

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11891
  %opcode3 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %9, i32 0, i32 0, !dbg !11892
  %10 = load i32, i32* %opcode3, align 8, !dbg !11892
  %cmp4 = icmp eq i32 %10, 0, !dbg !11893
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !11894

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %11 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11895
  %opcode6 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %11, i32 0, i32 0, !dbg !11896
  %12 = load i32, i32* %opcode6, align 8, !dbg !11896
  %cmp7 = icmp eq i32 %12, 15, !dbg !11897
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !11898

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %13 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11899
  %opcode9 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %13, i32 0, i32 0, !dbg !11900
  %14 = load i32, i32* %opcode9, align 8, !dbg !11900
  %cmp10 = icmp eq i32 %14, 52, !dbg !11901
  br i1 %cmp10, label %land.lhs.true, label %if.else, !dbg !11902

land.lhs.true:                                    ; preds = %lor.lhs.false8
  %15 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11903
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %15, i32 0, i32 1, !dbg !11904
  %16 = load i32, i32* %arg, align 4, !dbg !11904
  %shr = lshr i32 %16, 9, !dbg !11905
  %and = and i32 %shr, 131071, !dbg !11906
  %cmp11 = icmp eq i32 %and, 6, !dbg !11907
  br i1 %cmp11, label %if.then, label %if.else, !dbg !11908

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false5, %lor.lhs.false, %entry
  %17 = load i32, i32* %cmdr, align 4, !dbg !11909
  %conv = zext i32 %17 to i64, !dbg !11909
  %or = or i64 %conv, 16384, !dbg !11909
  %conv12 = trunc i64 %or to i32, !dbg !11909
  store i32 %conv12, i32* %cmdr, align 4, !dbg !11909
  br label %if.end21, !dbg !11910

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false8
  %18 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11911
  %opcode13 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %18, i32 0, i32 0, !dbg !11913
  %19 = load i32, i32* %opcode13, align 8, !dbg !11913
  %cmp14 = icmp ne i32 %19, 13, !dbg !11914
  br i1 %cmp14, label %land.lhs.true16, label %if.end, !dbg !11915

land.lhs.true16:                                  ; preds = %if.else
  %20 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11916
  %data = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %20, i32 0, i32 7, !dbg !11917
  %21 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !11917
  %tobool = icmp ne %struct.mmc_data* %21, null, !dbg !11916
  br i1 %tobool, label %if.then17, label %if.end, !dbg !11918

if.then17:                                        ; preds = %land.lhs.true16
  %22 = load i32, i32* %cmdr, align 4, !dbg !11919
  %conv18 = zext i32 %22 to i64, !dbg !11919
  %or19 = or i64 %conv18, 8192, !dbg !11919
  %conv20 = trunc i64 %or19 to i32, !dbg !11919
  store i32 %conv20, i32* %cmdr, align 4, !dbg !11919
  br label %if.end, !dbg !11920

if.end:                                           ; preds = %if.then17, %land.lhs.true16, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end, %if.then
  %23 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11921
  %opcode22 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %23, i32 0, i32 0, !dbg !11923
  %24 = load i32, i32* %opcode22, align 8, !dbg !11923
  %cmp23 = icmp eq i32 %24, 11, !dbg !11924
  br i1 %cmp23, label %if.then25, label %if.end62, !dbg !11925

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i32* %clk_en_a, metadata !11926, metadata !DIExpression()), !dbg !11928
  %25 = load i32, i32* %cmdr, align 4, !dbg !11929
  %conv26 = zext i32 %25 to i64, !dbg !11929
  %or27 = or i64 %conv26, 268435456, !dbg !11929
  %conv28 = trunc i64 %or27 to i32, !dbg !11929
  store i32 %conv28, i32* %cmdr, align 4, !dbg !11929
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11930, metadata !DIExpression()), !dbg !11932
  %26 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11932
  %host29 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %26, i32 0, i32 1, !dbg !11932
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host29, align 8, !dbg !11932
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 30, !dbg !11932
  %28 = load i32, i32* %state, align 8, !dbg !11932
  %cmp30 = icmp ne i32 %28, 1, !dbg !11932
  %lnot = xor i1 %cmp30, true, !dbg !11932
  %lnot32 = xor i1 %lnot, true, !dbg !11932
  %lnot.ext = zext i1 %lnot32 to i32, !dbg !11932
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11932
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !11933
  %tobool33 = icmp ne i32 %29, 0, !dbg !11933
  %lnot34 = xor i1 %tobool33, true, !dbg !11933
  %lnot36 = xor i1 %lnot34, true, !dbg !11933
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !11933
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !11933
  %tobool39 = icmp ne i64 %conv38, 0, !dbg !11933
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !11932

if.then40:                                        ; preds = %if.then25
  br label %do.body, !dbg !11933

do.body:                                          ; preds = %if.then40
  br label %do.body41, !dbg !11935

do.body41:                                        ; preds = %do.body
  br label %do.end, !dbg !11937

do.end:                                           ; preds = %do.body41
  br label %do.body42, !dbg !11935

do.body42:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 273, i32 2305, i64 12) #8, !dbg !11939, !srcloc !11941
  br label %do.end43, !dbg !11939

do.end43:                                         ; preds = %do.body42
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #8, !dbg !11942, !srcloc !11944
  br label %do.body44, !dbg !11935

do.body44:                                        ; preds = %do.end43
  br label %do.end45, !dbg !11945

do.end45:                                         ; preds = %do.body44
  br label %do.end46, !dbg !11935

do.end46:                                         ; preds = %do.end45
  br label %if.end47, !dbg !11935

if.end47:                                         ; preds = %do.end46, %if.then25
  %30 = load i32, i32* %__ret_warn_on, align 4, !dbg !11932
  %tobool48 = icmp ne i32 %30, 0, !dbg !11932
  %lnot49 = xor i1 %tobool48, true, !dbg !11932
  %lnot51 = xor i1 %lnot49, true, !dbg !11932
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !11932
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !11932
  store i64 %conv53, i64* %tmp, align 8, !dbg !11933
  %31 = load i64, i64* %tmp, align 8, !dbg !11932
  %32 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11947
  %host54 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %32, i32 0, i32 1, !dbg !11948
  %33 = load %struct.dw_mci*, %struct.dw_mci** %host54, align 8, !dbg !11948
  %state55 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %33, i32 0, i32 30, !dbg !11949
  store i32 6, i32* %state55, align 8, !dbg !11950
  %34 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !11951
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %34, i32 0, i32 2, !dbg !11951
  %35 = load i8*, i8** %regs, align 8, !dbg !11951
  %add.ptr = getelementptr i8, i8* %35, i64 16, !dbg !11951
  %call56 = call i32 @__readl(i8* %add.ptr) #12, !dbg !11951
  store i32 %call56, i32* %clk_en_a, align 4, !dbg !11952
  %36 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11953
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %36, i32 0, i32 8, !dbg !11954
  %37 = load i32, i32* %id, align 8, !dbg !11954
  %sh_prom = zext i32 %37 to i64, !dbg !11955
  %shl = shl i64 65536, %sh_prom, !dbg !11955
  %neg = xor i64 %shl, -1, !dbg !11956
  %38 = load i32, i32* %clk_en_a, align 4, !dbg !11957
  %conv57 = zext i32 %38 to i64, !dbg !11957
  %and58 = and i64 %conv57, %neg, !dbg !11957
  %conv59 = trunc i64 %and58 to i32, !dbg !11957
  store i32 %conv59, i32* %clk_en_a, align 4, !dbg !11957
  %39 = load i32, i32* %clk_en_a, align 4, !dbg !11958
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !11958
  %regs60 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 2, !dbg !11958
  %41 = load i8*, i8** %regs60, align 8, !dbg !11958
  %add.ptr61 = getelementptr i8, i8* %41, i64 16, !dbg !11958
  call void @__writel(i32 %39, i8* %add.ptr61) #12, !dbg !11958
  %42 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11959
  call void @mci_send_cmd(%struct.dw_mci_slot* %42, i32 2105344, i32 0) #12, !dbg !11960
  br label %if.end62, !dbg !11961

if.end62:                                         ; preds = %if.end47, %if.end21
  %43 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11962
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %43, i32 0, i32 3, !dbg !11964
  %44 = load i32, i32* %flags, align 8, !dbg !11964
  %and63 = and i32 %44, 1, !dbg !11965
  %tobool64 = icmp ne i32 %and63, 0, !dbg !11965
  br i1 %tobool64, label %if.then65, label %if.end77, !dbg !11966

if.then65:                                        ; preds = %if.end62
  %45 = load i32, i32* %cmdr, align 4, !dbg !11967
  %conv66 = zext i32 %45 to i64, !dbg !11967
  %or67 = or i64 %conv66, 64, !dbg !11967
  %conv68 = trunc i64 %or67 to i32, !dbg !11967
  store i32 %conv68, i32* %cmdr, align 4, !dbg !11967
  %46 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11969
  %flags69 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %46, i32 0, i32 3, !dbg !11971
  %47 = load i32, i32* %flags69, align 8, !dbg !11971
  %and70 = and i32 %47, 2, !dbg !11972
  %tobool71 = icmp ne i32 %and70, 0, !dbg !11972
  br i1 %tobool71, label %if.then72, label %if.end76, !dbg !11973

if.then72:                                        ; preds = %if.then65
  %48 = load i32, i32* %cmdr, align 4, !dbg !11974
  %conv73 = zext i32 %48 to i64, !dbg !11974
  %or74 = or i64 %conv73, 128, !dbg !11974
  %conv75 = trunc i64 %or74 to i32, !dbg !11974
  store i32 %conv75, i32* %cmdr, align 4, !dbg !11974
  br label %if.end76, !dbg !11975

if.end76:                                         ; preds = %if.then72, %if.then65
  br label %if.end77, !dbg !11976

if.end77:                                         ; preds = %if.end76, %if.end62
  %49 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11977
  %flags78 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %49, i32 0, i32 3, !dbg !11979
  %50 = load i32, i32* %flags78, align 8, !dbg !11979
  %and79 = and i32 %50, 4, !dbg !11980
  %tobool80 = icmp ne i32 %and79, 0, !dbg !11980
  br i1 %tobool80, label %if.then81, label %if.end85, !dbg !11981

if.then81:                                        ; preds = %if.end77
  %51 = load i32, i32* %cmdr, align 4, !dbg !11982
  %conv82 = zext i32 %51 to i64, !dbg !11982
  %or83 = or i64 %conv82, 256, !dbg !11982
  %conv84 = trunc i64 %or83 to i32, !dbg !11982
  store i32 %conv84, i32* %cmdr, align 4, !dbg !11982
  br label %if.end85, !dbg !11983

if.end85:                                         ; preds = %if.then81, %if.end77
  %52 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11984
  %data86 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %52, i32 0, i32 7, !dbg !11986
  %53 = load %struct.mmc_data*, %struct.mmc_data** %data86, align 8, !dbg !11986
  %tobool87 = icmp ne %struct.mmc_data* %53, null, !dbg !11984
  br i1 %tobool87, label %if.then88, label %if.end102, !dbg !11987

if.then88:                                        ; preds = %if.end85
  %54 = load i32, i32* %cmdr, align 4, !dbg !11988
  %conv89 = zext i32 %54 to i64, !dbg !11988
  %or90 = or i64 %conv89, 512, !dbg !11988
  %conv91 = trunc i64 %or90 to i32, !dbg !11988
  store i32 %conv91, i32* %cmdr, align 4, !dbg !11988
  %55 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !11990
  %data92 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %55, i32 0, i32 7, !dbg !11992
  %56 = load %struct.mmc_data*, %struct.mmc_data** %data92, align 8, !dbg !11992
  %flags93 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %56, i32 0, i32 6, !dbg !11993
  %57 = load i32, i32* %flags93, align 8, !dbg !11993
  %conv94 = zext i32 %57 to i64, !dbg !11990
  %and95 = and i64 %conv94, 256, !dbg !11994
  %tobool96 = icmp ne i64 %and95, 0, !dbg !11994
  br i1 %tobool96, label %if.then97, label %if.end101, !dbg !11995

if.then97:                                        ; preds = %if.then88
  %58 = load i32, i32* %cmdr, align 4, !dbg !11996
  %conv98 = zext i32 %58 to i64, !dbg !11996
  %or99 = or i64 %conv98, 1024, !dbg !11996
  %conv100 = trunc i64 %or99 to i32, !dbg !11996
  store i32 %conv100, i32* %cmdr, align 4, !dbg !11996
  br label %if.end101, !dbg !11997

if.end101:                                        ; preds = %if.then97, %if.then88
  br label %if.end102, !dbg !11998

if.end102:                                        ; preds = %if.end101, %if.end85
  %59 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !11999
  %flags103 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %59, i32 0, i32 7, !dbg !12001
  %call104 = call zeroext i1 @test_bit(i64 3, i64* %flags103) #12, !dbg !12002
  br i1 %call104, label %if.end109, label %if.then105, !dbg !12003

if.then105:                                       ; preds = %if.end102
  %60 = load i32, i32* %cmdr, align 4, !dbg !12004
  %conv106 = zext i32 %60 to i64, !dbg !12004
  %or107 = or i64 %conv106, 536870912, !dbg !12004
  %conv108 = trunc i64 %or107 to i32, !dbg !12004
  store i32 %conv108, i32* %cmdr, align 4, !dbg !12004
  br label %if.end109, !dbg !12005

if.end109:                                        ; preds = %if.then105, %if.end102
  %61 = load i32, i32* %cmdr, align 4, !dbg !12006
  ret i32 %61, !dbg !12007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_submit_data(%struct.dw_mci* %host, %struct.mmc_data* %data) #0 !dbg !12008 {
entry:
  %lock.addr.i91 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i91, metadata !6938, metadata !DIExpression()), !dbg !12009
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !12013
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !12014
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %irqflags = alloca i64, align 8
  %flags = alloca i32, align 4
  %temp = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp45 = alloca i32, align 4
  %__dummy49 = alloca i64, align 8
  %__dummy250 = alloca i64, align 8
  %tmp53 = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12021, metadata !DIExpression()), !dbg !12022
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !12023, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !12025, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12027, metadata !DIExpression()), !dbg !12028
  store i32 1, i32* %flags, align 4, !dbg !12028
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !12029, metadata !DIExpression()), !dbg !12030
  %0 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12031
  %error = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %0, i32 0, i32 5, !dbg !12032
  store i32 -115, i32* %error, align 4, !dbg !12033
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12034, metadata !DIExpression()), !dbg !12036
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12036
  %data1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 10, !dbg !12036
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !12036
  %tobool = icmp ne %struct.mmc_data* %2, null, !dbg !12036
  %lnot = xor i1 %tobool, true, !dbg !12036
  %lnot2 = xor i1 %lnot, true, !dbg !12036
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12036
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12036
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !12037
  %tobool3 = icmp ne i32 %3, 0, !dbg !12037
  %lnot4 = xor i1 %tobool3, true, !dbg !12037
  %lnot6 = xor i1 %lnot4, true, !dbg !12037
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !12037
  %conv = sext i32 %lnot.ext7 to i64, !dbg !12037
  %tobool8 = icmp ne i64 %conv, 0, !dbg !12037
  br i1 %tobool8, label %if.then, label %if.end, !dbg !12036

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12037

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !12039

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !12041

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !12039

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 1143, i32 2305, i64 12) #8, !dbg !12043, !srcloc !12045
  br label %do.end11, !dbg !12043

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #8, !dbg !12046, !srcloc !12048
  br label %do.body12, !dbg !12039

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !12049

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !12039

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !12039

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !12036
  %tobool15 = icmp ne i32 %4, 0, !dbg !12036
  %lnot16 = xor i1 %tobool15, true, !dbg !12036
  %lnot18 = xor i1 %lnot16, true, !dbg !12036
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12036
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12036
  store i64 %conv20, i64* %tmp, align 8, !dbg !12037
  %5 = load i64, i64* %tmp, align 8, !dbg !12036
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12051
  %sg = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 6, !dbg !12052
  store %struct.scatterlist* null, %struct.scatterlist** %sg, align 8, !dbg !12053
  %7 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12054
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12055
  %data21 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 10, !dbg !12056
  store %struct.mmc_data* %7, %struct.mmc_data** %data21, align 8, !dbg !12057
  %9 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12058
  %flags22 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %9, i32 0, i32 6, !dbg !12060
  %10 = load i32, i32* %flags22, align 8, !dbg !12060
  %conv23 = zext i32 %10 to i64, !dbg !12058
  %and = and i64 %conv23, 512, !dbg !12061
  %tobool24 = icmp ne i64 %and, 0, !dbg !12061
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !12062

if.then25:                                        ; preds = %if.end
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12063
  %dir_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 26, !dbg !12064
  store i32 2, i32* %dir_status, align 4, !dbg !12065
  br label %if.end27, !dbg !12063

if.else:                                          ; preds = %if.end
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12066
  %dir_status26 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 26, !dbg !12067
  store i32 1, i32* %dir_status26, align 4, !dbg !12068
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then25
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12069
  %14 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12070
  call void @dw_mci_ctrl_thld(%struct.dw_mci* %13, %struct.mmc_data* %14) #12, !dbg !12071
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12072
  %16 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12073
  %call = call i32 @dw_mci_submit_data_dma(%struct.dw_mci* %15, %struct.mmc_data* %16) #12, !dbg !12074
  %tobool28 = icmp ne i32 %call, 0, !dbg !12074
  br i1 %tobool28, label %if.then29, label %if.else88, !dbg !12075

if.then29:                                        ; preds = %if.end27
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12076
  %data30 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 10, !dbg !12078
  %18 = load %struct.mmc_data*, %struct.mmc_data** %data30, align 8, !dbg !12078
  %flags31 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %18, i32 0, i32 6, !dbg !12079
  %19 = load i32, i32* %flags31, align 8, !dbg !12079
  %conv32 = zext i32 %19 to i64, !dbg !12076
  %and33 = and i64 %conv32, 512, !dbg !12080
  %tobool34 = icmp ne i64 %and33, 0, !dbg !12080
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !12081

if.then35:                                        ; preds = %if.then29
  %20 = load i32, i32* %flags, align 4, !dbg !12082
  %or = or i32 %20, 2, !dbg !12082
  store i32 %or, i32* %flags, align 4, !dbg !12082
  br label %if.end38, !dbg !12083

if.else36:                                        ; preds = %if.then29
  %21 = load i32, i32* %flags, align 4, !dbg !12084
  %or37 = or i32 %21, 4, !dbg !12084
  store i32 %or37, i32* %flags, align 4, !dbg !12084
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then35
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12085
  %sg_miter = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 7, !dbg !12086
  %23 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12087
  %sg39 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %23, i32 0, i32 12, !dbg !12088
  %24 = load %struct.scatterlist*, %struct.scatterlist** %sg39, align 8, !dbg !12088
  %25 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12089
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %25, i32 0, i32 10, !dbg !12090
  %26 = load i32, i32* %sg_len, align 8, !dbg !12090
  %27 = load i32, i32* %flags, align 4, !dbg !12091
  call void @sg_miter_start(%struct.sg_mapping_iter* %sg_miter, %struct.scatterlist* %24, i32 %26, i32 %27) #12, !dbg !12092
  %28 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12093
  %sg40 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %28, i32 0, i32 12, !dbg !12094
  %29 = load %struct.scatterlist*, %struct.scatterlist** %sg40, align 8, !dbg !12094
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12095
  %sg41 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %30, i32 0, i32 6, !dbg !12096
  store %struct.scatterlist* %29, %struct.scatterlist** %sg41, align 8, !dbg !12097
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12098
  %part_buf_start = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 45, !dbg !12099
  store i8 0, i8* %part_buf_start, align 8, !dbg !12100
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12101
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %32, i32 0, i32 46, !dbg !12102
  store i8 0, i8* %part_buf_count, align 1, !dbg !12103
  %33 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12104
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %33, i32 0, i32 2, !dbg !12104
  %34 = load i8*, i8** %regs, align 8, !dbg !12104
  %add.ptr = getelementptr i8, i8* %34, i64 68, !dbg !12104
  call void @__writel(i32 48, i8* %add.ptr) #12, !dbg !12104
  br label %do.body42, !dbg !12105

do.body42:                                        ; preds = %if.end38
  br label %do.body43, !dbg !12106

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12107, metadata !DIExpression()), !dbg !12109
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12110, metadata !DIExpression()), !dbg !12109
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12109
  %conv44 = zext i1 %cmp to i32, !dbg !12109
  store i32 1, i32* %tmp45, align 4, !dbg !12109
  %35 = load i32, i32* %tmp45, align 4, !dbg !12109
  br label %do.body46, !dbg !12111

do.body46:                                        ; preds = %do.body43
  br label %do.body47, !dbg !12112

do.body47:                                        ; preds = %do.body46
  br label %do.body48, !dbg !12113

do.body48:                                        ; preds = %do.body47
  call void @llvm.dbg.declare(metadata i64* %__dummy49, metadata !12115, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.declare(metadata i64* %__dummy250, metadata !12119, metadata !DIExpression()), !dbg !12118
  %cmp51 = icmp eq i64* %__dummy49, %__dummy250, !dbg !12118
  %conv52 = zext i1 %cmp51 to i32, !dbg !12118
  store i32 1, i32* %tmp53, align 4, !dbg !12118
  %36 = load i32, i32* %tmp53, align 4, !dbg !12118
  %call54 = call i64 @arch_local_irq_save() #12, !dbg !12120
  store i64 %call54, i64* %irqflags, align 8, !dbg !12120
  br label %do.end55, !dbg !12120

do.end55:                                         ; preds = %do.body48
  br label %do.end56, !dbg !12113

do.end56:                                         ; preds = %do.end55
  br label %do.body57, !dbg !12112

do.body57:                                        ; preds = %do.end56
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12121, !srcloc !12122
  br label %do.body58, !dbg !12121

do.body58:                                        ; preds = %do.body57
  %37 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12123
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %37, i32 0, i32 1, !dbg !12123
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12124
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !12125
  %rlock.i = bitcast %union.anon* %39 to %struct.raw_spinlock*, !dbg !12125
  br label %do.end60, !dbg !12123

do.end60:                                         ; preds = %do.body58
  br label %do.end61, !dbg !12121

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !12112

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !12111

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !12106

do.end64:                                         ; preds = %do.end63
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12126
  %regs65 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 2, !dbg !12126
  %41 = load i8*, i8** %regs65, align 8, !dbg !12126
  %add.ptr66 = getelementptr i8, i8* %41, i64 36, !dbg !12126
  %call67 = call i32 @__readl(i8* %add.ptr66) #12, !dbg !12126
  store i32 %call67, i32* %temp, align 4, !dbg !12127
  %42 = load i32, i32* %temp, align 4, !dbg !12128
  %conv68 = zext i32 %42 to i64, !dbg !12128
  %or69 = or i64 %conv68, 48, !dbg !12128
  %conv70 = trunc i64 %or69 to i32, !dbg !12128
  store i32 %conv70, i32* %temp, align 4, !dbg !12128
  %43 = load i32, i32* %temp, align 4, !dbg !12129
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12129
  %regs71 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 2, !dbg !12129
  %45 = load i8*, i8** %regs71, align 8, !dbg !12129
  %add.ptr72 = getelementptr i8, i8* %45, i64 36, !dbg !12129
  call void @__writel(i32 %43, i8* %add.ptr72) #12, !dbg !12129
  %46 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12130
  %irq_lock73 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %46, i32 0, i32 1, !dbg !12131
  %47 = load i64, i64* %irqflags, align 8, !dbg !12132
  store %struct.spinlock* %irq_lock73, %struct.spinlock** %lock.addr.i91, align 8
  store i64 %47, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !12133
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !12133
  store i32 1, i32* %tmp.i, align 4, !dbg !12133
  %48 = load i32, i32* %tmp.i, align 4, !dbg !12133
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !12134
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !12134
  store i32 1, i32* %tmp8.i, align 4, !dbg !12134
  %49 = load i32, i32* %tmp8.i, align 4, !dbg !12134
  %50 = load i64, i64* %flags.addr.i, align 8, !dbg !12135
  call void @arch_local_irq_restore(i64 %50) #14, !dbg !12135
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12136, !srcloc !7041
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i91, align 8, !dbg !12137
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !12137
  %rlock.i92 = bitcast %union.anon* %52 to %struct.raw_spinlock*, !dbg !12137
  %53 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12138
  %regs74 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %53, i32 0, i32 2, !dbg !12138
  %54 = load i8*, i8** %regs74, align 8, !dbg !12138
  %add.ptr75 = getelementptr i8, i8* %54, i64 0, !dbg !12138
  %call76 = call i32 @__readl(i8* %add.ptr75) #12, !dbg !12138
  store i32 %call76, i32* %temp, align 4, !dbg !12139
  %55 = load i32, i32* %temp, align 4, !dbg !12140
  %conv77 = zext i32 %55 to i64, !dbg !12140
  %and78 = and i64 %conv77, -33, !dbg !12140
  %conv79 = trunc i64 %and78 to i32, !dbg !12140
  store i32 %conv79, i32* %temp, align 4, !dbg !12140
  %56 = load i32, i32* %temp, align 4, !dbg !12141
  %57 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12141
  %regs80 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %57, i32 0, i32 2, !dbg !12141
  %58 = load i8*, i8** %regs80, align 8, !dbg !12141
  %add.ptr81 = getelementptr i8, i8* %58, i64 0, !dbg !12141
  call void @__writel(i32 %56, i8* %add.ptr81) #12, !dbg !12141
  %59 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12142
  %wm_aligned = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %59, i32 0, i32 5, !dbg !12144
  %60 = load i8, i8* %wm_aligned, align 4, !dbg !12144
  %tobool82 = trunc i8 %60 to i1, !dbg !12144
  br i1 %tobool82, label %if.then83, label %if.else84, !dbg !12145

if.then83:                                        ; preds = %do.end64
  %61 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12146
  %62 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12147
  call void @dw_mci_adjust_fifoth(%struct.dw_mci* %61, %struct.mmc_data* %62) #12, !dbg !12148
  br label %if.end87, !dbg !12148

if.else84:                                        ; preds = %do.end64
  %63 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12149
  %fifoth_val = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %63, i32 0, i32 34, !dbg !12149
  %64 = load i32, i32* %fifoth_val, align 8, !dbg !12149
  %65 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12149
  %regs85 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %65, i32 0, i32 2, !dbg !12149
  %66 = load i8*, i8** %regs85, align 8, !dbg !12149
  %add.ptr86 = getelementptr i8, i8* %66, i64 76, !dbg !12149
  call void @__writel(i32 %64, i8* %add.ptr86) #12, !dbg !12149
  br label %if.end87

if.end87:                                         ; preds = %if.else84, %if.then83
  %67 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12150
  %prev_blksz = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %67, i32 0, i32 12, !dbg !12151
  store i32 0, i32* %prev_blksz, align 8, !dbg !12152
  br label %if.end90, !dbg !12153

if.else88:                                        ; preds = %if.end27
  %68 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12154
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %68, i32 0, i32 2, !dbg !12156
  %69 = load i32, i32* %blksz, align 8, !dbg !12156
  %70 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12157
  %prev_blksz89 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %70, i32 0, i32 12, !dbg !12158
  store i32 %69, i32* %prev_blksz89, align 8, !dbg !12159
  br label %if.end90

if.end90:                                         ; preds = %if.else88, %if.end87
  ret void, !dbg !12160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_start_command(%struct.dw_mci* %host, %struct.mmc_command* %cmd, i32 %cmd_flags) #0 !dbg !12161 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %cmd.addr = alloca %struct.mmc_command*, align 8
  %cmd_flags.addr = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12164, metadata !DIExpression()), !dbg !12165
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd.addr, metadata !12166, metadata !DIExpression()), !dbg !12167
  store i32 %cmd_flags, i32* %cmd_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd_flags.addr, metadata !12168, metadata !DIExpression()), !dbg !12169
  %0 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !12170
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12171
  %cmd1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 9, !dbg !12172
  store %struct.mmc_command* %0, %struct.mmc_command** %cmd1, align 8, !dbg !12173
  %2 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !12174
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %2, i32 0, i32 1, !dbg !12174
  %3 = load i32, i32* %arg, align 4, !dbg !12174
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12174
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 2, !dbg !12174
  %5 = load i8*, i8** %regs, align 8, !dbg !12174
  %add.ptr = getelementptr i8, i8* %5, i64 40, !dbg !12174
  call void @__writel(i32 %3, i8* %add.ptr) #12, !dbg !12174
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12175, !srcloc !12176
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12177
  %7 = load i32, i32* %cmd_flags.addr, align 4, !dbg !12178
  call void @dw_mci_wait_while_busy(%struct.dw_mci* %6, i32 %7) #12, !dbg !12179
  %8 = load i32, i32* %cmd_flags.addr, align 4, !dbg !12180
  %conv = zext i32 %8 to i64, !dbg !12180
  %or = or i64 %conv, 2147483648, !dbg !12180
  %conv2 = trunc i64 %or to i32, !dbg !12180
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12180
  %regs3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 2, !dbg !12180
  %10 = load i8*, i8** %regs3, align 8, !dbg !12180
  %add.ptr4 = getelementptr i8, i8* %10, i64 44, !dbg !12180
  call void @__writel(i32 %conv2, i8* %add.ptr4) #12, !dbg !12180
  %11 = load i32, i32* %cmd_flags.addr, align 4, !dbg !12181
  %conv5 = zext i32 %11 to i64, !dbg !12181
  %and = and i64 %conv5, 64, !dbg !12183
  %tobool = icmp ne i64 %and, 0, !dbg !12183
  br i1 %tobool, label %if.then, label %if.end, !dbg !12184

if.then:                                          ; preds = %entry
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12185
  call void @dw_mci_set_cto(%struct.dw_mci* %12) #12, !dbg !12186
  br label %if.end, !dbg !12186

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12187
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_prep_stop_abort(%struct.dw_mci* %host, %struct.mmc_command* %cmd) #0 !dbg !12188 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %cmd.addr = alloca %struct.mmc_command*, align 8
  %stop = alloca %struct.mmc_command*, align 8
  %cmdr = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12191, metadata !DIExpression()), !dbg !12192
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd.addr, metadata !12193, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %stop, metadata !12195, metadata !DIExpression()), !dbg !12196
  call void @llvm.dbg.declare(metadata i32* %cmdr, metadata !12197, metadata !DIExpression()), !dbg !12198
  %0 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !12199
  %data = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %0, i32 0, i32 7, !dbg !12201
  %1 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !12201
  %tobool = icmp ne %struct.mmc_data* %1, null, !dbg !12199
  br i1 %tobool, label %if.end, label %if.then, !dbg !12202

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12203
  br label %return, !dbg !12203

if.end:                                           ; preds = %entry
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12204
  %stop_abort = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 11, !dbg !12205
  store %struct.mmc_command* %stop_abort, %struct.mmc_command** %stop, align 8, !dbg !12206
  %3 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !12207
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %3, i32 0, i32 0, !dbg !12208
  %4 = load i32, i32* %opcode, align 8, !dbg !12208
  store i32 %4, i32* %cmdr, align 4, !dbg !12209
  %5 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12210
  %6 = bitcast %struct.mmc_command* %5 to i8*, !dbg !12211
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false), !dbg !12211
  %7 = load i32, i32* %cmdr, align 4, !dbg !12212
  %cmp = icmp eq i32 %7, 17, !dbg !12214
  br i1 %cmp, label %if.then10, label %lor.lhs.false, !dbg !12215

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %cmdr, align 4, !dbg !12216
  %cmp1 = icmp eq i32 %8, 18, !dbg !12217
  br i1 %cmp1, label %if.then10, label %lor.lhs.false2, !dbg !12218

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %cmdr, align 4, !dbg !12219
  %cmp3 = icmp eq i32 %9, 24, !dbg !12220
  br i1 %cmp3, label %if.then10, label %lor.lhs.false4, !dbg !12221

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %10 = load i32, i32* %cmdr, align 4, !dbg !12222
  %cmp5 = icmp eq i32 %10, 25, !dbg !12223
  br i1 %cmp5, label %if.then10, label %lor.lhs.false6, !dbg !12224

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %11 = load i32, i32* %cmdr, align 4, !dbg !12225
  %cmp7 = icmp eq i32 %11, 19, !dbg !12226
  br i1 %cmp7, label %if.then10, label %lor.lhs.false8, !dbg !12227

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %12 = load i32, i32* %cmdr, align 4, !dbg !12228
  %cmp9 = icmp eq i32 %12, 21, !dbg !12229
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !12230

if.then10:                                        ; preds = %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %if.end
  %13 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12231
  %opcode11 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %13, i32 0, i32 0, !dbg !12233
  store i32 12, i32* %opcode11, align 8, !dbg !12234
  %14 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12235
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %14, i32 0, i32 1, !dbg !12236
  store i32 0, i32* %arg, align 4, !dbg !12237
  %15 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12238
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %15, i32 0, i32 3, !dbg !12239
  store i32 29, i32* %flags, align 8, !dbg !12240
  br label %if.end21, !dbg !12241

if.else:                                          ; preds = %lor.lhs.false8
  %16 = load i32, i32* %cmdr, align 4, !dbg !12242
  %cmp12 = icmp eq i32 %16, 53, !dbg !12244
  br i1 %cmp12, label %if.then13, label %if.else19, !dbg !12245

if.then13:                                        ; preds = %if.else
  %17 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12246
  %opcode14 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %17, i32 0, i32 0, !dbg !12248
  store i32 52, i32* %opcode14, align 8, !dbg !12249
  %18 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !12250
  %arg15 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %18, i32 0, i32 1, !dbg !12251
  %19 = load i32, i32* %arg15, align 4, !dbg !12251
  %shr = lshr i32 %19, 28, !dbg !12252
  %and = and i32 %shr, 7, !dbg !12253
  %or = or i32 -2147480576, %and, !dbg !12254
  %20 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12255
  %arg16 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %20, i32 0, i32 1, !dbg !12256
  %21 = load i32, i32* %arg16, align 4, !dbg !12257
  %or17 = or i32 %21, %or, !dbg !12257
  store i32 %or17, i32* %arg16, align 4, !dbg !12257
  %22 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12258
  %flags18 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %22, i32 0, i32 3, !dbg !12259
  store i32 405, i32* %flags18, align 8, !dbg !12260
  br label %if.end20, !dbg !12261

if.else19:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !12262
  br label %return, !dbg !12262

if.end20:                                         ; preds = %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then10
  %23 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !12264
  %opcode22 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %23, i32 0, i32 0, !dbg !12265
  %24 = load i32, i32* %opcode22, align 8, !dbg !12265
  %conv = zext i32 %24 to i64, !dbg !12264
  %or23 = or i64 %conv, 16384, !dbg !12266
  %or24 = or i64 %or23, 256, !dbg !12267
  %or25 = or i64 %or24, 64, !dbg !12268
  %conv26 = trunc i64 %or25 to i32, !dbg !12264
  store i32 %conv26, i32* %cmdr, align 4, !dbg !12269
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12270
  %slot = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 42, !dbg !12272
  %26 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !12272
  %flags27 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %26, i32 0, i32 7, !dbg !12273
  %call = call zeroext i1 @test_bit(i64 3, i64* %flags27) #12, !dbg !12274
  br i1 %call, label %if.end32, label %if.then28, !dbg !12275

if.then28:                                        ; preds = %if.end21
  %27 = load i32, i32* %cmdr, align 4, !dbg !12276
  %conv29 = zext i32 %27 to i64, !dbg !12276
  %or30 = or i64 %conv29, 536870912, !dbg !12276
  %conv31 = trunc i64 %or30 to i32, !dbg !12276
  store i32 %conv31, i32* %cmdr, align 4, !dbg !12276
  br label %if.end32, !dbg !12277

if.end32:                                         ; preds = %if.then28, %if.end21
  %28 = load i32, i32* %cmdr, align 4, !dbg !12278
  store i32 %28, i32* %retval, align 4, !dbg !12279
  br label %return, !dbg !12279

return:                                           ; preds = %if.end32, %if.else19, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !12280
  ret i32 %29, !dbg !12280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @mmc_priv(%struct.mmc_host* %host) #0 !dbg !12281 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !12284, metadata !DIExpression()), !dbg !12285
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !12286
  %private = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 69, !dbg !12287
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %private, i64 0, i64 0, !dbg !12286
  %1 = bitcast i64* %arraydecay to i8*, !dbg !12288
  ret i8* %1, !dbg !12289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mci_send_cmd(%struct.dw_mci_slot* %slot, i32 %cmd, i32 %arg) #0 !dbg !12290 {
entry:
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i32, align 4
  %host = alloca %struct.dw_mci*, align 8
  %cmd_status = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !12293, metadata !DIExpression()), !dbg !12294
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !12295, metadata !DIExpression()), !dbg !12296
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !12297, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !12299, metadata !DIExpression()), !dbg !12300
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !12301
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 1, !dbg !12302
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !12302
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !12300
  call void @llvm.dbg.declare(metadata i32* %cmd_status, metadata !12303, metadata !DIExpression()), !dbg !12304
  store i32 0, i32* %cmd_status, align 4, !dbg !12304
  %2 = load i32, i32* %arg.addr, align 4, !dbg !12305
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !12305
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 2, !dbg !12305
  %4 = load i8*, i8** %regs, align 8, !dbg !12305
  %add.ptr = getelementptr i8, i8* %4, i64 40, !dbg !12305
  call void @__writel(i32 %2, i8* %add.ptr) #12, !dbg !12305
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12306, !srcloc !12307
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !12308
  %6 = load i32, i32* %cmd.addr, align 4, !dbg !12309
  call void @dw_mci_wait_while_busy(%struct.dw_mci* %5, i32 %6) #12, !dbg !12310
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !12311
  %conv = zext i32 %7 to i64, !dbg !12311
  %or = or i64 2147483648, %conv, !dbg !12311
  %conv2 = trunc i64 %or to i32, !dbg !12311
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !12311
  %regs3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !12311
  %9 = load i8*, i8** %regs3, align 8, !dbg !12311
  %add.ptr4 = getelementptr i8, i8* %9, i64 44, !dbg !12311
  call void @__writel(i32 %conv2, i8* %add.ptr4) #12, !dbg !12311
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !12312, metadata !DIExpression()), !dbg !12315
  store i64 500000, i64* %__timeout_us, align 8, !dbg !12315
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !12316, metadata !DIExpression()), !dbg !12315
  store i64 1, i64* %__delay_us, align 8, !dbg !12315
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !12317, metadata !DIExpression()), !dbg !12315
  %call = call i64 @ktime_get() #12, !dbg !12315
  %10 = load i64, i64* %__timeout_us, align 8, !dbg !12315
  %call5 = call i64 @ktime_add_us(i64 %call, i64 %10) #12, !dbg !12315
  store i64 %call5, i64* %__timeout, align 8, !dbg !12315
  br label %for.cond, !dbg !12315

for.cond:                                         ; preds = %if.end28, %entry
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !12318
  %regs6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 2, !dbg !12318
  %12 = load i8*, i8** %regs6, align 8, !dbg !12318
  %add.ptr7 = getelementptr i8, i8* %12, i64 44, !dbg !12318
  %call8 = call i32 @readl(i8* %add.ptr7) #12, !dbg !12318
  store i32 %call8, i32* %cmd_status, align 4, !dbg !12318
  %13 = load i32, i32* %cmd_status, align 4, !dbg !12322
  %conv9 = zext i32 %13 to i64, !dbg !12322
  %and = and i64 %conv9, 2147483648, !dbg !12322
  %tobool = icmp ne i64 %and, 0, !dbg !12322
  br i1 %tobool, label %if.end, label %if.then, !dbg !12318

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !12322

if.end:                                           ; preds = %for.cond
  %14 = load i64, i64* %__timeout_us, align 8, !dbg !12324
  %tobool10 = icmp ne i64 %14, 0, !dbg !12324
  br i1 %tobool10, label %land.lhs.true, label %if.end18, !dbg !12324

land.lhs.true:                                    ; preds = %if.end
  %call11 = call i64 @ktime_get() #12, !dbg !12324
  %15 = load i64, i64* %__timeout, align 8, !dbg !12324
  %call12 = call i32 @ktime_compare(i64 %call11, i64 %15) #12, !dbg !12324
  %cmp = icmp sgt i32 %call12, 0, !dbg !12324
  br i1 %cmp, label %if.then14, label %if.end18, !dbg !12318

if.then14:                                        ; preds = %land.lhs.true
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !12326
  %regs15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 2, !dbg !12326
  %17 = load i8*, i8** %regs15, align 8, !dbg !12326
  %add.ptr16 = getelementptr i8, i8* %17, i64 44, !dbg !12326
  %call17 = call i32 @readl(i8* %add.ptr16) #12, !dbg !12326
  store i32 %call17, i32* %cmd_status, align 4, !dbg !12326
  br label %for.end, !dbg !12326

if.end18:                                         ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %__delay_us, align 8, !dbg !12328
  %tobool19 = icmp ne i64 %18, 0, !dbg !12328
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !12318

if.then20:                                        ; preds = %if.end18
  %19 = load i64, i64* %__delay_us, align 8, !dbg !12330
  %20 = call i1 @llvm.is.constant.i64(i64 %19), !dbg !12330
  br i1 %20, label %if.then21, label %if.else26, !dbg !12333

if.then21:                                        ; preds = %if.then20
  %21 = load i64, i64* %__delay_us, align 8, !dbg !12334
  %div = udiv i64 %21, 20000, !dbg !12334
  %cmp22 = icmp uge i64 %div, 1, !dbg !12334
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !12337

if.then24:                                        ; preds = %if.then21
  call void @__bad_udelay() #12, !dbg !12334
  br label %if.end25, !dbg !12334

if.else:                                          ; preds = %if.then21
  %22 = load i64, i64* %__delay_us, align 8, !dbg !12334
  %mul = mul i64 %22, 4295, !dbg !12334
  call void @__const_udelay(i64 %mul) #12, !dbg !12334
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then24
  br label %if.end27, !dbg !12337

if.else26:                                        ; preds = %if.then20
  %23 = load i64, i64* %__delay_us, align 8, !dbg !12338
  call void @__udelay(i64 %23) #12, !dbg !12338
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.end25
  br label %if.end28, !dbg !12328

if.end28:                                         ; preds = %if.end27, %if.end18
  br label %for.cond, !dbg !12340, !llvm.loop !12341

for.end:                                          ; preds = %if.then14, %if.then
  %24 = load i32, i32* %cmd_status, align 4, !dbg !12315
  %conv29 = zext i32 %24 to i64, !dbg !12315
  %and30 = and i64 %conv29, 2147483648, !dbg !12315
  %tobool31 = icmp ne i64 %and30, 0, !dbg !12315
  %lnot = xor i1 %tobool31, true, !dbg !12315
  %25 = zext i1 %lnot to i64, !dbg !12315
  %cond = select i1 %lnot, i32 0, i32 -110, !dbg !12315
  store i32 %cond, i32* %tmp, align 4, !dbg !12342
  %26 = load i32, i32* %tmp, align 4, !dbg !12315
  %tobool32 = icmp ne i32 %26, 0, !dbg !12343
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !12344

if.then33:                                        ; preds = %for.end
  %27 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !12345
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %27, i32 0, i32 0, !dbg !12345
  %28 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !12345
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %28, i32 0, i32 1, !dbg !12345
  %29 = load i32, i32* %cmd.addr, align 4, !dbg !12345
  %30 = load i32, i32* %arg.addr, align 4, !dbg !12345
  %31 = load i32, i32* %cmd_status, align 4, !dbg !12345
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %class_dev, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.45, i64 0, i64 0), i32 %29, i32 %30, i32 %31) #13, !dbg !12345
  br label %if.end34, !dbg !12345

if.end34:                                         ; preds = %if.then33, %for.end
  ret void, !dbg !12346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_wait_while_busy(%struct.dw_mci* %host, i32 %cmd_flags) #0 !dbg !12347 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %cmd_flags.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12350, metadata !DIExpression()), !dbg !12351
  store i32 %cmd_flags, i32* %cmd_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd_flags.addr, metadata !12352, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12354, metadata !DIExpression()), !dbg !12355
  %0 = load i32, i32* %cmd_flags.addr, align 4, !dbg !12356
  %conv = zext i32 %0 to i64, !dbg !12356
  %and = and i64 %conv, 8192, !dbg !12358
  %tobool = icmp ne i64 %and, 0, !dbg !12358
  br i1 %tobool, label %land.lhs.true, label %if.end36, !dbg !12359

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %cmd_flags.addr, align 4, !dbg !12360
  %conv1 = zext i32 %1 to i64, !dbg !12360
  %and2 = and i64 %conv1, 268435456, !dbg !12361
  %tobool3 = icmp ne i64 %and2, 0, !dbg !12361
  br i1 %tobool3, label %if.end36, label %if.then, !dbg !12362

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !12363, metadata !DIExpression()), !dbg !12367
  store i64 500000, i64* %__timeout_us, align 8, !dbg !12367
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !12368, metadata !DIExpression()), !dbg !12367
  store i64 10, i64* %__delay_us, align 8, !dbg !12367
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !12369, metadata !DIExpression()), !dbg !12367
  %call = call i64 @ktime_get() #12, !dbg !12367
  %2 = load i64, i64* %__timeout_us, align 8, !dbg !12367
  %call4 = call i64 @ktime_add_us(i64 %call, i64 %2) #12, !dbg !12367
  store i64 %call4, i64* %__timeout, align 8, !dbg !12367
  br label %for.cond, !dbg !12367

for.cond:                                         ; preds = %if.end29, %if.then
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12370
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 2, !dbg !12370
  %4 = load i8*, i8** %regs, align 8, !dbg !12370
  %add.ptr = getelementptr i8, i8* %4, i64 72, !dbg !12370
  %call5 = call i32 @readl(i8* %add.ptr) #12, !dbg !12370
  store i32 %call5, i32* %status, align 4, !dbg !12370
  %5 = load i32, i32* %status, align 4, !dbg !12374
  %conv6 = zext i32 %5 to i64, !dbg !12374
  %and7 = and i64 %conv6, 512, !dbg !12374
  %tobool8 = icmp ne i64 %and7, 0, !dbg !12374
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !12370

if.then9:                                         ; preds = %for.cond
  br label %for.end, !dbg !12374

if.end:                                           ; preds = %for.cond
  %6 = load i64, i64* %__timeout_us, align 8, !dbg !12376
  %tobool10 = icmp ne i64 %6, 0, !dbg !12376
  br i1 %tobool10, label %land.lhs.true11, label %if.end19, !dbg !12376

land.lhs.true11:                                  ; preds = %if.end
  %call12 = call i64 @ktime_get() #12, !dbg !12376
  %7 = load i64, i64* %__timeout, align 8, !dbg !12376
  %call13 = call i32 @ktime_compare(i64 %call12, i64 %7) #12, !dbg !12376
  %cmp = icmp sgt i32 %call13, 0, !dbg !12376
  br i1 %cmp, label %if.then15, label %if.end19, !dbg !12370

if.then15:                                        ; preds = %land.lhs.true11
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12378
  %regs16 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !12378
  %9 = load i8*, i8** %regs16, align 8, !dbg !12378
  %add.ptr17 = getelementptr i8, i8* %9, i64 72, !dbg !12378
  %call18 = call i32 @readl(i8* %add.ptr17) #12, !dbg !12378
  store i32 %call18, i32* %status, align 4, !dbg !12378
  br label %for.end, !dbg !12378

if.end19:                                         ; preds = %land.lhs.true11, %if.end
  %10 = load i64, i64* %__delay_us, align 8, !dbg !12380
  %tobool20 = icmp ne i64 %10, 0, !dbg !12380
  br i1 %tobool20, label %if.then21, label %if.end29, !dbg !12370

if.then21:                                        ; preds = %if.end19
  %11 = load i64, i64* %__delay_us, align 8, !dbg !12382
  %12 = call i1 @llvm.is.constant.i64(i64 %11), !dbg !12382
  br i1 %12, label %if.then22, label %if.else27, !dbg !12385

if.then22:                                        ; preds = %if.then21
  %13 = load i64, i64* %__delay_us, align 8, !dbg !12386
  %div = udiv i64 %13, 20000, !dbg !12386
  %cmp23 = icmp uge i64 %div, 1, !dbg !12386
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !12389

if.then25:                                        ; preds = %if.then22
  call void @__bad_udelay() #12, !dbg !12386
  br label %if.end26, !dbg !12386

if.else:                                          ; preds = %if.then22
  %14 = load i64, i64* %__delay_us, align 8, !dbg !12386
  %mul = mul i64 %14, 4295, !dbg !12386
  call void @__const_udelay(i64 %mul) #12, !dbg !12386
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  br label %if.end28, !dbg !12389

if.else27:                                        ; preds = %if.then21
  %15 = load i64, i64* %__delay_us, align 8, !dbg !12390
  call void @__udelay(i64 %15) #12, !dbg !12390
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.end26
  br label %if.end29, !dbg !12380

if.end29:                                         ; preds = %if.end28, %if.end19
  br label %for.cond, !dbg !12392, !llvm.loop !12393

for.end:                                          ; preds = %if.then15, %if.then9
  %16 = load i32, i32* %status, align 4, !dbg !12367
  %conv30 = zext i32 %16 to i64, !dbg !12367
  %and31 = and i64 %conv30, 512, !dbg !12367
  %tobool32 = icmp ne i64 %and31, 0, !dbg !12367
  %lnot = xor i1 %tobool32, true, !dbg !12367
  %17 = zext i1 %lnot to i64, !dbg !12367
  %cond = select i1 %lnot, i32 0, i32 -110, !dbg !12367
  store i32 %cond, i32* %tmp, align 4, !dbg !12394
  %18 = load i32, i32* %tmp, align 4, !dbg !12367
  %tobool33 = icmp ne i32 %18, 0, !dbg !12395
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !12396

if.then34:                                        ; preds = %for.end
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12397
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 36, !dbg !12397
  %20 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12397
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0)) #13, !dbg !12397
  br label %if.end35, !dbg !12397

if.end35:                                         ; preds = %if.then34, %for.end
  br label %if.end36, !dbg !12398

if.end36:                                         ; preds = %if.end35, %land.lhs.true, %entry
  ret void, !dbg !12399
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_ctrl_thld(%struct.dw_mci* %host, %struct.mmc_data* %data) #0 !dbg !12400 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %blksz = alloca i32, align 4
  %blksz_depth = alloca i32, align 4
  %fifo_depth = alloca i32, align 4
  %thld_size = alloca i16, align 2
  %enable = alloca i8, align 1
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12401, metadata !DIExpression()), !dbg !12402
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !12403, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.declare(metadata i32* %blksz, metadata !12405, metadata !DIExpression()), !dbg !12406
  %0 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12407
  %blksz1 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %0, i32 0, i32 2, !dbg !12408
  %1 = load i32, i32* %blksz1, align 8, !dbg !12408
  store i32 %1, i32* %blksz, align 4, !dbg !12406
  call void @llvm.dbg.declare(metadata i32* %blksz_depth, metadata !12409, metadata !DIExpression()), !dbg !12410
  call void @llvm.dbg.declare(metadata i32* %fifo_depth, metadata !12411, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.declare(metadata i16* %thld_size, metadata !12413, metadata !DIExpression()), !dbg !12414
  call void @llvm.dbg.declare(metadata i8* %enable, metadata !12415, metadata !DIExpression()), !dbg !12416
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12417
  %verid = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 35, !dbg !12419
  %3 = load i16, i16* %verid, align 4, !dbg !12419
  %conv = zext i16 %3 to i32, !dbg !12417
  %cmp = icmp slt i32 %conv, 9226, !dbg !12420
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12421

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12422
  %verid3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 35, !dbg !12423
  %5 = load i16, i16* %verid3, align 4, !dbg !12423
  %conv4 = zext i16 %5 to i32, !dbg !12422
  %cmp5 = icmp slt i32 %conv4, 10250, !dbg !12424
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !12425

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12426
  %flags = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %6, i32 0, i32 6, !dbg !12427
  %7 = load i32, i32* %flags, align 8, !dbg !12427
  %conv7 = zext i32 %7 to i64, !dbg !12426
  %and = and i64 %conv7, 256, !dbg !12428
  %tobool = icmp ne i64 %and, 0, !dbg !12428
  br i1 %tobool, label %if.then, label %if.end, !dbg !12429

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %return, !dbg !12430

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12431
  %flags8 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %8, i32 0, i32 6, !dbg !12433
  %9 = load i32, i32* %flags8, align 8, !dbg !12433
  %conv9 = zext i32 %9 to i64, !dbg !12431
  %and10 = and i64 %conv9, 256, !dbg !12434
  %tobool11 = icmp ne i64 %and10, 0, !dbg !12434
  br i1 %tobool11, label %land.lhs.true12, label %if.end17, !dbg !12435

land.lhs.true12:                                  ; preds = %if.end
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12436
  %timing = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 13, !dbg !12437
  %11 = load i8, i8* %timing, align 4, !dbg !12437
  %conv13 = zext i8 %11 to i32, !dbg !12436
  %cmp14 = icmp ne i32 %conv13, 10, !dbg !12438
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12439

if.then16:                                        ; preds = %land.lhs.true12
  br label %disable, !dbg !12440

if.end17:                                         ; preds = %land.lhs.true12, %if.end
  %12 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12441
  %flags18 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %12, i32 0, i32 6, !dbg !12443
  %13 = load i32, i32* %flags18, align 8, !dbg !12443
  %conv19 = zext i32 %13 to i64, !dbg !12441
  %and20 = and i64 %conv19, 256, !dbg !12444
  %tobool21 = icmp ne i64 %and20, 0, !dbg !12444
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !12445

if.then22:                                        ; preds = %if.end17
  store i8 4, i8* %enable, align 1, !dbg !12446
  br label %if.end23, !dbg !12447

if.else:                                          ; preds = %if.end17
  store i8 1, i8* %enable, align 1, !dbg !12448
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then22
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12449
  %timing24 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 13, !dbg !12451
  %15 = load i8, i8* %timing24, align 4, !dbg !12451
  %conv25 = zext i8 %15 to i32, !dbg !12449
  %cmp26 = icmp ne i32 %conv25, 9, !dbg !12452
  br i1 %cmp26, label %land.lhs.true28, label %if.end39, !dbg !12453

land.lhs.true28:                                  ; preds = %if.end23
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12454
  %timing29 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 13, !dbg !12455
  %17 = load i8, i8* %timing29, align 4, !dbg !12455
  %conv30 = zext i8 %17 to i32, !dbg !12454
  %cmp31 = icmp ne i32 %conv30, 6, !dbg !12456
  br i1 %cmp31, label %land.lhs.true33, label %if.end39, !dbg !12457

land.lhs.true33:                                  ; preds = %land.lhs.true28
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12458
  %timing34 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 13, !dbg !12459
  %19 = load i8, i8* %timing34, align 4, !dbg !12459
  %conv35 = zext i8 %19 to i32, !dbg !12458
  %cmp36 = icmp ne i32 %conv35, 10, !dbg !12460
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12461

if.then38:                                        ; preds = %land.lhs.true33
  br label %disable, !dbg !12462

if.end39:                                         ; preds = %land.lhs.true33, %land.lhs.true28, %if.end23
  %20 = load i32, i32* %blksz, align 4, !dbg !12463
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12464
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 44, !dbg !12465
  %22 = load i32, i32* %data_shift, align 4, !dbg !12465
  %shl = shl i32 1, %22, !dbg !12466
  %div = udiv i32 %20, %shl, !dbg !12467
  store i32 %div, i32* %blksz_depth, align 4, !dbg !12468
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12469
  %fifo_depth40 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 43, !dbg !12470
  %24 = load i32, i32* %fifo_depth40, align 8, !dbg !12470
  store i32 %24, i32* %fifo_depth, align 4, !dbg !12471
  %25 = load i32, i32* %blksz_depth, align 4, !dbg !12472
  %26 = load i32, i32* %fifo_depth, align 4, !dbg !12474
  %cmp41 = icmp ugt i32 %25, %26, !dbg !12475
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !12476

if.then43:                                        ; preds = %if.end39
  br label %disable, !dbg !12477

if.end44:                                         ; preds = %if.end39
  %27 = load i32, i32* %blksz, align 4, !dbg !12478
  %conv45 = trunc i32 %27 to i16, !dbg !12478
  store i16 %conv45, i16* %thld_size, align 2, !dbg !12479
  %28 = load i16, i16* %thld_size, align 2, !dbg !12480
  %conv46 = zext i16 %28 to i32, !dbg !12480
  %and47 = and i32 %conv46, 4095, !dbg !12480
  %shl48 = shl i32 %and47, 16, !dbg !12480
  %29 = load i8, i8* %enable, align 1, !dbg !12480
  %conv49 = zext i8 %29 to i32, !dbg !12480
  %or = or i32 %shl48, %conv49, !dbg !12480
  %30 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12480
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %30, i32 0, i32 2, !dbg !12480
  %31 = load i8*, i8** %regs, align 8, !dbg !12480
  %add.ptr = getelementptr i8, i8* %31, i64 256, !dbg !12480
  call void @__writel(i32 %or, i8* %add.ptr) #12, !dbg !12480
  br label %return, !dbg !12481

disable:                                          ; preds = %if.then43, %if.then38, %if.then16
  call void @llvm.dbg.label(metadata !12482), !dbg !12483
  %32 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12484
  %regs50 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %32, i32 0, i32 2, !dbg !12484
  %33 = load i8*, i8** %regs50, align 8, !dbg !12484
  %add.ptr51 = getelementptr i8, i8* %33, i64 256, !dbg !12484
  call void @__writel(i32 0, i8* %add.ptr51) #12, !dbg !12484
  br label %return, !dbg !12485

return:                                           ; preds = %disable, %if.end44, %if.then
  ret void, !dbg !12485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_submit_data_dma(%struct.dw_mci* %host, %struct.mmc_data* %data) #0 !dbg !12486 {
entry:
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !6938, metadata !DIExpression()), !dbg !12487
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !12489
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !12490
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %irqflags = alloca i64, align 8
  %sg_len = alloca i32, align 4
  %temp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy21 = alloca i64, align 8
  %__dummy222 = alloca i64, align 8
  %tmp25 = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !12501, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata i32* %sg_len, metadata !12503, metadata !DIExpression()), !dbg !12504
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !12505, metadata !DIExpression()), !dbg !12506
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12507
  %using_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 15, !dbg !12508
  store i32 0, i32* %using_dma, align 4, !dbg !12509
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12510
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 14, !dbg !12512
  %2 = load i32, i32* %use_dma, align 8, !dbg !12512
  %tobool = icmp ne i32 %2, 0, !dbg !12510
  br i1 %tobool, label %if.end, label %if.then, !dbg !12513

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !12514
  br label %return, !dbg !12514

if.end:                                           ; preds = %entry
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12515
  %4 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12516
  %call = call i32 @dw_mci_pre_dma_transfer(%struct.dw_mci* %3, %struct.mmc_data* %4, i32 2) #12, !dbg !12517
  store i32 %call, i32* %sg_len, align 4, !dbg !12518
  %5 = load i32, i32* %sg_len, align 4, !dbg !12519
  %cmp = icmp slt i32 %5, 0, !dbg !12521
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12522

if.then1:                                         ; preds = %if.end
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12523
  %dma_ops = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 19, !dbg !12525
  %7 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops, align 8, !dbg !12525
  %stop = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %7, i32 0, i32 3, !dbg !12526
  %8 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %stop, align 8, !dbg !12526
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12527
  call void %8(%struct.dw_mci* %9) #12, !dbg !12523
  %10 = load i32, i32* %sg_len, align 4, !dbg !12528
  store i32 %10, i32* %retval, align 4, !dbg !12529
  br label %return, !dbg !12529

if.end2:                                          ; preds = %if.end
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12530
  %using_dma3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 15, !dbg !12531
  store i32 1, i32* %using_dma3, align 4, !dbg !12532
  %12 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12533
  %use_dma4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %12, i32 0, i32 14, !dbg !12535
  %13 = load i32, i32* %use_dma4, align 8, !dbg !12535
  %cmp5 = icmp eq i32 %13, 1, !dbg !12536
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12537

if.then6:                                         ; preds = %if.end2
  br label %if.end7, !dbg !12538

if.end7:                                          ; preds = %if.then6, %if.end2
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12539
  %prev_blksz = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 12, !dbg !12541
  %15 = load i32, i32* %prev_blksz, align 8, !dbg !12541
  %16 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12542
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %16, i32 0, i32 2, !dbg !12543
  %17 = load i32, i32* %blksz, align 8, !dbg !12543
  %cmp8 = icmp ne i32 %15, %17, !dbg !12544
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !12545

if.then9:                                         ; preds = %if.end7
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12546
  %19 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12547
  call void @dw_mci_adjust_fifoth(%struct.dw_mci* %18, %struct.mmc_data* %19) #12, !dbg !12548
  br label %if.end10, !dbg !12548

if.end10:                                         ; preds = %if.then9, %if.end7
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12549
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 2, !dbg !12549
  %21 = load i8*, i8** %regs, align 8, !dbg !12549
  %add.ptr = getelementptr i8, i8* %21, i64 0, !dbg !12549
  %call11 = call i32 @__readl(i8* %add.ptr) #12, !dbg !12549
  store i32 %call11, i32* %temp, align 4, !dbg !12550
  %22 = load i32, i32* %temp, align 4, !dbg !12551
  %conv = zext i32 %22 to i64, !dbg !12551
  %or = or i64 %conv, 32, !dbg !12551
  %conv12 = trunc i64 %or to i32, !dbg !12551
  store i32 %conv12, i32* %temp, align 4, !dbg !12551
  %23 = load i32, i32* %temp, align 4, !dbg !12552
  %24 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12552
  %regs13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %24, i32 0, i32 2, !dbg !12552
  %25 = load i8*, i8** %regs13, align 8, !dbg !12552
  %add.ptr14 = getelementptr i8, i8* %25, i64 0, !dbg !12552
  call void @__writel(i32 %23, i8* %add.ptr14) #12, !dbg !12552
  br label %do.body, !dbg !12553

do.body:                                          ; preds = %if.end10
  br label %do.body15, !dbg !12554

do.body15:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12555, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12558, metadata !DIExpression()), !dbg !12557
  %cmp16 = icmp eq i64* %__dummy, %__dummy2, !dbg !12557
  %conv17 = zext i1 %cmp16 to i32, !dbg !12557
  store i32 1, i32* %tmp, align 4, !dbg !12557
  %26 = load i32, i32* %tmp, align 4, !dbg !12557
  br label %do.body18, !dbg !12559

do.body18:                                        ; preds = %do.body15
  br label %do.body19, !dbg !12560

do.body19:                                        ; preds = %do.body18
  br label %do.body20, !dbg !12561

do.body20:                                        ; preds = %do.body19
  call void @llvm.dbg.declare(metadata i64* %__dummy21, metadata !12563, metadata !DIExpression()), !dbg !12566
  call void @llvm.dbg.declare(metadata i64* %__dummy222, metadata !12567, metadata !DIExpression()), !dbg !12566
  %cmp23 = icmp eq i64* %__dummy21, %__dummy222, !dbg !12566
  %conv24 = zext i1 %cmp23 to i32, !dbg !12566
  store i32 1, i32* %tmp25, align 4, !dbg !12566
  %27 = load i32, i32* %tmp25, align 4, !dbg !12566
  %call26 = call i64 @arch_local_irq_save() #12, !dbg !12568
  store i64 %call26, i64* %irqflags, align 8, !dbg !12568
  br label %do.end, !dbg !12568

do.end:                                           ; preds = %do.body20
  br label %do.end27, !dbg !12561

do.end27:                                         ; preds = %do.end
  br label %do.body28, !dbg !12560

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12569, !srcloc !12570
  br label %do.body29, !dbg !12569

do.body29:                                        ; preds = %do.body28
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12571
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 1, !dbg !12571
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12572
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !12573
  %rlock.i = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !12573
  br label %do.end31, !dbg !12571

do.end31:                                         ; preds = %do.body29
  br label %do.end32, !dbg !12569

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !12560

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !12559

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !12554

do.end35:                                         ; preds = %do.end34
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12574
  %regs36 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 2, !dbg !12574
  %32 = load i8*, i8** %regs36, align 8, !dbg !12574
  %add.ptr37 = getelementptr i8, i8* %32, i64 36, !dbg !12574
  %call38 = call i32 @__readl(i8* %add.ptr37) #12, !dbg !12574
  store i32 %call38, i32* %temp, align 4, !dbg !12575
  %33 = load i32, i32* %temp, align 4, !dbg !12576
  %conv39 = zext i32 %33 to i64, !dbg !12576
  %and = and i64 %conv39, -49, !dbg !12576
  %conv40 = trunc i64 %and to i32, !dbg !12576
  store i32 %conv40, i32* %temp, align 4, !dbg !12576
  %34 = load i32, i32* %temp, align 4, !dbg !12577
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12577
  %regs41 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 2, !dbg !12577
  %36 = load i8*, i8** %regs41, align 8, !dbg !12577
  %add.ptr42 = getelementptr i8, i8* %36, i64 36, !dbg !12577
  call void @__writel(i32 %34, i8* %add.ptr42) #12, !dbg !12577
  %37 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12578
  %irq_lock43 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %37, i32 0, i32 1, !dbg !12579
  %38 = load i64, i64* %irqflags, align 8, !dbg !12580
  store %struct.spinlock* %irq_lock43, %struct.spinlock** %lock.addr.i51, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !12581
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !12581
  store i32 1, i32* %tmp.i, align 4, !dbg !12581
  %39 = load i32, i32* %tmp.i, align 4, !dbg !12581
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !12582
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !12582
  store i32 1, i32* %tmp8.i, align 4, !dbg !12582
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !12582
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !12583
  call void @arch_local_irq_restore(i64 %41) #14, !dbg !12583
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12584, !srcloc !7041
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !12585
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !12585
  %rlock.i52 = bitcast %union.anon* %43 to %struct.raw_spinlock*, !dbg !12585
  %44 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12586
  %dma_ops44 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %44, i32 0, i32 19, !dbg !12588
  %45 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops44, align 8, !dbg !12588
  %start = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %45, i32 0, i32 1, !dbg !12589
  %46 = load i32 (%struct.dw_mci*, i32)*, i32 (%struct.dw_mci*, i32)** %start, align 8, !dbg !12589
  %47 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12590
  %48 = load i32, i32* %sg_len, align 4, !dbg !12591
  %call45 = call i32 %46(%struct.dw_mci* %47, i32 %48) #12, !dbg !12586
  %tobool46 = icmp ne i32 %call45, 0, !dbg !12586
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !12592

if.then47:                                        ; preds = %do.end35
  %49 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12593
  %dma_ops48 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %49, i32 0, i32 19, !dbg !12595
  %50 = load %struct.dw_mci_dma_ops*, %struct.dw_mci_dma_ops** %dma_ops48, align 8, !dbg !12595
  %stop49 = getelementptr inbounds %struct.dw_mci_dma_ops, %struct.dw_mci_dma_ops* %50, i32 0, i32 3, !dbg !12596
  %51 = load void (%struct.dw_mci*)*, void (%struct.dw_mci*)** %stop49, align 8, !dbg !12596
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12597
  call void %51(%struct.dw_mci* %52) #12, !dbg !12593
  store i32 -19, i32* %retval, align 4, !dbg !12598
  br label %return, !dbg !12598

if.end50:                                         ; preds = %do.end35
  store i32 0, i32* %retval, align 4, !dbg !12599
  br label %return, !dbg !12599

return:                                           ; preds = %if.end50, %if.then47, %if.then1, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !12600
  ret i32 %53, !dbg !12600
}

; Function Attrs: noredzone
declare dso_local void @sg_miter_start(%struct.sg_mapping_iter*, %struct.scatterlist*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_adjust_fifoth(%struct.dw_mci* %host, %struct.mmc_data* %data) #0 !dbg !6353 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %blksz = alloca i32, align 4
  %fifo_width = alloca i32, align 4
  %blksz_depth = alloca i32, align 4
  %fifoth_val = alloca i32, align 4
  %msize = alloca i32, align 4
  %rx_wmark = alloca i32, align 4
  %tx_wmark = alloca i32, align 4
  %tx_wmark_invers = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12601, metadata !DIExpression()), !dbg !12602
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.declare(metadata i32* %blksz, metadata !12605, metadata !DIExpression()), !dbg !12606
  %0 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12607
  %blksz1 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %0, i32 0, i32 2, !dbg !12608
  %1 = load i32, i32* %blksz1, align 8, !dbg !12608
  store i32 %1, i32* %blksz, align 4, !dbg !12606
  call void @llvm.dbg.declare(metadata i32* %fifo_width, metadata !12609, metadata !DIExpression()), !dbg !12610
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12611
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 44, !dbg !12612
  %3 = load i32, i32* %data_shift, align 4, !dbg !12612
  %shl = shl i32 1, %3, !dbg !12613
  store i32 %shl, i32* %fifo_width, align 4, !dbg !12610
  call void @llvm.dbg.declare(metadata i32* %blksz_depth, metadata !12614, metadata !DIExpression()), !dbg !12615
  %4 = load i32, i32* %blksz, align 4, !dbg !12616
  %5 = load i32, i32* %fifo_width, align 4, !dbg !12617
  %div = udiv i32 %4, %5, !dbg !12618
  store i32 %div, i32* %blksz_depth, align 4, !dbg !12615
  call void @llvm.dbg.declare(metadata i32* %fifoth_val, metadata !12619, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.declare(metadata i32* %msize, metadata !12621, metadata !DIExpression()), !dbg !12622
  store i32 0, i32* %msize, align 4, !dbg !12622
  call void @llvm.dbg.declare(metadata i32* %rx_wmark, metadata !12623, metadata !DIExpression()), !dbg !12624
  store i32 1, i32* %rx_wmark, align 4, !dbg !12624
  call void @llvm.dbg.declare(metadata i32* %tx_wmark, metadata !12625, metadata !DIExpression()), !dbg !12626
  call void @llvm.dbg.declare(metadata i32* %tx_wmark_invers, metadata !12627, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !12629, metadata !DIExpression()), !dbg !12630
  store i32 7, i32* %idx, align 4, !dbg !12630
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12631
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 14, !dbg !12633
  %7 = load i32, i32* %use_dma, align 8, !dbg !12633
  %tobool = icmp ne i32 %7, 0, !dbg !12631
  br i1 %tobool, label %if.end, label %if.then, !dbg !12634

if.then:                                          ; preds = %entry
  br label %return, !dbg !12635

if.end:                                           ; preds = %entry
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12636
  %fifo_depth = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 43, !dbg !12637
  %9 = load i32, i32* %fifo_depth, align 8, !dbg !12637
  %div2 = sdiv i32 %9, 2, !dbg !12638
  store i32 %div2, i32* %tx_wmark, align 4, !dbg !12639
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12640
  %fifo_depth3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 43, !dbg !12641
  %11 = load i32, i32* %fifo_depth3, align 8, !dbg !12641
  %12 = load i32, i32* %tx_wmark, align 4, !dbg !12642
  %sub = sub i32 %11, %12, !dbg !12643
  store i32 %sub, i32* %tx_wmark_invers, align 4, !dbg !12644
  %13 = load i32, i32* %blksz, align 4, !dbg !12645
  %14 = load i32, i32* %fifo_width, align 4, !dbg !12647
  %rem = urem i32 %13, %14, !dbg !12648
  %tobool4 = icmp ne i32 %rem, 0, !dbg !12648
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !12649

if.then5:                                         ; preds = %if.end
  br label %done, !dbg !12650

if.end6:                                          ; preds = %if.end
  br label %do.body, !dbg !12651

do.body:                                          ; preds = %do.cond, %if.end6
  %15 = load i32, i32* %blksz_depth, align 4, !dbg !12652
  %16 = load i32, i32* %idx, align 4, !dbg !12655
  %idxprom = sext i32 %16 to i64, !dbg !12656
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @dw_mci_adjust_fifoth.mszs, i64 0, i64 %idxprom, !dbg !12656
  %17 = load i32, i32* %arrayidx, align 4, !dbg !12656
  %rem7 = urem i32 %15, %17, !dbg !12657
  %tobool8 = icmp ne i32 %rem7, 0, !dbg !12657
  br i1 %tobool8, label %if.end17, label %lor.lhs.false, !dbg !12658

lor.lhs.false:                                    ; preds = %do.body
  %18 = load i32, i32* %tx_wmark_invers, align 4, !dbg !12659
  %19 = load i32, i32* %idx, align 4, !dbg !12660
  %idxprom9 = sext i32 %19 to i64, !dbg !12661
  %arrayidx10 = getelementptr [8 x i32], [8 x i32]* @dw_mci_adjust_fifoth.mszs, i64 0, i64 %idxprom9, !dbg !12661
  %20 = load i32, i32* %arrayidx10, align 4, !dbg !12661
  %rem11 = urem i32 %18, %20, !dbg !12662
  %tobool12 = icmp ne i32 %rem11, 0, !dbg !12662
  br i1 %tobool12, label %if.end17, label %if.then13, !dbg !12663

if.then13:                                        ; preds = %lor.lhs.false
  %21 = load i32, i32* %idx, align 4, !dbg !12664
  store i32 %21, i32* %msize, align 4, !dbg !12666
  %22 = load i32, i32* %idx, align 4, !dbg !12667
  %idxprom14 = sext i32 %22 to i64, !dbg !12668
  %arrayidx15 = getelementptr [8 x i32], [8 x i32]* @dw_mci_adjust_fifoth.mszs, i64 0, i64 %idxprom14, !dbg !12668
  %23 = load i32, i32* %arrayidx15, align 4, !dbg !12668
  %sub16 = sub i32 %23, 1, !dbg !12669
  store i32 %sub16, i32* %rx_wmark, align 4, !dbg !12670
  br label %do.end, !dbg !12671

if.end17:                                         ; preds = %lor.lhs.false, %do.body
  br label %do.cond, !dbg !12672

do.cond:                                          ; preds = %if.end17
  %24 = load i32, i32* %idx, align 4, !dbg !12673
  %dec = add i32 %24, -1, !dbg !12673
  store i32 %dec, i32* %idx, align 4, !dbg !12673
  %cmp = icmp sgt i32 %dec, 0, !dbg !12674
  br i1 %cmp, label %do.body, label %do.end, !dbg !12672, !llvm.loop !12675

do.end:                                           ; preds = %do.cond, %if.then13
  br label %done, !dbg !12672

done:                                             ; preds = %do.end, %if.then5
  call void @llvm.dbg.label(metadata !12677), !dbg !12678
  %25 = load i32, i32* %msize, align 4, !dbg !12679
  %and = and i32 %25, 7, !dbg !12679
  %shl18 = shl i32 %and, 28, !dbg !12679
  %26 = load i32, i32* %rx_wmark, align 4, !dbg !12679
  %and19 = and i32 %26, 4095, !dbg !12679
  %shl20 = shl i32 %and19, 16, !dbg !12679
  %or = or i32 %shl18, %shl20, !dbg !12679
  %27 = load i32, i32* %tx_wmark, align 4, !dbg !12679
  %and21 = and i32 %27, 4095, !dbg !12679
  %or22 = or i32 %or, %and21, !dbg !12679
  store i32 %or22, i32* %fifoth_val, align 4, !dbg !12680
  %28 = load i32, i32* %fifoth_val, align 4, !dbg !12681
  %29 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12681
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %29, i32 0, i32 2, !dbg !12681
  %30 = load i8*, i8** %regs, align 8, !dbg !12681
  %add.ptr = getelementptr i8, i8* %30, i64 76, !dbg !12681
  call void @__writel(i32 %28, i8* %add.ptr) #12, !dbg !12681
  br label %return, !dbg !12682

return:                                           ; preds = %done, %if.then
  ret void, !dbg !12682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_pre_dma_transfer(%struct.dw_mci* %host, %struct.mmc_data* %data, i32 %cookie) #0 !dbg !12683 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.dw_mci*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %cookie.addr = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %i = alloca i32, align 4
  %sg_len = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12686, metadata !DIExpression()), !dbg !12687
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !12688, metadata !DIExpression()), !dbg !12689
  store i32 %cookie, i32* %cookie.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cookie.addr, metadata !12690, metadata !DIExpression()), !dbg !12691
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !12692, metadata !DIExpression()), !dbg !12693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12694, metadata !DIExpression()), !dbg !12695
  call void @llvm.dbg.declare(metadata i32* %sg_len, metadata !12696, metadata !DIExpression()), !dbg !12697
  %0 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12698
  %host_cookie = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %0, i32 0, i32 13, !dbg !12700
  %1 = load i32, i32* %host_cookie, align 8, !dbg !12700
  %cmp = icmp eq i32 %1, 1, !dbg !12701
  br i1 %cmp, label %if.then, label %if.end, !dbg !12702

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12703
  %sg_len1 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %2, i32 0, i32 10, !dbg !12704
  %3 = load i32, i32* %sg_len1, align 8, !dbg !12704
  store i32 %3, i32* %retval, align 4, !dbg !12705
  br label %return, !dbg !12705

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12706
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %4, i32 0, i32 3, !dbg !12708
  %5 = load i32, i32* %blocks, align 4, !dbg !12708
  %6 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12709
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %6, i32 0, i32 2, !dbg !12710
  %7 = load i32, i32* %blksz, align 8, !dbg !12710
  %mul = mul i32 %5, %7, !dbg !12711
  %cmp2 = icmp ult i32 %mul, 16, !dbg !12712
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !12713

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12714
  br label %return, !dbg !12714

if.end4:                                          ; preds = %if.end
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12715
  %blksz5 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %8, i32 0, i32 2, !dbg !12717
  %9 = load i32, i32* %blksz5, align 8, !dbg !12717
  %and = and i32 %9, 3, !dbg !12718
  %tobool = icmp ne i32 %and, 0, !dbg !12718
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !12719

if.then6:                                         ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !12720
  br label %return, !dbg !12720

if.end7:                                          ; preds = %if.end4
  store i32 0, i32* %i, align 4, !dbg !12721
  %10 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12721
  %sg8 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %10, i32 0, i32 12, !dbg !12721
  %11 = load %struct.scatterlist*, %struct.scatterlist** %sg8, align 8, !dbg !12721
  store %struct.scatterlist* %11, %struct.scatterlist** %sg, align 8, !dbg !12721
  br label %for.cond, !dbg !12721

for.cond:                                         ; preds = %for.inc, %if.end7
  %12 = load i32, i32* %i, align 4, !dbg !12723
  %13 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12723
  %sg_len9 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %13, i32 0, i32 10, !dbg !12723
  %14 = load i32, i32* %sg_len9, align 8, !dbg !12723
  %cmp10 = icmp ult i32 %12, %14, !dbg !12723
  br i1 %cmp10, label %for.body, label %for.end, !dbg !12721

for.body:                                         ; preds = %for.cond
  %15 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12725
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %15, i32 0, i32 1, !dbg !12728
  %16 = load i32, i32* %offset, align 8, !dbg !12728
  %and11 = and i32 %16, 3, !dbg !12729
  %tobool12 = icmp ne i32 %and11, 0, !dbg !12729
  br i1 %tobool12, label %if.then15, label %lor.lhs.false, !dbg !12730

lor.lhs.false:                                    ; preds = %for.body
  %17 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12731
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %17, i32 0, i32 2, !dbg !12732
  %18 = load i32, i32* %length, align 4, !dbg !12732
  %and13 = and i32 %18, 3, !dbg !12733
  %tobool14 = icmp ne i32 %and13, 0, !dbg !12733
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !12734

if.then15:                                        ; preds = %lor.lhs.false, %for.body
  store i32 -22, i32* %retval, align 4, !dbg !12735
  br label %return, !dbg !12735

if.end16:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !12736

for.inc:                                          ; preds = %if.end16
  %19 = load i32, i32* %i, align 4, !dbg !12723
  %inc = add i32 %19, 1, !dbg !12723
  store i32 %inc, i32* %i, align 4, !dbg !12723
  %20 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !12723
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %20) #12, !dbg !12723
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !12723
  br label %for.cond, !dbg !12723, !llvm.loop !12737

for.end:                                          ; preds = %for.cond
  %21 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12739
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %21, i32 0, i32 36, !dbg !12739
  %22 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12739
  %23 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12739
  %sg17 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %23, i32 0, i32 12, !dbg !12739
  %24 = load %struct.scatterlist*, %struct.scatterlist** %sg17, align 8, !dbg !12739
  %25 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12739
  %sg_len18 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %25, i32 0, i32 10, !dbg !12739
  %26 = load i32, i32* %sg_len18, align 8, !dbg !12739
  %27 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12739
  %call19 = call i32 @mmc_get_dma_dir(%struct.mmc_data* %27) #12, !dbg !12739
  %call20 = call i32 @dma_map_sg_attrs(%struct.device* %22, %struct.scatterlist* %24, i32 %26, i32 %call19, i64 0) #12, !dbg !12739
  store i32 %call20, i32* %sg_len, align 4, !dbg !12740
  %28 = load i32, i32* %sg_len, align 4, !dbg !12741
  %cmp21 = icmp eq i32 %28, 0, !dbg !12743
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12744

if.then22:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !12745
  br label %return, !dbg !12745

if.end23:                                         ; preds = %for.end
  %29 = load i32, i32* %cookie.addr, align 4, !dbg !12746
  %30 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !12747
  %host_cookie24 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %30, i32 0, i32 13, !dbg !12748
  store i32 %29, i32* %host_cookie24, align 8, !dbg !12749
  %31 = load i32, i32* %sg_len, align 4, !dbg !12750
  store i32 %31, i32* %retval, align 4, !dbg !12751
  br label %return, !dbg !12751

return:                                           ; preds = %if.end23, %if.then22, %if.then15, %if.then6, %if.then3, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !12752
  ret i32 %32, !dbg !12752
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_map_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_set_cto(%struct.dw_mci* %host) #0 !dbg !12753 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !11190, metadata !DIExpression()), !dbg !12754
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !6938, metadata !DIExpression()), !dbg !12757
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6944, metadata !DIExpression()), !dbg !12759
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6365, metadata !DIExpression()), !dbg !12760
  %host.addr = alloca %struct.dw_mci*, align 8
  %cto_clks = alloca i32, align 4
  %cto_div = alloca i32, align 4
  %cto_ms = alloca i32, align 4
  %irqflags = alloca i64, align 8
  %_tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp13 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12767, metadata !DIExpression()), !dbg !12768
  call void @llvm.dbg.declare(metadata i32* %cto_clks, metadata !12769, metadata !DIExpression()), !dbg !12770
  call void @llvm.dbg.declare(metadata i32* %cto_div, metadata !12771, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.declare(metadata i32* %cto_ms, metadata !12773, metadata !DIExpression()), !dbg !12774
  call void @llvm.dbg.declare(metadata i64* %irqflags, metadata !12775, metadata !DIExpression()), !dbg !12776
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12777
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 2, !dbg !12777
  %1 = load i8*, i8** %regs, align 8, !dbg !12777
  %add.ptr = getelementptr i8, i8* %1, i64 20, !dbg !12777
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !12777
  %and = and i32 %call, 255, !dbg !12778
  store i32 %and, i32* %cto_clks, align 4, !dbg !12779
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12780
  %regs1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 2, !dbg !12780
  %3 = load i8*, i8** %regs1, align 8, !dbg !12780
  %add.ptr2 = getelementptr i8, i8* %3, i64 8, !dbg !12780
  %call3 = call i32 @__readl(i8* %add.ptr2) #12, !dbg !12780
  %and4 = and i32 %call3, 255, !dbg !12781
  %mul = mul i32 %and4, 2, !dbg !12782
  store i32 %mul, i32* %cto_div, align 4, !dbg !12783
  %4 = load i32, i32* %cto_div, align 4, !dbg !12784
  %cmp = icmp eq i32 %4, 0, !dbg !12786
  br i1 %cmp, label %if.then, label %if.end, !dbg !12787

if.then:                                          ; preds = %entry
  store i32 1, i32* %cto_div, align 4, !dbg !12788
  br label %if.end, !dbg !12789

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %_tmp, metadata !12790, metadata !DIExpression()), !dbg !12792
  %5 = load i32, i32* %cto_clks, align 4, !dbg !12792
  %conv = zext i32 %5 to i64, !dbg !12792
  %mul5 = mul i64 1000, %conv, !dbg !12792
  %6 = load i32, i32* %cto_div, align 4, !dbg !12792
  %conv6 = zext i32 %6 to i64, !dbg !12792
  %mul7 = mul i64 %mul5, %conv6, !dbg !12792
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12792
  %bus_hz = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 32, !dbg !12792
  %8 = load i32, i32* %bus_hz, align 8, !dbg !12792
  %conv8 = zext i32 %8 to i64, !dbg !12792
  %add = add i64 %mul7, %conv8, !dbg !12792
  %sub = sub i64 %add, 1, !dbg !12792
  store i64 %sub, i64* %_tmp, align 8, !dbg !12792
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !12793, metadata !DIExpression()), !dbg !12795
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12795
  %bus_hz9 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 32, !dbg !12795
  %10 = load i32, i32* %bus_hz9, align 8, !dbg !12795
  store i32 %10, i32* %__base, align 4, !dbg !12795
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !12796, metadata !DIExpression()), !dbg !12795
  %11 = load i64, i64* %_tmp, align 8, !dbg !12795
  %12 = load i32, i32* %__base, align 4, !dbg !12795
  %conv10 = zext i32 %12 to i64, !dbg !12795
  %rem = urem i64 %11, %conv10, !dbg !12795
  %conv11 = trunc i64 %rem to i32, !dbg !12795
  store i32 %conv11, i32* %__rem, align 4, !dbg !12795
  %13 = load i64, i64* %_tmp, align 8, !dbg !12795
  %14 = load i32, i32* %__base, align 4, !dbg !12795
  %conv12 = zext i32 %14 to i64, !dbg !12795
  %div = udiv i64 %13, %conv12, !dbg !12795
  store i64 %div, i64* %_tmp, align 8, !dbg !12795
  %15 = load i32, i32* %__rem, align 4, !dbg !12795
  store i32 %15, i32* %tmp, align 4, !dbg !12795
  %16 = load i32, i32* %tmp, align 4, !dbg !12795
  %17 = load i64, i64* %_tmp, align 8, !dbg !12792
  store i64 %17, i64* %tmp13, align 8, !dbg !12792
  %18 = load i64, i64* %tmp13, align 8, !dbg !12792
  %conv14 = trunc i64 %18 to i32, !dbg !12797
  store i32 %conv14, i32* %cto_ms, align 4, !dbg !12798
  %19 = load i32, i32* %cto_ms, align 4, !dbg !12799
  %add15 = add i32 %19, 10, !dbg !12799
  store i32 %add15, i32* %cto_ms, align 4, !dbg !12799
  br label %do.body, !dbg !12800

do.body:                                          ; preds = %if.end
  br label %do.body16, !dbg !12801

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12802, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12805, metadata !DIExpression()), !dbg !12804
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !12804
  %conv18 = zext i1 %cmp17 to i32, !dbg !12804
  store i32 1, i32* %tmp19, align 4, !dbg !12804
  %20 = load i32, i32* %tmp19, align 4, !dbg !12804
  br label %do.body20, !dbg !12806

do.body20:                                        ; preds = %do.body16
  br label %do.body21, !dbg !12807

do.body21:                                        ; preds = %do.body20
  br label %do.body22, !dbg !12808

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !12814, metadata !DIExpression()), !dbg !12813
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !12813
  %conv26 = zext i1 %cmp25 to i32, !dbg !12813
  store i32 1, i32* %tmp27, align 4, !dbg !12813
  %21 = load i32, i32* %tmp27, align 4, !dbg !12813
  %call28 = call i64 @arch_local_irq_save() #12, !dbg !12815
  store i64 %call28, i64* %irqflags, align 8, !dbg !12815
  br label %do.end, !dbg !12815

do.end:                                           ; preds = %do.body22
  br label %do.end29, !dbg !12808

do.end29:                                         ; preds = %do.end
  br label %do.body30, !dbg !12807

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12816, !srcloc !12817
  br label %do.body31, !dbg !12816

do.body31:                                        ; preds = %do.body30
  %22 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12818
  %irq_lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %22, i32 0, i32 1, !dbg !12818
  store %struct.spinlock* %irq_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12819
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !12820
  %rlock.i = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !12820
  br label %do.end33, !dbg !12818

do.end33:                                         ; preds = %do.body31
  br label %do.end34, !dbg !12816

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !12807

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !12806

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !12801

do.end37:                                         ; preds = %do.end36
  %25 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12821
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %25, i32 0, i32 28, !dbg !12822
  %call38 = call zeroext i1 @test_bit(i64 0, i64* %pending_events) #12, !dbg !12823
  br i1 %call38, label %if.end44, label %if.then39, !dbg !12824

if.then39:                                        ; preds = %do.end37
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12825
  %cto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %26, i32 0, i32 55, !dbg !12826
  %27 = load volatile i64, i64* @jiffies, align 8, !dbg !12827
  %28 = load i32, i32* %cto_ms, align 4, !dbg !12828
  store i32 %28, i32* %m.addr.i, align 4
  %29 = load i32, i32* %m.addr.i, align 4, !dbg !12829
  %30 = call i1 @llvm.is.constant.i32(i32 %29) #8, !dbg !12830
  br i1 %30, label %if.then.i, label %if.else.i, !dbg !12831

if.then.i:                                        ; preds = %if.then39
  %31 = load i32, i32* %m.addr.i, align 4, !dbg !12832
  %cmp.i = icmp slt i32 %31, 0, !dbg !12833
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12834

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !12835
  br label %msecs_to_jiffies.exit, !dbg !12835

if.end.i:                                         ; preds = %if.then.i
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !12836
  %call.i = call i64 @_msecs_to_jiffies(i32 %32) #14, !dbg !12837
  store i64 %call.i, i64* %retval.i, align 8, !dbg !12838
  br label %msecs_to_jiffies.exit, !dbg !12838

if.else.i:                                        ; preds = %if.then39
  %33 = load i32, i32* %m.addr.i, align 4, !dbg !12839
  %call2.i = call i64 @__msecs_to_jiffies(i32 %33) #14, !dbg !12840
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !12841
  br label %msecs_to_jiffies.exit, !dbg !12841

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %34 = load i64, i64* %retval.i, align 8, !dbg !12842
  %add41 = add i64 %27, %34, !dbg !12843
  %add42 = add i64 %add41, 1, !dbg !12844
  %call43 = call i32 @mod_timer(%struct.timer_list* %cto_timer, i64 %add42) #12, !dbg !12845
  br label %if.end44, !dbg !12845

if.end44:                                         ; preds = %msecs_to_jiffies.exit, %do.end37
  %35 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12846
  %irq_lock45 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %35, i32 0, i32 1, !dbg !12847
  %36 = load i64, i64* %irqflags, align 8, !dbg !12848
  store %struct.spinlock* %irq_lock45, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %36, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !304, metadata !7026, metadata !DIExpression()) #8, !dbg !12849
  call void @llvm.dbg.declare(metadata !304, metadata !7030, metadata !DIExpression()) #8, !dbg !12849
  store i32 1, i32* %tmp.i, align 4, !dbg !12849
  %37 = load i32, i32* %tmp.i, align 4, !dbg !12849
  call void @llvm.dbg.declare(metadata !304, metadata !7031, metadata !DIExpression()) #8, !dbg !12850
  call void @llvm.dbg.declare(metadata !304, metadata !7037, metadata !DIExpression()) #8, !dbg !12850
  store i32 1, i32* %tmp8.i, align 4, !dbg !12850
  %38 = load i32, i32* %tmp8.i, align 4, !dbg !12850
  %39 = load i64, i64* %flags.addr.i, align 8, !dbg !12851
  call void @arch_local_irq_restore(i64 %39) #14, !dbg !12851
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12852, !srcloc !7041
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !12853
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !12853
  %rlock.i47 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !12853
  ret void, !dbg !12854
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !12855 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !12856, metadata !DIExpression()), !dbg !12857
  %0 = load i32, i32* %m.addr, align 4, !dbg !12858
  %conv = zext i32 %0 to i64, !dbg !12858
  %add = add i64 %conv, 4, !dbg !12859
  %sub = sub i64 %add, 1, !dbg !12860
  %div = sdiv i64 %sub, 4, !dbg !12861
  ret i64 %div, !dbg !12862
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !12863 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !12868, metadata !DIExpression()), !dbg !12869
  br label %do.body, !dbg !12870

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12872

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12870
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !12870
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12870
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !12872
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !12870
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12874
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !12875
  %conv = zext i1 %cmp to i32, !dbg !12875
  ret i32 %conv, !dbg !12876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !12877 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12878, metadata !DIExpression()), !dbg !12879
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12880
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !12881
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12882
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !12883
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !12884
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12885
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !12886
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !12887
  ret void, !dbg !12888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_start_request(%struct.dw_mci* %host, %struct.dw_mci_slot* %slot) #0 !dbg !12889 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  %cmd = alloca %struct.mmc_command*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12892, metadata !DIExpression()), !dbg !12893
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !12894, metadata !DIExpression()), !dbg !12895
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !12896, metadata !DIExpression()), !dbg !12897
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !12898
  %mrq1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 3, !dbg !12899
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq1, align 8, !dbg !12899
  store %struct.mmc_request* %1, %struct.mmc_request** %mrq, align 8, !dbg !12897
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd, metadata !12900, metadata !DIExpression()), !dbg !12901
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !12902
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 0, !dbg !12903
  %3 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !12903
  %tobool = icmp ne %struct.mmc_command* %3, null, !dbg !12902
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12902

cond.true:                                        ; preds = %entry
  %4 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !12904
  %sbc2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %4, i32 0, i32 0, !dbg !12905
  %5 = load %struct.mmc_command*, %struct.mmc_command** %sbc2, align 8, !dbg !12905
  br label %cond.end, !dbg !12902

cond.false:                                       ; preds = %entry
  %6 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !12906
  %cmd3 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %6, i32 0, i32 1, !dbg !12907
  %7 = load %struct.mmc_command*, %struct.mmc_command** %cmd3, align 8, !dbg !12907
  br label %cond.end, !dbg !12902

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.mmc_command* [ %5, %cond.true ], [ %7, %cond.false ], !dbg !12902
  store %struct.mmc_command* %cond, %struct.mmc_command** %cmd, align 8, !dbg !12908
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12909
  %9 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !12910
  %10 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !12911
  call void @__dw_mci_start_request(%struct.dw_mci* %8, %struct.dw_mci_slot* %9, %struct.mmc_command* %10) #12, !dbg !12912
  ret void, !dbg !12913
}

; Function Attrs: noredzone
declare dso_local void @mmc_request_done(%struct.mmc_host*, %struct.mmc_request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !12914 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12915, metadata !DIExpression()), !dbg !12916
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12917
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !12919
  br i1 %call, label %if.end, label %if.then, !dbg !12920

if.then:                                          ; preds = %entry
  br label %return, !dbg !12921

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12922
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12923
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12923
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12924
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12925
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12925
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !12926
  br label %return, !dbg !12927

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !12928 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12931, metadata !DIExpression()), !dbg !12932
  ret i1 true, !dbg !12933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12934 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12937, metadata !DIExpression()), !dbg !12938
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12939, metadata !DIExpression()), !dbg !12940
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12941
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12942
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12943
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !12944
  br label %do.body, !dbg !12945

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !12946

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !12948

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !12946

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12950
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12950
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12950
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !12950
  br label %do.end5, !dbg !12950

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !12946

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !12952
}

; Function Attrs: noredzone
declare dso_local void @sg_miter_stop(%struct.sg_mapping_iter*) #2

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_cmd_interrupt(%struct.dw_mci* %host, i32 %status) #0 !dbg !12953 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %status.addr = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12954, metadata !DIExpression()), !dbg !12955
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !12956, metadata !DIExpression()), !dbg !12957
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12958
  %cto_timer = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 55, !dbg !12959
  %call = call i32 @del_timer(%struct.timer_list* %cto_timer) #12, !dbg !12960
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12961
  %cmd_status = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 23, !dbg !12963
  %2 = load i32, i32* %cmd_status, align 8, !dbg !12963
  %tobool = icmp ne i32 %2, 0, !dbg !12961
  br i1 %tobool, label %if.end, label %if.then, !dbg !12964

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %status.addr, align 4, !dbg !12965
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12966
  %cmd_status1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 23, !dbg !12967
  store i32 %3, i32* %cmd_status1, align 8, !dbg !12968
  br label %if.end, !dbg !12966

if.end:                                           ; preds = %if.then, %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12969, !srcloc !12970
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12971
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 28, !dbg !12972
  call void @set_bit(i64 0, i64* %pending_events) #12, !dbg !12973
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12974
  %tasklet = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 27, !dbg !12975
  call void @tasklet_schedule(%struct.tasklet_struct* %tasklet) #12, !dbg !12976
  ret void, !dbg !12977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_read_data_pio(%struct.dw_mci* %host, i1 zeroext %dto) #0 !dbg !12978 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %dto.addr = alloca i8, align 1
  %sg_miter = alloca %struct.sg_mapping_iter*, align 8
  %buf = alloca i8*, align 8
  %offset = alloca i32, align 4
  %data = alloca %struct.mmc_data*, align 8
  %shift = alloca i32, align 4
  %status = alloca i32, align 4
  %len = alloca i32, align 4
  %remain = alloca i32, align 4
  %fcnt = alloca i32, align 4
  %__UNIQUE_ID___x311 = alloca i32, align 4
  %__UNIQUE_ID___y312 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !12981, metadata !DIExpression()), !dbg !12982
  %frombool = zext i1 %dto to i8
  store i8 %frombool, i8* %dto.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dto.addr, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.declare(metadata %struct.sg_mapping_iter** %sg_miter, metadata !12985, metadata !DIExpression()), !dbg !12987
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12988
  %sg_miter1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 7, !dbg !12989
  store %struct.sg_mapping_iter* %sg_miter1, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !12987
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !12990, metadata !DIExpression()), !dbg !12991
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !12992, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !12994, metadata !DIExpression()), !dbg !12995
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !12996
  %data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 10, !dbg !12997
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data2, align 8, !dbg !12997
  store %struct.mmc_data* %2, %struct.mmc_data** %data, align 8, !dbg !12995
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !12998, metadata !DIExpression()), !dbg !12999
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13000
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 44, !dbg !13001
  %4 = load i32, i32* %data_shift, align 4, !dbg !13001
  store i32 %4, i32* %shift, align 4, !dbg !12999
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13002, metadata !DIExpression()), !dbg !13003
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.declare(metadata i32* %remain, metadata !13006, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.declare(metadata i32* %fcnt, metadata !13008, metadata !DIExpression()), !dbg !13009
  br label %do.body, !dbg !13010

do.body:                                          ; preds = %lor.end, %entry
  %5 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13011
  %call = call zeroext i1 @sg_miter_next(%struct.sg_mapping_iter* %5) #12, !dbg !13014
  br i1 %call, label %if.end, label %if.then, !dbg !13015

if.then:                                          ; preds = %do.body
  br label %done, !dbg !13016

if.end:                                           ; preds = %do.body
  %6 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13017
  %piter = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %6, i32 0, i32 4, !dbg !13018
  %sg = getelementptr inbounds %struct.sg_page_iter, %struct.sg_page_iter* %piter, i32 0, i32 0, !dbg !13019
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !13019
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13020
  %sg3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 6, !dbg !13021
  store %struct.scatterlist* %7, %struct.scatterlist** %sg3, align 8, !dbg !13022
  %9 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13023
  %addr = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %9, i32 0, i32 1, !dbg !13024
  %10 = load i8*, i8** %addr, align 8, !dbg !13024
  store i8* %10, i8** %buf, align 8, !dbg !13025
  %11 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13026
  %length = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %11, i32 0, i32 2, !dbg !13027
  %12 = load i64, i64* %length, align 8, !dbg !13027
  %conv = trunc i64 %12 to i32, !dbg !13026
  store i32 %conv, i32* %remain, align 4, !dbg !13028
  store i32 0, i32* %offset, align 4, !dbg !13029
  br label %do.body4, !dbg !13030

do.body4:                                         ; preds = %do.cond, %if.end
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13031
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 2, !dbg !13031
  %14 = load i8*, i8** %regs, align 8, !dbg !13031
  %add.ptr = getelementptr i8, i8* %14, i64 72, !dbg !13031
  %call5 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13031
  %shr = lshr i32 %call5, 17, !dbg !13031
  %and = and i32 %shr, 8191, !dbg !13031
  %15 = load i32, i32* %shift, align 4, !dbg !13033
  %shl = shl i32 %and, %15, !dbg !13034
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13035
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 46, !dbg !13036
  %17 = load i8, i8* %part_buf_count, align 1, !dbg !13036
  %conv6 = zext i8 %17 to i32, !dbg !13035
  %add = add i32 %shl, %conv6, !dbg !13037
  store i32 %add, i32* %fcnt, align 4, !dbg !13038
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x311, metadata !13039, metadata !DIExpression()), !dbg !13041
  %18 = load i32, i32* %remain, align 4, !dbg !13041
  store i32 %18, i32* %__UNIQUE_ID___x311, align 4, !dbg !13041
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y312, metadata !13042, metadata !DIExpression()), !dbg !13041
  %19 = load i32, i32* %fcnt, align 4, !dbg !13041
  store i32 %19, i32* %__UNIQUE_ID___y312, align 4, !dbg !13041
  %20 = load i32, i32* %__UNIQUE_ID___x311, align 4, !dbg !13041
  %21 = load i32, i32* %__UNIQUE_ID___y312, align 4, !dbg !13041
  %cmp = icmp ult i32 %20, %21, !dbg !13041
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13041

cond.true:                                        ; preds = %do.body4
  %22 = load i32, i32* %__UNIQUE_ID___x311, align 4, !dbg !13041
  br label %cond.end, !dbg !13041

cond.false:                                       ; preds = %do.body4
  %23 = load i32, i32* %__UNIQUE_ID___y312, align 4, !dbg !13041
  br label %cond.end, !dbg !13041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ %23, %cond.false ], !dbg !13041
  store i32 %cond, i32* %tmp, align 4, !dbg !13041
  %24 = load i32, i32* %tmp, align 4, !dbg !13041
  store i32 %24, i32* %len, align 4, !dbg !13043
  %25 = load i32, i32* %len, align 4, !dbg !13044
  %tobool = icmp ne i32 %25, 0, !dbg !13044
  br i1 %tobool, label %if.end9, label %if.then8, !dbg !13046

if.then8:                                         ; preds = %cond.end
  br label %do.end, !dbg !13047

if.end9:                                          ; preds = %cond.end
  %26 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13048
  %27 = load i8*, i8** %buf, align 8, !dbg !13049
  %28 = load i32, i32* %offset, align 4, !dbg !13050
  %idx.ext = zext i32 %28 to i64, !dbg !13051
  %add.ptr10 = getelementptr i8, i8* %27, i64 %idx.ext, !dbg !13051
  %29 = load i32, i32* %len, align 4, !dbg !13052
  call void @dw_mci_pull_data(%struct.dw_mci* %26, i8* %add.ptr10, i32 %29) #12, !dbg !13053
  %30 = load i32, i32* %len, align 4, !dbg !13054
  %31 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13055
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %31, i32 0, i32 7, !dbg !13056
  %32 = load i32, i32* %bytes_xfered, align 4, !dbg !13057
  %add11 = add i32 %32, %30, !dbg !13057
  store i32 %add11, i32* %bytes_xfered, align 4, !dbg !13057
  %33 = load i32, i32* %len, align 4, !dbg !13058
  %34 = load i32, i32* %offset, align 4, !dbg !13059
  %add12 = add i32 %34, %33, !dbg !13059
  store i32 %add12, i32* %offset, align 4, !dbg !13059
  %35 = load i32, i32* %len, align 4, !dbg !13060
  %36 = load i32, i32* %remain, align 4, !dbg !13061
  %sub = sub i32 %36, %35, !dbg !13061
  store i32 %sub, i32* %remain, align 4, !dbg !13061
  br label %do.cond, !dbg !13062

do.cond:                                          ; preds = %if.end9
  %37 = load i32, i32* %remain, align 4, !dbg !13063
  %tobool13 = icmp ne i32 %37, 0, !dbg !13062
  br i1 %tobool13, label %do.body4, label %do.end, !dbg !13062, !llvm.loop !13064

do.end:                                           ; preds = %do.cond, %if.then8
  %38 = load i32, i32* %offset, align 4, !dbg !13066
  %conv14 = zext i32 %38 to i64, !dbg !13066
  %39 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13067
  %consumed = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %39, i32 0, i32 3, !dbg !13068
  store i64 %conv14, i64* %consumed, align 8, !dbg !13069
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13070
  %regs15 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 2, !dbg !13070
  %41 = load i8*, i8** %regs15, align 8, !dbg !13070
  %add.ptr16 = getelementptr i8, i8* %41, i64 64, !dbg !13070
  %call17 = call i32 @__readl(i8* %add.ptr16) #12, !dbg !13070
  store i32 %call17, i32* %status, align 4, !dbg !13071
  %42 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13072
  %regs18 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %42, i32 0, i32 2, !dbg !13072
  %43 = load i8*, i8** %regs18, align 8, !dbg !13072
  %add.ptr19 = getelementptr i8, i8* %43, i64 68, !dbg !13072
  call void @__writel(i32 32, i8* %add.ptr19) #12, !dbg !13072
  br label %do.cond20, !dbg !13073

do.cond20:                                        ; preds = %do.end
  %44 = load i32, i32* %status, align 4, !dbg !13074
  %conv21 = zext i32 %44 to i64, !dbg !13074
  %and22 = and i64 %conv21, 32, !dbg !13075
  %tobool23 = icmp ne i64 %and22, 0, !dbg !13075
  br i1 %tobool23, label %lor.end, label %lor.rhs, !dbg !13076

lor.rhs:                                          ; preds = %do.cond20
  %45 = load i8, i8* %dto.addr, align 1, !dbg !13077
  %tobool24 = trunc i8 %45 to i1, !dbg !13077
  br i1 %tobool24, label %land.rhs, label %land.end, !dbg !13078

land.rhs:                                         ; preds = %lor.rhs
  %46 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13079
  %regs26 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %46, i32 0, i32 2, !dbg !13079
  %47 = load i8*, i8** %regs26, align 8, !dbg !13079
  %add.ptr27 = getelementptr i8, i8* %47, i64 72, !dbg !13079
  %call28 = call i32 @__readl(i8* %add.ptr27) #12, !dbg !13079
  %shr29 = lshr i32 %call28, 17, !dbg !13079
  %and30 = and i32 %shr29, 8191, !dbg !13079
  %tobool31 = icmp ne i32 %and30, 0, !dbg !13078
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %48 = phi i1 [ false, %lor.rhs ], [ %tobool31, %land.rhs ], !dbg !13080
  br label %lor.end, !dbg !13076

lor.end:                                          ; preds = %land.end, %do.cond20
  %49 = phi i1 [ true, %do.cond20 ], [ %48, %land.end ]
  br i1 %49, label %do.body, label %do.end32, !dbg !13073, !llvm.loop !13081

do.end32:                                         ; preds = %lor.end
  %50 = load i32, i32* %remain, align 4, !dbg !13083
  %tobool33 = icmp ne i32 %50, 0, !dbg !13083
  br i1 %tobool33, label %if.end39, label %if.then34, !dbg !13085

if.then34:                                        ; preds = %do.end32
  %51 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13086
  %call35 = call zeroext i1 @sg_miter_next(%struct.sg_mapping_iter* %51) #12, !dbg !13089
  br i1 %call35, label %if.end37, label %if.then36, !dbg !13090

if.then36:                                        ; preds = %if.then34
  br label %done, !dbg !13091

if.end37:                                         ; preds = %if.then34
  %52 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13092
  %consumed38 = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %52, i32 0, i32 3, !dbg !13093
  store i64 0, i64* %consumed38, align 8, !dbg !13094
  br label %if.end39, !dbg !13095

if.end39:                                         ; preds = %if.end37, %do.end32
  %53 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13096
  call void @sg_miter_stop(%struct.sg_mapping_iter* %53) #12, !dbg !13097
  br label %return, !dbg !13098

done:                                             ; preds = %if.then36, %if.then
  call void @llvm.dbg.label(metadata !13099), !dbg !13100
  %54 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13101
  call void @sg_miter_stop(%struct.sg_mapping_iter* %54) #12, !dbg !13102
  %55 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13103
  %sg40 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %55, i32 0, i32 6, !dbg !13104
  store %struct.scatterlist* null, %struct.scatterlist** %sg40, align 8, !dbg !13105
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13106, !srcloc !13107
  %56 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13108
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %56, i32 0, i32 28, !dbg !13109
  call void @set_bit(i64 1, i64* %pending_events) #12, !dbg !13110
  br label %return, !dbg !13111

return:                                           ; preds = %done, %if.end39
  ret void, !dbg !13111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_write_data_pio(%struct.dw_mci* %host) #0 !dbg !13112 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %sg_miter = alloca %struct.sg_mapping_iter*, align 8
  %buf = alloca i8*, align 8
  %offset = alloca i32, align 4
  %data = alloca %struct.mmc_data*, align 8
  %shift = alloca i32, align 4
  %status = alloca i32, align 4
  %len = alloca i32, align 4
  %fifo_depth = alloca i32, align 4
  %remain = alloca i32, align 4
  %fcnt = alloca i32, align 4
  %__UNIQUE_ID___x313 = alloca i32, align 4
  %__UNIQUE_ID___y314 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata %struct.sg_mapping_iter** %sg_miter, metadata !13115, metadata !DIExpression()), !dbg !13116
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13117
  %sg_miter1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 7, !dbg !13118
  store %struct.sg_mapping_iter* %sg_miter1, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13116
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !13119, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !13123, metadata !DIExpression()), !dbg !13124
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13125
  %data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 10, !dbg !13126
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data2, align 8, !dbg !13126
  store %struct.mmc_data* %2, %struct.mmc_data** %data, align 8, !dbg !13124
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13127, metadata !DIExpression()), !dbg !13128
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13129
  %data_shift = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 44, !dbg !13130
  %4 = load i32, i32* %data_shift, align 4, !dbg !13130
  store i32 %4, i32* %shift, align 4, !dbg !13128
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13131, metadata !DIExpression()), !dbg !13132
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13133, metadata !DIExpression()), !dbg !13134
  call void @llvm.dbg.declare(metadata i32* %fifo_depth, metadata !13135, metadata !DIExpression()), !dbg !13136
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13137
  %fifo_depth3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 43, !dbg !13138
  %6 = load i32, i32* %fifo_depth3, align 8, !dbg !13138
  store i32 %6, i32* %fifo_depth, align 4, !dbg !13136
  call void @llvm.dbg.declare(metadata i32* %remain, metadata !13139, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.declare(metadata i32* %fcnt, metadata !13141, metadata !DIExpression()), !dbg !13142
  br label %do.body, !dbg !13143

do.body:                                          ; preds = %do.cond22, %entry
  %7 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13144
  %call = call zeroext i1 @sg_miter_next(%struct.sg_mapping_iter* %7) #12, !dbg !13147
  br i1 %call, label %if.end, label %if.then, !dbg !13148

if.then:                                          ; preds = %do.body
  br label %done, !dbg !13149

if.end:                                           ; preds = %do.body
  %8 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13150
  %piter = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %8, i32 0, i32 4, !dbg !13151
  %sg = getelementptr inbounds %struct.sg_page_iter, %struct.sg_page_iter* %piter, i32 0, i32 0, !dbg !13152
  %9 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !13152
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13153
  %sg4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 6, !dbg !13154
  store %struct.scatterlist* %9, %struct.scatterlist** %sg4, align 8, !dbg !13155
  %11 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13156
  %addr = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %11, i32 0, i32 1, !dbg !13157
  %12 = load i8*, i8** %addr, align 8, !dbg !13157
  store i8* %12, i8** %buf, align 8, !dbg !13158
  %13 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13159
  %length = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %13, i32 0, i32 2, !dbg !13160
  %14 = load i64, i64* %length, align 8, !dbg !13160
  %conv = trunc i64 %14 to i32, !dbg !13159
  store i32 %conv, i32* %remain, align 4, !dbg !13161
  store i32 0, i32* %offset, align 4, !dbg !13162
  br label %do.body5, !dbg !13163

do.body5:                                         ; preds = %do.cond, %if.end
  %15 = load i32, i32* %fifo_depth, align 4, !dbg !13164
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13166
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 2, !dbg !13166
  %17 = load i8*, i8** %regs, align 8, !dbg !13166
  %add.ptr = getelementptr i8, i8* %17, i64 72, !dbg !13166
  %call6 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13166
  %shr = lshr i32 %call6, 17, !dbg !13166
  %and = and i32 %shr, 8191, !dbg !13166
  %sub = sub i32 %15, %and, !dbg !13167
  %18 = load i32, i32* %shift, align 4, !dbg !13168
  %shl = shl i32 %sub, %18, !dbg !13169
  %19 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13170
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %19, i32 0, i32 46, !dbg !13171
  %20 = load i8, i8* %part_buf_count, align 1, !dbg !13171
  %conv7 = zext i8 %20 to i32, !dbg !13170
  %sub8 = sub i32 %shl, %conv7, !dbg !13172
  store i32 %sub8, i32* %fcnt, align 4, !dbg !13173
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x313, metadata !13174, metadata !DIExpression()), !dbg !13176
  %21 = load i32, i32* %remain, align 4, !dbg !13176
  store i32 %21, i32* %__UNIQUE_ID___x313, align 4, !dbg !13176
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y314, metadata !13177, metadata !DIExpression()), !dbg !13176
  %22 = load i32, i32* %fcnt, align 4, !dbg !13176
  store i32 %22, i32* %__UNIQUE_ID___y314, align 4, !dbg !13176
  %23 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !13176
  %24 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !13176
  %cmp = icmp ult i32 %23, %24, !dbg !13176
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13176

cond.true:                                        ; preds = %do.body5
  %25 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !13176
  br label %cond.end, !dbg !13176

cond.false:                                       ; preds = %do.body5
  %26 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !13176
  br label %cond.end, !dbg !13176

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %25, %cond.true ], [ %26, %cond.false ], !dbg !13176
  store i32 %cond, i32* %tmp, align 4, !dbg !13176
  %27 = load i32, i32* %tmp, align 4, !dbg !13176
  store i32 %27, i32* %len, align 4, !dbg !13178
  %28 = load i32, i32* %len, align 4, !dbg !13179
  %tobool = icmp ne i32 %28, 0, !dbg !13179
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !13181

if.then10:                                        ; preds = %cond.end
  br label %do.end, !dbg !13182

if.end11:                                         ; preds = %cond.end
  %29 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13183
  %push_data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %29, i32 0, i32 48, !dbg !13184
  %30 = load void (%struct.dw_mci*, i8*, i32)*, void (%struct.dw_mci*, i8*, i32)** %push_data, align 8, !dbg !13184
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13185
  %32 = load i8*, i8** %buf, align 8, !dbg !13186
  %33 = load i32, i32* %offset, align 4, !dbg !13187
  %idx.ext = zext i32 %33 to i64, !dbg !13188
  %add.ptr12 = getelementptr i8, i8* %32, i64 %idx.ext, !dbg !13188
  %34 = load i32, i32* %len, align 4, !dbg !13189
  call void %30(%struct.dw_mci* %31, i8* %add.ptr12, i32 %34) #12, !dbg !13183
  %35 = load i32, i32* %len, align 4, !dbg !13190
  %36 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13191
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %36, i32 0, i32 7, !dbg !13192
  %37 = load i32, i32* %bytes_xfered, align 4, !dbg !13193
  %add = add i32 %37, %35, !dbg !13193
  store i32 %add, i32* %bytes_xfered, align 4, !dbg !13193
  %38 = load i32, i32* %len, align 4, !dbg !13194
  %39 = load i32, i32* %offset, align 4, !dbg !13195
  %add13 = add i32 %39, %38, !dbg !13195
  store i32 %add13, i32* %offset, align 4, !dbg !13195
  %40 = load i32, i32* %len, align 4, !dbg !13196
  %41 = load i32, i32* %remain, align 4, !dbg !13197
  %sub14 = sub i32 %41, %40, !dbg !13197
  store i32 %sub14, i32* %remain, align 4, !dbg !13197
  br label %do.cond, !dbg !13198

do.cond:                                          ; preds = %if.end11
  %42 = load i32, i32* %remain, align 4, !dbg !13199
  %tobool15 = icmp ne i32 %42, 0, !dbg !13198
  br i1 %tobool15, label %do.body5, label %do.end, !dbg !13198, !llvm.loop !13200

do.end:                                           ; preds = %do.cond, %if.then10
  %43 = load i32, i32* %offset, align 4, !dbg !13202
  %conv16 = zext i32 %43 to i64, !dbg !13202
  %44 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13203
  %consumed = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %44, i32 0, i32 3, !dbg !13204
  store i64 %conv16, i64* %consumed, align 8, !dbg !13205
  %45 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13206
  %regs17 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %45, i32 0, i32 2, !dbg !13206
  %46 = load i8*, i8** %regs17, align 8, !dbg !13206
  %add.ptr18 = getelementptr i8, i8* %46, i64 64, !dbg !13206
  %call19 = call i32 @__readl(i8* %add.ptr18) #12, !dbg !13206
  store i32 %call19, i32* %status, align 4, !dbg !13207
  %47 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13208
  %regs20 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %47, i32 0, i32 2, !dbg !13208
  %48 = load i8*, i8** %regs20, align 8, !dbg !13208
  %add.ptr21 = getelementptr i8, i8* %48, i64 68, !dbg !13208
  call void @__writel(i32 16, i8* %add.ptr21) #12, !dbg !13208
  br label %do.cond22, !dbg !13209

do.cond22:                                        ; preds = %do.end
  %49 = load i32, i32* %status, align 4, !dbg !13210
  %conv23 = zext i32 %49 to i64, !dbg !13210
  %and24 = and i64 %conv23, 16, !dbg !13211
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13209
  br i1 %tobool25, label %do.body, label %do.end26, !dbg !13209, !llvm.loop !13212

do.end26:                                         ; preds = %do.cond22
  %50 = load i32, i32* %remain, align 4, !dbg !13214
  %tobool27 = icmp ne i32 %50, 0, !dbg !13214
  br i1 %tobool27, label %if.end33, label %if.then28, !dbg !13216

if.then28:                                        ; preds = %do.end26
  %51 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13217
  %call29 = call zeroext i1 @sg_miter_next(%struct.sg_mapping_iter* %51) #12, !dbg !13220
  br i1 %call29, label %if.end31, label %if.then30, !dbg !13221

if.then30:                                        ; preds = %if.then28
  br label %done, !dbg !13222

if.end31:                                         ; preds = %if.then28
  %52 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13223
  %consumed32 = getelementptr inbounds %struct.sg_mapping_iter, %struct.sg_mapping_iter* %52, i32 0, i32 3, !dbg !13224
  store i64 0, i64* %consumed32, align 8, !dbg !13225
  br label %if.end33, !dbg !13226

if.end33:                                         ; preds = %if.end31, %do.end26
  %53 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13227
  call void @sg_miter_stop(%struct.sg_mapping_iter* %53) #12, !dbg !13228
  br label %return, !dbg !13229

done:                                             ; preds = %if.then30, %if.then
  call void @llvm.dbg.label(metadata !13230), !dbg !13231
  %54 = load %struct.sg_mapping_iter*, %struct.sg_mapping_iter** %sg_miter, align 8, !dbg !13232
  call void @sg_miter_stop(%struct.sg_mapping_iter* %54) #12, !dbg !13233
  %55 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13234
  %sg34 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %55, i32 0, i32 6, !dbg !13235
  store %struct.scatterlist* null, %struct.scatterlist** %sg34, align 8, !dbg !13236
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13237, !srcloc !13238
  %56 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13239
  %pending_events = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %56, i32 0, i32 28, !dbg !13240
  call void @set_bit(i64 1, i64* %pending_events) #12, !dbg !13241
  br label %return, !dbg !13242

return:                                           ; preds = %done, %if.end33
  ret void, !dbg !13242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_handle_cd(%struct.dw_mci* %host) #0 !dbg !13243 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !11190, metadata !DIExpression()), !dbg !13244
  %host.addr = alloca %struct.dw_mci*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !13246, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13248, metadata !DIExpression()), !dbg !13249
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13250
  %slot1 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %0, i32 0, i32 42, !dbg !13251
  %1 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot1, align 8, !dbg !13251
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13249
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13252
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 0, !dbg !13254
  %3 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13254
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 3, !dbg !13255
  %4 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !13255
  %card_event = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %4, i32 0, i32 20, !dbg !13256
  %5 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %card_event, align 8, !dbg !13256
  %tobool = icmp ne void (%struct.mmc_host*)* %5, null, !dbg !13252
  br i1 %tobool, label %if.then, label %if.end, !dbg !13257

if.then:                                          ; preds = %entry
  %6 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13258
  %mmc2 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %6, i32 0, i32 0, !dbg !13259
  %7 = load %struct.mmc_host*, %struct.mmc_host** %mmc2, align 8, !dbg !13259
  %ops3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 3, !dbg !13260
  %8 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops3, align 8, !dbg !13260
  %card_event4 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %8, i32 0, i32 20, !dbg !13261
  %9 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %card_event4, align 8, !dbg !13261
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13262
  %mmc5 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 0, !dbg !13263
  %11 = load %struct.mmc_host*, %struct.mmc_host** %mmc5, align 8, !dbg !13263
  call void %9(%struct.mmc_host* %11) #12, !dbg !13258
  br label %if.end, !dbg !13258

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13264
  %mmc6 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %12, i32 0, i32 0, !dbg !13265
  %13 = load %struct.mmc_host*, %struct.mmc_host** %mmc6, align 8, !dbg !13265
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13266
  %pdata = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 37, !dbg !13267
  %15 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !13267
  %detect_delay_ms = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %15, i32 0, i32 5, !dbg !13268
  %16 = load i32, i32* %detect_delay_ms, align 4, !dbg !13268
  store i32 %16, i32* %m.addr.i, align 4
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !13269
  %18 = call i1 @llvm.is.constant.i32(i32 %17) #8, !dbg !13270
  br i1 %18, label %if.then.i, label %if.else.i, !dbg !13271

if.then.i:                                        ; preds = %if.end
  %19 = load i32, i32* %m.addr.i, align 4, !dbg !13272
  %cmp.i = icmp slt i32 %19, 0, !dbg !13273
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13274

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !13275
  br label %msecs_to_jiffies.exit, !dbg !13275

if.end.i:                                         ; preds = %if.then.i
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !13276
  %call.i = call i64 @_msecs_to_jiffies(i32 %20) #14, !dbg !13277
  store i64 %call.i, i64* %retval.i, align 8, !dbg !13278
  br label %msecs_to_jiffies.exit, !dbg !13278

if.else.i:                                        ; preds = %if.end
  %21 = load i32, i32* %m.addr.i, align 4, !dbg !13279
  %call2.i = call i64 @__msecs_to_jiffies(i32 %21) #14, !dbg !13280
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !13281
  br label %msecs_to_jiffies.exit, !dbg !13281

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %22 = load i64, i64* %retval.i, align 8, !dbg !13282
  call void @mmc_detect_change(%struct.mmc_host* %13, i64 %22) #12, !dbg !13283
  ret void, !dbg !13284
}

; Function Attrs: noredzone
declare dso_local void @sdio_signal_irq(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @sg_miter_next(%struct.sg_mapping_iter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_pull_data(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !13285 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !13286, metadata !DIExpression()), !dbg !13287
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13288, metadata !DIExpression()), !dbg !13289
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13292, metadata !DIExpression()), !dbg !13293
  %0 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13294
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !13295
  %2 = load i32, i32* %cnt.addr, align 4, !dbg !13296
  %call = call i32 @dw_mci_pull_part_bytes(%struct.dw_mci* %0, i8* %1, i32 %2) #12, !dbg !13297
  store i32 %call, i32* %len, align 4, !dbg !13298
  %3 = load i32, i32* %len, align 4, !dbg !13299
  %4 = load i32, i32* %cnt.addr, align 4, !dbg !13299
  %cmp = icmp eq i32 %3, %4, !dbg !13299
  %lnot = xor i1 %cmp, true, !dbg !13299
  %lnot1 = xor i1 %lnot, true, !dbg !13299
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13299
  %conv = sext i32 %lnot.ext to i64, !dbg !13299
  %tobool = icmp ne i64 %conv, 0, !dbg !13299
  br i1 %tobool, label %if.then, label %if.end, !dbg !13301

if.then:                                          ; preds = %entry
  br label %return, !dbg !13302

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %len, align 4, !dbg !13303
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !13304
  %idx.ext = sext i32 %5 to i64, !dbg !13304
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext, !dbg !13304
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !13304
  %7 = load i32, i32* %len, align 4, !dbg !13305
  %8 = load i32, i32* %cnt.addr, align 4, !dbg !13306
  %sub = sub i32 %8, %7, !dbg !13306
  store i32 %sub, i32* %cnt.addr, align 4, !dbg !13306
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13307
  %pull_data = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 49, !dbg !13308
  %10 = load void (%struct.dw_mci*, i8*, i32)*, void (%struct.dw_mci*, i8*, i32)** %pull_data, align 8, !dbg !13308
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13309
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !13310
  %13 = load i32, i32* %cnt.addr, align 4, !dbg !13311
  call void %10(%struct.dw_mci* %11, i8* %12, i32 %13) #12, !dbg !13307
  br label %return, !dbg !13312

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_pull_part_bytes(%struct.dw_mci* %host, i8* %buf, i32 %cnt) #0 !dbg !13313 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %buf.addr = alloca i8*, align 8
  %cnt.addr = alloca i32, align 4
  %__UNIQUE_ID___x309 = alloca i32, align 4
  %__UNIQUE_ID___y310 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !13314, metadata !DIExpression()), !dbg !13315
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  store i32 %cnt, i32* %cnt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr, metadata !13318, metadata !DIExpression()), !dbg !13319
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x309, metadata !13320, metadata !DIExpression()), !dbg !13322
  %0 = load i32, i32* %cnt.addr, align 4, !dbg !13322
  store i32 %0, i32* %__UNIQUE_ID___x309, align 4, !dbg !13322
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y310, metadata !13323, metadata !DIExpression()), !dbg !13322
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13322
  %part_buf_count = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %1, i32 0, i32 46, !dbg !13322
  %2 = load i8, i8* %part_buf_count, align 1, !dbg !13322
  %conv = zext i8 %2 to i32, !dbg !13322
  store i32 %conv, i32* %__UNIQUE_ID___y310, align 4, !dbg !13322
  %3 = load i32, i32* %__UNIQUE_ID___x309, align 4, !dbg !13322
  %4 = load i32, i32* %__UNIQUE_ID___y310, align 4, !dbg !13322
  %cmp = icmp slt i32 %3, %4, !dbg !13322
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13322

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___x309, align 4, !dbg !13322
  br label %cond.end, !dbg !13322

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %__UNIQUE_ID___y310, align 4, !dbg !13322
  br label %cond.end, !dbg !13322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !13322
  store i32 %cond, i32* %tmp, align 4, !dbg !13322
  %7 = load i32, i32* %tmp, align 4, !dbg !13322
  store i32 %7, i32* %cnt.addr, align 4, !dbg !13324
  %8 = load i32, i32* %cnt.addr, align 4, !dbg !13325
  %tobool = icmp ne i32 %8, 0, !dbg !13325
  br i1 %tobool, label %if.then, label %if.end, !dbg !13327

if.then:                                          ; preds = %cond.end
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !13328
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13330
  %11 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %10, i32 0, i32 47, !dbg !13331
  %part_buf = bitcast %union.anon.79* %11 to i64*, !dbg !13331
  %12 = bitcast i64* %part_buf to i8*, !dbg !13332
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13333
  %part_buf_start = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 45, !dbg !13334
  %14 = load i8, i8* %part_buf_start, align 8, !dbg !13334
  %conv2 = zext i8 %14 to i32, !dbg !13333
  %idx.ext = sext i32 %conv2 to i64, !dbg !13335
  %add.ptr = getelementptr i8, i8* %12, i64 %idx.ext, !dbg !13335
  %15 = load i32, i32* %cnt.addr, align 4, !dbg !13336
  %conv3 = sext i32 %15 to i64, !dbg !13336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %add.ptr, i64 %conv3, i1 false), !dbg !13337
  %16 = load i32, i32* %cnt.addr, align 4, !dbg !13338
  %17 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13339
  %part_buf_count4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %17, i32 0, i32 46, !dbg !13340
  %18 = load i8, i8* %part_buf_count4, align 1, !dbg !13341
  %conv5 = zext i8 %18 to i32, !dbg !13341
  %sub = sub i32 %conv5, %16, !dbg !13341
  %conv6 = trunc i32 %sub to i8, !dbg !13341
  store i8 %conv6, i8* %part_buf_count4, align 1, !dbg !13341
  %19 = load i32, i32* %cnt.addr, align 4, !dbg !13342
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !13343
  %part_buf_start7 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 45, !dbg !13344
  %21 = load i8, i8* %part_buf_start7, align 8, !dbg !13345
  %conv8 = zext i8 %21 to i32, !dbg !13345
  %add = add i32 %conv8, %19, !dbg !13345
  %conv9 = trunc i32 %add to i8, !dbg !13345
  store i8 %conv9, i8* %part_buf_start7, align 8, !dbg !13345
  br label %if.end, !dbg !13346

if.end:                                           ; preds = %if.then, %cond.end
  %22 = load i32, i32* %cnt.addr, align 4, !dbg !13347
  ret i32 %22, !dbg !13348
}

; Function Attrs: noredzone
declare dso_local void @mmc_detect_change(%struct.mmc_host*, i64) #2

; Function Attrs: noredzone
declare dso_local %struct.mmc_host* @mmc_alloc_host(i32, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_regulator_get_supply(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_of_parse(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_init_slot_caps(%struct.dw_mci_slot* %slot) #0 !dbg !13349 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  %mmc = alloca %struct.mmc_host*, align 8
  %ctrl_id = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.platform_device*, align 8
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !13352, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13354, metadata !DIExpression()), !dbg !13355
  %0 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !13356
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %0, i32 0, i32 1, !dbg !13357
  %1 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13357
  store %struct.dw_mci* %1, %struct.dw_mci** %host, align 8, !dbg !13355
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !13358, metadata !DIExpression()), !dbg !13359
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13360
  %drv_data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 38, !dbg !13361
  %3 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data2, align 8, !dbg !13361
  store %struct.dw_mci_drv_data* %3, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13359
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc, metadata !13362, metadata !DIExpression()), !dbg !13363
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !13364
  %mmc3 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %4, i32 0, i32 0, !dbg !13365
  %5 = load %struct.mmc_host*, %struct.mmc_host** %mmc3, align 8, !dbg !13365
  store %struct.mmc_host* %5, %struct.mmc_host** %mmc, align 8, !dbg !13363
  call void @llvm.dbg.declare(metadata i32* %ctrl_id, metadata !13366, metadata !DIExpression()), !dbg !13367
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13368
  %pdata = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 37, !dbg !13370
  %7 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata, align 8, !dbg !13370
  %caps = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %7, i32 0, i32 1, !dbg !13371
  %8 = load i32, i32* %caps, align 4, !dbg !13371
  %tobool = icmp ne i32 %8, 0, !dbg !13368
  br i1 %tobool, label %if.then, label %if.end, !dbg !13372

if.then:                                          ; preds = %entry
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13373
  %pdata4 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 37, !dbg !13374
  %10 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata4, align 8, !dbg !13374
  %caps5 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %10, i32 0, i32 1, !dbg !13375
  %11 = load i32, i32* %caps5, align 4, !dbg !13375
  %12 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13376
  %caps6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 17, !dbg !13377
  store i32 %11, i32* %caps6, align 4, !dbg !13378
  br label %if.end, !dbg !13376

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13379
  %pdata7 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 37, !dbg !13381
  %14 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata7, align 8, !dbg !13381
  %pm_caps = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %14, i32 0, i32 3, !dbg !13382
  %15 = load i32, i32* %pm_caps, align 4, !dbg !13382
  %tobool8 = icmp ne i32 %15, 0, !dbg !13379
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !13383

if.then9:                                         ; preds = %if.end
  %16 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13384
  %pdata10 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %16, i32 0, i32 37, !dbg !13385
  %17 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata10, align 8, !dbg !13385
  %pm_caps11 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %17, i32 0, i32 3, !dbg !13386
  %18 = load i32, i32* %pm_caps11, align 4, !dbg !13386
  %19 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13387
  %pm_caps12 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 20, !dbg !13388
  store i32 %18, i32* %pm_caps12, align 16, !dbg !13389
  br label %if.end13, !dbg !13387

if.end13:                                         ; preds = %if.then9, %if.end
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13390
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 36, !dbg !13392
  %21 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13392
  %of_node = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 23, !dbg !13393
  %22 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !13393
  %tobool14 = icmp ne %struct.device_node* %22, null, !dbg !13390
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !13394

if.then15:                                        ; preds = %if.end13
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13395
  %dev16 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 36, !dbg !13397
  %24 = load %struct.device*, %struct.device** %dev16, align 8, !dbg !13397
  %of_node17 = getelementptr inbounds %struct.device, %struct.device* %24, i32 0, i32 23, !dbg !13398
  %25 = load %struct.device_node*, %struct.device_node** %of_node17, align 8, !dbg !13398
  %call = call i32 @of_alias_get_id(%struct.device_node* %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !13399
  store i32 %call, i32* %ctrl_id, align 4, !dbg !13400
  %26 = load i32, i32* %ctrl_id, align 4, !dbg !13401
  %cmp = icmp slt i32 %26, 0, !dbg !13403
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !13404

if.then18:                                        ; preds = %if.then15
  store i32 0, i32* %ctrl_id, align 4, !dbg !13405
  br label %if.end19, !dbg !13406

if.end19:                                         ; preds = %if.then18, %if.then15
  br label %if.end21, !dbg !13407

if.else:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13408, metadata !DIExpression()), !dbg !13411
  %27 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13411
  %dev20 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %27, i32 0, i32 36, !dbg !13411
  %28 = load %struct.device*, %struct.device** %dev20, align 8, !dbg !13411
  %29 = bitcast %struct.device* %28 to i8*, !dbg !13411
  store i8* %29, i8** %__mptr, align 8, !dbg !13411
  br label %do.body, !dbg !13411

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !13412

do.end:                                           ; preds = %do.body
  %30 = load i8*, i8** %__mptr, align 8, !dbg !13411
  %add.ptr = getelementptr i8, i8* %30, i64 -16, !dbg !13411
  %31 = bitcast i8* %add.ptr to %struct.platform_device*, !dbg !13411
  store %struct.platform_device* %31, %struct.platform_device** %tmp, align 8, !dbg !13412
  %32 = load %struct.platform_device*, %struct.platform_device** %tmp, align 8, !dbg !13411
  %id = getelementptr inbounds %struct.platform_device, %struct.platform_device* %32, i32 0, i32 1, !dbg !13414
  %33 = load i32, i32* %id, align 8, !dbg !13414
  store i32 %33, i32* %ctrl_id, align 4, !dbg !13415
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.end19
  %34 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13416
  %tobool22 = icmp ne %struct.dw_mci_drv_data* %34, null, !dbg !13416
  br i1 %tobool22, label %land.lhs.true, label %if.end33, !dbg !13418

land.lhs.true:                                    ; preds = %if.end21
  %35 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13419
  %caps23 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %35, i32 0, i32 0, !dbg !13420
  %36 = load i64*, i64** %caps23, align 8, !dbg !13420
  %tobool24 = icmp ne i64* %36, null, !dbg !13419
  br i1 %tobool24, label %if.then25, label %if.end33, !dbg !13421

if.then25:                                        ; preds = %land.lhs.true
  %37 = load i32, i32* %ctrl_id, align 4, !dbg !13422
  %38 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13425
  %num_caps = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %38, i32 0, i32 1, !dbg !13426
  %39 = load i32, i32* %num_caps, align 8, !dbg !13426
  %cmp26 = icmp uge i32 %37, %39, !dbg !13427
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !13428

if.then27:                                        ; preds = %if.then25
  %40 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13429
  %dev28 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %40, i32 0, i32 36, !dbg !13429
  %41 = load %struct.device*, %struct.device** %dev28, align 8, !dbg !13429
  %42 = load i32, i32* %ctrl_id, align 4, !dbg !13429
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51, i64 0, i64 0), i32 %42) #13, !dbg !13429
  store i32 -22, i32* %retval, align 4, !dbg !13431
  br label %return, !dbg !13431

if.end29:                                         ; preds = %if.then25
  %43 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13432
  %caps30 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %43, i32 0, i32 0, !dbg !13433
  %44 = load i64*, i64** %caps30, align 8, !dbg !13433
  %45 = load i32, i32* %ctrl_id, align 4, !dbg !13434
  %idxprom = sext i32 %45 to i64, !dbg !13432
  %arrayidx = getelementptr i64, i64* %44, i64 %idxprom, !dbg !13432
  %46 = load i64, i64* %arrayidx, align 8, !dbg !13432
  %47 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13435
  %caps31 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %47, i32 0, i32 17, !dbg !13436
  %48 = load i32, i32* %caps31, align 4, !dbg !13437
  %conv = zext i32 %48 to i64, !dbg !13437
  %or = or i64 %conv, %46, !dbg !13437
  %conv32 = trunc i64 %or to i32, !dbg !13437
  store i32 %conv32, i32* %caps31, align 4, !dbg !13437
  br label %if.end33, !dbg !13438

if.end33:                                         ; preds = %if.end29, %land.lhs.true, %if.end21
  %49 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13439
  %pdata34 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %49, i32 0, i32 37, !dbg !13441
  %50 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata34, align 8, !dbg !13441
  %caps2 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %50, i32 0, i32 2, !dbg !13442
  %51 = load i32, i32* %caps2, align 8, !dbg !13442
  %tobool35 = icmp ne i32 %51, 0, !dbg !13439
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !13443

if.then36:                                        ; preds = %if.end33
  %52 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13444
  %pdata37 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %52, i32 0, i32 37, !dbg !13445
  %53 = load %struct.dw_mci_board*, %struct.dw_mci_board** %pdata37, align 8, !dbg !13445
  %caps238 = getelementptr inbounds %struct.dw_mci_board, %struct.dw_mci_board* %53, i32 0, i32 2, !dbg !13446
  %54 = load i32, i32* %caps238, align 8, !dbg !13446
  %55 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13447
  %caps239 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %55, i32 0, i32 18, !dbg !13448
  store i32 %54, i32* %caps239, align 8, !dbg !13449
  br label %if.end40, !dbg !13447

if.end40:                                         ; preds = %if.then36, %if.end33
  %56 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13450
  %f_min = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %56, i32 0, i32 5, !dbg !13451
  store i32 100000, i32* %f_min, align 8, !dbg !13452
  %57 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13453
  %f_max = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %57, i32 0, i32 6, !dbg !13455
  %58 = load i32, i32* %f_max, align 4, !dbg !13455
  %tobool41 = icmp ne i32 %58, 0, !dbg !13453
  br i1 %tobool41, label %if.end44, label %if.then42, !dbg !13456

if.then42:                                        ; preds = %if.end40
  %59 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13457
  %f_max43 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %59, i32 0, i32 6, !dbg !13458
  store i32 200000000, i32* %f_max43, align 4, !dbg !13459
  br label %if.end44, !dbg !13457

if.end44:                                         ; preds = %if.then42, %if.end40
  %60 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13460
  %caps45 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %60, i32 0, i32 17, !dbg !13462
  %61 = load i32, i32* %caps45, align 4, !dbg !13462
  %and = and i32 %61, 8, !dbg !13463
  %tobool46 = icmp ne i32 %and, 0, !dbg !13463
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !13464

if.then47:                                        ; preds = %if.end44
  %62 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !13465
  %caps248 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %62, i32 0, i32 18, !dbg !13466
  %63 = load i32, i32* %caps248, align 8, !dbg !13467
  %or49 = or i32 %63, 131072, !dbg !13467
  store i32 %or49, i32* %caps248, align 8, !dbg !13467
  br label %if.end50, !dbg !13465

if.end50:                                         ; preds = %if.then47, %if.end44
  store i32 0, i32* %retval, align 4, !dbg !13468
  br label %return, !dbg !13468

return:                                           ; preds = %if.end50, %if.then27
  %64 = load i32, i32* %retval, align 4, !dbg !13469
  ret i32 %64, !dbg !13469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_get_cd(%struct.mmc_host* %mmc) #0 !dbg !13470 {
entry:
  %retval = alloca i32, align 4
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %present = alloca i32, align 4
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %gpio_cd = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13471, metadata !DIExpression()), !dbg !13472
  call void @llvm.dbg.declare(metadata i32* %present, metadata !13473, metadata !DIExpression()), !dbg !13474
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13475, metadata !DIExpression()), !dbg !13476
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13477
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13478
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13478
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13476
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13479, metadata !DIExpression()), !dbg !13480
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13481
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13482
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13482
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13480
  call void @llvm.dbg.declare(metadata i32* %gpio_cd, metadata !13483, metadata !DIExpression()), !dbg !13484
  %4 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13485
  %call2 = call i32 @mmc_gpio_get_cd(%struct.mmc_host* %4) #12, !dbg !13486
  store i32 %call2, i32* %gpio_cd, align 4, !dbg !13484
  %5 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13487
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 17, !dbg !13489
  %6 = load i32, i32* %caps, align 4, !dbg !13489
  %and = and i32 %6, 32, !dbg !13490
  %tobool = icmp ne i32 %and, 0, !dbg !13490
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13491

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13492
  %call3 = call i32 @mmc_card_is_removable(%struct.mmc_host* %7) #12, !dbg !13493
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13493
  br i1 %tobool4, label %if.else14, label %if.then, !dbg !13494

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %present, align 4, !dbg !13495
  %8 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13497
  %flags = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %8, i32 0, i32 7, !dbg !13499
  %call5 = call zeroext i1 @test_bit(i64 0, i64* %flags) #12, !dbg !13500
  br i1 %call5, label %if.end13, label %if.then6, !dbg !13501

if.then6:                                         ; preds = %if.then
  %9 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13502
  %caps7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 17, !dbg !13505
  %10 = load i32, i32* %caps7, align 4, !dbg !13505
  %and8 = and i32 %10, 32, !dbg !13506
  %tobool9 = icmp ne i32 %and8, 0, !dbg !13506
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !13507

if.then10:                                        ; preds = %if.then6
  %11 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13508
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 1, !dbg !13508
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %class_dev, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !13508
  br label %if.end, !dbg !13510

if.else:                                          ; preds = %if.then6
  %12 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13511
  %class_dev11 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 1, !dbg !13511
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %class_dev11, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.53, i64 0, i64 0)) #13, !dbg !13511
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  %13 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13513
  %flags12 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %13, i32 0, i32 7, !dbg !13514
  call void @set_bit(i64 0, i64* %flags12) #12, !dbg !13515
  br label %if.end13, !dbg !13516

if.end13:                                         ; preds = %if.end, %if.then
  %14 = load i32, i32* %present, align 4, !dbg !13517
  store i32 %14, i32* %retval, align 4, !dbg !13518
  br label %return, !dbg !13518

if.else14:                                        ; preds = %lor.lhs.false
  %15 = load i32, i32* %gpio_cd, align 4, !dbg !13519
  %cmp = icmp sge i32 %15, 0, !dbg !13521
  br i1 %cmp, label %if.then15, label %if.else16, !dbg !13522

if.then15:                                        ; preds = %if.else14
  %16 = load i32, i32* %gpio_cd, align 4, !dbg !13523
  store i32 %16, i32* %present, align 4, !dbg !13524
  br label %if.end21, !dbg !13525

if.else16:                                        ; preds = %if.else14
  %17 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13526
  %host17 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %17, i32 0, i32 1, !dbg !13526
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host17, align 8, !dbg !13526
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 2, !dbg !13526
  %19 = load i8*, i8** %regs, align 8, !dbg !13526
  %add.ptr = getelementptr i8, i8* %19, i64 80, !dbg !13526
  %call18 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13526
  %20 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13527
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %20, i32 0, i32 8, !dbg !13528
  %21 = load i32, i32* %id, align 8, !dbg !13528
  %shl = shl i32 1, %21, !dbg !13529
  %and19 = and i32 %call18, %shl, !dbg !13530
  %cmp20 = icmp eq i32 %and19, 0, !dbg !13531
  %22 = zext i1 %cmp20 to i64, !dbg !13532
  %cond = select i1 %cmp20, i32 1, i32 0, !dbg !13532
  store i32 %cond, i32* %present, align 4, !dbg !13533
  br label %if.end21

if.end21:                                         ; preds = %if.else16, %if.then15
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13534
  %lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 0, !dbg !13535
  call void @spin_lock_bh(%struct.spinlock* %lock) #12, !dbg !13536
  %24 = load i32, i32* %present, align 4, !dbg !13537
  %tobool23 = icmp ne i32 %24, 0, !dbg !13537
  br i1 %tobool23, label %land.lhs.true, label %if.else27, !dbg !13539

land.lhs.true:                                    ; preds = %if.end22
  %25 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13540
  %flags24 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %25, i32 0, i32 7, !dbg !13541
  %call25 = call zeroext i1 @test_and_set_bit(i64 0, i64* %flags24) #12, !dbg !13542
  br i1 %call25, label %if.else27, label %if.then26, !dbg !13543

if.then26:                                        ; preds = %land.lhs.true
  br label %if.end34, !dbg !13544

if.else27:                                        ; preds = %land.lhs.true, %if.end22
  %26 = load i32, i32* %present, align 4, !dbg !13545
  %tobool28 = icmp ne i32 %26, 0, !dbg !13545
  br i1 %tobool28, label %if.end33, label %land.lhs.true29, !dbg !13547

land.lhs.true29:                                  ; preds = %if.else27
  %27 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13548
  %flags30 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %27, i32 0, i32 7, !dbg !13549
  %call31 = call zeroext i1 @test_and_clear_bit(i64 0, i64* %flags30) #12, !dbg !13550
  br i1 %call31, label %if.end33, label %if.then32, !dbg !13551

if.then32:                                        ; preds = %land.lhs.true29
  br label %if.end33, !dbg !13552

if.end33:                                         ; preds = %if.then32, %land.lhs.true29, %if.else27
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then26
  %28 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13553
  %lock35 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %28, i32 0, i32 0, !dbg !13554
  call void @spin_unlock_bh(%struct.spinlock* %lock35) #12, !dbg !13555
  %29 = load i32, i32* %present, align 4, !dbg !13556
  store i32 %29, i32* %retval, align 4, !dbg !13557
  br label %return, !dbg !13557

return:                                           ; preds = %if.end34, %if.end13
  %30 = load i32, i32* %retval, align 4, !dbg !13558
  ret i32 %30, !dbg !13558
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_add_host(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_free_host(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_post_req(%struct.mmc_host* %mmc, %struct.mmc_request* %mrq, i32 %err) #0 !dbg !13559 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %err.addr = alloca i32, align 4
  %slot = alloca %struct.dw_mci_slot*, align 8
  %data = alloca %struct.mmc_data*, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13560, metadata !DIExpression()), !dbg !13561
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !13562, metadata !DIExpression()), !dbg !13563
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !13564, metadata !DIExpression()), !dbg !13565
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13566, metadata !DIExpression()), !dbg !13567
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13568
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13569
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13569
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13567
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !13570, metadata !DIExpression()), !dbg !13571
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !13572
  %data1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 2, !dbg !13573
  %3 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !13573
  store %struct.mmc_data* %3, %struct.mmc_data** %data, align 8, !dbg !13571
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13574
  %host = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %4, i32 0, i32 1, !dbg !13576
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13576
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 14, !dbg !13577
  %6 = load i32, i32* %use_dma, align 8, !dbg !13577
  %tobool = icmp ne i32 %6, 0, !dbg !13574
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13578

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13579
  %tobool2 = icmp ne %struct.mmc_data* %7, null, !dbg !13579
  br i1 %tobool2, label %if.end, label %if.then, !dbg !13580

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !13581

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13582
  %host_cookie = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %8, i32 0, i32 13, !dbg !13584
  %9 = load i32, i32* %host_cookie, align 8, !dbg !13584
  %cmp = icmp ne i32 %9, 0, !dbg !13585
  br i1 %cmp, label %if.then3, label %if.end6, !dbg !13586

if.then3:                                         ; preds = %if.end
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13587
  %host4 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 1, !dbg !13587
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host4, align 8, !dbg !13587
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %11, i32 0, i32 36, !dbg !13587
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13587
  %13 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13587
  %sg = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %13, i32 0, i32 12, !dbg !13587
  %14 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !13587
  %15 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13587
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %15, i32 0, i32 10, !dbg !13587
  %16 = load i32, i32* %sg_len, align 8, !dbg !13587
  %17 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13587
  %call5 = call i32 @mmc_get_dma_dir(%struct.mmc_data* %17) #12, !dbg !13587
  call void @dma_unmap_sg_attrs(%struct.device* %12, %struct.scatterlist* %14, i32 %16, i32 %call5, i64 0) #12, !dbg !13587
  br label %if.end6, !dbg !13587

if.end6:                                          ; preds = %if.then3, %if.end
  %18 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13588
  %host_cookie7 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %18, i32 0, i32 13, !dbg !13589
  store i32 0, i32* %host_cookie7, align 8, !dbg !13590
  br label %return, !dbg !13591

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !13591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_pre_req(%struct.mmc_host* %mmc, %struct.mmc_request* %mrq) #0 !dbg !13592 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %data = alloca %struct.mmc_data*, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13593, metadata !DIExpression()), !dbg !13594
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !13595, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13597, metadata !DIExpression()), !dbg !13598
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13599
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13600
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13600
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13598
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data, metadata !13601, metadata !DIExpression()), !dbg !13602
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !13603
  %data1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 2, !dbg !13604
  %3 = load %struct.mmc_data*, %struct.mmc_data** %data1, align 8, !dbg !13604
  store %struct.mmc_data* %3, %struct.mmc_data** %data, align 8, !dbg !13602
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13605
  %host = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %4, i32 0, i32 1, !dbg !13607
  %5 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13607
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %5, i32 0, i32 14, !dbg !13608
  %6 = load i32, i32* %use_dma, align 8, !dbg !13608
  %tobool = icmp ne i32 %6, 0, !dbg !13605
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13609

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13610
  %tobool2 = icmp ne %struct.mmc_data* %7, null, !dbg !13610
  br i1 %tobool2, label %if.end, label %if.then, !dbg !13611

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end8, !dbg !13612

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13613
  %host_cookie = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %8, i32 0, i32 13, !dbg !13614
  store i32 0, i32* %host_cookie, align 8, !dbg !13615
  %9 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13616
  %host3 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %9, i32 0, i32 1, !dbg !13618
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host3, align 8, !dbg !13618
  %11 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !13619
  %data4 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %11, i32 0, i32 2, !dbg !13620
  %12 = load %struct.mmc_data*, %struct.mmc_data** %data4, align 8, !dbg !13620
  %call5 = call i32 @dw_mci_pre_dma_transfer(%struct.dw_mci* %10, %struct.mmc_data* %12, i32 1) #12, !dbg !13621
  %cmp = icmp slt i32 %call5, 0, !dbg !13622
  br i1 %cmp, label %if.then6, label %if.end8, !dbg !13623

if.then6:                                         ; preds = %if.end
  %13 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !13624
  %host_cookie7 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %13, i32 0, i32 13, !dbg !13625
  store i32 0, i32* %host_cookie7, align 8, !dbg !13626
  br label %if.end8, !dbg !13624

if.end8:                                          ; preds = %if.then, %if.then6, %if.end
  ret void, !dbg !13627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_request(%struct.mmc_host* %mmc, %struct.mmc_request* %mrq) #0 !dbg !13628 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13629, metadata !DIExpression()), !dbg !13630
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !13631, metadata !DIExpression()), !dbg !13632
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13633, metadata !DIExpression()), !dbg !13634
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13635
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13636
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13636
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13634
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13637, metadata !DIExpression()), !dbg !13638
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13639
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13640
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13640
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13638
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13641, metadata !DIExpression()), !dbg !13643
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13643
  %mrq2 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %4, i32 0, i32 3, !dbg !13643
  %5 = load %struct.mmc_request*, %struct.mmc_request** %mrq2, align 8, !dbg !13643
  %tobool = icmp ne %struct.mmc_request* %5, null, !dbg !13643
  %lnot = xor i1 %tobool, true, !dbg !13643
  %lnot3 = xor i1 %lnot, true, !dbg !13643
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13643
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13643
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !13644
  %tobool4 = icmp ne i32 %6, 0, !dbg !13644
  %lnot5 = xor i1 %tobool4, true, !dbg !13644
  %lnot7 = xor i1 %lnot5, true, !dbg !13644
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !13644
  %conv = sext i32 %lnot.ext8 to i64, !dbg !13644
  %tobool9 = icmp ne i64 %conv, 0, !dbg !13644
  br i1 %tobool9, label %if.then, label %if.end, !dbg !13643

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13644

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !13646

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !13648

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !13646

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 1384, i32 2305, i64 12) #8, !dbg !13650, !srcloc !13652
  br label %do.end12, !dbg !13650

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 302) #8, !dbg !13653, !srcloc !13655
  br label %do.body13, !dbg !13646

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !13656

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !13646

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !13646

if.end:                                           ; preds = %do.end15, %entry
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !13643
  %tobool16 = icmp ne i32 %7, 0, !dbg !13643
  %lnot17 = xor i1 %tobool16, true, !dbg !13643
  %lnot19 = xor i1 %lnot17, true, !dbg !13643
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !13643
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !13643
  store i64 %conv21, i64* %tmp, align 8, !dbg !13644
  %8 = load i64, i64* %tmp, align 8, !dbg !13643
  %9 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13658
  %call22 = call i32 @dw_mci_get_cd(%struct.mmc_host* %9) #12, !dbg !13660
  %tobool23 = icmp ne i32 %call22, 0, !dbg !13660
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !13661

if.then24:                                        ; preds = %if.end
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !13662
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %10, i32 0, i32 1, !dbg !13664
  %11 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !13664
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %11, i32 0, i32 5, !dbg !13665
  store i32 -123, i32* %error, align 8, !dbg !13666
  %12 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13667
  %13 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !13668
  call void @mmc_request_done(%struct.mmc_host* %12, %struct.mmc_request* %13) #12, !dbg !13669
  br label %return, !dbg !13670

if.end25:                                         ; preds = %if.end
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13671
  %lock = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 0, !dbg !13672
  call void @spin_lock_bh(%struct.spinlock* %lock) #12, !dbg !13673
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13674
  %16 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13675
  %17 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !13676
  call void @dw_mci_queue_request(%struct.dw_mci* %15, %struct.dw_mci_slot* %16, %struct.mmc_request* %17) #12, !dbg !13677
  %18 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13678
  %lock26 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %18, i32 0, i32 0, !dbg !13679
  call void @spin_unlock_bh(%struct.spinlock* %lock26) #12, !dbg !13680
  br label %return, !dbg !13681

return:                                           ; preds = %if.end25, %if.then24
  ret void, !dbg !13681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_get_ro(%struct.mmc_host* %mmc) #0 !dbg !13682 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %read_only = alloca i32, align 4
  %slot = alloca %struct.dw_mci_slot*, align 8
  %gpio_ro = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13683, metadata !DIExpression()), !dbg !13684
  call void @llvm.dbg.declare(metadata i32* %read_only, metadata !13685, metadata !DIExpression()), !dbg !13686
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13687, metadata !DIExpression()), !dbg !13688
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13689
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13690
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13690
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13688
  call void @llvm.dbg.declare(metadata i32* %gpio_ro, metadata !13691, metadata !DIExpression()), !dbg !13692
  %2 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13693
  %call1 = call i32 @mmc_gpio_get_ro(%struct.mmc_host* %2) #12, !dbg !13694
  store i32 %call1, i32* %gpio_ro, align 4, !dbg !13692
  %3 = load i32, i32* %gpio_ro, align 4, !dbg !13695
  %cmp = icmp sge i32 %3, 0, !dbg !13697
  br i1 %cmp, label %if.then, label %if.else, !dbg !13698

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %gpio_ro, align 4, !dbg !13699
  store i32 %4, i32* %read_only, align 4, !dbg !13700
  br label %if.end, !dbg !13701

if.else:                                          ; preds = %entry
  %5 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13702
  %host = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %5, i32 0, i32 1, !dbg !13702
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13702
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 2, !dbg !13702
  %7 = load i8*, i8** %regs, align 8, !dbg !13702
  %add.ptr = getelementptr i8, i8* %7, i64 84, !dbg !13702
  %call2 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13702
  %8 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13703
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %8, i32 0, i32 8, !dbg !13704
  %9 = load i32, i32* %id, align 8, !dbg !13704
  %shl = shl i32 1, %9, !dbg !13705
  %and = and i32 %call2, %shl, !dbg !13706
  %tobool = icmp ne i32 %and, 0, !dbg !13702
  %10 = zext i1 %tobool to i64, !dbg !13702
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !13702
  store i32 %cond, i32* %read_only, align 4, !dbg !13707
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %read_only, align 4, !dbg !13708
  ret i32 %11, !dbg !13709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_enable_sdio_irq(%struct.mmc_host* %mmc, i32 %enb) #0 !dbg !13710 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %enb.addr = alloca i32, align 4
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13711, metadata !DIExpression()), !dbg !13712
  store i32 %enb, i32* %enb.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enb.addr, metadata !13713, metadata !DIExpression()), !dbg !13714
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13715, metadata !DIExpression()), !dbg !13716
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13717
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13718
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13718
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13716
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13719, metadata !DIExpression()), !dbg !13720
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13721
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13722
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13722
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13720
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13723
  %5 = load i32, i32* %enb.addr, align 4, !dbg !13724
  call void @__dw_mci_enable_sdio_irq(%struct.dw_mci_slot* %4, i32 %5) #12, !dbg !13725
  %6 = load i32, i32* %enb.addr, align 4, !dbg !13726
  %tobool = icmp ne i32 %6, 0, !dbg !13726
  br i1 %tobool, label %if.then, label %if.else, !dbg !13728

if.then:                                          ; preds = %entry
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13729
  %dev = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 36, !dbg !13730
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !13730
  call void @pm_runtime_get_noresume(%struct.device* %8) #12, !dbg !13731
  br label %if.end, !dbg !13731

if.else:                                          ; preds = %entry
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13732
  %dev2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 36, !dbg !13733
  %10 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !13733
  call void @pm_runtime_put_noidle(%struct.device* %10) #12, !dbg !13734
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_ack_sdio_irq(%struct.mmc_host* %mmc) #0 !dbg !13736 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13737, metadata !DIExpression()), !dbg !13738
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13739, metadata !DIExpression()), !dbg !13740
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13741
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13742
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13742
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13740
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13743
  call void @__dw_mci_enable_sdio_irq(%struct.dw_mci_slot* %2, i32 1) #12, !dbg !13744
  ret void, !dbg !13745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_init_card(%struct.mmc_host* %mmc, %struct.mmc_card* %card) #0 !dbg !13746 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %clken_low_pwr = alloca i32, align 4
  %clk_en_a_old = alloca i32, align 4
  %clk_en_a = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13747, metadata !DIExpression()), !dbg !13748
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !13749, metadata !DIExpression()), !dbg !13750
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13751, metadata !DIExpression()), !dbg !13752
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13753
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13754
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13754
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13752
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13755, metadata !DIExpression()), !dbg !13756
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13757
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13758
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13758
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13756
  %4 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13759
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !13761
  %5 = load i32, i32* %caps, align 4, !dbg !13761
  %and = and i32 %5, 8, !dbg !13762
  %tobool = icmp ne i32 %and, 0, !dbg !13762
  br i1 %tobool, label %if.then, label %if.end16, !dbg !13763

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %clken_low_pwr, metadata !13764, metadata !DIExpression()), !dbg !13766
  %6 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13767
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %6, i32 0, i32 8, !dbg !13768
  %7 = load i32, i32* %id, align 8, !dbg !13768
  %sh_prom = zext i32 %7 to i64, !dbg !13769
  %shl = shl i64 65536, %sh_prom, !dbg !13769
  %conv = trunc i64 %shl to i32, !dbg !13770
  store i32 %conv, i32* %clken_low_pwr, align 4, !dbg !13766
  call void @llvm.dbg.declare(metadata i32* %clk_en_a_old, metadata !13771, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.declare(metadata i32* %clk_en_a, metadata !13773, metadata !DIExpression()), !dbg !13774
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13775
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !13775
  %9 = load i8*, i8** %regs, align 8, !dbg !13775
  %add.ptr = getelementptr i8, i8* %9, i64 16, !dbg !13775
  %call2 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13775
  store i32 %call2, i32* %clk_en_a_old, align 4, !dbg !13776
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !13777
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 4, !dbg !13779
  %11 = load i32, i32* %type, align 8, !dbg !13779
  %cmp = icmp eq i32 %11, 2, !dbg !13780
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !13781

lor.lhs.false:                                    ; preds = %if.then
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !13782
  %type4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 4, !dbg !13783
  %13 = load i32, i32* %type4, align 8, !dbg !13783
  %cmp5 = icmp eq i32 %13, 3, !dbg !13784
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !13785

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %14 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13786
  %flags = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %14, i32 0, i32 7, !dbg !13788
  call void @set_bit(i64 2, i64* %flags) #12, !dbg !13789
  %15 = load i32, i32* %clk_en_a_old, align 4, !dbg !13790
  %16 = load i32, i32* %clken_low_pwr, align 4, !dbg !13791
  %neg = xor i32 %16, -1, !dbg !13792
  %and8 = and i32 %15, %neg, !dbg !13793
  store i32 %and8, i32* %clk_en_a, align 4, !dbg !13794
  br label %if.end, !dbg !13795

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13796
  %flags9 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %17, i32 0, i32 7, !dbg !13798
  call void @clear_bit(i64 2, i64* %flags9) #12, !dbg !13799
  %18 = load i32, i32* %clk_en_a_old, align 4, !dbg !13800
  %19 = load i32, i32* %clken_low_pwr, align 4, !dbg !13801
  %or = or i32 %18, %19, !dbg !13802
  store i32 %or, i32* %clk_en_a, align 4, !dbg !13803
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %20 = load i32, i32* %clk_en_a, align 4, !dbg !13804
  %21 = load i32, i32* %clk_en_a_old, align 4, !dbg !13806
  %cmp10 = icmp ne i32 %20, %21, !dbg !13807
  br i1 %cmp10, label %if.then12, label %if.end15, !dbg !13808

if.then12:                                        ; preds = %if.end
  %22 = load i32, i32* %clk_en_a, align 4, !dbg !13809
  %23 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13809
  %regs13 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %23, i32 0, i32 2, !dbg !13809
  %24 = load i8*, i8** %regs13, align 8, !dbg !13809
  %add.ptr14 = getelementptr i8, i8* %24, i64 16, !dbg !13809
  call void @__writel(i32 %22, i8* %add.ptr14) #12, !dbg !13809
  %25 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13811
  call void @mci_send_cmd(%struct.dw_mci_slot* %25, i32 2105344, i32 0) #12, !dbg !13812
  br label %if.end15, !dbg !13813

if.end15:                                         ; preds = %if.then12, %if.end
  br label %if.end16, !dbg !13814

if.end16:                                         ; preds = %if.end15, %entry
  ret void, !dbg !13815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_switch_voltage(%struct.mmc_host* %mmc, %struct.mmc_ios* %ios) #0 !dbg !13816 {
entry:
  %retval = alloca i32, align 4
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %ios.addr = alloca %struct.mmc_ios*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  %uhs = alloca i32, align 4
  %v18 = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13817, metadata !DIExpression()), !dbg !13818
  store %struct.mmc_ios* %ios, %struct.mmc_ios** %ios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ios** %ios.addr, metadata !13819, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13821, metadata !DIExpression()), !dbg !13822
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13823
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13824
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13824
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13822
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13825, metadata !DIExpression()), !dbg !13826
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13827
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13828
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13828
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13826
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !13829, metadata !DIExpression()), !dbg !13830
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13831
  %drv_data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 38, !dbg !13832
  %5 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data2, align 8, !dbg !13832
  store %struct.dw_mci_drv_data* %5, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13830
  call void @llvm.dbg.declare(metadata i32* %uhs, metadata !13833, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.declare(metadata i32* %v18, metadata !13835, metadata !DIExpression()), !dbg !13836
  %6 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13837
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %6, i32 0, i32 8, !dbg !13838
  %7 = load i32, i32* %id, align 8, !dbg !13838
  %sh_prom = zext i32 %7 to i64, !dbg !13839
  %shl = shl i64 1, %sh_prom, !dbg !13839
  %conv = trunc i64 %shl to i32, !dbg !13840
  store i32 %conv, i32* %v18, align 4, !dbg !13836
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13841, metadata !DIExpression()), !dbg !13842
  %8 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13843
  %tobool = icmp ne %struct.dw_mci_drv_data* %8, null, !dbg !13843
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13845

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13846
  %switch_voltage = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %9, i32 0, i32 7, !dbg !13847
  %10 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %switch_voltage, align 8, !dbg !13847
  %tobool3 = icmp ne i32 (%struct.mmc_host*, %struct.mmc_ios*)* %10, null, !dbg !13846
  br i1 %tobool3, label %if.then, label %if.end, !dbg !13848

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13849
  %switch_voltage4 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %11, i32 0, i32 7, !dbg !13850
  %12 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %switch_voltage4, align 8, !dbg !13850
  %13 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13851
  %14 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !13852
  %call5 = call i32 %12(%struct.mmc_host* %13, %struct.mmc_ios* %14) #12, !dbg !13849
  store i32 %call5, i32* %retval, align 4, !dbg !13853
  br label %return, !dbg !13853

if.end:                                           ; preds = %land.lhs.true, %entry
  %15 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13854
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %15, i32 0, i32 2, !dbg !13854
  %16 = load i8*, i8** %regs, align 8, !dbg !13854
  %add.ptr = getelementptr i8, i8* %16, i64 116, !dbg !13854
  %call6 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13854
  store i32 %call6, i32* %uhs, align 4, !dbg !13855
  %17 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !13856
  %signal_voltage = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %17, i32 0, i32 8, !dbg !13858
  %18 = load i8, i8* %signal_voltage, align 1, !dbg !13858
  %conv7 = zext i8 %18 to i32, !dbg !13856
  %cmp = icmp eq i32 %conv7, 0, !dbg !13859
  br i1 %cmp, label %if.then9, label %if.else, !dbg !13860

if.then9:                                         ; preds = %if.end
  %19 = load i32, i32* %v18, align 4, !dbg !13861
  %neg = xor i32 %19, -1, !dbg !13862
  %20 = load i32, i32* %uhs, align 4, !dbg !13863
  %and = and i32 %20, %neg, !dbg !13863
  store i32 %and, i32* %uhs, align 4, !dbg !13863
  br label %if.end10, !dbg !13864

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %v18, align 4, !dbg !13865
  %22 = load i32, i32* %uhs, align 4, !dbg !13866
  %or = or i32 %22, %21, !dbg !13866
  store i32 %or, i32* %uhs, align 4, !dbg !13866
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  %23 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13867
  %supply = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 55, !dbg !13869
  %vqmmc = getelementptr inbounds %struct.mmc_supply, %struct.mmc_supply* %supply, i32 0, i32 1, !dbg !13870
  %24 = load %struct.regulator*, %struct.regulator** %vqmmc, align 8, !dbg !13870
  %25 = bitcast %struct.regulator* %24 to i8*, !dbg !13867
  %call11 = call zeroext i1 @IS_ERR(i8* %25) #12, !dbg !13871
  br i1 %call11, label %if.end18, label %if.then12, !dbg !13872

if.then12:                                        ; preds = %if.end10
  %26 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13873
  %27 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !13875
  %call13 = call i32 @mmc_regulator_set_vqmmc(%struct.mmc_host* %26, %struct.mmc_ios* %27) #12, !dbg !13876
  store i32 %call13, i32* %ret, align 4, !dbg !13877
  %28 = load i32, i32* %ret, align 4, !dbg !13878
  %cmp14 = icmp slt i32 %28, 0, !dbg !13880
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !13881

if.then16:                                        ; preds = %if.then12
  %29 = load i32, i32* %ret, align 4, !dbg !13882
  store i32 %29, i32* %retval, align 4, !dbg !13884
  br label %return, !dbg !13884

if.end17:                                         ; preds = %if.then12
  br label %if.end18, !dbg !13885

if.end18:                                         ; preds = %if.end17, %if.end10
  %30 = load i32, i32* %uhs, align 4, !dbg !13886
  %31 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13886
  %regs19 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %31, i32 0, i32 2, !dbg !13886
  %32 = load i8*, i8** %regs19, align 8, !dbg !13886
  %add.ptr20 = getelementptr i8, i8* %32, i64 116, !dbg !13886
  call void @__writel(i32 %30, i8* %add.ptr20) #12, !dbg !13886
  store i32 0, i32* %retval, align 4, !dbg !13887
  br label %return, !dbg !13887

return:                                           ; preds = %if.end18, %if.then16, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !13888
  ret i32 %33, !dbg !13888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_card_busy(%struct.mmc_host* %mmc) #0 !dbg !13889 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %status = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13890, metadata !DIExpression()), !dbg !13891
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13892, metadata !DIExpression()), !dbg !13893
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13894
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13895
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13895
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13893
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13896, metadata !DIExpression()), !dbg !13897
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13898
  %host = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13898
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13898
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %3, i32 0, i32 2, !dbg !13898
  %4 = load i8*, i8** %regs, align 8, !dbg !13898
  %add.ptr = getelementptr i8, i8* %4, i64 72, !dbg !13898
  %call1 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13898
  store i32 %call1, i32* %status, align 4, !dbg !13899
  %5 = load i32, i32* %status, align 4, !dbg !13900
  %conv = zext i32 %5 to i64, !dbg !13900
  %and = and i64 %conv, 512, !dbg !13901
  %tobool = icmp ne i64 %and, 0, !dbg !13902
  %lnot = xor i1 %tobool, true, !dbg !13902
  %lnot2 = xor i1 %lnot, true, !dbg !13903
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13903
  ret i32 %lnot.ext, !dbg !13904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_execute_tuning(%struct.mmc_host* %mmc, i32 %opcode) #0 !dbg !13905 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %opcode.addr = alloca i32, align 4
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13906, metadata !DIExpression()), !dbg !13907
  store i32 %opcode, i32* %opcode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcode.addr, metadata !13908, metadata !DIExpression()), !dbg !13909
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13910, metadata !DIExpression()), !dbg !13911
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13912
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13913
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13913
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13911
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13914, metadata !DIExpression()), !dbg !13915
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13916
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13917
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13917
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13915
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !13918, metadata !DIExpression()), !dbg !13919
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13920
  %drv_data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 38, !dbg !13921
  %5 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data2, align 8, !dbg !13921
  store %struct.dw_mci_drv_data* %5, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13919
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13922, metadata !DIExpression()), !dbg !13923
  store i32 -22, i32* %err, align 4, !dbg !13923
  %6 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13924
  %tobool = icmp ne %struct.dw_mci_drv_data* %6, null, !dbg !13924
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13926

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13927
  %execute_tuning = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %7, i32 0, i32 5, !dbg !13928
  %8 = load i32 (%struct.dw_mci_slot*, i32)*, i32 (%struct.dw_mci_slot*, i32)** %execute_tuning, align 8, !dbg !13928
  %tobool3 = icmp ne i32 (%struct.dw_mci_slot*, i32)* %8, null, !dbg !13927
  br i1 %tobool3, label %if.then, label %if.end, !dbg !13929

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13930
  %execute_tuning4 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %9, i32 0, i32 5, !dbg !13931
  %10 = load i32 (%struct.dw_mci_slot*, i32)*, i32 (%struct.dw_mci_slot*, i32)** %execute_tuning4, align 8, !dbg !13931
  %11 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13932
  %12 = load i32, i32* %opcode.addr, align 4, !dbg !13933
  %call5 = call i32 %10(%struct.dw_mci_slot* %11, i32 %12) #12, !dbg !13930
  store i32 %call5, i32* %err, align 4, !dbg !13934
  br label %if.end, !dbg !13935

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %13 = load i32, i32* %err, align 4, !dbg !13936
  ret i32 %13, !dbg !13937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dw_mci_prepare_hs400_tuning(%struct.mmc_host* %mmc, %struct.mmc_ios* %ios) #0 !dbg !13938 {
entry:
  %retval = alloca i32, align 4
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %ios.addr = alloca %struct.mmc_ios*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %drv_data = alloca %struct.dw_mci_drv_data*, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13939, metadata !DIExpression()), !dbg !13940
  store %struct.mmc_ios* %ios, %struct.mmc_ios** %ios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ios** %ios.addr, metadata !13941, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13943, metadata !DIExpression()), !dbg !13944
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13945
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13946
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13946
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13944
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13947, metadata !DIExpression()), !dbg !13948
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13949
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13950
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13950
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13948
  call void @llvm.dbg.declare(metadata %struct.dw_mci_drv_data** %drv_data, metadata !13951, metadata !DIExpression()), !dbg !13952
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13953
  %drv_data2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 38, !dbg !13954
  %5 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data2, align 8, !dbg !13954
  store %struct.dw_mci_drv_data* %5, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13952
  %6 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13955
  %tobool = icmp ne %struct.dw_mci_drv_data* %6, null, !dbg !13955
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13957

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13958
  %prepare_hs400_tuning = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %7, i32 0, i32 6, !dbg !13959
  %8 = load i32 (%struct.dw_mci*, %struct.mmc_ios*)*, i32 (%struct.dw_mci*, %struct.mmc_ios*)** %prepare_hs400_tuning, align 8, !dbg !13959
  %tobool3 = icmp ne i32 (%struct.dw_mci*, %struct.mmc_ios*)* %8, null, !dbg !13958
  br i1 %tobool3, label %if.then, label %if.end, !dbg !13960

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.dw_mci_drv_data*, %struct.dw_mci_drv_data** %drv_data, align 8, !dbg !13961
  %prepare_hs400_tuning4 = getelementptr inbounds %struct.dw_mci_drv_data, %struct.dw_mci_drv_data* %9, i32 0, i32 6, !dbg !13962
  %10 = load i32 (%struct.dw_mci*, %struct.mmc_ios*)*, i32 (%struct.dw_mci*, %struct.mmc_ios*)** %prepare_hs400_tuning4, align 8, !dbg !13962
  %11 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13963
  %12 = load %struct.mmc_ios*, %struct.mmc_ios** %ios.addr, align 8, !dbg !13964
  %call5 = call i32 %10(%struct.dw_mci* %11, %struct.mmc_ios* %12) #12, !dbg !13961
  store i32 %call5, i32* %retval, align 4, !dbg !13965
  br label %return, !dbg !13965

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !13966
  br label %return, !dbg !13966

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13967
  ret i32 %13, !dbg !13967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_hw_reset(%struct.mmc_host* %mmc) #0 !dbg !13968 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %slot = alloca %struct.dw_mci_slot*, align 8
  %host = alloca %struct.dw_mci*, align 8
  %reset = alloca i32, align 4
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !13969, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot, metadata !13971, metadata !DIExpression()), !dbg !13972
  %0 = load %struct.mmc_host*, %struct.mmc_host** %mmc.addr, align 8, !dbg !13973
  %call = call i8* @mmc_priv(%struct.mmc_host* %0) #12, !dbg !13974
  %1 = bitcast i8* %call to %struct.dw_mci_slot*, !dbg !13974
  store %struct.dw_mci_slot* %1, %struct.dw_mci_slot** %slot, align 8, !dbg !13972
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host, metadata !13975, metadata !DIExpression()), !dbg !13976
  %2 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13977
  %host1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %2, i32 0, i32 1, !dbg !13978
  %3 = load %struct.dw_mci*, %struct.dw_mci** %host1, align 8, !dbg !13978
  store %struct.dw_mci* %3, %struct.dw_mci** %host, align 8, !dbg !13976
  call void @llvm.dbg.declare(metadata i32* %reset, metadata !13979, metadata !DIExpression()), !dbg !13980
  %4 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13981
  %use_dma = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %4, i32 0, i32 14, !dbg !13983
  %5 = load i32, i32* %use_dma, align 8, !dbg !13983
  %cmp = icmp eq i32 %5, 1, !dbg !13984
  br i1 %cmp, label %if.then, label %if.end, !dbg !13985

if.then:                                          ; preds = %entry
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13986
  call void @dw_mci_idmac_reset(%struct.dw_mci* %6) #12, !dbg !13987
  br label %if.end, !dbg !13987

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13988
  %call2 = call zeroext i1 @dw_mci_ctrl_reset(%struct.dw_mci* %7, i32 6) #12, !dbg !13990
  br i1 %call2, label %if.end4, label %if.then3, !dbg !13991

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !13992

if.end4:                                          ; preds = %if.end
  %8 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !13993
  %regs = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %8, i32 0, i32 2, !dbg !13993
  %9 = load i8*, i8** %regs, align 8, !dbg !13993
  %add.ptr = getelementptr i8, i8* %9, i64 120, !dbg !13993
  %call5 = call i32 @__readl(i8* %add.ptr) #12, !dbg !13993
  store i32 %call5, i32* %reset, align 4, !dbg !13994
  %10 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !13995
  %id = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %10, i32 0, i32 8, !dbg !13996
  %11 = load i32, i32* %id, align 8, !dbg !13996
  %shl = shl i32 1, %11, !dbg !13997
  %neg = xor i32 %shl, -1, !dbg !13998
  %12 = load i32, i32* %reset, align 4, !dbg !13999
  %and = and i32 %12, %neg, !dbg !13999
  store i32 %and, i32* %reset, align 4, !dbg !13999
  %13 = load i32, i32* %reset, align 4, !dbg !14000
  %14 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !14000
  %regs6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %14, i32 0, i32 2, !dbg !14000
  %15 = load i8*, i8** %regs6, align 8, !dbg !14000
  %add.ptr7 = getelementptr i8, i8* %15, i64 120, !dbg !14000
  call void @__writel(i32 %13, i8* %add.ptr7) #12, !dbg !14000
  call void @usleep_range(i64 1, i64 2) #12, !dbg !14001
  %16 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot, align 8, !dbg !14002
  %id8 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %16, i32 0, i32 8, !dbg !14003
  %17 = load i32, i32* %id8, align 8, !dbg !14003
  %shl9 = shl i32 1, %17, !dbg !14004
  %18 = load i32, i32* %reset, align 4, !dbg !14005
  %or = or i32 %18, %shl9, !dbg !14005
  store i32 %or, i32* %reset, align 4, !dbg !14005
  %19 = load i32, i32* %reset, align 4, !dbg !14006
  %20 = load %struct.dw_mci*, %struct.dw_mci** %host, align 8, !dbg !14006
  %regs10 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %20, i32 0, i32 2, !dbg !14006
  %21 = load i8*, i8** %regs10, align 8, !dbg !14006
  %add.ptr11 = getelementptr i8, i8* %21, i64 120, !dbg !14006
  call void @__writel(i32 %19, i8* %add.ptr11) #12, !dbg !14006
  call void @usleep_range(i64 200, i64 300) #12, !dbg !14007
  br label %return, !dbg !14008

return:                                           ; preds = %if.end4, %if.then3
  ret void, !dbg !14008
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #11 !dbg !14009 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !14010, metadata !DIExpression()), !dbg !14013
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !14021, metadata !DIExpression()), !dbg !14024
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !14025, metadata !DIExpression()), !dbg !14029
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !14030, metadata !DIExpression()), !dbg !14031
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !14032, metadata !DIExpression()), !dbg !14033
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !14034, metadata !DIExpression()), !dbg !14035
  br label %do.body, !dbg !14036

do.body:                                          ; preds = %entry
  br label %__here, !dbg !14037

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !14039), !dbg !14037
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !14037
  %0 = load i64, i64* %tmp, align 8, !dbg !14037
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !14040
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !14024
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #8, !dbg !14024
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !14024

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !14024
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !14024
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !14024

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !14024
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !14024
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !14024

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !14024
  br label %__local_bh_disable_ip.exit, !dbg !14024

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !14024

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !14024
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !14024
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !14029
  %conv.i.i = sext i32 %7 to i64, !dbg !14029
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !14029
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !14029
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !14029
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !14029
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #8, !dbg !14029, !srcloc !14041
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14042, !srcloc !14043
  br label %do.body1, !dbg !14044

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !14045
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !14045
  %rlock = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !14045
  br label %do.end, !dbg !14045

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !14044

do.end2:                                          ; preds = %do.end
  ret void, !dbg !14047

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dw_mci_queue_request(%struct.dw_mci* %host, %struct.dw_mci_slot* %slot, %struct.mmc_request* %mrq) #0 !dbg !14048 {
entry:
  %host.addr = alloca %struct.dw_mci*, align 8
  %slot.addr = alloca %struct.dw_mci_slot*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.dw_mci* %host, %struct.dw_mci** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci** %host.addr, metadata !14051, metadata !DIExpression()), !dbg !14052
  store %struct.dw_mci_slot* %slot, %struct.dw_mci_slot** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dw_mci_slot** %slot.addr, metadata !14053, metadata !DIExpression()), !dbg !14054
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !14055, metadata !DIExpression()), !dbg !14056
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !14057
  %1 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !14058
  %mrq1 = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %1, i32 0, i32 3, !dbg !14059
  store %struct.mmc_request* %0, %struct.mmc_request** %mrq1, align 8, !dbg !14060
  %2 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !14061
  %state = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %2, i32 0, i32 30, !dbg !14063
  %3 = load i32, i32* %state, align 8, !dbg !14063
  %cmp = icmp eq i32 %3, 7, !dbg !14064
  br i1 %cmp, label %if.then, label %if.end, !dbg !14065

if.then:                                          ; preds = %entry
  %4 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !14066
  %mmc = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %4, i32 0, i32 0, !dbg !14066
  %5 = load %struct.mmc_host*, %struct.mmc_host** %mmc, align 8, !dbg !14066
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 1, !dbg !14066
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %class_dev, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.49, i64 0, i64 0)) #13, !dbg !14066
  %6 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !14068
  %state2 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %6, i32 0, i32 30, !dbg !14069
  store i32 0, i32* %state2, align 8, !dbg !14070
  br label %if.end, !dbg !14071

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !14072
  %state3 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %7, i32 0, i32 30, !dbg !14074
  %8 = load i32, i32* %state3, align 8, !dbg !14074
  %cmp4 = icmp eq i32 %8, 0, !dbg !14075
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !14076

if.then5:                                         ; preds = %if.end
  %9 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !14077
  %state6 = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %9, i32 0, i32 30, !dbg !14079
  store i32 1, i32* %state6, align 8, !dbg !14080
  %10 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !14081
  %11 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !14082
  call void @dw_mci_start_request(%struct.dw_mci* %10, %struct.dw_mci_slot* %11) #12, !dbg !14083
  br label %if.end7, !dbg !14084

if.else:                                          ; preds = %if.end
  %12 = load %struct.dw_mci_slot*, %struct.dw_mci_slot** %slot.addr, align 8, !dbg !14085
  %queue_node = getelementptr inbounds %struct.dw_mci_slot, %struct.dw_mci_slot* %12, i32 0, i32 4, !dbg !14087
  %13 = load %struct.dw_mci*, %struct.dw_mci** %host.addr, align 8, !dbg !14088
  %queue = getelementptr inbounds %struct.dw_mci, %struct.dw_mci* %13, i32 0, i32 31, !dbg !14089
  call void @list_add_tail(%struct.list_head* %queue_node, %struct.list_head* %queue) #12, !dbg !14090
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  ret void, !dbg !14091
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #11 !dbg !14092 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !14093, metadata !DIExpression()), !dbg !14094
  br label %do.body, !dbg !14095

do.body:                                          ; preds = %entry
  br label %__here, !dbg !14096

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !14099), !dbg !14096
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !14096
  %0 = load i64, i64* %tmp, align 8, !dbg !14096
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !14100
  br label %do.body1, !dbg !14100

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !14101
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !14101
  %rlock = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !14101
  br label %do.end, !dbg !14101

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !14100

do.end2:                                          ; preds = %do.end
  ret void, !dbg !14103

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !14104 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14105, metadata !DIExpression()), !dbg !14106
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14107, metadata !DIExpression()), !dbg !14108
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14109
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14110
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14111
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14111
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14112
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !14113
  ret void, !dbg !14114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14115 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14118, metadata !DIExpression()), !dbg !14119
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14120, metadata !DIExpression()), !dbg !14121
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14122, metadata !DIExpression()), !dbg !14123
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14124
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14126
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14127
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !14128
  br i1 %call, label %if.end, label %if.then, !dbg !14129

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !14130

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14131
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14132
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !14133
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !14134
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14135
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14136
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !14137
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !14138
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14139
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14140
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !14141
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !14142
  br label %do.body, !dbg !14143

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !14144

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !14146

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !14144

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14148
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14148
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !14148
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !14148
  br label %do.end7, !dbg !14148

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !14144

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !14150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14151 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14154, metadata !DIExpression()), !dbg !14155
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14156, metadata !DIExpression()), !dbg !14157
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14158, metadata !DIExpression()), !dbg !14159
  ret i1 true, !dbg !14160
}

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_gpio_get_ro(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_get_noresume(%struct.device* %dev) #0 !dbg !14161 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14163, metadata !DIExpression()), !dbg !14169
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9569, metadata !DIExpression()), !dbg !14174
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9573, metadata !DIExpression()), !dbg !14176
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14177, metadata !DIExpression()), !dbg !14178
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14179, metadata !DIExpression()), !dbg !14180
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14181
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !14182
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !14183
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14184
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !14184
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14185
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !14186
  %conv.i.i = trunc i64 %4 to i32, !dbg !14186
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !14187
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14188
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14188
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !14188
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14189
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14190
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !14191
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #8, !dbg !14192, !srcloc !14193
  ret void, !dbg !14194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #0 !dbg !14195 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !14196, metadata !DIExpression()), !dbg !14200
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !14213, metadata !DIExpression()), !dbg !14214
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !14215, metadata !DIExpression()), !dbg !14216
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !14217, metadata !DIExpression()), !dbg !14219
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !14220, metadata !DIExpression()), !dbg !14219
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !14221, metadata !DIExpression()), !dbg !14219
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !14222, metadata !DIExpression()), !dbg !14219
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !14223, metadata !DIExpression()), !dbg !14219
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !14224, metadata !DIExpression()), !dbg !14230
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !14232, metadata !DIExpression()), !dbg !14233
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !14234, metadata !DIExpression()), !dbg !14235
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !14236, metadata !DIExpression()), !dbg !14237
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !14238, metadata !DIExpression()), !dbg !14239
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14240, metadata !DIExpression()), !dbg !14241
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !14242, metadata !DIExpression()), !dbg !14243
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !14244, metadata !DIExpression()), !dbg !14245
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9569, metadata !DIExpression()), !dbg !14246
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9573, metadata !DIExpression()), !dbg !14248
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14249, metadata !DIExpression()), !dbg !14250
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !14251, metadata !DIExpression()), !dbg !14252
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !14253, metadata !DIExpression()), !dbg !14254
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14255, metadata !DIExpression()), !dbg !14256
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14257
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !14258
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !14259
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14260
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !14260
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14261
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !14262
  %conv.i.i = trunc i64 %4 to i32, !dbg !14262
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !14263
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14264
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14264
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !14264
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14265
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !14266
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !14267
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14268
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !14269
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !14270
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !14271
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !14272
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !14272
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !14272
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !14239
  br label %do.body.i.i.i, !dbg !14273

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !14274
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !14274
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !14274
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !14274
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !14274
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !14274
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !14277

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !14278

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !14279
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !14280
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !14281
  %add.i.i.i = add i32 %19, %20, !dbg !14282
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !14219
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !14219
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !14219
  %23 = load i32, i32* %22, align 4, !dbg !14219
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !14219
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !14219
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !14219
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !14219
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !14219
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !14219
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !14219
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !14219
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !14219
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #8, !dbg !14219, !srcloc !14283
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !14219
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !14219
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !14219
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !14219
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !14284
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !14284
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !14284
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !14284
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !14284
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !14284
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !14219

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !14284
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !14284
  store i32 %31, i32* %32, align 4, !dbg !14284
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !14284

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !14219
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !14219
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !14219
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !14219
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !14219
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !14284
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !14219
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !14286
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !14287
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !14288, !llvm.loop !14289

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !14291
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !14292
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !14293
  ret void, !dbg !14294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_regulator_set_vqmmc(%struct.mmc_host* %mmc, %struct.mmc_ios* %ios) #0 !dbg !14295 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %ios.addr = alloca %struct.mmc_ios*, align 8
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !14296, metadata !DIExpression()), !dbg !14297
  store %struct.mmc_ios* %ios, %struct.mmc_ios** %ios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ios** %ios.addr, metadata !14298, metadata !DIExpression()), !dbg !14299
  ret i32 -22, !dbg !14300
}

; Function Attrs: noredzone
declare dso_local i32 @of_alias_get_id(%struct.device_node*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_gpio_get_cd(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @clk_disable(%struct.clk*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_remove_host(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_regulator_set_ocr(%struct.mmc_host* %mmc, %struct.regulator* %supply, i16 zeroext %vdd_bit) #0 !dbg !14301 {
entry:
  %mmc.addr = alloca %struct.mmc_host*, align 8
  %supply.addr = alloca %struct.regulator*, align 8
  %vdd_bit.addr = alloca i16, align 2
  store %struct.mmc_host* %mmc, %struct.mmc_host** %mmc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %mmc.addr, metadata !14304, metadata !DIExpression()), !dbg !14305
  store %struct.regulator* %supply, %struct.regulator** %supply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %supply.addr, metadata !14306, metadata !DIExpression()), !dbg !14307
  store i16 %vdd_bit, i16* %vdd_bit.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vdd_bit.addr, metadata !14308, metadata !DIExpression()), !dbg !14309
  ret i32 0, !dbg !14310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_enable(%struct.regulator* %regulator) #0 !dbg !14311 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !14315, metadata !DIExpression()), !dbg !14316
  ret i32 0, !dbg !14317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_disable(%struct.regulator* %regulator) #0 !dbg !14318 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !14319, metadata !DIExpression()), !dbg !14320
  ret i32 0, !dbg !14321
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6358}
!llvm.module.flags = !{!6359, !6360, !6361, !6362}
!llvm.ident = !{!6363}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_dw_mci_init320", scope: !2, file: !3, line: 3485, type: !284, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !280, globals: !6314, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/mmc/host/dw_mmc.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !16, !22, !28, !34, !40, !47, !55, !61, !75, !82, !90, !96, !108, !114, !121, !126, !135, !143, !149, !156, !163, !169, !178, !183, !195, !201, !205, !212, !223, !230, !241, !246, !252, !256, !261, !268, !273}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !12, line: 65, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15}
!14 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !17, line: 16, baseType: !7, size: 32, elements: !18)
!17 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!18 = !{!19, !20, !21}
!19 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!21 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !23, line: 26, baseType: !7, size: 32, elements: !24)
!23 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!24 = !{!25, !26, !27}
!25 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!26 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!27 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !29, line: 546, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !35, line: 44, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !41, line: 343, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45, !46}
!43 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !48, line: 524, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52, !53, !54}
!50 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !48, line: 502, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !62, line: 76, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74}
!64 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!69 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!70 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!71 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!72 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!73 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!74 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !76, line: 478, baseType: !7, size: 32, elements: !77)
!76 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!77 = !{!78, !79, !80, !81}
!78 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!79 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !83, line: 1084, baseType: !7, size: 32, elements: !84)
!83 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!84 = !{!85, !86, !87, !88, !89}
!85 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!88 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!89 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !91, line: 11, baseType: !7, size: 32, elements: !92)
!91 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!92 = !{!93, !94, !95}
!93 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!94 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!95 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !97, line: 49, baseType: !7, size: 32, elements: !98)
!97 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107}
!99 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!103 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!104 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!105 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!106 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!107 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !109, line: 118, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113}
!111 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !115, line: 19, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !109, line: 315, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125}
!123 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !127, line: 296, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130, !131, !132, !133, !134}
!129 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !136, line: 9, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139, !140, !141, !142}
!138 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !144, line: 54, baseType: !7, size: 32, elements: !145)
!144 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!145 = !{!146, !147, !148}
!146 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !150, line: 15, baseType: !7, size: 32, elements: !151)
!150 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!151 = !{!152, !153, !154, !155}
!152 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!154 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!155 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !157, line: 59, baseType: !7, size: 32, elements: !158)
!157 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!158 = !{!159, !160, !161, !162}
!159 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!162 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !164, line: 288, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!165 = !{!166, !167, !168}
!166 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !164, line: 732, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175, !176, !177}
!171 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!176 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!177 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !164, line: 468, baseType: !7, size: 32, elements: !179)
!179 = !{!180, !181, !182}
!180 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!181 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!182 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !164, line: 194, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194}
!185 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!188 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!189 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!190 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!191 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!192 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!193 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!194 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !164, line: 533, baseType: !7, size: 32, elements: !196)
!196 = !{!197, !198, !199, !200}
!197 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!198 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!199 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!200 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !164, line: 220, baseType: !7, size: 32, elements: !202)
!202 = !{!203, !204}
!203 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!205 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !164, line: 79, baseType: !7, size: 32, elements: !206)
!206 = !{!207, !208, !209, !210, !211}
!207 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!209 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!210 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!211 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !164, line: 371, baseType: !7, size: 32, elements: !213)
!213 = !{!214, !215, !216, !217, !218, !219, !220, !221, !222}
!214 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!215 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!216 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!217 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!218 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!219 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!221 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!222 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !164, line: 37, baseType: !7, size: 32, elements: !224)
!224 = !{!225, !226, !227, !228, !229}
!225 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!226 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!227 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!228 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!229 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dw_mci_state", file: !231, line: 19, baseType: !7, size: 32, elements: !232)
!231 = !DIFile(filename: "drivers/mmc/host/dw_mmc.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235, !236, !237, !238, !239, !240}
!233 = !DIEnumerator(name: "STATE_IDLE", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "STATE_SENDING_CMD", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "STATE_SENDING_DATA", value: 2, isUnsigned: true)
!236 = !DIEnumerator(name: "STATE_DATA_BUSY", value: 3, isUnsigned: true)
!237 = !DIEnumerator(name: "STATE_SENDING_STOP", value: 4, isUnsigned: true)
!238 = !DIEnumerator(name: "STATE_DATA_ERROR", value: 5, isUnsigned: true)
!239 = !DIEnumerator(name: "STATE_SENDING_CMD11", value: 6, isUnsigned: true)
!240 = !DIEnumerator(name: "STATE_WAITING_CMD11_DONE", value: 7, isUnsigned: true)
!241 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !242, line: 10, baseType: !7, size: 32, elements: !243)
!242 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!245 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !231, line: 30, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249, !250, !251}
!248 = !DIEnumerator(name: "EVENT_CMD_COMPLETE", value: 0, isUnsigned: true)
!249 = !DIEnumerator(name: "EVENT_XFER_COMPLETE", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "EVENT_DATA_COMPLETE", value: 2, isUnsigned: true)
!251 = !DIEnumerator(name: "EVENT_DATA_ERROR", value: 3, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !76, line: 651, baseType: !7, size: 32, elements: !253)
!253 = !{!254, !255}
!254 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!255 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!256 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !231, line: 45, baseType: !7, size: 32, elements: !257)
!257 = !{!258, !259, !260}
!258 = !DIEnumerator(name: "TRANS_MODE_PIO", value: 0, isUnsigned: true)
!259 = !DIEnumerator(name: "TRANS_MODE_IDMAC", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "TRANS_MODE_EDMAC", value: 2, isUnsigned: true)
!261 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !262, line: 5, baseType: !7, size: 32, elements: !263)
!262 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!263 = !{!264, !265, !266, !267}
!264 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!265 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dw_mci_cookie", file: !231, line: 37, baseType: !7, size: 32, elements: !269)
!269 = !{!270, !271, !272}
!270 = !DIEnumerator(name: "COOKIE_UNMAPPED", value: 0, isUnsigned: true)
!271 = !DIEnumerator(name: "COOKIE_PRE_MAPPED", value: 1, isUnsigned: true)
!272 = !DIEnumerator(name: "COOKIE_MAPPED", value: 2, isUnsigned: true)
!273 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !274, line: 305, baseType: !7, size: 32, elements: !275)
!274 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276, !277, !278, !279}
!276 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!277 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!278 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!279 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!280 = !{!281, !282, !284, !285, !286, !6257, !6259, !2802, !6260, !6262, !6264, !6266, !326, !6268, !311, !446, !328, !6269, !6210, !6270, !309, !6272, !649, !6275, !6277}
!281 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !283, line: 148, baseType: !7)
!283 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!285 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_mci", file: !231, line: 155, size: 4864, elements: !288)
!288 = !{!289, !305, !306, !307, !308, !313, !316, !330, !5346, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826, !5827, !5828, !5829, !5849, !5850, !6139, !6141, !6142, !6143, !6144, !6145, !6165, !6166, !6167, !6168, !6169, !6170, !6171, !6172, !6173, !6174, !6193, !6228, !6229, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6245, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !287, file: !231, line: 156, baseType: !290)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !291, line: 83, baseType: !292)
!291 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !291, line: 71, elements: !293)
!293 = !{!294}
!294 = !DIDerivedType(tag: DW_TAG_member, scope: !292, file: !291, line: 72, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !292, file: !291, line: 72, elements: !296)
!296 = !{!297}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !295, file: !291, line: 73, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !291, line: 20, elements: !299)
!299 = !{!300}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !298, file: !291, line: 21, baseType: !301)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !302, line: 25, baseType: !303)
!302 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !302, line: 25, elements: !304)
!304 = !{}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "irq_lock", scope: !287, file: !231, line: 157, baseType: !290)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !287, file: !231, line: 158, baseType: !284, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_reg", scope: !287, file: !231, line: 159, baseType: !284, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr_override", scope: !287, file: !231, line: 160, baseType: !309, size: 32, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !310, line: 21, baseType: !311)
!310 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !312, line: 27, baseType: !7)
!312 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!313 = !DIDerivedType(tag: DW_TAG_member, name: "wm_aligned", scope: !287, file: !231, line: 161, baseType: !314, size: 8, offset: 160)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !283, line: 30, baseType: !315)
!315 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !287, file: !231, line: 163, baseType: !317, size: 64, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !319, line: 11, size: 256, elements: !320)
!319 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!320 = !{!321, !322, !323, !324, !329}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !318, file: !319, line: 12, baseType: !281, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !318, file: !319, line: 13, baseType: !7, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !318, file: !319, line: 14, baseType: !7, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !318, file: !319, line: 15, baseType: !325, size: 64, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !283, line: 143, baseType: !326)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !310, line: 23, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !312, line: 31, baseType: !328)
!328 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !318, file: !319, line: 17, baseType: !7, size: 32, offset: 192)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "sg_miter", scope: !287, file: !231, line: 164, baseType: !331, size: 576, offset: 256)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_mapping_iter", file: !319, line: 497, size: 576, elements: !332)
!332 = !{!333, !5333, !5334, !5335, !5336, !5343, !5344, !5345}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !331, file: !319, line: 499, baseType: !334, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !336, line: 68, size: 512, align: 128, elements: !337)
!336 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!337 = !{!338, !339, !5325, !5332}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !335, file: !336, line: 69, baseType: !281, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, scope: !335, file: !336, line: 77, baseType: !340, size: 320, offset: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !335, file: !336, line: 77, size: 320, elements: !341)
!341 = !{!342, !5220, !5224, !5250, !5258, !5264, !5276, !5324}
!342 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 78, baseType: !343, size: 320)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 78, size: 320, elements: !344)
!344 = !{!345, !351, !5218, !5219}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !343, file: !336, line: 84, baseType: !346, size: 128)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !283, line: 178, size: 128, elements: !347)
!347 = !{!348, !350}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !346, file: !283, line: 179, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !346, file: !283, line: 179, baseType: !349, size: 64, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !343, file: !336, line: 86, baseType: !352, size: 64, offset: 128)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !127, line: 451, size: 1216, align: 64, elements: !354)
!354 = !{!355, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5213, !5214, !5215, !5216, !5217}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !353, file: !127, line: 452, baseType: !356, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !127, line: 610, size: 4224, elements: !358)
!358 = !{!359, !362, !363, !372, !379, !380, !4991, !4992, !4993, !4994, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5034, !5042, !5043, !5044, !5054, !5055, !5056, !5057}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !357, file: !127, line: 611, baseType: !360, size: 16)
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !283, line: 19, baseType: !361)
!361 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !357, file: !127, line: 612, baseType: !361, size: 16, offset: 16)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !357, file: !127, line: 613, baseType: !364, size: 32, offset: 32)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !365, line: 23, baseType: !366)
!365 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !365, line: 21, size: 32, elements: !367)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !366, file: !365, line: 22, baseType: !369, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !283, line: 32, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !371, line: 49, baseType: !7)
!371 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!372 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !357, file: !127, line: 614, baseType: !373, size: 32, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !365, line: 28, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !365, line: 26, size: 32, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !374, file: !365, line: 27, baseType: !377, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !283, line: 33, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !371, line: 50, baseType: !7)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !357, file: !127, line: 615, baseType: !7, size: 32, offset: 96)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !357, file: !127, line: 622, baseType: !381, size: 64, offset: 128)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !127, line: 1864, size: 1536, align: 512, elements: !384)
!384 = !{!385, !4868, !4878, !4882, !4888, !4892, !4896, !4900, !4904, !4908, !4912, !4913, !4917, !4921, !4941, !4967, !4971, !4977, !4982, !4986, !4987}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !383, file: !127, line: 1865, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DISubroutineType(types: !388)
!388 = !{!389, !356, !389, !7}
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !391, line: 89, size: 1536, elements: !392)
!391 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!392 = !{!393, !394, !404, !412, !413, !429, !430, !434, !447, !519, !4852, !4853, !4854, !4860, !4861, !4862}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !390, file: !391, line: 91, baseType: !7, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !390, file: !391, line: 92, baseType: !395, size: 32, offset: 32)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !396, line: 277, baseType: !397)
!396 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !396, line: 277, size: 32, elements: !398)
!398 = !{!399}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !397, file: !396, line: 277, baseType: !400, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !396, line: 70, baseType: !401)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !396, line: 65, size: 32, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !401, file: !396, line: 66, baseType: !7, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !390, file: !391, line: 93, baseType: !405, size: 128, offset: 64)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !406, line: 38, size: 128, elements: !407)
!406 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!407 = !{!408, !410}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !405, file: !406, line: 39, baseType: !409, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !405, file: !406, line: 39, baseType: !411, size: 64, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !390, file: !391, line: 94, baseType: !389, size: 64, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !390, file: !391, line: 95, baseType: !414, size: 128, offset: 256)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !391, line: 47, size: 128, elements: !415)
!415 = !{!416, !425}
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !391, line: 48, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !391, line: 48, size: 64, elements: !418)
!418 = !{!419, !424}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !391, line: 49, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !417, file: !391, line: 49, size: 64, elements: !421)
!421 = !{!422, !423}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !420, file: !391, line: 50, baseType: !309, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !420, file: !391, line: 50, baseType: !309, size: 32, offset: 32)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !417, file: !391, line: 52, baseType: !326, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !414, file: !391, line: 54, baseType: !426, size: 64, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!428 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !390, file: !391, line: 96, baseType: !356, size: 64, offset: 384)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !390, file: !391, line: 98, baseType: !431, size: 256, offset: 448)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !428, size: 256, elements: !432)
!432 = !{!433}
!433 = !DISubrange(count: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !390, file: !391, line: 101, baseType: !435, size: 32, offset: 704)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !436, line: 25, size: 32, elements: !437)
!436 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!437 = !{!438}
!438 = !DIDerivedType(tag: DW_TAG_member, scope: !435, file: !436, line: 26, baseType: !439, size: 32)
!439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !435, file: !436, line: 26, size: 32, elements: !440)
!440 = !{!441}
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !439, file: !436, line: 30, baseType: !442, size: 32)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !439, file: !436, line: 30, size: 32, elements: !443)
!443 = !{!444, !445}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !442, file: !436, line: 31, baseType: !290)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !442, file: !436, line: 32, baseType: !446, size: 32)
!446 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !390, file: !391, line: 102, baseType: !448, size: 64, offset: 768)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !391, line: 135, size: 1024, align: 512, elements: !451)
!451 = !{!452, !456, !457, !464, !473, !477, !481, !485, !486, !490, !495, !507, !513}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !450, file: !391, line: 136, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{!446, !389, !7}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !450, file: !391, line: 137, baseType: !453, size: 64, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !450, file: !391, line: 138, baseType: !458, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!446, !461, !463}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !390)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !450, file: !391, line: 139, baseType: !465, size: 64, offset: 192)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{!446, !461, !7, !468, !471}
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!470 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !414)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !450, file: !391, line: 141, baseType: !474, size: 64, offset: 256)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{!446, !461}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !450, file: !391, line: 142, baseType: !478, size: 64, offset: 320)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!446, !389}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !450, file: !391, line: 143, baseType: !482, size: 64, offset: 384)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{null, !389}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !450, file: !391, line: 144, baseType: !482, size: 64, offset: 448)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !450, file: !391, line: 145, baseType: !487, size: 64, offset: 512)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{null, !389, !356}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !450, file: !391, line: 146, baseType: !491, size: 64, offset: 576)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!494, !389, !494, !446}
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !450, file: !391, line: 147, baseType: !496, size: 64, offset: 640)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DISubroutineType(types: !498)
!498 = !{!499, !501}
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !391, line: 18, flags: DIFlagFwdDecl)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !503, line: 8, size: 128, elements: !504)
!503 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!504 = !{!505, !506}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !502, file: !503, line: 9, baseType: !499, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !502, file: !503, line: 10, baseType: !389, size: 64, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !450, file: !391, line: 148, baseType: !508, size: 64, offset: 704)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!446, !511, !314}
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !450, file: !391, line: 149, baseType: !514, size: 64, offset: 768)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!389, !389, !517}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !390, file: !391, line: 103, baseType: !520, size: 64, offset: 832)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !127, line: 1416, size: 9472, elements: !522)
!522 = !{!523, !524, !527, !528, !529, !533, !584, !4524, !4606, !4689, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4705, !4709, !4710, !4711, !4712, !4715, !4716, !4717, !4758, !4784, !4785, !4786, !4787, !4788, !4789, !4792, !4793, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !521, file: !127, line: 1417, baseType: !346, size: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !521, file: !127, line: 1418, baseType: !525, size: 32, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !283, line: 16, baseType: !526)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !283, line: 13, baseType: !309)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !521, file: !127, line: 1419, baseType: !428, size: 8, offset: 160)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !521, file: !127, line: 1420, baseType: !281, size: 64, offset: 192)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !521, file: !127, line: 1421, baseType: !530, size: 64, offset: 256)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !283, line: 46, baseType: !531)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !371, line: 88, baseType: !532)
!532 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !521, file: !127, line: 1422, baseType: !534, size: 64, offset: 320)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !127, line: 2228, size: 576, elements: !536)
!536 = !{!537, !538, !539, !545, !549, !553, !557, !561, !562, !572, !575, !576, !577, !581, !582, !583}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !535, file: !127, line: 2229, baseType: !468, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !535, file: !127, line: 2230, baseType: !446, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !535, file: !127, line: 2238, baseType: !540, size: 64, offset: 128)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DISubroutineType(types: !542)
!542 = !{!446, !543}
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !127, line: 69, flags: DIFlagFwdDecl)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !535, file: !127, line: 2239, baseType: !546, size: 64, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !548)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !127, line: 70, flags: DIFlagFwdDecl)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !535, file: !127, line: 2240, baseType: !550, size: 64, offset: 256)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DISubroutineType(types: !552)
!552 = !{!389, !534, !446, !468, !284}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !535, file: !127, line: 2242, baseType: !554, size: 64, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DISubroutineType(types: !556)
!556 = !{null, !520}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !535, file: !127, line: 2243, baseType: !558, size: 64, offset: 384)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !560, line: 76, flags: DIFlagFwdDecl)
!560 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !535, file: !127, line: 2244, baseType: !534, size: 64, offset: 448)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !535, file: !127, line: 2245, baseType: !563, size: 64, offset: 512)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !283, line: 182, size: 64, elements: !564)
!564 = !{!565}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !563, file: !283, line: 183, baseType: !566, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !283, line: 186, size: 128, elements: !568)
!568 = !{!569, !570}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !567, file: !283, line: 187, baseType: !566, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !567, file: !283, line: 187, baseType: !571, size: 64, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !535, file: !127, line: 2247, baseType: !573, offset: 576)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !574, line: 187, elements: !304)
!574 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!575 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !535, file: !127, line: 2248, baseType: !573, offset: 576)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !535, file: !127, line: 2249, baseType: !573, offset: 576)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !535, file: !127, line: 2250, baseType: !578, offset: 576)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !573, elements: !579)
!579 = !{!580}
!580 = !DISubrange(count: 3)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !535, file: !127, line: 2252, baseType: !573, offset: 576)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !535, file: !127, line: 2253, baseType: !573, offset: 576)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !535, file: !127, line: 2254, baseType: !573, offset: 576)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !521, file: !127, line: 1423, baseType: !585, size: 64, offset: 384)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !127, line: 1935, size: 1472, elements: !588)
!588 = !{!589, !593, !597, !598, !602, !622, !626, !627, !628, !632, !636, !637, !638, !639, !645, !650, !651, !4501, !4502, !4503, !4504, !4508, !4523}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !587, file: !127, line: 1936, baseType: !590, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!356, !520}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !587, file: !127, line: 1937, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{null, !356}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !587, file: !127, line: 1938, baseType: !594, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !587, file: !127, line: 1940, baseType: !599, size: 64, offset: 192)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DISubroutineType(types: !601)
!601 = !{null, !356, !446}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !587, file: !127, line: 1941, baseType: !603, size: 64, offset: 256)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!446, !356, !606}
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !608)
!608 = !{!609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !607, file: !6, line: 52, baseType: !285, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !607, file: !6, line: 54, baseType: !285, size: 64, offset: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !607, file: !6, line: 61, baseType: !530, size: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !607, file: !6, line: 62, baseType: !530, size: 64, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !607, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !607, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !607, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !607, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !607, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !607, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !607, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !607, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !607, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !587, file: !127, line: 1942, baseType: !623, size: 64, offset: 320)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!446, !356}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !587, file: !127, line: 1943, baseType: !594, size: 64, offset: 384)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !587, file: !127, line: 1944, baseType: !554, size: 64, offset: 448)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !587, file: !127, line: 1945, baseType: !629, size: 64, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!446, !520, !446}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !587, file: !127, line: 1946, baseType: !633, size: 64, offset: 576)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!446, !520}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !587, file: !127, line: 1947, baseType: !633, size: 64, offset: 640)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !587, file: !127, line: 1948, baseType: !633, size: 64, offset: 704)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !587, file: !127, line: 1949, baseType: !633, size: 64, offset: 768)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !587, file: !127, line: 1950, baseType: !640, size: 64, offset: 832)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!446, !389, !643}
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !127, line: 57, flags: DIFlagFwdDecl)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !587, file: !127, line: 1951, baseType: !646, size: 64, offset: 896)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{!446, !520, !649, !494}
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !587, file: !127, line: 1952, baseType: !554, size: 64, offset: 960)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !587, file: !127, line: 1954, baseType: !652, size: 64, offset: 1024)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!446, !655, !389}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !657, line: 16, size: 896, elements: !658)
!657 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!658 = !{!659, !660, !664, !665, !666, !667, !668, !669, !684, !706, !707, !4500}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !656, file: !657, line: 17, baseType: !494, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !656, file: !657, line: 18, baseType: !661, size: 64, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !283, line: 55, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !371, line: 72, baseType: !663)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !371, line: 16, baseType: !281)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !656, file: !657, line: 19, baseType: !661, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !656, file: !657, line: 20, baseType: !661, size: 64, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !656, file: !657, line: 21, baseType: !661, size: 64, offset: 256)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !656, file: !657, line: 22, baseType: !530, size: 64, offset: 320)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !656, file: !657, line: 23, baseType: !530, size: 64, offset: 384)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !656, file: !657, line: 24, baseType: !670, size: 192, offset: 448)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !671, line: 53, size: 192, elements: !672)
!671 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!672 = !{!673, !682, !683}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !670, file: !671, line: 54, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !675, line: 13, baseType: !676)
!675 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !283, line: 175, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !283, line: 173, size: 64, elements: !678)
!678 = !{!679}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !677, file: !283, line: 174, baseType: !680, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !310, line: 22, baseType: !681)
!681 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !312, line: 30, baseType: !532)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !670, file: !671, line: 55, baseType: !290, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !670, file: !671, line: 59, baseType: !346, size: 128, offset: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !656, file: !657, line: 25, baseType: !685, size: 64, offset: 640)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !657, line: 31, size: 256, elements: !688)
!688 = !{!689, !694, !698, !702}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !687, file: !657, line: 32, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{!284, !655, !693}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !687, file: !657, line: 33, baseType: !695, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{null, !655, !284}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !687, file: !657, line: 34, baseType: !699, size: 64, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!284, !655, !284, !693}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !687, file: !657, line: 35, baseType: !703, size: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!446, !655, !284}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !656, file: !657, line: 26, baseType: !446, size: 32, offset: 704)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !656, file: !657, line: 27, baseType: !708, size: 64, offset: 768)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !127, line: 916, size: 1856, align: 32, elements: !711)
!711 = !{!712, !730, !731, !732, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4481, !4482, !4491, !4492, !4493, !4494, !4495, !4496, !4499}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !710, file: !127, line: 920, baseType: !713, size: 128)
!713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !127, line: 917, size: 128, elements: !714)
!714 = !{!715, !721}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !713, file: !127, line: 918, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !717, line: 58, size: 64, elements: !718)
!717 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !716, file: !717, line: 59, baseType: !720, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !713, file: !127, line: 919, baseType: !722, size: 128, align: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !283, line: 216, size: 128, align: 64, elements: !723)
!723 = !{!724, !726}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !722, file: !283, line: 217, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !722, file: !283, line: 218, baseType: !727, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !725}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !710, file: !127, line: 921, baseType: !502, size: 128, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !710, file: !127, line: 922, baseType: !356, size: 64, offset: 256)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !710, file: !127, line: 923, baseType: !733, size: 64, offset: 320)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !127, line: 1822, size: 2048, elements: !736)
!736 = !{!737, !738, !743, !750, !754, !845, !846, !850, !863, !864, !872, !876, !877, !4298, !4299, !4303, !4308, !4309, !4313, !4317, !4425, !4429, !4430, !4434, !4435, !4439, !4443, !4448, !4452, !4456, !4460, !4464}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !735, file: !127, line: 1823, baseType: !558, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !735, file: !127, line: 1824, baseType: !739, size: 64, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = !DISubroutineType(types: !741)
!741 = !{!530, !742, !530, !446}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !735, file: !127, line: 1825, baseType: !744, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!747, !742, !494, !661, !693}
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !283, line: 60, baseType: !748)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !371, line: 73, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !371, line: 15, baseType: !285)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !735, file: !127, line: 1826, baseType: !751, size: 64, offset: 192)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!747, !742, !468, !661, !693}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !735, file: !127, line: 1827, baseType: !755, size: 64, offset: 256)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{!747, !758, !798}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !127, line: 320, size: 384, elements: !760)
!760 = !{!761, !762, !763, !767, !768, !769, !772, !773}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !759, file: !127, line: 321, baseType: !742, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !759, file: !127, line: 326, baseType: !530, size: 64, offset: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !759, file: !127, line: 327, baseType: !764, size: 64, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DISubroutineType(types: !766)
!766 = !{null, !758, !285, !285}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !759, file: !127, line: 328, baseType: !284, size: 64, offset: 192)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !759, file: !127, line: 329, baseType: !446, size: 32, offset: 256)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !759, file: !127, line: 330, baseType: !770, size: 16, offset: 288)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !310, line: 19, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !312, line: 24, baseType: !361)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !759, file: !127, line: 331, baseType: !770, size: 16, offset: 304)
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !759, file: !127, line: 332, baseType: !774, size: 64, offset: 320)
!774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !759, file: !127, line: 332, size: 64, elements: !775)
!775 = !{!776, !777}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !774, file: !127, line: 333, baseType: !7, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !774, file: !127, line: 334, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !780, line: 569, size: 448, elements: !781)
!780 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!781 = !{!782, !783, !784}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !779, file: !780, line: 570, baseType: !334, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !779, file: !780, line: 571, baseType: !446, size: 32, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !779, file: !780, line: 572, baseType: !785, size: 320, offset: 128)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !786, line: 14, baseType: !787)
!786 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !786, line: 29, size: 320, elements: !788)
!788 = !{!789, !790, !791, !797}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !787, file: !786, line: 30, baseType: !7, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !787, file: !786, line: 31, baseType: !284, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !787, file: !786, line: 32, baseType: !792, size: 64, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !786, line: 16, baseType: !793)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!446, !796, !7, !446, !284}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !787, file: !786, line: 33, baseType: !346, size: 128, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !800, line: 29, size: 320, elements: !801)
!800 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!801 = !{!802, !803, !804, !805, !836}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !799, file: !800, line: 35, baseType: !7, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !799, file: !800, line: 36, baseType: !661, size: 64, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !799, file: !800, line: 37, baseType: !661, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, scope: !799, file: !800, line: 38, baseType: !806, size: 64, offset: 192)
!806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !800, line: 38, size: 64, elements: !807)
!807 = !{!808, !816, !823, !832}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !806, file: !800, line: 39, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !811)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !812, line: 17, size: 128, elements: !813)
!812 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!813 = !{!814, !815}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !811, file: !812, line: 19, baseType: !284, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !811, file: !812, line: 20, baseType: !662, size: 64, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !806, file: !800, line: 40, baseType: !817, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !800, line: 15, size: 128, elements: !820)
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !819, file: !800, line: 16, baseType: !284, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !819, file: !800, line: 17, baseType: !661, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !806, file: !800, line: 41, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !827, line: 31, size: 128, elements: !828)
!827 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!828 = !{!829, !830, !831}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !826, file: !827, line: 32, baseType: !334, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !826, file: !827, line: 33, baseType: !7, size: 32, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !826, file: !827, line: 34, baseType: !7, size: 32, offset: 96)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !806, file: !800, line: 42, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !835, line: 53, flags: DIFlagFwdDecl)
!835 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!836 = !DIDerivedType(tag: DW_TAG_member, scope: !799, file: !800, line: 44, baseType: !837, size: 64, offset: 256)
!837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !800, line: 44, size: 64, elements: !838)
!838 = !{!839, !840}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !837, file: !800, line: 45, baseType: !281, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, scope: !837, file: !800, line: 46, baseType: !841, size: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !837, file: !800, line: 46, size: 64, elements: !842)
!842 = !{!843, !844}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !841, file: !800, line: 47, baseType: !7, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !841, file: !800, line: 48, baseType: !7, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !735, file: !127, line: 1828, baseType: !755, size: 64, offset: 320)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !735, file: !127, line: 1829, baseType: !847, size: 64, offset: 384)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{!446, !758, !314}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !735, file: !127, line: 1830, baseType: !851, size: 64, offset: 448)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{!446, !742, !854}
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !127, line: 1776, size: 128, elements: !856)
!856 = !{!857, !862}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !855, file: !127, line: 1777, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !127, line: 1773, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!446, !854, !468, !446, !530, !326, !7}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !855, file: !127, line: 1778, baseType: !530, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !735, file: !127, line: 1831, baseType: !851, size: 64, offset: 512)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !735, file: !127, line: 1832, baseType: !865, size: 64, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!868, !742, !870}
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !869, line: 52, baseType: !7)
!869 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !127, line: 56, flags: DIFlagFwdDecl)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !735, file: !127, line: 1833, baseType: !873, size: 64, offset: 640)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!285, !742, !7, !281}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !735, file: !127, line: 1834, baseType: !873, size: 64, offset: 704)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !735, file: !127, line: 1835, baseType: !878, size: 64, offset: 768)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!446, !742, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !336, line: 305, size: 1472, elements: !883)
!883 = !{!884, !885, !886, !887, !888, !896, !897, !4275, !4281, !4282, !4287, !4288, !4291, !4292, !4293, !4294, !4295, !4296}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !882, file: !336, line: 308, baseType: !281, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !882, file: !336, line: 309, baseType: !281, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !882, file: !336, line: 313, baseType: !881, size: 64, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !882, file: !336, line: 313, baseType: !881, size: 64, offset: 192)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !882, file: !336, line: 315, baseType: !889, size: 192, align: 64, offset: 256)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !890, line: 24, size: 192, align: 64, elements: !891)
!890 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!891 = !{!892, !893, !895}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !889, file: !890, line: 25, baseType: !281, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !889, file: !890, line: 26, baseType: !894, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !889, file: !890, line: 27, baseType: !894, size: 64, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !882, file: !336, line: 323, baseType: !281, size: 64, offset: 448)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !882, file: !336, line: 327, baseType: !898, size: 64, offset: 512)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !336, line: 388, size: 7296, elements: !900)
!900 = !{!901, !4273}
!901 = !DIDerivedType(tag: DW_TAG_member, scope: !899, file: !336, line: 389, baseType: !902, size: 7296)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !899, file: !336, line: 389, size: 7296, elements: !903)
!903 = !{!904, !905, !909, !910, !914, !915, !916, !917, !918, !927, !932, !933, !934, !935, !936, !937, !938, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !973, !981, !984, !1024, !1025, !4257, !4258, !4261, !4262, !4263, !4266, !4267, !4268, !4271, !4272}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !902, file: !336, line: 390, baseType: !881, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !902, file: !336, line: 391, baseType: !906, size: 64, offset: 64)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !890, line: 31, size: 64, elements: !907)
!907 = !{!908}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !906, file: !890, line: 32, baseType: !894, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !902, file: !336, line: 392, baseType: !326, size: 64, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !902, file: !336, line: 394, baseType: !911, size: 64, offset: 192)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!281, !742, !281, !281, !281, !281}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !902, file: !336, line: 398, baseType: !281, size: 64, offset: 256)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !902, file: !336, line: 399, baseType: !281, size: 64, offset: 320)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !902, file: !336, line: 405, baseType: !281, size: 64, offset: 384)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !902, file: !336, line: 406, baseType: !281, size: 64, offset: 448)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !902, file: !336, line: 407, baseType: !919, size: 64, offset: 512)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !921, line: 286, baseType: !922)
!921 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !921, line: 286, size: 64, elements: !923)
!923 = !{!924}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !922, file: !921, line: 286, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !926, line: 18, baseType: !281)
!926 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!927 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !902, file: !336, line: 416, baseType: !928, size: 32, offset: 576)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !283, line: 168, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !283, line: 166, size: 32, elements: !930)
!930 = !{!931}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !929, file: !283, line: 167, baseType: !446, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !902, file: !336, line: 428, baseType: !928, size: 32, offset: 608)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !902, file: !336, line: 437, baseType: !928, size: 32, offset: 640)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !902, file: !336, line: 447, baseType: !928, size: 32, offset: 672)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !902, file: !336, line: 450, baseType: !674, size: 64, offset: 704)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !902, file: !336, line: 452, baseType: !446, size: 32, offset: 768)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !902, file: !336, line: 454, baseType: !290, offset: 800)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !902, file: !336, line: 457, baseType: !939, size: 256, offset: 832)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !940, line: 35, size: 256, elements: !941)
!940 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!941 = !{!942, !943, !944, !946}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !939, file: !940, line: 36, baseType: !674, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !939, file: !940, line: 42, baseType: !674, size: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !939, file: !940, line: 46, baseType: !945, offset: 128)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !291, line: 29, baseType: !298)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !939, file: !940, line: 47, baseType: !346, size: 128, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !902, file: !336, line: 459, baseType: !346, size: 128, offset: 1088)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !902, file: !336, line: 466, baseType: !281, size: 64, offset: 1216)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !902, file: !336, line: 467, baseType: !281, size: 64, offset: 1280)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !902, file: !336, line: 469, baseType: !281, size: 64, offset: 1344)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !902, file: !336, line: 470, baseType: !281, size: 64, offset: 1408)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !902, file: !336, line: 471, baseType: !676, size: 64, offset: 1472)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !902, file: !336, line: 472, baseType: !281, size: 64, offset: 1536)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !902, file: !336, line: 473, baseType: !281, size: 64, offset: 1600)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !902, file: !336, line: 474, baseType: !281, size: 64, offset: 1664)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !902, file: !336, line: 475, baseType: !281, size: 64, offset: 1728)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !902, file: !336, line: 477, baseType: !290, offset: 1792)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !902, file: !336, line: 478, baseType: !281, size: 64, offset: 1792)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !902, file: !336, line: 478, baseType: !281, size: 64, offset: 1856)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !902, file: !336, line: 478, baseType: !281, size: 64, offset: 1920)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !902, file: !336, line: 478, baseType: !281, size: 64, offset: 1984)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !902, file: !336, line: 479, baseType: !281, size: 64, offset: 2048)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !902, file: !336, line: 479, baseType: !281, size: 64, offset: 2112)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !902, file: !336, line: 479, baseType: !281, size: 64, offset: 2176)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !902, file: !336, line: 480, baseType: !281, size: 64, offset: 2240)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !902, file: !336, line: 480, baseType: !281, size: 64, offset: 2304)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !902, file: !336, line: 480, baseType: !281, size: 64, offset: 2368)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !902, file: !336, line: 480, baseType: !281, size: 64, offset: 2432)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !902, file: !336, line: 482, baseType: !970, size: 2816, offset: 2496)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 2816, elements: !971)
!971 = !{!972}
!972 = !DISubrange(count: 44)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !902, file: !336, line: 488, baseType: !974, size: 256, offset: 5312)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !975, line: 60, size: 256, elements: !976)
!975 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!976 = !{!977}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !974, file: !975, line: 61, baseType: !978, size: 256)
!978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !674, size: 256, elements: !979)
!979 = !{!980}
!980 = !DISubrange(count: 4)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !902, file: !336, line: 490, baseType: !982, size: 64, offset: 5568)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !336, line: 490, flags: DIFlagFwdDecl)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !902, file: !336, line: 493, baseType: !985, size: 896, offset: 5632)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !986, line: 53, baseType: !987)
!986 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !986, line: 13, size: 896, elements: !988)
!988 = !{!989, !990, !991, !992, !995, !996, !997, !998, !1018, !1019, !1020}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !987, file: !986, line: 18, baseType: !326, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !987, file: !986, line: 28, baseType: !676, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !987, file: !986, line: 31, baseType: !939, size: 256, offset: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !987, file: !986, line: 32, baseType: !993, size: 64, offset: 384)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !986, line: 32, flags: DIFlagFwdDecl)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !987, file: !986, line: 37, baseType: !361, size: 16, offset: 448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !987, file: !986, line: 40, baseType: !670, size: 192, offset: 512)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !987, file: !986, line: 41, baseType: !284, size: 64, offset: 704)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !987, file: !986, line: 42, baseType: !999, size: 64, offset: 768)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1002, line: 13, size: 896, elements: !1003)
!1002 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1001, file: !1002, line: 14, baseType: !284, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1001, file: !1002, line: 15, baseType: !281, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1001, file: !1002, line: 17, baseType: !281, size: 64, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1001, file: !1002, line: 17, baseType: !281, size: 64, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1001, file: !1002, line: 19, baseType: !285, size: 64, offset: 256)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1001, file: !1002, line: 21, baseType: !285, size: 64, offset: 320)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1001, file: !1002, line: 22, baseType: !285, size: 64, offset: 384)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1001, file: !1002, line: 23, baseType: !285, size: 64, offset: 448)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1001, file: !1002, line: 24, baseType: !285, size: 64, offset: 512)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1001, file: !1002, line: 25, baseType: !285, size: 64, offset: 576)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1001, file: !1002, line: 26, baseType: !285, size: 64, offset: 640)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1001, file: !1002, line: 27, baseType: !285, size: 64, offset: 704)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1001, file: !1002, line: 28, baseType: !285, size: 64, offset: 768)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1001, file: !1002, line: 29, baseType: !285, size: 64, offset: 832)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !987, file: !986, line: 44, baseType: !928, size: 32, offset: 832)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !987, file: !986, line: 50, baseType: !770, size: 16, offset: 864)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !987, file: !986, line: 51, baseType: !1021, size: 16, offset: 880)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !310, line: 18, baseType: !1022)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !312, line: 23, baseType: !1023)
!1023 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !902, file: !336, line: 495, baseType: !281, size: 64, offset: 6528)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !902, file: !336, line: 497, baseType: !1026, size: 64, offset: 6592)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !336, line: 381, size: 384, elements: !1028)
!1028 = !{!1029, !1030, !4256}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1027, file: !336, line: 382, baseType: !928, size: 32)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1027, file: !336, line: 383, baseType: !1031, size: 128, offset: 64)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !336, line: 376, size: 128, elements: !1032)
!1032 = !{!1033, !4254}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1031, file: !336, line: 377, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !835, line: 640, size: 48640, elements: !1036)
!1036 = !{!1037, !1043, !1045, !1046, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1063, !1081, !1092, !1181, !1182, !1183, !1194, !1195, !1197, !1198, !1199, !1200, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1279, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1316, !1318, !1319, !1320, !1332, !1333, !1334, !1335, !1336, !1337, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1361, !1366, !1706, !1707, !1708, !1709, !1713, !1716, !1719, !1722, !1725, !1761, !1862, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1910, !1911, !1912, !1913, !1914, !1919, !1920, !1921, !1924, !1925, !3900, !3909, !3915, !3916, !3917, !3920, !3921, !4000, !4001, !4004, !4005, !4008, !4009, !4010, !4014, !4015, !4016, !4029, !4030, !4031, !4041, !4046, !4047, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1035, file: !835, line: 646, baseType: !1038, size: 128)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1039, line: 56, size: 128, elements: !1040)
!1039 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1040 = !{!1041, !1042}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1038, file: !1039, line: 57, baseType: !281, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1038, file: !1039, line: 58, baseType: !309, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1035, file: !835, line: 649, baseType: !1044, size: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !285)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1035, file: !835, line: 657, baseType: !284, size: 64, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1035, file: !835, line: 658, baseType: !1047, size: 32, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1048, line: 113, baseType: !1049)
!1048 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1048, line: 111, size: 32, elements: !1050)
!1050 = !{!1051}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1049, file: !1048, line: 112, baseType: !928, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1035, file: !835, line: 660, baseType: !7, size: 32, offset: 288)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1035, file: !835, line: 661, baseType: !7, size: 32, offset: 320)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1035, file: !835, line: 684, baseType: !446, size: 32, offset: 352)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1035, file: !835, line: 686, baseType: !446, size: 32, offset: 384)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1035, file: !835, line: 687, baseType: !446, size: 32, offset: 416)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1035, file: !835, line: 688, baseType: !446, size: 32, offset: 448)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1035, file: !835, line: 689, baseType: !7, size: 32, offset: 480)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1035, file: !835, line: 691, baseType: !1060, size: 64, offset: 512)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1062)
!1062 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !835, line: 691, flags: DIFlagFwdDecl)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1035, file: !835, line: 692, baseType: !1064, size: 832, offset: 576)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !835, line: 451, size: 832, elements: !1065)
!1065 = !{!1066, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1064, file: !835, line: 453, baseType: !1067, size: 128)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !835, line: 325, size: 128, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1067, file: !835, line: 326, baseType: !281, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1067, file: !835, line: 327, baseType: !309, size: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1064, file: !835, line: 454, baseType: !889, size: 192, align: 64, offset: 128)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1064, file: !835, line: 455, baseType: !346, size: 128, offset: 320)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1064, file: !835, line: 456, baseType: !7, size: 32, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1064, file: !835, line: 458, baseType: !326, size: 64, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1064, file: !835, line: 459, baseType: !326, size: 64, offset: 576)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1064, file: !835, line: 460, baseType: !326, size: 64, offset: 640)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1064, file: !835, line: 461, baseType: !326, size: 64, offset: 704)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1064, file: !835, line: 463, baseType: !326, size: 64, offset: 768)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1064, file: !835, line: 465, baseType: !1080, offset: 832)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !835, line: 415, elements: !304)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1035, file: !835, line: 693, baseType: !1082, size: 384, offset: 1408)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !835, line: 489, size: 384, elements: !1083)
!1083 = !{!1084, !1085, !1086, !1087, !1088, !1089, !1090}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1082, file: !835, line: 490, baseType: !346, size: 128)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1082, file: !835, line: 491, baseType: !281, size: 64, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1082, file: !835, line: 492, baseType: !281, size: 64, offset: 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1082, file: !835, line: 493, baseType: !7, size: 32, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1082, file: !835, line: 494, baseType: !361, size: 16, offset: 288)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1082, file: !835, line: 495, baseType: !361, size: 16, offset: 304)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1082, file: !835, line: 497, baseType: !1091, size: 64, offset: 320)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1035, file: !835, line: 697, baseType: !1093, size: 1792, offset: 1792)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !835, line: 507, size: 1792, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1178, !1179}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1093, file: !835, line: 508, baseType: !889, size: 192, align: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1093, file: !835, line: 515, baseType: !326, size: 64, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1093, file: !835, line: 516, baseType: !326, size: 64, offset: 256)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1093, file: !835, line: 517, baseType: !326, size: 64, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1093, file: !835, line: 518, baseType: !326, size: 64, offset: 384)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1093, file: !835, line: 519, baseType: !326, size: 64, offset: 448)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1093, file: !835, line: 526, baseType: !680, size: 64, offset: 512)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1093, file: !835, line: 527, baseType: !326, size: 64, offset: 576)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1093, file: !835, line: 528, baseType: !7, size: 32, offset: 640)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1093, file: !835, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1093, file: !835, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1093, file: !835, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1093, file: !835, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1093, file: !835, line: 563, baseType: !1109, size: 512, offset: 704)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !12, line: 118, size: 512, elements: !1110)
!1110 = !{!1111, !1119, !1120, !1125, !1172, !1175, !1176, !1177}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1109, file: !12, line: 119, baseType: !1112, size: 256)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1113, line: 9, size: 256, elements: !1114)
!1113 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1112, file: !1113, line: 10, baseType: !889, size: 192, align: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1112, file: !1113, line: 11, baseType: !1117, size: 64, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1118, line: 29, baseType: !680)
!1118 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1109, file: !12, line: 120, baseType: !1117, size: 64, offset: 256)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1109, file: !12, line: 121, baseType: !1121, size: 64, offset: 320)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!11, !1124}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1109, file: !12, line: 122, baseType: !1126, size: 64, offset: 384)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !12, line: 159, size: 512, align: 512, elements: !1128)
!1128 = !{!1129, !1149, !1150, !1153, !1158, !1159, !1167, !1171}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1127, file: !12, line: 160, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !12, line: 214, size: 4608, align: 512, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1131, file: !12, line: 215, baseType: !945)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1131, file: !12, line: 216, baseType: !7, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1131, file: !12, line: 217, baseType: !7, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1131, file: !12, line: 218, baseType: !7, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1131, file: !12, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1131, file: !12, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1131, file: !12, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1131, file: !12, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1131, file: !12, line: 233, baseType: !1117, size: 64, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1131, file: !12, line: 234, baseType: !1124, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1131, file: !12, line: 235, baseType: !1117, size: 64, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1131, file: !12, line: 236, baseType: !1124, size: 64, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1131, file: !12, line: 237, baseType: !1146, size: 4096, offset: 512)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, size: 4096, elements: !1147)
!1147 = !{!1148}
!1148 = !DISubrange(count: 8)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1127, file: !12, line: 161, baseType: !7, size: 32, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1127, file: !12, line: 162, baseType: !1151, size: 32, offset: 96)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !283, line: 27, baseType: !1152)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !371, line: 96, baseType: !446)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1127, file: !12, line: 163, baseType: !1154, size: 32, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !396, line: 276, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !396, line: 276, size: 32, elements: !1156)
!1156 = !{!1157}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1155, file: !396, line: 276, baseType: !400, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1127, file: !12, line: 164, baseType: !1124, size: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1127, file: !12, line: 165, baseType: !1160, size: 128, offset: 256)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1113, line: 14, size: 128, elements: !1161)
!1161 = !{!1162}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1160, file: !1113, line: 15, baseType: !1163, size: 128)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !890, line: 125, size: 128, elements: !1164)
!1164 = !{!1165, !1166}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1163, file: !890, line: 126, baseType: !906, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1163, file: !890, line: 127, baseType: !894, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1127, file: !12, line: 166, baseType: !1168, size: 64, offset: 384)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1117}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1127, file: !12, line: 167, baseType: !1117, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1109, file: !12, line: 123, baseType: !1173, size: 8, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !310, line: 17, baseType: !1174)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !312, line: 21, baseType: !428)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1109, file: !12, line: 124, baseType: !1173, size: 8, offset: 456)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1109, file: !12, line: 125, baseType: !1173, size: 8, offset: 464)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1109, file: !12, line: 126, baseType: !1173, size: 8, offset: 472)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1093, file: !835, line: 572, baseType: !1109, size: 512, offset: 1216)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1093, file: !835, line: 580, baseType: !1180, size: 64, offset: 1728)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1035, file: !835, line: 721, baseType: !7, size: 32, offset: 3584)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1035, file: !835, line: 722, baseType: !446, size: 32, offset: 3616)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1035, file: !835, line: 723, baseType: !1184, size: 64, offset: 3648)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1187, line: 17, baseType: !1188)
!1187 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1187, line: 17, size: 64, elements: !1189)
!1189 = !{!1190}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1188, file: !1187, line: 17, baseType: !1191, size: 64)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 64, elements: !1192)
!1192 = !{!1193}
!1193 = !DISubrange(count: 1)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1035, file: !835, line: 724, baseType: !1186, size: 64, offset: 3712)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1035, file: !835, line: 749, baseType: !1196, offset: 3776)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !835, line: 290, elements: !304)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1035, file: !835, line: 751, baseType: !346, size: 128, offset: 3776)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1035, file: !835, line: 757, baseType: !898, size: 64, offset: 3904)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1035, file: !835, line: 758, baseType: !898, size: 64, offset: 3968)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1035, file: !835, line: 761, baseType: !1201, size: 320, offset: 4032)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !975, line: 34, size: 320, elements: !1202)
!1202 = !{!1203, !1204}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1201, file: !975, line: 35, baseType: !326, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1201, file: !975, line: 36, baseType: !1205, size: 256, offset: 64)
!1205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !881, size: 256, elements: !979)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1035, file: !835, line: 766, baseType: !446, size: 32, offset: 4352)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1035, file: !835, line: 767, baseType: !446, size: 32, offset: 4384)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1035, file: !835, line: 768, baseType: !446, size: 32, offset: 4416)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1035, file: !835, line: 770, baseType: !446, size: 32, offset: 4448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1035, file: !835, line: 772, baseType: !281, size: 64, offset: 4480)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1035, file: !835, line: 775, baseType: !7, size: 32, offset: 4544)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1035, file: !835, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1035, file: !835, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1035, file: !835, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1035, file: !835, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1035, file: !835, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1035, file: !835, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1035, file: !835, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1035, file: !835, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1035, file: !835, line: 831, baseType: !281, size: 64, offset: 4672)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1035, file: !835, line: 833, baseType: !1222, size: 384, offset: 4736)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !17, line: 25, size: 384, elements: !1223)
!1223 = !{!1224, !1229}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1222, file: !17, line: 26, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!285, !1228}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, scope: !1222, file: !17, line: 27, baseType: !1230, size: 320, offset: 64)
!1230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1222, file: !17, line: 27, size: 320, elements: !1231)
!1231 = !{!1232, !1242, !1269}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1230, file: !17, line: 36, baseType: !1233, size: 320)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1230, file: !17, line: 29, size: 320, elements: !1234)
!1234 = !{!1235, !1237, !1238, !1239, !1240, !1241}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1233, file: !17, line: 30, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1233, file: !17, line: 31, baseType: !309, size: 32, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1233, file: !17, line: 32, baseType: !309, size: 32, offset: 96)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1233, file: !17, line: 33, baseType: !309, size: 32, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1233, file: !17, line: 34, baseType: !326, size: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1233, file: !17, line: 35, baseType: !1236, size: 64, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1230, file: !17, line: 46, baseType: !1243, size: 192)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1230, file: !17, line: 38, size: 192, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1268}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1243, file: !17, line: 39, baseType: !1151, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1243, file: !17, line: 40, baseType: !16, size: 32, offset: 32)
!1247 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !17, line: 41, baseType: !1248, size: 64, offset: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !17, line: 41, size: 64, elements: !1249)
!1249 = !{!1250, !1258}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1248, file: !17, line: 42, baseType: !1251, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1253, line: 7, size: 128, elements: !1254)
!1253 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1254 = !{!1255, !1257}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1252, file: !1253, line: 8, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !371, line: 93, baseType: !532)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1252, file: !1253, line: 9, baseType: !532, size: 64, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1248, file: !17, line: 43, baseType: !1259, size: 64)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1261, line: 7, size: 64, elements: !1262)
!1261 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1262 = !{!1263, !1267}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1260, file: !1261, line: 8, baseType: !1264, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1261, line: 5, baseType: !1265)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !310, line: 20, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !312, line: 26, baseType: !446)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1260, file: !1261, line: 9, baseType: !1265, size: 32, offset: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1243, file: !17, line: 45, baseType: !326, size: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1230, file: !17, line: 54, baseType: !1270, size: 256)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1230, file: !17, line: 48, size: 256, elements: !1271)
!1271 = !{!1272, !1275, !1276, !1277, !1278}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1270, file: !17, line: 49, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !17, line: 14, flags: DIFlagFwdDecl)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1270, file: !17, line: 50, baseType: !446, size: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1270, file: !17, line: 51, baseType: !446, size: 32, offset: 96)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1270, file: !17, line: 52, baseType: !281, size: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1270, file: !17, line: 53, baseType: !281, size: 64, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1035, file: !835, line: 835, baseType: !1280, size: 32, offset: 5120)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !283, line: 22, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !371, line: 28, baseType: !446)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1035, file: !835, line: 836, baseType: !1280, size: 32, offset: 5152)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1035, file: !835, line: 840, baseType: !281, size: 64, offset: 5184)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1035, file: !835, line: 849, baseType: !1034, size: 64, offset: 5248)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1035, file: !835, line: 852, baseType: !1034, size: 64, offset: 5312)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1035, file: !835, line: 857, baseType: !346, size: 128, offset: 5376)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1035, file: !835, line: 858, baseType: !346, size: 128, offset: 5504)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1035, file: !835, line: 859, baseType: !1034, size: 64, offset: 5632)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1035, file: !835, line: 867, baseType: !346, size: 128, offset: 5696)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1035, file: !835, line: 868, baseType: !346, size: 128, offset: 5824)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1035, file: !835, line: 871, baseType: !1292, size: 64, offset: 5952)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !136, line: 59, size: 768, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1300, !1301, !1307, !1308}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1293, file: !136, line: 61, baseType: !1047, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1293, file: !136, line: 62, baseType: !7, size: 32, offset: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1293, file: !136, line: 63, baseType: !290, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1293, file: !136, line: 65, baseType: !1299, size: 256, offset: 64)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 256, elements: !979)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1293, file: !136, line: 66, baseType: !563, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1293, file: !136, line: 68, baseType: !1302, size: 128, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !786, line: 40, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !786, line: 36, size: 128, elements: !1304)
!1304 = !{!1305, !1306}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1303, file: !786, line: 37, baseType: !290)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1303, file: !786, line: 38, baseType: !346, size: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1293, file: !136, line: 69, baseType: !722, size: 128, align: 64, offset: 512)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1293, file: !136, line: 70, baseType: !1309, size: 128, offset: 640)
!1309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !1192)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !136, line: 54, size: 128, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1310, file: !136, line: 55, baseType: !446, size: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1310, file: !136, line: 56, baseType: !1314, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !136, line: 56, flags: DIFlagFwdDecl)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1035, file: !835, line: 872, baseType: !1317, size: 512, offset: 6016)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 512, elements: !979)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1035, file: !835, line: 873, baseType: !346, size: 128, offset: 6528)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1035, file: !835, line: 874, baseType: !346, size: 128, offset: 6656)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1035, file: !835, line: 876, baseType: !1321, size: 64, offset: 6784)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1323, line: 26, size: 192, elements: !1324)
!1323 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1322, file: !1323, line: 27, baseType: !7, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1322, file: !1323, line: 28, baseType: !1327, size: 128, offset: 64)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1328, line: 43, size: 128, elements: !1329)
!1328 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1329 = !{!1330, !1331}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1327, file: !1328, line: 44, baseType: !945)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1327, file: !1328, line: 45, baseType: !346, size: 128)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1035, file: !835, line: 879, baseType: !649, size: 64, offset: 6848)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1035, file: !835, line: 882, baseType: !649, size: 64, offset: 6912)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1035, file: !835, line: 884, baseType: !326, size: 64, offset: 6976)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1035, file: !835, line: 885, baseType: !326, size: 64, offset: 7040)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1035, file: !835, line: 890, baseType: !326, size: 64, offset: 7104)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1035, file: !835, line: 891, baseType: !1338, size: 128, offset: 7168)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !835, line: 242, size: 128, elements: !1339)
!1339 = !{!1340, !1341, !1342}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1338, file: !835, line: 244, baseType: !326, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1338, file: !835, line: 245, baseType: !326, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1338, file: !835, line: 246, baseType: !945, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1035, file: !835, line: 900, baseType: !281, size: 64, offset: 7296)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1035, file: !835, line: 901, baseType: !281, size: 64, offset: 7360)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1035, file: !835, line: 904, baseType: !326, size: 64, offset: 7424)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1035, file: !835, line: 907, baseType: !326, size: 64, offset: 7488)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1035, file: !835, line: 910, baseType: !281, size: 64, offset: 7552)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1035, file: !835, line: 911, baseType: !281, size: 64, offset: 7616)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1035, file: !835, line: 914, baseType: !1350, size: 640, offset: 7680)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1351, line: 123, size: 640, elements: !1352)
!1351 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1352 = !{!1353, !1359, !1360}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1350, file: !1351, line: 124, baseType: !1354, size: 576)
!1354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1355, size: 576, elements: !579)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1351, line: 108, size: 192, elements: !1356)
!1356 = !{!1357, !1358}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1355, file: !1351, line: 109, baseType: !326, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1355, file: !1351, line: 110, baseType: !1160, size: 128, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1350, file: !1351, line: 125, baseType: !7, size: 32, offset: 576)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1350, file: !1351, line: 126, baseType: !7, size: 32, offset: 608)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1035, file: !835, line: 917, baseType: !1362, size: 192, offset: 8320)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1351, line: 134, size: 192, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1362, file: !1351, line: 135, baseType: !722, size: 128, align: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1362, file: !1351, line: 136, baseType: !7, size: 32, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1035, file: !835, line: 923, baseType: !1367, size: 64, offset: 8512)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1370, line: 111, size: 1280, elements: !1371)
!1370 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1371 = !{!1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1391, !1392, !1393, !1394, !1395, !1396, !1506, !1507, !1508, !1509, !1535, !1691, !1701}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1369, file: !1370, line: 112, baseType: !928, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1369, file: !1370, line: 120, baseType: !364, size: 32, offset: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1369, file: !1370, line: 121, baseType: !373, size: 32, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1369, file: !1370, line: 122, baseType: !364, size: 32, offset: 96)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1369, file: !1370, line: 123, baseType: !373, size: 32, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1369, file: !1370, line: 124, baseType: !364, size: 32, offset: 160)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1369, file: !1370, line: 125, baseType: !373, size: 32, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1369, file: !1370, line: 126, baseType: !364, size: 32, offset: 224)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1369, file: !1370, line: 127, baseType: !373, size: 32, offset: 256)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1369, file: !1370, line: 128, baseType: !7, size: 32, offset: 288)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1369, file: !1370, line: 129, baseType: !1383, size: 64, offset: 320)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1384, line: 26, baseType: !1385)
!1384 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1384, line: 24, size: 64, elements: !1386)
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1385, file: !1384, line: 25, baseType: !1388, size: 64)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !311, size: 64, elements: !1389)
!1389 = !{!1390}
!1390 = !DISubrange(count: 2)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1369, file: !1370, line: 130, baseType: !1383, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1369, file: !1370, line: 131, baseType: !1383, size: 64, offset: 448)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1369, file: !1370, line: 132, baseType: !1383, size: 64, offset: 512)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1369, file: !1370, line: 133, baseType: !1383, size: 64, offset: 576)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1369, file: !1370, line: 135, baseType: !428, size: 8, offset: 640)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1369, file: !1370, line: 137, baseType: !1397, size: 64, offset: 704)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1399, line: 189, size: 1664, elements: !1400)
!1399 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1400 = !{!1401, !1402, !1405, !1410, !1411, !1414, !1415, !1422, !1423, !1424, !1425, !1428, !1429, !1430, !1431, !1432, !1470, !1491}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1398, file: !1399, line: 190, baseType: !1047, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1398, file: !1399, line: 191, baseType: !1403, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1399, line: 28, baseType: !1404)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !283, line: 98, baseType: !1265)
!1405 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !1399, line: 192, baseType: !1406, size: 192, offset: 64)
!1406 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !1399, line: 192, size: 192, elements: !1407)
!1407 = !{!1408, !1409}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1406, file: !1399, line: 193, baseType: !346, size: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1406, file: !1399, line: 194, baseType: !889, size: 192, align: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1398, file: !1399, line: 199, baseType: !939, size: 256, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1398, file: !1399, line: 200, baseType: !1412, size: 64, offset: 512)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1399, line: 200, flags: DIFlagFwdDecl)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1398, file: !1399, line: 201, baseType: !284, size: 64, offset: 576)
!1415 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !1399, line: 202, baseType: !1416, size: 64, offset: 640)
!1416 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !1399, line: 202, size: 64, elements: !1417)
!1417 = !{!1418, !1421}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1416, file: !1399, line: 203, baseType: !1419, size: 64)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1420, line: 8, baseType: !681)
!1420 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1416, file: !1399, line: 204, baseType: !1419, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1398, file: !1399, line: 206, baseType: !1419, size: 64, offset: 704)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1398, file: !1399, line: 207, baseType: !364, size: 32, offset: 768)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1398, file: !1399, line: 208, baseType: !373, size: 32, offset: 800)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1398, file: !1399, line: 209, baseType: !1426, size: 32, offset: 832)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1399, line: 31, baseType: !1427)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !283, line: 104, baseType: !309)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1398, file: !1399, line: 210, baseType: !361, size: 16, offset: 864)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1398, file: !1399, line: 211, baseType: !361, size: 16, offset: 880)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1398, file: !1399, line: 215, baseType: !1023, size: 16, offset: 896)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1398, file: !1399, line: 222, baseType: !281, size: 64, offset: 960)
!1432 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !1399, line: 239, baseType: !1433, size: 320, offset: 1024)
!1433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !1399, line: 239, size: 320, elements: !1434)
!1434 = !{!1435, !1462}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1433, file: !1399, line: 240, baseType: !1436, size: 320)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1399, line: 108, size: 320, elements: !1437)
!1437 = !{!1438, !1439, !1451, !1454, !1461}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1436, file: !1399, line: 110, baseType: !281, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, scope: !1436, file: !1399, line: 111, baseType: !1440, size: 64, offset: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1436, file: !1399, line: 111, size: 64, elements: !1441)
!1441 = !{!1442, !1450}
!1442 = !DIDerivedType(tag: DW_TAG_member, scope: !1440, file: !1399, line: 112, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1440, file: !1399, line: 112, size: 64, elements: !1444)
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1443, file: !1399, line: 114, baseType: !770, size: 16)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1443, file: !1399, line: 115, baseType: !1447, size: 48, offset: 16)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 48, elements: !1448)
!1448 = !{!1449}
!1449 = !DISubrange(count: 6)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1440, file: !1399, line: 121, baseType: !281, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1436, file: !1399, line: 123, baseType: !1452, size: 64, offset: 128)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1399, line: 96, flags: DIFlagFwdDecl)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1436, file: !1399, line: 124, baseType: !1455, size: 64, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1399, line: 102, size: 192, elements: !1457)
!1457 = !{!1458, !1459, !1460}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1456, file: !1399, line: 103, baseType: !722, size: 128, align: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1456, file: !1399, line: 104, baseType: !1047, size: 32, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1456, file: !1399, line: 105, baseType: !314, size: 8, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1436, file: !1399, line: 125, baseType: !468, size: 64, offset: 256)
!1462 = !DIDerivedType(tag: DW_TAG_member, scope: !1433, file: !1399, line: 241, baseType: !1463, size: 320)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1433, file: !1399, line: 241, size: 320, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1463, file: !1399, line: 242, baseType: !281, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1463, file: !1399, line: 243, baseType: !281, size: 64, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1463, file: !1399, line: 244, baseType: !1452, size: 64, offset: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1463, file: !1399, line: 245, baseType: !1455, size: 64, offset: 192)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1463, file: !1399, line: 246, baseType: !494, size: 64, offset: 256)
!1470 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !1399, line: 254, baseType: !1471, size: 256, offset: 1344)
!1471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !1399, line: 254, size: 256, elements: !1472)
!1472 = !{!1473, !1479}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1471, file: !1399, line: 255, baseType: !1474, size: 256)
!1474 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1399, line: 128, size: 256, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1474, file: !1399, line: 129, baseType: !284, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1474, file: !1399, line: 130, baseType: !1478, size: 256)
!1478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !979)
!1479 = !DIDerivedType(tag: DW_TAG_member, scope: !1471, file: !1399, line: 256, baseType: !1480, size: 256)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1471, file: !1399, line: 256, size: 256, elements: !1481)
!1481 = !{!1482, !1483}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1480, file: !1399, line: 258, baseType: !346, size: 128)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1480, file: !1399, line: 259, baseType: !1484, size: 128, offset: 128)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1485, line: 22, size: 128, elements: !1486)
!1485 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !{!1487, !1490}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1484, file: !1485, line: 23, baseType: !1488, size: 64)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1485, line: 23, flags: DIFlagFwdDecl)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1484, file: !1485, line: 24, baseType: !281, size: 64, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1398, file: !1399, line: 274, baseType: !1492, size: 64, offset: 1600)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1399, line: 170, size: 192, elements: !1494)
!1494 = !{!1495, !1504, !1505}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1493, file: !1399, line: 171, baseType: !1496, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1399, line: 165, baseType: !1497)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!446, !1397, !1500, !1502, !1397}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1493, file: !1399, line: 172, baseType: !1397, size: 64, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1493, file: !1399, line: 173, baseType: !1452, size: 64, offset: 128)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1369, file: !1370, line: 138, baseType: !1397, size: 64, offset: 768)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1369, file: !1370, line: 139, baseType: !1397, size: 64, offset: 832)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1369, file: !1370, line: 140, baseType: !1397, size: 64, offset: 896)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1369, file: !1370, line: 145, baseType: !1510, size: 64, offset: 960)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1512, line: 13, size: 896, elements: !1513)
!1512 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1513 = !{!1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1511, file: !1512, line: 14, baseType: !1047, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1511, file: !1512, line: 15, baseType: !928, size: 32, offset: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1511, file: !1512, line: 16, baseType: !928, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1511, file: !1512, line: 21, baseType: !674, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1511, file: !1512, line: 27, baseType: !281, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1511, file: !1512, line: 28, baseType: !281, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1511, file: !1512, line: 29, baseType: !674, size: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1511, file: !1512, line: 32, baseType: !567, size: 128, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1511, file: !1512, line: 33, baseType: !364, size: 32, offset: 512)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1511, file: !1512, line: 37, baseType: !674, size: 64, offset: 576)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1511, file: !1512, line: 44, baseType: !1525, size: 256, offset: 640)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1526, line: 15, size: 256, elements: !1527)
!1526 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1527 = !{!1528, !1529, !1530, !1531, !1532, !1533, !1534}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1525, file: !1526, line: 16, baseType: !945)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1525, file: !1526, line: 18, baseType: !446, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1525, file: !1526, line: 19, baseType: !446, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1525, file: !1526, line: 20, baseType: !446, size: 32, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1525, file: !1526, line: 21, baseType: !446, size: 32, offset: 96)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1525, file: !1526, line: 22, baseType: !281, size: 64, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1525, file: !1526, line: 23, baseType: !281, size: 64, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1369, file: !1370, line: 146, baseType: !1536, size: 64, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1538, line: 56, size: 4160, elements: !1539)
!1538 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1539 = !{!1540, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1579, !1580, !1581, !1582, !1583, !1595, !1676, !1677, !1689}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1537, file: !1538, line: 57, baseType: !1541, size: 576)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1538, line: 23, size: 576, elements: !1542)
!1542 = !{!1543, !1544}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1541, file: !1538, line: 24, baseType: !309, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, scope: !1541, file: !1538, line: 25, baseType: !1545, size: 512, offset: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1541, file: !1538, line: 25, size: 512, elements: !1546)
!1546 = !{!1547, !1556}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1545, file: !1538, line: 26, baseType: !1548, size: 480)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1549, size: 480, elements: !1554)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1538, line: 17, size: 96, elements: !1550)
!1550 = !{!1551, !1552, !1553}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1549, file: !1538, line: 18, baseType: !309, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1549, file: !1538, line: 19, baseType: !309, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1549, file: !1538, line: 20, baseType: !309, size: 32, offset: 64)
!1554 = !{!1555}
!1555 = !DISubrange(count: 5)
!1556 = !DIDerivedType(tag: DW_TAG_member, scope: !1545, file: !1538, line: 27, baseType: !1557, size: 128)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1545, file: !1538, line: 27, size: 128, elements: !1558)
!1558 = !{!1559, !1561}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1557, file: !1538, line: 28, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1557, file: !1538, line: 29, baseType: !1560, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1537, file: !1538, line: 58, baseType: !1541, size: 576, offset: 576)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1537, file: !1538, line: 59, baseType: !1541, size: 576, offset: 1152)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1537, file: !1538, line: 60, baseType: !928, size: 32, offset: 1728)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1537, file: !1538, line: 61, baseType: !1536, size: 64, offset: 1792)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1537, file: !1538, line: 62, baseType: !446, size: 32, offset: 1856)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1537, file: !1538, line: 63, baseType: !364, size: 32, offset: 1888)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1537, file: !1538, line: 64, baseType: !373, size: 32, offset: 1920)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1537, file: !1538, line: 65, baseType: !1570, size: 192, offset: 1984)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1571, line: 7, size: 192, elements: !1572)
!1571 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1572 = !{!1573, !1574, !1578}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1570, file: !1571, line: 8, baseType: !674, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1570, file: !1571, line: 9, baseType: !1575, size: 64, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1577)
!1577 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1571, line: 5, flags: DIFlagFwdDecl)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1570, file: !1571, line: 10, baseType: !7, size: 32, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1537, file: !1538, line: 66, baseType: !281, size: 64, offset: 2176)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1537, file: !1538, line: 74, baseType: !346, size: 128, offset: 2240)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1537, file: !1538, line: 75, baseType: !1397, size: 64, offset: 2368)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1537, file: !1538, line: 76, baseType: !939, size: 256, offset: 2432)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1537, file: !1538, line: 83, baseType: !1584, size: 256, offset: 2688)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1585, line: 102, size: 256, elements: !1586)
!1585 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1586 = !{!1587, !1588, !1589}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1584, file: !1585, line: 103, baseType: !674, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1584, file: !1585, line: 104, baseType: !346, size: 128, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1584, file: !1585, line: 105, baseType: !1590, size: 64, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1585, line: 21, baseType: !1591)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{null, !1594}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1537, file: !1538, line: 85, baseType: !1596, size: 768, offset: 2944)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1597, line: 156, size: 768, elements: !1598)
!1597 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1598 = !{!1599, !1604}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1596, file: !1597, line: 157, baseType: !1600, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!446, !1603}
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1596, file: !1597, line: 158, baseType: !1605, size: 704, offset: 64)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1597, line: 150, size: 704, elements: !1606)
!1606 = !{!1607, !1675}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1605, file: !1597, line: 152, baseType: !1608, size: 640)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1597, line: 131, size: 640, elements: !1609)
!1609 = !{!1610, !1643, !1644, !1645, !1665, !1666, !1668, !1674}
!1610 = !DIDerivedType(tag: DW_TAG_member, scope: !1608, file: !1597, line: 132, baseType: !1611, size: 192)
!1611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1608, file: !1597, line: 132, size: 192, elements: !1612)
!1612 = !{!1613, !1642}
!1613 = !DIDerivedType(tag: DW_TAG_member, scope: !1611, file: !1597, line: 133, baseType: !1614, size: 192)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1611, file: !1597, line: 133, size: 192, elements: !1615)
!1615 = !{!1616, !1639, !1640, !1641}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1614, file: !1597, line: 134, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1597, line: 112, size: 512, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625, !1631, !1637, !1638}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1618, file: !1597, line: 113, baseType: !468, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1618, file: !1597, line: 114, baseType: !284, size: 64, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1618, file: !1597, line: 115, baseType: !446, size: 32, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1618, file: !1597, line: 116, baseType: !360, size: 16, offset: 160)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1618, file: !1597, line: 117, baseType: !1617, size: 64, offset: 192)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1618, file: !1597, line: 118, baseType: !1626, size: 64, offset: 256)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1597, line: 47, baseType: !1628)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!446, !1617, !446, !284, !1630, !693}
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1618, file: !1597, line: 119, baseType: !1632, size: 64, offset: 320)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1597, line: 94, size: 192, elements: !1634)
!1634 = !{!1635, !1636}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1633, file: !1597, line: 95, baseType: !928, size: 32)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1633, file: !1597, line: 96, baseType: !1302, size: 128, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1618, file: !1597, line: 120, baseType: !284, size: 64, offset: 384)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1618, file: !1597, line: 121, baseType: !284, size: 64, offset: 448)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1614, file: !1597, line: 135, baseType: !446, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1614, file: !1597, line: 136, baseType: !446, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1614, file: !1597, line: 137, baseType: !446, size: 32, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1611, file: !1597, line: 139, baseType: !722, size: 128, align: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1608, file: !1597, line: 141, baseType: !1321, size: 64, offset: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1608, file: !1597, line: 142, baseType: !1617, size: 64, offset: 256)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1608, file: !1597, line: 143, baseType: !1646, size: 64, offset: 320)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1597, line: 161, size: 960, elements: !1648)
!1648 = !{!1649, !1650, !1654, !1661}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1647, file: !1597, line: 162, baseType: !1596, size: 768)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1647, file: !1597, line: 163, baseType: !1651, size: 64, offset: 768)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!1603, !1646}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1647, file: !1597, line: 164, baseType: !1655, size: 64, offset: 832)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !1658, !1617, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1647, file: !1597, line: 167, baseType: !1662, size: 64, offset: 896)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!446, !1658, !1617}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1608, file: !1597, line: 144, baseType: !1603, size: 64, offset: 384)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1608, file: !1597, line: 145, baseType: !1667, size: 64, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1608, file: !1597, line: 146, baseType: !1669, size: 64, offset: 512)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1597, line: 124, size: 256, elements: !1671)
!1671 = !{!1672, !1673}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1670, file: !1597, line: 125, baseType: !889, size: 192, align: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1670, file: !1597, line: 126, baseType: !1658, size: 64, offset: 192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1608, file: !1597, line: 147, baseType: !563, size: 64, offset: 576)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1605, file: !1597, line: 153, baseType: !906, size: 64, offset: 640)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1537, file: !1538, line: 86, baseType: !1658, size: 64, offset: 3712)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1537, file: !1538, line: 88, baseType: !1678, size: 64, offset: 3776)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1538, line: 92, size: 576, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1684, !1685}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1679, file: !1538, line: 93, baseType: !567, size: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1679, file: !1538, line: 94, baseType: !1536, size: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1679, file: !1538, line: 95, baseType: !364, size: 32, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1679, file: !1538, line: 96, baseType: !446, size: 32, offset: 224)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1679, file: !1538, line: 97, baseType: !1686, size: 320, offset: 256)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !928, size: 320, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 10)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1537, file: !1538, line: 89, baseType: !1690, size: 320, offset: 3840)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !446, size: 320, elements: !1687)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1369, file: !1370, line: 147, baseType: !1692, size: 64, offset: 1088)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1370, line: 25, size: 64, elements: !1694)
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1693, file: !1370, line: 26, baseType: !928, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1693, file: !1370, line: 27, baseType: !446, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1693, file: !1370, line: 28, baseType: !1698, offset: 64)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, elements: !1699)
!1699 = !{!1700}
!1700 = !DISubrange(count: 0)
!1701 = !DIDerivedType(tag: DW_TAG_member, scope: !1369, file: !1370, line: 149, baseType: !1702, size: 128, offset: 1152)
!1702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1369, file: !1370, line: 149, size: 128, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1702, file: !1370, line: 150, baseType: !446, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1702, file: !1370, line: 151, baseType: !722, size: 128, align: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1035, file: !835, line: 926, baseType: !1367, size: 64, offset: 8576)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1035, file: !835, line: 929, baseType: !1367, size: 64, offset: 8640)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1035, file: !835, line: 933, baseType: !1397, size: 64, offset: 8704)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1035, file: !835, line: 943, baseType: !1710, size: 128, offset: 8768)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 128, elements: !1711)
!1711 = !{!1712}
!1712 = !DISubrange(count: 16)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1035, file: !835, line: 945, baseType: !1714, size: 64, offset: 8896)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !835, line: 49, flags: DIFlagFwdDecl)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1035, file: !835, line: 956, baseType: !1717, size: 64, offset: 8960)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !835, line: 45, flags: DIFlagFwdDecl)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1035, file: !835, line: 959, baseType: !1720, size: 64, offset: 9024)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !835, line: 959, flags: DIFlagFwdDecl)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1035, file: !835, line: 962, baseType: !1723, size: 64, offset: 9088)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !835, line: 66, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1035, file: !835, line: 966, baseType: !1726, size: 64, offset: 9152)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1728, line: 31, size: 576, elements: !1729)
!1728 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1729 = !{!1730, !1731, !1734, !1737, !1740, !1741, !1744, !1747, !1748}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1727, file: !1728, line: 32, baseType: !928, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1727, file: !1728, line: 33, baseType: !1732, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1728, line: 9, flags: DIFlagFwdDecl)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1727, file: !1728, line: 34, baseType: !1735, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1728, line: 10, flags: DIFlagFwdDecl)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1727, file: !1728, line: 35, baseType: !1738, size: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1728, line: 8, flags: DIFlagFwdDecl)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1727, file: !1728, line: 36, baseType: !1314, size: 64, offset: 256)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1727, file: !1728, line: 37, baseType: !1742, size: 64, offset: 320)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1399, line: 34, flags: DIFlagFwdDecl)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1727, file: !1728, line: 38, baseType: !1745, size: 64, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1728, line: 38, flags: DIFlagFwdDecl)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1727, file: !1728, line: 39, baseType: !1745, size: 64, offset: 448)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1727, file: !1728, line: 40, baseType: !1749, size: 64, offset: 512)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1751, line: 856, size: 448, elements: !1752)
!1751 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!1752 = !{!1753, !1754, !1755, !1756, !1757}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1750, file: !1751, line: 857, baseType: !1047, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1750, file: !1751, line: 858, baseType: !1570, size: 192, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1750, file: !1751, line: 859, baseType: !1536, size: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1750, file: !1751, line: 860, baseType: !1678, size: 64, offset: 320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !1750, file: !1751, line: 861, baseType: !1758, size: 64, offset: 384)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !1760, line: 16, flags: DIFlagFwdDecl)
!1760 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1035, file: !835, line: 969, baseType: !1762, size: 64, offset: 9216)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1764, line: 82, size: 7296, elements: !1765)
!1764 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1765 = !{!1766, !1767, !1768, !1769, !1770, !1771, !1772, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1801, !1810, !1811, !1813, !1814, !1815, !1818, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1848, !1849, !1856, !1857, !1858, !1859, !1860, !1861}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1763, file: !1764, line: 83, baseType: !1047, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1763, file: !1764, line: 84, baseType: !928, size: 32, offset: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1763, file: !1764, line: 85, baseType: !446, size: 32, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1763, file: !1764, line: 86, baseType: !346, size: 128, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1763, file: !1764, line: 88, baseType: !1302, size: 128, offset: 256)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1763, file: !1764, line: 91, baseType: !1034, size: 64, offset: 384)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1763, file: !1764, line: 94, baseType: !1773, size: 192, offset: 448)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1774, line: 30, size: 192, elements: !1775)
!1774 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1773, file: !1774, line: 31, baseType: !346, size: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1773, file: !1774, line: 32, baseType: !1778, size: 64, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1779, line: 25, baseType: !1780)
!1779 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1779, line: 23, size: 64, elements: !1781)
!1781 = !{!1782}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1780, file: !1779, line: 24, baseType: !1191, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1763, file: !1764, line: 97, baseType: !563, size: 64, offset: 640)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1763, file: !1764, line: 100, baseType: !446, size: 32, offset: 704)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1763, file: !1764, line: 106, baseType: !446, size: 32, offset: 736)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1763, file: !1764, line: 107, baseType: !1034, size: 64, offset: 768)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1763, file: !1764, line: 110, baseType: !446, size: 32, offset: 832)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1763, file: !1764, line: 111, baseType: !7, size: 32, offset: 864)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1763, file: !1764, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1763, file: !1764, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1763, file: !1764, line: 128, baseType: !446, size: 32, offset: 928)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1763, file: !1764, line: 129, baseType: !346, size: 128, offset: 960)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1763, file: !1764, line: 132, baseType: !1109, size: 512, offset: 1088)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1763, file: !1764, line: 133, baseType: !1117, size: 64, offset: 1600)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1763, file: !1764, line: 140, baseType: !1796, size: 256, offset: 1664)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 256, elements: !1389)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1764, line: 38, size: 128, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1797, file: !1764, line: 39, baseType: !326, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1797, file: !1764, line: 40, baseType: !326, size: 64, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1763, file: !1764, line: 146, baseType: !1802, size: 192, offset: 1920)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1764, line: 66, size: 192, elements: !1803)
!1803 = !{!1804}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1802, file: !1764, line: 67, baseType: !1805, size: 192)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1764, line: 47, size: 192, elements: !1806)
!1806 = !{!1807, !1808, !1809}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1805, file: !1764, line: 48, baseType: !676, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1805, file: !1764, line: 49, baseType: !676, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1805, file: !1764, line: 50, baseType: !676, size: 64, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1763, file: !1764, line: 150, baseType: !1350, size: 640, offset: 2112)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1763, file: !1764, line: 153, baseType: !1812, size: 256, offset: 2752)
!1812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 256, elements: !979)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1763, file: !1764, line: 159, baseType: !1292, size: 64, offset: 3008)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1763, file: !1764, line: 162, baseType: !446, size: 32, offset: 3072)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1763, file: !1764, line: 164, baseType: !1816, size: 64, offset: 3136)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1764, line: 164, flags: DIFlagFwdDecl)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1763, file: !1764, line: 175, baseType: !1819, size: 32, offset: 3200)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !396, line: 805, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 798, size: 32, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1820, file: !396, line: 803, baseType: !395, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1820, file: !396, line: 804, baseType: !290, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1763, file: !1764, line: 176, baseType: !326, size: 64, offset: 3264)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1763, file: !1764, line: 176, baseType: !326, size: 64, offset: 3328)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1763, file: !1764, line: 176, baseType: !326, size: 64, offset: 3392)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1763, file: !1764, line: 176, baseType: !326, size: 64, offset: 3456)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1763, file: !1764, line: 177, baseType: !326, size: 64, offset: 3520)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1763, file: !1764, line: 178, baseType: !326, size: 64, offset: 3584)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1763, file: !1764, line: 179, baseType: !1338, size: 128, offset: 3648)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1763, file: !1764, line: 180, baseType: !281, size: 64, offset: 3776)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1763, file: !1764, line: 180, baseType: !281, size: 64, offset: 3840)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1763, file: !1764, line: 180, baseType: !281, size: 64, offset: 3904)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1763, file: !1764, line: 180, baseType: !281, size: 64, offset: 3968)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1763, file: !1764, line: 181, baseType: !281, size: 64, offset: 4032)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1763, file: !1764, line: 181, baseType: !281, size: 64, offset: 4096)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1763, file: !1764, line: 181, baseType: !281, size: 64, offset: 4160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1763, file: !1764, line: 181, baseType: !281, size: 64, offset: 4224)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1763, file: !1764, line: 182, baseType: !281, size: 64, offset: 4288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1763, file: !1764, line: 182, baseType: !281, size: 64, offset: 4352)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1763, file: !1764, line: 182, baseType: !281, size: 64, offset: 4416)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1763, file: !1764, line: 182, baseType: !281, size: 64, offset: 4480)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1763, file: !1764, line: 183, baseType: !281, size: 64, offset: 4544)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1763, file: !1764, line: 183, baseType: !281, size: 64, offset: 4608)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1763, file: !1764, line: 184, baseType: !1846, offset: 4672)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1847, line: 12, elements: !304)
!1847 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1763, file: !1764, line: 192, baseType: !328, size: 64, offset: 4672)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1763, file: !1764, line: 203, baseType: !1850, size: 2048, offset: 4736)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 2048, elements: !1711)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1852, line: 43, size: 128, elements: !1853)
!1852 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1851, file: !1852, line: 44, baseType: !663, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1851, file: !1852, line: 45, baseType: !663, size: 64, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1763, file: !1764, line: 220, baseType: !314, size: 8, offset: 6784)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1763, file: !1764, line: 221, baseType: !1023, size: 16, offset: 6800)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1763, file: !1764, line: 222, baseType: !1023, size: 16, offset: 6816)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1763, file: !1764, line: 224, baseType: !898, size: 64, offset: 6848)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1763, file: !1764, line: 227, baseType: !670, size: 192, offset: 6912)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1763, file: !1764, line: 233, baseType: !670, size: 192, offset: 7104)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1035, file: !835, line: 970, baseType: !1863, size: 64, offset: 9280)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1764, line: 20, size: 16576, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1864, file: !1764, line: 21, baseType: !290)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1864, file: !1764, line: 22, baseType: !1047, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1864, file: !1764, line: 23, baseType: !1302, size: 128, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1864, file: !1764, line: 24, baseType: !1870, size: 16384, offset: 192)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 16384, elements: !1891)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1774, line: 49, size: 256, elements: !1872)
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1871, file: !1774, line: 50, baseType: !1874, size: 256)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1774, line: 35, size: 256, elements: !1875)
!1875 = !{!1876, !1883, !1884, !1890}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1874, file: !1774, line: 37, baseType: !1877, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1878, line: 19, baseType: !1879)
!1878 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1878, line: 18, baseType: !1881)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{null, !446}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1874, file: !1774, line: 38, baseType: !281, size: 64, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1874, file: !1774, line: 44, baseType: !1885, size: 64, offset: 128)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1878, line: 22, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1878, line: 21, baseType: !1888)
!1888 = !DISubroutineType(types: !1889)
!1889 = !{null}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1874, file: !1774, line: 46, baseType: !1778, size: 64, offset: 192)
!1891 = !{!1892}
!1892 = !DISubrange(count: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1035, file: !835, line: 971, baseType: !1778, size: 64, offset: 9344)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1035, file: !835, line: 972, baseType: !1778, size: 64, offset: 9408)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1035, file: !835, line: 974, baseType: !1778, size: 64, offset: 9472)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1035, file: !835, line: 975, baseType: !1773, size: 192, offset: 9536)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1035, file: !835, line: 976, baseType: !281, size: 64, offset: 9728)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1035, file: !835, line: 977, baseType: !661, size: 64, offset: 9792)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1035, file: !835, line: 978, baseType: !7, size: 32, offset: 9856)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1035, file: !835, line: 980, baseType: !725, size: 64, offset: 9920)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1035, file: !835, line: 989, baseType: !1902, size: 128, offset: 9984)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1903, line: 35, size: 128, elements: !1904)
!1903 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1904 = !{!1905, !1906, !1907}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1902, file: !1903, line: 36, baseType: !446, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1902, file: !1903, line: 37, baseType: !928, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1902, file: !1903, line: 38, baseType: !1908, size: 64, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1903, line: 23, flags: DIFlagFwdDecl)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1035, file: !835, line: 992, baseType: !326, size: 64, offset: 10112)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1035, file: !835, line: 993, baseType: !326, size: 64, offset: 10176)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1035, file: !835, line: 996, baseType: !290, offset: 10240)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1035, file: !835, line: 999, baseType: !945, offset: 10240)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1035, file: !835, line: 1001, baseType: !1915, size: 64, offset: 10240)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !835, line: 636, size: 64, elements: !1916)
!1916 = !{!1917}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1915, file: !835, line: 637, baseType: !1918, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1035, file: !835, line: 1005, baseType: !1163, size: 128, offset: 10304)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1035, file: !835, line: 1007, baseType: !1034, size: 64, offset: 10432)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1035, file: !835, line: 1009, baseType: !1922, size: 64, offset: 10496)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !835, line: 1009, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1035, file: !835, line: 1043, baseType: !284, size: 64, offset: 10560)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1035, file: !835, line: 1046, baseType: !1926, size: 64, offset: 10624)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1928, line: 554, size: 128, elements: !1929)
!1928 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1929 = !{!1930, !3899}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1927, file: !1928, line: 555, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1933, line: 203, size: 832, elements: !1934)
!1933 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1934 = !{!1935, !1936, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3867, !3872, !3873, !3892, !3893, !3894, !3895, !3896, !3898}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1932, file: !1933, line: 204, baseType: !1931, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1932, file: !1933, line: 205, baseType: !1937, size: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1939, line: 167, size: 8512, elements: !1940)
!1939 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1940 = !{!1941, !1942, !1943, !1944, !1946, !1947, !1948, !3163, !3164, !3337, !3834, !3835, !3836, !3837, !3838, !3839, !3842, !3843, !3846, !3847, !3848, !3851}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1938, file: !1939, line: 171, baseType: !446, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1938, file: !1939, line: 172, baseType: !446, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1938, file: !1939, line: 173, baseType: !446, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1938, file: !1939, line: 176, baseType: !1945, size: 256, offset: 96)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 256, elements: !432)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1938, file: !1939, line: 178, baseType: !361, size: 16, offset: 352)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1938, file: !1939, line: 179, baseType: !361, size: 16, offset: 368)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1938, file: !1939, line: 186, baseType: !1949, size: 64, offset: 384)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1939, line: 149, size: 256, elements: !1951)
!1951 = !{!1952, !1953, !1954, !3161}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1950, file: !1939, line: 150, baseType: !722, size: 128, align: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1950, file: !1939, line: 151, baseType: !446, size: 32, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1950, file: !1939, line: 152, baseType: !1955, size: 64, offset: 192)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1939, line: 53, size: 6592, elements: !1957)
!1957 = !{!1958, !1960, !1961, !1962, !1965, !1986, !3140, !3141, !3142, !3143, !3153}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1956, file: !1939, line: 54, baseType: !1959, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !283, line: 125, baseType: !326)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1956, file: !1939, line: 60, baseType: !1959, size: 64, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1956, file: !1939, line: 64, baseType: !281, size: 64, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1956, file: !1939, line: 65, baseType: !1963, size: 64, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1939, line: 65, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1956, file: !1939, line: 66, baseType: !1966, size: 128, offset: 256)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1967, line: 105, size: 128, elements: !1968)
!1967 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1968 = !{!1969, !1970}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1966, file: !1967, line: 110, baseType: !281, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1966, file: !1967, line: 118, baseType: !1971, size: 64, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1967, line: 95, size: 448, elements: !1973)
!1973 = !{!1974, !1975, !1981, !1982, !1983, !1984, !1985}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1972, file: !1967, line: 96, baseType: !674, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1972, file: !1967, line: 97, baseType: !1976, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1967, line: 60, baseType: !1978)
!1978 = !DISubroutineType(types: !1979)
!1979 = !{null, !1980}
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1972, file: !1967, line: 98, baseType: !1976, size: 64, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1972, file: !1967, line: 99, baseType: !314, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1972, file: !1967, line: 100, baseType: !314, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1972, file: !1967, line: 101, baseType: !722, size: 128, align: 64, offset: 256)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1972, file: !1967, line: 102, baseType: !1980, size: 64, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1956, file: !1939, line: 68, baseType: !1987, size: 5568, offset: 384)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !41, line: 461, size: 5568, elements: !1988)
!1988 = !{!1989, !2368, !2370, !2373, !2374, !2425, !2516, !2517, !2518, !2519, !2520, !2529, !2634, !2647, !3067, !3068, !3072, !3074, !3075, !3076, !3080, !3086, !3087, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3128, !3129, !3130, !3133, !3136, !3137, !3138, !3139}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1987, file: !41, line: 462, baseType: !1990, size: 512)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1991, line: 64, size: 512, elements: !1992)
!1991 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1992 = !{!1993, !1994, !1995, !1997, !2037, !2140, !2358, !2363, !2364, !2365, !2366, !2367}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1990, file: !1991, line: 65, baseType: !468, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1990, file: !1991, line: 66, baseType: !346, size: 128, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1990, file: !1991, line: 67, baseType: !1996, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1990, file: !1991, line: 68, baseType: !1998, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1991, line: 192, size: 704, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1999, file: !1991, line: 193, baseType: !346, size: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1999, file: !1991, line: 194, baseType: !290, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1999, file: !1991, line: 195, baseType: !1990, size: 512, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1999, file: !1991, line: 196, baseType: !2005, size: 64, offset: 640)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1991, line: 156, size: 192, elements: !2008)
!2008 = !{!2009, !2014, !2019}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2007, file: !1991, line: 157, baseType: !2010, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2011)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!446, !1998, !1996}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2007, file: !1991, line: 158, baseType: !2015, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!468, !1998, !1996}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2007, file: !1991, line: 159, baseType: !2020, size: 64, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2021)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!446, !1998, !1996, !2024}
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1991, line: 148, size: 20736, elements: !2026)
!2026 = !{!2027, !2029, !2031, !2032, !2036}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !2025, file: !1991, line: 149, baseType: !2028, size: 192)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 192, elements: !579)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !2025, file: !1991, line: 150, baseType: !2030, size: 4096, offset: 192)
!2030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 4096, elements: !1891)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !2025, file: !1991, line: 151, baseType: !446, size: 32, offset: 4288)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2025, file: !1991, line: 152, baseType: !2033, size: 16384, offset: 4320)
!2033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 16384, elements: !2034)
!2034 = !{!2035}
!2035 = !DISubrange(count: 2048)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !2025, file: !1991, line: 153, baseType: !446, size: 32, offset: 20704)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1990, file: !1991, line: 69, baseType: !2038, size: 64, offset: 320)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1991, line: 138, size: 448, elements: !2040)
!2040 = !{!2041, !2045, !2064, !2066, !2099, !2132, !2136}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2039, file: !1991, line: 139, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DISubroutineType(types: !2044)
!2044 = !{null, !1996}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2039, file: !1991, line: 140, baseType: !2046, size: 64, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2049, line: 230, size: 128, elements: !2050)
!2049 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2050 = !{!2051, !2060}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2048, file: !2049, line: 231, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!747, !1996, !2055, !494}
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2049, line: 30, size: 128, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2056, file: !2049, line: 31, baseType: !468, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2056, file: !2049, line: 32, baseType: !360, size: 16, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2048, file: !2049, line: 232, baseType: !2061, size: 64, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!747, !1996, !2055, !468, !661}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2039, file: !1991, line: 141, baseType: !2065, size: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2039, file: !1991, line: 142, baseType: !2067, size: 64, offset: 192)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2049, line: 84, size: 320, elements: !2071)
!2071 = !{!2072, !2073, !2077, !2096, !2097}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2070, file: !2049, line: 85, baseType: !468, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2070, file: !2049, line: 86, baseType: !2074, size: 64, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{!360, !1996, !2055, !446}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2070, file: !2049, line: 88, baseType: !2078, size: 64, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{!360, !1996, !2081, !446}
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2049, line: 168, size: 448, elements: !2083)
!2083 = !{!2084, !2085, !2086, !2087, !2091, !2092}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2082, file: !2049, line: 169, baseType: !2056, size: 128)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2082, file: !2049, line: 170, baseType: !661, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2082, file: !2049, line: 171, baseType: !284, size: 64, offset: 192)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2082, file: !2049, line: 172, baseType: !2088, size: 64, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!747, !742, !1996, !2081, !494, !530, !661}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2082, file: !2049, line: 174, baseType: !2088, size: 64, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2082, file: !2049, line: 176, baseType: !2093, size: 64, offset: 384)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!446, !742, !1996, !2081, !881}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2070, file: !2049, line: 90, baseType: !2065, size: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2070, file: !2049, line: 91, baseType: !2098, size: 64, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2039, file: !1991, line: 143, baseType: !2100, size: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!2103, !1996}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !23, line: 39, size: 384, elements: !2106)
!2106 = !{!2107, !2108, !2112, !2116, !2124, !2128}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2105, file: !23, line: 40, baseType: !22, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2105, file: !23, line: 41, baseType: !2109, size: 64, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = !DISubroutineType(types: !2111)
!2111 = !{!314}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2105, file: !23, line: 42, baseType: !2113, size: 64, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!284}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2105, file: !23, line: 43, baseType: !2117, size: 64, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DISubroutineType(types: !2119)
!2119 = !{!2120, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !23, line: 19, flags: DIFlagFwdDecl)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2105, file: !23, line: 44, baseType: !2125, size: 64, offset: 256)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{!2120}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2105, file: !23, line: 45, baseType: !2129, size: 64, offset: 320)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !284}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2039, file: !1991, line: 144, baseType: !2133, size: 64, offset: 320)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!2120, !1996}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2039, file: !1991, line: 145, baseType: !2137, size: 64, offset: 384)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{null, !1996, !1659, !1660}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1990, file: !1991, line: 70, baseType: !2141, size: 64, offset: 384)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !2143, line: 123, size: 1024, elements: !2144)
!2143 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!2144 = !{!2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2351, !2352, !2353, !2354, !2355}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2142, file: !2143, line: 124, baseType: !928, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2142, file: !2143, line: 125, baseType: !928, size: 32, offset: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2142, file: !2143, line: 135, baseType: !2141, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2142, file: !2143, line: 136, baseType: !468, size: 64, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2142, file: !2143, line: 138, baseType: !889, size: 192, align: 64, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2142, file: !2143, line: 140, baseType: !2120, size: 64, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2142, file: !2143, line: 141, baseType: !7, size: 32, offset: 448)
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !2142, file: !2143, line: 142, baseType: !2153, size: 256, offset: 512)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2142, file: !2143, line: 142, size: 256, elements: !2154)
!2154 = !{!2155, !2207, !2211}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2153, file: !2143, line: 143, baseType: !2156, size: 192)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !2143, line: 91, size: 192, elements: !2157)
!2157 = !{!2158, !2159, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2156, file: !2143, line: 92, baseType: !281, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2156, file: !2143, line: 94, baseType: !906, size: 64, offset: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2156, file: !2143, line: 100, baseType: !2161, size: 64, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !2143, line: 180, size: 704, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2179, !2180, !2181, !2205, !2206}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2162, file: !2143, line: 182, baseType: !2141, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2162, file: !2143, line: 183, baseType: !7, size: 32, offset: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2162, file: !2143, line: 186, baseType: !2167, size: 192, offset: 128)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2168, line: 19, size: 192, elements: !2169)
!2168 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2169 = !{!2170, !2177, !2178}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2167, file: !2168, line: 20, baseType: !2171, size: 128)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2172, line: 292, size: 128, elements: !2173)
!2172 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2173 = !{!2174, !2175, !2176}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2171, file: !2172, line: 293, baseType: !290)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2171, file: !2172, line: 295, baseType: !282, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2171, file: !2172, line: 296, baseType: !284, size: 64, offset: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2167, file: !2168, line: 21, baseType: !7, size: 32, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2167, file: !2168, line: 22, baseType: !7, size: 32, offset: 160)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2162, file: !2143, line: 187, baseType: !309, size: 32, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2162, file: !2143, line: 188, baseType: !309, size: 32, offset: 352)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2162, file: !2143, line: 189, baseType: !2182, size: 64, offset: 384)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !2143, line: 168, size: 320, elements: !2184)
!2184 = !{!2185, !2189, !2193, !2197, !2201}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2183, file: !2143, line: 169, baseType: !2186, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!446, !655, !2161}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2183, file: !2143, line: 171, baseType: !2190, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!446, !2141, !468, !360}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2183, file: !2143, line: 173, baseType: !2194, size: 64, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DISubroutineType(types: !2196)
!2196 = !{!446, !2141}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2183, file: !2143, line: 174, baseType: !2198, size: 64, offset: 192)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!446, !2141, !2141, !468}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2183, file: !2143, line: 176, baseType: !2202, size: 64, offset: 256)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!446, !655, !2141, !2161}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2162, file: !2143, line: 192, baseType: !346, size: 128, offset: 448)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2162, file: !2143, line: 194, baseType: !1302, size: 128, offset: 576)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2153, file: !2143, line: 144, baseType: !2208, size: 64)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !2143, line: 103, size: 64, elements: !2209)
!2209 = !{!2210}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2208, file: !2143, line: 104, baseType: !2141, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2153, file: !2143, line: 145, baseType: !2212, size: 256)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !2143, line: 107, size: 256, elements: !2213)
!2213 = !{!2214, !2346, !2349, !2350}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2212, file: !2143, line: 108, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2217)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !2143, line: 217, size: 768, elements: !2218)
!2218 = !{!2219, !2323, !2327, !2328, !2329, !2330, !2331, !2335, !2336, !2337, !2338, !2342}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2217, file: !2143, line: 222, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!446, !2223}
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !2143, line: 197, size: 1088, elements: !2225)
!2225 = !{!2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2224, file: !2143, line: 199, baseType: !2141, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2224, file: !2143, line: 200, baseType: !742, size: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2224, file: !2143, line: 201, baseType: !655, size: 64, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2224, file: !2143, line: 202, baseType: !284, size: 64, offset: 192)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2224, file: !2143, line: 205, baseType: !670, size: 192, offset: 256)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2224, file: !2143, line: 206, baseType: !670, size: 192, offset: 448)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2224, file: !2143, line: 207, baseType: !446, size: 32, offset: 640)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2224, file: !2143, line: 208, baseType: !346, size: 128, offset: 704)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2224, file: !2143, line: 209, baseType: !494, size: 64, offset: 832)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2224, file: !2143, line: 211, baseType: !661, size: 64, offset: 896)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2224, file: !2143, line: 212, baseType: !314, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2224, file: !2143, line: 213, baseType: !314, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2224, file: !2143, line: 214, baseType: !2239, size: 64, offset: 1024)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !29, line: 557, size: 832, elements: !2242)
!2242 = !{!2243, !2247, !2248, !2252, !2256, !2297, !2301, !2305, !2309, !2310, !2311, !2315, !2319}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2241, file: !29, line: 558, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{null, !881}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2241, file: !29, line: 559, baseType: !2244, size: 64, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2241, file: !29, line: 560, baseType: !2249, size: 64, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DISubroutineType(types: !2251)
!2251 = !{!446, !881, !281}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2241, file: !29, line: 561, baseType: !2253, size: 64, offset: 192)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!446, !881}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2241, file: !29, line: 562, baseType: !2257, size: 64, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !336, line: 682, baseType: !7)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !29, line: 508, size: 768, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269, !2276, !2283, !2289, !2290, !2291, !2293, !2295}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2262, file: !29, line: 509, baseType: !881, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2262, file: !29, line: 510, baseType: !7, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2262, file: !29, line: 511, baseType: !282, size: 32, offset: 96)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2262, file: !29, line: 512, baseType: !281, size: 64, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2262, file: !29, line: 513, baseType: !281, size: 64, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2262, file: !29, line: 514, baseType: !2270, size: 64, offset: 256)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !921, line: 385, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !921, line: 385, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2272, file: !921, line: 385, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !926, line: 15, baseType: !281)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2262, file: !29, line: 516, baseType: !2277, size: 64, offset: 320)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !921, line: 359, baseType: !2279)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !921, line: 359, size: 64, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2279, file: !921, line: 359, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !926, line: 16, baseType: !281)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2262, file: !29, line: 519, baseType: !2284, size: 64, offset: 384)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !926, line: 21, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !926, line: 21, size: 64, elements: !2286)
!2286 = !{!2287}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2285, file: !926, line: 21, baseType: !2288, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !926, line: 14, baseType: !281)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2262, file: !29, line: 521, baseType: !334, size: 64, offset: 448)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2262, file: !29, line: 522, baseType: !334, size: 64, offset: 512)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2262, file: !29, line: 528, baseType: !2292, size: 64, offset: 576)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2262, file: !29, line: 532, baseType: !2294, size: 64, offset: 640)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2262, file: !29, line: 536, baseType: !2296, size: 64, offset: 704)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !921, line: 509, baseType: !334)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2241, file: !29, line: 563, baseType: !2298, size: 64, offset: 320)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2299, size: 64)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!2260, !2261, !28}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2241, file: !29, line: 565, baseType: !2302, size: 64, offset: 384)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{null, !2261, !281, !281}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2241, file: !29, line: 567, baseType: !2306, size: 64, offset: 448)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{!281, !881}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2241, file: !29, line: 571, baseType: !2257, size: 64, offset: 512)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2241, file: !29, line: 574, baseType: !2257, size: 64, offset: 576)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2241, file: !29, line: 579, baseType: !2312, size: 64, offset: 640)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{!446, !881, !281, !284, !446, !446}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2241, file: !29, line: 585, baseType: !2316, size: 64, offset: 704)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{!468, !881}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2241, file: !29, line: 615, baseType: !2320, size: 64, offset: 768)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{!334, !881, !281}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2217, file: !2143, line: 223, baseType: !2324, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{null, !2223}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2217, file: !2143, line: 236, baseType: !703, size: 64, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2217, file: !2143, line: 238, baseType: !690, size: 64, offset: 192)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2217, file: !2143, line: 239, baseType: !699, size: 64, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2217, file: !2143, line: 240, baseType: !695, size: 64, offset: 320)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2217, file: !2143, line: 242, baseType: !2332, size: 64, offset: 384)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2333, size: 64)
!2333 = !DISubroutineType(types: !2334)
!2334 = !{!747, !2223, !494, !661, !530}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2217, file: !2143, line: 252, baseType: !661, size: 64, offset: 448)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2217, file: !2143, line: 259, baseType: !314, size: 8, offset: 512)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2217, file: !2143, line: 260, baseType: !2332, size: 64, offset: 576)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2217, file: !2143, line: 263, baseType: !2339, size: 64, offset: 640)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{!868, !2223, !870}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2217, file: !2143, line: 266, baseType: !2343, size: 64, offset: 704)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = !DISubroutineType(types: !2345)
!2345 = !{!446, !2223, !881}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2212, file: !2143, line: 109, baseType: !2347, size: 64, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !2143, line: 31, flags: DIFlagFwdDecl)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2212, file: !2143, line: 110, baseType: !530, size: 64, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2212, file: !2143, line: 111, baseType: !2141, size: 64, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2142, file: !2143, line: 148, baseType: !284, size: 64, offset: 768)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2142, file: !2143, line: 154, baseType: !326, size: 64, offset: 832)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2142, file: !2143, line: 156, baseType: !361, size: 16, offset: 896)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2142, file: !2143, line: 157, baseType: !360, size: 16, offset: 912)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2142, file: !2143, line: 158, baseType: !2356, size: 64, offset: 960)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !2143, line: 32, flags: DIFlagFwdDecl)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1990, file: !1991, line: 71, baseType: !2359, size: 32, offset: 448)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2360, line: 19, size: 32, elements: !2361)
!2360 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2361 = !{!2362}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2359, file: !2360, line: 20, baseType: !1047, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1990, file: !1991, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1990, file: !1991, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1990, file: !1991, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1990, file: !1991, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1990, file: !1991, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1987, file: !41, line: 463, baseType: !2369, size: 64, offset: 512)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1987, file: !41, line: 465, baseType: !2371, size: 64, offset: 576)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !41, line: 36, flags: DIFlagFwdDecl)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1987, file: !41, line: 467, baseType: !468, size: 64, offset: 640)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1987, file: !41, line: 468, baseType: !2375, size: 64, offset: 704)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2377)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !41, line: 87, size: 384, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2385, !2390, !2394}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2377, file: !41, line: 88, baseType: !468, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2377, file: !41, line: 89, baseType: !2067, size: 64, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2377, file: !41, line: 90, baseType: !2382, size: 64, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = !DISubroutineType(types: !2384)
!2384 = !{!446, !2369, !2024}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2377, file: !41, line: 91, baseType: !2386, size: 64, offset: 192)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = !DISubroutineType(types: !2388)
!2388 = !{!494, !2369, !2389, !1659, !1660}
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2377, file: !41, line: 93, baseType: !2391, size: 64, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !2369}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2377, file: !41, line: 95, baseType: !2395, size: 64, offset: 320)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !48, line: 278, size: 1472, elements: !2398)
!2398 = !{!2399, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2397, file: !48, line: 279, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!446, !2369}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2397, file: !48, line: 280, baseType: !2391, size: 64, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2397, file: !48, line: 281, baseType: !2400, size: 64, offset: 128)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2397, file: !48, line: 282, baseType: !2400, size: 64, offset: 192)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2397, file: !48, line: 283, baseType: !2400, size: 64, offset: 256)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2397, file: !48, line: 284, baseType: !2400, size: 64, offset: 320)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2397, file: !48, line: 285, baseType: !2400, size: 64, offset: 384)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2397, file: !48, line: 286, baseType: !2400, size: 64, offset: 448)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2397, file: !48, line: 287, baseType: !2400, size: 64, offset: 512)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2397, file: !48, line: 288, baseType: !2400, size: 64, offset: 576)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2397, file: !48, line: 289, baseType: !2400, size: 64, offset: 640)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2397, file: !48, line: 290, baseType: !2400, size: 64, offset: 704)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2397, file: !48, line: 291, baseType: !2400, size: 64, offset: 768)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2397, file: !48, line: 292, baseType: !2400, size: 64, offset: 832)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2397, file: !48, line: 293, baseType: !2400, size: 64, offset: 896)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2397, file: !48, line: 294, baseType: !2400, size: 64, offset: 960)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2397, file: !48, line: 295, baseType: !2400, size: 64, offset: 1024)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2397, file: !48, line: 296, baseType: !2400, size: 64, offset: 1088)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2397, file: !48, line: 297, baseType: !2400, size: 64, offset: 1152)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2397, file: !48, line: 298, baseType: !2400, size: 64, offset: 1216)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2397, file: !48, line: 299, baseType: !2400, size: 64, offset: 1280)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2397, file: !48, line: 300, baseType: !2400, size: 64, offset: 1344)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2397, file: !48, line: 301, baseType: !2400, size: 64, offset: 1408)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1987, file: !41, line: 470, baseType: !2426, size: 64, offset: 768)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2428, line: 82, size: 1408, elements: !2429)
!2428 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2429 = !{!2430, !2431, !2432, !2433, !2434, !2435, !2436, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2511, !2514, !2515}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2427, file: !2428, line: 83, baseType: !468, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2427, file: !2428, line: 84, baseType: !468, size: 64, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2427, file: !2428, line: 85, baseType: !2369, size: 64, offset: 128)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2427, file: !2428, line: 86, baseType: !2067, size: 64, offset: 192)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2427, file: !2428, line: 87, baseType: !2067, size: 64, offset: 256)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2427, file: !2428, line: 88, baseType: !2067, size: 64, offset: 320)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2427, file: !2428, line: 90, baseType: !2437, size: 64, offset: 384)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!446, !2369, !2440}
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !35, line: 95, size: 1152, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446, !2447, !2448, !2449, !2462, !2475, !2476, !2477, !2478, !2479, !2487, !2488, !2489, !2490, !2491, !2492}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2441, file: !35, line: 96, baseType: !468, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2441, file: !35, line: 97, baseType: !2426, size: 64, offset: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2441, file: !35, line: 99, baseType: !558, size: 64, offset: 128)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2441, file: !35, line: 100, baseType: !468, size: 64, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2441, file: !35, line: 102, baseType: !314, size: 8, offset: 256)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2441, file: !35, line: 103, baseType: !34, size: 32, offset: 288)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2441, file: !35, line: 105, baseType: !2450, size: 64, offset: 320)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !2453, line: 262, size: 1600, elements: !2454)
!2453 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!2454 = !{!2455, !2456, !2457, !2461}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2452, file: !2453, line: 263, baseType: !1945, size: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2452, file: !2453, line: 264, baseType: !1945, size: 256, offset: 256)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !2452, file: !2453, line: 265, baseType: !2458, size: 1024, offset: 512)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 1024, elements: !2459)
!2459 = !{!2460}
!2460 = !DISubrange(count: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2452, file: !2453, line: 266, baseType: !2120, size: 64, offset: 1536)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2441, file: !35, line: 106, baseType: !2463, size: 64, offset: 384)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !2453, line: 210, size: 256, elements: !2466)
!2466 = !{!2467, !2471, !2473, !2474}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2465, file: !2453, line: 211, baseType: !2468, size: 72)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 72, elements: !2469)
!2469 = !{!2470}
!2470 = !DISubrange(count: 9)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2465, file: !2453, line: 212, baseType: !2472, size: 64, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !2453, line: 14, baseType: !281)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !2465, file: !2453, line: 213, baseType: !311, size: 32, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !2465, file: !2453, line: 214, baseType: !311, size: 32, offset: 224)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2441, file: !35, line: 108, baseType: !2400, size: 64, offset: 448)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2441, file: !35, line: 109, baseType: !2391, size: 64, offset: 512)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2441, file: !35, line: 110, baseType: !2400, size: 64, offset: 576)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2441, file: !35, line: 111, baseType: !2391, size: 64, offset: 640)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2441, file: !35, line: 112, baseType: !2480, size: 64, offset: 704)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!446, !2369, !2483}
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !48, line: 52, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !48, line: 50, size: 32, elements: !2485)
!2485 = !{!2486}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2484, file: !48, line: 51, baseType: !446, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2441, file: !35, line: 113, baseType: !2400, size: 64, offset: 768)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2441, file: !35, line: 114, baseType: !2067, size: 64, offset: 832)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2441, file: !35, line: 115, baseType: !2067, size: 64, offset: 896)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2441, file: !35, line: 117, baseType: !2395, size: 64, offset: 960)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2441, file: !35, line: 118, baseType: !2391, size: 64, offset: 1024)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2441, file: !35, line: 120, baseType: !2493, size: 64, offset: 1088)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !35, line: 120, flags: DIFlagFwdDecl)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2427, file: !2428, line: 91, baseType: !2382, size: 64, offset: 448)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2427, file: !2428, line: 92, baseType: !2400, size: 64, offset: 512)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2427, file: !2428, line: 93, baseType: !2391, size: 64, offset: 576)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2427, file: !2428, line: 94, baseType: !2400, size: 64, offset: 640)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2427, file: !2428, line: 95, baseType: !2391, size: 64, offset: 704)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2427, file: !2428, line: 97, baseType: !2400, size: 64, offset: 768)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2427, file: !2428, line: 98, baseType: !2400, size: 64, offset: 832)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2427, file: !2428, line: 100, baseType: !2480, size: 64, offset: 896)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2427, file: !2428, line: 101, baseType: !2400, size: 64, offset: 960)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2427, file: !2428, line: 103, baseType: !2400, size: 64, offset: 1024)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2427, file: !2428, line: 105, baseType: !2400, size: 64, offset: 1088)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2427, file: !2428, line: 107, baseType: !2395, size: 64, offset: 1152)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2427, file: !2428, line: 109, baseType: !2508, size: 64, offset: 1216)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2510)
!2510 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2428, line: 109, flags: DIFlagFwdDecl)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2427, file: !2428, line: 111, baseType: !2512, size: 64, offset: 1280)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2428, line: 111, flags: DIFlagFwdDecl)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2427, file: !2428, line: 112, baseType: !573, offset: 1344)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2427, file: !2428, line: 114, baseType: !314, size: 8, offset: 1344)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1987, file: !41, line: 471, baseType: !2440, size: 64, offset: 832)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1987, file: !41, line: 473, baseType: !284, size: 64, offset: 896)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1987, file: !41, line: 475, baseType: !284, size: 64, offset: 960)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1987, file: !41, line: 480, baseType: !670, size: 192, offset: 1024)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1987, file: !41, line: 484, baseType: !2521, size: 576, offset: 1216)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !41, line: 361, size: 576, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526, !2527, !2528}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2521, file: !41, line: 362, baseType: !346, size: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2521, file: !41, line: 363, baseType: !346, size: 128, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2521, file: !41, line: 364, baseType: !346, size: 128, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2521, file: !41, line: 365, baseType: !346, size: 128, offset: 384)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2521, file: !41, line: 366, baseType: !314, size: 8, offset: 512)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2521, file: !41, line: 367, baseType: !40, size: 32, offset: 544)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1987, file: !41, line: 485, baseType: !2530, size: 2304, offset: 1792)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !48, line: 565, size: 2304, elements: !2531)
!2531 = !{!2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2627, !2631}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2530, file: !48, line: 566, baseType: !2483, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2530, file: !48, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2530, file: !48, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2530, file: !48, line: 569, baseType: !314, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2530, file: !48, line: 570, baseType: !314, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2530, file: !48, line: 571, baseType: !314, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2530, file: !48, line: 572, baseType: !314, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2530, file: !48, line: 573, baseType: !314, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2530, file: !48, line: 574, baseType: !314, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2530, file: !48, line: 575, baseType: !314, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2530, file: !48, line: 576, baseType: !314, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2530, file: !48, line: 577, baseType: !309, size: 32, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2530, file: !48, line: 578, baseType: !290, offset: 96)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2530, file: !48, line: 580, baseType: !346, size: 128, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2530, file: !48, line: 581, baseType: !1322, size: 192, offset: 256)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2530, file: !48, line: 582, baseType: !2548, size: 64, offset: 448)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2550, line: 43, size: 1472, elements: !2551)
!2550 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2551 = !{!2552, !2553, !2554, !2555, !2556, !2559, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2549, file: !2550, line: 44, baseType: !468, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2549, file: !2550, line: 45, baseType: !446, size: 32, offset: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2549, file: !2550, line: 46, baseType: !346, size: 128, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2549, file: !2550, line: 47, baseType: !290, offset: 256)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2549, file: !2550, line: 48, baseType: !2557, size: 64, offset: 256)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !48, line: 533, flags: DIFlagFwdDecl)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2549, file: !2550, line: 49, baseType: !2560, size: 320, offset: 320)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2561, line: 11, size: 320, elements: !2562)
!2561 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2562 = !{!2563, !2564, !2565, !2570}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2560, file: !2561, line: 16, baseType: !567, size: 128)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2560, file: !2561, line: 17, baseType: !281, size: 64, offset: 128)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2560, file: !2561, line: 18, baseType: !2566, size: 64, offset: 192)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{null, !2569}
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2560, file: !2561, line: 19, baseType: !309, size: 32, offset: 256)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2549, file: !2550, line: 50, baseType: !281, size: 64, offset: 640)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2549, file: !2550, line: 51, baseType: !1117, size: 64, offset: 704)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2549, file: !2550, line: 52, baseType: !1117, size: 64, offset: 768)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2549, file: !2550, line: 53, baseType: !1117, size: 64, offset: 832)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2549, file: !2550, line: 54, baseType: !1117, size: 64, offset: 896)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2549, file: !2550, line: 55, baseType: !1117, size: 64, offset: 960)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2549, file: !2550, line: 56, baseType: !281, size: 64, offset: 1024)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2549, file: !2550, line: 57, baseType: !281, size: 64, offset: 1088)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2549, file: !2550, line: 58, baseType: !281, size: 64, offset: 1152)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2549, file: !2550, line: 59, baseType: !281, size: 64, offset: 1216)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2549, file: !2550, line: 60, baseType: !281, size: 64, offset: 1280)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2549, file: !2550, line: 61, baseType: !2369, size: 64, offset: 1344)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2549, file: !2550, line: 62, baseType: !314, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2549, file: !2550, line: 63, baseType: !314, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2530, file: !48, line: 583, baseType: !314, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2530, file: !48, line: 584, baseType: !314, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2530, file: !48, line: 585, baseType: !314, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2530, file: !48, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2530, file: !48, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2530, file: !48, line: 592, baseType: !1109, size: 512, offset: 576)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2530, file: !48, line: 593, baseType: !326, size: 64, offset: 1088)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2530, file: !48, line: 594, baseType: !1584, size: 256, offset: 1152)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2530, file: !48, line: 595, baseType: !1302, size: 128, offset: 1408)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2530, file: !48, line: 596, baseType: !2557, size: 64, offset: 1536)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2530, file: !48, line: 597, baseType: !928, size: 32, offset: 1600)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2530, file: !48, line: 598, baseType: !928, size: 32, offset: 1632)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2530, file: !48, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2530, file: !48, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2530, file: !48, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2530, file: !48, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2530, file: !48, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2530, file: !48, line: 604, baseType: !314, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2530, file: !48, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2530, file: !48, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2530, file: !48, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2530, file: !48, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2530, file: !48, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2530, file: !48, line: 610, baseType: !7, size: 32, offset: 1696)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2530, file: !48, line: 611, baseType: !47, size: 32, offset: 1728)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2530, file: !48, line: 612, baseType: !55, size: 32, offset: 1760)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2530, file: !48, line: 613, baseType: !446, size: 32, offset: 1792)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2530, file: !48, line: 614, baseType: !446, size: 32, offset: 1824)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2530, file: !48, line: 615, baseType: !326, size: 64, offset: 1856)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2530, file: !48, line: 616, baseType: !326, size: 64, offset: 1920)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2530, file: !48, line: 617, baseType: !326, size: 64, offset: 1984)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2530, file: !48, line: 618, baseType: !326, size: 64, offset: 2048)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2530, file: !48, line: 620, baseType: !2618, size: 64, offset: 2112)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !48, line: 536, size: 256, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2624}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2619, file: !48, line: 537, baseType: !290)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2619, file: !48, line: 538, baseType: !7, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2619, file: !48, line: 540, baseType: !346, size: 128, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2619, file: !48, line: 543, baseType: !2625, size: 64, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !48, line: 534, flags: DIFlagFwdDecl)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2530, file: !48, line: 621, baseType: !2628, size: 64, offset: 2176)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DISubroutineType(types: !2630)
!2630 = !{null, !2369, !1265}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2530, file: !48, line: 622, baseType: !2632, size: 64, offset: 2240)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !48, line: 622, flags: DIFlagFwdDecl)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1987, file: !41, line: 486, baseType: !2635, size: 64, offset: 4096)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !48, line: 642, size: 1792, elements: !2637)
!2637 = !{!2638, !2639, !2640, !2644, !2645, !2646}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2636, file: !48, line: 643, baseType: !2397, size: 1472)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2636, file: !48, line: 644, baseType: !2400, size: 64, offset: 1472)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2636, file: !48, line: 645, baseType: !2641, size: 64, offset: 1536)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{null, !2369, !314}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2636, file: !48, line: 646, baseType: !2400, size: 64, offset: 1600)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2636, file: !48, line: 647, baseType: !2391, size: 64, offset: 1664)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2636, file: !48, line: 648, baseType: !2391, size: 64, offset: 1728)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1987, file: !41, line: 493, baseType: !2648, size: 64, offset: 4160)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !62, line: 162, size: 1088, elements: !2650)
!2650 = !{!2651, !2652, !2653, !2926, !2927, !2928, !2929, !2930, !2931, !3059, !3060, !3061, !3062, !3063, !3064, !3065}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2649, file: !62, line: 163, baseType: !346, size: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2649, file: !62, line: 164, baseType: !468, size: 64, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2649, file: !62, line: 165, baseType: !2654, size: 64, offset: 192)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !62, line: 105, size: 640, elements: !2657)
!2657 = !{!2658, !2776, !2787, !2792, !2796, !2804, !2808, !2812, !2918, !2922}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2656, file: !62, line: 106, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!446, !2648, !2662, !61}
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2664, line: 51, size: 1344, elements: !2665)
!2664 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!2665 = !{!2666, !2667, !2669, !2670, !2760, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2663, file: !2664, line: 52, baseType: !468, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !2663, file: !2664, line: 53, baseType: !2668, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !2664, line: 28, baseType: !309)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !2663, file: !2664, line: 54, baseType: !468, size: 64, offset: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2663, file: !2664, line: 55, baseType: !2671, size: 192, offset: 192)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2672, line: 17, size: 192, elements: !2673)
!2672 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2673 = !{!2674, !2676, !2759}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2671, file: !2672, line: 18, baseType: !2675, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2671, file: !2672, line: 19, baseType: !2677, size: 64, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2679)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2672, line: 110, size: 1152, elements: !2680)
!2680 = !{!2681, !2685, !2689, !2695, !2701, !2705, !2709, !2714, !2718, !2719, !2723, !2727, !2731, !2742, !2743, !2744, !2745, !2755}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2679, file: !2672, line: 111, baseType: !2682, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!2675, !2675}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2679, file: !2672, line: 112, baseType: !2686, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{null, !2675}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2679, file: !2672, line: 113, baseType: !2690, size: 64, offset: 128)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!314, !2693}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2671)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2679, file: !2672, line: 114, baseType: !2696, size: 64, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!2120, !2693, !2699}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1987)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2679, file: !2672, line: 116, baseType: !2702, size: 64, offset: 256)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!314, !2693, !468}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2679, file: !2672, line: 118, baseType: !2706, size: 64, offset: 320)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!446, !2693, !468, !7, !284, !661}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2679, file: !2672, line: 123, baseType: !2710, size: 64, offset: 384)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!446, !2693, !468, !2713, !661}
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2679, file: !2672, line: 126, baseType: !2715, size: 64, offset: 448)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = !DISubroutineType(types: !2717)
!2717 = !{!468, !2693}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2679, file: !2672, line: 127, baseType: !2715, size: 64, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2679, file: !2672, line: 128, baseType: !2720, size: 64, offset: 576)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!2675, !2693}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2679, file: !2672, line: 130, baseType: !2724, size: 64, offset: 640)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!2675, !2693, !2675}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2679, file: !2672, line: 133, baseType: !2728, size: 64, offset: 704)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!2675, !2693, !468}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2679, file: !2672, line: 135, baseType: !2732, size: 64, offset: 768)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!446, !2693, !468, !468, !7, !7, !2735}
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2672, line: 43, size: 640, elements: !2737)
!2737 = !{!2738, !2739, !2740}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2736, file: !2672, line: 44, baseType: !2675, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2736, file: !2672, line: 45, baseType: !7, size: 32, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2736, file: !2672, line: 46, baseType: !2741, size: 512, offset: 128)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 512, elements: !1147)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2679, file: !2672, line: 140, baseType: !2724, size: 64, offset: 832)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2679, file: !2672, line: 143, baseType: !2720, size: 64, offset: 896)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2679, file: !2672, line: 145, baseType: !2682, size: 64, offset: 960)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2679, file: !2672, line: 146, baseType: !2746, size: 64, offset: 1024)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DISubroutineType(types: !2748)
!2748 = !{!446, !2693, !2749}
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2672, line: 29, size: 128, elements: !2751)
!2751 = !{!2752, !2753, !2754}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2750, file: !2672, line: 30, baseType: !7, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2750, file: !2672, line: 31, baseType: !7, size: 32, offset: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2750, file: !2672, line: 32, baseType: !2693, size: 64, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2679, file: !2672, line: 148, baseType: !2756, size: 64, offset: 1088)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!446, !2693, !2369}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2671, file: !2672, line: 20, baseType: !2369, size: 64, offset: 128)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2663, file: !2664, line: 57, baseType: !2761, size: 64, offset: 384)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !2664, line: 31, size: 704, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767, !2768}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2762, file: !2664, line: 32, baseType: !494, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2762, file: !2664, line: 33, baseType: !446, size: 32, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2762, file: !2664, line: 34, baseType: !284, size: 64, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2762, file: !2664, line: 35, baseType: !2761, size: 64, offset: 192)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2762, file: !2664, line: 43, baseType: !2082, size: 448, offset: 256)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !2663, file: !2664, line: 58, baseType: !2761, size: 64, offset: 448)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2663, file: !2664, line: 59, baseType: !2662, size: 64, offset: 512)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2663, file: !2664, line: 60, baseType: !2662, size: 64, offset: 576)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2663, file: !2664, line: 61, baseType: !2662, size: 64, offset: 640)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2663, file: !2664, line: 63, baseType: !1990, size: 512, offset: 704)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2663, file: !2664, line: 65, baseType: !281, size: 64, offset: 1216)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2663, file: !2664, line: 66, baseType: !284, size: 64, offset: 1280)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !2656, file: !62, line: 108, baseType: !2777, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!446, !2648, !2780, !61}
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !62, line: 63, size: 640, elements: !2782)
!2782 = !{!2783, !2784, !2785}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2781, file: !62, line: 64, baseType: !2675, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !2781, file: !62, line: 65, baseType: !446, size: 32, offset: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !2781, file: !62, line: 66, baseType: !2786, size: 512, offset: 96)
!2786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 512, elements: !1711)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2656, file: !62, line: 110, baseType: !2788, size: 64, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!446, !2648, !7, !2791}
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !283, line: 164, baseType: !281)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !2656, file: !62, line: 111, baseType: !2793, size: 64, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{null, !2648, !7}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !2656, file: !62, line: 112, baseType: !2797, size: 64, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!446, !2648, !2662, !2800, !7, !2802, !2803}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2656, file: !62, line: 117, baseType: !2805, size: 64, offset: 320)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!446, !2648, !7, !7, !284}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2656, file: !62, line: 119, baseType: !2809, size: 64, offset: 384)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{null, !2648, !7, !7}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2656, file: !62, line: 121, baseType: !2813, size: 64, offset: 448)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!446, !2648, !2816, !314}
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !83, line: 175, size: 448, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822, !2834, !2915, !2916, !2917}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2817, file: !83, line: 176, baseType: !309, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2817, file: !83, line: 177, baseType: !7, size: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !2817, file: !83, line: 178, baseType: !281, size: 64, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2817, file: !83, line: 179, baseType: !2823, size: 64, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !83, line: 145, size: 256, elements: !2825)
!2825 = !{!2826, !2827, !2828, !2831}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !2824, file: !83, line: 146, baseType: !7, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !2824, file: !83, line: 150, baseType: !284, size: 64, offset: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !2824, file: !83, line: 151, baseType: !2829, size: 64, offset: 128)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !83, line: 127, flags: DIFlagFwdDecl)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !2824, file: !83, line: 152, baseType: !2832, size: 64, offset: 192)
!2832 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1187, line: 756, baseType: !2833)
!2833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 64, elements: !1192)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !2817, file: !83, line: 180, baseType: !2835, size: 64, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !83, line: 503, size: 2304, elements: !2837)
!2837 = !{!2838, !2839, !2840, !2844, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2861, !2865, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2882, !2883, !2884, !2890, !2891, !2896, !2900, !2904, !2908, !2912, !2913, !2914}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !2836, file: !83, line: 504, baseType: !2369, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2836, file: !83, line: 505, baseType: !468, size: 64, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !2836, file: !83, line: 506, baseType: !2841, size: 64, offset: 128)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!7, !2816}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !2836, file: !83, line: 507, baseType: !2845, size: 64, offset: 192)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{null, !2816}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !2836, file: !83, line: 508, baseType: !2845, size: 64, offset: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !2836, file: !83, line: 509, baseType: !2845, size: 64, offset: 320)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !2836, file: !83, line: 511, baseType: !2845, size: 64, offset: 384)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !2836, file: !83, line: 512, baseType: !2845, size: 64, offset: 448)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !2836, file: !83, line: 513, baseType: !2845, size: 64, offset: 512)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !2836, file: !83, line: 514, baseType: !2845, size: 64, offset: 576)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !2836, file: !83, line: 515, baseType: !2845, size: 64, offset: 640)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !2836, file: !83, line: 517, baseType: !2856, size: 64, offset: 704)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!446, !2816, !2859, !314}
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1188)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !2836, file: !83, line: 518, baseType: !2862, size: 64, offset: 768)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!446, !2816}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !2836, file: !83, line: 519, baseType: !2866, size: 64, offset: 832)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!446, !2816, !7}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !2836, file: !83, line: 520, baseType: !2866, size: 64, offset: 896)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !2836, file: !83, line: 522, baseType: !2845, size: 64, offset: 960)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !2836, file: !83, line: 523, baseType: !2845, size: 64, offset: 1024)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !2836, file: !83, line: 525, baseType: !2845, size: 64, offset: 1088)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !2836, file: !83, line: 526, baseType: !2845, size: 64, offset: 1152)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !2836, file: !83, line: 528, baseType: !2845, size: 64, offset: 1216)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !2836, file: !83, line: 529, baseType: !2845, size: 64, offset: 1280)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !2836, file: !83, line: 530, baseType: !2845, size: 64, offset: 1344)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !2836, file: !83, line: 532, baseType: !2845, size: 64, offset: 1408)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !2836, file: !83, line: 534, baseType: !2879, size: 64, offset: 1472)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{null, !2816, !655}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !2836, file: !83, line: 535, baseType: !2862, size: 64, offset: 1536)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !2836, file: !83, line: 536, baseType: !2845, size: 64, offset: 1600)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !2836, file: !83, line: 538, baseType: !2885, size: 64, offset: 1664)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{null, !2816, !2888}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !83, line: 29, flags: DIFlagFwdDecl)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !2836, file: !83, line: 539, baseType: !2885, size: 64, offset: 1728)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !2836, file: !83, line: 541, baseType: !2892, size: 64, offset: 1792)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!446, !2816, !75, !2895}
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !2836, file: !83, line: 542, baseType: !2897, size: 64, offset: 1856)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!446, !2816, !75, !314}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !2836, file: !83, line: 544, baseType: !2901, size: 64, offset: 1920)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!446, !2816, !284}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !2836, file: !83, line: 546, baseType: !2905, size: 64, offset: 1984)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{null, !2816, !7}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !2836, file: !83, line: 547, baseType: !2909, size: 64, offset: 2048)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{null, !2816, !2859}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !2836, file: !83, line: 549, baseType: !2862, size: 64, offset: 2112)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !2836, file: !83, line: 550, baseType: !2845, size: 64, offset: 2176)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2836, file: !83, line: 552, baseType: !281, size: 64, offset: 2240)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !2817, file: !83, line: 181, baseType: !2648, size: 64, offset: 256)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !2817, file: !83, line: 183, baseType: !2816, size: 64, offset: 320)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !2817, file: !83, line: 185, baseType: !284, size: 64, offset: 384)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !2656, file: !62, line: 122, baseType: !2919, size: 64, offset: 512)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{null, !2648, !2816}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !2656, file: !62, line: 123, baseType: !2923, size: 64, offset: 576)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!446, !2648, !2780, !2802, !2803}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !2649, file: !62, line: 166, baseType: !284, size: 64, offset: 256)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2649, file: !62, line: 167, baseType: !7, size: 32, offset: 320)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !2649, file: !62, line: 168, baseType: !7, size: 32, offset: 352)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2649, file: !62, line: 171, baseType: !2675, size: 64, offset: 384)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !2649, file: !62, line: 172, baseType: !61, size: 32, offset: 448)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2649, file: !62, line: 173, baseType: !2932, size: 64, offset: 512)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !83, line: 1101, size: 192, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !2933, file: !83, line: 1102, baseType: !7, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !2933, file: !83, line: 1103, baseType: !7, size: 32, offset: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !2933, file: !83, line: 1104, baseType: !7, size: 32, offset: 64)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !2933, file: !83, line: 1105, baseType: !7, size: 32, offset: 96)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !2933, file: !83, line: 1106, baseType: !82, size: 32, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2933, file: !83, line: 1107, baseType: !2941, offset: 192)
!2941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2942, elements: !3057)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !83, line: 1051, size: 960, elements: !2944)
!2944 = !{!2945, !2946, !2947, !2951, !2955, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2943, file: !83, line: 1052, baseType: !945)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !2943, file: !83, line: 1053, baseType: !284, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !2943, file: !83, line: 1054, baseType: !2948, size: 64, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!309, !284}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !2943, file: !83, line: 1055, baseType: !2952, size: 64, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{null, !309, !284}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2943, file: !83, line: 1056, baseType: !2956, size: 64, offset: 192)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{null, !2942}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2943, file: !83, line: 1057, baseType: !2956, size: 64, offset: 256)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !2943, file: !83, line: 1058, baseType: !7, size: 32, offset: 320)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !2943, file: !83, line: 1059, baseType: !7, size: 32, offset: 352)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !2943, file: !83, line: 1060, baseType: !309, size: 32, offset: 384)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !2943, file: !83, line: 1061, baseType: !309, size: 32, offset: 416)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !2943, file: !83, line: 1062, baseType: !309, size: 32, offset: 448)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !2943, file: !83, line: 1063, baseType: !309, size: 32, offset: 480)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !2943, file: !83, line: 1064, baseType: !309, size: 32, offset: 512)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !2943, file: !83, line: 1065, baseType: !7, size: 32, offset: 544)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2943, file: !83, line: 1066, baseType: !284, size: 64, offset: 576)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !2943, file: !83, line: 1067, baseType: !281, size: 64, offset: 640)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2943, file: !83, line: 1068, baseType: !281, size: 64, offset: 704)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !2943, file: !83, line: 1069, baseType: !2648, size: 64, offset: 768)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2943, file: !83, line: 1070, baseType: !346, size: 128, offset: 832)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !2943, file: !83, line: 1071, baseType: !2974, offset: 960)
!2974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2975, elements: !3057)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !83, line: 1009, size: 2944, elements: !2976)
!2976 = !{!2977, !2978, !2988, !3054, !3055, !3056}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !2975, file: !83, line: 1010, baseType: !2836, size: 2304)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2975, file: !83, line: 1011, baseType: !2979, size: 448, offset: 2304)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !83, line: 986, size: 448, elements: !2980)
!2980 = !{!2981, !2982, !2983, !2984, !2985, !2986, !2987}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !2979, file: !83, line: 987, baseType: !281, size: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !2979, file: !83, line: 988, baseType: !281, size: 64, offset: 64)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2979, file: !83, line: 989, baseType: !281, size: 64, offset: 128)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !2979, file: !83, line: 990, baseType: !281, size: 64, offset: 192)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !2979, file: !83, line: 991, baseType: !281, size: 64, offset: 256)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2979, file: !83, line: 992, baseType: !281, size: 64, offset: 320)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !2979, file: !83, line: 993, baseType: !281, size: 64, offset: 384)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2975, file: !83, line: 1012, baseType: !2989, size: 64, offset: 2752)
!2989 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !2990, line: 12, baseType: !2991)
!2990 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{null, !2994}
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !2996, line: 55, size: 2880, elements: !2997)
!2996 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!2997 = !{!2998, !2999, !3000, !3001, !3002, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !2995, file: !2996, line: 56, baseType: !2824, size: 256)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !2995, file: !2996, line: 57, baseType: !2817, size: 448, offset: 256)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !2995, file: !2996, line: 58, baseType: !2803, size: 64, offset: 704)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !2995, file: !2996, line: 59, baseType: !2989, size: 64, offset: 768)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2995, file: !2996, line: 60, baseType: !3003, size: 64, offset: 832)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !76, line: 110, size: 768, elements: !3005)
!3005 = !{!3006, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3004, file: !76, line: 111, baseType: !3007, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !76, line: 92, baseType: !3008)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{!3011, !446, !284}
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !91, line: 17, baseType: !90)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !3004, file: !76, line: 112, baseType: !284, size: 64, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !3004, file: !76, line: 113, baseType: !284, size: 64, offset: 128)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3004, file: !76, line: 114, baseType: !3003, size: 64, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !3004, file: !76, line: 115, baseType: !3007, size: 64, offset: 256)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !3004, file: !76, line: 116, baseType: !1034, size: 64, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3004, file: !76, line: 117, baseType: !3003, size: 64, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3004, file: !76, line: 118, baseType: !7, size: 32, offset: 448)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3004, file: !76, line: 119, baseType: !7, size: 32, offset: 480)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !3004, file: !76, line: 120, baseType: !281, size: 64, offset: 512)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !3004, file: !76, line: 121, baseType: !281, size: 64, offset: 576)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3004, file: !76, line: 122, baseType: !468, size: 64, offset: 640)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3004, file: !76, line: 123, baseType: !3024, size: 64, offset: 704)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !76, line: 123, flags: DIFlagFwdDecl)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !2995, file: !2996, line: 61, baseType: !7, size: 32, offset: 896)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !2995, file: !2996, line: 62, baseType: !7, size: 32, offset: 928)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2995, file: !2996, line: 63, baseType: !7, size: 32, offset: 960)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !2995, file: !2996, line: 64, baseType: !7, size: 32, offset: 992)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !2995, file: !2996, line: 65, baseType: !7, size: 32, offset: 1024)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !2995, file: !2996, line: 66, baseType: !7, size: 32, offset: 1056)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !2995, file: !2996, line: 67, baseType: !281, size: 64, offset: 1088)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !2995, file: !2996, line: 68, baseType: !7, size: 32, offset: 1152)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !2995, file: !2996, line: 69, baseType: !928, size: 32, offset: 1184)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !2995, file: !2996, line: 70, baseType: !446, size: 32, offset: 1216)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2995, file: !2996, line: 71, baseType: !945, offset: 1248)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !2995, file: !2996, line: 72, baseType: !3038, size: 64, offset: 1280)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !2995, file: !2996, line: 73, baseType: !2859, size: 64, offset: 1344)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !2995, file: !2996, line: 81, baseType: !281, size: 64, offset: 1408)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !2995, file: !2996, line: 82, baseType: !928, size: 32, offset: 1472)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !2995, file: !2996, line: 83, baseType: !1302, size: 128, offset: 1536)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !2995, file: !2996, line: 85, baseType: !7, size: 32, offset: 1664)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !2995, file: !2996, line: 86, baseType: !7, size: 32, offset: 1696)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !2995, file: !2996, line: 87, baseType: !7, size: 32, offset: 1728)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !2995, file: !2996, line: 88, baseType: !7, size: 32, offset: 1760)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2995, file: !2996, line: 91, baseType: !3024, size: 64, offset: 1792)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2995, file: !2996, line: 98, baseType: !722, size: 128, align: 64, offset: 1856)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2995, file: !2996, line: 99, baseType: !1990, size: 512, offset: 1984)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !2995, file: !2996, line: 101, baseType: !670, size: 192, offset: 2496)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !2995, file: !2996, line: 102, baseType: !446, size: 32, offset: 2688)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2995, file: !2996, line: 103, baseType: !558, size: 64, offset: 2752)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2995, file: !2996, line: 104, baseType: !468, size: 64, offset: 2816)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2975, file: !83, line: 1013, baseType: !309, size: 32, offset: 2816)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !2975, file: !83, line: 1014, baseType: !309, size: 32, offset: 2848)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !2975, file: !83, line: 1015, baseType: !1236, size: 64, offset: 2880)
!3057 = !{!3058}
!3058 = !DISubrange(count: -1)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2649, file: !62, line: 175, baseType: !2648, size: 64, offset: 576)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !2649, file: !62, line: 182, baseType: !2791, size: 64, offset: 640)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !2649, file: !62, line: 183, baseType: !7, size: 32, offset: 704)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !2649, file: !62, line: 184, baseType: !7, size: 32, offset: 736)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !2649, file: !62, line: 185, baseType: !2171, size: 128, offset: 768)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !2649, file: !62, line: 186, baseType: !670, size: 192, offset: 896)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !2649, file: !62, line: 187, baseType: !3066, offset: 1088)
!3066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !3057)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1987, file: !41, line: 499, baseType: !346, size: 128, offset: 4224)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1987, file: !41, line: 502, baseType: !3069, size: 64, offset: 4352)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3071)
!3071 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !41, line: 502, flags: DIFlagFwdDecl)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1987, file: !41, line: 504, baseType: !3073, size: 64, offset: 4416)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1987, file: !41, line: 505, baseType: !326, size: 64, offset: 4480)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1987, file: !41, line: 510, baseType: !326, size: 64, offset: 4544)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1987, file: !41, line: 511, baseType: !3077, size: 64, offset: 4608)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3079)
!3079 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !41, line: 511, flags: DIFlagFwdDecl)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1987, file: !41, line: 513, baseType: !3081, size: 64, offset: 4672)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !41, line: 288, size: 128, elements: !3083)
!3083 = !{!3084, !3085}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3082, file: !41, line: 293, baseType: !7, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3082, file: !41, line: 294, baseType: !281, size: 64, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1987, file: !41, line: 515, baseType: !346, size: 128, offset: 4736)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1987, file: !41, line: 526, baseType: !3088, offset: 4864)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3089, line: 5, elements: !304)
!3089 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1987, file: !41, line: 528, baseType: !2662, size: 64, offset: 4864)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1987, file: !41, line: 529, baseType: !2675, size: 64, offset: 4928)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1987, file: !41, line: 534, baseType: !525, size: 32, offset: 4992)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1987, file: !41, line: 535, baseType: !309, size: 32, offset: 5024)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1987, file: !41, line: 537, baseType: !290, offset: 5056)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1987, file: !41, line: 538, baseType: !346, size: 128, offset: 5056)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1987, file: !41, line: 540, baseType: !3097, size: 64, offset: 5184)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3099, line: 54, size: 960, elements: !3100)
!3099 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3100 = !{!3101, !3102, !3103, !3104, !3105, !3106, !3107, !3111, !3115, !3116, !3117, !3118, !3122, !3126, !3127}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3098, file: !3099, line: 55, baseType: !468, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3098, file: !3099, line: 56, baseType: !558, size: 64, offset: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3098, file: !3099, line: 58, baseType: !2067, size: 64, offset: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3098, file: !3099, line: 59, baseType: !2067, size: 64, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3098, file: !3099, line: 60, baseType: !1996, size: 64, offset: 256)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3098, file: !3099, line: 62, baseType: !2382, size: 64, offset: 320)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3098, file: !3099, line: 63, baseType: !3108, size: 64, offset: 384)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{!494, !2369, !2389}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3098, file: !3099, line: 65, baseType: !3112, size: 64, offset: 448)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{null, !3097}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3098, file: !3099, line: 66, baseType: !2391, size: 64, offset: 512)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3098, file: !3099, line: 68, baseType: !2400, size: 64, offset: 576)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3098, file: !3099, line: 70, baseType: !2103, size: 64, offset: 640)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3098, file: !3099, line: 71, baseType: !3119, size: 64, offset: 704)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!2120, !2369}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3098, file: !3099, line: 73, baseType: !3123, size: 64, offset: 768)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null, !2369, !1659, !1660}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3098, file: !3099, line: 75, baseType: !2395, size: 64, offset: 832)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3098, file: !3099, line: 77, baseType: !2512, size: 64, offset: 896)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1987, file: !41, line: 541, baseType: !2067, size: 64, offset: 5248)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1987, file: !41, line: 543, baseType: !2391, size: 64, offset: 5312)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1987, file: !41, line: 544, baseType: !3131, size: 64, offset: 5376)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !41, line: 45, flags: DIFlagFwdDecl)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1987, file: !41, line: 545, baseType: !3134, size: 64, offset: 5440)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !41, line: 47, flags: DIFlagFwdDecl)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1987, file: !41, line: 547, baseType: !314, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1987, file: !41, line: 548, baseType: !314, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1987, file: !41, line: 549, baseType: !314, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1987, file: !41, line: 550, baseType: !314, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1956, file: !1939, line: 69, baseType: !1996, size: 64, offset: 5952)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1956, file: !1939, line: 70, baseType: !446, size: 32, offset: 6016)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1956, file: !1939, line: 70, baseType: !446, size: 32, offset: 6048)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1956, file: !1939, line: 71, baseType: !3144, size: 64, offset: 6080)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1939, line: 48, size: 808, elements: !3146)
!3146 = !{!3147, !3151}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !3145, file: !1939, line: 49, baseType: !3148, size: 296)
!3148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 296, elements: !3149)
!3149 = !{!3150}
!3150 = !DISubrange(count: 37)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !3145, file: !1939, line: 50, baseType: !3152, size: 512, offset: 296)
!3152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 512, elements: !1891)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1956, file: !1939, line: 75, baseType: !3154, size: 448, offset: 6144)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1585, line: 124, size: 448, elements: !3155)
!3155 = !{!3156, !3157, !3158}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3154, file: !1585, line: 125, baseType: !1584, size: 256)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3154, file: !1585, line: 126, baseType: !722, size: 128, align: 64, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3154, file: !1585, line: 129, baseType: !3159, size: 64, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1585, line: 18, flags: DIFlagFwdDecl)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1950, file: !1939, line: 153, baseType: !3162, offset: 256)
!3162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, elements: !3057)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1938, file: !1939, line: 187, baseType: !1956, size: 6592, offset: 448)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1938, file: !1939, line: 189, baseType: !3165, size: 64, offset: 7040)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3167)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !109, line: 1844, size: 960, elements: !3168)
!3168 = !{!3169, !3174, !3267, !3271, !3275, !3279, !3280, !3284, !3288, !3292, !3298, !3302, !3328, !3332, !3333}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !3167, file: !109, line: 1845, baseType: !3170, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{!3173, !1931}
!3173 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1933, line: 515, baseType: !7)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3167, file: !109, line: 1846, baseType: !3175, size: 64, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!446, !3178, !3266}
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1933, line: 22, size: 1344, elements: !3180)
!3180 = !{!3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3264, !3265}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !3179, file: !1933, line: 23, baseType: !525, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !3179, file: !1933, line: 24, baseType: !446, size: 32, offset: 32)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !3179, file: !1933, line: 25, baseType: !356, size: 64, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !3179, file: !1933, line: 26, baseType: !520, size: 64, offset: 128)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !3179, file: !1933, line: 27, baseType: !670, size: 192, offset: 192)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !3179, file: !1933, line: 28, baseType: !284, size: 64, offset: 384)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !3179, file: !1933, line: 29, baseType: !284, size: 64, offset: 448)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !3179, file: !1933, line: 30, baseType: !446, size: 32, offset: 512)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !3179, file: !1933, line: 31, baseType: !314, size: 8, offset: 544)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !3179, file: !1933, line: 33, baseType: !346, size: 128, offset: 576)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !3179, file: !1933, line: 35, baseType: !3178, size: 64, offset: 704)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !3179, file: !1933, line: 36, baseType: !1173, size: 8, offset: 768)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !3179, file: !1933, line: 37, baseType: !1955, size: 64, offset: 832)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !3179, file: !1933, line: 39, baseType: !7, size: 32, offset: 896)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !3179, file: !1933, line: 41, baseType: !290, offset: 928)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !3179, file: !1933, line: 42, baseType: !1937, size: 64, offset: 960)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !3179, file: !1933, line: 43, baseType: !3198, size: 64, offset: 1024)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !97, line: 165, size: 4672, elements: !3200)
!3200 = !{!3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3257, !3258, !3259, !3260, !3262, !3263}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3199, file: !97, line: 166, baseType: !326, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3199, file: !97, line: 167, baseType: !889, size: 192, align: 64, offset: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !3199, file: !97, line: 168, baseType: !346, size: 128, offset: 256)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3199, file: !97, line: 169, baseType: !281, size: 64, offset: 384)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !3199, file: !97, line: 170, baseType: !281, size: 64, offset: 448)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3199, file: !97, line: 172, baseType: !2359, size: 32, offset: 512)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3199, file: !97, line: 173, baseType: !7, size: 32, offset: 544)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !3199, file: !97, line: 174, baseType: !7, size: 32, offset: 576)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !3199, file: !97, line: 175, baseType: !7, size: 32, offset: 608)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !3199, file: !97, line: 175, baseType: !7, size: 32, offset: 640)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !3199, file: !97, line: 181, baseType: !674, size: 64, offset: 704)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !3199, file: !97, line: 183, baseType: !3213, size: 2688, offset: 768)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !97, line: 107, size: 2688, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3244, !3245, !3246, !3247, !3248, !3255, !3256}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !3213, file: !97, line: 108, baseType: !3198, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3213, file: !97, line: 110, baseType: !281, size: 64, offset: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !3213, file: !97, line: 111, baseType: !281, size: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !3213, file: !97, line: 113, baseType: !346, size: 128, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !3213, file: !97, line: 114, baseType: !346, size: 128, offset: 320)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !3213, file: !97, line: 115, baseType: !346, size: 128, offset: 448)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !3213, file: !97, line: 116, baseType: !346, size: 128, offset: 576)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3213, file: !97, line: 117, baseType: !290, offset: 704)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !3213, file: !97, line: 119, baseType: !3224, size: 256, offset: 704)
!3224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3225, size: 256, elements: !979)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3226, line: 97, size: 64, elements: !3227)
!3226 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3227 = !{!3228}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3225, file: !3226, line: 98, baseType: !680, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !3213, file: !97, line: 121, baseType: !281, size: 64, offset: 960)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !3213, file: !97, line: 123, baseType: !281, size: 64, offset: 1024)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !3213, file: !97, line: 124, baseType: !281, size: 64, offset: 1088)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !3213, file: !97, line: 125, baseType: !281, size: 64, offset: 1152)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !3213, file: !97, line: 126, baseType: !281, size: 64, offset: 1216)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !3213, file: !97, line: 127, baseType: !281, size: 64, offset: 1280)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !3213, file: !97, line: 135, baseType: !281, size: 64, offset: 1344)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !3213, file: !97, line: 136, baseType: !281, size: 64, offset: 1408)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !3213, file: !97, line: 138, baseType: !3238, size: 128, offset: 1472)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !3239, line: 76, size: 128, elements: !3240)
!3239 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!3240 = !{!3241, !3242, !3243}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3238, file: !3239, line: 78, baseType: !3225, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3238, file: !3239, line: 80, baseType: !7, size: 32, offset: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3238, file: !3239, line: 81, baseType: !945, offset: 96)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !3213, file: !97, line: 139, baseType: !446, size: 32, offset: 1600)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !3213, file: !97, line: 140, baseType: !96, size: 32, offset: 1632)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !3213, file: !97, line: 142, baseType: !290, offset: 1664)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !3213, file: !97, line: 143, baseType: !346, size: 128, offset: 1664)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !3213, file: !97, line: 144, baseType: !3249, size: 704, offset: 1792)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1585, line: 115, size: 704, elements: !3250)
!3250 = !{!3251, !3252, !3253, !3254}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3249, file: !1585, line: 116, baseType: !1584, size: 256)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3249, file: !1585, line: 117, baseType: !2560, size: 320, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3249, file: !1585, line: 120, baseType: !3159, size: 64, offset: 576)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3249, file: !1585, line: 121, baseType: !446, size: 32, offset: 640)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !3213, file: !97, line: 146, baseType: !281, size: 64, offset: 2496)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !3213, file: !97, line: 148, baseType: !346, size: 128, offset: 2560)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !3199, file: !97, line: 184, baseType: !346, size: 128, offset: 3456)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !3199, file: !97, line: 190, baseType: !1302, size: 128, offset: 3584)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3199, file: !97, line: 192, baseType: !2369, size: 64, offset: 3712)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3199, file: !97, line: 193, baseType: !3261, size: 512, offset: 3776)
!3261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 512, elements: !1891)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3199, file: !97, line: 194, baseType: !2369, size: 64, offset: 4288)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !3199, file: !97, line: 196, baseType: !2560, size: 320, offset: 4352)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !3179, file: !1933, line: 46, baseType: !446, size: 32, offset: 1088)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !3179, file: !1933, line: 48, baseType: !670, size: 192, offset: 1152)
!3266 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !283, line: 150, baseType: !7)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3167, file: !109, line: 1847, baseType: !3268, size: 64, offset: 128)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 64)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{null, !1937, !3266}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !3167, file: !109, line: 1848, baseType: !3272, size: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!446, !3178, !1959, !334, !7}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3167, file: !109, line: 1849, baseType: !3276, size: 64, offset: 256)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!446, !3178, !3266, !7, !281}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3167, file: !109, line: 1850, baseType: !3276, size: 64, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !3167, file: !109, line: 1851, baseType: !3281, size: 64, offset: 384)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!7, !1937, !7}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !3167, file: !109, line: 1853, baseType: !3285, size: 64, offset: 448)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{null, !1937}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !3167, file: !109, line: 1854, baseType: !3289, size: 64, offset: 512)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!446, !1937}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !3167, file: !109, line: 1855, baseType: !3293, size: 64, offset: 576)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!446, !3178, !3296}
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !127, line: 51, flags: DIFlagFwdDecl)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !3167, file: !109, line: 1857, baseType: !3299, size: 64, offset: 640)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DISubroutineType(types: !3301)
!3301 = !{null, !3178, !281}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !3167, file: !109, line: 1858, baseType: !3303, size: 64, offset: 704)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!446, !1937, !1959, !7, !3306, !284}
!3306 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !109, line: 354, baseType: !3307)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!446, !3310, !7, !284}
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !3312, line: 106, size: 512, elements: !3313)
!3312 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!3313 = !{!3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3323, !3324}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3311, file: !3312, line: 107, baseType: !327, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3311, file: !3312, line: 108, baseType: !327, size: 64, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !3311, file: !3312, line: 109, baseType: !327, size: 64, offset: 128)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3311, file: !3312, line: 110, baseType: !1174, size: 8, offset: 192)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3311, file: !3312, line: 111, baseType: !1174, size: 8, offset: 200)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !3311, file: !3312, line: 112, baseType: !1174, size: 8, offset: 208)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3311, file: !3312, line: 113, baseType: !1174, size: 8, offset: 216)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !3311, file: !3312, line: 114, baseType: !3322, size: 32, offset: 224)
!3322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 32, elements: !979)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3311, file: !3312, line: 115, baseType: !327, size: 64, offset: 256)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3311, file: !3312, line: 116, baseType: !3325, size: 192, offset: 320)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 192, elements: !3326)
!3326 = !{!3327}
!3327 = !DISubrange(count: 24)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3167, file: !109, line: 1860, baseType: !3329, size: 64, offset: 768)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{!494, !1937, !2389}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3167, file: !109, line: 1861, baseType: !558, size: 64, offset: 832)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !3167, file: !109, line: 1862, baseType: !3334, size: 64, offset: 896)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3336)
!3336 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !109, line: 41, flags: DIFlagFwdDecl)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1938, file: !1939, line: 190, baseType: !3338, size: 64, offset: 7104)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !109, line: 399, size: 14464, elements: !3340)
!3340 = !{!3341, !3473, !3595, !3596, !3599, !3602, !3606, !3607, !3608, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3667, !3676, !3677, !3678, !3679, !3680, !3710, !3711, !3712, !3713, !3714, !3715, !3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726, !3788, !3789, !3790, !3791, !3794, !3795, !3829, !3830, !3831, !3832}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !3339, file: !109, line: 400, baseType: !3342, size: 64)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !109, line: 130, size: 2176, elements: !3344)
!3344 = !{!3345, !3346, !3349, !3352, !3353, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3367, !3374, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3471, !3472}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3343, file: !109, line: 131, baseType: !3338, size: 64)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !3343, file: !109, line: 132, baseType: !3347, size: 64, offset: 64)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !109, line: 132, flags: DIFlagFwdDecl)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !3343, file: !109, line: 133, baseType: !3350, size: 64, offset: 128)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !109, line: 133, flags: DIFlagFwdDecl)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !3343, file: !109, line: 135, baseType: !7, size: 32, offset: 192)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !3343, file: !109, line: 136, baseType: !3354, size: 32, offset: 224)
!3354 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !109, line: 66, baseType: !311)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3343, file: !109, line: 138, baseType: !446, size: 32, offset: 256)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !3343, file: !109, line: 139, baseType: !446, size: 32, offset: 288)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !3343, file: !109, line: 142, baseType: !7, size: 32, offset: 320)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !3343, file: !109, line: 143, baseType: !1959, size: 64, offset: 384)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !3343, file: !109, line: 145, baseType: !1931, size: 64, offset: 448)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !3343, file: !109, line: 146, baseType: !1931, size: 64, offset: 512)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !3343, file: !109, line: 148, baseType: !346, size: 128, offset: 576)
!3362 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !109, line: 157, baseType: !3363, size: 128, offset: 704)
!3363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3343, file: !109, line: 157, size: 128, elements: !3364)
!3364 = !{!3365, !3366}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3363, file: !109, line: 158, baseType: !567, size: 128)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !3363, file: !109, line: 159, baseType: !346, size: 128)
!3367 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !109, line: 167, baseType: !3368, size: 192, offset: 832)
!3368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3343, file: !109, line: 167, size: 192, elements: !3369)
!3369 = !{!3370, !3371, !3372, !3373}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3368, file: !109, line: 168, baseType: !889, size: 192, align: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !3368, file: !109, line: 169, baseType: !826, size: 128)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !3368, file: !109, line: 170, baseType: !284, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !3368, file: !109, line: 171, baseType: !446, size: 32)
!3374 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !109, line: 180, baseType: !3375, size: 256, offset: 1024)
!3375 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3343, file: !109, line: 180, size: 256, elements: !3376)
!3376 = !{!3377, !3414}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !3375, file: !109, line: 184, baseType: !3378, size: 192)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3375, file: !109, line: 181, size: 192, elements: !3379)
!3379 = !{!3380, !3412}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !3378, file: !109, line: 182, baseType: !3381, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3383, line: 73, size: 448, elements: !3384)
!3383 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3384 = !{!3385, !3386, !3399, !3406, !3411}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3382, file: !3383, line: 74, baseType: !3338, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3382, file: !3383, line: 75, baseType: !3387, size: 64, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3383, line: 99, size: 704, elements: !3389)
!3389 = !{!3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3388, file: !3383, line: 100, baseType: !674, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3388, file: !3383, line: 101, baseType: !928, size: 32, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3388, file: !3383, line: 102, baseType: !928, size: 32, offset: 96)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3388, file: !3383, line: 105, baseType: !290, offset: 128)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3388, file: !3383, line: 107, baseType: !361, size: 16, offset: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3388, file: !3383, line: 109, baseType: !2171, size: 128, offset: 192)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3388, file: !3383, line: 110, baseType: !3381, size: 64, offset: 320)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3388, file: !3383, line: 111, baseType: !563, size: 64, offset: 384)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3388, file: !3383, line: 113, baseType: !1584, size: 256, offset: 448)
!3399 = !DIDerivedType(tag: DW_TAG_member, scope: !3382, file: !3383, line: 83, baseType: !3400, size: 128, offset: 128)
!3400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3382, file: !3383, line: 83, size: 128, elements: !3401)
!3401 = !{!3402, !3403}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3400, file: !3383, line: 84, baseType: !346, size: 128)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3400, file: !3383, line: 85, baseType: !3404, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !336, line: 117, flags: DIFlagFwdDecl)
!3406 = !DIDerivedType(tag: DW_TAG_member, scope: !3382, file: !3383, line: 87, baseType: !3407, size: 128, offset: 256)
!3407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3382, file: !3383, line: 87, size: 128, elements: !3408)
!3408 = !{!3409, !3410}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3407, file: !3383, line: 88, baseType: !567, size: 128)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3407, file: !3383, line: 89, baseType: !722, size: 128, align: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3382, file: !3383, line: 92, baseType: !7, size: 32, offset: 384)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3378, file: !109, line: 183, baseType: !3413, size: 128, offset: 64)
!3413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 128, elements: !1389)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3375, file: !109, line: 190, baseType: !3415, size: 256)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3375, file: !109, line: 186, size: 256, elements: !3416)
!3416 = !{!3417, !3418, !3419}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3415, file: !109, line: 187, baseType: !7, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3415, file: !109, line: 188, baseType: !346, size: 128, offset: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !3415, file: !109, line: 189, baseType: !3420, size: 64, offset: 192)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !109, line: 62, baseType: !3422)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{null, !3342, !3424}
!3424 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1933, line: 58, baseType: !1173)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !3343, file: !109, line: 193, baseType: !1937, size: 64, offset: 1280)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3343, file: !109, line: 194, baseType: !1955, size: 64, offset: 1344)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !3343, file: !109, line: 200, baseType: !326, size: 64, offset: 1408)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !3343, file: !109, line: 202, baseType: !326, size: 64, offset: 1472)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !3343, file: !109, line: 212, baseType: !361, size: 16, offset: 1536)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !3343, file: !109, line: 218, baseType: !361, size: 16, offset: 1552)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !3343, file: !109, line: 221, baseType: !361, size: 16, offset: 1568)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !3343, file: !109, line: 229, baseType: !361, size: 16, offset: 1584)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3343, file: !109, line: 230, baseType: !361, size: 16, offset: 1600)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3343, file: !109, line: 232, baseType: !108, size: 32, offset: 1632)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3343, file: !109, line: 233, baseType: !1047, size: 32, offset: 1664)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3343, file: !109, line: 235, baseType: !7, size: 32, offset: 1696)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !3343, file: !109, line: 236, baseType: !281, size: 64, offset: 1728)
!3438 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !109, line: 238, baseType: !3439, size: 256, offset: 1792)
!3439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3343, file: !109, line: 238, size: 256, elements: !3440)
!3440 = !{!3441, !3470}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !3439, file: !109, line: 239, baseType: !3442, size: 256)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !3443, line: 23, size: 256, elements: !3444)
!3443 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3444 = !{!3445, !3467, !3469}
!3445 = !DIDerivedType(tag: DW_TAG_member, scope: !3442, file: !3443, line: 24, baseType: !3446, size: 128)
!3446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3442, file: !3443, line: 24, size: 128, elements: !3447)
!3447 = !{!3448, !3460}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3446, file: !3443, line: 25, baseType: !3449, size: 128)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3450, line: 58, size: 128, elements: !3451)
!3450 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3451 = !{!3452, !3453, !3458, !3459}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3449, file: !3450, line: 59, baseType: !716, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_member, scope: !3449, file: !3450, line: 60, baseType: !3454, size: 32, offset: 64)
!3454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3449, file: !3450, line: 60, size: 32, elements: !3455)
!3455 = !{!3456, !3457}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3454, file: !3450, line: 61, baseType: !7, size: 32)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3454, file: !3450, line: 62, baseType: !928, size: 32)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3449, file: !3450, line: 65, baseType: !770, size: 16, offset: 96)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3449, file: !3450, line: 65, baseType: !770, size: 16, offset: 112)
!3460 = !DIDerivedType(tag: DW_TAG_member, scope: !3446, file: !3443, line: 26, baseType: !3461, size: 128)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3446, file: !3443, line: 26, size: 128, elements: !3462)
!3462 = !{!3463, !3464, !3465, !3466}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3461, file: !3443, line: 27, baseType: !716, size: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3461, file: !3443, line: 28, baseType: !7, size: 32, offset: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3461, file: !3443, line: 30, baseType: !770, size: 16, offset: 96)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3461, file: !3443, line: 30, baseType: !770, size: 16, offset: 112)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3442, file: !3443, line: 34, baseType: !3468, size: 64, offset: 128)
!3468 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !3443, line: 17, baseType: !2129)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3442, file: !3443, line: 35, baseType: !284, size: 64, offset: 192)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !3439, file: !109, line: 240, baseType: !326, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !3343, file: !109, line: 246, baseType: !3420, size: 64, offset: 2048)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !3343, file: !109, line: 247, baseType: !284, size: 64, offset: 2112)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !3339, file: !109, line: 401, baseType: !3474, size: 64, offset: 64)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !115, line: 101, size: 4992, elements: !3476)
!3476 = !{!3477, !3589, !3590, !3591, !3592, !3593}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3475, file: !115, line: 103, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !115, line: 66, size: 2240, elements: !3480)
!3480 = !{!3481, !3482, !3564, !3565, !3566, !3579, !3580, !3581, !3583, !3584, !3588}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3479, file: !115, line: 69, baseType: !3404, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3479, file: !115, line: 72, baseType: !3483, size: 1408, offset: 64)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !115, line: 29, size: 1408, elements: !3484)
!3484 = !{!3485, !3489, !3493, !3497, !3501, !3505, !3509, !3513, !3518, !3522, !3526, !3532, !3536, !3537, !3541, !3545, !3549, !3553, !3554, !3558, !3559, !3563}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3483, file: !115, line: 30, baseType: !3486, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!446, !3338, !3478}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3483, file: !115, line: 31, baseType: !3490, size: 64, offset: 64)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{null, !3474}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3483, file: !115, line: 32, baseType: !3494, size: 64, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!446, !3350, !7}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3483, file: !115, line: 33, baseType: !3498, size: 64, offset: 192)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{null, !3350, !7}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3483, file: !115, line: 34, baseType: !3502, size: 64, offset: 256)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{null, !3350}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3483, file: !115, line: 36, baseType: !3506, size: 64, offset: 320)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!314, !3338, !3342, !1931}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3483, file: !115, line: 37, baseType: !3510, size: 64, offset: 384)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!314, !3350, !1931, !7}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3483, file: !115, line: 38, baseType: !3514, size: 64, offset: 448)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!446, !3338, !3517, !1931}
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3483, file: !115, line: 39, baseType: !3519, size: 64, offset: 512)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{null, !3338, !3342, !114}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3483, file: !115, line: 40, baseType: !3523, size: 64, offset: 576)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{null, !3338, !3342, !3342}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3483, file: !115, line: 41, baseType: !3527, size: 64, offset: 640)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{null, !7, !3530}
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !115, line: 26, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3483, file: !115, line: 42, baseType: !3533, size: 64, offset: 704)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{null, !3342}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3483, file: !115, line: 43, baseType: !3533, size: 64, offset: 768)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3483, file: !115, line: 44, baseType: !3538, size: 64, offset: 832)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{null, !3350, !349, !314}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3483, file: !115, line: 45, baseType: !3542, size: 64, offset: 896)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!3342, !3350}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3483, file: !115, line: 46, baseType: !3546, size: 64, offset: 960)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{!314, !3350}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3483, file: !115, line: 47, baseType: !3550, size: 64, offset: 1024)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3342, !326}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3483, file: !115, line: 48, baseType: !3533, size: 64, offset: 1088)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3483, file: !115, line: 49, baseType: !3555, size: 64, offset: 1152)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!3342, !3338, !3342}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3483, file: !115, line: 50, baseType: !3555, size: 64, offset: 1216)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3483, file: !115, line: 51, baseType: !3560, size: 64, offset: 1280)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{null, !3381}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3483, file: !115, line: 52, baseType: !3560, size: 64, offset: 1344)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3479, file: !115, line: 74, baseType: !661, size: 64, offset: 1472)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3479, file: !115, line: 75, baseType: !661, size: 64, offset: 1536)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3479, file: !115, line: 76, baseType: !3567, size: 64, offset: 1600)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !115, line: 57, size: 256, elements: !3569)
!3569 = !{!3570, !3571, !3575}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3568, file: !115, line: 58, baseType: !2056, size: 128)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3568, file: !115, line: 59, baseType: !3572, size: 64, offset: 128)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DISubroutineType(types: !3574)
!3574 = !{!747, !3474, !494}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3568, file: !115, line: 60, baseType: !3576, size: 64, offset: 192)
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DISubroutineType(types: !3578)
!3578 = !{!747, !3474, !468, !661}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3479, file: !115, line: 77, baseType: !468, size: 64, offset: 1664)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3479, file: !115, line: 78, baseType: !468, size: 64, offset: 1728)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3479, file: !115, line: 79, baseType: !3582, size: 32, offset: 1792)
!3582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3479, file: !115, line: 80, baseType: !558, size: 64, offset: 1856)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3479, file: !115, line: 87, baseType: !3585, size: 176, offset: 1920)
!3585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 176, elements: !3586)
!3586 = !{!3587}
!3587 = !DISubrange(count: 22)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3479, file: !115, line: 88, baseType: !346, size: 128, offset: 2112)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3475, file: !115, line: 104, baseType: !284, size: 64, offset: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3475, file: !115, line: 105, baseType: !1990, size: 512, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3475, file: !115, line: 106, baseType: !670, size: 192, offset: 640)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3475, file: !115, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3475, file: !115, line: 108, baseType: !3594, size: 4096, offset: 896)
!3594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 4096, elements: !1891)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !3339, file: !109, line: 403, baseType: !1966, size: 128, offset: 128)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3339, file: !109, line: 405, baseType: !3597, size: 64, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !109, line: 43, flags: DIFlagFwdDecl)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !3339, file: !109, line: 406, baseType: !3600, size: 64, offset: 320)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !109, line: 42, flags: DIFlagFwdDecl)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !3339, file: !109, line: 408, baseType: !3603, size: 64, offset: 384)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3605)
!3605 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !109, line: 408, flags: DIFlagFwdDecl)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !3339, file: !109, line: 411, baseType: !3347, size: 64, offset: 448)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !3339, file: !109, line: 413, baseType: !7, size: 32, offset: 512)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !3339, file: !109, line: 416, baseType: !3609, size: 64, offset: 576)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !3339, file: !109, line: 417, baseType: !7, size: 32, offset: 640)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !3339, file: !109, line: 419, baseType: !3198, size: 64, offset: 704)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !3339, file: !109, line: 425, baseType: !284, size: 64, offset: 768)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !3339, file: !109, line: 430, baseType: !281, size: 64, offset: 832)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !3339, file: !109, line: 436, baseType: !928, size: 32, offset: 896)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3339, file: !109, line: 442, baseType: !446, size: 32, offset: 928)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !3339, file: !109, line: 447, baseType: !282, size: 32, offset: 960)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !3339, file: !109, line: 449, baseType: !290, offset: 992)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3339, file: !109, line: 454, baseType: !1990, size: 512, offset: 1024)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !3339, file: !109, line: 459, baseType: !1996, size: 64, offset: 1536)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !3339, file: !109, line: 462, baseType: !3621, size: 128, offset: 1600)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1939, line: 159, size: 128, elements: !3622)
!3622 = !{!3623, !3652, !3653, !3654, !3655}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3621, file: !1939, line: 160, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3626)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !109, line: 1664, size: 320, elements: !3627)
!3627 = !{!3628, !3642, !3643, !3646, !3651}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3626, file: !109, line: 1665, baseType: !3629, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !109, line: 1660, baseType: !3631)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!3424, !3633}
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !109, line: 1651, size: 320, elements: !3635)
!3635 = !{!3636, !3637, !3638, !3639, !3640, !3641}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3634, file: !109, line: 1652, baseType: !284, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3634, file: !109, line: 1653, baseType: !284, size: 64, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3634, file: !109, line: 1654, baseType: !1959, size: 64, offset: 128)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3634, file: !109, line: 1655, baseType: !7, size: 32, offset: 192)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3634, file: !109, line: 1656, baseType: !361, size: 16, offset: 224)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3634, file: !109, line: 1657, baseType: !468, size: 64, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3626, file: !109, line: 1666, baseType: !3629, size: 64, offset: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3626, file: !109, line: 1667, baseType: !3644, size: 64, offset: 128)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !109, line: 1661, baseType: !3534)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3626, file: !109, line: 1668, baseType: !3647, size: 64, offset: 192)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !109, line: 1662, baseType: !3649)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{null, !3342, !7}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3626, file: !109, line: 1669, baseType: !468, size: 64, offset: 256)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3621, file: !1939, line: 161, baseType: !428, size: 8, offset: 64)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3621, file: !1939, line: 162, baseType: !428, size: 8, offset: 72)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3621, file: !1939, line: 163, baseType: !428, size: 8, offset: 80)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3621, file: !1939, line: 164, baseType: !428, size: 8, offset: 88)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3339, file: !109, line: 466, baseType: !2369, size: 64, offset: 1728)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !3339, file: !109, line: 467, baseType: !55, size: 32, offset: 1792)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !3339, file: !109, line: 468, baseType: !7, size: 32, offset: 1824)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !3339, file: !109, line: 474, baseType: !281, size: 64, offset: 1856)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !3339, file: !109, line: 476, baseType: !7, size: 32, offset: 1920)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !3339, file: !109, line: 477, baseType: !7, size: 32, offset: 1952)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !3339, file: !109, line: 484, baseType: !7, size: 32, offset: 1984)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !3339, file: !109, line: 485, baseType: !446, size: 32, offset: 2016)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !3339, file: !109, line: 487, baseType: !3665, size: 64, offset: 2048)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !109, line: 44, flags: DIFlagFwdDecl)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !3339, file: !109, line: 488, baseType: !3668, size: 5120, offset: 2112)
!3668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3669, size: 5120, elements: !1711)
!3669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1933, line: 540, size: 320, elements: !3670)
!3670 = !{!3671, !3672, !3673, !3674, !3675}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3669, file: !1933, line: 541, baseType: !326, size: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3669, file: !1933, line: 542, baseType: !326, size: 64, offset: 64)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3669, file: !1933, line: 543, baseType: !326, size: 64, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3669, file: !1933, line: 544, baseType: !309, size: 32, offset: 192)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3669, file: !1933, line: 545, baseType: !326, size: 64, offset: 256)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3339, file: !109, line: 490, baseType: !2560, size: 320, offset: 7232)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !3339, file: !109, line: 491, baseType: !1584, size: 256, offset: 7552)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !3339, file: !109, line: 493, baseType: !928, size: 32, offset: 7808)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3339, file: !109, line: 495, baseType: !346, size: 128, offset: 7872)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !3339, file: !109, line: 502, baseType: !3681, size: 896, offset: 8000)
!3681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !109, line: 321, size: 896, elements: !3682)
!3682 = !{!3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3681, file: !109, line: 322, baseType: !281, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3681, file: !109, line: 323, baseType: !281, size: 64, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3681, file: !109, line: 324, baseType: !281, size: 64, offset: 128)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3681, file: !109, line: 326, baseType: !7, size: 32, offset: 192)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3681, file: !109, line: 327, baseType: !7, size: 32, offset: 224)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3681, file: !109, line: 328, baseType: !7, size: 32, offset: 256)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3681, file: !109, line: 329, baseType: !7, size: 32, offset: 288)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3681, file: !109, line: 330, baseType: !7, size: 32, offset: 320)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3681, file: !109, line: 331, baseType: !7, size: 32, offset: 352)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3681, file: !109, line: 332, baseType: !7, size: 32, offset: 384)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3681, file: !109, line: 333, baseType: !7, size: 32, offset: 416)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3681, file: !109, line: 334, baseType: !7, size: 32, offset: 448)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3681, file: !109, line: 335, baseType: !7, size: 32, offset: 480)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3681, file: !109, line: 336, baseType: !7, size: 32, offset: 512)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3681, file: !109, line: 337, baseType: !7, size: 32, offset: 544)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3681, file: !109, line: 338, baseType: !7, size: 32, offset: 576)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3681, file: !109, line: 339, baseType: !7, size: 32, offset: 608)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3681, file: !109, line: 340, baseType: !7, size: 32, offset: 640)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3681, file: !109, line: 341, baseType: !7, size: 32, offset: 672)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3681, file: !109, line: 342, baseType: !7, size: 32, offset: 704)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3681, file: !109, line: 344, baseType: !361, size: 16, offset: 736)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3681, file: !109, line: 345, baseType: !361, size: 16, offset: 752)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3681, file: !109, line: 346, baseType: !361, size: 16, offset: 768)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3681, file: !109, line: 348, baseType: !428, size: 8, offset: 784)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3681, file: !109, line: 349, baseType: !428, size: 8, offset: 792)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3681, file: !109, line: 350, baseType: !428, size: 8, offset: 800)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3681, file: !109, line: 351, baseType: !121, size: 32, offset: 832)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !3339, file: !109, line: 504, baseType: !7, size: 32, offset: 8896)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !3339, file: !109, line: 534, baseType: !7, size: 32, offset: 8928)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !3339, file: !109, line: 535, baseType: !7, size: 32, offset: 8960)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3339, file: !109, line: 536, baseType: !446, size: 32, offset: 8992)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !3339, file: !109, line: 537, baseType: !670, size: 192, offset: 9024)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !3339, file: !109, line: 544, baseType: !3716, size: 64, offset: 9216)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !109, line: 40, flags: DIFlagFwdDecl)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !3339, file: !109, line: 546, baseType: !346, size: 128, offset: 9280)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !3339, file: !109, line: 547, baseType: !290, offset: 9408)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !3339, file: !109, line: 548, baseType: !3249, size: 704, offset: 9408)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3339, file: !109, line: 550, baseType: !670, size: 192, offset: 10112)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !3339, file: !109, line: 551, baseType: !670, size: 192, offset: 10304)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !3339, file: !109, line: 557, baseType: !346, size: 128, offset: 10496)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !3339, file: !109, line: 558, baseType: !290, offset: 10624)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !3339, file: !109, line: 560, baseType: !446, size: 32, offset: 10624)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !3339, file: !109, line: 563, baseType: !3727, size: 256, offset: 10688)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3728, line: 18, size: 256, elements: !3729)
!3728 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3729 = !{!3730, !3731, !3732, !3733}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3727, file: !3728, line: 19, baseType: !2369, size: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3727, file: !3728, line: 20, baseType: !446, size: 32, offset: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3727, file: !3728, line: 21, baseType: !3338, size: 64, offset: 128)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3727, file: !3728, line: 22, baseType: !3734, size: 64, offset: 192)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3736)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3728, line: 10, size: 256, elements: !3737)
!3737 = !{!3738, !3779, !3783, !3787}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3736, file: !3728, line: 11, baseType: !3739, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!446, !3742}
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3744, line: 22, size: 1280, elements: !3745)
!3744 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3745 = !{!3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3743, file: !3744, line: 23, baseType: !1266, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3743, file: !3744, line: 24, baseType: !311, size: 32, offset: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3743, file: !3744, line: 25, baseType: !311, size: 32, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3743, file: !3744, line: 28, baseType: !311, size: 32, offset: 96)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3743, file: !3744, line: 29, baseType: !327, size: 64, offset: 128)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3743, file: !3744, line: 30, baseType: !327, size: 64, offset: 192)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3743, file: !3744, line: 31, baseType: !311, size: 32, offset: 256)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3743, file: !3744, line: 32, baseType: !311, size: 32, offset: 288)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3743, file: !3744, line: 33, baseType: !311, size: 32, offset: 320)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3743, file: !3744, line: 34, baseType: !311, size: 32, offset: 352)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3743, file: !3744, line: 35, baseType: !327, size: 64, offset: 384)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3743, file: !3744, line: 38, baseType: !311, size: 32, offset: 448)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3743, file: !3744, line: 40, baseType: !311, size: 32, offset: 480)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3743, file: !3744, line: 41, baseType: !311, size: 32, offset: 512)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3743, file: !3744, line: 42, baseType: !311, size: 32, offset: 544)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3743, file: !3744, line: 43, baseType: !327, size: 64, offset: 576)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3743, file: !3744, line: 44, baseType: !327, size: 64, offset: 640)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3743, file: !3744, line: 46, baseType: !311, size: 32, offset: 704)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3743, file: !3744, line: 47, baseType: !311, size: 32, offset: 736)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3743, file: !3744, line: 48, baseType: !327, size: 64, offset: 768)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3743, file: !3744, line: 49, baseType: !311, size: 32, offset: 832)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3743, file: !3744, line: 51, baseType: !311, size: 32, offset: 864)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3743, file: !3744, line: 52, baseType: !311, size: 32, offset: 896)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3743, file: !3744, line: 53, baseType: !311, size: 32, offset: 928)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3743, file: !3744, line: 54, baseType: !311, size: 32, offset: 960)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3743, file: !3744, line: 55, baseType: !311, size: 32, offset: 992)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3743, file: !3744, line: 56, baseType: !311, size: 32, offset: 1024)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3743, file: !3744, line: 57, baseType: !311, size: 32, offset: 1056)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3743, file: !3744, line: 58, baseType: !1266, size: 32, offset: 1088)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3743, file: !3744, line: 59, baseType: !1266, size: 32, offset: 1120)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3743, file: !3744, line: 60, baseType: !327, size: 64, offset: 1152)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3743, file: !3744, line: 61, baseType: !311, size: 32, offset: 1216)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3743, file: !3744, line: 63, baseType: !311, size: 32, offset: 1248)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3736, file: !3728, line: 12, baseType: !3780, size: 64, offset: 64)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!446, !3342, !3742, !3266}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3736, file: !3728, line: 14, baseType: !3784, size: 64, offset: 128)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!446, !3342, !3742}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3736, file: !3728, line: 15, baseType: !3533, size: 64, offset: 192)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3339, file: !109, line: 570, baseType: !722, size: 128, align: 64, offset: 10944)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !3339, file: !109, line: 571, baseType: !1302, size: 128, offset: 11072)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !3339, file: !109, line: 576, baseType: !670, size: 192, offset: 11200)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !3339, file: !109, line: 578, baseType: !3792, size: 64, offset: 11392)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !109, line: 578, flags: DIFlagFwdDecl)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !3339, file: !109, line: 579, baseType: !346, size: 128, offset: 11456)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !3339, file: !109, line: 580, baseType: !3796, size: 2368, offset: 11584)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1928, line: 682, size: 2368, elements: !3797)
!3797 = !{!3798, !3799, !3800, !3822, !3823, !3824, !3825, !3826, !3827, !3828}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3796, file: !1928, line: 683, baseType: !3404, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3796, file: !1928, line: 684, baseType: !7, size: 32, offset: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3796, file: !1928, line: 686, baseType: !3801, size: 448, offset: 128)
!3801 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3802, line: 26, baseType: !3803)
!3802 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3802, line: 16, size: 448, elements: !3804)
!3804 = !{!3805, !3806, !3807, !3808, !3810, !3811, !3816, !3821}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3803, file: !3802, line: 17, baseType: !290)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3803, file: !3802, line: 18, baseType: !446, size: 32)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3803, file: !3802, line: 19, baseType: !446, size: 32, offset: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3803, file: !3802, line: 20, baseType: !3809, size: 64, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3803, file: !3802, line: 22, baseType: !284, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3803, file: !3802, line: 23, baseType: !3812, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3802, line: 13, baseType: !3814)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!284, !282, !284}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3803, file: !3802, line: 24, baseType: !3817, size: 64, offset: 256)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3802, line: 14, baseType: !3819)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{null, !284, !284}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3803, file: !3802, line: 25, baseType: !1302, size: 128, offset: 320)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3796, file: !1928, line: 687, baseType: !3801, size: 448, offset: 576)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3796, file: !1928, line: 689, baseType: !3801, size: 448, offset: 1024)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3796, file: !1928, line: 690, baseType: !3801, size: 448, offset: 1472)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3796, file: !1928, line: 697, baseType: !290, offset: 1920)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3796, file: !1928, line: 698, baseType: !1927, size: 128, offset: 1920)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3796, file: !1928, line: 699, baseType: !1584, size: 256, offset: 2048)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3796, file: !1928, line: 700, baseType: !3159, size: 64, offset: 2304)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !3339, file: !109, line: 582, baseType: !389, size: 64, offset: 13952)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !3339, file: !109, line: 589, baseType: !314, size: 8, offset: 14016)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !3339, file: !109, line: 591, baseType: !661, size: 64, offset: 14080)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !3339, file: !109, line: 594, baseType: !3833, size: 320, offset: 14144)
!3833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 320, elements: !1554)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1938, file: !1939, line: 191, baseType: !284, size: 64, offset: 7168)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1938, file: !1939, line: 193, baseType: !446, size: 32, offset: 7232)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1938, file: !1939, line: 194, baseType: !281, size: 64, offset: 7296)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1938, file: !1939, line: 196, baseType: !939, size: 256, offset: 7360)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1938, file: !1939, line: 197, baseType: !1996, size: 64, offset: 7616)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1938, file: !1939, line: 199, baseType: !3840, size: 64, offset: 7680)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1939, line: 199, flags: DIFlagFwdDecl)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1938, file: !1939, line: 200, baseType: !928, size: 32, offset: 7744)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1938, file: !1939, line: 201, baseType: !3844, size: 64, offset: 7808)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1939, line: 156, flags: DIFlagFwdDecl)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1938, file: !1939, line: 203, baseType: !1990, size: 512, offset: 7872)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1938, file: !1939, line: 208, baseType: !446, size: 32, offset: 8384)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1938, file: !1939, line: 209, baseType: !3849, size: 64, offset: 8448)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1939, line: 157, flags: DIFlagFwdDecl)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1938, file: !1939, line: 210, baseType: !3852, offset: 8512)
!3852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !574, line: 192, elements: !304)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1932, file: !1933, line: 206, baseType: !7, size: 32, offset: 128)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1932, file: !1933, line: 210, baseType: !361, size: 16, offset: 160)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1932, file: !1933, line: 211, baseType: !361, size: 16, offset: 176)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1932, file: !1933, line: 212, baseType: !361, size: 16, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1932, file: !1933, line: 213, baseType: !3424, size: 8, offset: 208)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1932, file: !1933, line: 214, baseType: !1173, size: 8, offset: 216)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1932, file: !1933, line: 215, baseType: !928, size: 32, offset: 224)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1932, file: !1933, line: 217, baseType: !3861, size: 192, offset: 256)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !827, line: 37, size: 192, elements: !3862)
!3862 = !{!3863, !3864, !3865, !3866}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3861, file: !827, line: 38, baseType: !1959, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3861, file: !827, line: 40, baseType: !7, size: 32, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3861, file: !827, line: 42, baseType: !7, size: 32, offset: 96)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3861, file: !827, line: 44, baseType: !7, size: 32, offset: 128)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1932, file: !1933, line: 219, baseType: !3868, size: 64, offset: 448)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1933, line: 19, baseType: !3870)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{null, !1931}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1932, file: !1933, line: 221, baseType: !284, size: 64, offset: 512)
!3873 = !DIDerivedType(tag: DW_TAG_member, scope: !1932, file: !1933, line: 240, baseType: !3874, size: 64, offset: 576)
!3874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1932, file: !1933, line: 240, size: 64, elements: !3875)
!3875 = !{!3876}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3874, file: !1933, line: 242, baseType: !3877, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1928, line: 313, size: 832, elements: !3879)
!3879 = !{!3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3890}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3878, file: !1928, line: 314, baseType: !1931, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3878, file: !1928, line: 316, baseType: !3861, size: 192, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3878, file: !1928, line: 318, baseType: !361, size: 16, offset: 256)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3878, file: !1928, line: 319, baseType: !361, size: 16, offset: 272)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3878, file: !1928, line: 320, baseType: !361, size: 16, offset: 288)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3878, file: !1928, line: 321, baseType: !361, size: 16, offset: 304)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3878, file: !1928, line: 323, baseType: !3861, size: 192, offset: 320)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3878, file: !1928, line: 325, baseType: !1584, size: 256, offset: 512)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3878, file: !1928, line: 327, baseType: !3889, size: 64, offset: 768)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3878, file: !1928, line: 328, baseType: !3891, offset: 832)
!3891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !826, elements: !3057)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1932, file: !1933, line: 246, baseType: !361, size: 16, offset: 640)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1932, file: !1933, line: 252, baseType: !361, size: 16, offset: 656)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1932, file: !1933, line: 254, baseType: !928, size: 32, offset: 672)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1932, file: !1933, line: 256, baseType: !3889, size: 64, offset: 704)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1932, file: !1933, line: 258, baseType: !3897, size: 64, offset: 768)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1932, file: !1933, line: 265, baseType: !3891, offset: 832)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1927, file: !1928, line: 556, baseType: !1931, size: 64, offset: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1035, file: !835, line: 1050, baseType: !3901, size: 64, offset: 10688)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !109, line: 1236, size: 320, elements: !3903)
!3903 = !{!3904, !3905, !3906, !3907, !3908}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3902, file: !109, line: 1237, baseType: !346, size: 128)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3902, file: !109, line: 1238, baseType: !346, size: 128, offset: 128)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3902, file: !109, line: 1239, baseType: !361, size: 16, offset: 256)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3902, file: !109, line: 1240, baseType: !314, size: 8, offset: 272)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3902, file: !109, line: 1241, baseType: !314, size: 8, offset: 280)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1035, file: !835, line: 1054, baseType: !3910, size: 64, offset: 10752)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !3912, line: 131, size: 64, elements: !3913)
!3912 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!3913 = !{!3914}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3911, file: !3912, line: 132, baseType: !281, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1035, file: !835, line: 1056, baseType: !3198, size: 64, offset: 10816)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1035, file: !835, line: 1058, baseType: !3387, size: 64, offset: 10880)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1035, file: !835, line: 1061, baseType: !3918, size: 64, offset: 10944)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !835, line: 43, flags: DIFlagFwdDecl)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1035, file: !835, line: 1064, baseType: !281, size: 64, offset: 11008)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1035, file: !835, line: 1065, baseType: !3922, size: 64, offset: 11072)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1774, line: 14, baseType: !3924)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1774, line: 12, size: 384, elements: !3925)
!3925 = !{!3926}
!3926 = !DIDerivedType(tag: DW_TAG_member, scope: !3924, file: !1774, line: 13, baseType: !3927, size: 384)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3924, file: !1774, line: 13, size: 384, elements: !3928)
!3928 = !{!3929, !3930, !3931, !3932}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3927, file: !1774, line: 13, baseType: !446, size: 32)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3927, file: !1774, line: 13, baseType: !446, size: 32, offset: 32)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3927, file: !1774, line: 13, baseType: !446, size: 32, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3927, file: !1774, line: 13, baseType: !3933, size: 256, offset: 128)
!3933 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3934, line: 32, size: 256, elements: !3935)
!3934 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3935 = !{!3936, !3941, !3954, !3960, !3969, !3989, !3994}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3933, file: !3934, line: 37, baseType: !3937, size: 64)
!3937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 34, size: 64, elements: !3938)
!3938 = !{!3939, !3940}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3937, file: !3934, line: 35, baseType: !1281, size: 32)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3937, file: !3934, line: 36, baseType: !370, size: 32, offset: 32)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3933, file: !3934, line: 45, baseType: !3942, size: 192)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 40, size: 192, elements: !3943)
!3943 = !{!3944, !3946, !3947, !3953}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3942, file: !3934, line: 41, baseType: !3945, size: 32)
!3945 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !371, line: 95, baseType: !446)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3942, file: !3934, line: 42, baseType: !446, size: 32, offset: 32)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3942, file: !3934, line: 43, baseType: !3948, size: 64, offset: 64)
!3948 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3934, line: 11, baseType: !3949)
!3949 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3934, line: 8, size: 64, elements: !3950)
!3950 = !{!3951, !3952}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3949, file: !3934, line: 9, baseType: !446, size: 32)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3949, file: !3934, line: 10, baseType: !284, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3942, file: !3934, line: 44, baseType: !446, size: 32, offset: 128)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3933, file: !3934, line: 52, baseType: !3955, size: 128)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 48, size: 128, elements: !3956)
!3956 = !{!3957, !3958, !3959}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3955, file: !3934, line: 49, baseType: !1281, size: 32)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3955, file: !3934, line: 50, baseType: !370, size: 32, offset: 32)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3955, file: !3934, line: 51, baseType: !3948, size: 64, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3933, file: !3934, line: 61, baseType: !3961, size: 256)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 55, size: 256, elements: !3962)
!3962 = !{!3963, !3964, !3965, !3966, !3968}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3961, file: !3934, line: 56, baseType: !1281, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3961, file: !3934, line: 57, baseType: !370, size: 32, offset: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3961, file: !3934, line: 58, baseType: !446, size: 32, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3961, file: !3934, line: 59, baseType: !3967, size: 64, offset: 128)
!3967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !371, line: 94, baseType: !749)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3961, file: !3934, line: 60, baseType: !3967, size: 64, offset: 192)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3933, file: !3934, line: 95, baseType: !3970, size: 256)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 64, size: 256, elements: !3971)
!3971 = !{!3972, !3973}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3970, file: !3934, line: 65, baseType: !284, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_member, scope: !3970, file: !3934, line: 77, baseType: !3974, size: 192, offset: 64)
!3974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3970, file: !3934, line: 77, size: 192, elements: !3975)
!3975 = !{!3976, !3977, !3984}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3974, file: !3934, line: 82, baseType: !1023, size: 16)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3974, file: !3934, line: 88, baseType: !3978, size: 192)
!3978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3974, file: !3934, line: 84, size: 192, elements: !3979)
!3979 = !{!3980, !3982, !3983}
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3978, file: !3934, line: 85, baseType: !3981, size: 64)
!3981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 64, elements: !1147)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3978, file: !3934, line: 86, baseType: !284, size: 64, offset: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3978, file: !3934, line: 87, baseType: !284, size: 64, offset: 128)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3974, file: !3934, line: 93, baseType: !3985, size: 96)
!3985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3974, file: !3934, line: 90, size: 96, elements: !3986)
!3986 = !{!3987, !3988}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3985, file: !3934, line: 91, baseType: !3981, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3985, file: !3934, line: 92, baseType: !311, size: 32, offset: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3933, file: !3934, line: 101, baseType: !3990, size: 128)
!3990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 98, size: 128, elements: !3991)
!3991 = !{!3992, !3993}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3990, file: !3934, line: 99, baseType: !285, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3990, file: !3934, line: 100, baseType: !446, size: 32, offset: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3933, file: !3934, line: 108, baseType: !3995, size: 128)
!3995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3933, file: !3934, line: 104, size: 128, elements: !3996)
!3996 = !{!3997, !3998, !3999}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3995, file: !3934, line: 105, baseType: !284, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3995, file: !3934, line: 106, baseType: !446, size: 32, offset: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3995, file: !3934, line: 107, baseType: !7, size: 32, offset: 96)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1035, file: !835, line: 1067, baseType: !1846, offset: 11136)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1035, file: !835, line: 1099, baseType: !4002, size: 64, offset: 11136)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !835, line: 56, flags: DIFlagFwdDecl)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1035, file: !835, line: 1103, baseType: !346, size: 128, offset: 11200)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1035, file: !835, line: 1104, baseType: !4006, size: 64, offset: 11328)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !835, line: 46, flags: DIFlagFwdDecl)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1035, file: !835, line: 1105, baseType: !670, size: 192, offset: 11392)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1035, file: !835, line: 1106, baseType: !7, size: 32, offset: 11584)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1035, file: !835, line: 1109, baseType: !4011, size: 128, offset: 11648)
!4011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4012, size: 128, elements: !1389)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !835, line: 51, flags: DIFlagFwdDecl)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1035, file: !835, line: 1110, baseType: !670, size: 192, offset: 11776)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1035, file: !835, line: 1111, baseType: !346, size: 128, offset: 11968)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1035, file: !835, line: 1173, baseType: !4017, size: 64, offset: 12096)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !4019, line: 62, size: 256, align: 256, elements: !4020)
!4019 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!4020 = !{!4021, !4022, !4023, !4028}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !4018, file: !4019, line: 75, baseType: !311, size: 32)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !4018, file: !4019, line: 90, baseType: !311, size: 32, offset: 32)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !4018, file: !4019, line: 124, baseType: !4024, size: 64, offset: 64)
!4024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4018, file: !4019, line: 109, size: 64, elements: !4025)
!4025 = !{!4026, !4027}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !4024, file: !4019, line: 110, baseType: !327, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4024, file: !4019, line: 112, baseType: !327, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4018, file: !4019, line: 144, baseType: !311, size: 32, offset: 128)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1035, file: !835, line: 1174, baseType: !309, size: 32, offset: 12160)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1035, file: !835, line: 1179, baseType: !281, size: 64, offset: 12224)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1035, file: !835, line: 1182, baseType: !4032, size: 128, offset: 12288)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !975, line: 76, size: 128, elements: !4033)
!4033 = !{!4034, !4039, !4040}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4032, file: !975, line: 85, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4036, line: 7, size: 64, elements: !4037)
!4036 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4037 = !{!4038}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4035, file: !4036, line: 12, baseType: !1188, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4032, file: !975, line: 88, baseType: !314, size: 8, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4032, file: !975, line: 95, baseType: !314, size: 8, offset: 72)
!4041 = !DIDerivedType(tag: DW_TAG_member, scope: !1035, file: !835, line: 1184, baseType: !4042, size: 128, offset: 12416)
!4042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1035, file: !835, line: 1184, size: 128, elements: !4043)
!4043 = !{!4044, !4045}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4042, file: !835, line: 1185, baseType: !1047, size: 32)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4042, file: !835, line: 1186, baseType: !722, size: 128, align: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1035, file: !835, line: 1190, baseType: !833, size: 64, offset: 12544)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1035, file: !835, line: 1192, baseType: !4048, size: 128, offset: 12608)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !975, line: 64, size: 128, elements: !4049)
!4049 = !{!4050, !4051, !4052}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4048, file: !975, line: 65, baseType: !334, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4048, file: !975, line: 67, baseType: !311, size: 32, offset: 64)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4048, file: !975, line: 68, baseType: !311, size: 32, offset: 96)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1035, file: !835, line: 1206, baseType: !446, size: 32, offset: 12736)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1035, file: !835, line: 1207, baseType: !446, size: 32, offset: 12768)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1035, file: !835, line: 1209, baseType: !281, size: 64, offset: 12800)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1035, file: !835, line: 1219, baseType: !326, size: 64, offset: 12864)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1035, file: !835, line: 1220, baseType: !326, size: 64, offset: 12928)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1035, file: !835, line: 1317, baseType: !446, size: 32, offset: 12992)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1035, file: !835, line: 1319, baseType: !1034, size: 64, offset: 13056)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1035, file: !835, line: 1322, baseType: !4061, size: 64, offset: 13120)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4063, line: 56, size: 512, elements: !4064)
!4063 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4064 = !{!4065, !4066, !4067, !4068, !4069, !4071, !4072, !4074}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4062, file: !4063, line: 57, baseType: !4061, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4062, file: !4063, line: 58, baseType: !284, size: 64, offset: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4062, file: !4063, line: 59, baseType: !281, size: 64, offset: 128)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4062, file: !4063, line: 60, baseType: !281, size: 64, offset: 192)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4062, file: !4063, line: 61, baseType: !4070, size: 64, offset: 256)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4062, file: !4063, line: 62, baseType: !7, size: 32, offset: 320)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4062, file: !4063, line: 63, baseType: !4073, size: 64, offset: 384)
!4073 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !283, line: 153, baseType: !326)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4062, file: !4063, line: 64, baseType: !2120, size: 64, offset: 448)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1035, file: !835, line: 1326, baseType: !1047, size: 32, offset: 13184)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1035, file: !835, line: 1342, baseType: !284, size: 64, offset: 13248)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1035, file: !835, line: 1343, baseType: !327, size: 64, offset: 13312)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1035, file: !835, line: 1344, baseType: !326, size: 64, offset: 13376)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1035, file: !835, line: 1345, baseType: !327, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1035, file: !835, line: 1346, baseType: !327, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1035, file: !835, line: 1347, baseType: !327, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1035, file: !835, line: 1348, baseType: !722, size: 128, align: 64, offset: 13504)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1035, file: !835, line: 1358, baseType: !4084, size: 34816, offset: 13824)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4085, line: 485, size: 34816, elements: !4086)
!4085 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4086 = !{!4087, !4105, !4106, !4107, !4108, !4109, !4110, !4111, !4112, !4116, !4117, !4118, !4119, !4120, !4121, !4124, !4125, !4126}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4084, file: !4085, line: 487, baseType: !4088, size: 192)
!4088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4089, size: 192, elements: !579)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4090, line: 16, size: 64, elements: !4091)
!4090 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4091 = !{!4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4089, file: !4090, line: 17, baseType: !770, size: 16)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4089, file: !4090, line: 18, baseType: !770, size: 16, offset: 16)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4089, file: !4090, line: 19, baseType: !770, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4089, file: !4090, line: 19, baseType: !770, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4089, file: !4090, line: 19, baseType: !770, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4089, file: !4090, line: 19, baseType: !770, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4089, file: !4090, line: 19, baseType: !770, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4089, file: !4090, line: 20, baseType: !770, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4089, file: !4090, line: 20, baseType: !770, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4089, file: !4090, line: 20, baseType: !770, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4089, file: !4090, line: 20, baseType: !770, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4089, file: !4090, line: 20, baseType: !770, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4089, file: !4090, line: 20, baseType: !770, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4084, file: !4085, line: 491, baseType: !281, size: 64, offset: 192)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4084, file: !4085, line: 495, baseType: !361, size: 16, offset: 256)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4084, file: !4085, line: 496, baseType: !361, size: 16, offset: 272)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4084, file: !4085, line: 497, baseType: !361, size: 16, offset: 288)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4084, file: !4085, line: 498, baseType: !361, size: 16, offset: 304)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4084, file: !4085, line: 502, baseType: !281, size: 64, offset: 320)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4084, file: !4085, line: 503, baseType: !281, size: 64, offset: 384)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4084, file: !4085, line: 514, baseType: !4113, size: 256, offset: 448)
!4113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4114, size: 256, elements: !979)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4085, line: 483, flags: DIFlagFwdDecl)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4084, file: !4085, line: 516, baseType: !281, size: 64, offset: 704)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4084, file: !4085, line: 518, baseType: !281, size: 64, offset: 768)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4084, file: !4085, line: 520, baseType: !281, size: 64, offset: 832)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4084, file: !4085, line: 521, baseType: !281, size: 64, offset: 896)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4084, file: !4085, line: 522, baseType: !281, size: 64, offset: 960)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4084, file: !4085, line: 528, baseType: !4122, size: 64, offset: 1024)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4085, line: 10, flags: DIFlagFwdDecl)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4084, file: !4085, line: 535, baseType: !281, size: 64, offset: 1088)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4084, file: !4085, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4084, file: !4085, line: 540, baseType: !4127, size: 33280, offset: 1536)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4128, line: 317, size: 33280, elements: !4129)
!4128 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4129 = !{!4130, !4131, !4132}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4127, file: !4128, line: 330, baseType: !7, size: 32)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4127, file: !4128, line: 337, baseType: !281, size: 64, offset: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4127, file: !4128, line: 348, baseType: !4133, size: 32768, offset: 512)
!4133 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4128, line: 304, size: 32768, elements: !4134)
!4134 = !{!4135, !4150, !4187, !4237, !4250}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4133, file: !4128, line: 305, baseType: !4136, size: 896)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4128, line: 12, size: 896, elements: !4137)
!4137 = !{!4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4149}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4136, file: !4128, line: 13, baseType: !309, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4136, file: !4128, line: 14, baseType: !309, size: 32, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4136, file: !4128, line: 15, baseType: !309, size: 32, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4136, file: !4128, line: 16, baseType: !309, size: 32, offset: 96)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4136, file: !4128, line: 17, baseType: !309, size: 32, offset: 128)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4136, file: !4128, line: 18, baseType: !309, size: 32, offset: 160)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4136, file: !4128, line: 19, baseType: !309, size: 32, offset: 192)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4136, file: !4128, line: 22, baseType: !4146, size: 640, offset: 224)
!4146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 640, elements: !4147)
!4147 = !{!4148}
!4148 = !DISubrange(count: 20)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4136, file: !4128, line: 25, baseType: !309, size: 32, offset: 864)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4133, file: !4128, line: 306, baseType: !4151, size: 4096, align: 128)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4128, line: 34, size: 4096, align: 128, elements: !4152)
!4152 = !{!4153, !4154, !4155, !4156, !4157, !4172, !4173, !4174, !4176, !4178, !4182}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4151, file: !4128, line: 35, baseType: !770, size: 16)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4151, file: !4128, line: 36, baseType: !770, size: 16, offset: 16)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4151, file: !4128, line: 37, baseType: !770, size: 16, offset: 32)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4151, file: !4128, line: 38, baseType: !770, size: 16, offset: 48)
!4157 = !DIDerivedType(tag: DW_TAG_member, scope: !4151, file: !4128, line: 39, baseType: !4158, size: 128, offset: 64)
!4158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4151, file: !4128, line: 39, size: 128, elements: !4159)
!4159 = !{!4160, !4165}
!4160 = !DIDerivedType(tag: DW_TAG_member, scope: !4158, file: !4128, line: 40, baseType: !4161, size: 128)
!4161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4158, file: !4128, line: 40, size: 128, elements: !4162)
!4162 = !{!4163, !4164}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4161, file: !4128, line: 41, baseType: !326, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4161, file: !4128, line: 42, baseType: !326, size: 64, offset: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, scope: !4158, file: !4128, line: 44, baseType: !4166, size: 128)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4158, file: !4128, line: 44, size: 128, elements: !4167)
!4167 = !{!4168, !4169, !4170, !4171}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4166, file: !4128, line: 45, baseType: !309, size: 32)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4166, file: !4128, line: 46, baseType: !309, size: 32, offset: 32)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4166, file: !4128, line: 47, baseType: !309, size: 32, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4166, file: !4128, line: 48, baseType: !309, size: 32, offset: 96)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4151, file: !4128, line: 51, baseType: !309, size: 32, offset: 192)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4151, file: !4128, line: 52, baseType: !309, size: 32, offset: 224)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4151, file: !4128, line: 55, baseType: !4175, size: 1024, offset: 256)
!4175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 1024, elements: !432)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4151, file: !4128, line: 58, baseType: !4177, size: 2048, offset: 1280)
!4177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 2048, elements: !1891)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4151, file: !4128, line: 60, baseType: !4179, size: 384, offset: 3328)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 384, elements: !4180)
!4180 = !{!4181}
!4181 = !DISubrange(count: 12)
!4182 = !DIDerivedType(tag: DW_TAG_member, scope: !4151, file: !4128, line: 62, baseType: !4183, size: 384, offset: 3712)
!4183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4151, file: !4128, line: 62, size: 384, elements: !4184)
!4184 = !{!4185, !4186}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4183, file: !4128, line: 63, baseType: !4179, size: 384)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4183, file: !4128, line: 64, baseType: !4179, size: 384)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4133, file: !4128, line: 307, baseType: !4188, size: 1088)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4128, line: 79, size: 1088, elements: !4189)
!4189 = !{!4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4236}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4188, file: !4128, line: 80, baseType: !309, size: 32)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4188, file: !4128, line: 81, baseType: !309, size: 32, offset: 32)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4188, file: !4128, line: 82, baseType: !309, size: 32, offset: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4188, file: !4128, line: 83, baseType: !309, size: 32, offset: 96)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4188, file: !4128, line: 84, baseType: !309, size: 32, offset: 128)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4188, file: !4128, line: 85, baseType: !309, size: 32, offset: 160)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4188, file: !4128, line: 86, baseType: !309, size: 32, offset: 192)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4188, file: !4128, line: 88, baseType: !4146, size: 640, offset: 224)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4188, file: !4128, line: 89, baseType: !1173, size: 8, offset: 864)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4188, file: !4128, line: 90, baseType: !1173, size: 8, offset: 872)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4188, file: !4128, line: 91, baseType: !1173, size: 8, offset: 880)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4188, file: !4128, line: 92, baseType: !1173, size: 8, offset: 888)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4188, file: !4128, line: 93, baseType: !1173, size: 8, offset: 896)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4188, file: !4128, line: 94, baseType: !1173, size: 8, offset: 904)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4188, file: !4128, line: 95, baseType: !4205, size: 64, offset: 960)
!4205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 64)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4207, line: 11, size: 128, elements: !4208)
!4207 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4208 = !{!4209, !4210}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4206, file: !4207, line: 12, baseType: !285, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4206, file: !4207, line: 13, baseType: !4211, size: 64, offset: 64)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4213, line: 56, size: 1344, elements: !4214)
!4213 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4214 = !{!4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4212, file: !4213, line: 61, baseType: !281, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4212, file: !4213, line: 62, baseType: !281, size: 64, offset: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4212, file: !4213, line: 63, baseType: !281, size: 64, offset: 128)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4212, file: !4213, line: 64, baseType: !281, size: 64, offset: 192)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4212, file: !4213, line: 65, baseType: !281, size: 64, offset: 256)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4212, file: !4213, line: 66, baseType: !281, size: 64, offset: 320)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4212, file: !4213, line: 68, baseType: !281, size: 64, offset: 384)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4212, file: !4213, line: 69, baseType: !281, size: 64, offset: 448)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4212, file: !4213, line: 70, baseType: !281, size: 64, offset: 512)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4212, file: !4213, line: 71, baseType: !281, size: 64, offset: 576)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4212, file: !4213, line: 72, baseType: !281, size: 64, offset: 640)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4212, file: !4213, line: 73, baseType: !281, size: 64, offset: 704)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4212, file: !4213, line: 74, baseType: !281, size: 64, offset: 768)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4212, file: !4213, line: 75, baseType: !281, size: 64, offset: 832)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4212, file: !4213, line: 76, baseType: !281, size: 64, offset: 896)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4212, file: !4213, line: 81, baseType: !281, size: 64, offset: 960)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4212, file: !4213, line: 83, baseType: !281, size: 64, offset: 1024)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4212, file: !4213, line: 84, baseType: !281, size: 64, offset: 1088)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4212, file: !4213, line: 85, baseType: !281, size: 64, offset: 1152)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4212, file: !4213, line: 86, baseType: !281, size: 64, offset: 1216)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4212, file: !4213, line: 87, baseType: !281, size: 64, offset: 1280)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4188, file: !4128, line: 96, baseType: !309, size: 32, offset: 1024)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4133, file: !4128, line: 308, baseType: !4238, size: 4608, align: 512)
!4238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4128, line: 289, size: 4608, align: 512, elements: !4239)
!4239 = !{!4240, !4241, !4248}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4238, file: !4128, line: 290, baseType: !4151, size: 4096, align: 128)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4238, file: !4128, line: 291, baseType: !4242, size: 512, offset: 4096)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4128, line: 268, size: 512, elements: !4243)
!4243 = !{!4244, !4245, !4246}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4242, file: !4128, line: 269, baseType: !326, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4242, file: !4128, line: 270, baseType: !326, size: 64, offset: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4242, file: !4128, line: 271, baseType: !4247, size: 384, offset: 128)
!4247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 384, elements: !1448)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4238, file: !4128, line: 292, baseType: !4249, offset: 4608)
!4249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, elements: !1699)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4133, file: !4128, line: 309, baseType: !4251, size: 32768)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 32768, elements: !4252)
!4252 = !{!4253}
!4253 = !DISubrange(count: 4096)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1031, file: !336, line: 378, baseType: !4255, size: 64, offset: 64)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1027, file: !336, line: 384, baseType: !1322, size: 192, offset: 192)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !902, file: !336, line: 500, baseType: !290, offset: 6656)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !902, file: !336, line: 501, baseType: !4259, size: 64, offset: 6656)
!4259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4260, size: 64)
!4260 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !336, line: 387, flags: DIFlagFwdDecl)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !902, file: !336, line: 516, baseType: !1536, size: 64, offset: 6720)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !902, file: !336, line: 519, baseType: !742, size: 64, offset: 6784)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !902, file: !336, line: 521, baseType: !4264, size: 64, offset: 6848)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !336, line: 521, flags: DIFlagFwdDecl)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !902, file: !336, line: 545, baseType: !928, size: 32, offset: 6912)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !902, file: !336, line: 548, baseType: !314, size: 8, offset: 6944)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !902, file: !336, line: 550, baseType: !4269, offset: 6952)
!4269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4270, line: 142, elements: !304)
!4270 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !902, file: !336, line: 554, baseType: !1584, size: 256, offset: 6976)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !902, file: !336, line: 557, baseType: !309, size: 32, offset: 7232)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !899, file: !336, line: 565, baseType: !4274, offset: 7296)
!4274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, elements: !3057)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !882, file: !336, line: 333, baseType: !4276, size: 64, offset: 576)
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !921, line: 284, baseType: !4277)
!4277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !921, line: 284, size: 64, elements: !4278)
!4278 = !{!4279}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !4277, file: !921, line: 284, baseType: !4280, size: 64)
!4280 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !926, line: 19, baseType: !281)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !882, file: !336, line: 334, baseType: !281, size: 64, offset: 640)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !882, file: !336, line: 343, baseType: !4283, size: 256, offset: 704)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !882, file: !336, line: 340, size: 256, elements: !4284)
!4284 = !{!4285, !4286}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4283, file: !336, line: 341, baseType: !889, size: 192, align: 64)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !4283, file: !336, line: 342, baseType: !281, size: 64, offset: 192)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !882, file: !336, line: 351, baseType: !346, size: 128, offset: 960)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !882, file: !336, line: 353, baseType: !4289, size: 64, offset: 1088)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !336, line: 353, flags: DIFlagFwdDecl)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !882, file: !336, line: 356, baseType: !2239, size: 64, offset: 1152)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !882, file: !336, line: 359, baseType: !281, size: 64, offset: 1216)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !882, file: !336, line: 361, baseType: !742, size: 64, offset: 1280)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !882, file: !336, line: 362, baseType: !284, size: 64, offset: 1344)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !882, file: !336, line: 365, baseType: !674, size: 64, offset: 1408)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !882, file: !336, line: 373, baseType: !4297, offset: 1472)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !336, line: 296, elements: !304)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !735, file: !127, line: 1836, baseType: !281, size: 64, offset: 832)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !735, file: !127, line: 1837, baseType: !4300, size: 64, offset: 896)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!446, !356, !742}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !735, file: !127, line: 1838, baseType: !4304, size: 64, offset: 960)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!446, !742, !4307}
!4307 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !127, line: 1007, baseType: !284)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !735, file: !127, line: 1839, baseType: !4300, size: 64, offset: 1024)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !735, file: !127, line: 1840, baseType: !4310, size: 64, offset: 1088)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!446, !742, !530, !530, !446}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !735, file: !127, line: 1841, baseType: !4314, size: 64, offset: 1152)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!446, !446, !742, !446}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !735, file: !127, line: 1842, baseType: !4318, size: 64, offset: 1216)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!446, !742, !446, !4321}
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !127, line: 1062, size: 1664, elements: !4323)
!4323 = !{!4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4355, !4356, !4357, !4370, !4401}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4322, file: !127, line: 1063, baseType: !4321, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4322, file: !127, line: 1064, baseType: !346, size: 128, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4322, file: !127, line: 1065, baseType: !567, size: 128, offset: 192)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4322, file: !127, line: 1066, baseType: !346, size: 128, offset: 320)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4322, file: !127, line: 1069, baseType: !346, size: 128, offset: 448)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4322, file: !127, line: 1072, baseType: !4307, size: 64, offset: 576)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4322, file: !127, line: 1073, baseType: !7, size: 32, offset: 640)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4322, file: !127, line: 1074, baseType: !428, size: 8, offset: 672)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4322, file: !127, line: 1075, baseType: !7, size: 32, offset: 704)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4322, file: !127, line: 1076, baseType: !446, size: 32, offset: 736)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4322, file: !127, line: 1077, baseType: !1302, size: 128, offset: 768)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4322, file: !127, line: 1078, baseType: !742, size: 64, offset: 896)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4322, file: !127, line: 1079, baseType: !530, size: 64, offset: 960)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4322, file: !127, line: 1080, baseType: !530, size: 64, offset: 1024)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4322, file: !127, line: 1082, baseType: !4339, size: 64, offset: 1088)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !127, line: 1314, size: 320, elements: !4341)
!4341 = !{!4342, !4350, !4351, !4352, !4353, !4354}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4340, file: !127, line: 1315, baseType: !4343)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4344, line: 20, baseType: !4345)
!4344 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4344, line: 11, elements: !4346)
!4346 = !{!4347}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4345, file: !4344, line: 12, baseType: !4348)
!4348 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !302, line: 33, baseType: !4349)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !302, line: 31, elements: !304)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4340, file: !127, line: 1316, baseType: !446, size: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4340, file: !127, line: 1317, baseType: !446, size: 32, offset: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4340, file: !127, line: 1318, baseType: !4339, size: 64, offset: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4340, file: !127, line: 1319, baseType: !742, size: 64, offset: 128)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4340, file: !127, line: 1320, baseType: !722, size: 128, align: 64, offset: 192)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4322, file: !127, line: 1084, baseType: !281, size: 64, offset: 1152)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4322, file: !127, line: 1085, baseType: !281, size: 64, offset: 1216)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4322, file: !127, line: 1087, baseType: !4358, size: 64, offset: 1280)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4360)
!4360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !127, line: 1011, size: 128, elements: !4361)
!4361 = !{!4362, !4366}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4360, file: !127, line: 1012, baseType: !4363, size: 64)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !4321, !4321}
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4360, file: !127, line: 1013, baseType: !4367, size: 64, offset: 64)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !4321}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4322, file: !127, line: 1088, baseType: !4371, size: 64, offset: 1344)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4373)
!4373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !127, line: 1016, size: 512, elements: !4374)
!4374 = !{!4375, !4379, !4383, !4384, !4388, !4392, !4396, !4400}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4373, file: !127, line: 1017, baseType: !4376, size: 64)
!4376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4377, size: 64)
!4377 = !DISubroutineType(types: !4378)
!4378 = !{!4307, !4307}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4373, file: !127, line: 1018, baseType: !4380, size: 64, offset: 64)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{null, !4307}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4373, file: !127, line: 1019, baseType: !4367, size: 64, offset: 128)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4373, file: !127, line: 1020, baseType: !4385, size: 64, offset: 192)
!4385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4386, size: 64)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{!446, !4321, !446}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4373, file: !127, line: 1021, baseType: !4389, size: 64, offset: 256)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!314, !4321}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4373, file: !127, line: 1022, baseType: !4393, size: 64, offset: 320)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!446, !4321, !446, !349}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4373, file: !127, line: 1023, baseType: !4397, size: 64, offset: 384)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{null, !4321, !3809}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4373, file: !127, line: 1024, baseType: !4389, size: 64, offset: 448)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4322, file: !127, line: 1097, baseType: !4402, size: 256, offset: 1408)
!4402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4322, file: !127, line: 1089, size: 256, elements: !4403)
!4403 = !{!4404, !4413, !4419}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4402, file: !127, line: 1090, baseType: !4405, size: 256)
!4405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4406, line: 10, size: 256, elements: !4407)
!4406 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4407 = !{!4408, !4409, !4412}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4405, file: !4406, line: 11, baseType: !309, size: 32)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4405, file: !4406, line: 12, baseType: !4410, size: 64, offset: 64)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4406, line: 5, flags: DIFlagFwdDecl)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4405, file: !4406, line: 13, baseType: !346, size: 128, offset: 128)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4402, file: !127, line: 1091, baseType: !4414, size: 64)
!4414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4406, line: 17, size: 64, elements: !4415)
!4415 = !{!4416}
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4414, file: !4406, line: 18, baseType: !4417, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4406, line: 16, flags: DIFlagFwdDecl)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4402, file: !127, line: 1096, baseType: !4420, size: 192)
!4420 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4402, file: !127, line: 1092, size: 192, elements: !4421)
!4421 = !{!4422, !4423, !4424}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4420, file: !127, line: 1093, baseType: !346, size: 128)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4420, file: !127, line: 1094, baseType: !446, size: 32, offset: 128)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4420, file: !127, line: 1095, baseType: !7, size: 32, offset: 160)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !735, file: !127, line: 1843, baseType: !4426, size: 64, offset: 1280)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!747, !742, !334, !446, !661, !693, !446}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !735, file: !127, line: 1844, baseType: !911, size: 64, offset: 1344)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !735, file: !127, line: 1845, baseType: !4431, size: 64, offset: 1408)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = !DISubroutineType(types: !4433)
!4433 = !{!446, !446}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !735, file: !127, line: 1846, baseType: !4318, size: 64, offset: 1472)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !735, file: !127, line: 1847, baseType: !4436, size: 64, offset: 1536)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!747, !833, !742, !693, !661, !7}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !735, file: !127, line: 1848, baseType: !4440, size: 64, offset: 1600)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!747, !742, !693, !833, !661, !7}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !735, file: !127, line: 1849, baseType: !4444, size: 64, offset: 1664)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!446, !742, !285, !4447, !3809}
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !735, file: !127, line: 1850, baseType: !4449, size: 64, offset: 1728)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!285, !742, !446, !530, !530}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !735, file: !127, line: 1852, baseType: !4453, size: 64, offset: 1792)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DISubroutineType(types: !4455)
!4455 = !{null, !655, !742}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !735, file: !127, line: 1856, baseType: !4457, size: 64, offset: 1856)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{!747, !742, !530, !742, !530, !661, !7}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !735, file: !127, line: 1858, baseType: !4461, size: 64, offset: 1920)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{!530, !742, !530, !742, !530, !530, !7}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !735, file: !127, line: 1861, baseType: !4310, size: 64, offset: 1984)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !710, file: !127, line: 929, baseType: !290, offset: 384)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !710, file: !127, line: 930, baseType: !126, size: 32, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !710, file: !127, line: 931, baseType: !674, size: 64, offset: 448)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !710, file: !127, line: 932, baseType: !7, size: 32, offset: 512)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !710, file: !127, line: 933, baseType: !3266, size: 32, offset: 544)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !710, file: !127, line: 934, baseType: !670, size: 192, offset: 576)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !710, file: !127, line: 935, baseType: !530, size: 64, offset: 768)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !710, file: !127, line: 936, baseType: !4473, size: 192, offset: 832)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !127, line: 885, size: 192, elements: !4474)
!4474 = !{!4475, !4476, !4477, !4478, !4479, !4480}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4473, file: !127, line: 886, baseType: !4343)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4473, file: !127, line: 887, baseType: !1292, size: 64)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4473, file: !127, line: 888, baseType: !135, size: 32, offset: 64)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4473, file: !127, line: 889, baseType: !364, size: 32, offset: 96)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4473, file: !127, line: 889, baseType: !364, size: 32, offset: 128)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4473, file: !127, line: 890, baseType: !446, size: 32, offset: 160)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !710, file: !127, line: 937, baseType: !1367, size: 64, offset: 1024)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !710, file: !127, line: 938, baseType: !4483, size: 256, offset: 1088)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !127, line: 896, size: 256, elements: !4484)
!4484 = !{!4485, !4486, !4487, !4488, !4489, !4490}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4483, file: !127, line: 897, baseType: !281, size: 64)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4483, file: !127, line: 898, baseType: !7, size: 32, offset: 64)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4483, file: !127, line: 899, baseType: !7, size: 32, offset: 96)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4483, file: !127, line: 902, baseType: !7, size: 32, offset: 128)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4483, file: !127, line: 903, baseType: !7, size: 32, offset: 160)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4483, file: !127, line: 904, baseType: !530, size: 64, offset: 192)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !710, file: !127, line: 940, baseType: !326, size: 64, offset: 1344)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !710, file: !127, line: 945, baseType: !284, size: 64, offset: 1408)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !710, file: !127, line: 949, baseType: !346, size: 128, offset: 1472)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !710, file: !127, line: 950, baseType: !346, size: 128, offset: 1600)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !710, file: !127, line: 952, baseType: !352, size: 64, offset: 1728)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !710, file: !127, line: 953, baseType: !4497, size: 32, offset: 1792)
!4497 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !4498, line: 8, baseType: !309)
!4498 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !710, file: !127, line: 954, baseType: !4497, size: 32, offset: 1824)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !656, file: !657, line: 28, baseType: !284, size: 64, offset: 832)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !587, file: !127, line: 1955, baseType: !652, size: 64, offset: 1088)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !587, file: !127, line: 1956, baseType: !652, size: 64, offset: 1152)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !587, file: !127, line: 1957, baseType: !652, size: 64, offset: 1216)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !587, file: !127, line: 1963, baseType: !4505, size: 64, offset: 1280)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = !DISubroutineType(types: !4507)
!4507 = !{!446, !520, !334, !282}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !587, file: !127, line: 1964, baseType: !4509, size: 64, offset: 1344)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!285, !520, !4512}
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4514, line: 12, size: 256, elements: !4515)
!4514 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4515 = !{!4516, !4517, !4518, !4519, !4520}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4513, file: !4514, line: 13, baseType: !282, size: 32)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4513, file: !4514, line: 16, baseType: !446, size: 32, offset: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4513, file: !4514, line: 23, baseType: !281, size: 64, offset: 64)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4513, file: !4514, line: 30, baseType: !281, size: 64, offset: 128)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4513, file: !4514, line: 33, baseType: !4521, size: 64, offset: 192)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !336, line: 27, flags: DIFlagFwdDecl)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !587, file: !127, line: 1966, baseType: !4509, size: 64, offset: 1408)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !521, file: !127, line: 1424, baseType: !4525, size: 64, offset: 448)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4527)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !144, line: 322, size: 704, elements: !4528)
!4528 = !{!4529, !4575, !4579, !4583, !4584, !4585, !4586, !4587, !4592, !4597, !4601}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4527, file: !144, line: 323, baseType: !4530, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{!446, !4533}
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 64)
!4534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !144, line: 294, size: 1600, elements: !4535)
!4535 = !{!4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4560, !4561, !4562}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4534, file: !144, line: 295, baseType: !567, size: 128)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4534, file: !144, line: 296, baseType: !346, size: 128, offset: 128)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4534, file: !144, line: 297, baseType: !346, size: 128, offset: 256)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4534, file: !144, line: 298, baseType: !346, size: 128, offset: 384)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4534, file: !144, line: 299, baseType: !670, size: 192, offset: 512)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4534, file: !144, line: 300, baseType: !290, offset: 704)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4534, file: !144, line: 301, baseType: !928, size: 32, offset: 704)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4534, file: !144, line: 302, baseType: !520, size: 64, offset: 768)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4534, file: !144, line: 303, baseType: !4545, size: 64, offset: 832)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !144, line: 68, size: 64, elements: !4546)
!4546 = !{!4547, !4559}
!4547 = !DIDerivedType(tag: DW_TAG_member, scope: !4545, file: !144, line: 69, baseType: !4548, size: 32)
!4548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4545, file: !144, line: 69, size: 32, elements: !4549)
!4549 = !{!4550, !4551, !4552}
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4548, file: !144, line: 70, baseType: !364, size: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4548, file: !144, line: 71, baseType: !373, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4548, file: !144, line: 72, baseType: !4553, size: 32)
!4553 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4554, line: 24, baseType: !4555)
!4554 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4554, line: 22, size: 32, elements: !4556)
!4556 = !{!4557}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4555, file: !4554, line: 23, baseType: !4558, size: 32)
!4558 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4554, line: 20, baseType: !370)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4545, file: !144, line: 74, baseType: !143, size: 32, offset: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4534, file: !144, line: 304, baseType: !530, size: 64, offset: 896)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4534, file: !144, line: 305, baseType: !281, size: 64, offset: 960)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4534, file: !144, line: 306, baseType: !4563, size: 576, offset: 1024)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !144, line: 205, size: 576, elements: !4564)
!4564 = !{!4565, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4563, file: !144, line: 206, baseType: !4566, size: 64)
!4566 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !144, line: 66, baseType: !532)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4563, file: !144, line: 207, baseType: !4566, size: 64, offset: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4563, file: !144, line: 208, baseType: !4566, size: 64, offset: 128)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4563, file: !144, line: 209, baseType: !4566, size: 64, offset: 192)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4563, file: !144, line: 210, baseType: !4566, size: 64, offset: 256)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4563, file: !144, line: 211, baseType: !4566, size: 64, offset: 320)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4563, file: !144, line: 212, baseType: !4566, size: 64, offset: 384)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4563, file: !144, line: 213, baseType: !1419, size: 64, offset: 448)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4563, file: !144, line: 214, baseType: !1419, size: 64, offset: 512)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4527, file: !144, line: 324, baseType: !4576, size: 64, offset: 64)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64)
!4577 = !DISubroutineType(types: !4578)
!4578 = !{!4533, !520, !446}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4527, file: !144, line: 325, baseType: !4580, size: 64, offset: 128)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{null, !4533}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4527, file: !144, line: 326, baseType: !4530, size: 64, offset: 192)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4527, file: !144, line: 327, baseType: !4530, size: 64, offset: 256)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4527, file: !144, line: 328, baseType: !4530, size: 64, offset: 320)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4527, file: !144, line: 329, baseType: !629, size: 64, offset: 384)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4527, file: !144, line: 332, baseType: !4588, size: 64, offset: 448)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!4591, !356}
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4527, file: !144, line: 333, baseType: !4593, size: 64, offset: 512)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!446, !356, !4596}
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4527, file: !144, line: 335, baseType: !4598, size: 64, offset: 576)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!446, !356, !4591}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4527, file: !144, line: 337, baseType: !4602, size: 64, offset: 640)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!446, !520, !4605}
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !521, file: !127, line: 1425, baseType: !4607, size: 64, offset: 512)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4609)
!4609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !144, line: 428, size: 704, elements: !4610)
!4610 = !{!4611, !4615, !4616, !4620, !4621, !4622, !4637, !4660, !4664, !4665, !4688}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4609, file: !144, line: 429, baseType: !4612, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = !DISubroutineType(types: !4614)
!4614 = !{!446, !520, !446, !446, !511}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4609, file: !144, line: 430, baseType: !629, size: 64, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4609, file: !144, line: 431, baseType: !4617, size: 64, offset: 128)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{!446, !520, !7}
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4609, file: !144, line: 432, baseType: !4617, size: 64, offset: 192)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4609, file: !144, line: 433, baseType: !629, size: 64, offset: 256)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4609, file: !144, line: 434, baseType: !4623, size: 64, offset: 320)
!4623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4624, size: 64)
!4624 = !DISubroutineType(types: !4625)
!4625 = !{!446, !520, !446, !4626}
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4627, size: 64)
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !144, line: 415, size: 256, elements: !4628)
!4628 = !{!4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4627, file: !144, line: 416, baseType: !446, size: 32)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4627, file: !144, line: 417, baseType: !7, size: 32, offset: 32)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4627, file: !144, line: 418, baseType: !7, size: 32, offset: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4627, file: !144, line: 420, baseType: !7, size: 32, offset: 96)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4627, file: !144, line: 421, baseType: !7, size: 32, offset: 128)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4627, file: !144, line: 422, baseType: !7, size: 32, offset: 160)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4627, file: !144, line: 423, baseType: !7, size: 32, offset: 192)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4627, file: !144, line: 424, baseType: !7, size: 32, offset: 224)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4609, file: !144, line: 435, baseType: !4638, size: 64, offset: 384)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!446, !520, !4545, !4641}
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !144, line: 343, size: 960, elements: !4643)
!4643 = !{!4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4642, file: !144, line: 344, baseType: !446, size: 32)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4642, file: !144, line: 345, baseType: !326, size: 64, offset: 64)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4642, file: !144, line: 346, baseType: !326, size: 64, offset: 128)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4642, file: !144, line: 347, baseType: !326, size: 64, offset: 192)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4642, file: !144, line: 348, baseType: !326, size: 64, offset: 256)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4642, file: !144, line: 349, baseType: !326, size: 64, offset: 320)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4642, file: !144, line: 350, baseType: !326, size: 64, offset: 384)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4642, file: !144, line: 351, baseType: !680, size: 64, offset: 448)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4642, file: !144, line: 353, baseType: !680, size: 64, offset: 512)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4642, file: !144, line: 354, baseType: !446, size: 32, offset: 576)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4642, file: !144, line: 355, baseType: !446, size: 32, offset: 608)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4642, file: !144, line: 356, baseType: !326, size: 64, offset: 640)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4642, file: !144, line: 357, baseType: !326, size: 64, offset: 704)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4642, file: !144, line: 358, baseType: !326, size: 64, offset: 768)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4642, file: !144, line: 359, baseType: !680, size: 64, offset: 832)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4642, file: !144, line: 360, baseType: !446, size: 32, offset: 896)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4609, file: !144, line: 436, baseType: !4661, size: 64, offset: 448)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!446, !520, !4605, !4641}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4609, file: !144, line: 438, baseType: !4638, size: 64, offset: 512)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4609, file: !144, line: 439, baseType: !4666, size: 64, offset: 576)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DISubroutineType(types: !4668)
!4668 = !{!446, !520, !4669}
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !144, line: 409, size: 1408, elements: !4671)
!4671 = !{!4672, !4673}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4670, file: !144, line: 410, baseType: !7, size: 32)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4670, file: !144, line: 411, baseType: !4674, size: 1344, offset: 64)
!4674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4675, size: 1344, elements: !579)
!4675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !144, line: 395, size: 448, elements: !4676)
!4676 = !{!4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4687}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4675, file: !144, line: 396, baseType: !7, size: 32)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4675, file: !144, line: 397, baseType: !7, size: 32, offset: 32)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4675, file: !144, line: 399, baseType: !7, size: 32, offset: 64)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4675, file: !144, line: 400, baseType: !7, size: 32, offset: 96)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4675, file: !144, line: 401, baseType: !7, size: 32, offset: 128)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4675, file: !144, line: 402, baseType: !7, size: 32, offset: 160)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4675, file: !144, line: 403, baseType: !7, size: 32, offset: 192)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4675, file: !144, line: 404, baseType: !328, size: 64, offset: 256)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4675, file: !144, line: 405, baseType: !4686, size: 64, offset: 320)
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !283, line: 126, baseType: !326)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4675, file: !144, line: 406, baseType: !4686, size: 64, offset: 384)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4609, file: !144, line: 440, baseType: !4617, size: 64, offset: 640)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !521, file: !127, line: 1426, baseType: !4690, size: 64, offset: 576)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4692)
!4692 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !127, line: 49, flags: DIFlagFwdDecl)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !521, file: !127, line: 1427, baseType: !281, size: 64, offset: 640)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !521, file: !127, line: 1428, baseType: !281, size: 64, offset: 704)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !521, file: !127, line: 1429, baseType: !281, size: 64, offset: 768)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !521, file: !127, line: 1430, baseType: !389, size: 64, offset: 832)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !521, file: !127, line: 1431, baseType: !939, size: 256, offset: 896)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !521, file: !127, line: 1432, baseType: !446, size: 32, offset: 1152)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !521, file: !127, line: 1433, baseType: !928, size: 32, offset: 1184)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !521, file: !127, line: 1437, baseType: !4701, size: 64, offset: 1216)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4704)
!4704 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !127, line: 1437, flags: DIFlagFwdDecl)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !521, file: !127, line: 1449, baseType: !4706, size: 64, offset: 1280)
!4706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !406, line: 34, size: 64, elements: !4707)
!4707 = !{!4708}
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4706, file: !406, line: 35, baseType: !409, size: 64)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !521, file: !127, line: 1450, baseType: !346, size: 128, offset: 1344)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !521, file: !127, line: 1451, baseType: !3178, size: 64, offset: 1472)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !521, file: !127, line: 1452, baseType: !3198, size: 64, offset: 1536)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !521, file: !127, line: 1453, baseType: !4713, size: 64, offset: 1600)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !127, line: 1453, flags: DIFlagFwdDecl)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !521, file: !127, line: 1454, baseType: !567, size: 128, offset: 1664)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !521, file: !127, line: 1455, baseType: !7, size: 32, offset: 1792)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !521, file: !127, line: 1456, baseType: !4718, size: 2432, offset: 1856)
!4718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !144, line: 518, size: 2432, elements: !4719)
!4719 = !{!4720, !4721, !4722, !4724, !4756}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4718, file: !144, line: 519, baseType: !7, size: 32)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4718, file: !144, line: 520, baseType: !939, size: 256, offset: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4718, file: !144, line: 521, baseType: !4723, size: 192, offset: 320)
!4723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !356, size: 192, elements: !579)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4718, file: !144, line: 522, baseType: !4725, size: 1728, offset: 512)
!4725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4726, size: 1728, elements: !579)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !144, line: 222, size: 576, elements: !4727)
!4727 = !{!4728, !4748, !4749, !4750, !4751, !4752, !4753, !4754, !4755}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4726, file: !144, line: 223, baseType: !4729, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4730, size: 64)
!4730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !144, line: 443, size: 256, elements: !4731)
!4731 = !{!4732, !4733, !4746, !4747}
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4730, file: !144, line: 444, baseType: !446, size: 32)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4730, file: !144, line: 445, baseType: !4734, size: 64, offset: 64)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4736)
!4736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !144, line: 310, size: 512, elements: !4737)
!4737 = !{!4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4736, file: !144, line: 311, baseType: !629, size: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4736, file: !144, line: 312, baseType: !629, size: 64, offset: 64)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4736, file: !144, line: 313, baseType: !629, size: 64, offset: 128)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4736, file: !144, line: 314, baseType: !629, size: 64, offset: 192)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4736, file: !144, line: 315, baseType: !4530, size: 64, offset: 256)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4736, file: !144, line: 316, baseType: !4530, size: 64, offset: 320)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4736, file: !144, line: 317, baseType: !4530, size: 64, offset: 384)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4736, file: !144, line: 318, baseType: !4602, size: 64, offset: 448)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4730, file: !144, line: 446, baseType: !558, size: 64, offset: 128)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4730, file: !144, line: 447, baseType: !4729, size: 64, offset: 192)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4726, file: !144, line: 224, baseType: !446, size: 32, offset: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4726, file: !144, line: 226, baseType: !346, size: 128, offset: 128)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4726, file: !144, line: 227, baseType: !281, size: 64, offset: 256)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4726, file: !144, line: 228, baseType: !7, size: 32, offset: 320)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4726, file: !144, line: 229, baseType: !7, size: 32, offset: 352)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4726, file: !144, line: 230, baseType: !4566, size: 64, offset: 384)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4726, file: !144, line: 231, baseType: !4566, size: 64, offset: 448)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4726, file: !144, line: 232, baseType: !284, size: 64, offset: 512)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4718, file: !144, line: 523, baseType: !4757, size: 192, offset: 2240)
!4757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4734, size: 192, elements: !579)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !521, file: !127, line: 1458, baseType: !4759, size: 2112, offset: 4288)
!4759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !127, line: 1410, size: 2112, elements: !4760)
!4760 = !{!4761, !4762, !4763}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4759, file: !127, line: 1411, baseType: !446, size: 32)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4759, file: !127, line: 1412, baseType: !1302, size: 128, offset: 64)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4759, file: !127, line: 1413, baseType: !4764, size: 1920, offset: 192)
!4764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4765, size: 1920, elements: !579)
!4765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4766, line: 12, size: 640, elements: !4767)
!4766 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4767 = !{!4768, !4776, !4777, !4782, !4783}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4765, file: !4766, line: 13, baseType: !4769, size: 320)
!4769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4770, line: 17, size: 320, elements: !4771)
!4770 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4771 = !{!4772, !4773, !4774, !4775}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4769, file: !4770, line: 18, baseType: !446, size: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4769, file: !4770, line: 19, baseType: !446, size: 32, offset: 32)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4769, file: !4770, line: 20, baseType: !1302, size: 128, offset: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4769, file: !4770, line: 22, baseType: !722, size: 128, align: 64, offset: 192)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4765, file: !4766, line: 14, baseType: !2803, size: 64, offset: 320)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4765, file: !4766, line: 15, baseType: !4778, size: 64, offset: 384)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4779, line: 16, size: 64, elements: !4780)
!4779 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4780 = !{!4781}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4778, file: !4779, line: 17, baseType: !1034, size: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4765, file: !4766, line: 16, baseType: !1302, size: 128, offset: 448)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4765, file: !4766, line: 17, baseType: !928, size: 32, offset: 576)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !521, file: !127, line: 1465, baseType: !284, size: 64, offset: 6400)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !521, file: !127, line: 1468, baseType: !309, size: 32, offset: 6464)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !521, file: !127, line: 1470, baseType: !1419, size: 64, offset: 6528)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !521, file: !127, line: 1471, baseType: !1419, size: 64, offset: 6592)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !521, file: !127, line: 1473, baseType: !311, size: 32, offset: 6656)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !521, file: !127, line: 1474, baseType: !4790, size: 64, offset: 6720)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !127, line: 603, flags: DIFlagFwdDecl)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !521, file: !127, line: 1477, baseType: !1945, size: 256, offset: 6784)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !521, file: !127, line: 1478, baseType: !4794, size: 128, offset: 7040)
!4794 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4795, line: 18, baseType: !4796)
!4795 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4795, line: 16, size: 128, elements: !4797)
!4797 = !{!4798}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4796, file: !4795, line: 17, baseType: !4799, size: 128)
!4799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 128, elements: !1711)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !521, file: !127, line: 1480, baseType: !7, size: 32, offset: 7168)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !521, file: !127, line: 1481, baseType: !3266, size: 32, offset: 7200)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !521, file: !127, line: 1487, baseType: !670, size: 192, offset: 7232)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !521, file: !127, line: 1493, baseType: !468, size: 64, offset: 7424)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !521, file: !127, line: 1495, baseType: !448, size: 64, offset: 7488)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !521, file: !127, line: 1500, baseType: !446, size: 32, offset: 7552)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !521, file: !127, line: 1502, baseType: !4807, size: 448, offset: 7616)
!4807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4514, line: 60, size: 448, elements: !4808)
!4808 = !{!4809, !4814, !4815, !4816, !4817, !4818, !4819}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4807, file: !4514, line: 61, baseType: !4810, size: 64)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!281, !4813, !4512}
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4807, file: !4514, line: 63, baseType: !4810, size: 64, offset: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4807, file: !4514, line: 66, baseType: !285, size: 64, offset: 128)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4807, file: !4514, line: 67, baseType: !446, size: 32, offset: 192)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4807, file: !4514, line: 68, baseType: !7, size: 32, offset: 224)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4807, file: !4514, line: 71, baseType: !346, size: 128, offset: 256)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4807, file: !4514, line: 77, baseType: !4820, size: 64, offset: 384)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !521, file: !127, line: 1505, baseType: !674, size: 64, offset: 8064)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !521, file: !127, line: 1508, baseType: !674, size: 64, offset: 8128)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !521, file: !127, line: 1511, baseType: !446, size: 32, offset: 8192)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !521, file: !127, line: 1514, baseType: !4497, size: 32, offset: 8224)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !521, file: !127, line: 1517, baseType: !3159, size: 64, offset: 8256)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !521, file: !127, line: 1518, baseType: !563, size: 64, offset: 8320)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !521, file: !127, line: 1525, baseType: !1536, size: 64, offset: 8384)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !521, file: !127, line: 1532, baseType: !4829, size: 64, offset: 8448)
!4829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4830, line: 52, size: 64, elements: !4831)
!4830 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4831 = !{!4832}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4829, file: !4830, line: 53, baseType: !4833, size: 64)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4830, line: 40, size: 256, elements: !4835)
!4835 = !{!4836, !4837, !4842}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4834, file: !4830, line: 42, baseType: !290)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4834, file: !4830, line: 44, baseType: !4838, size: 192)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4830, line: 28, size: 192, elements: !4839)
!4839 = !{!4840, !4841}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4838, file: !4830, line: 29, baseType: !346, size: 128)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4838, file: !4830, line: 31, baseType: !285, size: 64, offset: 128)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4834, file: !4830, line: 49, baseType: !285, size: 64, offset: 192)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !521, file: !127, line: 1533, baseType: !4829, size: 64, offset: 8512)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !521, file: !127, line: 1534, baseType: !722, size: 128, align: 64, offset: 8576)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !521, file: !127, line: 1535, baseType: !1584, size: 256, offset: 8704)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !521, file: !127, line: 1537, baseType: !670, size: 192, offset: 8960)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !521, file: !127, line: 1542, baseType: !446, size: 32, offset: 9152)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !521, file: !127, line: 1545, baseType: !290, offset: 9184)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !521, file: !127, line: 1546, baseType: !346, size: 128, offset: 9216)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !521, file: !127, line: 1548, baseType: !290, offset: 9344)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !521, file: !127, line: 1549, baseType: !346, size: 128, offset: 9344)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !390, file: !391, line: 104, baseType: !281, size: 64, offset: 896)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !390, file: !391, line: 105, baseType: !284, size: 64, offset: 960)
!4854 = !DIDerivedType(tag: DW_TAG_member, scope: !390, file: !391, line: 107, baseType: !4855, size: 128, offset: 1024)
!4855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !390, file: !391, line: 107, size: 128, elements: !4856)
!4856 = !{!4857, !4858}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4855, file: !391, line: 108, baseType: !346, size: 128)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4855, file: !391, line: 109, baseType: !4859, size: 64)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !390, file: !391, line: 111, baseType: !346, size: 128, offset: 1152)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !390, file: !391, line: 112, baseType: !346, size: 128, offset: 1280)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !390, file: !391, line: 120, baseType: !4863, size: 128, offset: 1408)
!4863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !390, file: !391, line: 116, size: 128, elements: !4864)
!4864 = !{!4865, !4866, !4867}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4863, file: !391, line: 117, baseType: !567, size: 128)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4863, file: !391, line: 118, baseType: !405, size: 128)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4863, file: !391, line: 119, baseType: !722, size: 128, align: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !383, file: !127, line: 1866, baseType: !4869, size: 64, offset: 64)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DISubroutineType(types: !4871)
!4871 = !{!468, !389, !356, !4872}
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !4874, line: 10, size: 128, elements: !4875)
!4874 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!4875 = !{!4876, !4877}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4873, file: !4874, line: 11, baseType: !2129, size: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4873, file: !4874, line: 12, baseType: !284, size: 64, offset: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !383, file: !127, line: 1867, baseType: !4879, size: 64, offset: 128)
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4880, size: 64)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!446, !356, !446}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !383, file: !127, line: 1868, baseType: !4883, size: 64, offset: 192)
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 64)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{!4886, !356, !446}
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !127, line: 581, flags: DIFlagFwdDecl)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !383, file: !127, line: 1870, baseType: !4889, size: 64, offset: 256)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!446, !389, !494, !446}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !383, file: !127, line: 1872, baseType: !4893, size: 64, offset: 320)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!446, !356, !389, !360, !314}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !383, file: !127, line: 1873, baseType: !4897, size: 64, offset: 384)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!446, !389, !356, !389}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !383, file: !127, line: 1874, baseType: !4901, size: 64, offset: 448)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!446, !356, !389}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !383, file: !127, line: 1875, baseType: !4905, size: 64, offset: 512)
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{!446, !356, !389, !468}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !383, file: !127, line: 1876, baseType: !4909, size: 64, offset: 576)
!4909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4910, size: 64)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{!446, !356, !389, !360}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !383, file: !127, line: 1877, baseType: !4901, size: 64, offset: 640)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !383, file: !127, line: 1878, baseType: !4914, size: 64, offset: 704)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!446, !356, !389, !360, !525}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !383, file: !127, line: 1879, baseType: !4918, size: 64, offset: 768)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DISubroutineType(types: !4920)
!4920 = !{!446, !356, !389, !356, !389, !7}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !383, file: !127, line: 1881, baseType: !4922, size: 64, offset: 832)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{!446, !389, !4925}
!4925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4926, size: 64)
!4926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !127, line: 219, size: 640, elements: !4927)
!4927 = !{!4928, !4929, !4930, !4931, !4932, !4933, !4938, !4939, !4940}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !4926, file: !127, line: 220, baseType: !7, size: 32)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !4926, file: !127, line: 221, baseType: !360, size: 16, offset: 32)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !4926, file: !127, line: 222, baseType: !364, size: 32, offset: 64)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !4926, file: !127, line: 223, baseType: !373, size: 32, offset: 96)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !4926, file: !127, line: 224, baseType: !530, size: 64, offset: 128)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !4926, file: !127, line: 225, baseType: !4934, size: 128, offset: 192)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1420, line: 13, size: 128, elements: !4935)
!4935 = !{!4936, !4937}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4934, file: !1420, line: 14, baseType: !1419, size: 64)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4934, file: !1420, line: 15, baseType: !285, size: 64, offset: 64)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !4926, file: !127, line: 226, baseType: !4934, size: 128, offset: 320)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !4926, file: !127, line: 227, baseType: !4934, size: 128, offset: 448)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !4926, file: !127, line: 234, baseType: !742, size: 64, offset: 576)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !383, file: !127, line: 1882, baseType: !4942, size: 64, offset: 896)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = !DISubroutineType(types: !4944)
!4944 = !{!446, !511, !4945, !309, !7}
!4945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4946, size: 64)
!4946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !4947, line: 22, size: 1152, elements: !4948)
!4947 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!4948 = !{!4949, !4950, !4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966}
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !4946, file: !4947, line: 23, baseType: !309, size: 32)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4946, file: !4947, line: 24, baseType: !360, size: 16, offset: 32)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !4946, file: !4947, line: 25, baseType: !7, size: 32, offset: 64)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !4946, file: !4947, line: 26, baseType: !1427, size: 32, offset: 96)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !4946, file: !4947, line: 27, baseType: !326, size: 64, offset: 128)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !4946, file: !4947, line: 28, baseType: !326, size: 64, offset: 192)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4946, file: !4947, line: 37, baseType: !326, size: 64, offset: 256)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4946, file: !4947, line: 38, baseType: !525, size: 32, offset: 320)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !4946, file: !4947, line: 39, baseType: !525, size: 32, offset: 352)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4946, file: !4947, line: 40, baseType: !364, size: 32, offset: 384)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4946, file: !4947, line: 41, baseType: !373, size: 32, offset: 416)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4946, file: !4947, line: 42, baseType: !530, size: 64, offset: 448)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !4946, file: !4947, line: 43, baseType: !4934, size: 128, offset: 512)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !4946, file: !4947, line: 44, baseType: !4934, size: 128, offset: 640)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !4946, file: !4947, line: 45, baseType: !4934, size: 128, offset: 768)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !4946, file: !4947, line: 46, baseType: !4934, size: 128, offset: 896)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4946, file: !4947, line: 47, baseType: !326, size: 64, offset: 1024)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !4946, file: !4947, line: 48, baseType: !326, size: 64, offset: 1088)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !383, file: !127, line: 1883, baseType: !4968, size: 64, offset: 960)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!747, !389, !494, !661}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !383, file: !127, line: 1884, baseType: !4972, size: 64, offset: 1024)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!446, !356, !4975, !326, !326}
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !127, line: 50, flags: DIFlagFwdDecl)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !383, file: !127, line: 1886, baseType: !4978, size: 64, offset: 1088)
!4978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4979, size: 64)
!4979 = !DISubroutineType(types: !4980)
!4980 = !{!446, !356, !4981, !446}
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 64)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !383, file: !127, line: 1887, baseType: !4983, size: 64, offset: 1152)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!446, !356, !389, !742, !7, !360}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !383, file: !127, line: 1890, baseType: !4909, size: 64, offset: 1216)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !383, file: !127, line: 1891, baseType: !4988, size: 64, offset: 1280)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!446, !356, !4886, !446}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !357, file: !127, line: 623, baseType: !520, size: 64, offset: 192)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !357, file: !127, line: 624, baseType: !352, size: 64, offset: 256)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !357, file: !127, line: 631, baseType: !281, size: 64, offset: 320)
!4994 = !DIDerivedType(tag: DW_TAG_member, scope: !357, file: !127, line: 639, baseType: !4995, size: 32, offset: 384)
!4995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !357, file: !127, line: 639, size: 32, elements: !4996)
!4996 = !{!4997, !4998}
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4995, file: !127, line: 640, baseType: !3582, size: 32)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4995, file: !127, line: 641, baseType: !7, size: 32)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !357, file: !127, line: 643, baseType: !525, size: 32, offset: 416)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !357, file: !127, line: 644, baseType: !530, size: 64, offset: 448)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !357, file: !127, line: 645, baseType: !4934, size: 128, offset: 512)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !357, file: !127, line: 646, baseType: !4934, size: 128, offset: 640)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !357, file: !127, line: 647, baseType: !4934, size: 128, offset: 768)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !357, file: !127, line: 648, baseType: !290, offset: 896)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !357, file: !127, line: 649, baseType: !361, size: 16, offset: 896)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !357, file: !127, line: 650, baseType: !1173, size: 8, offset: 912)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !357, file: !127, line: 651, baseType: !1173, size: 8, offset: 920)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !357, file: !127, line: 652, baseType: !4686, size: 64, offset: 960)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !357, file: !127, line: 659, baseType: !281, size: 64, offset: 1024)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !357, file: !127, line: 660, baseType: !939, size: 256, offset: 1088)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !357, file: !127, line: 662, baseType: !281, size: 64, offset: 1344)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !357, file: !127, line: 663, baseType: !281, size: 64, offset: 1408)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !357, file: !127, line: 665, baseType: !567, size: 128, offset: 1472)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !357, file: !127, line: 666, baseType: !346, size: 128, offset: 1600)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !357, file: !127, line: 675, baseType: !346, size: 128, offset: 1728)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !357, file: !127, line: 676, baseType: !346, size: 128, offset: 1856)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !357, file: !127, line: 677, baseType: !346, size: 128, offset: 1984)
!5018 = !DIDerivedType(tag: DW_TAG_member, scope: !357, file: !127, line: 678, baseType: !5019, size: 128, offset: 2112)
!5019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !357, file: !127, line: 678, size: 128, elements: !5020)
!5020 = !{!5021, !5022}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !5019, file: !127, line: 679, baseType: !563, size: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !5019, file: !127, line: 680, baseType: !722, size: 128, align: 64)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !357, file: !127, line: 682, baseType: !676, size: 64, offset: 2240)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !357, file: !127, line: 683, baseType: !676, size: 64, offset: 2304)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !357, file: !127, line: 684, baseType: !928, size: 32, offset: 2368)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !357, file: !127, line: 685, baseType: !928, size: 32, offset: 2400)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !357, file: !127, line: 686, baseType: !928, size: 32, offset: 2432)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !357, file: !127, line: 688, baseType: !928, size: 32, offset: 2464)
!5029 = !DIDerivedType(tag: DW_TAG_member, scope: !357, file: !127, line: 690, baseType: !5030, size: 64, offset: 2496)
!5030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !357, file: !127, line: 690, size: 64, elements: !5031)
!5031 = !{!5032, !5033}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !5030, file: !127, line: 691, baseType: !733, size: 64)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !5030, file: !127, line: 692, baseType: !594, size: 64)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !357, file: !127, line: 694, baseType: !5035, size: 64, offset: 2560)
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 64)
!5036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !127, line: 1100, size: 384, elements: !5037)
!5037 = !{!5038, !5039, !5040, !5041}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !5036, file: !127, line: 1101, baseType: !290)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !5036, file: !127, line: 1102, baseType: !346, size: 128)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !5036, file: !127, line: 1103, baseType: !346, size: 128, offset: 128)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !5036, file: !127, line: 1104, baseType: !346, size: 128, offset: 256)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !357, file: !127, line: 695, baseType: !353, size: 1216, align: 64, offset: 2624)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !357, file: !127, line: 696, baseType: !346, size: 128, offset: 3840)
!5044 = !DIDerivedType(tag: DW_TAG_member, scope: !357, file: !127, line: 697, baseType: !5045, size: 64, offset: 3968)
!5045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !357, file: !127, line: 697, size: 64, elements: !5046)
!5046 = !{!5047, !5048, !5049, !5052, !5053}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5045, file: !127, line: 698, baseType: !833, size: 64)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5045, file: !127, line: 699, baseType: !3178, size: 64)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5045, file: !127, line: 700, baseType: !5050, size: 64)
!5050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5051, size: 64)
!5051 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !127, line: 700, flags: DIFlagFwdDecl)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5045, file: !127, line: 701, baseType: !494, size: 64)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5045, file: !127, line: 702, baseType: !7, size: 32)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !357, file: !127, line: 705, baseType: !311, size: 32, offset: 4032)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !357, file: !127, line: 708, baseType: !311, size: 32, offset: 4064)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !357, file: !127, line: 709, baseType: !4790, size: 64, offset: 4096)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !357, file: !127, line: 720, baseType: !284, size: 64, offset: 4160)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !353, file: !127, line: 453, baseType: !2171, size: 128, offset: 64)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !353, file: !127, line: 454, baseType: !282, size: 32, offset: 192)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !353, file: !127, line: 455, baseType: !928, size: 32, offset: 224)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !353, file: !127, line: 460, baseType: !1163, size: 128, offset: 256)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !353, file: !127, line: 461, baseType: !939, size: 256, offset: 384)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !353, file: !127, line: 462, baseType: !281, size: 64, offset: 640)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !353, file: !127, line: 463, baseType: !281, size: 64, offset: 704)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !353, file: !127, line: 464, baseType: !281, size: 64, offset: 768)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !353, file: !127, line: 465, baseType: !5067, size: 64, offset: 832)
!5067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5068, size: 64)
!5068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5069)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !127, line: 367, size: 1408, elements: !5070)
!5070 = !{!5071, !5075, !5079, !5083, !5087, !5091, !5103, !5107, !5111, !5115, !5119, !5123, !5127, !5128, !5132, !5138, !5139, !5140, !5144, !5148, !5152, !5209}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !5069, file: !127, line: 368, baseType: !5072, size: 64)
!5072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5073, size: 64)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!446, !334, !606}
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !5069, file: !127, line: 369, baseType: !5076, size: 64, offset: 64)
!5076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5077, size: 64)
!5077 = !DISubroutineType(types: !5078)
!5078 = !{!446, !742, !334}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !5069, file: !127, line: 372, baseType: !5080, size: 64, offset: 128)
!5080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5081, size: 64)
!5081 = !DISubroutineType(types: !5082)
!5082 = !{!446, !352, !606}
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !5069, file: !127, line: 375, baseType: !5084, size: 64, offset: 192)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!446, !334}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !5069, file: !127, line: 381, baseType: !5088, size: 64, offset: 256)
!5088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5089, size: 64)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{!446, !742, !352, !349, !7}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !5069, file: !127, line: 383, baseType: !5092, size: 64, offset: 320)
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{null, !5095}
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 64)
!5096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !780, line: 795, size: 256, elements: !5097)
!5097 = !{!5098, !5099, !5100, !5101, !5102}
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5096, file: !780, line: 796, baseType: !742, size: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !5096, file: !780, line: 797, baseType: !352, size: 64, offset: 64)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !5096, file: !780, line: 799, baseType: !281, size: 64, offset: 128)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !5096, file: !780, line: 800, baseType: !7, size: 32, offset: 192)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !5096, file: !780, line: 801, baseType: !7, size: 32, offset: 224)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !5069, file: !127, line: 385, baseType: !5104, size: 64, offset: 384)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!446, !742, !352, !530, !7, !7, !4070, !3809}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !5069, file: !127, line: 388, baseType: !5108, size: 64, offset: 448)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!446, !742, !352, !530, !7, !7, !334, !284}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !5069, file: !127, line: 393, baseType: !5112, size: 64, offset: 512)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!1959, !352, !1959}
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !5069, file: !127, line: 394, baseType: !5116, size: 64, offset: 576)
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{null, !334, !7, !7}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !5069, file: !127, line: 395, baseType: !5120, size: 64, offset: 640)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!446, !334, !282}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !5069, file: !127, line: 396, baseType: !5124, size: 64, offset: 704)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = !DISubroutineType(types: !5126)
!5126 = !{null, !334}
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !5069, file: !127, line: 397, baseType: !755, size: 64, offset: 768)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !5069, file: !127, line: 402, baseType: !5129, size: 64, offset: 832)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!446, !352, !334, !334, !149}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !5069, file: !127, line: 404, baseType: !5133, size: 64, offset: 896)
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!314, !334, !5136}
!5136 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !5137, line: 305, baseType: !7)
!5137 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !5069, file: !127, line: 405, baseType: !5124, size: 64, offset: 960)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !5069, file: !127, line: 406, baseType: !5084, size: 64, offset: 1024)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !5069, file: !127, line: 407, baseType: !5141, size: 64, offset: 1088)
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = !DISubroutineType(types: !5143)
!5143 = !{!446, !334, !281, !281}
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !5069, file: !127, line: 409, baseType: !5145, size: 64, offset: 1152)
!5145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5146, size: 64)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{null, !334, !2895, !2895}
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !5069, file: !127, line: 410, baseType: !5149, size: 64, offset: 1216)
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5150, size: 64)
!5150 = !DISubroutineType(types: !5151)
!5151 = !{!446, !352, !334}
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !5069, file: !127, line: 413, baseType: !5153, size: 64, offset: 1280)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5154, size: 64)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!446, !5156, !742, !5208}
!5156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!5157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !3912, line: 240, size: 1600, elements: !5158)
!5158 = !{!5159, !5160, !5161, !5168, !5170, !5171, !5173, !5180, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206}
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5157, file: !3912, line: 241, baseType: !281, size: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5157, file: !3912, line: 242, baseType: !1023, size: 16, offset: 64)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5157, file: !3912, line: 243, baseType: !5162, size: 320, offset: 128)
!5162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !5163, line: 83, size: 320, elements: !5164)
!5163 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!5164 = !{!5165, !5166, !5167}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5162, file: !5163, line: 84, baseType: !446, size: 32)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !5162, file: !5163, line: 85, baseType: !346, size: 128, offset: 64)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !5162, file: !5163, line: 86, baseType: !346, size: 128, offset: 192)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5157, file: !3912, line: 244, baseType: !5169, size: 8, offset: 448)
!5169 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5157, file: !3912, line: 245, baseType: !7, size: 32, offset: 480)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !5157, file: !3912, line: 246, baseType: !5172, size: 64, offset: 512)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !5157, file: !3912, line: 247, baseType: !5174, size: 64, offset: 576)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !3912, line: 208, size: 32, elements: !5176)
!5176 = !{!5177, !5178, !5179}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5175, file: !3912, line: 209, baseType: !290)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5175, file: !3912, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5175, file: !3912, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !5157, file: !3912, line: 248, baseType: !5181, size: 64, offset: 640)
!5181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !3912, line: 232, size: 64, elements: !5182)
!5182 = !{!5183, !5184}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5181, file: !3912, line: 233, baseType: !5175, size: 32)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5181, file: !3912, line: 234, baseType: !5175, size: 32, offset: 32)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !5157, file: !3912, line: 249, baseType: !7, size: 32, offset: 704)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !5157, file: !3912, line: 250, baseType: !7, size: 32, offset: 736)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5157, file: !3912, line: 251, baseType: !7, size: 32, offset: 768)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !5157, file: !3912, line: 252, baseType: !7, size: 32, offset: 800)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !5157, file: !3912, line: 253, baseType: !7, size: 32, offset: 832)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !5157, file: !3912, line: 254, baseType: !7, size: 32, offset: 864)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !5157, file: !3912, line: 255, baseType: !2803, size: 64, offset: 896)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !5157, file: !3912, line: 256, baseType: !5193, size: 64, offset: 960)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !3912, line: 227, size: 64, elements: !5195)
!5195 = !{!5196, !5197}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5194, file: !3912, line: 228, baseType: !5175, size: 32)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5194, file: !3912, line: 229, baseType: !7, size: 32, offset: 32)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !5157, file: !3912, line: 257, baseType: !906, size: 64, offset: 1024)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !5157, file: !3912, line: 258, baseType: !3178, size: 64, offset: 1088)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !5157, file: !3912, line: 259, baseType: !742, size: 64, offset: 1152)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !5157, file: !3912, line: 260, baseType: !7, size: 32, offset: 1216)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5157, file: !3912, line: 265, baseType: !290, offset: 1248)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !5157, file: !3912, line: 278, baseType: !290, offset: 1248)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !5157, file: !3912, line: 282, baseType: !1584, size: 256, offset: 1280)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !5157, file: !3912, line: 283, baseType: !5181, size: 64, offset: 1536)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !5157, file: !3912, line: 284, baseType: !5207, offset: 1600)
!5207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5162, elements: !3057)
!5208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !5069, file: !127, line: 415, baseType: !5210, size: 64, offset: 1344)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{null, !742}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !353, file: !127, line: 466, baseType: !281, size: 64, offset: 896)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !353, file: !127, line: 467, baseType: !4497, size: 32, offset: 960)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !353, file: !127, line: 468, baseType: !290, offset: 992)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !353, file: !127, line: 469, baseType: !346, size: 128, offset: 1024)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !353, file: !127, line: 470, baseType: !284, size: 64, offset: 1152)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !343, file: !336, line: 87, baseType: !281, size: 64, offset: 192)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !343, file: !336, line: 94, baseType: !281, size: 64, offset: 256)
!5220 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 96, baseType: !5221, size: 64)
!5221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 96, size: 64, elements: !5222)
!5222 = !{!5223}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !5221, file: !336, line: 101, baseType: !325, size: 64)
!5224 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 103, baseType: !5225, size: 320)
!5225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 103, size: 320, elements: !5226)
!5226 = !{!5227, !5237, !5238, !5239}
!5227 = !DIDerivedType(tag: DW_TAG_member, scope: !5225, file: !336, line: 104, baseType: !5228, size: 128)
!5228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5225, file: !336, line: 104, size: 128, elements: !5229)
!5229 = !{!5230, !5231}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !5228, file: !336, line: 105, baseType: !346, size: 128)
!5231 = !DIDerivedType(tag: DW_TAG_member, scope: !5228, file: !336, line: 106, baseType: !5232, size: 128)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5228, file: !336, line: 106, size: 128, elements: !5233)
!5233 = !{!5234, !5235, !5236}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5232, file: !336, line: 107, baseType: !334, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5232, file: !336, line: 109, baseType: !446, size: 32, offset: 64)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !5232, file: !336, line: 110, baseType: !446, size: 32, offset: 96)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !5225, file: !336, line: 117, baseType: !3404, size: 64, offset: 128)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !5225, file: !336, line: 119, baseType: !284, size: 64, offset: 192)
!5239 = !DIDerivedType(tag: DW_TAG_member, scope: !5225, file: !336, line: 120, baseType: !5240, size: 64, offset: 256)
!5240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5225, file: !336, line: 120, size: 64, elements: !5241)
!5241 = !{!5242, !5243, !5244}
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !5240, file: !336, line: 121, baseType: !284, size: 64)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !5240, file: !336, line: 122, baseType: !281, size: 64)
!5244 = !DIDerivedType(tag: DW_TAG_member, scope: !5240, file: !336, line: 123, baseType: !5245, size: 32)
!5245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5240, file: !336, line: 123, size: 32, elements: !5246)
!5246 = !{!5247, !5248, !5249}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !5245, file: !336, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !5245, file: !336, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !5245, file: !336, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!5250 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 130, baseType: !5251, size: 192)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 130, size: 192, elements: !5252)
!5252 = !{!5253, !5254, !5255, !5256, !5257}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !5251, file: !336, line: 131, baseType: !281, size: 64)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !5251, file: !336, line: 134, baseType: !428, size: 8, offset: 64)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !5251, file: !336, line: 135, baseType: !428, size: 8, offset: 72)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !5251, file: !336, line: 136, baseType: !928, size: 32, offset: 96)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !5251, file: !336, line: 137, baseType: !7, size: 32, offset: 128)
!5258 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 139, baseType: !5259, size: 256)
!5259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 139, size: 256, elements: !5260)
!5260 = !{!5261, !5262, !5263}
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !5259, file: !336, line: 140, baseType: !281, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !5259, file: !336, line: 141, baseType: !928, size: 32, offset: 64)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !5259, file: !336, line: 143, baseType: !346, size: 128, offset: 128)
!5264 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 145, baseType: !5265, size: 256)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 145, size: 256, elements: !5266)
!5266 = !{!5267, !5268, !5269, !5270, !5275}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !5265, file: !336, line: 146, baseType: !281, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !5265, file: !336, line: 147, baseType: !2296, size: 64, offset: 64)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !5265, file: !336, line: 148, baseType: !281, size: 64, offset: 128)
!5270 = !DIDerivedType(tag: DW_TAG_member, scope: !5265, file: !336, line: 149, baseType: !5271, size: 64, offset: 192)
!5271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5265, file: !336, line: 149, size: 64, elements: !5272)
!5272 = !{!5273, !5274}
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !5271, file: !336, line: 150, baseType: !898, size: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !5271, file: !336, line: 151, baseType: !928, size: 32)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !5265, file: !336, line: 156, baseType: !290, offset: 256)
!5276 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !336, line: 159, baseType: !5277, size: 128)
!5277 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !340, file: !336, line: 159, size: 128, elements: !5278)
!5278 = !{!5279, !5323}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !5277, file: !336, line: 161, baseType: !5280, size: 64)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !157, line: 110, size: 1152, elements: !5282)
!5282 = !{!5283, !5293, !5294, !5295, !5296, !5297, !5298, !5310, !5311, !5312}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !5281, file: !157, line: 111, baseType: !5284, size: 384)
!5284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !157, line: 19, size: 384, elements: !5285)
!5285 = !{!5286, !5288, !5289, !5290, !5291, !5292}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !5284, file: !157, line: 20, baseType: !5287, size: 64)
!5287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !281)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !5284, file: !157, line: 21, baseType: !5287, size: 64, offset: 64)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !5284, file: !157, line: 22, baseType: !5287, size: 64, offset: 128)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5284, file: !157, line: 23, baseType: !281, size: 64, offset: 192)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5284, file: !157, line: 24, baseType: !281, size: 64, offset: 256)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5284, file: !157, line: 25, baseType: !281, size: 64, offset: 320)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5281, file: !157, line: 112, baseType: !1980, size: 64, offset: 384)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !5281, file: !157, line: 113, baseType: !1966, size: 128, offset: 448)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5281, file: !157, line: 114, baseType: !1322, size: 192, offset: 576)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5281, file: !157, line: 115, baseType: !156, size: 32, offset: 768)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5281, file: !157, line: 116, baseType: !7, size: 32, offset: 800)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5281, file: !157, line: 117, baseType: !5299, size: 64, offset: 832)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5301)
!5301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !157, line: 67, size: 256, elements: !5302)
!5302 = !{!5303, !5304, !5308, !5309}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !5301, file: !157, line: 73, baseType: !5124, size: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !5301, file: !157, line: 78, baseType: !5305, size: 64, offset: 64)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{null, !5280}
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !5301, file: !157, line: 83, baseType: !5305, size: 64, offset: 128)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !5301, file: !157, line: 89, baseType: !2257, size: 64, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5281, file: !157, line: 118, baseType: !284, size: 64, offset: 896)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !5281, file: !157, line: 119, baseType: !446, size: 32, offset: 960)
!5312 = !DIDerivedType(tag: DW_TAG_member, scope: !5281, file: !157, line: 120, baseType: !5313, size: 128, offset: 1024)
!5313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5281, file: !157, line: 120, size: 128, elements: !5314)
!5314 = !{!5315, !5321}
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5313, file: !157, line: 121, baseType: !5316, size: 128)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !5317, line: 6, size: 128, elements: !5318)
!5317 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!5318 = !{!5319, !5320}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5316, file: !5317, line: 7, baseType: !326, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5316, file: !5317, line: 8, baseType: !326, size: 64, offset: 64)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !5313, file: !157, line: 122, baseType: !5322)
!5322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5316, elements: !1699)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !5277, file: !336, line: 162, baseType: !284, size: 64, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !340, file: !336, line: 176, baseType: !722, size: 128, align: 64)
!5325 = !DIDerivedType(tag: DW_TAG_member, scope: !335, file: !336, line: 179, baseType: !5326, size: 32, offset: 384)
!5326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !335, file: !336, line: 179, size: 32, elements: !5327)
!5327 = !{!5328, !5329, !5330, !5331}
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !5326, file: !336, line: 184, baseType: !928, size: 32)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !5326, file: !336, line: 192, baseType: !7, size: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5326, file: !336, line: 194, baseType: !7, size: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !5326, file: !336, line: 195, baseType: !446, size: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !335, file: !336, line: 199, baseType: !928, size: 32, offset: 416)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !331, file: !319, line: 500, baseType: !284, size: 64, offset: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !331, file: !319, line: 501, baseType: !661, size: 64, offset: 128)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "consumed", scope: !331, file: !319, line: 502, baseType: !661, size: 64, offset: 192)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "piter", scope: !331, file: !319, line: 503, baseType: !5337, size: 192, offset: 256)
!5337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_page_iter", file: !319, line: 372, size: 192, elements: !5338)
!5338 = !{!5339, !5340, !5341, !5342}
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !5337, file: !319, line: 373, baseType: !317, size: 64)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "sg_pgoffset", scope: !5337, file: !319, line: 374, baseType: !7, size: 32, offset: 64)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "__nents", scope: !5337, file: !319, line: 377, baseType: !7, size: 32, offset: 96)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "__pg_advance", scope: !5337, file: !319, line: 378, baseType: !446, size: 32, offset: 128)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "__offset", scope: !331, file: !319, line: 506, baseType: !7, size: 32, offset: 448)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "__remaining", scope: !331, file: !319, line: 507, baseType: !7, size: 32, offset: 480)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "__flags", scope: !331, file: !319, line: 508, baseType: !7, size: 32, offset: 512)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !287, file: !231, line: 166, baseType: !5347, size: 64, offset: 832)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_request", file: !5349, line: 144, size: 896, elements: !5350)
!5349 = !DIFile(filename: "./include/linux/mmc/core.h", directory: "/home/lizy2001/genbc/linux")
!5350 = !{!5351, !5382, !5383, !5384, !5385, !5386, !5387, !5391, !5392, !5817, !5818}
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "sbc", scope: !5348, file: !5349, line: 145, baseType: !5352, size: 64)
!5352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5353, size: 64)
!5353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_command", file: !5349, line: 26, size: 448, elements: !5354)
!5354 = !{!5355, !5356, !5357, !5359, !5360, !5361, !5362, !5363, !5381}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !5353, file: !5349, line: 27, baseType: !309, size: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5353, file: !5349, line: 28, baseType: !309, size: 32, offset: 32)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "resp", scope: !5353, file: !5349, line: 32, baseType: !5358, size: 128, offset: 64)
!5358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 128, elements: !979)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5353, file: !5349, line: 33, baseType: !7, size: 32, offset: 192)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5353, file: !5349, line: 92, baseType: !7, size: 32, offset: 224)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5353, file: !5349, line: 93, baseType: !446, size: 32, offset: 256)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "busy_timeout", scope: !5353, file: !5349, line: 109, baseType: !7, size: 32, offset: 288)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5353, file: !5349, line: 110, baseType: !5364, size: 64, offset: 320)
!5364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5365, size: 64)
!5365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_data", file: !5349, line: 114, size: 576, elements: !5366)
!5366 = !{!5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_ns", scope: !5365, file: !5349, line: 115, baseType: !7, size: 32)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_clks", scope: !5365, file: !5349, line: 116, baseType: !7, size: 32, offset: 32)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "blksz", scope: !5365, file: !5349, line: 117, baseType: !7, size: 32, offset: 64)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !5365, file: !5349, line: 118, baseType: !7, size: 32, offset: 96)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "blk_addr", scope: !5365, file: !5349, line: 119, baseType: !7, size: 32, offset: 128)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5365, file: !5349, line: 120, baseType: !446, size: 32, offset: 160)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5365, file: !5349, line: 121, baseType: !7, size: 32, offset: 192)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_xfered", scope: !5365, file: !5349, line: 132, baseType: !7, size: 32, offset: 224)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5365, file: !5349, line: 134, baseType: !5352, size: 64, offset: 256)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !5365, file: !5349, line: 135, baseType: !5347, size: 64, offset: 320)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !5365, file: !5349, line: 137, baseType: !7, size: 32, offset: 384)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !5365, file: !5349, line: 138, baseType: !446, size: 32, offset: 416)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !5365, file: !5349, line: 139, baseType: !317, size: 64, offset: 448)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "host_cookie", scope: !5365, file: !5349, line: 140, baseType: !1265, size: 32, offset: 512)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !5353, file: !5349, line: 111, baseType: !5347, size: 64, offset: 384)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5348, file: !5349, line: 146, baseType: !5352, size: 64, offset: 64)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5348, file: !5349, line: 147, baseType: !5364, size: 64, offset: 128)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5348, file: !5349, line: 148, baseType: !5352, size: 64, offset: 192)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5348, file: !5349, line: 150, baseType: !1322, size: 192, offset: 256)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_completion", scope: !5348, file: !5349, line: 151, baseType: !1322, size: 192, offset: 448)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5348, file: !5349, line: 152, baseType: !5388, size: 64, offset: 640)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !5347}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_notifier", scope: !5348, file: !5349, line: 158, baseType: !5388, size: 64, offset: 704)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5348, file: !5349, line: 159, baseType: !5393, size: 64, offset: 768)
!5393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5394, size: 64)
!5394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host", file: !5395, line: 275, size: 10752, elements: !5396)
!5395 = !DIFile(filename: "./include/linux/mmc/host.h", directory: "/home/lizy2001/genbc/linux")
!5396 = !{!5397, !5398, !5399, !5400, !5688, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5698, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5754, !5755, !5756, !5757, !5758, !5764, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5778, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5811, !5812, !5813, !5814, !5815, !5816}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5394, file: !5395, line: 276, baseType: !2369, size: 64)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5394, file: !5395, line: 277, baseType: !1987, size: 5568, offset: 64)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5394, file: !5395, line: 278, baseType: !446, size: 32, offset: 5632)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5394, file: !5395, line: 279, baseType: !5401, size: 64, offset: 5696)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5403)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host_ops", file: !5395, line: 82, size: 1408, elements: !5404)
!5404 = !{!5405, !5409, !5413, !5414, !5418, !5436, !5440, !5441, !5445, !5449, !5664, !5668, !5669, !5673, !5674, !5675, !5676, !5677, !5678, !5682, !5683, !5684}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "post_req", scope: !5403, file: !5395, line: 91, baseType: !5406, size: 64)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{null, !5393, !5347, !446}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "pre_req", scope: !5403, file: !5395, line: 93, baseType: !5410, size: 64, offset: 64)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{null, !5393, !5347}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5403, file: !5395, line: 94, baseType: !5410, size: 64, offset: 128)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "request_atomic", scope: !5403, file: !5395, line: 96, baseType: !5415, size: 64, offset: 192)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!446, !5393, !5347}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "set_ios", scope: !5403, file: !5395, line: 113, baseType: !5419, size: 64, offset: 256)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{null, !5393, !5422}
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ios", file: !5395, line: 19, size: 160, elements: !5424)
!5424 = !{!5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !5423, file: !5395, line: 20, baseType: !7, size: 32)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "vdd", scope: !5423, file: !5395, line: 21, baseType: !361, size: 16, offset: 32)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "power_delay_ms", scope: !5423, file: !5395, line: 22, baseType: !7, size: 32, offset: 64)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mode", scope: !5423, file: !5395, line: 26, baseType: !428, size: 8, offset: 96)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !5423, file: !5395, line: 31, baseType: !428, size: 8, offset: 104)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "power_mode", scope: !5423, file: !5395, line: 37, baseType: !428, size: 8, offset: 112)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !5423, file: !5395, line: 44, baseType: !428, size: 8, offset: 120)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "timing", scope: !5423, file: !5395, line: 50, baseType: !428, size: 8, offset: 128)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "signal_voltage", scope: !5423, file: !5395, line: 64, baseType: !428, size: 8, offset: 136)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "drv_type", scope: !5423, file: !5395, line: 70, baseType: !428, size: 8, offset: 144)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_strobe", scope: !5423, file: !5395, line: 77, baseType: !314, size: 8, offset: 152)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "get_ro", scope: !5403, file: !5395, line: 122, baseType: !5437, size: 64, offset: 320)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5438, size: 64)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!446, !5393}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "get_cd", scope: !5403, file: !5395, line: 131, baseType: !5437, size: 64, offset: 384)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "enable_sdio_irq", scope: !5403, file: !5395, line: 133, baseType: !5442, size: 64, offset: 448)
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 64)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{null, !5393, !446}
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "ack_sdio_irq", scope: !5403, file: !5395, line: 135, baseType: !5446, size: 64, offset: 512)
!5446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5447, size: 64)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{null, !5393}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "init_card", scope: !5403, file: !5395, line: 138, baseType: !5450, size: 64, offset: 576)
!5450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5451, size: 64)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{null, !5393, !5453}
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_card", file: !5455, line: 244, size: 12672, elements: !5456)
!5455 = !DIFile(filename: "./include/linux/mmc/card.h", directory: "/home/lizy2001/genbc/linux")
!5456 = !{!5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5476, !5477, !5489, !5509, !5590, !5599, !5605, !5613, !5614, !5615, !5626, !5633, !5639, !5640, !5641, !5642, !5643, !5644, !5647, !5648, !5649, !5650, !5651, !5661, !5662, !5663}
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5454, file: !5455, line: 245, baseType: !5393, size: 64)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5454, file: !5455, line: 246, baseType: !1987, size: 5568, offset: 64)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "ocr", scope: !5454, file: !5455, line: 247, baseType: !309, size: 32, offset: 5632)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "rca", scope: !5454, file: !5455, line: 248, baseType: !7, size: 32, offset: 5664)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5454, file: !5455, line: 249, baseType: !7, size: 32, offset: 5696)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5454, file: !5455, line: 254, baseType: !7, size: 32, offset: 5728)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !5454, file: !5455, line: 255, baseType: !7, size: 32, offset: 5760)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_max_rate", scope: !5454, file: !5455, line: 256, baseType: !7, size: 32, offset: 5792)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "reenable_cmdq", scope: !5454, file: !5455, line: 274, baseType: !314, size: 8, offset: 5824)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !5454, file: !5455, line: 276, baseType: !7, size: 32, offset: 5856)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "erase_shift", scope: !5454, file: !5455, line: 277, baseType: !7, size: 32, offset: 5888)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "pref_erase", scope: !5454, file: !5455, line: 278, baseType: !7, size: 32, offset: 5920)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "eg_boundary", scope: !5454, file: !5455, line: 279, baseType: !7, size: 32, offset: 5952)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "erase_arg", scope: !5454, file: !5455, line: 280, baseType: !7, size: 32, offset: 5984)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "erased_byte", scope: !5454, file: !5455, line: 281, baseType: !1173, size: 8, offset: 6016)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "raw_cid", scope: !5454, file: !5455, line: 283, baseType: !5358, size: 128, offset: 6048)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "raw_csd", scope: !5454, file: !5455, line: 284, baseType: !5358, size: 128, offset: 6176)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scr", scope: !5454, file: !5455, line: 285, baseType: !5475, size: 64, offset: 6304)
!5475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 64, elements: !1389)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ssr", scope: !5454, file: !5455, line: 286, baseType: !2786, size: 512, offset: 6368)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !5454, file: !5455, line: 287, baseType: !5478, size: 224, offset: 6880)
!5478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cid", file: !5455, line: 13, size: 224, elements: !5479)
!5479 = !{!5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !5478, file: !5455, line: 14, baseType: !7, size: 32)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "prod_name", scope: !5478, file: !5455, line: 15, baseType: !3981, size: 64, offset: 32)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !5478, file: !5455, line: 16, baseType: !428, size: 8, offset: 96)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !5478, file: !5455, line: 17, baseType: !7, size: 32, offset: 128)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !5478, file: !5455, line: 18, baseType: !361, size: 16, offset: 160)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !5478, file: !5455, line: 19, baseType: !361, size: 16, offset: 176)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "hwrev", scope: !5478, file: !5455, line: 20, baseType: !428, size: 8, offset: 192)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !5478, file: !5455, line: 21, baseType: !428, size: 8, offset: 200)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !5478, file: !5455, line: 22, baseType: !428, size: 8, offset: 208)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5454, file: !5455, line: 288, baseType: !5490, size: 352, offset: 7104)
!5490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_csd", file: !5455, line: 25, size: 352, elements: !5491)
!5491 = !{!5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508}
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "structure", scope: !5490, file: !5455, line: 26, baseType: !428, size: 8)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "mmca_vsn", scope: !5490, file: !5455, line: 27, baseType: !428, size: 8, offset: 8)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "cmdclass", scope: !5490, file: !5455, line: 28, baseType: !361, size: 16, offset: 16)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "taac_clks", scope: !5490, file: !5455, line: 29, baseType: !361, size: 16, offset: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "taac_ns", scope: !5490, file: !5455, line: 30, baseType: !7, size: 32, offset: 64)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "c_size", scope: !5490, file: !5455, line: 31, baseType: !7, size: 32, offset: 96)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "r2w_factor", scope: !5490, file: !5455, line: 32, baseType: !7, size: 32, offset: 128)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !5490, file: !5455, line: 33, baseType: !7, size: 32, offset: 160)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !5490, file: !5455, line: 34, baseType: !7, size: 32, offset: 192)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "read_blkbits", scope: !5490, file: !5455, line: 35, baseType: !7, size: 32, offset: 224)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "write_blkbits", scope: !5490, file: !5455, line: 36, baseType: !7, size: 32, offset: 256)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5490, file: !5455, line: 37, baseType: !7, size: 32, offset: 288)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "read_partial", scope: !5490, file: !5455, line: 38, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "read_misalign", scope: !5490, file: !5455, line: 39, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "write_partial", scope: !5490, file: !5455, line: 40, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "write_misalign", scope: !5490, file: !5455, line: 41, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_imp", scope: !5490, file: !5455, line: 42, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd", scope: !5454, file: !5455, line: 289, baseType: !5510, size: 1344, offset: 7488)
!5510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ext_csd", file: !5455, line: 45, size: 1344, elements: !5511)
!5511 = !{!5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5586, !5587, !5588, !5589}
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5510, file: !5455, line: 46, baseType: !1173, size: 8)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "erase_group_def", scope: !5510, file: !5455, line: 47, baseType: !1173, size: 8, offset: 8)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "sec_feature_support", scope: !5510, file: !5455, line: 48, baseType: !1173, size: 8, offset: 16)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "rel_sectors", scope: !5510, file: !5455, line: 49, baseType: !1173, size: 8, offset: 24)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "rel_param", scope: !5510, file: !5455, line: 50, baseType: !1173, size: 8, offset: 32)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_rpmb_supported", scope: !5510, file: !5455, line: 51, baseType: !314, size: 8, offset: 40)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "part_config", scope: !5510, file: !5455, line: 52, baseType: !1173, size: 8, offset: 48)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ctrl", scope: !5510, file: !5455, line: 53, baseType: !1173, size: 8, offset: 56)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "rst_n_function", scope: !5510, file: !5455, line: 54, baseType: !1173, size: 8, offset: 64)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_writes", scope: !5510, file: !5455, line: 55, baseType: !1173, size: 8, offset: 72)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_reads", scope: !5510, file: !5455, line: 56, baseType: !1173, size: 8, offset: 80)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "packed_event_en", scope: !5510, file: !5455, line: 57, baseType: !1173, size: 8, offset: 88)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "part_time", scope: !5510, file: !5455, line: 58, baseType: !7, size: 32, offset: 96)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "sa_timeout", scope: !5510, file: !5455, line: 59, baseType: !7, size: 32, offset: 128)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "generic_cmd6_time", scope: !5510, file: !5455, line: 60, baseType: !7, size: 32, offset: 160)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_longtime", scope: !5510, file: !5455, line: 61, baseType: !7, size: 32, offset: 192)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_notification", scope: !5510, file: !5455, line: 62, baseType: !1173, size: 8, offset: 224)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !5510, file: !5455, line: 63, baseType: !7, size: 32, offset: 256)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "hs200_max_dtr", scope: !5510, file: !5455, line: 64, baseType: !7, size: 32, offset: 288)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !5510, file: !5455, line: 69, baseType: !7, size: 32, offset: 320)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_size", scope: !5510, file: !5455, line: 70, baseType: !7, size: 32, offset: 352)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_timeout", scope: !5510, file: !5455, line: 71, baseType: !7, size: 32, offset: 384)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "sec_trim_mult", scope: !5510, file: !5455, line: 72, baseType: !7, size: 32, offset: 416)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "sec_erase_mult", scope: !5510, file: !5455, line: 73, baseType: !7, size: 32, offset: 448)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "trim_timeout", scope: !5510, file: !5455, line: 74, baseType: !7, size: 32, offset: 480)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "partition_setting_completed", scope: !5510, file: !5455, line: 75, baseType: !314, size: 8, offset: 512)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_offset", scope: !5510, file: !5455, line: 76, baseType: !328, size: 64, offset: 576)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_size", scope: !5510, file: !5455, line: 77, baseType: !7, size: 32, offset: 640)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !5510, file: !5455, line: 78, baseType: !7, size: 32, offset: 672)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_en", scope: !5510, file: !5455, line: 79, baseType: !314, size: 8, offset: 704)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "hpi", scope: !5510, file: !5455, line: 80, baseType: !314, size: 8, offset: 712)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_cmd", scope: !5510, file: !5455, line: 81, baseType: !7, size: 32, offset: 736)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "bkops", scope: !5510, file: !5455, line: 82, baseType: !314, size: 8, offset: 768)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "man_bkops_en", scope: !5510, file: !5455, line: 83, baseType: !314, size: 8, offset: 776)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bkops_en", scope: !5510, file: !5455, line: 84, baseType: !314, size: 8, offset: 784)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "data_sector_size", scope: !5510, file: !5455, line: 85, baseType: !7, size: 32, offset: 800)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "data_tag_unit_size", scope: !5510, file: !5455, line: 86, baseType: !7, size: 32, offset: 832)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lock", scope: !5510, file: !5455, line: 87, baseType: !7, size: 32, offset: 864)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lockable", scope: !5510, file: !5455, line: 88, baseType: !314, size: 8, offset: 896)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "ffu_capable", scope: !5510, file: !5455, line: 89, baseType: !314, size: 8, offset: 904)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_en", scope: !5510, file: !5455, line: 90, baseType: !314, size: 8, offset: 912)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_support", scope: !5510, file: !5455, line: 91, baseType: !314, size: 8, offset: 920)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_depth", scope: !5510, file: !5455, line: 92, baseType: !7, size: 32, offset: 928)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !5510, file: !5455, line: 94, baseType: !5556, size: 64, offset: 960)
!5556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 64, elements: !1147)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "raw_exception_status", scope: !5510, file: !5455, line: 95, baseType: !1173, size: 8, offset: 1024)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "raw_partition_support", scope: !5510, file: !5455, line: 96, baseType: !1173, size: 8, offset: 1032)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "raw_rpmb_size_mult", scope: !5510, file: !5455, line: 97, baseType: !1173, size: 8, offset: 1040)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erased_mem_count", scope: !5510, file: !5455, line: 98, baseType: !1173, size: 8, offset: 1048)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "strobe_support", scope: !5510, file: !5455, line: 99, baseType: !1173, size: 8, offset: 1056)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ext_csd_structure", scope: !5510, file: !5455, line: 100, baseType: !1173, size: 8, offset: 1064)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "raw_card_type", scope: !5510, file: !5455, line: 101, baseType: !1173, size: 8, offset: 1072)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "raw_driver_strength", scope: !5510, file: !5455, line: 102, baseType: !1173, size: 8, offset: 1080)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_int_time", scope: !5510, file: !5455, line: 103, baseType: !1173, size: 8, offset: 1088)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_195", scope: !5510, file: !5455, line: 104, baseType: !1173, size: 8, offset: 1096)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_195", scope: !5510, file: !5455, line: 105, baseType: !1173, size: 8, offset: 1104)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_360", scope: !5510, file: !5455, line: 106, baseType: !1173, size: 8, offset: 1112)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_360", scope: !5510, file: !5455, line: 107, baseType: !1173, size: 8, offset: 1120)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "raw_s_a_timeout", scope: !5510, file: !5455, line: 108, baseType: !1173, size: 8, offset: 1128)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_gap_size", scope: !5510, file: !5455, line: 109, baseType: !1173, size: 8, offset: 1136)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erase_timeout_mult", scope: !5510, file: !5455, line: 110, baseType: !1173, size: 8, offset: 1144)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_grp_size", scope: !5510, file: !5455, line: 111, baseType: !1173, size: 8, offset: 1152)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_trim_mult", scope: !5510, file: !5455, line: 112, baseType: !1173, size: 8, offset: 1160)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_erase_mult", scope: !5510, file: !5455, line: 113, baseType: !1173, size: 8, offset: 1168)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_feature_support", scope: !5510, file: !5455, line: 114, baseType: !1173, size: 8, offset: 1176)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "raw_trim_mult", scope: !5510, file: !5455, line: 115, baseType: !1173, size: 8, offset: 1184)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_195", scope: !5510, file: !5455, line: 116, baseType: !1173, size: 8, offset: 1192)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_360", scope: !5510, file: !5455, line: 117, baseType: !1173, size: 8, offset: 1200)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_195", scope: !5510, file: !5455, line: 118, baseType: !1173, size: 8, offset: 1208)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_360", scope: !5510, file: !5455, line: 119, baseType: !1173, size: 8, offset: 1216)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_200_360", scope: !5510, file: !5455, line: 120, baseType: !1173, size: 8, offset: 1224)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "raw_bkops_status", scope: !5510, file: !5455, line: 121, baseType: !1173, size: 8, offset: 1232)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sectors", scope: !5510, file: !5455, line: 122, baseType: !5585, size: 32, offset: 1240)
!5585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 32, elements: !979)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "pre_eol_info", scope: !5510, file: !5455, line: 123, baseType: !1173, size: 8, offset: 1272)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_a", scope: !5510, file: !5455, line: 124, baseType: !1173, size: 8, offset: 1280)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_b", scope: !5510, file: !5455, line: 125, baseType: !1173, size: 8, offset: 1288)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "feature_support", scope: !5510, file: !5455, line: 127, baseType: !7, size: 32, offset: 1312)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !5454, file: !5455, line: 290, baseType: !5591, size: 48, offset: 8832)
!5591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_scr", file: !5455, line: 131, size: 48, elements: !5592)
!5592 = !{!5593, !5594, !5595, !5596, !5597, !5598}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "sda_vsn", scope: !5591, file: !5455, line: 132, baseType: !428, size: 8)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec3", scope: !5591, file: !5455, line: 133, baseType: !428, size: 8, offset: 8)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec4", scope: !5591, file: !5455, line: 134, baseType: !428, size: 8, offset: 16)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "sda_specx", scope: !5591, file: !5455, line: 135, baseType: !428, size: 8, offset: 24)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "bus_widths", scope: !5591, file: !5455, line: 136, baseType: !428, size: 8, offset: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !5591, file: !5455, line: 139, baseType: !428, size: 8, offset: 40)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "ssr", scope: !5454, file: !5455, line: 291, baseType: !5600, size: 96, offset: 8896)
!5600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_ssr", file: !5455, line: 144, size: 96, elements: !5601)
!5601 = !{!5602, !5603, !5604}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "au", scope: !5600, file: !5455, line: 145, baseType: !7, size: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "erase_timeout", scope: !5600, file: !5455, line: 146, baseType: !7, size: 32, offset: 32)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "erase_offset", scope: !5600, file: !5455, line: 147, baseType: !7, size: 32, offset: 64)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "sw_caps", scope: !5454, file: !5455, line: 292, baseType: !5606, size: 160, offset: 8992)
!5606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_switch_caps", file: !5455, line: 150, size: 160, elements: !5607)
!5607 = !{!5608, !5609, !5610, !5611, !5612}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !5606, file: !5455, line: 151, baseType: !7, size: 32)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "uhs_max_dtr", scope: !5606, file: !5455, line: 152, baseType: !7, size: 32, offset: 32)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_bus_mode", scope: !5606, file: !5455, line: 160, baseType: !7, size: 32, offset: 64)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_drv_type", scope: !5606, file: !5455, line: 174, baseType: !7, size: 32, offset: 96)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_curr_limit", scope: !5606, file: !5455, line: 179, baseType: !7, size: 32, offset: 128)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs", scope: !5454, file: !5455, line: 294, baseType: !7, size: 32, offset: 9152)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs_probed", scope: !5454, file: !5455, line: 295, baseType: !928, size: 32, offset: 9184)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !5454, file: !5455, line: 296, baseType: !5616, size: 96, offset: 9216)
!5616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cccr", file: !5455, line: 192, size: 96, elements: !5617)
!5617 = !{!5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_vsn", scope: !5616, file: !5455, line: 193, baseType: !7, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "sd_vsn", scope: !5616, file: !5455, line: 194, baseType: !7, size: 32, offset: 32)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "multi_block", scope: !5616, file: !5455, line: 195, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed", scope: !5616, file: !5455, line: 196, baseType: !7, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "wide_bus", scope: !5616, file: !5455, line: 197, baseType: !7, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "high_power", scope: !5616, file: !5455, line: 198, baseType: !7, size: 1, offset: 67, flags: DIFlagBitField, extraData: i64 64)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "high_speed", scope: !5616, file: !5455, line: 199, baseType: !7, size: 1, offset: 68, flags: DIFlagBitField, extraData: i64 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "disable_cd", scope: !5616, file: !5455, line: 200, baseType: !7, size: 1, offset: 69, flags: DIFlagBitField, extraData: i64 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "cis", scope: !5454, file: !5455, line: 297, baseType: !5627, size: 96, offset: 9312)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cis", file: !5455, line: 203, size: 96, elements: !5628)
!5628 = !{!5629, !5630, !5631, !5632}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5627, file: !5455, line: 204, baseType: !361, size: 16)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5627, file: !5455, line: 205, baseType: !361, size: 16, offset: 16)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !5627, file: !5455, line: 206, baseType: !361, size: 16, offset: 32)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !5627, file: !5455, line: 207, baseType: !7, size: 32, offset: 64)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_func", scope: !5454, file: !5455, line: 298, baseType: !5634, size: 448, offset: 9408)
!5634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5635, size: 448, elements: !5637)
!5635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5636, size: 64)
!5636 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func", file: !5455, line: 211, flags: DIFlagFwdDecl)
!5637 = !{!5638}
!5638 = !DISubrange(count: 7)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_single_irq", scope: !5454, file: !5455, line: 299, baseType: !5635, size: 64, offset: 9856)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "major_rev", scope: !5454, file: !5455, line: 300, baseType: !1173, size: 8, offset: 9920)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "minor_rev", scope: !5454, file: !5455, line: 301, baseType: !1173, size: 8, offset: 9928)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "num_info", scope: !5454, file: !5455, line: 302, baseType: !7, size: 32, offset: 9952)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5454, file: !5455, line: 303, baseType: !2713, size: 64, offset: 9984)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "tuples", scope: !5454, file: !5455, line: 304, baseType: !5645, size: 64, offset: 10048)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func_tuple", file: !5455, line: 212, flags: DIFlagFwdDecl)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "sd_bus_speed", scope: !5454, file: !5455, line: 306, baseType: !7, size: 32, offset: 10112)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "mmc_avail_type", scope: !5454, file: !5455, line: 307, baseType: !7, size: 32, offset: 10144)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !5454, file: !5455, line: 308, baseType: !7, size: 32, offset: 10176)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !5454, file: !5455, line: 310, baseType: !389, size: 64, offset: 10240)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5454, file: !5455, line: 311, baseType: !5652, size: 2240, offset: 10304)
!5652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5653, size: 2240, elements: !5637)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_part", file: !5455, line: 229, size: 320, elements: !5654)
!5654 = !{!5655, !5656, !5657, !5659, !5660}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5653, file: !5455, line: 230, baseType: !326, size: 64)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "part_cfg", scope: !5653, file: !5455, line: 231, baseType: !7, size: 32, offset: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5653, file: !5455, line: 232, baseType: !5658, size: 160, offset: 96)
!5658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 160, elements: !4147)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "force_ro", scope: !5653, file: !5455, line: 233, baseType: !314, size: 8, offset: 256)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "area_type", scope: !5653, file: !5455, line: 234, baseType: !7, size: 32, offset: 288)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "nr_parts", scope: !5454, file: !5455, line: 312, baseType: !7, size: 32, offset: 12544)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "bouncesz", scope: !5454, file: !5455, line: 314, baseType: !7, size: 32, offset: 12576)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "complete_wq", scope: !5454, file: !5455, line: 315, baseType: !3159, size: 64, offset: 12608)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "start_signal_voltage_switch", scope: !5403, file: !5395, line: 140, baseType: !5665, size: 64, offset: 640)
!5665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5666, size: 64)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{!446, !5393, !5422}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "card_busy", scope: !5403, file: !5395, line: 143, baseType: !5437, size: 64, offset: 704)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "execute_tuning", scope: !5403, file: !5395, line: 146, baseType: !5670, size: 64, offset: 768)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!446, !5393, !309}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_hs400_tuning", scope: !5403, file: !5395, line: 149, baseType: !5665, size: 64, offset: 832)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_prepare_ddr", scope: !5403, file: !5395, line: 152, baseType: !5437, size: 64, offset: 896)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_downgrade", scope: !5403, file: !5395, line: 155, baseType: !5446, size: 64, offset: 960)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_complete", scope: !5403, file: !5395, line: 158, baseType: !5446, size: 64, offset: 1024)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_enhanced_strobe", scope: !5403, file: !5395, line: 161, baseType: !5419, size: 64, offset: 1088)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "select_drive_strength", scope: !5403, file: !5395, line: 163, baseType: !5679, size: 64, offset: 1152)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = !DISubroutineType(types: !5681)
!5681 = !{!446, !5453, !7, !446, !446, !649}
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !5403, file: !5395, line: 167, baseType: !5446, size: 64, offset: 1216)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "card_event", scope: !5403, file: !5395, line: 168, baseType: !5446, size: 64, offset: 1280)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "multi_io_quirk", scope: !5403, file: !5395, line: 174, baseType: !5685, size: 64, offset: 1344)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!446, !5453, !7, !446}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq", scope: !5394, file: !5395, line: 280, baseType: !5689, size: 64, offset: 5760)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq", file: !5395, line: 264, flags: DIFlagFwdDecl)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "f_min", scope: !5394, file: !5395, line: 281, baseType: !7, size: 32, offset: 5824)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "f_max", scope: !5394, file: !5395, line: 282, baseType: !7, size: 32, offset: 5856)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "f_init", scope: !5394, file: !5395, line: 283, baseType: !7, size: 32, offset: 5888)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail", scope: !5394, file: !5395, line: 284, baseType: !309, size: 32, offset: 5920)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sdio", scope: !5394, file: !5395, line: 285, baseType: !309, size: 32, offset: 5952)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sd", scope: !5394, file: !5395, line: 286, baseType: !309, size: 32, offset: 5984)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_mmc", scope: !5394, file: !5395, line: 287, baseType: !309, size: 32, offset: 6016)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "pm_notify", scope: !5394, file: !5395, line: 289, baseType: !5699, size: 192, offset: 6080)
!5699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !5700, line: 54, size: 192, elements: !5701)
!5700 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!5701 = !{!5702, !5708, !5709}
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !5699, file: !5700, line: 55, baseType: !5703, size: 64)
!5703 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !5700, line: 51, baseType: !5704)
!5704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5705, size: 64)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{!446, !5707, !281, !284}
!5707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5699, file: !5700, line: 56, baseType: !5707, size: 64, offset: 64)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !5699, file: !5700, line: 57, baseType: !446, size: 32, offset: 128)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !5394, file: !5395, line: 291, baseType: !2548, size: 64, offset: 6272)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_330", scope: !5394, file: !5395, line: 292, baseType: !309, size: 32, offset: 6336)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_300", scope: !5394, file: !5395, line: 293, baseType: !309, size: 32, offset: 6368)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_180", scope: !5394, file: !5395, line: 294, baseType: !309, size: 32, offset: 6400)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !5394, file: !5395, line: 314, baseType: !309, size: 32, offset: 6432)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "caps2", scope: !5394, file: !5395, line: 352, baseType: !309, size: 32, offset: 6464)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_drv_type", scope: !5394, file: !5395, line: 381, baseType: !446, size: 32, offset: 6496)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "pm_caps", scope: !5394, file: !5395, line: 383, baseType: !5718, size: 32, offset: 6528)
!5718 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmc_pm_flag_t", file: !5719, line: 22, baseType: !7)
!5719 = !DIFile(filename: "./include/linux/mmc/pm.h", directory: "/home/lizy2001/genbc/linux")
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "max_seg_size", scope: !5394, file: !5395, line: 386, baseType: !7, size: 32, offset: 6560)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "max_segs", scope: !5394, file: !5395, line: 387, baseType: !361, size: 16, offset: 6592)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5394, file: !5395, line: 388, baseType: !361, size: 16, offset: 6608)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "max_req_size", scope: !5394, file: !5395, line: 389, baseType: !7, size: 32, offset: 6624)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_size", scope: !5394, file: !5395, line: 390, baseType: !7, size: 32, offset: 6656)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_count", scope: !5394, file: !5395, line: 391, baseType: !7, size: 32, offset: 6688)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "max_busy_timeout", scope: !5394, file: !5395, line: 392, baseType: !7, size: 32, offset: 6720)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5394, file: !5395, line: 395, baseType: !290, offset: 6752)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "ios", scope: !5394, file: !5395, line: 397, baseType: !5423, size: 160, offset: 6752)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "use_spi_crc", scope: !5394, file: !5395, line: 400, baseType: !7, size: 1, offset: 6912, flags: DIFlagBitField, extraData: i64 6912)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !5394, file: !5395, line: 401, baseType: !7, size: 1, offset: 6913, flags: DIFlagBitField, extraData: i64 6912)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dead", scope: !5394, file: !5395, line: 402, baseType: !7, size: 1, offset: 6914, flags: DIFlagBitField, extraData: i64 6912)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "doing_init_tune", scope: !5394, file: !5395, line: 403, baseType: !7, size: 1, offset: 6915, flags: DIFlagBitField, extraData: i64 6912)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "can_retune", scope: !5394, file: !5395, line: 404, baseType: !7, size: 1, offset: 6916, flags: DIFlagBitField, extraData: i64 6912)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "doing_retune", scope: !5394, file: !5395, line: 405, baseType: !7, size: 1, offset: 6917, flags: DIFlagBitField, extraData: i64 6912)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "retune_now", scope: !5394, file: !5395, line: 406, baseType: !7, size: 1, offset: 6918, flags: DIFlagBitField, extraData: i64 6912)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "retune_paused", scope: !5394, file: !5395, line: 407, baseType: !7, size: 1, offset: 6919, flags: DIFlagBitField, extraData: i64 6912)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "use_blk_mq", scope: !5394, file: !5395, line: 408, baseType: !7, size: 1, offset: 6920, flags: DIFlagBitField, extraData: i64 6912)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "retune_crc_disable", scope: !5394, file: !5395, line: 409, baseType: !7, size: 1, offset: 6921, flags: DIFlagBitField, extraData: i64 6912)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma_map_merge", scope: !5394, file: !5395, line: 410, baseType: !7, size: 1, offset: 6922, flags: DIFlagBitField, extraData: i64 6912)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_disable", scope: !5394, file: !5395, line: 412, baseType: !446, size: 32, offset: 6944)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_entered", scope: !5394, file: !5395, line: 413, baseType: !446, size: 32, offset: 6976)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "need_retune", scope: !5394, file: !5395, line: 415, baseType: !446, size: 32, offset: 7008)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "hold_retune", scope: !5394, file: !5395, line: 416, baseType: !446, size: 32, offset: 7040)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "retune_period", scope: !5394, file: !5395, line: 417, baseType: !7, size: 32, offset: 7072)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "retune_timer", scope: !5394, file: !5395, line: 418, baseType: !2560, size: 320, offset: 7104)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_card_event", scope: !5394, file: !5395, line: 420, baseType: !314, size: 8, offset: 7424)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !5394, file: !5395, line: 422, baseType: !5453, size: 64, offset: 7488)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5394, file: !5395, line: 424, baseType: !1302, size: 128, offset: 7552)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "claimer", scope: !5394, file: !5395, line: 425, baseType: !5750, size: 64, offset: 7680)
!5750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5751, size: 64)
!5751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ctx", file: !5395, line: 271, size: 64, elements: !5752)
!5752 = !{!5753}
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5751, file: !5395, line: 272, baseType: !1034, size: 64)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "claim_cnt", scope: !5394, file: !5395, line: 426, baseType: !446, size: 32, offset: 7744)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "default_ctx", scope: !5394, file: !5395, line: 427, baseType: !5751, size: 64, offset: 7808)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !5394, file: !5395, line: 429, baseType: !3249, size: 704, offset: 7872)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "detect_change", scope: !5394, file: !5395, line: 430, baseType: !446, size: 32, offset: 8576)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5394, file: !5395, line: 431, baseType: !5759, size: 128, offset: 8640)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_slot", file: !5395, line: 243, size: 128, elements: !5760)
!5760 = !{!5761, !5762, !5763}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "cd_irq", scope: !5759, file: !5395, line: 244, baseType: !446, size: 32)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "cd_wake_enabled", scope: !5759, file: !5395, line: 245, baseType: !314, size: 8, offset: 32)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "handler_priv", scope: !5759, file: !5395, line: 246, baseType: !284, size: 64, offset: 64)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "bus_ops", scope: !5394, file: !5395, line: 433, baseType: !5765, size: 64, offset: 8768)
!5765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5766, size: 64)
!5766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5767)
!5767 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_bus_ops", file: !5395, line: 433, flags: DIFlagFwdDecl)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "bus_refs", scope: !5394, file: !5395, line: 434, baseType: !7, size: 32, offset: 8832)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irqs", scope: !5394, file: !5395, line: 436, baseType: !7, size: 32, offset: 8864)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread", scope: !5394, file: !5395, line: 437, baseType: !1034, size: 64, offset: 8896)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_work", scope: !5394, file: !5395, line: 438, baseType: !3249, size: 704, offset: 8960)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_pending", scope: !5394, file: !5395, line: 439, baseType: !314, size: 8, offset: 9664)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread_abort", scope: !5394, file: !5395, line: 440, baseType: !928, size: 32, offset: 9696)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "pm_flags", scope: !5394, file: !5395, line: 442, baseType: !5718, size: 32, offset: 9728)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !5394, file: !5395, line: 444, baseType: !5776, size: 64, offset: 9792)
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DICompositeType(tag: DW_TAG_structure_type, name: "led_trigger", file: !5395, line: 444, flags: DIFlagFwdDecl)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "supply", scope: !5394, file: !5395, line: 449, baseType: !5779, size: 128, offset: 9856)
!5779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_supply", file: !5395, line: 266, size: 128, elements: !5780)
!5780 = !{!5781, !5784}
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "vmmc", scope: !5779, file: !5395, line: 267, baseType: !5782, size: 64)
!5782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5783, size: 64)
!5783 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !5395, line: 263, flags: DIFlagFwdDecl)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "vqmmc", scope: !5779, file: !5395, line: 268, baseType: !5782, size: 64, offset: 64)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !5394, file: !5395, line: 451, baseType: !389, size: 64, offset: 9984)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "ongoing_mrq", scope: !5394, file: !5395, line: 454, baseType: !5347, size: 64, offset: 10048)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "actual_clock", scope: !5394, file: !5395, line: 460, baseType: !7, size: 32, offset: 10112)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "slotno", scope: !5394, file: !5395, line: 462, baseType: !7, size: 32, offset: 10144)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_req", scope: !5394, file: !5395, line: 464, baseType: !446, size: 32, offset: 10176)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !5394, file: !5395, line: 465, baseType: !309, size: 32, offset: 10208)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_ops", scope: !5394, file: !5395, line: 468, baseType: !5792, size: 64, offset: 10240)
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5793, size: 64)
!5793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5794)
!5794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cqe_ops", file: !5395, line: 178, size: 576, elements: !5795)
!5795 = !{!5796, !5800, !5801, !5802, !5803, !5804, !5805, !5809, !5810}
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enable", scope: !5794, file: !5395, line: 180, baseType: !5797, size: 64)
!5797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5798, size: 64)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!446, !5393, !5453}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_disable", scope: !5794, file: !5395, line: 182, baseType: !5446, size: 64, offset: 64)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_request", scope: !5794, file: !5395, line: 187, baseType: !5415, size: 64, offset: 128)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_post_req", scope: !5794, file: !5395, line: 189, baseType: !5410, size: 64, offset: 192)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_off", scope: !5794, file: !5395, line: 195, baseType: !5446, size: 64, offset: 256)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_wait_for_idle", scope: !5794, file: !5395, line: 200, baseType: !5437, size: 64, offset: 320)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_timeout", scope: !5794, file: !5395, line: 206, baseType: !5806, size: 64, offset: 384)
!5806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5807, size: 64)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!314, !5393, !5347, !2895}
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_start", scope: !5794, file: !5395, line: 212, baseType: !5446, size: 64, offset: 448)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_finish", scope: !5794, file: !5395, line: 219, baseType: !5446, size: 64, offset: 512)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_private", scope: !5394, file: !5395, line: 469, baseType: !284, size: 64, offset: 10304)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_qdepth", scope: !5394, file: !5395, line: 470, baseType: !446, size: 32, offset: 10368)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enabled", scope: !5394, file: !5395, line: 471, baseType: !314, size: 8, offset: 10400)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_on", scope: !5394, file: !5395, line: 472, baseType: !314, size: 8, offset: 10408)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "hsq_enabled", scope: !5394, file: !5395, line: 475, baseType: !314, size: 8, offset: 10416)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5394, file: !5395, line: 477, baseType: !4274, align: 512, offset: 10752)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "cap_cmd_during_tfr", scope: !5348, file: !5349, line: 162, baseType: !314, size: 8, offset: 832)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5348, file: !5349, line: 164, baseType: !446, size: 32, offset: 864)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !287, file: !231, line: 167, baseType: !5352, size: 64, offset: 896)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !287, file: !231, line: 168, baseType: !5364, size: 64, offset: 960)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "stop_abort", scope: !287, file: !231, line: 169, baseType: !5353, size: 448, offset: 1024)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "prev_blksz", scope: !287, file: !231, line: 170, baseType: !7, size: 32, offset: 1472)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "timing", scope: !287, file: !231, line: 171, baseType: !428, size: 8, offset: 1504)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "use_dma", scope: !287, file: !231, line: 174, baseType: !446, size: 32, offset: 1536)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "using_dma", scope: !287, file: !231, line: 175, baseType: !446, size: 32, offset: 1568)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "dma_64bit_address", scope: !287, file: !231, line: 176, baseType: !446, size: 32, offset: 1600)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "sg_dma", scope: !287, file: !231, line: 178, baseType: !325, size: 64, offset: 1664)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "sg_cpu", scope: !287, file: !231, line: 179, baseType: !284, size: 64, offset: 1728)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !287, file: !231, line: 180, baseType: !5830, size: 64, offset: 1792)
!5830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5831, size: 64)
!5831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5832)
!5832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_mci_dma_ops", file: !231, line: 236, size: 384, elements: !5833)
!5833 = !{!5834, !5838, !5842, !5843, !5847, !5848}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5832, file: !231, line: 238, baseType: !5835, size: 64)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!446, !286}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5832, file: !231, line: 239, baseType: !5839, size: 64, offset: 64)
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 64)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{!446, !286, !7}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5832, file: !231, line: 240, baseType: !2129, size: 64, offset: 128)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5832, file: !231, line: 241, baseType: !5844, size: 64, offset: 192)
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 64)
!5845 = !DISubroutineType(types: !5846)
!5846 = !{null, !286}
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !5832, file: !231, line: 242, baseType: !5844, size: 64, offset: 256)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !5832, file: !231, line: 243, baseType: !5844, size: 64, offset: 320)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !287, file: !231, line: 182, baseType: !7, size: 32, offset: 1856)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "dms", scope: !287, file: !231, line: 185, baseType: !5851, size: 64, offset: 1920)
!5851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5852, size: 64)
!5852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_mci_dma_slave", file: !231, line: 51, size: 128, elements: !5853)
!5853 = !{!5854, !6138}
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "ch", scope: !5852, file: !231, line: 52, baseType: !5855, size: 64)
!5855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5856, size: 64)
!5856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !164, line: 329, size: 832, elements: !5857)
!5857 = !{!5858, !6106, !6107, !6108, !6109, !6110, !6117, !6118, !6119, !6125, !6126, !6127, !6136, !6137}
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5856, file: !164, line: 330, baseType: !5859, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !164, line: 844, size: 3072, elements: !5861)
!5861 = !{!5862, !5863, !5864, !5865, !5866, !5867, !5884, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5916, !5920, !5984, !5989, !5994, !5998, !6002, !6006, !6010, !6014, !6018, !6022, !6046, !6050, !6068, !6086, !6087, !6088, !6089, !6090, !6101, !6102}
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5860, file: !164, line: 845, baseType: !2359, size: 32)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !5860, file: !164, line: 846, baseType: !7, size: 32, offset: 32)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !5860, file: !164, line: 847, baseType: !7, size: 32, offset: 64)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !5860, file: !164, line: 848, baseType: !346, size: 128, offset: 128)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !5860, file: !164, line: 849, baseType: !346, size: 128, offset: 256)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5860, file: !164, line: 850, baseType: !5868, size: 192, offset: 384)
!5868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !164, line: 762, size: 192, elements: !5869)
!5869 = !{!5870, !5875, !5876}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5868, file: !164, line: 763, baseType: !5871, size: 64)
!5871 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !164, line: 529, baseType: !5872)
!5872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5873 = !DISubroutineType(types: !5874)
!5874 = !{!314, !5855, !284}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !5868, file: !164, line: 764, baseType: !446, size: 32, offset: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5868, file: !164, line: 765, baseType: !5877, size: 64, offset: 128)
!5877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5878, size: 64)
!5878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5879)
!5879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !164, line: 749, size: 192, elements: !5880)
!5880 = !{!5881, !5882, !5883}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !5879, file: !164, line: 750, baseType: !468, size: 64)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !5879, file: !164, line: 751, baseType: !468, size: 64, offset: 64)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !5879, file: !164, line: 752, baseType: !284, size: 64, offset: 128)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !5860, file: !164, line: 851, baseType: !5885, size: 64, offset: 576)
!5885 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !164, line: 230, baseType: !5886)
!5886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !164, line: 230, size: 64, elements: !5887)
!5887 = !{!5888}
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !5886, file: !164, line: 230, baseType: !1191, size: 64)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !5860, file: !164, line: 852, baseType: !163, size: 32, offset: 640)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !5860, file: !164, line: 853, baseType: !361, size: 16, offset: 672)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !5860, file: !164, line: 854, baseType: !361, size: 16, offset: 688)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !5860, file: !164, line: 855, baseType: !169, size: 32, offset: 704)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !5860, file: !164, line: 856, baseType: !169, size: 32, offset: 736)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !5860, file: !164, line: 857, baseType: !169, size: 32, offset: 768)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !5860, file: !164, line: 858, baseType: !169, size: 32, offset: 800)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !5860, file: !164, line: 861, baseType: !446, size: 32, offset: 832)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5860, file: !164, line: 862, baseType: !2369, size: 64, offset: 896)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5860, file: !164, line: 863, baseType: !558, size: 64, offset: 960)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !5860, file: !164, line: 864, baseType: !5900, size: 128, offset: 1024)
!5900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !2168, line: 244, size: 128, elements: !5901)
!5901 = !{!5902}
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !5900, file: !2168, line: 245, baseType: !2171, size: 128)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !5860, file: !164, line: 865, baseType: !670, size: 192, offset: 1152)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !5860, file: !164, line: 867, baseType: !309, size: 32, offset: 1344)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !5860, file: !164, line: 868, baseType: !309, size: 32, offset: 1376)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !5860, file: !164, line: 869, baseType: !309, size: 32, offset: 1408)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !5860, file: !164, line: 870, baseType: !309, size: 32, offset: 1440)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !5860, file: !164, line: 871, baseType: !309, size: 32, offset: 1472)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !5860, file: !164, line: 872, baseType: !309, size: 32, offset: 1504)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !5860, file: !164, line: 873, baseType: !314, size: 8, offset: 1536)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !5860, file: !164, line: 874, baseType: !178, size: 32, offset: 1568)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !5860, file: !164, line: 876, baseType: !5913, size: 64, offset: 1600)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!446, !5855}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !5860, file: !164, line: 877, baseType: !5917, size: 64, offset: 1664)
!5917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5918, size: 64)
!5918 = !DISubroutineType(types: !5919)
!5919 = !{null, !5855}
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !5860, file: !164, line: 879, baseType: !5921, size: 64, offset: 1728)
!5921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5922, size: 64)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!5924, !5855, !325, !325, !661, !281}
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !164, line: 598, size: 704, elements: !5926)
!5926 = !{!5927, !5929, !5930, !5931, !5932, !5936, !5940, !5942, !5953, !5954, !5967, !5968}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !5925, file: !164, line: 599, baseType: !5928, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !164, line: 22, baseType: !1265)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5925, file: !164, line: 600, baseType: !183, size: 32, offset: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !5925, file: !164, line: 601, baseType: !325, size: 64, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !5925, file: !164, line: 602, baseType: !5855, size: 64, offset: 128)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !5925, file: !164, line: 603, baseType: !5933, size: 64, offset: 192)
!5933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5934, size: 64)
!5934 = !DISubroutineType(types: !5935)
!5935 = !{!5928, !5924}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !5925, file: !164, line: 604, baseType: !5937, size: 64, offset: 256)
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!446, !5924}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5925, file: !164, line: 605, baseType: !5941, size: 64, offset: 320)
!5941 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !164, line: 531, baseType: !2129)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !5925, file: !164, line: 606, baseType: !5943, size: 64, offset: 384)
!5943 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !164, line: 545, baseType: !5944)
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5945, size: 64)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{null, !284, !5947}
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!5948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5949)
!5949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !164, line: 540, size: 64, elements: !5950)
!5950 = !{!5951, !5952}
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5949, file: !164, line: 541, baseType: !195, size: 32)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !5949, file: !164, line: 542, baseType: !309, size: 32, offset: 32)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !5925, file: !164, line: 607, baseType: !284, size: 64, offset: 448)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !5925, file: !164, line: 608, baseType: !5955, size: 64, offset: 512)
!5955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!5956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !164, line: 548, size: 256, elements: !5957)
!5957 = !{!5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !5956, file: !164, line: 552, baseType: !1173, size: 8)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !5956, file: !164, line: 554, baseType: !1173, size: 8, offset: 8)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !5956, file: !164, line: 555, baseType: !1173, size: 8, offset: 16)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !5956, file: !164, line: 556, baseType: !1173, size: 8, offset: 24)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5956, file: !164, line: 557, baseType: !2369, size: 64, offset: 64)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !5956, file: !164, line: 558, baseType: !2359, size: 32, offset: 128)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5956, file: !164, line: 559, baseType: !661, size: 64, offset: 192)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5956, file: !164, line: 560, baseType: !5966, offset: 256)
!5966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, elements: !3057)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !5925, file: !164, line: 609, baseType: !163, size: 32, offset: 576)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !5925, file: !164, line: 610, baseType: !5969, size: 64, offset: 640)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !164, line: 565, size: 192, elements: !5971)
!5971 = !{!5972, !5976, !5980}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !5970, file: !164, line: 566, baseType: !5973, size: 64)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DISubroutineType(types: !5975)
!5975 = !{!446, !5924, !284, !661}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !5970, file: !164, line: 569, baseType: !5977, size: 64, offset: 64)
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!284, !5924, !1630, !1630}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !5970, file: !164, line: 571, baseType: !5981, size: 64, offset: 128)
!5981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5982, size: 64)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{!446, !5924, !661}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !5860, file: !164, line: 882, baseType: !5985, size: 64, offset: 1792)
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 64)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!5924, !5855, !325, !5988, !7, !661, !281}
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !5860, file: !164, line: 885, baseType: !5990, size: 64, offset: 1856)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 64)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!5924, !5855, !5988, !7, !661, !5993, !281}
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!5994 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !5860, file: !164, line: 888, baseType: !5995, size: 64, offset: 1920)
!5995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5996, size: 64)
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!5924, !5855, !5988, !5988, !7, !426, !661, !281}
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !5860, file: !164, line: 892, baseType: !5999, size: 64, offset: 1984)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!5924, !5855, !5988, !5988, !7, !426, !661, !5993, !281}
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !5860, file: !164, line: 896, baseType: !6003, size: 64, offset: 2048)
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6004, size: 64)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!5924, !5855, !325, !446, !661, !281}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !5860, file: !164, line: 899, baseType: !6007, size: 64, offset: 2112)
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6008, size: 64)
!6008 = !DISubroutineType(types: !6009)
!6009 = !{!5924, !5855, !317, !7, !446, !281}
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !5860, file: !164, line: 902, baseType: !6011, size: 64, offset: 2176)
!6011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6012, size: 64)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!5924, !5855, !281}
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !5860, file: !164, line: 905, baseType: !6015, size: 64, offset: 2240)
!6015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{!5924, !5855, !317, !7, !205, !281, !284}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !5860, file: !164, line: 909, baseType: !6019, size: 64, offset: 2304)
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6020, size: 64)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{!5924, !5855, !325, !661, !661, !205, !281}
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !5860, file: !164, line: 913, baseType: !6023, size: 64, offset: 2368)
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = !DISubroutineType(types: !6025)
!6025 = !{!5924, !5855, !6026, !281}
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !164, line: 150, size: 320, elements: !6028)
!6028 = !{!6029, !6030, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !6027, file: !164, line: 151, baseType: !325, size: 64)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !6027, file: !164, line: 152, baseType: !325, size: 64, offset: 64)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6027, file: !164, line: 153, baseType: !205, size: 32, offset: 128)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !6027, file: !164, line: 154, baseType: !314, size: 8, offset: 160)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !6027, file: !164, line: 155, baseType: !314, size: 8, offset: 168)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !6027, file: !164, line: 156, baseType: !314, size: 8, offset: 176)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !6027, file: !164, line: 157, baseType: !314, size: 8, offset: 184)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !6027, file: !164, line: 158, baseType: !661, size: 64, offset: 192)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !6027, file: !164, line: 159, baseType: !661, size: 64, offset: 256)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !6027, file: !164, line: 160, baseType: !6039, offset: 320)
!6039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6040, elements: !3057)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !164, line: 125, size: 256, elements: !6041)
!6041 = !{!6042, !6043, !6044, !6045}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6040, file: !164, line: 126, baseType: !661, size: 64)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !6040, file: !164, line: 127, baseType: !661, size: 64, offset: 64)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !6040, file: !164, line: 128, baseType: !661, size: 64, offset: 128)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !6040, file: !164, line: 129, baseType: !661, size: 64, offset: 192)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !5860, file: !164, line: 916, baseType: !6047, size: 64, offset: 2432)
!6047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6048, size: 64)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!5924, !5855, !325, !326, !281}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !5860, file: !164, line: 920, baseType: !6051, size: 64, offset: 2496)
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{null, !5855, !6054}
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !164, line: 497, size: 288, elements: !6056)
!6056 = !{!6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !6055, file: !164, line: 498, baseType: !309, size: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !6055, file: !164, line: 499, baseType: !309, size: 32, offset: 32)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !6055, file: !164, line: 500, baseType: !309, size: 32, offset: 64)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !6055, file: !164, line: 501, baseType: !309, size: 32, offset: 96)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !6055, file: !164, line: 502, baseType: !309, size: 32, offset: 128)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !6055, file: !164, line: 503, baseType: !309, size: 32, offset: 160)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !6055, file: !164, line: 504, baseType: !314, size: 8, offset: 192)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !6055, file: !164, line: 505, baseType: !314, size: 8, offset: 200)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !6055, file: !164, line: 506, baseType: !314, size: 8, offset: 208)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !6055, file: !164, line: 507, baseType: !178, size: 32, offset: 224)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !6055, file: !164, line: 508, baseType: !314, size: 8, offset: 256)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !5860, file: !164, line: 922, baseType: !6069, size: 64, offset: 2560)
!6069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6070, size: 64)
!6070 = !DISubroutineType(types: !6071)
!6071 = !{!446, !5855, !6072}
!6072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6073, size: 64)
!6073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !164, line: 434, size: 448, elements: !6074)
!6074 = !{!6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !6073, file: !164, line: 435, baseType: !205, size: 32)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !6073, file: !164, line: 436, baseType: !4073, size: 64, offset: 64)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !6073, file: !164, line: 437, baseType: !4073, size: 64, offset: 128)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !6073, file: !164, line: 438, baseType: !212, size: 32, offset: 192)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !6073, file: !164, line: 439, baseType: !212, size: 32, offset: 224)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !6073, file: !164, line: 440, baseType: !309, size: 32, offset: 256)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !6073, file: !164, line: 441, baseType: !309, size: 32, offset: 288)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !6073, file: !164, line: 442, baseType: !309, size: 32, offset: 320)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !6073, file: !164, line: 443, baseType: !309, size: 32, offset: 352)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !6073, file: !164, line: 444, baseType: !314, size: 8, offset: 384)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !6073, file: !164, line: 445, baseType: !7, size: 32, offset: 416)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !5860, file: !164, line: 924, baseType: !5913, size: 64, offset: 2624)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !5860, file: !164, line: 925, baseType: !5913, size: 64, offset: 2688)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !5860, file: !164, line: 926, baseType: !5913, size: 64, offset: 2752)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !5860, file: !164, line: 927, baseType: !5917, size: 64, offset: 2816)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !5860, file: !164, line: 929, baseType: !6091, size: 64, offset: 2880)
!6091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 64)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!223, !5855, !5928, !6094}
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 64)
!6095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !164, line: 721, size: 128, elements: !6096)
!6096 = !{!6097, !6098, !6099, !6100}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !6095, file: !164, line: 722, baseType: !5928, size: 32)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !6095, file: !164, line: 723, baseType: !5928, size: 32, offset: 32)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !6095, file: !164, line: 724, baseType: !309, size: 32, offset: 64)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !6095, file: !164, line: 725, baseType: !309, size: 32, offset: 96)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !5860, file: !164, line: 932, baseType: !5917, size: 64, offset: 2944)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !5860, file: !164, line: 933, baseType: !6103, size: 64, offset: 3008)
!6103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 64)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{null, !5859}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !5856, file: !164, line: 331, baseType: !2369, size: 64, offset: 64)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !5856, file: !164, line: 332, baseType: !5928, size: 32, offset: 128)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !5856, file: !164, line: 333, baseType: !5928, size: 32, offset: 160)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !5856, file: !164, line: 336, baseType: !446, size: 32, offset: 192)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5856, file: !164, line: 337, baseType: !6111, size: 64, offset: 256)
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 64)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !164, line: 361, size: 5696, elements: !6113)
!6113 = !{!6114, !6115, !6116}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !6112, file: !164, line: 362, baseType: !5855, size: 64)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !6112, file: !164, line: 363, baseType: !1987, size: 5568, offset: 64)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !6112, file: !164, line: 364, baseType: !446, size: 32, offset: 5632)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5856, file: !164, line: 338, baseType: !468, size: 64, offset: 320)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !5856, file: !164, line: 343, baseType: !346, size: 128, offset: 384)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !5856, file: !164, line: 344, baseType: !6120, size: 64, offset: 512)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 64)
!6121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !164, line: 294, size: 128, elements: !6122)
!6122 = !{!6123, !6124}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !6121, file: !164, line: 296, baseType: !281, size: 64)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !6121, file: !164, line: 297, baseType: !281, size: 64, offset: 64)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !5856, file: !164, line: 345, baseType: !446, size: 32, offset: 576)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !5856, file: !164, line: 346, baseType: !446, size: 32, offset: 608)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !5856, file: !164, line: 349, baseType: !6128, size: 64, offset: 640)
!6128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6129, size: 64)
!6129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !164, line: 305, size: 128, elements: !6130)
!6130 = !{!6131, !6132}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6129, file: !164, line: 306, baseType: !2369, size: 64)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !6129, file: !164, line: 307, baseType: !6133, size: 64, offset: 64)
!6133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6134, size: 64)
!6134 = !DISubroutineType(types: !6135)
!6135 = !{null, !2369, !284}
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !5856, file: !164, line: 350, baseType: !284, size: 64, offset: 704)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5856, file: !164, line: 352, baseType: !284, size: 64, offset: 768)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !5852, file: !231, line: 53, baseType: !205, size: 32, offset: 64)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "phy_regs", scope: !287, file: !231, line: 187, baseType: !6140, size: 64, offset: 1984)
!6140 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !283, line: 158, baseType: !4073)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_status", scope: !287, file: !231, line: 189, baseType: !309, size: 32, offset: 2048)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "data_status", scope: !287, file: !231, line: 190, baseType: !309, size: 32, offset: 2080)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "stop_cmdr", scope: !287, file: !231, line: 191, baseType: !309, size: 32, offset: 2112)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "dir_status", scope: !287, file: !231, line: 192, baseType: !309, size: 32, offset: 2144)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "tasklet", scope: !287, file: !231, line: 193, baseType: !6146, size: 320, offset: 2176)
!6146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !76, line: 609, size: 320, elements: !6147)
!6147 = !{!6148, !6150, !6151, !6152, !6153, !6164}
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6146, file: !76, line: 611, baseType: !6149, size: 64)
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6146, size: 64)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6146, file: !76, line: 612, baseType: !281, size: 64, offset: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6146, file: !76, line: 613, baseType: !928, size: 32, offset: 128)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !6146, file: !76, line: 614, baseType: !314, size: 8, offset: 160)
!6153 = !DIDerivedType(tag: DW_TAG_member, scope: !6146, file: !76, line: 615, baseType: !6154, size: 64, offset: 192)
!6154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6146, file: !76, line: 615, size: 64, elements: !6155)
!6155 = !{!6156, !6160}
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6154, file: !76, line: 616, baseType: !6157, size: 64)
!6157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{null, !281}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !6154, file: !76, line: 617, baseType: !6161, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6162, size: 64)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{null, !6149}
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6146, file: !76, line: 619, baseType: !281, size: 64, offset: 256)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "pending_events", scope: !287, file: !231, line: 194, baseType: !281, size: 64, offset: 2496)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "completed_events", scope: !287, file: !231, line: 195, baseType: !281, size: 64, offset: 2560)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !287, file: !231, line: 196, baseType: !230, size: 32, offset: 2624)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !287, file: !231, line: 197, baseType: !346, size: 128, offset: 2688)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "bus_hz", scope: !287, file: !231, line: 199, baseType: !309, size: 32, offset: 2816)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "current_speed", scope: !287, file: !231, line: 200, baseType: !309, size: 32, offset: 2848)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "fifoth_val", scope: !287, file: !231, line: 201, baseType: !309, size: 32, offset: 2880)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "verid", scope: !287, file: !231, line: 202, baseType: !770, size: 16, offset: 2912)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !287, file: !231, line: 203, baseType: !2369, size: 64, offset: 2944)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !287, file: !231, line: 204, baseType: !6175, size: 64, offset: 3008)
!6175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6176, size: 64)
!6176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_mci_board", file: !231, line: 249, size: 384, elements: !6177)
!6177 = !{!6178, !6179, !6180, !6181, !6182, !6183, !6184, !6188, !6190}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "bus_hz", scope: !6176, file: !231, line: 250, baseType: !7, size: 32)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !6176, file: !231, line: 252, baseType: !309, size: 32, offset: 32)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "caps2", scope: !6176, file: !231, line: 253, baseType: !309, size: 32, offset: 64)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "pm_caps", scope: !6176, file: !231, line: 254, baseType: !309, size: 32, offset: 96)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_depth", scope: !6176, file: !231, line: 260, baseType: !7, size: 32, offset: 128)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "detect_delay_ms", scope: !6176, file: !231, line: 263, baseType: !309, size: 32, offset: 160)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "rstc", scope: !6176, file: !231, line: 265, baseType: !6185, size: 64, offset: 192)
!6185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6186, size: 64)
!6186 = !DICompositeType(tag: DW_TAG_structure_type, name: "reset_control", file: !6187, line: 11, flags: DIFlagFwdDecl)
!6187 = !DIFile(filename: "./include/linux/reset.h", directory: "/home/lizy2001/genbc/linux")
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6176, file: !231, line: 266, baseType: !6189, size: 64, offset: 256)
!6189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 64)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6176, file: !231, line: 267, baseType: !6191, size: 64, offset: 320)
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 64)
!6192 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pdata", file: !231, line: 246, flags: DIFlagFwdDecl)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "drv_data", scope: !287, file: !231, line: 205, baseType: !6194, size: 64, offset: 3072)
!6194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6195, size: 64)
!6195 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6196)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_mci_drv_data", file: !231, line: 555, size: 512, elements: !6197)
!6197 = !{!6198, !6199, !6200, !6201, !6205, !6206, !6223, !6227}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !6196, file: !231, line: 556, baseType: !2802, size: 64)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "num_caps", scope: !6196, file: !231, line: 557, baseType: !309, size: 32, offset: 64)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !6196, file: !231, line: 558, baseType: !5835, size: 64, offset: 128)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "set_ios", scope: !6196, file: !231, line: 559, baseType: !6202, size: 64, offset: 192)
!6202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6203, size: 64)
!6203 = !DISubroutineType(types: !6204)
!6204 = !{null, !286, !5422}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "parse_dt", scope: !6196, file: !231, line: 560, baseType: !5835, size: 64, offset: 256)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "execute_tuning", scope: !6196, file: !231, line: 561, baseType: !6207, size: 64, offset: 320)
!6207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!446, !6210, !309}
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6211, size: 64)
!6211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dw_mci_slot", file: !231, line: 520, size: 576, elements: !6212)
!6212 = !{!6213, !6214, !6215, !6216, !6217, !6218, !6219, !6220, !6221, !6222}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "mmc", scope: !6211, file: !231, line: 521, baseType: !5393, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !6211, file: !231, line: 522, baseType: !286, size: 64, offset: 64)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "ctype", scope: !6211, file: !231, line: 524, baseType: !309, size: 32, offset: 128)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !6211, file: !231, line: 526, baseType: !5347, size: 64, offset: 192)
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "queue_node", scope: !6211, file: !231, line: 527, baseType: !346, size: 128, offset: 256)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !6211, file: !231, line: 529, baseType: !7, size: 32, offset: 384)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "__clk_old", scope: !6211, file: !231, line: 530, baseType: !7, size: 32, offset: 416)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6211, file: !231, line: 532, baseType: !281, size: 64, offset: 448)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6211, file: !231, line: 538, baseType: !446, size: 32, offset: 512)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_id", scope: !6211, file: !231, line: 539, baseType: !446, size: 32, offset: 544)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_hs400_tuning", scope: !6196, file: !231, line: 562, baseType: !6224, size: 64, offset: 384)
!6224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6225, size: 64)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{!446, !286, !5422}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "switch_voltage", scope: !6196, file: !231, line: 564, baseType: !5665, size: 64, offset: 448)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !287, file: !231, line: 206, baseType: !284, size: 64, offset: 3136)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "biu_clk", scope: !287, file: !231, line: 207, baseType: !6230, size: 64, offset: 3200)
!6230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6231, size: 64)
!6231 = !DICompositeType(tag: DW_TAG_structure_type, name: "clk", file: !6232, line: 17, flags: DIFlagFwdDecl)
!6232 = !DIFile(filename: "./include/linux/clk.h", directory: "/home/lizy2001/genbc/linux")
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "ciu_clk", scope: !287, file: !231, line: 208, baseType: !6230, size: 64, offset: 3264)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !287, file: !231, line: 209, baseType: !6210, size: 64, offset: 3328)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_depth", scope: !287, file: !231, line: 212, baseType: !446, size: 32, offset: 3392)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "data_shift", scope: !287, file: !231, line: 213, baseType: !446, size: 32, offset: 3424)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "part_buf_start", scope: !287, file: !231, line: 214, baseType: !1173, size: 8, offset: 3456)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "part_buf_count", scope: !287, file: !231, line: 215, baseType: !1173, size: 8, offset: 3464)
!6239 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !231, line: 216, baseType: !6240, size: 64, offset: 3520)
!6240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !287, file: !231, line: 216, size: 64, elements: !6241)
!6241 = !{!6242, !6243, !6244}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "part_buf16", scope: !6240, file: !231, line: 217, baseType: !770, size: 16)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "part_buf32", scope: !6240, file: !231, line: 218, baseType: !309, size: 32)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "part_buf", scope: !6240, file: !231, line: 219, baseType: !326, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "push_data", scope: !287, file: !231, line: 221, baseType: !6246, size: 64, offset: 3584)
!6246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6247, size: 64)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !286, !284, !446}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "pull_data", scope: !287, file: !231, line: 222, baseType: !6246, size: 64, offset: 3648)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "vqmmc_enabled", scope: !287, file: !231, line: 224, baseType: !314, size: 8, offset: 3712)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags", scope: !287, file: !231, line: 225, baseType: !281, size: 64, offset: 3776)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !287, file: !231, line: 226, baseType: !446, size: 32, offset: 3840)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_id0", scope: !287, file: !231, line: 228, baseType: !446, size: 32, offset: 3872)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "cmd11_timer", scope: !287, file: !231, line: 230, baseType: !2560, size: 320, offset: 3904)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "cto_timer", scope: !287, file: !231, line: 231, baseType: !2560, size: 320, offset: 4224)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "dto_timer", scope: !287, file: !231, line: 232, baseType: !2560, size: 320, offset: 4544)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !470)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!6260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !349)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!6264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6265, size: 64)
!6265 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !361)
!6266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6267, size: 64)
!6267 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !326)
!6268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !869, line: 31, baseType: !311)
!6269 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !283, line: 107, baseType: !326)
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6271, size: 64)
!6271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6261)
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6273, size: 64)
!6273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6274)
!6274 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !446)
!6275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6276, size: 64)
!6276 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !309)
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !6279, line: 22, size: 6208, elements: !6280)
!6279 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!6280 = !{!6281, !6282, !6283, !6284, !6285, !6286, !6287, !6288, !6301, !6308, !6309, !6312}
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6278, file: !6279, line: 23, baseType: !468, size: 64)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6278, file: !6279, line: 24, baseType: !446, size: 32, offset: 64)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !6278, file: !6279, line: 25, baseType: !314, size: 8, offset: 96)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6278, file: !6279, line: 26, baseType: !1987, size: 5568, offset: 128)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !6278, file: !6279, line: 27, baseType: !326, size: 64, offset: 5696)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6278, file: !6279, line: 28, baseType: !3082, size: 128, offset: 5760)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !6278, file: !6279, line: 29, baseType: !309, size: 32, offset: 5888)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !6278, file: !6279, line: 30, baseType: !6289, size: 64, offset: 5952)
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !6291, line: 20, size: 512, elements: !6292)
!6291 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!6292 = !{!6293, !6294, !6295, !6296, !6297, !6298, !6299, !6300}
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6290, file: !6291, line: 21, baseType: !6140, size: 64)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6290, file: !6291, line: 22, baseType: !6140, size: 64, offset: 64)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6290, file: !6291, line: 23, baseType: !468, size: 64, offset: 128)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6290, file: !6291, line: 24, baseType: !281, size: 64, offset: 192)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !6290, file: !6291, line: 25, baseType: !281, size: 64, offset: 256)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6290, file: !6291, line: 26, baseType: !6289, size: 64, offset: 320)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !6290, file: !6291, line: 26, baseType: !6289, size: 64, offset: 384)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !6290, file: !6291, line: 26, baseType: !6289, size: 64, offset: 448)
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !6278, file: !6279, line: 32, baseType: !6302, size: 64, offset: 6016)
!6302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6303, size: 64)
!6303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6304)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !2453, line: 586, size: 256, elements: !6305)
!6305 = !{!6306, !6307}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6304, file: !2453, line: 587, baseType: !5658, size: 160)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6304, file: !2453, line: 588, baseType: !2472, size: 64, offset: 192)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !6278, file: !6279, line: 33, baseType: !494, size: 64, offset: 6080)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !6278, file: !6279, line: 36, baseType: !6310, size: 64, offset: 6144)
!6310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 64)
!6311 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !6279, line: 18, flags: DIFlagFwdDecl)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6278, file: !6279, line: 39, baseType: !6313, offset: 6208)
!6313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !3089, line: 8, elements: !304)
!6314 = !{!0, !6315, !6320, !6325, !6330, !6335, !6340, !6343, !6345, !6347, !6351, !6356}
!6315 = !DIGlobalVariableExpression(var: !6316, expr: !DIExpression())
!6316 = distinct !DIGlobalVariable(name: "__exitcall_dw_mci_exit", scope: !2, file: !3, line: 3486, type: !6317, isLocal: true, isDefinition: true)
!6317 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6318, line: 117, baseType: !6319)
!6318 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!6320 = !DIGlobalVariableExpression(var: !6321, expr: !DIExpression())
!6321 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description321", scope: !2, file: !3, line: 3488, type: !6322, isLocal: true, isDefinition: true, align: 8)
!6322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 440, elements: !6323)
!6323 = !{!6324}
!6324 = !DISubrange(count: 55)
!6325 = !DIGlobalVariableExpression(var: !6326, expr: !DIExpression())
!6326 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author322", scope: !2, file: !3, line: 3489, type: !6327, isLocal: true, isDefinition: true, align: 8)
!6327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 320, elements: !6328)
!6328 = !{!6329}
!6329 = !DISubrange(count: 40)
!6330 = !DIGlobalVariableExpression(var: !6331, expr: !DIExpression())
!6331 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author323", scope: !2, file: !3, line: 3490, type: !6332, isLocal: true, isDefinition: true, align: 8)
!6332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 344, elements: !6333)
!6333 = !{!6334}
!6334 = !DISubrange(count: 43)
!6335 = !DIGlobalVariableExpression(var: !6336, expr: !DIExpression())
!6336 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file324", scope: !2, file: !3, line: 3491, type: !6337, isLocal: true, isDefinition: true, align: 8)
!6337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 288, elements: !6338)
!6338 = !{!6339}
!6339 = !DISubrange(count: 36)
!6340 = !DIGlobalVariableExpression(var: !6341, expr: !DIExpression())
!6341 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license325", scope: !2, file: !3, line: 3491, type: !6342, isLocal: true, isDefinition: true, align: 8)
!6342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 176, elements: !3586)
!6343 = !DIGlobalVariableExpression(var: !6344, expr: !DIExpression())
!6344 = distinct !DIGlobalVariable(name: "dw_mci_idmac_ops", scope: !2, file: !3, line: 759, type: !5831, isLocal: true, isDefinition: true)
!6345 = !DIGlobalVariableExpression(var: !6346, expr: !DIExpression())
!6346 = distinct !DIGlobalVariable(name: "dw_mci_edmac_ops", scope: !2, file: !3, line: 861, type: !5831, isLocal: true, isDefinition: true)
!6347 = !DIGlobalVariableExpression(var: !6348, expr: !DIExpression())
!6348 = distinct !DIGlobalVariable(name: "mszs", scope: !6349, file: !3, line: 778, type: !6350, isLocal: true, isDefinition: true)
!6349 = distinct !DISubprogram(name: "dw_mci_edmac_start_dma", scope: !3, file: !3, line: 772, type: !5840, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2801, size: 256, elements: !1147)
!6351 = !DIGlobalVariableExpression(var: !6352, expr: !DIExpression())
!6352 = distinct !DIGlobalVariable(name: "mszs", scope: !6353, file: !3, line: 987, type: !6350, isLocal: true, isDefinition: true)
!6353 = distinct !DISubprogram(name: "dw_mci_adjust_fifoth", scope: !3, file: !3, line: 984, type: !6354, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{null, !286, !5364}
!6356 = !DIGlobalVariableExpression(var: !6357, expr: !DIExpression())
!6357 = distinct !DIGlobalVariable(name: "dw_mci_ops", scope: !2, file: !3, line: 1774, type: !5402, isLocal: true, isDefinition: true)
!6358 = !{!"rsp"}
!6359 = !{i32 7, !"Dwarf Version", i32 4}
!6360 = !{i32 2, !"Debug Info Version", i32 3}
!6361 = !{i32 1, !"wchar_size", i32 2}
!6362 = !{i32 1, !"Code Model", i32 2}
!6363 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6364 = distinct !DISubprogram(name: "dw_mci_probe", scope: !3, file: !3, line: 3156, type: !5836, scopeLine: 3157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6365 = !DILocalVariable(name: "lock", arg: 1, scope: !6366, file: !6367, line: 327, type: !2294)
!6366 = distinct !DISubprogram(name: "spinlock_check", scope: !6367, file: !6367, line: 327, type: !6368, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6367 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6368 = !DISubroutineType(types: !6369)
!6369 = !{!6370, !2294}
!6370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!6371 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !6372)
!6372 = distinct !DILocation(line: 3228, column: 2, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3228, column: 2)
!6374 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !6375)
!6375 = distinct !DILocation(line: 3227, column: 2, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3227, column: 2)
!6377 = !DILocalVariable(name: "host", arg: 1, scope: !6364, file: !3, line: 3156, type: !286)
!6378 = !DILocation(line: 3156, column: 33, scope: !6364)
!6379 = !DILocalVariable(name: "drv_data", scope: !6364, file: !3, line: 3158, type: !6194)
!6380 = !DILocation(line: 3158, column: 32, scope: !6364)
!6381 = !DILocation(line: 3158, column: 43, scope: !6364)
!6382 = !DILocation(line: 3158, column: 49, scope: !6364)
!6383 = !DILocalVariable(name: "width", scope: !6364, file: !3, line: 3159, type: !446)
!6384 = !DILocation(line: 3159, column: 6, scope: !6364)
!6385 = !DILocalVariable(name: "i", scope: !6364, file: !3, line: 3159, type: !446)
!6386 = !DILocation(line: 3159, column: 13, scope: !6364)
!6387 = !DILocalVariable(name: "ret", scope: !6364, file: !3, line: 3159, type: !446)
!6388 = !DILocation(line: 3159, column: 16, scope: !6364)
!6389 = !DILocalVariable(name: "fifo_size", scope: !6364, file: !3, line: 3160, type: !309)
!6390 = !DILocation(line: 3160, column: 6, scope: !6364)
!6391 = !DILocation(line: 3162, column: 7, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3162, column: 6)
!6393 = !DILocation(line: 3162, column: 13, scope: !6392)
!6394 = !DILocation(line: 3162, column: 6, scope: !6364)
!6395 = !DILocation(line: 3163, column: 33, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 3162, column: 20)
!6397 = !DILocation(line: 3163, column: 17, scope: !6396)
!6398 = !DILocation(line: 3163, column: 3, scope: !6396)
!6399 = !DILocation(line: 3163, column: 9, scope: !6396)
!6400 = !DILocation(line: 3163, column: 15, scope: !6396)
!6401 = !DILocation(line: 3164, column: 14, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3164, column: 7)
!6403 = !DILocation(line: 3164, column: 20, scope: !6402)
!6404 = !DILocation(line: 3164, column: 7, scope: !6402)
!6405 = !DILocation(line: 3164, column: 7, scope: !6396)
!6406 = !DILocation(line: 3165, column: 25, scope: !6402)
!6407 = !DILocation(line: 3165, column: 31, scope: !6402)
!6408 = !DILocation(line: 3165, column: 44, scope: !6402)
!6409 = !DILocation(line: 3165, column: 50, scope: !6402)
!6410 = !DILocation(line: 3165, column: 36, scope: !6402)
!6411 = !DILocation(line: 3165, column: 11, scope: !6402)
!6412 = !DILocation(line: 3165, column: 4, scope: !6402)
!6413 = !DILocation(line: 3167, column: 2, scope: !6396)
!6414 = !DILocation(line: 3169, column: 31, scope: !6364)
!6415 = !DILocation(line: 3169, column: 37, scope: !6364)
!6416 = !DILocation(line: 3169, column: 18, scope: !6364)
!6417 = !DILocation(line: 3169, column: 2, scope: !6364)
!6418 = !DILocation(line: 3169, column: 8, scope: !6364)
!6419 = !DILocation(line: 3169, column: 16, scope: !6364)
!6420 = !DILocation(line: 3170, column: 13, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3170, column: 6)
!6422 = !DILocation(line: 3170, column: 19, scope: !6421)
!6423 = !DILocation(line: 3170, column: 6, scope: !6421)
!6424 = !DILocation(line: 3170, column: 6, scope: !6364)
!6425 = !DILocation(line: 3172, column: 2, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 3170, column: 29)
!6427 = !DILocation(line: 3173, column: 28, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 3172, column: 9)
!6429 = !DILocation(line: 3173, column: 34, scope: !6428)
!6430 = !DILocation(line: 3173, column: 9, scope: !6428)
!6431 = !DILocation(line: 3173, column: 7, scope: !6428)
!6432 = !DILocation(line: 3174, column: 7, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 3174, column: 7)
!6434 = !DILocation(line: 3174, column: 7, scope: !6428)
!6435 = !DILocation(line: 3175, column: 4, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 3174, column: 12)
!6437 = !DILocation(line: 3176, column: 11, scope: !6436)
!6438 = !DILocation(line: 3176, column: 4, scope: !6436)
!6439 = !DILocation(line: 3180, column: 31, scope: !6364)
!6440 = !DILocation(line: 3180, column: 37, scope: !6364)
!6441 = !DILocation(line: 3180, column: 18, scope: !6364)
!6442 = !DILocation(line: 3180, column: 2, scope: !6364)
!6443 = !DILocation(line: 3180, column: 8, scope: !6364)
!6444 = !DILocation(line: 3180, column: 16, scope: !6364)
!6445 = !DILocation(line: 3181, column: 13, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3181, column: 6)
!6447 = !DILocation(line: 3181, column: 19, scope: !6446)
!6448 = !DILocation(line: 3181, column: 6, scope: !6446)
!6449 = !DILocation(line: 3181, column: 6, scope: !6364)
!6450 = !DILocation(line: 3183, column: 18, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3181, column: 29)
!6452 = !DILocation(line: 3183, column: 24, scope: !6451)
!6453 = !DILocation(line: 3183, column: 31, scope: !6451)
!6454 = !DILocation(line: 3183, column: 3, scope: !6451)
!6455 = !DILocation(line: 3183, column: 9, scope: !6451)
!6456 = !DILocation(line: 3183, column: 16, scope: !6451)
!6457 = !DILocation(line: 3184, column: 2, scope: !6451)
!6458 = !DILocation(line: 3185, column: 28, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 3184, column: 9)
!6460 = !DILocation(line: 3185, column: 34, scope: !6459)
!6461 = !DILocation(line: 3185, column: 9, scope: !6459)
!6462 = !DILocation(line: 3185, column: 7, scope: !6459)
!6463 = !DILocation(line: 3186, column: 7, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3186, column: 7)
!6465 = !DILocation(line: 3186, column: 7, scope: !6459)
!6466 = !DILocation(line: 3187, column: 4, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 3186, column: 12)
!6468 = !DILocation(line: 3188, column: 4, scope: !6467)
!6469 = !DILocation(line: 3191, column: 7, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 3191, column: 7)
!6471 = !DILocation(line: 3191, column: 13, scope: !6470)
!6472 = !DILocation(line: 3191, column: 20, scope: !6470)
!6473 = !DILocation(line: 3191, column: 7, scope: !6459)
!6474 = !DILocation(line: 3192, column: 23, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 3191, column: 28)
!6476 = !DILocation(line: 3192, column: 29, scope: !6475)
!6477 = !DILocation(line: 3192, column: 38, scope: !6475)
!6478 = !DILocation(line: 3192, column: 44, scope: !6475)
!6479 = !DILocation(line: 3192, column: 51, scope: !6475)
!6480 = !DILocation(line: 3192, column: 10, scope: !6475)
!6481 = !DILocation(line: 3192, column: 8, scope: !6475)
!6482 = !DILocation(line: 3193, column: 8, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 3193, column: 8)
!6484 = !DILocation(line: 3193, column: 8, scope: !6475)
!6485 = !DILocation(line: 3194, column: 5, scope: !6483)
!6486 = !DILocation(line: 3197, column: 3, scope: !6475)
!6487 = !DILocation(line: 3198, column: 31, scope: !6459)
!6488 = !DILocation(line: 3198, column: 37, scope: !6459)
!6489 = !DILocation(line: 3198, column: 18, scope: !6459)
!6490 = !DILocation(line: 3198, column: 3, scope: !6459)
!6491 = !DILocation(line: 3198, column: 9, scope: !6459)
!6492 = !DILocation(line: 3198, column: 16, scope: !6459)
!6493 = !DILocation(line: 3201, column: 7, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3201, column: 6)
!6495 = !DILocation(line: 3201, column: 13, scope: !6494)
!6496 = !DILocation(line: 3201, column: 6, scope: !6364)
!6497 = !DILocation(line: 3202, column: 3, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 3201, column: 21)
!6499 = !DILocation(line: 3204, column: 7, scope: !6498)
!6500 = !DILocation(line: 3205, column: 3, scope: !6498)
!6501 = !DILocation(line: 3208, column: 14, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3208, column: 6)
!6503 = !DILocation(line: 3208, column: 20, scope: !6502)
!6504 = !DILocation(line: 3208, column: 27, scope: !6502)
!6505 = !DILocation(line: 3208, column: 7, scope: !6502)
!6506 = !DILocation(line: 3208, column: 6, scope: !6364)
!6507 = !DILocation(line: 3209, column: 24, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6502, file: !3, line: 3208, column: 34)
!6509 = !DILocation(line: 3209, column: 30, scope: !6508)
!6510 = !DILocation(line: 3209, column: 37, scope: !6508)
!6511 = !DILocation(line: 3209, column: 3, scope: !6508)
!6512 = !DILocation(line: 3210, column: 3, scope: !6508)
!6513 = !DILocation(line: 3211, column: 26, scope: !6508)
!6514 = !DILocation(line: 3211, column: 32, scope: !6508)
!6515 = !DILocation(line: 3211, column: 39, scope: !6508)
!6516 = !DILocation(line: 3211, column: 3, scope: !6508)
!6517 = !DILocation(line: 3212, column: 2, scope: !6508)
!6518 = !DILocation(line: 3214, column: 6, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3214, column: 6)
!6520 = !DILocation(line: 3214, column: 15, scope: !6519)
!6521 = !DILocation(line: 3214, column: 18, scope: !6519)
!6522 = !DILocation(line: 3214, column: 28, scope: !6519)
!6523 = !DILocation(line: 3214, column: 6, scope: !6364)
!6524 = !DILocation(line: 3215, column: 9, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 3214, column: 34)
!6526 = !DILocation(line: 3215, column: 19, scope: !6525)
!6527 = !DILocation(line: 3215, column: 24, scope: !6525)
!6528 = !DILocation(line: 3215, column: 7, scope: !6525)
!6529 = !DILocation(line: 3216, column: 7, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 3216, column: 7)
!6531 = !DILocation(line: 3216, column: 7, scope: !6525)
!6532 = !DILocation(line: 3217, column: 4, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 3216, column: 12)
!6534 = !DILocation(line: 3219, column: 4, scope: !6533)
!6535 = !DILocation(line: 3221, column: 2, scope: !6525)
!6536 = !DILocation(line: 3223, column: 2, scope: !6364)
!6537 = !DILocation(line: 3224, column: 2, scope: !6364)
!6538 = !DILocation(line: 3225, column: 2, scope: !6364)
!6539 = !DILocation(line: 3227, column: 2, scope: !6364)
!6540 = !DILocation(line: 3227, column: 2, scope: !6376)
!6541 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !6375)
!6542 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !6375)
!6543 = !DILocation(line: 3228, column: 2, scope: !6364)
!6544 = !DILocation(line: 3228, column: 2, scope: !6373)
!6545 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !6372)
!6546 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !6372)
!6547 = !DILocation(line: 3229, column: 18, scope: !6364)
!6548 = !DILocation(line: 3229, column: 24, scope: !6364)
!6549 = !DILocation(line: 3229, column: 2, scope: !6364)
!6550 = !DILocation(line: 3235, column: 6, scope: !6364)
!6551 = !DILocation(line: 3235, column: 4, scope: !6364)
!6552 = !DILocation(line: 3236, column: 7, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3236, column: 6)
!6554 = !DILocation(line: 3236, column: 6, scope: !6364)
!6555 = !DILocation(line: 3237, column: 3, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 3236, column: 10)
!6557 = !DILocation(line: 3237, column: 9, scope: !6556)
!6558 = !DILocation(line: 3237, column: 19, scope: !6556)
!6559 = !DILocation(line: 3238, column: 3, scope: !6556)
!6560 = !DILocation(line: 3238, column: 9, scope: !6556)
!6561 = !DILocation(line: 3238, column: 19, scope: !6556)
!6562 = !DILocation(line: 3239, column: 9, scope: !6556)
!6563 = !DILocation(line: 3240, column: 3, scope: !6556)
!6564 = !DILocation(line: 3240, column: 9, scope: !6556)
!6565 = !DILocation(line: 3240, column: 20, scope: !6556)
!6566 = !DILocation(line: 3241, column: 2, scope: !6556)
!6567 = !DILocation(line: 3241, column: 13, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 3241, column: 13)
!6569 = !DILocation(line: 3241, column: 15, scope: !6568)
!6570 = !DILocation(line: 3241, column: 13, scope: !6553)
!6571 = !DILocation(line: 3242, column: 3, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 3241, column: 21)
!6573 = !DILocation(line: 3242, column: 9, scope: !6572)
!6574 = !DILocation(line: 3242, column: 19, scope: !6572)
!6575 = !DILocation(line: 3243, column: 3, scope: !6572)
!6576 = !DILocation(line: 3243, column: 9, scope: !6572)
!6577 = !DILocation(line: 3243, column: 19, scope: !6572)
!6578 = !DILocation(line: 3244, column: 9, scope: !6572)
!6579 = !DILocation(line: 3245, column: 3, scope: !6572)
!6580 = !DILocation(line: 3245, column: 9, scope: !6572)
!6581 = !DILocation(line: 3245, column: 20, scope: !6572)
!6582 = !DILocation(line: 3246, column: 2, scope: !6572)
!6583 = !DILocalVariable(name: "__ret_warn_on", scope: !6584, file: !3, line: 3248, type: !446)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 3248, column: 3)
!6585 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 3246, column: 9)
!6586 = !DILocation(line: 3248, column: 3, scope: !6584)
!6587 = !DILocation(line: 3248, column: 3, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 3248, column: 3)
!6589 = !DILocation(line: 3248, column: 3, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 3248, column: 3)
!6591 = !DILocation(line: 3248, column: 3, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3248, column: 3)
!6593 = !DILocation(line: 3248, column: 3, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3248, column: 3)
!6595 = !DILocation(line: 3248, column: 3, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 3248, column: 3)
!6597 = !DILocation(line: 3248, column: 3, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 3248, column: 3)
!6599 = !{i32 -2140124440, i32 -2140124411, i32 -2140124365, i32 -2140124307, i32 -2140124253, i32 -2140124199, i32 -2140124144, i32 -2140124113}
!6600 = !DILocation(line: 3248, column: 3, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 3248, column: 3)
!6602 = !{i32 -2140123694, i32 -2140123687, i32 -2140123635, i32 -2140123604, i32 -2140123574}
!6603 = !DILocation(line: 3248, column: 3, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 3248, column: 3)
!6605 = !DILocation(line: 3248, column: 3, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 3248, column: 3)
!6607 = !DILocation(line: 3251, column: 3, scope: !6585)
!6608 = !DILocation(line: 3251, column: 9, scope: !6585)
!6609 = !DILocation(line: 3251, column: 19, scope: !6585)
!6610 = !DILocation(line: 3252, column: 3, scope: !6585)
!6611 = !DILocation(line: 3252, column: 9, scope: !6585)
!6612 = !DILocation(line: 3252, column: 19, scope: !6585)
!6613 = !DILocation(line: 3253, column: 9, scope: !6585)
!6614 = !DILocation(line: 3254, column: 3, scope: !6585)
!6615 = !DILocation(line: 3254, column: 9, scope: !6585)
!6616 = !DILocation(line: 3254, column: 20, scope: !6585)
!6617 = !DILocation(line: 3258, column: 25, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3258, column: 6)
!6619 = !DILocation(line: 3258, column: 7, scope: !6618)
!6620 = !DILocation(line: 3258, column: 6, scope: !6364)
!6621 = !DILocation(line: 3259, column: 7, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 3258, column: 60)
!6623 = !DILocation(line: 3260, column: 3, scope: !6622)
!6624 = !DILocation(line: 3263, column: 18, scope: !6364)
!6625 = !DILocation(line: 3263, column: 24, scope: !6364)
!6626 = !DILocation(line: 3263, column: 31, scope: !6364)
!6627 = !DILocation(line: 3263, column: 2, scope: !6364)
!6628 = !DILocation(line: 3263, column: 8, scope: !6364)
!6629 = !DILocation(line: 3263, column: 16, scope: !6364)
!6630 = !DILocation(line: 3264, column: 18, scope: !6364)
!6631 = !DILocation(line: 3264, column: 2, scope: !6364)
!6632 = !DILocation(line: 3267, column: 2, scope: !6364)
!6633 = !DILocation(line: 3268, column: 2, scope: !6364)
!6634 = !DILocation(line: 3271, column: 2, scope: !6364)
!6635 = !DILocation(line: 3277, column: 7, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3277, column: 6)
!6637 = !DILocation(line: 3277, column: 13, scope: !6636)
!6638 = !DILocation(line: 3277, column: 20, scope: !6636)
!6639 = !DILocation(line: 3277, column: 6, scope: !6364)
!6640 = !DILocation(line: 3284, column: 15, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 3277, column: 32)
!6642 = !DILocation(line: 3284, column: 13, scope: !6641)
!6643 = !DILocation(line: 3285, column: 21, scope: !6641)
!6644 = !DILocation(line: 3285, column: 31, scope: !6641)
!6645 = !DILocation(line: 3285, column: 38, scope: !6641)
!6646 = !DILocation(line: 3285, column: 17, scope: !6641)
!6647 = !DILocation(line: 3285, column: 13, scope: !6641)
!6648 = !DILocation(line: 3286, column: 2, scope: !6641)
!6649 = !DILocation(line: 3287, column: 15, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 3286, column: 9)
!6651 = !DILocation(line: 3287, column: 21, scope: !6650)
!6652 = !DILocation(line: 3287, column: 28, scope: !6650)
!6653 = !DILocation(line: 3287, column: 13, scope: !6650)
!6654 = !DILocation(line: 3289, column: 21, scope: !6364)
!6655 = !DILocation(line: 3289, column: 2, scope: !6364)
!6656 = !DILocation(line: 3289, column: 8, scope: !6364)
!6657 = !DILocation(line: 3289, column: 19, scope: !6364)
!6658 = !DILocation(line: 3291, column: 3, scope: !6364)
!6659 = !DILocation(line: 3290, column: 2, scope: !6364)
!6660 = !DILocation(line: 3290, column: 8, scope: !6364)
!6661 = !DILocation(line: 3290, column: 19, scope: !6364)
!6662 = !DILocation(line: 3292, column: 2, scope: !6364)
!6663 = !DILocation(line: 3295, column: 2, scope: !6364)
!6664 = !DILocation(line: 3296, column: 2, scope: !6364)
!6665 = !DILocation(line: 3302, column: 16, scope: !6364)
!6666 = !DILocation(line: 3302, column: 2, scope: !6364)
!6667 = !DILocation(line: 3302, column: 8, scope: !6364)
!6668 = !DILocation(line: 3302, column: 14, scope: !6364)
!6669 = !DILocation(line: 3303, column: 2, scope: !6364)
!6670 = !DILocation(line: 3305, column: 6, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3305, column: 6)
!6672 = !DILocation(line: 3305, column: 12, scope: !6671)
!6673 = !DILocation(line: 3305, column: 6, scope: !6364)
!6674 = !DILocation(line: 3306, column: 20, scope: !6671)
!6675 = !DILocation(line: 3306, column: 26, scope: !6671)
!6676 = !DILocation(line: 3306, column: 33, scope: !6671)
!6677 = !DILocation(line: 3306, column: 39, scope: !6671)
!6678 = !DILocation(line: 3306, column: 31, scope: !6671)
!6679 = !DILocation(line: 3306, column: 3, scope: !6671)
!6680 = !DILocation(line: 3306, column: 9, scope: !6671)
!6681 = !DILocation(line: 3306, column: 18, scope: !6671)
!6682 = !DILocation(line: 3307, column: 11, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 3307, column: 11)
!6684 = !DILocation(line: 3307, column: 17, scope: !6683)
!6685 = !DILocation(line: 3307, column: 23, scope: !6683)
!6686 = !DILocation(line: 3307, column: 11, scope: !6671)
!6687 = !DILocation(line: 3308, column: 20, scope: !6683)
!6688 = !DILocation(line: 3308, column: 26, scope: !6683)
!6689 = !DILocation(line: 3308, column: 31, scope: !6683)
!6690 = !DILocation(line: 3308, column: 3, scope: !6683)
!6691 = !DILocation(line: 3308, column: 9, scope: !6683)
!6692 = !DILocation(line: 3308, column: 18, scope: !6683)
!6693 = !DILocation(line: 3310, column: 20, scope: !6683)
!6694 = !DILocation(line: 3310, column: 26, scope: !6683)
!6695 = !DILocation(line: 3310, column: 31, scope: !6683)
!6696 = !DILocation(line: 3310, column: 3, scope: !6683)
!6697 = !DILocation(line: 3310, column: 9, scope: !6683)
!6698 = !DILocation(line: 3310, column: 18, scope: !6683)
!6699 = !DILocation(line: 3312, column: 16, scope: !6364)
!6700 = !DILocation(line: 3312, column: 22, scope: !6364)
!6701 = !DILocation(line: 3312, column: 67, scope: !6364)
!6702 = !DILocation(line: 3312, column: 52, scope: !6364)
!6703 = !DILocation(line: 3312, column: 2, scope: !6364)
!6704 = !DILocation(line: 3313, column: 25, scope: !6364)
!6705 = !DILocation(line: 3313, column: 31, scope: !6364)
!6706 = !DILocation(line: 3313, column: 36, scope: !6364)
!6707 = !DILocation(line: 3313, column: 42, scope: !6364)
!6708 = !DILocation(line: 3314, column: 11, scope: !6364)
!6709 = !DILocation(line: 3314, column: 17, scope: !6364)
!6710 = !DILocation(line: 3314, column: 38, scope: !6364)
!6711 = !DILocation(line: 3313, column: 8, scope: !6364)
!6712 = !DILocation(line: 3313, column: 6, scope: !6364)
!6713 = !DILocation(line: 3315, column: 6, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3315, column: 6)
!6715 = !DILocation(line: 3315, column: 6, scope: !6364)
!6716 = !DILocation(line: 3316, column: 3, scope: !6714)
!6717 = !DILocation(line: 3322, column: 2, scope: !6364)
!6718 = !DILocation(line: 3326, column: 2, scope: !6364)
!6719 = !DILocation(line: 3328, column: 2, scope: !6364)
!6720 = !DILocation(line: 3333, column: 25, scope: !6364)
!6721 = !DILocation(line: 3333, column: 8, scope: !6364)
!6722 = !DILocation(line: 3333, column: 6, scope: !6364)
!6723 = !DILocation(line: 3334, column: 6, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3334, column: 6)
!6725 = !DILocation(line: 3334, column: 6, scope: !6364)
!6726 = !DILocation(line: 3336, column: 3, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6724, file: !3, line: 3334, column: 11)
!6728 = !DILocation(line: 3340, column: 19, scope: !6364)
!6729 = !DILocation(line: 3340, column: 2, scope: !6364)
!6730 = !DILocation(line: 3342, column: 2, scope: !6364)
!6731 = !DILabel(scope: !6364, name: "err_dmaunmap", file: !3, line: 3344)
!6732 = !DILocation(line: 3344, column: 1, scope: !6364)
!6733 = !DILocation(line: 3345, column: 6, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3345, column: 6)
!6735 = !DILocation(line: 3345, column: 12, scope: !6734)
!6736 = !DILocation(line: 3345, column: 20, scope: !6734)
!6737 = !DILocation(line: 3345, column: 23, scope: !6734)
!6738 = !DILocation(line: 3345, column: 29, scope: !6734)
!6739 = !DILocation(line: 3345, column: 38, scope: !6734)
!6740 = !DILocation(line: 3345, column: 6, scope: !6364)
!6741 = !DILocation(line: 3346, column: 3, scope: !6734)
!6742 = !DILocation(line: 3346, column: 9, scope: !6734)
!6743 = !DILocation(line: 3346, column: 18, scope: !6734)
!6744 = !DILocation(line: 3346, column: 23, scope: !6734)
!6745 = !DILocation(line: 3348, column: 14, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 3348, column: 6)
!6747 = !DILocation(line: 3348, column: 20, scope: !6746)
!6748 = !DILocation(line: 3348, column: 27, scope: !6746)
!6749 = !DILocation(line: 3348, column: 7, scope: !6746)
!6750 = !DILocation(line: 3348, column: 6, scope: !6364)
!6751 = !DILocation(line: 3349, column: 24, scope: !6746)
!6752 = !DILocation(line: 3349, column: 30, scope: !6746)
!6753 = !DILocation(line: 3349, column: 37, scope: !6746)
!6754 = !DILocation(line: 3349, column: 3, scope: !6746)
!6755 = !DILocation(line: 3348, column: 31, scope: !6746)
!6756 = !DILabel(scope: !6364, name: "err_clk_ciu", file: !3, line: 3351)
!6757 = !DILocation(line: 3351, column: 1, scope: !6364)
!6758 = !DILocation(line: 3352, column: 24, scope: !6364)
!6759 = !DILocation(line: 3352, column: 30, scope: !6364)
!6760 = !DILocation(line: 3352, column: 2, scope: !6364)
!6761 = !DILabel(scope: !6364, name: "err_clk_biu", file: !3, line: 3354)
!6762 = !DILocation(line: 3354, column: 1, scope: !6364)
!6763 = !DILocation(line: 3355, column: 24, scope: !6364)
!6764 = !DILocation(line: 3355, column: 30, scope: !6364)
!6765 = !DILocation(line: 3355, column: 2, scope: !6364)
!6766 = !DILocation(line: 3357, column: 9, scope: !6364)
!6767 = !DILocation(line: 3357, column: 2, scope: !6364)
!6768 = !DILocation(line: 3358, column: 1, scope: !6364)
!6769 = distinct !DISubprogram(name: "dw_mci_parse_dt", scope: !3, file: !3, line: 3085, type: !6770, scopeLine: 3086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6770 = !DISubroutineType(types: !6771)
!6771 = !{!6175, !286}
!6772 = !DILocalVariable(name: "host", arg: 1, scope: !6769, file: !3, line: 3085, type: !286)
!6773 = !DILocation(line: 3085, column: 60, scope: !6769)
!6774 = !DILocalVariable(name: "pdata", scope: !6769, file: !3, line: 3087, type: !6175)
!6775 = !DILocation(line: 3087, column: 23, scope: !6769)
!6776 = !DILocalVariable(name: "dev", scope: !6769, file: !3, line: 3088, type: !2369)
!6777 = !DILocation(line: 3088, column: 17, scope: !6769)
!6778 = !DILocation(line: 3088, column: 23, scope: !6769)
!6779 = !DILocation(line: 3088, column: 29, scope: !6769)
!6780 = !DILocalVariable(name: "drv_data", scope: !6769, file: !3, line: 3089, type: !6194)
!6781 = !DILocation(line: 3089, column: 32, scope: !6769)
!6782 = !DILocation(line: 3089, column: 43, scope: !6769)
!6783 = !DILocation(line: 3089, column: 49, scope: !6769)
!6784 = !DILocalVariable(name: "ret", scope: !6769, file: !3, line: 3090, type: !446)
!6785 = !DILocation(line: 3090, column: 6, scope: !6769)
!6786 = !DILocalVariable(name: "clock_frequency", scope: !6769, file: !3, line: 3091, type: !309)
!6787 = !DILocation(line: 3091, column: 6, scope: !6769)
!6788 = !DILocation(line: 3093, column: 23, scope: !6769)
!6789 = !DILocation(line: 3093, column: 10, scope: !6769)
!6790 = !DILocation(line: 3093, column: 8, scope: !6769)
!6791 = !DILocation(line: 3094, column: 7, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3094, column: 6)
!6793 = !DILocation(line: 3094, column: 6, scope: !6769)
!6794 = !DILocation(line: 3095, column: 10, scope: !6792)
!6795 = !DILocation(line: 3095, column: 3, scope: !6792)
!6796 = !DILocation(line: 3098, column: 58, scope: !6769)
!6797 = !DILocation(line: 3098, column: 16, scope: !6769)
!6798 = !DILocation(line: 3098, column: 2, scope: !6769)
!6799 = !DILocation(line: 3098, column: 9, scope: !6769)
!6800 = !DILocation(line: 3098, column: 14, scope: !6769)
!6801 = !DILocation(line: 3099, column: 13, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3099, column: 6)
!6803 = !DILocation(line: 3099, column: 20, scope: !6802)
!6804 = !DILocation(line: 3099, column: 6, scope: !6802)
!6805 = !DILocation(line: 3099, column: 6, scope: !6769)
!6806 = !DILocation(line: 3100, column: 15, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 3100, column: 7)
!6808 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 3099, column: 27)
!6809 = !DILocation(line: 3100, column: 22, scope: !6807)
!6810 = !DILocation(line: 3100, column: 7, scope: !6807)
!6811 = !DILocation(line: 3100, column: 28, scope: !6807)
!6812 = !DILocation(line: 3100, column: 7, scope: !6808)
!6813 = !DILocation(line: 3101, column: 11, scope: !6807)
!6814 = !DILocation(line: 3101, column: 4, scope: !6807)
!6815 = !DILocation(line: 3102, column: 2, scope: !6808)
!6816 = !DILocation(line: 3104, column: 31, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3104, column: 6)
!6818 = !DILocation(line: 3104, column: 51, scope: !6817)
!6819 = !DILocation(line: 3104, column: 58, scope: !6817)
!6820 = !DILocation(line: 3104, column: 6, scope: !6817)
!6821 = !DILocation(line: 3104, column: 6, scope: !6769)
!6822 = !DILocation(line: 3105, column: 3, scope: !6817)
!6823 = !DILocation(line: 3108, column: 27, scope: !6769)
!6824 = !DILocation(line: 3109, column: 7, scope: !6769)
!6825 = !DILocation(line: 3109, column: 14, scope: !6769)
!6826 = !DILocation(line: 3108, column: 2, scope: !6769)
!6827 = !DILocation(line: 3111, column: 27, scope: !6769)
!6828 = !DILocation(line: 3111, column: 46, scope: !6769)
!6829 = !DILocation(line: 3111, column: 52, scope: !6769)
!6830 = !DILocation(line: 3111, column: 2, scope: !6769)
!6831 = !DILocation(line: 3113, column: 30, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3113, column: 6)
!6833 = !DILocation(line: 3113, column: 6, scope: !6832)
!6834 = !DILocation(line: 3113, column: 6, scope: !6769)
!6835 = !DILocation(line: 3114, column: 3, scope: !6832)
!6836 = !DILocation(line: 3114, column: 9, scope: !6832)
!6837 = !DILocation(line: 3114, column: 20, scope: !6832)
!6838 = !DILocation(line: 3116, column: 32, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3116, column: 6)
!6840 = !DILocation(line: 3116, column: 7, scope: !6839)
!6841 = !DILocation(line: 3116, column: 6, scope: !6769)
!6842 = !DILocation(line: 3117, column: 19, scope: !6839)
!6843 = !DILocation(line: 3117, column: 3, scope: !6839)
!6844 = !DILocation(line: 3117, column: 10, scope: !6839)
!6845 = !DILocation(line: 3117, column: 17, scope: !6839)
!6846 = !DILocation(line: 3119, column: 6, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3119, column: 6)
!6848 = !DILocation(line: 3119, column: 15, scope: !6847)
!6849 = !DILocation(line: 3119, column: 18, scope: !6847)
!6850 = !DILocation(line: 3119, column: 28, scope: !6847)
!6851 = !DILocation(line: 3119, column: 6, scope: !6769)
!6852 = !DILocation(line: 3120, column: 9, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 3119, column: 38)
!6854 = !DILocation(line: 3120, column: 19, scope: !6853)
!6855 = !DILocation(line: 3120, column: 28, scope: !6853)
!6856 = !DILocation(line: 3120, column: 7, scope: !6853)
!6857 = !DILocation(line: 3121, column: 7, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 3121, column: 7)
!6859 = !DILocation(line: 3121, column: 7, scope: !6853)
!6860 = !DILocation(line: 3122, column: 19, scope: !6858)
!6861 = !DILocation(line: 3122, column: 11, scope: !6858)
!6862 = !DILocation(line: 3122, column: 4, scope: !6858)
!6863 = !DILocation(line: 3123, column: 2, scope: !6853)
!6864 = !DILocation(line: 3125, column: 9, scope: !6769)
!6865 = !DILocation(line: 3125, column: 2, scope: !6769)
!6866 = !DILocation(line: 3126, column: 1, scope: !6769)
!6867 = distinct !DISubprogram(name: "IS_ERR", scope: !6868, file: !6868, line: 34, type: !6869, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6868 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!6869 = !DISubroutineType(types: !6870)
!6870 = !{!314, !2120}
!6871 = !DILocalVariable(name: "ptr", arg: 1, scope: !6867, file: !6868, line: 34, type: !2120)
!6872 = !DILocation(line: 34, column: 60, scope: !6867)
!6873 = !DILocation(line: 36, column: 9, scope: !6867)
!6874 = !DILocation(line: 36, column: 2, scope: !6867)
!6875 = distinct !DISubprogram(name: "PTR_ERR", scope: !6868, file: !6868, line: 29, type: !6876, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!285, !2120}
!6878 = !DILocalVariable(name: "ptr", arg: 1, scope: !6875, file: !6868, line: 29, type: !2120)
!6879 = !DILocation(line: 29, column: 61, scope: !6875)
!6880 = !DILocation(line: 31, column: 16, scope: !6875)
!6881 = !DILocation(line: 31, column: 9, scope: !6875)
!6882 = !DILocation(line: 31, column: 2, scope: !6875)
!6883 = distinct !DISubprogram(name: "clk_prepare_enable", scope: !6232, file: !6232, line: 906, type: !6884, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!446, !6230}
!6886 = !DILocalVariable(name: "clk", arg: 1, scope: !6883, file: !6232, line: 906, type: !6230)
!6887 = !DILocation(line: 906, column: 50, scope: !6883)
!6888 = !DILocalVariable(name: "ret", scope: !6883, file: !6232, line: 908, type: !446)
!6889 = !DILocation(line: 908, column: 6, scope: !6883)
!6890 = !DILocation(line: 910, column: 20, scope: !6883)
!6891 = !DILocation(line: 910, column: 8, scope: !6883)
!6892 = !DILocation(line: 910, column: 6, scope: !6883)
!6893 = !DILocation(line: 911, column: 6, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6883, file: !6232, line: 911, column: 6)
!6895 = !DILocation(line: 911, column: 6, scope: !6883)
!6896 = !DILocation(line: 912, column: 10, scope: !6894)
!6897 = !DILocation(line: 912, column: 3, scope: !6894)
!6898 = !DILocation(line: 913, column: 19, scope: !6883)
!6899 = !DILocation(line: 913, column: 8, scope: !6883)
!6900 = !DILocation(line: 913, column: 6, scope: !6883)
!6901 = !DILocation(line: 914, column: 6, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6883, file: !6232, line: 914, column: 6)
!6903 = !DILocation(line: 914, column: 6, scope: !6883)
!6904 = !DILocation(line: 915, column: 17, scope: !6902)
!6905 = !DILocation(line: 915, column: 3, scope: !6902)
!6906 = !DILocation(line: 917, column: 9, scope: !6883)
!6907 = !DILocation(line: 917, column: 2, scope: !6883)
!6908 = !DILocation(line: 918, column: 1, scope: !6883)
!6909 = distinct !DISubprogram(name: "dw_mci_cmd11_timer", scope: !3, file: !3, line: 2964, type: !2567, scopeLine: 2965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6910 = !DILocalVariable(name: "t", arg: 1, scope: !6909, file: !3, line: 2964, type: !2569)
!6911 = !DILocation(line: 2964, column: 51, scope: !6909)
!6912 = !DILocalVariable(name: "host", scope: !6909, file: !3, line: 2966, type: !286)
!6913 = !DILocation(line: 2966, column: 17, scope: !6909)
!6914 = !DILocalVariable(name: "__mptr", scope: !6915, file: !3, line: 2966, type: !284)
!6915 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2966, column: 24)
!6916 = !DILocation(line: 2966, column: 24, scope: !6915)
!6917 = !DILocation(line: 2966, column: 24, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 2966, column: 24)
!6919 = !DILocation(line: 2968, column: 6, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 2968, column: 6)
!6921 = !DILocation(line: 2968, column: 12, scope: !6920)
!6922 = !DILocation(line: 2968, column: 18, scope: !6920)
!6923 = !DILocation(line: 2968, column: 6, scope: !6909)
!6924 = !DILocation(line: 2969, column: 3, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !3, line: 2968, column: 42)
!6926 = !DILocation(line: 2970, column: 3, scope: !6925)
!6927 = !DILocation(line: 2973, column: 2, scope: !6909)
!6928 = !DILocation(line: 2973, column: 8, scope: !6909)
!6929 = !DILocation(line: 2973, column: 19, scope: !6909)
!6930 = !DILocation(line: 2974, column: 31, scope: !6909)
!6931 = !DILocation(line: 2974, column: 37, scope: !6909)
!6932 = !DILocation(line: 2974, column: 2, scope: !6909)
!6933 = !DILocation(line: 2975, column: 20, scope: !6909)
!6934 = !DILocation(line: 2975, column: 26, scope: !6909)
!6935 = !DILocation(line: 2975, column: 2, scope: !6909)
!6936 = !DILocation(line: 2976, column: 1, scope: !6909)
!6937 = distinct !DISubprogram(name: "dw_mci_cto_timer", scope: !3, file: !3, line: 2978, type: !2567, scopeLine: 2979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6938 = !DILocalVariable(name: "lock", arg: 1, scope: !6939, file: !6367, line: 407, type: !2294)
!6939 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6367, file: !6367, line: 407, type: !6940, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{null, !2294, !281}
!6942 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !6943)
!6943 = distinct !DILocation(line: 3030, column: 2, scope: !6937)
!6944 = !DILocalVariable(name: "flags", arg: 2, scope: !6939, file: !6367, line: 407, type: !281)
!6945 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !6943)
!6946 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !6947)
!6947 = distinct !DILocation(line: 2984, column: 2, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2984, column: 2)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 2984, column: 2)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2984, column: 2)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 2984, column: 2)
!6952 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 2984, column: 2)
!6953 = !DILocalVariable(name: "t", arg: 1, scope: !6937, file: !3, line: 2978, type: !2569)
!6954 = !DILocation(line: 2978, column: 49, scope: !6937)
!6955 = !DILocalVariable(name: "host", scope: !6937, file: !3, line: 2980, type: !286)
!6956 = !DILocation(line: 2980, column: 17, scope: !6937)
!6957 = !DILocalVariable(name: "__mptr", scope: !6958, file: !3, line: 2980, type: !284)
!6958 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 2980, column: 24)
!6959 = !DILocation(line: 2980, column: 24, scope: !6958)
!6960 = !DILocation(line: 2980, column: 24, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 2980, column: 24)
!6962 = !DILocalVariable(name: "irqflags", scope: !6937, file: !3, line: 2981, type: !281)
!6963 = !DILocation(line: 2981, column: 16, scope: !6937)
!6964 = !DILocalVariable(name: "pending", scope: !6937, file: !3, line: 2982, type: !309)
!6965 = !DILocation(line: 2982, column: 6, scope: !6937)
!6966 = !DILocation(line: 2984, column: 2, scope: !6937)
!6967 = !DILocation(line: 2984, column: 2, scope: !6952)
!6968 = !DILocalVariable(name: "__dummy", scope: !6969, file: !3, line: 2984, type: !281)
!6969 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2984, column: 2)
!6970 = !DILocation(line: 2984, column: 2, scope: !6969)
!6971 = !DILocalVariable(name: "__dummy2", scope: !6969, file: !3, line: 2984, type: !281)
!6972 = !DILocation(line: 2984, column: 2, scope: !6951)
!6973 = !DILocation(line: 2984, column: 2, scope: !6950)
!6974 = !DILocation(line: 2984, column: 2, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 2984, column: 2)
!6976 = !DILocalVariable(name: "__dummy", scope: !6977, file: !3, line: 2984, type: !281)
!6977 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 2984, column: 2)
!6978 = distinct !DILexicalBlock(scope: !6975, file: !3, line: 2984, column: 2)
!6979 = !DILocation(line: 2984, column: 2, scope: !6977)
!6980 = !DILocalVariable(name: "__dummy2", scope: !6977, file: !3, line: 2984, type: !281)
!6981 = !DILocation(line: 2984, column: 2, scope: !6978)
!6982 = !DILocation(line: 2984, column: 2, scope: !6949)
!6983 = !{i32 -2140134228}
!6984 = !DILocation(line: 2984, column: 2, scope: !6948)
!6985 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !6947)
!6986 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !6947)
!6987 = !DILocation(line: 2994, column: 12, scope: !6937)
!6988 = !DILocation(line: 2994, column: 10, scope: !6937)
!6989 = !DILocation(line: 2995, column: 6, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 2995, column: 6)
!6991 = !DILocation(line: 2995, column: 14, scope: !6990)
!6992 = !DILocation(line: 2995, column: 6, scope: !6937)
!6993 = !DILocation(line: 2997, column: 3, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 2995, column: 63)
!6995 = !DILocation(line: 2998, column: 3, scope: !6994)
!6996 = !DILocation(line: 3000, column: 36, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3000, column: 6)
!6998 = !DILocation(line: 3000, column: 42, scope: !6997)
!6999 = !DILocation(line: 3000, column: 6, scope: !6997)
!7000 = !DILocation(line: 3000, column: 6, scope: !6937)
!7001 = !DILocation(line: 3002, column: 3, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 3000, column: 59)
!7003 = !DILocation(line: 3003, column: 3, scope: !7002)
!7004 = !DILocation(line: 3010, column: 10, scope: !6937)
!7005 = !DILocation(line: 3010, column: 16, scope: !6937)
!7006 = !DILocation(line: 3010, column: 2, scope: !6937)
!7007 = !DILocation(line: 3019, column: 3, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3010, column: 23)
!7009 = !DILocation(line: 3019, column: 9, scope: !7008)
!7010 = !DILocation(line: 3019, column: 20, scope: !7008)
!7011 = !DILocation(line: 3020, column: 32, scope: !7008)
!7012 = !DILocation(line: 3020, column: 38, scope: !7008)
!7013 = !DILocation(line: 3020, column: 3, scope: !7008)
!7014 = !DILocation(line: 3021, column: 21, scope: !7008)
!7015 = !DILocation(line: 3021, column: 27, scope: !7008)
!7016 = !DILocation(line: 3021, column: 3, scope: !7008)
!7017 = !DILocation(line: 3022, column: 3, scope: !7008)
!7018 = !DILocation(line: 3024, column: 3, scope: !7008)
!7019 = !DILocation(line: 3026, column: 3, scope: !7008)
!7020 = !DILocation(line: 3027, column: 2, scope: !7008)
!7021 = !DILabel(scope: !6937, name: "exit", file: !3, line: 3029)
!7022 = !DILocation(line: 3029, column: 1, scope: !6937)
!7023 = !DILocation(line: 3030, column: 26, scope: !6937)
!7024 = !DILocation(line: 3030, column: 32, scope: !6937)
!7025 = !DILocation(line: 3030, column: 42, scope: !6937)
!7026 = !DILocalVariable(name: "__dummy", scope: !7027, file: !6367, line: 409, type: !281)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !6367, line: 409, column: 2)
!7028 = distinct !DILexicalBlock(scope: !6939, file: !6367, line: 409, column: 2)
!7029 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !6943)
!7030 = !DILocalVariable(name: "__dummy2", scope: !7027, file: !6367, line: 409, type: !281)
!7031 = !DILocalVariable(name: "__dummy", scope: !7032, file: !6367, line: 409, type: !281)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6367, line: 409, column: 2)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6367, line: 409, column: 2)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6367, line: 409, column: 2)
!7035 = distinct !DILexicalBlock(scope: !7028, file: !6367, line: 409, column: 2)
!7036 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !6943)
!7037 = !DILocalVariable(name: "__dummy2", scope: !7032, file: !6367, line: 409, type: !281)
!7038 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !6943)
!7039 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !6943)
!7040 = distinct !DILexicalBlock(scope: !7035, file: !6367, line: 409, column: 2)
!7041 = !{i32 -2145190223}
!7042 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !6943)
!7043 = distinct !DILexicalBlock(scope: !7040, file: !6367, line: 409, column: 2)
!7044 = !DILocation(line: 3031, column: 1, scope: !6937)
!7045 = distinct !DISubprogram(name: "dw_mci_dto_timer", scope: !3, file: !3, line: 3033, type: !2567, scopeLine: 3034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7046 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !7047)
!7047 = distinct !DILocation(line: 3081, column: 2, scope: !7045)
!7048 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !7047)
!7049 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !7050)
!7050 = distinct !DILocation(line: 3039, column: 2, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 3039, column: 2)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 3039, column: 2)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 3039, column: 2)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 3039, column: 2)
!7055 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 3039, column: 2)
!7056 = !DILocalVariable(name: "t", arg: 1, scope: !7045, file: !3, line: 3033, type: !2569)
!7057 = !DILocation(line: 3033, column: 49, scope: !7045)
!7058 = !DILocalVariable(name: "host", scope: !7045, file: !3, line: 3035, type: !286)
!7059 = !DILocation(line: 3035, column: 17, scope: !7045)
!7060 = !DILocalVariable(name: "__mptr", scope: !7061, file: !3, line: 3035, type: !284)
!7061 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 3035, column: 24)
!7062 = !DILocation(line: 3035, column: 24, scope: !7061)
!7063 = !DILocation(line: 3035, column: 24, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 3035, column: 24)
!7065 = !DILocalVariable(name: "irqflags", scope: !7045, file: !3, line: 3036, type: !281)
!7066 = !DILocation(line: 3036, column: 16, scope: !7045)
!7067 = !DILocalVariable(name: "pending", scope: !7045, file: !3, line: 3037, type: !309)
!7068 = !DILocation(line: 3037, column: 6, scope: !7045)
!7069 = !DILocation(line: 3039, column: 2, scope: !7045)
!7070 = !DILocation(line: 3039, column: 2, scope: !7055)
!7071 = !DILocalVariable(name: "__dummy", scope: !7072, file: !3, line: 3039, type: !281)
!7072 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 3039, column: 2)
!7073 = !DILocation(line: 3039, column: 2, scope: !7072)
!7074 = !DILocalVariable(name: "__dummy2", scope: !7072, file: !3, line: 3039, type: !281)
!7075 = !DILocation(line: 3039, column: 2, scope: !7054)
!7076 = !DILocation(line: 3039, column: 2, scope: !7053)
!7077 = !DILocation(line: 3039, column: 2, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 3039, column: 2)
!7079 = !DILocalVariable(name: "__dummy", scope: !7080, file: !3, line: 3039, type: !281)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 3039, column: 2)
!7081 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 3039, column: 2)
!7082 = !DILocation(line: 3039, column: 2, scope: !7080)
!7083 = !DILocalVariable(name: "__dummy2", scope: !7080, file: !3, line: 3039, type: !281)
!7084 = !DILocation(line: 3039, column: 2, scope: !7081)
!7085 = !DILocation(line: 3039, column: 2, scope: !7052)
!7086 = !{i32 -2140130545}
!7087 = !DILocation(line: 3039, column: 2, scope: !7051)
!7088 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !7050)
!7089 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !7050)
!7090 = !DILocation(line: 3045, column: 12, scope: !7045)
!7091 = !DILocation(line: 3045, column: 10, scope: !7045)
!7092 = !DILocation(line: 3046, column: 6, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 3046, column: 6)
!7094 = !DILocation(line: 3046, column: 14, scope: !7093)
!7095 = !DILocation(line: 3046, column: 6, scope: !7045)
!7096 = !DILocation(line: 3048, column: 3, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 3046, column: 37)
!7098 = !DILocation(line: 3049, column: 3, scope: !7097)
!7099 = !DILocation(line: 3051, column: 37, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 3051, column: 6)
!7101 = !DILocation(line: 3051, column: 43, scope: !7100)
!7102 = !DILocation(line: 3051, column: 6, scope: !7100)
!7103 = !DILocation(line: 3051, column: 6, scope: !7045)
!7104 = !DILocation(line: 3053, column: 3, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7100, file: !3, line: 3051, column: 60)
!7106 = !DILocation(line: 3054, column: 3, scope: !7105)
!7107 = !DILocation(line: 3061, column: 10, scope: !7045)
!7108 = !DILocation(line: 3061, column: 16, scope: !7045)
!7109 = !DILocation(line: 3061, column: 2, scope: !7045)
!7110 = !DILocation(line: 3069, column: 3, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 3061, column: 23)
!7112 = !DILocation(line: 3069, column: 9, scope: !7111)
!7113 = !DILocation(line: 3069, column: 21, scope: !7111)
!7114 = !DILocation(line: 3070, column: 30, scope: !7111)
!7115 = !DILocation(line: 3070, column: 36, scope: !7111)
!7116 = !DILocation(line: 3070, column: 3, scope: !7111)
!7117 = !DILocation(line: 3071, column: 33, scope: !7111)
!7118 = !DILocation(line: 3071, column: 39, scope: !7111)
!7119 = !DILocation(line: 3071, column: 3, scope: !7111)
!7120 = !DILocation(line: 3072, column: 21, scope: !7111)
!7121 = !DILocation(line: 3072, column: 27, scope: !7111)
!7122 = !DILocation(line: 3072, column: 3, scope: !7111)
!7123 = !DILocation(line: 3073, column: 3, scope: !7111)
!7124 = !DILocation(line: 3075, column: 3, scope: !7111)
!7125 = !DILocation(line: 3077, column: 3, scope: !7111)
!7126 = !DILocation(line: 3078, column: 2, scope: !7111)
!7127 = !DILabel(scope: !7045, name: "exit", file: !3, line: 3080)
!7128 = !DILocation(line: 3080, column: 1, scope: !7045)
!7129 = !DILocation(line: 3081, column: 26, scope: !7045)
!7130 = !DILocation(line: 3081, column: 32, scope: !7045)
!7131 = !DILocation(line: 3081, column: 42, scope: !7045)
!7132 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !7047)
!7133 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !7047)
!7134 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !7047)
!7135 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !7047)
!7136 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !7047)
!7137 = !DILocation(line: 3082, column: 1, scope: !7045)
!7138 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7139, file: !7139, line: 33, type: !7140, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7139 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7140 = !DISubroutineType(types: !7141)
!7141 = !{null, !349}
!7142 = !DILocalVariable(name: "list", arg: 1, scope: !7138, file: !7139, line: 33, type: !349)
!7143 = !DILocation(line: 33, column: 53, scope: !7138)
!7144 = !DILocation(line: 35, column: 2, scope: !7138)
!7145 = !DILocation(line: 35, column: 2, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7138, file: !7139, line: 35, column: 2)
!7147 = !DILocation(line: 35, column: 2, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7146, file: !7139, line: 35, column: 2)
!7149 = !DILocation(line: 35, column: 2, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7146, file: !7139, line: 35, column: 2)
!7151 = !DILocation(line: 36, column: 15, scope: !7138)
!7152 = !DILocation(line: 36, column: 2, scope: !7138)
!7153 = !DILocation(line: 36, column: 8, scope: !7138)
!7154 = !DILocation(line: 36, column: 13, scope: !7138)
!7155 = !DILocation(line: 37, column: 1, scope: !7138)
!7156 = distinct !DISubprogram(name: "__readl", scope: !7157, file: !7157, line: 63, type: !7158, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7157 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!7158 = !DISubroutineType(types: !7159)
!7159 = !{!7, !7160}
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7161, size: 64)
!7161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7162)
!7162 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7163 = !DILocalVariable(name: "addr", arg: 1, scope: !7156, file: !7157, line: 63, type: !7160)
!7164 = !DILocation(line: 63, column: 1, scope: !7156)
!7165 = !DILocalVariable(name: "ret", scope: !7156, file: !7157, line: 63, type: !7)
!7166 = !{i32 -2141843551}
!7167 = distinct !DISubprogram(name: "dw_mci_push_data16", scope: !3, file: !3, line: 2218, type: !6247, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7168 = !DILocalVariable(name: "host", arg: 1, scope: !7167, file: !3, line: 2218, type: !286)
!7169 = !DILocation(line: 2218, column: 47, scope: !7167)
!7170 = !DILocalVariable(name: "buf", arg: 2, scope: !7167, file: !3, line: 2218, type: !284)
!7171 = !DILocation(line: 2218, column: 59, scope: !7167)
!7172 = !DILocalVariable(name: "cnt", arg: 3, scope: !7167, file: !3, line: 2218, type: !446)
!7173 = !DILocation(line: 2218, column: 68, scope: !7167)
!7174 = !DILocalVariable(name: "data", scope: !7167, file: !3, line: 2220, type: !5364)
!7175 = !DILocation(line: 2220, column: 19, scope: !7167)
!7176 = !DILocation(line: 2220, column: 26, scope: !7167)
!7177 = !DILocation(line: 2220, column: 32, scope: !7167)
!7178 = !DILocalVariable(name: "init_cnt", scope: !7167, file: !3, line: 2221, type: !446)
!7179 = !DILocation(line: 2221, column: 6, scope: !7167)
!7180 = !DILocation(line: 2221, column: 17, scope: !7167)
!7181 = !DILocation(line: 2224, column: 6, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2224, column: 6)
!7183 = !DILocation(line: 2224, column: 6, scope: !7167)
!7184 = !DILocalVariable(name: "len", scope: !7185, file: !3, line: 2225, type: !446)
!7185 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 2224, column: 38)
!7186 = !DILocation(line: 2225, column: 7, scope: !7185)
!7187 = !DILocation(line: 2225, column: 36, scope: !7185)
!7188 = !DILocation(line: 2225, column: 42, scope: !7185)
!7189 = !DILocation(line: 2225, column: 47, scope: !7185)
!7190 = !DILocation(line: 2225, column: 13, scope: !7185)
!7191 = !DILocation(line: 2227, column: 10, scope: !7185)
!7192 = !DILocation(line: 2227, column: 7, scope: !7185)
!7193 = !DILocation(line: 2228, column: 10, scope: !7185)
!7194 = !DILocation(line: 2228, column: 7, scope: !7185)
!7195 = !DILocation(line: 2229, column: 7, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 2229, column: 7)
!7197 = !DILocation(line: 2229, column: 13, scope: !7196)
!7198 = !DILocation(line: 2229, column: 28, scope: !7196)
!7199 = !DILocation(line: 2229, column: 7, scope: !7185)
!7200 = !DILocation(line: 2230, column: 4, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 2229, column: 34)
!7202 = !DILocation(line: 2231, column: 4, scope: !7201)
!7203 = !DILocation(line: 2231, column: 10, scope: !7201)
!7204 = !DILocation(line: 2231, column: 25, scope: !7201)
!7205 = !DILocation(line: 2232, column: 3, scope: !7201)
!7206 = !DILocation(line: 2233, column: 2, scope: !7185)
!7207 = !DILocalVariable(name: "pdata", scope: !7208, file: !3, line: 2252, type: !7209)
!7208 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2251, column: 2)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!7210 = !DILocation(line: 2252, column: 8, scope: !7208)
!7211 = !DILocation(line: 2252, column: 16, scope: !7208)
!7212 = !DILocation(line: 2254, column: 3, scope: !7208)
!7213 = !DILocation(line: 2254, column: 10, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2254, column: 3)
!7215 = distinct !DILexicalBlock(scope: !7208, file: !3, line: 2254, column: 3)
!7216 = !DILocation(line: 2254, column: 14, scope: !7214)
!7217 = !DILocation(line: 2254, column: 3, scope: !7215)
!7218 = !DILocation(line: 2255, column: 4, scope: !7214)
!7219 = !DILocation(line: 2254, column: 24, scope: !7214)
!7220 = !DILocation(line: 2254, column: 3, scope: !7214)
!7221 = distinct !{!7221, !7217, !7222}
!7222 = !DILocation(line: 2255, column: 4, scope: !7215)
!7223 = !DILocation(line: 2256, column: 9, scope: !7208)
!7224 = !DILocation(line: 2256, column: 7, scope: !7208)
!7225 = !DILocation(line: 2259, column: 6, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 2259, column: 6)
!7227 = !DILocation(line: 2259, column: 6, scope: !7167)
!7228 = !DILocation(line: 2260, column: 25, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 2259, column: 11)
!7230 = !DILocation(line: 2260, column: 31, scope: !7229)
!7231 = !DILocation(line: 2260, column: 36, scope: !7229)
!7232 = !DILocation(line: 2260, column: 3, scope: !7229)
!7233 = !DILocation(line: 2262, column: 8, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7229, file: !3, line: 2262, column: 7)
!7235 = !DILocation(line: 2262, column: 14, scope: !7234)
!7236 = !DILocation(line: 2262, column: 29, scope: !7234)
!7237 = !DILocation(line: 2262, column: 27, scope: !7234)
!7238 = !DILocation(line: 2263, column: 8, scope: !7234)
!7239 = !DILocation(line: 2263, column: 14, scope: !7234)
!7240 = !DILocation(line: 2263, column: 22, scope: !7234)
!7241 = !DILocation(line: 2263, column: 28, scope: !7234)
!7242 = !DILocation(line: 2263, column: 20, scope: !7234)
!7243 = !DILocation(line: 2262, column: 39, scope: !7234)
!7244 = !DILocation(line: 2262, column: 7, scope: !7229)
!7245 = !DILocation(line: 2264, column: 4, scope: !7234)
!7246 = !DILocation(line: 2265, column: 2, scope: !7229)
!7247 = !DILocation(line: 2266, column: 1, scope: !7167)
!7248 = distinct !DISubprogram(name: "dw_mci_pull_data16", scope: !3, file: !3, line: 2268, type: !6247, scopeLine: 2269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7249 = !DILocalVariable(name: "host", arg: 1, scope: !7248, file: !3, line: 2268, type: !286)
!7250 = !DILocation(line: 2268, column: 47, scope: !7248)
!7251 = !DILocalVariable(name: "buf", arg: 2, scope: !7248, file: !3, line: 2268, type: !284)
!7252 = !DILocation(line: 2268, column: 59, scope: !7248)
!7253 = !DILocalVariable(name: "cnt", arg: 3, scope: !7248, file: !3, line: 2268, type: !446)
!7254 = !DILocation(line: 2268, column: 68, scope: !7248)
!7255 = !DILocalVariable(name: "pdata", scope: !7256, file: !3, line: 2289, type: !7209)
!7256 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 2288, column: 2)
!7257 = !DILocation(line: 2289, column: 8, scope: !7256)
!7258 = !DILocation(line: 2289, column: 16, scope: !7256)
!7259 = !DILocation(line: 2291, column: 3, scope: !7256)
!7260 = !DILocation(line: 2291, column: 10, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 2291, column: 3)
!7262 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 2291, column: 3)
!7263 = !DILocation(line: 2291, column: 14, scope: !7261)
!7264 = !DILocation(line: 2291, column: 3, scope: !7262)
!7265 = !DILocation(line: 2292, column: 15, scope: !7261)
!7266 = !DILocation(line: 2292, column: 10, scope: !7261)
!7267 = !DILocation(line: 2292, column: 13, scope: !7261)
!7268 = !DILocation(line: 2292, column: 4, scope: !7261)
!7269 = !DILocation(line: 2291, column: 24, scope: !7261)
!7270 = !DILocation(line: 2291, column: 3, scope: !7261)
!7271 = distinct !{!7271, !7264, !7272}
!7272 = !DILocation(line: 2292, column: 15, scope: !7262)
!7273 = !DILocation(line: 2293, column: 9, scope: !7256)
!7274 = !DILocation(line: 2293, column: 7, scope: !7256)
!7275 = !DILocation(line: 2295, column: 6, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 2295, column: 6)
!7277 = !DILocation(line: 2295, column: 6, scope: !7248)
!7278 = !DILocation(line: 2296, column: 22, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 2295, column: 11)
!7280 = !DILocation(line: 2296, column: 3, scope: !7279)
!7281 = !DILocation(line: 2296, column: 9, scope: !7279)
!7282 = !DILocation(line: 2296, column: 20, scope: !7279)
!7283 = !DILocation(line: 2297, column: 27, scope: !7279)
!7284 = !DILocation(line: 2297, column: 33, scope: !7279)
!7285 = !DILocation(line: 2297, column: 38, scope: !7279)
!7286 = !DILocation(line: 2297, column: 3, scope: !7279)
!7287 = !DILocation(line: 2298, column: 2, scope: !7279)
!7288 = !DILocation(line: 2299, column: 1, scope: !7248)
!7289 = distinct !DISubprogram(name: "dw_mci_push_data64", scope: !3, file: !3, line: 2384, type: !6247, scopeLine: 2385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7290 = !DILocalVariable(name: "host", arg: 1, scope: !7289, file: !3, line: 2384, type: !286)
!7291 = !DILocation(line: 2384, column: 47, scope: !7289)
!7292 = !DILocalVariable(name: "buf", arg: 2, scope: !7289, file: !3, line: 2384, type: !284)
!7293 = !DILocation(line: 2384, column: 59, scope: !7289)
!7294 = !DILocalVariable(name: "cnt", arg: 3, scope: !7289, file: !3, line: 2384, type: !446)
!7295 = !DILocation(line: 2384, column: 68, scope: !7289)
!7296 = !DILocalVariable(name: "data", scope: !7289, file: !3, line: 2386, type: !5364)
!7297 = !DILocation(line: 2386, column: 19, scope: !7289)
!7298 = !DILocation(line: 2386, column: 26, scope: !7289)
!7299 = !DILocation(line: 2386, column: 32, scope: !7289)
!7300 = !DILocalVariable(name: "init_cnt", scope: !7289, file: !3, line: 2387, type: !446)
!7301 = !DILocation(line: 2387, column: 6, scope: !7289)
!7302 = !DILocation(line: 2387, column: 17, scope: !7289)
!7303 = !DILocation(line: 2390, column: 6, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 2390, column: 6)
!7305 = !DILocation(line: 2390, column: 6, scope: !7289)
!7306 = !DILocalVariable(name: "len", scope: !7307, file: !3, line: 2391, type: !446)
!7307 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 2390, column: 38)
!7308 = !DILocation(line: 2391, column: 7, scope: !7307)
!7309 = !DILocation(line: 2391, column: 36, scope: !7307)
!7310 = !DILocation(line: 2391, column: 42, scope: !7307)
!7311 = !DILocation(line: 2391, column: 47, scope: !7307)
!7312 = !DILocation(line: 2391, column: 13, scope: !7307)
!7313 = !DILocation(line: 2393, column: 10, scope: !7307)
!7314 = !DILocation(line: 2393, column: 7, scope: !7307)
!7315 = !DILocation(line: 2394, column: 10, scope: !7307)
!7316 = !DILocation(line: 2394, column: 7, scope: !7307)
!7317 = !DILocation(line: 2396, column: 7, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 2396, column: 7)
!7319 = !DILocation(line: 2396, column: 13, scope: !7318)
!7320 = !DILocation(line: 2396, column: 28, scope: !7318)
!7321 = !DILocation(line: 2396, column: 7, scope: !7307)
!7322 = !DILocation(line: 2397, column: 4, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 2396, column: 34)
!7324 = !DILocation(line: 2398, column: 4, scope: !7323)
!7325 = !DILocation(line: 2398, column: 10, scope: !7323)
!7326 = !DILocation(line: 2398, column: 25, scope: !7323)
!7327 = !DILocation(line: 2399, column: 3, scope: !7323)
!7328 = !DILocation(line: 2400, column: 2, scope: !7307)
!7329 = !DILocalVariable(name: "pdata", scope: !7330, file: !3, line: 2419, type: !3073)
!7330 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 2418, column: 2)
!7331 = !DILocation(line: 2419, column: 8, scope: !7330)
!7332 = !DILocation(line: 2419, column: 16, scope: !7330)
!7333 = !DILocation(line: 2421, column: 3, scope: !7330)
!7334 = !DILocation(line: 2421, column: 10, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2421, column: 3)
!7336 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 2421, column: 3)
!7337 = !DILocation(line: 2421, column: 14, scope: !7335)
!7338 = !DILocation(line: 2421, column: 3, scope: !7336)
!7339 = !DILocation(line: 2422, column: 4, scope: !7335)
!7340 = !DILocation(line: 2421, column: 24, scope: !7335)
!7341 = !DILocation(line: 2421, column: 3, scope: !7335)
!7342 = distinct !{!7342, !7338, !7343}
!7343 = !DILocation(line: 2422, column: 4, scope: !7336)
!7344 = !DILocation(line: 2423, column: 9, scope: !7330)
!7345 = !DILocation(line: 2423, column: 7, scope: !7330)
!7346 = !DILocation(line: 2426, column: 6, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 2426, column: 6)
!7348 = !DILocation(line: 2426, column: 6, scope: !7289)
!7349 = !DILocation(line: 2427, column: 25, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 2426, column: 11)
!7351 = !DILocation(line: 2427, column: 31, scope: !7350)
!7352 = !DILocation(line: 2427, column: 36, scope: !7350)
!7353 = !DILocation(line: 2427, column: 3, scope: !7350)
!7354 = !DILocation(line: 2429, column: 8, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 2429, column: 7)
!7356 = !DILocation(line: 2429, column: 14, scope: !7355)
!7357 = !DILocation(line: 2429, column: 29, scope: !7355)
!7358 = !DILocation(line: 2429, column: 27, scope: !7355)
!7359 = !DILocation(line: 2430, column: 8, scope: !7355)
!7360 = !DILocation(line: 2430, column: 14, scope: !7355)
!7361 = !DILocation(line: 2430, column: 22, scope: !7355)
!7362 = !DILocation(line: 2430, column: 28, scope: !7355)
!7363 = !DILocation(line: 2430, column: 20, scope: !7355)
!7364 = !DILocation(line: 2429, column: 39, scope: !7355)
!7365 = !DILocation(line: 2429, column: 7, scope: !7350)
!7366 = !DILocation(line: 2431, column: 4, scope: !7355)
!7367 = !DILocation(line: 2432, column: 2, scope: !7350)
!7368 = !DILocation(line: 2433, column: 1, scope: !7289)
!7369 = distinct !DISubprogram(name: "dw_mci_pull_data64", scope: !3, file: !3, line: 2435, type: !6247, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7370 = !DILocalVariable(name: "host", arg: 1, scope: !7369, file: !3, line: 2435, type: !286)
!7371 = !DILocation(line: 2435, column: 47, scope: !7369)
!7372 = !DILocalVariable(name: "buf", arg: 2, scope: !7369, file: !3, line: 2435, type: !284)
!7373 = !DILocation(line: 2435, column: 59, scope: !7369)
!7374 = !DILocalVariable(name: "cnt", arg: 3, scope: !7369, file: !3, line: 2435, type: !446)
!7375 = !DILocation(line: 2435, column: 68, scope: !7369)
!7376 = !DILocalVariable(name: "pdata", scope: !7377, file: !3, line: 2457, type: !3073)
!7377 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2456, column: 2)
!7378 = !DILocation(line: 2457, column: 8, scope: !7377)
!7379 = !DILocation(line: 2457, column: 16, scope: !7377)
!7380 = !DILocation(line: 2459, column: 3, scope: !7377)
!7381 = !DILocation(line: 2459, column: 10, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 2459, column: 3)
!7383 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 2459, column: 3)
!7384 = !DILocation(line: 2459, column: 14, scope: !7382)
!7385 = !DILocation(line: 2459, column: 3, scope: !7383)
!7386 = !DILocation(line: 2460, column: 15, scope: !7382)
!7387 = !DILocation(line: 2460, column: 10, scope: !7382)
!7388 = !DILocation(line: 2460, column: 13, scope: !7382)
!7389 = !DILocation(line: 2460, column: 4, scope: !7382)
!7390 = !DILocation(line: 2459, column: 24, scope: !7382)
!7391 = !DILocation(line: 2459, column: 3, scope: !7382)
!7392 = distinct !{!7392, !7385, !7393}
!7393 = !DILocation(line: 2460, column: 15, scope: !7383)
!7394 = !DILocation(line: 2461, column: 9, scope: !7377)
!7395 = !DILocation(line: 2461, column: 7, scope: !7377)
!7396 = !DILocation(line: 2463, column: 6, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2463, column: 6)
!7398 = !DILocation(line: 2463, column: 6, scope: !7369)
!7399 = !DILocation(line: 2464, column: 20, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 2463, column: 11)
!7401 = !DILocation(line: 2464, column: 3, scope: !7400)
!7402 = !DILocation(line: 2464, column: 9, scope: !7400)
!7403 = !DILocation(line: 2464, column: 18, scope: !7400)
!7404 = !DILocation(line: 2465, column: 27, scope: !7400)
!7405 = !DILocation(line: 2465, column: 33, scope: !7400)
!7406 = !DILocation(line: 2465, column: 38, scope: !7400)
!7407 = !DILocation(line: 2465, column: 3, scope: !7400)
!7408 = !DILocation(line: 2466, column: 2, scope: !7400)
!7409 = !DILocation(line: 2467, column: 1, scope: !7369)
!7410 = distinct !DISubprogram(name: "dw_mci_push_data32", scope: !3, file: !3, line: 2301, type: !6247, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7411 = !DILocalVariable(name: "host", arg: 1, scope: !7410, file: !3, line: 2301, type: !286)
!7412 = !DILocation(line: 2301, column: 47, scope: !7410)
!7413 = !DILocalVariable(name: "buf", arg: 2, scope: !7410, file: !3, line: 2301, type: !284)
!7414 = !DILocation(line: 2301, column: 59, scope: !7410)
!7415 = !DILocalVariable(name: "cnt", arg: 3, scope: !7410, file: !3, line: 2301, type: !446)
!7416 = !DILocation(line: 2301, column: 68, scope: !7410)
!7417 = !DILocalVariable(name: "data", scope: !7410, file: !3, line: 2303, type: !5364)
!7418 = !DILocation(line: 2303, column: 19, scope: !7410)
!7419 = !DILocation(line: 2303, column: 26, scope: !7410)
!7420 = !DILocation(line: 2303, column: 32, scope: !7410)
!7421 = !DILocalVariable(name: "init_cnt", scope: !7410, file: !3, line: 2304, type: !446)
!7422 = !DILocation(line: 2304, column: 6, scope: !7410)
!7423 = !DILocation(line: 2304, column: 17, scope: !7410)
!7424 = !DILocation(line: 2307, column: 6, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2307, column: 6)
!7426 = !DILocation(line: 2307, column: 6, scope: !7410)
!7427 = !DILocalVariable(name: "len", scope: !7428, file: !3, line: 2308, type: !446)
!7428 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 2307, column: 38)
!7429 = !DILocation(line: 2308, column: 7, scope: !7428)
!7430 = !DILocation(line: 2308, column: 36, scope: !7428)
!7431 = !DILocation(line: 2308, column: 42, scope: !7428)
!7432 = !DILocation(line: 2308, column: 47, scope: !7428)
!7433 = !DILocation(line: 2308, column: 13, scope: !7428)
!7434 = !DILocation(line: 2310, column: 10, scope: !7428)
!7435 = !DILocation(line: 2310, column: 7, scope: !7428)
!7436 = !DILocation(line: 2311, column: 10, scope: !7428)
!7437 = !DILocation(line: 2311, column: 7, scope: !7428)
!7438 = !DILocation(line: 2312, column: 7, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 2312, column: 7)
!7440 = !DILocation(line: 2312, column: 13, scope: !7439)
!7441 = !DILocation(line: 2312, column: 28, scope: !7439)
!7442 = !DILocation(line: 2312, column: 7, scope: !7428)
!7443 = !DILocation(line: 2313, column: 4, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 2312, column: 34)
!7445 = !DILocation(line: 2314, column: 4, scope: !7444)
!7446 = !DILocation(line: 2314, column: 10, scope: !7444)
!7447 = !DILocation(line: 2314, column: 25, scope: !7444)
!7448 = !DILocation(line: 2315, column: 3, scope: !7444)
!7449 = !DILocation(line: 2316, column: 2, scope: !7428)
!7450 = !DILocalVariable(name: "pdata", scope: !7451, file: !3, line: 2335, type: !1236)
!7451 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2334, column: 2)
!7452 = !DILocation(line: 2335, column: 8, scope: !7451)
!7453 = !DILocation(line: 2335, column: 16, scope: !7451)
!7454 = !DILocation(line: 2337, column: 3, scope: !7451)
!7455 = !DILocation(line: 2337, column: 10, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7457, file: !3, line: 2337, column: 3)
!7457 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 2337, column: 3)
!7458 = !DILocation(line: 2337, column: 14, scope: !7456)
!7459 = !DILocation(line: 2337, column: 3, scope: !7457)
!7460 = !DILocation(line: 2338, column: 4, scope: !7456)
!7461 = !DILocation(line: 2337, column: 24, scope: !7456)
!7462 = !DILocation(line: 2337, column: 3, scope: !7456)
!7463 = distinct !{!7463, !7459, !7464}
!7464 = !DILocation(line: 2338, column: 4, scope: !7457)
!7465 = !DILocation(line: 2339, column: 9, scope: !7451)
!7466 = !DILocation(line: 2339, column: 7, scope: !7451)
!7467 = !DILocation(line: 2342, column: 6, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2342, column: 6)
!7469 = !DILocation(line: 2342, column: 6, scope: !7410)
!7470 = !DILocation(line: 2343, column: 25, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 2342, column: 11)
!7472 = !DILocation(line: 2343, column: 31, scope: !7471)
!7473 = !DILocation(line: 2343, column: 36, scope: !7471)
!7474 = !DILocation(line: 2343, column: 3, scope: !7471)
!7475 = !DILocation(line: 2345, column: 8, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 2345, column: 7)
!7477 = !DILocation(line: 2345, column: 14, scope: !7476)
!7478 = !DILocation(line: 2345, column: 29, scope: !7476)
!7479 = !DILocation(line: 2345, column: 27, scope: !7476)
!7480 = !DILocation(line: 2346, column: 8, scope: !7476)
!7481 = !DILocation(line: 2346, column: 14, scope: !7476)
!7482 = !DILocation(line: 2346, column: 22, scope: !7476)
!7483 = !DILocation(line: 2346, column: 28, scope: !7476)
!7484 = !DILocation(line: 2346, column: 20, scope: !7476)
!7485 = !DILocation(line: 2345, column: 39, scope: !7476)
!7486 = !DILocation(line: 2345, column: 7, scope: !7471)
!7487 = !DILocation(line: 2347, column: 4, scope: !7476)
!7488 = !DILocation(line: 2348, column: 2, scope: !7471)
!7489 = !DILocation(line: 2349, column: 1, scope: !7410)
!7490 = distinct !DISubprogram(name: "dw_mci_pull_data32", scope: !3, file: !3, line: 2351, type: !6247, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7491 = !DILocalVariable(name: "host", arg: 1, scope: !7490, file: !3, line: 2351, type: !286)
!7492 = !DILocation(line: 2351, column: 47, scope: !7490)
!7493 = !DILocalVariable(name: "buf", arg: 2, scope: !7490, file: !3, line: 2351, type: !284)
!7494 = !DILocation(line: 2351, column: 59, scope: !7490)
!7495 = !DILocalVariable(name: "cnt", arg: 3, scope: !7490, file: !3, line: 2351, type: !446)
!7496 = !DILocation(line: 2351, column: 68, scope: !7490)
!7497 = !DILocalVariable(name: "pdata", scope: !7498, file: !3, line: 2372, type: !1236)
!7498 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 2371, column: 2)
!7499 = !DILocation(line: 2372, column: 8, scope: !7498)
!7500 = !DILocation(line: 2372, column: 16, scope: !7498)
!7501 = !DILocation(line: 2374, column: 3, scope: !7498)
!7502 = !DILocation(line: 2374, column: 10, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 2374, column: 3)
!7504 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 2374, column: 3)
!7505 = !DILocation(line: 2374, column: 14, scope: !7503)
!7506 = !DILocation(line: 2374, column: 3, scope: !7504)
!7507 = !DILocation(line: 2375, column: 15, scope: !7503)
!7508 = !DILocation(line: 2375, column: 10, scope: !7503)
!7509 = !DILocation(line: 2375, column: 13, scope: !7503)
!7510 = !DILocation(line: 2375, column: 4, scope: !7503)
!7511 = !DILocation(line: 2374, column: 24, scope: !7503)
!7512 = !DILocation(line: 2374, column: 3, scope: !7503)
!7513 = distinct !{!7513, !7506, !7514}
!7514 = !DILocation(line: 2375, column: 15, scope: !7504)
!7515 = !DILocation(line: 2376, column: 9, scope: !7498)
!7516 = !DILocation(line: 2376, column: 7, scope: !7498)
!7517 = !DILocation(line: 2378, column: 6, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 2378, column: 6)
!7519 = !DILocation(line: 2378, column: 6, scope: !7490)
!7520 = !DILocation(line: 2379, column: 22, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 2378, column: 11)
!7522 = !DILocation(line: 2379, column: 3, scope: !7521)
!7523 = !DILocation(line: 2379, column: 9, scope: !7521)
!7524 = !DILocation(line: 2379, column: 20, scope: !7521)
!7525 = !DILocation(line: 2380, column: 27, scope: !7521)
!7526 = !DILocation(line: 2380, column: 33, scope: !7521)
!7527 = !DILocation(line: 2380, column: 38, scope: !7521)
!7528 = !DILocation(line: 2380, column: 3, scope: !7521)
!7529 = !DILocation(line: 2381, column: 2, scope: !7521)
!7530 = !DILocation(line: 2382, column: 1, scope: !7490)
!7531 = distinct !DISubprogram(name: "dw_mci_ctrl_reset", scope: !3, file: !3, line: 187, type: !7532, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{!314, !286, !309}
!7534 = !DILocalVariable(name: "host", arg: 1, scope: !7531, file: !3, line: 187, type: !286)
!7535 = !DILocation(line: 187, column: 46, scope: !7531)
!7536 = !DILocalVariable(name: "reset", arg: 2, scope: !7531, file: !3, line: 187, type: !309)
!7537 = !DILocation(line: 187, column: 56, scope: !7531)
!7538 = !DILocalVariable(name: "ctrl", scope: !7531, file: !3, line: 189, type: !309)
!7539 = !DILocation(line: 189, column: 6, scope: !7531)
!7540 = !DILocation(line: 191, column: 9, scope: !7531)
!7541 = !DILocation(line: 191, column: 7, scope: !7531)
!7542 = !DILocation(line: 192, column: 10, scope: !7531)
!7543 = !DILocation(line: 192, column: 7, scope: !7531)
!7544 = !DILocation(line: 193, column: 2, scope: !7531)
!7545 = !DILocalVariable(name: "__timeout_us", scope: !7546, file: !3, line: 196, type: !326)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 196, column: 6)
!7547 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 196, column: 6)
!7548 = !DILocation(line: 196, column: 6, scope: !7546)
!7549 = !DILocalVariable(name: "__delay_us", scope: !7546, file: !3, line: 196, type: !281)
!7550 = !DILocalVariable(name: "__timeout", scope: !7546, file: !3, line: 196, type: !1117)
!7551 = !DILocation(line: 196, column: 6, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 196, column: 6)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 196, column: 6)
!7554 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 196, column: 6)
!7555 = !DILocation(line: 196, column: 6, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 196, column: 6)
!7557 = !DILocation(line: 196, column: 6, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 196, column: 6)
!7559 = !DILocation(line: 196, column: 6, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 196, column: 6)
!7561 = !DILocation(line: 196, column: 6, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 196, column: 6)
!7563 = !DILocation(line: 196, column: 6, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 196, column: 6)
!7565 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 196, column: 6)
!7566 = !DILocation(line: 196, column: 6, scope: !7565)
!7567 = !DILocation(line: 196, column: 6, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 196, column: 6)
!7569 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 196, column: 6)
!7570 = !DILocation(line: 196, column: 6, scope: !7569)
!7571 = !DILocation(line: 196, column: 6, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 196, column: 6)
!7573 = !DILocation(line: 196, column: 6, scope: !7553)
!7574 = distinct !{!7574, !7575, !7575}
!7575 = !DILocation(line: 196, column: 6, scope: !7554)
!7576 = !DILocation(line: 196, column: 6, scope: !7547)
!7577 = !DILocation(line: 196, column: 6, scope: !7531)
!7578 = !DILocation(line: 199, column: 3, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 198, column: 36)
!7580 = !DILocation(line: 202, column: 3, scope: !7579)
!7581 = !DILocation(line: 205, column: 2, scope: !7531)
!7582 = !DILocation(line: 206, column: 1, scope: !7531)
!7583 = distinct !DISubprogram(name: "dw_mci_init_dma", scope: !3, file: !3, line: 2872, type: !5845, scopeLine: 2873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7584 = !DILocalVariable(name: "host", arg: 1, scope: !7583, file: !3, line: 2872, type: !286)
!7585 = !DILocation(line: 2872, column: 44, scope: !7583)
!7586 = !DILocalVariable(name: "addr_config", scope: !7583, file: !3, line: 2874, type: !446)
!7587 = !DILocation(line: 2874, column: 6, scope: !7583)
!7588 = !DILocalVariable(name: "dev", scope: !7583, file: !3, line: 2875, type: !2369)
!7589 = !DILocation(line: 2875, column: 17, scope: !7583)
!7590 = !DILocation(line: 2875, column: 23, scope: !7583)
!7591 = !DILocation(line: 2875, column: 29, scope: !7583)
!7592 = !DILocation(line: 2888, column: 18, scope: !7583)
!7593 = !DILocation(line: 2888, column: 2, scope: !7583)
!7594 = !DILocation(line: 2888, column: 8, scope: !7583)
!7595 = !DILocation(line: 2888, column: 16, scope: !7583)
!7596 = !DILocation(line: 2889, column: 6, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 2889, column: 6)
!7598 = !DILocation(line: 2889, column: 12, scope: !7597)
!7599 = !DILocation(line: 2889, column: 20, scope: !7597)
!7600 = !DILocation(line: 2889, column: 6, scope: !7583)
!7601 = !DILocation(line: 2890, column: 3, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2889, column: 43)
!7603 = !DILocation(line: 2890, column: 9, scope: !7602)
!7604 = !DILocation(line: 2890, column: 17, scope: !7602)
!7605 = !DILocation(line: 2891, column: 2, scope: !7602)
!7606 = !DILocation(line: 2891, column: 13, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2891, column: 13)
!7608 = !DILocation(line: 2891, column: 19, scope: !7607)
!7609 = !DILocation(line: 2891, column: 27, scope: !7607)
!7610 = !DILocation(line: 2891, column: 50, scope: !7607)
!7611 = !DILocation(line: 2892, column: 6, scope: !7607)
!7612 = !DILocation(line: 2892, column: 12, scope: !7607)
!7613 = !DILocation(line: 2892, column: 20, scope: !7607)
!7614 = !DILocation(line: 2891, column: 13, scope: !7597)
!7615 = !DILocation(line: 2893, column: 3, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2892, column: 43)
!7617 = !DILocation(line: 2893, column: 9, scope: !7616)
!7618 = !DILocation(line: 2893, column: 17, scope: !7616)
!7619 = !DILocation(line: 2894, column: 2, scope: !7616)
!7620 = !DILocation(line: 2895, column: 3, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 2894, column: 9)
!7622 = !DILocation(line: 2899, column: 6, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 2899, column: 6)
!7624 = !DILocation(line: 2899, column: 12, scope: !7623)
!7625 = !DILocation(line: 2899, column: 20, scope: !7623)
!7626 = !DILocation(line: 2899, column: 6, scope: !7583)
!7627 = !DILocation(line: 2904, column: 17, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2899, column: 41)
!7629 = !DILocation(line: 2904, column: 15, scope: !7628)
!7630 = !DILocation(line: 2906, column: 7, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 2906, column: 7)
!7632 = !DILocation(line: 2906, column: 19, scope: !7631)
!7633 = !DILocation(line: 2906, column: 7, scope: !7628)
!7634 = !DILocation(line: 2908, column: 4, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 2906, column: 25)
!7636 = !DILocation(line: 2908, column: 10, scope: !7635)
!7637 = !DILocation(line: 2908, column: 28, scope: !7635)
!7638 = !DILocation(line: 2909, column: 4, scope: !7635)
!7639 = !DILocation(line: 2911, column: 22, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 2911, column: 8)
!7641 = !DILocation(line: 2911, column: 28, scope: !7640)
!7642 = !DILocation(line: 2911, column: 9, scope: !7640)
!7643 = !DILocation(line: 2911, column: 8, scope: !7635)
!7644 = !DILocation(line: 2912, column: 27, scope: !7640)
!7645 = !DILocation(line: 2912, column: 33, scope: !7640)
!7646 = !DILocation(line: 2912, column: 5, scope: !7640)
!7647 = !DILocation(line: 2914, column: 3, scope: !7635)
!7648 = !DILocation(line: 2916, column: 4, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 2914, column: 10)
!7650 = !DILocation(line: 2916, column: 10, scope: !7649)
!7651 = !DILocation(line: 2916, column: 28, scope: !7649)
!7652 = !DILocation(line: 2917, column: 4, scope: !7649)
!7653 = !DILocation(line: 2922, column: 38, scope: !7628)
!7654 = !DILocation(line: 2922, column: 44, scope: !7628)
!7655 = !DILocation(line: 2924, column: 11, scope: !7628)
!7656 = !DILocation(line: 2924, column: 17, scope: !7628)
!7657 = !DILocation(line: 2922, column: 18, scope: !7628)
!7658 = !DILocation(line: 2922, column: 3, scope: !7628)
!7659 = !DILocation(line: 2922, column: 9, scope: !7628)
!7660 = !DILocation(line: 2922, column: 16, scope: !7628)
!7661 = !DILocation(line: 2925, column: 8, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 2925, column: 7)
!7663 = !DILocation(line: 2925, column: 14, scope: !7662)
!7664 = !DILocation(line: 2925, column: 7, scope: !7628)
!7665 = !DILocation(line: 2926, column: 4, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 2925, column: 22)
!7667 = !DILocation(line: 2929, column: 4, scope: !7666)
!7668 = !DILocation(line: 2932, column: 3, scope: !7628)
!7669 = !DILocation(line: 2932, column: 9, scope: !7628)
!7670 = !DILocation(line: 2932, column: 17, scope: !7628)
!7671 = !DILocation(line: 2933, column: 3, scope: !7628)
!7672 = !DILocation(line: 2934, column: 2, scope: !7628)
!7673 = !DILocation(line: 2936, column: 42, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7675, file: !3, line: 2936, column: 7)
!7675 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 2934, column: 9)
!7676 = !DILocation(line: 2936, column: 8, scope: !7674)
!7677 = !DILocation(line: 2937, column: 23, scope: !7674)
!7678 = !DILocation(line: 2937, column: 28, scope: !7674)
!7679 = !DILocation(line: 2938, column: 32, scope: !7674)
!7680 = !DILocation(line: 2938, column: 8, scope: !7674)
!7681 = !DILocation(line: 2936, column: 7, scope: !7675)
!7682 = !DILocation(line: 2939, column: 4, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2938, column: 46)
!7684 = !DILocation(line: 2941, column: 3, scope: !7675)
!7685 = !DILocation(line: 2941, column: 9, scope: !7675)
!7686 = !DILocation(line: 2941, column: 17, scope: !7675)
!7687 = !DILocation(line: 2942, column: 3, scope: !7675)
!7688 = !DILocation(line: 2945, column: 6, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 2945, column: 6)
!7690 = !DILocation(line: 2945, column: 12, scope: !7689)
!7691 = !DILocation(line: 2945, column: 21, scope: !7689)
!7692 = !DILocation(line: 2945, column: 26, scope: !7689)
!7693 = !DILocation(line: 2945, column: 29, scope: !7689)
!7694 = !DILocation(line: 2945, column: 35, scope: !7689)
!7695 = !DILocation(line: 2945, column: 44, scope: !7689)
!7696 = !DILocation(line: 2945, column: 50, scope: !7689)
!7697 = !DILocation(line: 2946, column: 6, scope: !7689)
!7698 = !DILocation(line: 2946, column: 12, scope: !7689)
!7699 = !DILocation(line: 2946, column: 21, scope: !7689)
!7700 = !DILocation(line: 2946, column: 26, scope: !7689)
!7701 = !DILocation(line: 2946, column: 29, scope: !7689)
!7702 = !DILocation(line: 2946, column: 35, scope: !7689)
!7703 = !DILocation(line: 2946, column: 44, scope: !7689)
!7704 = !DILocation(line: 2945, column: 6, scope: !7583)
!7705 = !DILocation(line: 2947, column: 7, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 2947, column: 7)
!7707 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2946, column: 53)
!7708 = !DILocation(line: 2947, column: 13, scope: !7706)
!7709 = !DILocation(line: 2947, column: 22, scope: !7706)
!7710 = !DILocation(line: 2947, column: 27, scope: !7706)
!7711 = !DILocation(line: 2947, column: 7, scope: !7707)
!7712 = !DILocation(line: 2948, column: 4, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 2947, column: 34)
!7714 = !DILocation(line: 2950, column: 4, scope: !7713)
!7715 = !DILocation(line: 2952, column: 2, scope: !7707)
!7716 = !DILocation(line: 2953, column: 3, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 2952, column: 9)
!7718 = !DILocation(line: 2954, column: 3, scope: !7717)
!7719 = !DILocation(line: 2957, column: 2, scope: !7583)
!7720 = !DILabel(scope: !7583, name: "no_dma", file: !3, line: 2959)
!7721 = !DILocation(line: 2959, column: 1, scope: !7583)
!7722 = !DILocation(line: 2960, column: 2, scope: !7583)
!7723 = !DILocation(line: 2961, column: 2, scope: !7583)
!7724 = !DILocation(line: 2961, column: 8, scope: !7583)
!7725 = !DILocation(line: 2961, column: 16, scope: !7583)
!7726 = !DILocation(line: 2962, column: 1, scope: !7583)
!7727 = distinct !DISubprogram(name: "__writel", scope: !7157, file: !7157, line: 71, type: !7728, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7728 = !DISubroutineType(types: !7729)
!7729 = !{null, !7, !7730}
!7730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7162, size: 64)
!7731 = !DILocalVariable(name: "val", arg: 1, scope: !7727, file: !7157, line: 71, type: !7)
!7732 = !DILocation(line: 71, column: 1, scope: !7727)
!7733 = !DILocalVariable(name: "addr", arg: 2, scope: !7727, file: !7157, line: 71, type: !7730)
!7734 = !{i32 -2141841248}
!7735 = distinct !DISubprogram(name: "dw_mci_tasklet_func", scope: !3, file: !3, line: 1955, type: !6158, scopeLine: 1956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7736 = !DILocalVariable(name: "lock", arg: 1, scope: !7737, file: !6367, line: 392, type: !2294)
!7737 = distinct !DISubprogram(name: "spin_unlock", scope: !6367, file: !6367, line: 392, type: !7738, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7738 = !DISubroutineType(types: !7739)
!7739 = !{null, !2294}
!7740 = !DILocation(line: 392, column: 53, scope: !7737, inlinedAt: !7741)
!7741 = distinct !DILocation(line: 2177, column: 2, scope: !7735)
!7742 = !DILocalVariable(name: "lock", arg: 1, scope: !7743, file: !6367, line: 352, type: !2294)
!7743 = distinct !DISubprogram(name: "spin_lock", scope: !6367, file: !6367, line: 352, type: !7738, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!7744 = !DILocation(line: 352, column: 51, scope: !7743, inlinedAt: !7745)
!7745 = distinct !DILocation(line: 1965, column: 2, scope: !7735)
!7746 = !DILocalVariable(name: "priv", arg: 1, scope: !7735, file: !3, line: 1955, type: !281)
!7747 = !DILocation(line: 1955, column: 47, scope: !7735)
!7748 = !DILocalVariable(name: "host", scope: !7735, file: !3, line: 1957, type: !286)
!7749 = !DILocation(line: 1957, column: 17, scope: !7735)
!7750 = !DILocation(line: 1957, column: 41, scope: !7735)
!7751 = !DILocation(line: 1957, column: 24, scope: !7735)
!7752 = !DILocalVariable(name: "data", scope: !7735, file: !3, line: 1958, type: !5364)
!7753 = !DILocation(line: 1958, column: 19, scope: !7735)
!7754 = !DILocalVariable(name: "cmd", scope: !7735, file: !3, line: 1959, type: !5352)
!7755 = !DILocation(line: 1959, column: 22, scope: !7735)
!7756 = !DILocalVariable(name: "mrq", scope: !7735, file: !3, line: 1960, type: !5347)
!7757 = !DILocation(line: 1960, column: 22, scope: !7735)
!7758 = !DILocalVariable(name: "state", scope: !7735, file: !3, line: 1961, type: !230)
!7759 = !DILocation(line: 1961, column: 20, scope: !7735)
!7760 = !DILocalVariable(name: "prev_state", scope: !7735, file: !3, line: 1962, type: !230)
!7761 = !DILocation(line: 1962, column: 20, scope: !7735)
!7762 = !DILocalVariable(name: "err", scope: !7735, file: !3, line: 1963, type: !7)
!7763 = !DILocation(line: 1963, column: 15, scope: !7735)
!7764 = !DILocation(line: 1965, column: 13, scope: !7735)
!7765 = !DILocation(line: 1965, column: 19, scope: !7735)
!7766 = !DILocation(line: 354, column: 2, scope: !7767, inlinedAt: !7745)
!7767 = distinct !DILexicalBlock(scope: !7743, file: !6367, line: 354, column: 2)
!7768 = !{i32 -2145194910}
!7769 = !DILocation(line: 354, column: 2, scope: !7770, inlinedAt: !7745)
!7770 = distinct !DILexicalBlock(scope: !7767, file: !6367, line: 354, column: 2)
!7771 = !DILocation(line: 1967, column: 10, scope: !7735)
!7772 = !DILocation(line: 1967, column: 16, scope: !7735)
!7773 = !DILocation(line: 1967, column: 8, scope: !7735)
!7774 = !DILocation(line: 1968, column: 9, scope: !7735)
!7775 = !DILocation(line: 1968, column: 15, scope: !7735)
!7776 = !DILocation(line: 1968, column: 7, scope: !7735)
!7777 = !DILocation(line: 1969, column: 8, scope: !7735)
!7778 = !DILocation(line: 1969, column: 14, scope: !7735)
!7779 = !DILocation(line: 1969, column: 6, scope: !7735)
!7780 = !DILocation(line: 1971, column: 2, scope: !7735)
!7781 = !DILocation(line: 1972, column: 16, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7735, file: !3, line: 1971, column: 5)
!7783 = !DILocation(line: 1972, column: 14, scope: !7782)
!7784 = !DILocation(line: 1974, column: 11, scope: !7782)
!7785 = !DILocation(line: 1974, column: 3, scope: !7782)
!7786 = !DILocation(line: 1977, column: 4, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 1974, column: 18)
!7788 = !DILocation(line: 1981, column: 43, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 1981, column: 8)
!7790 = !DILocation(line: 1981, column: 9, scope: !7789)
!7791 = !DILocation(line: 1981, column: 8, scope: !7787)
!7792 = !DILocation(line: 1982, column: 5, scope: !7789)
!7793 = !DILocation(line: 1984, column: 10, scope: !7787)
!7794 = !DILocation(line: 1984, column: 16, scope: !7787)
!7795 = !DILocation(line: 1984, column: 8, scope: !7787)
!7796 = !DILocation(line: 1985, column: 4, scope: !7787)
!7797 = !DILocation(line: 1985, column: 10, scope: !7787)
!7798 = !DILocation(line: 1985, column: 14, scope: !7787)
!7799 = !DILocation(line: 1986, column: 33, scope: !7787)
!7800 = !DILocation(line: 1986, column: 39, scope: !7787)
!7801 = !DILocation(line: 1986, column: 4, scope: !7787)
!7802 = !DILocation(line: 1987, column: 34, scope: !7787)
!7803 = !DILocation(line: 1987, column: 40, scope: !7787)
!7804 = !DILocation(line: 1987, column: 10, scope: !7787)
!7805 = !DILocation(line: 1987, column: 8, scope: !7787)
!7806 = !DILocation(line: 1988, column: 8, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 1988, column: 8)
!7808 = !DILocation(line: 1988, column: 15, scope: !7807)
!7809 = !DILocation(line: 1988, column: 20, scope: !7807)
!7810 = !DILocation(line: 1988, column: 12, scope: !7807)
!7811 = !DILocation(line: 1988, column: 24, scope: !7807)
!7812 = !DILocation(line: 1988, column: 28, scope: !7807)
!7813 = !DILocation(line: 1988, column: 8, scope: !7787)
!7814 = !DILocation(line: 1989, column: 28, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 1988, column: 33)
!7816 = !DILocation(line: 1989, column: 34, scope: !7815)
!7817 = !DILocation(line: 1989, column: 40, scope: !7815)
!7818 = !DILocation(line: 1990, column: 14, scope: !7815)
!7819 = !DILocation(line: 1990, column: 19, scope: !7815)
!7820 = !DILocation(line: 1989, column: 5, scope: !7815)
!7821 = !DILocation(line: 1991, column: 5, scope: !7815)
!7822 = !DILocation(line: 1994, column: 8, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 1994, column: 8)
!7824 = !DILocation(line: 1994, column: 13, scope: !7823)
!7825 = !DILocation(line: 1994, column: 18, scope: !7823)
!7826 = !DILocation(line: 1994, column: 21, scope: !7823)
!7827 = !DILocation(line: 1994, column: 8, scope: !7787)
!7828 = !DILocation(line: 2016, column: 9, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 2016, column: 9)
!7830 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 1994, column: 26)
!7831 = !DILocation(line: 2016, column: 13, scope: !7829)
!7832 = !DILocation(line: 2016, column: 9, scope: !7830)
!7833 = !DILocation(line: 2017, column: 12, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2016, column: 28)
!7835 = !DILocation(line: 2018, column: 6, scope: !7834)
!7836 = !DILocation(line: 2021, column: 21, scope: !7830)
!7837 = !DILocation(line: 2021, column: 5, scope: !7830)
!7838 = !DILocation(line: 2022, column: 21, scope: !7830)
!7839 = !DILocation(line: 2022, column: 27, scope: !7830)
!7840 = !DILocation(line: 2022, column: 5, scope: !7830)
!7841 = !DILocation(line: 2023, column: 11, scope: !7830)
!7842 = !DILocation(line: 2024, column: 5, scope: !7830)
!7843 = !DILocation(line: 2027, column: 9, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2027, column: 8)
!7845 = !DILocation(line: 2027, column: 14, scope: !7844)
!7846 = !DILocation(line: 2027, column: 19, scope: !7844)
!7847 = !DILocation(line: 2027, column: 22, scope: !7844)
!7848 = !DILocation(line: 2027, column: 8, scope: !7787)
!7849 = !DILocation(line: 2028, column: 24, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 2027, column: 27)
!7851 = !DILocation(line: 2028, column: 30, scope: !7850)
!7852 = !DILocation(line: 2028, column: 5, scope: !7850)
!7853 = !DILocation(line: 2029, column: 5, scope: !7850)
!7854 = !DILocation(line: 2032, column: 23, scope: !7787)
!7855 = !DILocation(line: 2032, column: 15, scope: !7787)
!7856 = !DILocation(line: 2032, column: 4, scope: !7787)
!7857 = !DILocation(line: 2045, column: 14, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2044, column: 8)
!7859 = !DILocation(line: 2045, column: 20, scope: !7858)
!7860 = !DILocation(line: 2044, column: 8, scope: !7858)
!7861 = !DILocation(line: 2044, column: 8, scope: !7787)
!7862 = !DILocation(line: 2046, column: 21, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 2045, column: 37)
!7864 = !DILocation(line: 2046, column: 5, scope: !7863)
!7865 = !DILocation(line: 2047, column: 11, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7863, file: !3, line: 2047, column: 9)
!7867 = !DILocation(line: 2047, column: 17, scope: !7866)
!7868 = !DILocation(line: 2047, column: 29, scope: !7866)
!7869 = !DILocation(line: 2047, column: 9, scope: !7863)
!7870 = !DILocation(line: 2049, column: 22, scope: !7866)
!7871 = !DILocation(line: 2049, column: 28, scope: !7866)
!7872 = !DILocation(line: 2049, column: 6, scope: !7866)
!7873 = !DILocation(line: 2050, column: 11, scope: !7863)
!7874 = !DILocation(line: 2051, column: 5, scope: !7863)
!7875 = !DILocation(line: 2055, column: 8, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2054, column: 8)
!7877 = !DILocation(line: 2055, column: 14, scope: !7876)
!7878 = !DILocation(line: 2054, column: 9, scope: !7876)
!7879 = !DILocation(line: 2054, column: 8, scope: !7787)
!7880 = !DILocation(line: 2060, column: 9, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 2060, column: 9)
!7882 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 2055, column: 31)
!7883 = !DILocation(line: 2060, column: 15, scope: !7881)
!7884 = !DILocation(line: 2060, column: 26, scope: !7881)
!7885 = !DILocation(line: 2060, column: 9, scope: !7882)
!7886 = !DILocation(line: 2061, column: 22, scope: !7881)
!7887 = !DILocation(line: 2061, column: 6, scope: !7881)
!7888 = !DILocation(line: 2062, column: 5, scope: !7882)
!7889 = !DILocation(line: 2065, column: 34, scope: !7787)
!7890 = !DILocation(line: 2065, column: 40, scope: !7787)
!7891 = !DILocation(line: 2065, column: 4, scope: !7787)
!7892 = !DILocation(line: 2081, column: 14, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2080, column: 8)
!7894 = !DILocation(line: 2081, column: 20, scope: !7893)
!7895 = !DILocation(line: 2080, column: 8, scope: !7893)
!7896 = !DILocation(line: 2080, column: 8, scope: !7787)
!7897 = !DILocation(line: 2082, column: 21, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 2081, column: 37)
!7899 = !DILocation(line: 2082, column: 5, scope: !7898)
!7900 = !DILocation(line: 2083, column: 11, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 2083, column: 9)
!7902 = !DILocation(line: 2083, column: 17, scope: !7901)
!7903 = !DILocation(line: 2083, column: 29, scope: !7901)
!7904 = !DILocation(line: 2083, column: 9, scope: !7898)
!7905 = !DILocation(line: 2085, column: 22, scope: !7901)
!7906 = !DILocation(line: 2085, column: 28, scope: !7901)
!7907 = !DILocation(line: 2085, column: 6, scope: !7901)
!7908 = !DILocation(line: 2086, column: 11, scope: !7898)
!7909 = !DILocation(line: 2087, column: 5, scope: !7898)
!7910 = !DILocation(line: 2089, column: 23, scope: !7787)
!7911 = !DILocation(line: 2089, column: 15, scope: !7787)
!7912 = !DILocation(line: 2089, column: 4, scope: !7787)
!7913 = !DILocation(line: 2094, column: 44, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2094, column: 8)
!7915 = !DILocation(line: 2094, column: 9, scope: !7914)
!7916 = !DILocation(line: 2094, column: 8, scope: !7787)
!7917 = !DILocation(line: 2100, column: 9, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2100, column: 9)
!7919 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 2094, column: 51)
!7920 = !DILocation(line: 2100, column: 15, scope: !7918)
!7921 = !DILocation(line: 2100, column: 26, scope: !7918)
!7922 = !DILocation(line: 2100, column: 9, scope: !7919)
!7923 = !DILocation(line: 2101, column: 22, scope: !7918)
!7924 = !DILocation(line: 2101, column: 6, scope: !7918)
!7925 = !DILocation(line: 2102, column: 5, scope: !7919)
!7926 = !DILocation(line: 2105, column: 4, scope: !7787)
!7927 = !DILocation(line: 2105, column: 10, scope: !7787)
!7928 = !DILocation(line: 2105, column: 15, scope: !7787)
!7929 = !DILocation(line: 2106, column: 34, scope: !7787)
!7930 = !DILocation(line: 2106, column: 40, scope: !7787)
!7931 = !DILocation(line: 2106, column: 4, scope: !7787)
!7932 = !DILocation(line: 2107, column: 31, scope: !7787)
!7933 = !DILocation(line: 2107, column: 37, scope: !7787)
!7934 = !DILocation(line: 2107, column: 10, scope: !7787)
!7935 = !DILocation(line: 2107, column: 8, scope: !7787)
!7936 = !DILocation(line: 2109, column: 9, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2109, column: 8)
!7938 = !DILocation(line: 2109, column: 8, scope: !7787)
!7939 = !DILocation(line: 2110, column: 10, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 2110, column: 9)
!7941 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2109, column: 14)
!7942 = !DILocation(line: 2110, column: 16, scope: !7940)
!7943 = !DILocation(line: 2110, column: 21, scope: !7940)
!7944 = !DILocation(line: 2110, column: 24, scope: !7940)
!7945 = !DILocation(line: 2110, column: 29, scope: !7940)
!7946 = !DILocation(line: 2110, column: 9, scope: !7941)
!7947 = !DILocation(line: 2111, column: 10, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 2111, column: 10)
!7949 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 2110, column: 34)
!7950 = !DILocation(line: 2111, column: 15, scope: !7948)
!7951 = !DILocation(line: 2111, column: 19, scope: !7948)
!7952 = !DILocation(line: 2111, column: 22, scope: !7948)
!7953 = !DILocation(line: 2111, column: 28, scope: !7948)
!7954 = !DILocation(line: 2111, column: 10, scope: !7949)
!7955 = !DILocation(line: 2112, column: 7, scope: !7948)
!7956 = !DILocation(line: 2112, column: 13, scope: !7948)
!7957 = !DILocation(line: 2112, column: 19, scope: !7948)
!7958 = !DILocation(line: 2112, column: 25, scope: !7948)
!7959 = !DILocation(line: 2113, column: 25, scope: !7949)
!7960 = !DILocation(line: 2113, column: 31, scope: !7949)
!7961 = !DILocation(line: 2113, column: 6, scope: !7949)
!7962 = !DILocation(line: 2114, column: 6, scope: !7949)
!7963 = !DILocation(line: 2118, column: 9, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 2118, column: 9)
!7965 = !DILocation(line: 2118, column: 15, scope: !7964)
!7966 = !DILocation(line: 2118, column: 9, scope: !7941)
!7967 = !DILocation(line: 2119, column: 22, scope: !7964)
!7968 = !DILocation(line: 2119, column: 28, scope: !7964)
!7969 = !DILocation(line: 2119, column: 6, scope: !7964)
!7970 = !DILocation(line: 2120, column: 4, scope: !7941)
!7971 = !DILocation(line: 2131, column: 13, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 2130, column: 9)
!7973 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2120, column: 11)
!7974 = !DILocation(line: 2131, column: 19, scope: !7972)
!7975 = !DILocation(line: 2130, column: 10, scope: !7972)
!7976 = !DILocation(line: 2130, column: 9, scope: !7973)
!7977 = !DILocation(line: 2132, column: 6, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 2131, column: 36)
!7979 = !DILocation(line: 2132, column: 12, scope: !7978)
!7980 = !DILocation(line: 2132, column: 16, scope: !7978)
!7981 = !DILocation(line: 2133, column: 25, scope: !7978)
!7982 = !DILocation(line: 2133, column: 31, scope: !7978)
!7983 = !DILocation(line: 2133, column: 6, scope: !7978)
!7984 = !DILocation(line: 2134, column: 6, scope: !7978)
!7985 = !DILocation(line: 2142, column: 23, scope: !7787)
!7986 = !DILocation(line: 2142, column: 15, scope: !7787)
!7987 = !DILocation(line: 2142, column: 4, scope: !7787)
!7988 = !DILocation(line: 2147, column: 43, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2147, column: 8)
!7990 = !DILocation(line: 2147, column: 9, scope: !7989)
!7991 = !DILocation(line: 2147, column: 8, scope: !7787)
!7992 = !DILocation(line: 2148, column: 5, scope: !7989)
!7993 = !DILocation(line: 2151, column: 8, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2151, column: 8)
!7995 = !DILocation(line: 2151, column: 13, scope: !7994)
!7996 = !DILocation(line: 2151, column: 18, scope: !7994)
!7997 = !DILocation(line: 2151, column: 24, scope: !7994)
!7998 = !DILocation(line: 2151, column: 27, scope: !7994)
!7999 = !DILocation(line: 2151, column: 32, scope: !7994)
!8000 = !DILocation(line: 2151, column: 8, scope: !7787)
!8001 = !DILocation(line: 2152, column: 18, scope: !7994)
!8002 = !DILocation(line: 2152, column: 5, scope: !7994)
!8003 = !DILocation(line: 2154, column: 4, scope: !7787)
!8004 = !DILocation(line: 2154, column: 10, scope: !7787)
!8005 = !DILocation(line: 2154, column: 14, scope: !7787)
!8006 = !DILocation(line: 2155, column: 4, scope: !7787)
!8007 = !DILocation(line: 2155, column: 10, scope: !7787)
!8008 = !DILocation(line: 2155, column: 15, scope: !7787)
!8009 = !DILocation(line: 2157, column: 9, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2157, column: 8)
!8011 = !DILocation(line: 2157, column: 14, scope: !8010)
!8012 = !DILocation(line: 2157, column: 18, scope: !8010)
!8013 = !DILocation(line: 2157, column: 21, scope: !8010)
!8014 = !DILocation(line: 2157, column: 26, scope: !8010)
!8015 = !DILocation(line: 2157, column: 8, scope: !7787)
!8016 = !DILocation(line: 2158, column: 29, scope: !8010)
!8017 = !DILocation(line: 2158, column: 35, scope: !8010)
!8018 = !DILocation(line: 2158, column: 40, scope: !8010)
!8019 = !DILocation(line: 2158, column: 5, scope: !8010)
!8020 = !DILocation(line: 2160, column: 5, scope: !8010)
!8021 = !DILocation(line: 2160, column: 11, scope: !8010)
!8022 = !DILocation(line: 2160, column: 22, scope: !8010)
!8023 = !DILocation(line: 2162, column: 23, scope: !7787)
!8024 = !DILocation(line: 2162, column: 29, scope: !7787)
!8025 = !DILocation(line: 2162, column: 4, scope: !7787)
!8026 = !DILocation(line: 2163, column: 4, scope: !7787)
!8027 = !DILocation(line: 2167, column: 8, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7787, file: !3, line: 2166, column: 8)
!8029 = !DILocation(line: 2167, column: 14, scope: !8028)
!8030 = !DILocation(line: 2166, column: 9, scope: !8028)
!8031 = !DILocation(line: 2166, column: 8, scope: !7787)
!8032 = !DILocation(line: 2168, column: 5, scope: !8028)
!8033 = !DILocation(line: 2170, column: 10, scope: !7787)
!8034 = !DILocation(line: 2171, column: 4, scope: !7787)
!8035 = !DILocation(line: 2173, column: 2, scope: !7782)
!8036 = !DILocation(line: 2173, column: 11, scope: !7735)
!8037 = !DILocation(line: 2173, column: 20, scope: !7735)
!8038 = !DILocation(line: 2173, column: 17, scope: !7735)
!8039 = distinct !{!8039, !7780, !8040}
!8040 = !DILocation(line: 2173, column: 30, scope: !7735)
!8041 = !DILocation(line: 2175, column: 16, scope: !7735)
!8042 = !DILocation(line: 2175, column: 2, scope: !7735)
!8043 = !DILocation(line: 2175, column: 8, scope: !7735)
!8044 = !DILocation(line: 2175, column: 14, scope: !7735)
!8045 = !DILabel(scope: !7735, name: "unlock", file: !3, line: 2176)
!8046 = !DILocation(line: 2176, column: 1, scope: !7735)
!8047 = !DILocation(line: 2177, column: 15, scope: !7735)
!8048 = !DILocation(line: 2177, column: 21, scope: !7735)
!8049 = !DILocation(line: 394, column: 2, scope: !8050, inlinedAt: !7741)
!8050 = distinct !DILexicalBlock(scope: !7737, file: !6367, line: 394, column: 2)
!8051 = !{i32 -2145192549}
!8052 = !DILocation(line: 394, column: 2, scope: !8053, inlinedAt: !7741)
!8053 = distinct !DILexicalBlock(scope: !8050, file: !6367, line: 394, column: 2)
!8054 = !DILocation(line: 2179, column: 1, scope: !7735)
!8055 = distinct !DISubprogram(name: "devm_request_irq", scope: !76, file: !76, line: 203, type: !8056, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!446, !2369, !7, !3007, !281, !468, !284}
!8058 = !DILocalVariable(name: "dev", arg: 1, scope: !8055, file: !76, line: 203, type: !2369)
!8059 = !DILocation(line: 203, column: 33, scope: !8055)
!8060 = !DILocalVariable(name: "irq", arg: 2, scope: !8055, file: !76, line: 203, type: !7)
!8061 = !DILocation(line: 203, column: 51, scope: !8055)
!8062 = !DILocalVariable(name: "handler", arg: 3, scope: !8055, file: !76, line: 203, type: !3007)
!8063 = !DILocation(line: 203, column: 70, scope: !8055)
!8064 = !DILocalVariable(name: "irqflags", arg: 4, scope: !8055, file: !76, line: 204, type: !281)
!8065 = !DILocation(line: 204, column: 18, scope: !8055)
!8066 = !DILocalVariable(name: "devname", arg: 5, scope: !8055, file: !76, line: 204, type: !468)
!8067 = !DILocation(line: 204, column: 40, scope: !8055)
!8068 = !DILocalVariable(name: "dev_id", arg: 6, scope: !8055, file: !76, line: 204, type: !284)
!8069 = !DILocation(line: 204, column: 55, scope: !8055)
!8070 = !DILocation(line: 206, column: 35, scope: !8055)
!8071 = !DILocation(line: 206, column: 40, scope: !8055)
!8072 = !DILocation(line: 206, column: 45, scope: !8055)
!8073 = !DILocation(line: 206, column: 60, scope: !8055)
!8074 = !DILocation(line: 207, column: 7, scope: !8055)
!8075 = !DILocation(line: 207, column: 16, scope: !8055)
!8076 = !DILocation(line: 206, column: 9, scope: !8055)
!8077 = !DILocation(line: 206, column: 2, scope: !8055)
!8078 = distinct !DISubprogram(name: "dw_mci_interrupt", scope: !3, file: !3, line: 2615, type: !3009, scopeLine: 2616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8079 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !8080)
!8080 = distinct !DILocation(line: 2700, column: 4, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 2694, column: 37)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2694, column: 7)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 2624, column: 15)
!8084 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2624, column: 6)
!8085 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !8080)
!8086 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !8087)
!8087 = distinct !DILocation(line: 2695, column: 4, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 2695, column: 4)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 2695, column: 4)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 2695, column: 4)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 2695, column: 4)
!8092 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2695, column: 4)
!8093 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !8094)
!8094 = distinct !DILocation(line: 2679, column: 4, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 2663, column: 38)
!8096 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2663, column: 7)
!8097 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !8094)
!8098 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !8099)
!8099 = distinct !DILocation(line: 2664, column: 4, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !3, line: 2664, column: 4)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 2664, column: 4)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2664, column: 4)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 2664, column: 4)
!8104 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2664, column: 4)
!8105 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !8106)
!8106 = distinct !DILocation(line: 2651, column: 4, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 2642, column: 41)
!8108 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2642, column: 7)
!8109 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !8106)
!8110 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !8111)
!8111 = distinct !DILocation(line: 2643, column: 4, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 2643, column: 4)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2643, column: 4)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 2643, column: 4)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 2643, column: 4)
!8116 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 2643, column: 4)
!8117 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !8118)
!8118 = distinct !DILocation(line: 2637, column: 4, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 2627, column: 42)
!8120 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2626, column: 7)
!8121 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !8118)
!8122 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !8123)
!8123 = distinct !DILocation(line: 2635, column: 4, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2635, column: 4)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 2635, column: 4)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2635, column: 4)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2635, column: 4)
!8128 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 2635, column: 4)
!8129 = !DILocalVariable(name: "irq", arg: 1, scope: !8078, file: !3, line: 2615, type: !446)
!8130 = !DILocation(line: 2615, column: 41, scope: !8078)
!8131 = !DILocalVariable(name: "dev_id", arg: 2, scope: !8078, file: !3, line: 2615, type: !284)
!8132 = !DILocation(line: 2615, column: 52, scope: !8078)
!8133 = !DILocalVariable(name: "host", scope: !8078, file: !3, line: 2617, type: !286)
!8134 = !DILocation(line: 2617, column: 17, scope: !8078)
!8135 = !DILocation(line: 2617, column: 24, scope: !8078)
!8136 = !DILocalVariable(name: "pending", scope: !8078, file: !3, line: 2618, type: !309)
!8137 = !DILocation(line: 2618, column: 6, scope: !8078)
!8138 = !DILocalVariable(name: "slot", scope: !8078, file: !3, line: 2619, type: !6210)
!8139 = !DILocation(line: 2619, column: 22, scope: !8078)
!8140 = !DILocation(line: 2619, column: 29, scope: !8078)
!8141 = !DILocation(line: 2619, column: 35, scope: !8078)
!8142 = !DILocalVariable(name: "irqflags", scope: !8078, file: !3, line: 2620, type: !281)
!8143 = !DILocation(line: 2620, column: 16, scope: !8078)
!8144 = !DILocation(line: 2622, column: 12, scope: !8078)
!8145 = !DILocation(line: 2622, column: 10, scope: !8078)
!8146 = !DILocation(line: 2624, column: 6, scope: !8084)
!8147 = !DILocation(line: 2624, column: 6, scope: !8078)
!8148 = !DILocation(line: 2626, column: 8, scope: !8120)
!8149 = !DILocation(line: 2626, column: 14, scope: !8120)
!8150 = !DILocation(line: 2626, column: 20, scope: !8120)
!8151 = !DILocation(line: 2626, column: 44, scope: !8120)
!8152 = !DILocation(line: 2627, column: 8, scope: !8120)
!8153 = !DILocation(line: 2627, column: 16, scope: !8120)
!8154 = !DILocation(line: 2626, column: 7, scope: !8083)
!8155 = !DILocation(line: 2628, column: 4, scope: !8119)
!8156 = !DILocation(line: 2629, column: 12, scope: !8119)
!8157 = !DILocation(line: 2635, column: 4, scope: !8119)
!8158 = !DILocation(line: 2635, column: 4, scope: !8128)
!8159 = !DILocalVariable(name: "__dummy", scope: !8160, file: !3, line: 2635, type: !281)
!8160 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2635, column: 4)
!8161 = !DILocation(line: 2635, column: 4, scope: !8160)
!8162 = !DILocalVariable(name: "__dummy2", scope: !8160, file: !3, line: 2635, type: !281)
!8163 = !DILocation(line: 2635, column: 4, scope: !8127)
!8164 = !DILocation(line: 2635, column: 4, scope: !8126)
!8165 = !DILocation(line: 2635, column: 4, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 2635, column: 4)
!8167 = !DILocalVariable(name: "__dummy", scope: !8168, file: !3, line: 2635, type: !281)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 2635, column: 4)
!8169 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 2635, column: 4)
!8170 = !DILocation(line: 2635, column: 4, scope: !8168)
!8171 = !DILocalVariable(name: "__dummy2", scope: !8168, file: !3, line: 2635, type: !281)
!8172 = !DILocation(line: 2635, column: 4, scope: !8169)
!8173 = !DILocation(line: 2635, column: 4, scope: !8125)
!8174 = !{i32 -2140156558}
!8175 = !DILocation(line: 2635, column: 4, scope: !8124)
!8176 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !8123)
!8177 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !8123)
!8178 = !DILocation(line: 2636, column: 25, scope: !8119)
!8179 = !DILocation(line: 2636, column: 31, scope: !8119)
!8180 = !DILocation(line: 2636, column: 4, scope: !8119)
!8181 = !DILocation(line: 2637, column: 28, scope: !8119)
!8182 = !DILocation(line: 2637, column: 34, scope: !8119)
!8183 = !DILocation(line: 2637, column: 44, scope: !8119)
!8184 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !8118)
!8185 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !8118)
!8186 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !8118)
!8187 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !8118)
!8188 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !8118)
!8189 = !DILocation(line: 2639, column: 15, scope: !8119)
!8190 = !DILocation(line: 2639, column: 21, scope: !8119)
!8191 = !DILocation(line: 2639, column: 4, scope: !8119)
!8192 = !DILocation(line: 2640, column: 3, scope: !8119)
!8193 = !DILocation(line: 2642, column: 7, scope: !8108)
!8194 = !DILocation(line: 2642, column: 15, scope: !8108)
!8195 = !DILocation(line: 2642, column: 7, scope: !8083)
!8196 = !DILocation(line: 2643, column: 4, scope: !8107)
!8197 = !DILocation(line: 2643, column: 4, scope: !8116)
!8198 = !DILocalVariable(name: "__dummy", scope: !8199, file: !3, line: 2643, type: !281)
!8199 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 2643, column: 4)
!8200 = !DILocation(line: 2643, column: 4, scope: !8199)
!8201 = !DILocalVariable(name: "__dummy2", scope: !8199, file: !3, line: 2643, type: !281)
!8202 = !DILocation(line: 2643, column: 4, scope: !8115)
!8203 = !DILocation(line: 2643, column: 4, scope: !8114)
!8204 = !DILocation(line: 2643, column: 4, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2643, column: 4)
!8206 = !DILocalVariable(name: "__dummy", scope: !8207, file: !3, line: 2643, type: !281)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2643, column: 4)
!8208 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 2643, column: 4)
!8209 = !DILocation(line: 2643, column: 4, scope: !8207)
!8210 = !DILocalVariable(name: "__dummy2", scope: !8207, file: !3, line: 2643, type: !281)
!8211 = !DILocation(line: 2643, column: 4, scope: !8208)
!8212 = !DILocation(line: 2643, column: 4, scope: !8113)
!8213 = !{i32 -2140155074}
!8214 = !DILocation(line: 2643, column: 4, scope: !8112)
!8215 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !8111)
!8216 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !8111)
!8217 = !DILocation(line: 2645, column: 15, scope: !8107)
!8218 = !DILocation(line: 2645, column: 21, scope: !8107)
!8219 = !DILocation(line: 2645, column: 4, scope: !8107)
!8220 = !DILocation(line: 2646, column: 4, scope: !8107)
!8221 = !DILocation(line: 2647, column: 23, scope: !8107)
!8222 = !DILocation(line: 2647, column: 4, scope: !8107)
!8223 = !DILocation(line: 2647, column: 10, scope: !8107)
!8224 = !DILocation(line: 2647, column: 21, scope: !8107)
!8225 = !DILocation(line: 2648, column: 4, scope: !8107)
!8226 = !{i32 -2140154123}
!8227 = !DILocation(line: 2649, column: 33, scope: !8107)
!8228 = !DILocation(line: 2649, column: 39, scope: !8107)
!8229 = !DILocation(line: 2649, column: 4, scope: !8107)
!8230 = !DILocation(line: 2651, column: 28, scope: !8107)
!8231 = !DILocation(line: 2651, column: 34, scope: !8107)
!8232 = !DILocation(line: 2651, column: 44, scope: !8107)
!8233 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !8106)
!8234 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !8106)
!8235 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !8106)
!8236 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !8106)
!8237 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !8106)
!8238 = !DILocation(line: 2652, column: 3, scope: !8107)
!8239 = !DILocation(line: 2654, column: 7, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2654, column: 7)
!8241 = !DILocation(line: 2654, column: 15, scope: !8240)
!8242 = !DILocation(line: 2654, column: 7, scope: !8083)
!8243 = !DILocation(line: 2656, column: 4, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 2654, column: 42)
!8245 = !DILocation(line: 2657, column: 24, scope: !8244)
!8246 = !DILocation(line: 2657, column: 4, scope: !8244)
!8247 = !DILocation(line: 2657, column: 10, scope: !8244)
!8248 = !DILocation(line: 2657, column: 22, scope: !8244)
!8249 = !DILocation(line: 2658, column: 4, scope: !8244)
!8250 = !{i32 -2140148290}
!8251 = !DILocation(line: 2659, column: 31, scope: !8244)
!8252 = !DILocation(line: 2659, column: 37, scope: !8244)
!8253 = !DILocation(line: 2659, column: 4, scope: !8244)
!8254 = !DILocation(line: 2660, column: 22, scope: !8244)
!8255 = !DILocation(line: 2660, column: 28, scope: !8244)
!8256 = !DILocation(line: 2660, column: 4, scope: !8244)
!8257 = !DILocation(line: 2661, column: 3, scope: !8244)
!8258 = !DILocation(line: 2663, column: 7, scope: !8096)
!8259 = !DILocation(line: 2663, column: 15, scope: !8096)
!8260 = !DILocation(line: 2663, column: 7, scope: !8083)
!8261 = !DILocation(line: 2664, column: 4, scope: !8095)
!8262 = !DILocation(line: 2664, column: 4, scope: !8104)
!8263 = !DILocalVariable(name: "__dummy", scope: !8264, file: !3, line: 2664, type: !281)
!8264 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 2664, column: 4)
!8265 = !DILocation(line: 2664, column: 4, scope: !8264)
!8266 = !DILocalVariable(name: "__dummy2", scope: !8264, file: !3, line: 2664, type: !281)
!8267 = !DILocation(line: 2664, column: 4, scope: !8103)
!8268 = !DILocation(line: 2664, column: 4, scope: !8102)
!8269 = !DILocation(line: 2664, column: 4, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 2664, column: 4)
!8271 = !DILocalVariable(name: "__dummy", scope: !8272, file: !3, line: 2664, type: !281)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 2664, column: 4)
!8273 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 2664, column: 4)
!8274 = !DILocation(line: 2664, column: 4, scope: !8272)
!8275 = !DILocalVariable(name: "__dummy2", scope: !8272, file: !3, line: 2664, type: !281)
!8276 = !DILocation(line: 2664, column: 4, scope: !8273)
!8277 = !DILocation(line: 2664, column: 4, scope: !8101)
!8278 = !{i32 -2140147255}
!8279 = !DILocation(line: 2664, column: 4, scope: !8100)
!8280 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !8099)
!8281 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !8099)
!8282 = !DILocation(line: 2666, column: 15, scope: !8095)
!8283 = !DILocation(line: 2666, column: 21, scope: !8095)
!8284 = !DILocation(line: 2666, column: 4, scope: !8095)
!8285 = !DILocation(line: 2668, column: 4, scope: !8095)
!8286 = !DILocation(line: 2669, column: 9, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2669, column: 8)
!8288 = !DILocation(line: 2669, column: 15, scope: !8287)
!8289 = !DILocation(line: 2669, column: 8, scope: !8095)
!8290 = !DILocation(line: 2670, column: 25, scope: !8287)
!8291 = !DILocation(line: 2670, column: 5, scope: !8287)
!8292 = !DILocation(line: 2670, column: 11, scope: !8287)
!8293 = !DILocation(line: 2670, column: 23, scope: !8287)
!8294 = !DILocation(line: 2671, column: 4, scope: !8095)
!8295 = !{i32 -2140146819}
!8296 = !DILocation(line: 2672, column: 8, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2672, column: 8)
!8298 = !DILocation(line: 2672, column: 14, scope: !8297)
!8299 = !DILocation(line: 2672, column: 25, scope: !8297)
!8300 = !DILocation(line: 2672, column: 8, scope: !8095)
!8301 = !DILocation(line: 2673, column: 9, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 2673, column: 9)
!8303 = distinct !DILexicalBlock(scope: !8297, file: !3, line: 2672, column: 48)
!8304 = !DILocation(line: 2673, column: 15, scope: !8302)
!8305 = !DILocation(line: 2673, column: 18, scope: !8302)
!8306 = !DILocation(line: 2673, column: 9, scope: !8303)
!8307 = !DILocation(line: 2674, column: 27, scope: !8302)
!8308 = !DILocation(line: 2674, column: 6, scope: !8302)
!8309 = !DILocation(line: 2675, column: 4, scope: !8303)
!8310 = !DILocation(line: 2676, column: 34, scope: !8095)
!8311 = !DILocation(line: 2676, column: 40, scope: !8095)
!8312 = !DILocation(line: 2676, column: 4, scope: !8095)
!8313 = !DILocation(line: 2677, column: 22, scope: !8095)
!8314 = !DILocation(line: 2677, column: 28, scope: !8095)
!8315 = !DILocation(line: 2677, column: 4, scope: !8095)
!8316 = !DILocation(line: 2679, column: 28, scope: !8095)
!8317 = !DILocation(line: 2679, column: 34, scope: !8095)
!8318 = !DILocation(line: 2679, column: 44, scope: !8095)
!8319 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !8094)
!8320 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !8094)
!8321 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !8094)
!8322 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !8094)
!8323 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !8094)
!8324 = !DILocation(line: 2680, column: 3, scope: !8095)
!8325 = !DILocation(line: 2682, column: 7, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2682, column: 7)
!8327 = !DILocation(line: 2682, column: 15, scope: !8326)
!8328 = !DILocation(line: 2682, column: 7, scope: !8083)
!8329 = !DILocation(line: 2683, column: 4, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 2682, column: 33)
!8331 = !DILocation(line: 2684, column: 8, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 2684, column: 8)
!8333 = !DILocation(line: 2684, column: 14, scope: !8332)
!8334 = !DILocation(line: 2684, column: 25, scope: !8332)
!8335 = !DILocation(line: 2684, column: 47, scope: !8332)
!8336 = !DILocation(line: 2684, column: 50, scope: !8332)
!8337 = !DILocation(line: 2684, column: 56, scope: !8332)
!8338 = !DILocation(line: 2684, column: 8, scope: !8330)
!8339 = !DILocation(line: 2685, column: 26, scope: !8332)
!8340 = !DILocation(line: 2685, column: 5, scope: !8332)
!8341 = !DILocation(line: 2686, column: 3, scope: !8330)
!8342 = !DILocation(line: 2688, column: 7, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2688, column: 7)
!8344 = !DILocation(line: 2688, column: 15, scope: !8343)
!8345 = !DILocation(line: 2688, column: 7, scope: !8083)
!8346 = !DILocation(line: 2689, column: 4, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 2688, column: 33)
!8348 = !DILocation(line: 2690, column: 8, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 2690, column: 8)
!8350 = !DILocation(line: 2690, column: 14, scope: !8349)
!8351 = !DILocation(line: 2690, column: 25, scope: !8349)
!8352 = !DILocation(line: 2690, column: 47, scope: !8349)
!8353 = !DILocation(line: 2690, column: 50, scope: !8349)
!8354 = !DILocation(line: 2690, column: 56, scope: !8349)
!8355 = !DILocation(line: 2690, column: 8, scope: !8347)
!8356 = !DILocation(line: 2691, column: 27, scope: !8349)
!8357 = !DILocation(line: 2691, column: 5, scope: !8349)
!8358 = !DILocation(line: 2692, column: 3, scope: !8347)
!8359 = !DILocation(line: 2694, column: 7, scope: !8082)
!8360 = !DILocation(line: 2694, column: 15, scope: !8082)
!8361 = !DILocation(line: 2694, column: 7, scope: !8083)
!8362 = !DILocation(line: 2695, column: 4, scope: !8081)
!8363 = !DILocation(line: 2695, column: 4, scope: !8092)
!8364 = !DILocalVariable(name: "__dummy", scope: !8365, file: !3, line: 2695, type: !281)
!8365 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 2695, column: 4)
!8366 = !DILocation(line: 2695, column: 4, scope: !8365)
!8367 = !DILocalVariable(name: "__dummy2", scope: !8365, file: !3, line: 2695, type: !281)
!8368 = !DILocation(line: 2695, column: 4, scope: !8091)
!8369 = !DILocation(line: 2695, column: 4, scope: !8090)
!8370 = !DILocation(line: 2695, column: 4, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 2695, column: 4)
!8372 = !DILocalVariable(name: "__dummy", scope: !8373, file: !3, line: 2695, type: !281)
!8373 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 2695, column: 4)
!8374 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 2695, column: 4)
!8375 = !DILocation(line: 2695, column: 4, scope: !8373)
!8376 = !DILocalVariable(name: "__dummy2", scope: !8373, file: !3, line: 2695, type: !281)
!8377 = !DILocation(line: 2695, column: 4, scope: !8374)
!8378 = !DILocation(line: 2695, column: 4, scope: !8089)
!8379 = !{i32 -2140145074}
!8380 = !DILocation(line: 2695, column: 4, scope: !8088)
!8381 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !8087)
!8382 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !8087)
!8383 = !DILocation(line: 2697, column: 4, scope: !8081)
!8384 = !DILocation(line: 2698, column: 25, scope: !8081)
!8385 = !DILocation(line: 2698, column: 31, scope: !8081)
!8386 = !DILocation(line: 2698, column: 4, scope: !8081)
!8387 = !DILocation(line: 2700, column: 28, scope: !8081)
!8388 = !DILocation(line: 2700, column: 34, scope: !8081)
!8389 = !DILocation(line: 2700, column: 44, scope: !8081)
!8390 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !8080)
!8391 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !8080)
!8392 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !8080)
!8393 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !8080)
!8394 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !8080)
!8395 = !DILocation(line: 2701, column: 3, scope: !8081)
!8396 = !DILocation(line: 2703, column: 7, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2703, column: 7)
!8398 = !DILocation(line: 2703, column: 15, scope: !8397)
!8399 = !DILocation(line: 2703, column: 7, scope: !8083)
!8400 = !DILocation(line: 2704, column: 4, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2703, column: 31)
!8402 = !DILocation(line: 2705, column: 21, scope: !8401)
!8403 = !DILocation(line: 2705, column: 4, scope: !8401)
!8404 = !DILocation(line: 2706, column: 3, scope: !8401)
!8405 = !DILocation(line: 2708, column: 7, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2708, column: 7)
!8407 = !DILocation(line: 2708, column: 17, scope: !8406)
!8408 = !DILocation(line: 2708, column: 15, scope: !8406)
!8409 = !DILocation(line: 2708, column: 7, scope: !8083)
!8410 = !DILocation(line: 2709, column: 4, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8406, file: !3, line: 2708, column: 48)
!8412 = !DILocation(line: 2711, column: 29, scope: !8411)
!8413 = !DILocation(line: 2711, column: 4, scope: !8411)
!8414 = !DILocation(line: 2712, column: 20, scope: !8411)
!8415 = !DILocation(line: 2712, column: 26, scope: !8411)
!8416 = !DILocation(line: 2712, column: 4, scope: !8411)
!8417 = !DILocation(line: 2713, column: 3, scope: !8411)
!8418 = !DILocation(line: 2715, column: 2, scope: !8083)
!8419 = !DILocation(line: 2717, column: 6, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2717, column: 6)
!8421 = !DILocation(line: 2717, column: 12, scope: !8420)
!8422 = !DILocation(line: 2717, column: 20, scope: !8420)
!8423 = !DILocation(line: 2717, column: 6, scope: !8078)
!8424 = !DILocation(line: 2718, column: 3, scope: !8420)
!8425 = !DILocation(line: 2721, column: 6, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2721, column: 6)
!8427 = !DILocation(line: 2721, column: 12, scope: !8426)
!8428 = !DILocation(line: 2721, column: 30, scope: !8426)
!8429 = !DILocation(line: 2721, column: 6, scope: !8078)
!8430 = !DILocation(line: 2722, column: 13, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2721, column: 36)
!8432 = !DILocation(line: 2722, column: 11, scope: !8431)
!8433 = !DILocation(line: 2723, column: 7, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 2723, column: 7)
!8435 = !DILocation(line: 2723, column: 15, scope: !8434)
!8436 = !DILocation(line: 2723, column: 7, scope: !8431)
!8437 = !DILocation(line: 2724, column: 4, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 2723, column: 60)
!8439 = !DILocation(line: 2726, column: 4, scope: !8438)
!8440 = !DILocation(line: 2727, column: 37, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 2727, column: 8)
!8442 = !DILocation(line: 2727, column: 43, scope: !8441)
!8443 = !DILocation(line: 2727, column: 9, scope: !8441)
!8444 = !DILocation(line: 2727, column: 8, scope: !8438)
!8445 = !DILocation(line: 2728, column: 5, scope: !8441)
!8446 = !DILocation(line: 2728, column: 11, scope: !8441)
!8447 = !DILocation(line: 2728, column: 20, scope: !8441)
!8448 = !DILocation(line: 2728, column: 37, scope: !8441)
!8449 = !DILocation(line: 2728, column: 29, scope: !8441)
!8450 = !DILocation(line: 2729, column: 3, scope: !8438)
!8451 = !DILocation(line: 2730, column: 2, scope: !8431)
!8452 = !DILocation(line: 2731, column: 13, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 2730, column: 9)
!8454 = !DILocation(line: 2731, column: 11, scope: !8453)
!8455 = !DILocation(line: 2732, column: 7, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 2732, column: 7)
!8457 = !DILocation(line: 2732, column: 15, scope: !8456)
!8458 = !DILocation(line: 2732, column: 7, scope: !8453)
!8459 = !DILocation(line: 2733, column: 4, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 2732, column: 60)
!8461 = !DILocation(line: 2735, column: 4, scope: !8460)
!8462 = !DILocation(line: 2736, column: 37, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 2736, column: 8)
!8464 = !DILocation(line: 2736, column: 43, scope: !8463)
!8465 = !DILocation(line: 2736, column: 9, scope: !8463)
!8466 = !DILocation(line: 2736, column: 8, scope: !8460)
!8467 = !DILocation(line: 2737, column: 5, scope: !8463)
!8468 = !DILocation(line: 2737, column: 11, scope: !8463)
!8469 = !DILocation(line: 2737, column: 20, scope: !8463)
!8470 = !DILocation(line: 2737, column: 37, scope: !8463)
!8471 = !DILocation(line: 2737, column: 29, scope: !8463)
!8472 = !DILocation(line: 2738, column: 3, scope: !8460)
!8473 = !DILocation(line: 2741, column: 2, scope: !8078)
!8474 = !DILocation(line: 2742, column: 1, scope: !8078)
!8475 = distinct !DISubprogram(name: "dw_mci_init_slot", scope: !3, file: !3, line: 2788, type: !5836, scopeLine: 2789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8476 = !DILocalVariable(name: "host", arg: 1, scope: !8475, file: !3, line: 2788, type: !286)
!8477 = !DILocation(line: 2788, column: 44, scope: !8475)
!8478 = !DILocalVariable(name: "mmc", scope: !8475, file: !3, line: 2790, type: !5393)
!8479 = !DILocation(line: 2790, column: 19, scope: !8475)
!8480 = !DILocalVariable(name: "slot", scope: !8475, file: !3, line: 2791, type: !6210)
!8481 = !DILocation(line: 2791, column: 22, scope: !8475)
!8482 = !DILocalVariable(name: "ret", scope: !8475, file: !3, line: 2792, type: !446)
!8483 = !DILocation(line: 2792, column: 6, scope: !8475)
!8484 = !DILocation(line: 2794, column: 51, scope: !8475)
!8485 = !DILocation(line: 2794, column: 57, scope: !8475)
!8486 = !DILocation(line: 2794, column: 8, scope: !8475)
!8487 = !DILocation(line: 2794, column: 6, scope: !8475)
!8488 = !DILocation(line: 2795, column: 7, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2795, column: 6)
!8490 = !DILocation(line: 2795, column: 6, scope: !8475)
!8491 = !DILocation(line: 2796, column: 3, scope: !8489)
!8492 = !DILocation(line: 2798, column: 18, scope: !8475)
!8493 = !DILocation(line: 2798, column: 9, scope: !8475)
!8494 = !DILocation(line: 2798, column: 7, scope: !8475)
!8495 = !DILocation(line: 2799, column: 2, scope: !8475)
!8496 = !DILocation(line: 2799, column: 8, scope: !8475)
!8497 = !DILocation(line: 2799, column: 11, scope: !8475)
!8498 = !DILocation(line: 2800, column: 18, scope: !8475)
!8499 = !DILocation(line: 2800, column: 24, scope: !8475)
!8500 = !DILocation(line: 2800, column: 35, scope: !8475)
!8501 = !DILocation(line: 2800, column: 41, scope: !8475)
!8502 = !DILocation(line: 2800, column: 33, scope: !8475)
!8503 = !DILocation(line: 2800, column: 2, scope: !8475)
!8504 = !DILocation(line: 2800, column: 8, scope: !8475)
!8505 = !DILocation(line: 2800, column: 16, scope: !8475)
!8506 = !DILocation(line: 2801, column: 14, scope: !8475)
!8507 = !DILocation(line: 2801, column: 2, scope: !8475)
!8508 = !DILocation(line: 2801, column: 8, scope: !8475)
!8509 = !DILocation(line: 2801, column: 12, scope: !8475)
!8510 = !DILocation(line: 2802, column: 15, scope: !8475)
!8511 = !DILocation(line: 2802, column: 2, scope: !8475)
!8512 = !DILocation(line: 2802, column: 8, scope: !8475)
!8513 = !DILocation(line: 2802, column: 13, scope: !8475)
!8514 = !DILocation(line: 2803, column: 15, scope: !8475)
!8515 = !DILocation(line: 2803, column: 2, scope: !8475)
!8516 = !DILocation(line: 2803, column: 8, scope: !8475)
!8517 = !DILocation(line: 2803, column: 13, scope: !8475)
!8518 = !DILocation(line: 2805, column: 2, scope: !8475)
!8519 = !DILocation(line: 2805, column: 7, scope: !8475)
!8520 = !DILocation(line: 2805, column: 11, scope: !8475)
!8521 = !DILocation(line: 2808, column: 33, scope: !8475)
!8522 = !DILocation(line: 2808, column: 8, scope: !8475)
!8523 = !DILocation(line: 2808, column: 6, scope: !8475)
!8524 = !DILocation(line: 2809, column: 6, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2809, column: 6)
!8526 = !DILocation(line: 2809, column: 6, scope: !8475)
!8527 = !DILocation(line: 2810, column: 3, scope: !8525)
!8528 = !DILocation(line: 2812, column: 7, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2812, column: 6)
!8530 = !DILocation(line: 2812, column: 12, scope: !8529)
!8531 = !DILocation(line: 2812, column: 6, scope: !8475)
!8532 = !DILocation(line: 2813, column: 3, scope: !8529)
!8533 = !DILocation(line: 2813, column: 8, scope: !8529)
!8534 = !DILocation(line: 2813, column: 18, scope: !8529)
!8535 = !DILocation(line: 2815, column: 21, scope: !8475)
!8536 = !DILocation(line: 2815, column: 8, scope: !8475)
!8537 = !DILocation(line: 2815, column: 6, scope: !8475)
!8538 = !DILocation(line: 2816, column: 6, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2816, column: 6)
!8540 = !DILocation(line: 2816, column: 6, scope: !8475)
!8541 = !DILocation(line: 2817, column: 3, scope: !8539)
!8542 = !DILocation(line: 2819, column: 30, scope: !8475)
!8543 = !DILocation(line: 2819, column: 8, scope: !8475)
!8544 = !DILocation(line: 2819, column: 6, scope: !8475)
!8545 = !DILocation(line: 2820, column: 6, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2820, column: 6)
!8547 = !DILocation(line: 2820, column: 6, scope: !8475)
!8548 = !DILocation(line: 2821, column: 3, scope: !8546)
!8549 = !DILocation(line: 2824, column: 6, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2824, column: 6)
!8551 = !DILocation(line: 2824, column: 12, scope: !8550)
!8552 = !DILocation(line: 2824, column: 20, scope: !8550)
!8553 = !DILocation(line: 2824, column: 6, scope: !8475)
!8554 = !DILocation(line: 2825, column: 19, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2824, column: 41)
!8556 = !DILocation(line: 2825, column: 25, scope: !8555)
!8557 = !DILocation(line: 2825, column: 3, scope: !8555)
!8558 = !DILocation(line: 2825, column: 8, scope: !8555)
!8559 = !DILocation(line: 2825, column: 17, scope: !8555)
!8560 = !DILocation(line: 2826, column: 3, scope: !8555)
!8561 = !DILocation(line: 2826, column: 8, scope: !8555)
!8562 = !DILocation(line: 2826, column: 21, scope: !8555)
!8563 = !DILocation(line: 2827, column: 3, scope: !8555)
!8564 = !DILocation(line: 2827, column: 8, scope: !8555)
!8565 = !DILocation(line: 2827, column: 21, scope: !8555)
!8566 = !DILocation(line: 2828, column: 23, scope: !8555)
!8567 = !DILocation(line: 2828, column: 28, scope: !8555)
!8568 = !DILocation(line: 2828, column: 43, scope: !8555)
!8569 = !DILocation(line: 2828, column: 49, scope: !8555)
!8570 = !DILocation(line: 2828, column: 41, scope: !8555)
!8571 = !DILocation(line: 2828, column: 3, scope: !8555)
!8572 = !DILocation(line: 2828, column: 8, scope: !8555)
!8573 = !DILocation(line: 2828, column: 21, scope: !8555)
!8574 = !DILocation(line: 2829, column: 24, scope: !8555)
!8575 = !DILocation(line: 2829, column: 29, scope: !8555)
!8576 = !DILocation(line: 2829, column: 42, scope: !8555)
!8577 = !DILocation(line: 2829, column: 3, scope: !8555)
!8578 = !DILocation(line: 2829, column: 8, scope: !8555)
!8579 = !DILocation(line: 2829, column: 22, scope: !8555)
!8580 = !DILocation(line: 2830, column: 2, scope: !8555)
!8581 = !DILocation(line: 2830, column: 13, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2830, column: 13)
!8583 = !DILocation(line: 2830, column: 19, scope: !8582)
!8584 = !DILocation(line: 2830, column: 27, scope: !8582)
!8585 = !DILocation(line: 2830, column: 13, scope: !8550)
!8586 = !DILocation(line: 2831, column: 3, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 2830, column: 48)
!8588 = !DILocation(line: 2831, column: 8, scope: !8587)
!8589 = !DILocation(line: 2831, column: 17, scope: !8587)
!8590 = !DILocation(line: 2832, column: 3, scope: !8587)
!8591 = !DILocation(line: 2832, column: 8, scope: !8587)
!8592 = !DILocation(line: 2832, column: 21, scope: !8587)
!8593 = !DILocation(line: 2833, column: 3, scope: !8587)
!8594 = !DILocation(line: 2833, column: 8, scope: !8587)
!8595 = !DILocation(line: 2833, column: 22, scope: !8587)
!8596 = !DILocation(line: 2835, column: 5, scope: !8587)
!8597 = !DILocation(line: 2835, column: 10, scope: !8587)
!8598 = !DILocation(line: 2835, column: 25, scope: !8587)
!8599 = !DILocation(line: 2835, column: 30, scope: !8587)
!8600 = !DILocation(line: 2835, column: 23, scope: !8587)
!8601 = !DILocation(line: 2834, column: 3, scope: !8587)
!8602 = !DILocation(line: 2834, column: 8, scope: !8587)
!8603 = !DILocation(line: 2834, column: 21, scope: !8587)
!8604 = !DILocation(line: 2836, column: 23, scope: !8587)
!8605 = !DILocation(line: 2836, column: 28, scope: !8587)
!8606 = !DILocation(line: 2836, column: 3, scope: !8587)
!8607 = !DILocation(line: 2836, column: 8, scope: !8587)
!8608 = !DILocation(line: 2836, column: 21, scope: !8587)
!8609 = !DILocation(line: 2837, column: 2, scope: !8587)
!8610 = !DILocation(line: 2839, column: 3, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 2837, column: 9)
!8612 = !DILocation(line: 2839, column: 8, scope: !8611)
!8613 = !DILocation(line: 2839, column: 17, scope: !8611)
!8614 = !DILocation(line: 2840, column: 3, scope: !8611)
!8615 = !DILocation(line: 2840, column: 8, scope: !8611)
!8616 = !DILocation(line: 2840, column: 21, scope: !8611)
!8617 = !DILocation(line: 2841, column: 3, scope: !8611)
!8618 = !DILocation(line: 2841, column: 8, scope: !8611)
!8619 = !DILocation(line: 2841, column: 22, scope: !8611)
!8620 = !DILocation(line: 2842, column: 23, scope: !8611)
!8621 = !DILocation(line: 2842, column: 28, scope: !8611)
!8622 = !DILocation(line: 2843, column: 9, scope: !8611)
!8623 = !DILocation(line: 2843, column: 14, scope: !8611)
!8624 = !DILocation(line: 2842, column: 41, scope: !8611)
!8625 = !DILocation(line: 2842, column: 3, scope: !8611)
!8626 = !DILocation(line: 2842, column: 8, scope: !8611)
!8627 = !DILocation(line: 2842, column: 21, scope: !8611)
!8628 = !DILocation(line: 2844, column: 23, scope: !8611)
!8629 = !DILocation(line: 2844, column: 28, scope: !8611)
!8630 = !DILocation(line: 2844, column: 3, scope: !8611)
!8631 = !DILocation(line: 2844, column: 8, scope: !8611)
!8632 = !DILocation(line: 2844, column: 21, scope: !8611)
!8633 = !DILocation(line: 2847, column: 16, scope: !8475)
!8634 = !DILocation(line: 2847, column: 2, scope: !8475)
!8635 = !DILocation(line: 2849, column: 21, scope: !8475)
!8636 = !DILocation(line: 2849, column: 8, scope: !8475)
!8637 = !DILocation(line: 2849, column: 6, scope: !8475)
!8638 = !DILocation(line: 2850, column: 6, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2850, column: 6)
!8640 = !DILocation(line: 2850, column: 6, scope: !8475)
!8641 = !DILocation(line: 2851, column: 3, scope: !8639)
!8642 = !DILocation(line: 2857, column: 2, scope: !8475)
!8643 = !DILabel(scope: !8475, name: "err_host_allocated", file: !3, line: 2859)
!8644 = !DILocation(line: 2859, column: 1, scope: !8475)
!8645 = !DILocation(line: 2860, column: 16, scope: !8475)
!8646 = !DILocation(line: 2860, column: 2, scope: !8475)
!8647 = !DILocation(line: 2861, column: 9, scope: !8475)
!8648 = !DILocation(line: 2861, column: 2, scope: !8475)
!8649 = !DILocation(line: 2862, column: 1, scope: !8475)
!8650 = distinct !DISubprogram(name: "dw_mci_enable_cd", scope: !3, file: !3, line: 3135, type: !5845, scopeLine: 3136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8651 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !8652)
!8652 = distinct !DILocation(line: 3152, column: 3, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !3, line: 3147, column: 44)
!8654 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 3147, column: 6)
!8655 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !8652)
!8656 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !8657)
!8657 = distinct !DILocation(line: 3148, column: 3, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 3148, column: 3)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 3148, column: 3)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 3148, column: 3)
!8661 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 3148, column: 3)
!8662 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 3148, column: 3)
!8663 = !DILocalVariable(name: "host", arg: 1, scope: !8650, file: !3, line: 3135, type: !286)
!8664 = !DILocation(line: 3135, column: 45, scope: !8650)
!8665 = !DILocalVariable(name: "irqflags", scope: !8650, file: !3, line: 3137, type: !281)
!8666 = !DILocation(line: 3137, column: 16, scope: !8650)
!8667 = !DILocalVariable(name: "temp", scope: !8650, file: !3, line: 3138, type: !309)
!8668 = !DILocation(line: 3138, column: 6, scope: !8650)
!8669 = !DILocation(line: 3144, column: 6, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8650, file: !3, line: 3144, column: 6)
!8671 = !DILocation(line: 3144, column: 12, scope: !8670)
!8672 = !DILocation(line: 3144, column: 18, scope: !8670)
!8673 = !DILocation(line: 3144, column: 23, scope: !8670)
!8674 = !DILocation(line: 3144, column: 28, scope: !8670)
!8675 = !DILocation(line: 3144, column: 6, scope: !8650)
!8676 = !DILocation(line: 3145, column: 3, scope: !8670)
!8677 = !DILocation(line: 3147, column: 22, scope: !8654)
!8678 = !DILocation(line: 3147, column: 28, scope: !8654)
!8679 = !DILocation(line: 3147, column: 34, scope: !8654)
!8680 = !DILocation(line: 3147, column: 6, scope: !8654)
!8681 = !DILocation(line: 3147, column: 39, scope: !8654)
!8682 = !DILocation(line: 3147, column: 6, scope: !8650)
!8683 = !DILocation(line: 3148, column: 3, scope: !8653)
!8684 = !DILocation(line: 3148, column: 3, scope: !8662)
!8685 = !DILocalVariable(name: "__dummy", scope: !8686, file: !3, line: 3148, type: !281)
!8686 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 3148, column: 3)
!8687 = !DILocation(line: 3148, column: 3, scope: !8686)
!8688 = !DILocalVariable(name: "__dummy2", scope: !8686, file: !3, line: 3148, type: !281)
!8689 = !DILocation(line: 3148, column: 3, scope: !8661)
!8690 = !DILocation(line: 3148, column: 3, scope: !8660)
!8691 = !DILocation(line: 3148, column: 3, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 3148, column: 3)
!8693 = !DILocalVariable(name: "__dummy", scope: !8694, file: !3, line: 3148, type: !281)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 3148, column: 3)
!8695 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 3148, column: 3)
!8696 = !DILocation(line: 3148, column: 3, scope: !8694)
!8697 = !DILocalVariable(name: "__dummy2", scope: !8694, file: !3, line: 3148, type: !281)
!8698 = !DILocation(line: 3148, column: 3, scope: !8695)
!8699 = !DILocation(line: 3148, column: 3, scope: !8659)
!8700 = !{i32 -2140128373}
!8701 = !DILocation(line: 3148, column: 3, scope: !8658)
!8702 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !8657)
!8703 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !8657)
!8704 = !DILocation(line: 3149, column: 10, scope: !8653)
!8705 = !DILocation(line: 3149, column: 8, scope: !8653)
!8706 = !DILocation(line: 3150, column: 9, scope: !8653)
!8707 = !DILocation(line: 3151, column: 3, scope: !8653)
!8708 = !DILocation(line: 3152, column: 27, scope: !8653)
!8709 = !DILocation(line: 3152, column: 33, scope: !8653)
!8710 = !DILocation(line: 3152, column: 43, scope: !8653)
!8711 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !8652)
!8712 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !8652)
!8713 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !8652)
!8714 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !8652)
!8715 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !8652)
!8716 = !DILocation(line: 3153, column: 2, scope: !8653)
!8717 = !DILocation(line: 3154, column: 1, scope: !8650)
!8718 = distinct !DISubprogram(name: "clk_disable_unprepare", scope: !6232, file: !6232, line: 921, type: !8719, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8719 = !DISubroutineType(types: !8720)
!8720 = !{null, !6230}
!8721 = !DILocalVariable(name: "clk", arg: 1, scope: !8718, file: !6232, line: 921, type: !6230)
!8722 = !DILocation(line: 921, column: 54, scope: !8718)
!8723 = !DILocation(line: 923, column: 14, scope: !8718)
!8724 = !DILocation(line: 923, column: 2, scope: !8718)
!8725 = !DILocation(line: 924, column: 16, scope: !8718)
!8726 = !DILocation(line: 924, column: 2, scope: !8718)
!8727 = !DILocation(line: 925, column: 1, scope: !8718)
!8728 = distinct !DISubprogram(name: "dw_mci_remove", scope: !3, file: !3, line: 3361, type: !5845, scopeLine: 3362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8729 = !DILocalVariable(name: "host", arg: 1, scope: !8728, file: !3, line: 3361, type: !286)
!8730 = !DILocation(line: 3361, column: 35, scope: !8728)
!8731 = !DILocation(line: 3364, column: 6, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 3364, column: 6)
!8733 = !DILocation(line: 3364, column: 12, scope: !8732)
!8734 = !DILocation(line: 3364, column: 6, scope: !8728)
!8735 = !DILocation(line: 3365, column: 23, scope: !8732)
!8736 = !DILocation(line: 3365, column: 29, scope: !8732)
!8737 = !DILocation(line: 3365, column: 3, scope: !8732)
!8738 = !DILocation(line: 3367, column: 2, scope: !8728)
!8739 = !DILocation(line: 3368, column: 2, scope: !8728)
!8740 = !DILocation(line: 3371, column: 2, scope: !8728)
!8741 = !DILocation(line: 3372, column: 2, scope: !8728)
!8742 = !DILocation(line: 3374, column: 6, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 3374, column: 6)
!8744 = !DILocation(line: 3374, column: 12, scope: !8743)
!8745 = !DILocation(line: 3374, column: 20, scope: !8743)
!8746 = !DILocation(line: 3374, column: 23, scope: !8743)
!8747 = !DILocation(line: 3374, column: 29, scope: !8743)
!8748 = !DILocation(line: 3374, column: 38, scope: !8743)
!8749 = !DILocation(line: 3374, column: 6, scope: !8728)
!8750 = !DILocation(line: 3375, column: 3, scope: !8743)
!8751 = !DILocation(line: 3375, column: 9, scope: !8743)
!8752 = !DILocation(line: 3375, column: 18, scope: !8743)
!8753 = !DILocation(line: 3375, column: 23, scope: !8743)
!8754 = !DILocation(line: 3377, column: 14, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 3377, column: 6)
!8756 = !DILocation(line: 3377, column: 20, scope: !8755)
!8757 = !DILocation(line: 3377, column: 27, scope: !8755)
!8758 = !DILocation(line: 3377, column: 7, scope: !8755)
!8759 = !DILocation(line: 3377, column: 6, scope: !8728)
!8760 = !DILocation(line: 3378, column: 24, scope: !8755)
!8761 = !DILocation(line: 3378, column: 30, scope: !8755)
!8762 = !DILocation(line: 3378, column: 37, scope: !8755)
!8763 = !DILocation(line: 3378, column: 3, scope: !8755)
!8764 = !DILocation(line: 3380, column: 24, scope: !8728)
!8765 = !DILocation(line: 3380, column: 30, scope: !8728)
!8766 = !DILocation(line: 3380, column: 2, scope: !8728)
!8767 = !DILocation(line: 3381, column: 24, scope: !8728)
!8768 = !DILocation(line: 3381, column: 30, scope: !8728)
!8769 = !DILocation(line: 3381, column: 2, scope: !8728)
!8770 = !DILocation(line: 3382, column: 1, scope: !8728)
!8771 = distinct !DISubprogram(name: "dw_mci_cleanup_slot", scope: !3, file: !3, line: 2864, type: !8772, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{null, !6210}
!8774 = !DILocalVariable(name: "slot", arg: 1, scope: !8771, file: !3, line: 2864, type: !6210)
!8775 = !DILocation(line: 2864, column: 53, scope: !8771)
!8776 = !DILocation(line: 2867, column: 18, scope: !8771)
!8777 = !DILocation(line: 2867, column: 24, scope: !8771)
!8778 = !DILocation(line: 2867, column: 2, scope: !8771)
!8779 = !DILocation(line: 2868, column: 2, scope: !8771)
!8780 = !DILocation(line: 2868, column: 8, scope: !8771)
!8781 = !DILocation(line: 2868, column: 14, scope: !8771)
!8782 = !DILocation(line: 2868, column: 19, scope: !8771)
!8783 = !DILocation(line: 2869, column: 16, scope: !8771)
!8784 = !DILocation(line: 2869, column: 22, scope: !8771)
!8785 = !DILocation(line: 2869, column: 2, scope: !8771)
!8786 = !DILocation(line: 2870, column: 1, scope: !8771)
!8787 = distinct !DISubprogram(name: "dw_mci_runtime_suspend", scope: !3, file: !3, line: 3388, type: !2401, scopeLine: 3389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8788 = !DILocalVariable(name: "dev", arg: 1, scope: !8787, file: !3, line: 3388, type: !2369)
!8789 = !DILocation(line: 3388, column: 43, scope: !8787)
!8790 = !DILocalVariable(name: "host", scope: !8787, file: !3, line: 3390, type: !286)
!8791 = !DILocation(line: 3390, column: 17, scope: !8787)
!8792 = !DILocation(line: 3390, column: 40, scope: !8787)
!8793 = !DILocation(line: 3390, column: 24, scope: !8787)
!8794 = !DILocation(line: 3392, column: 6, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 3392, column: 6)
!8796 = !DILocation(line: 3392, column: 12, scope: !8795)
!8797 = !DILocation(line: 3392, column: 20, scope: !8795)
!8798 = !DILocation(line: 3392, column: 23, scope: !8795)
!8799 = !DILocation(line: 3392, column: 29, scope: !8795)
!8800 = !DILocation(line: 3392, column: 38, scope: !8795)
!8801 = !DILocation(line: 3392, column: 6, scope: !8787)
!8802 = !DILocation(line: 3393, column: 3, scope: !8795)
!8803 = !DILocation(line: 3393, column: 9, scope: !8795)
!8804 = !DILocation(line: 3393, column: 18, scope: !8795)
!8805 = !DILocation(line: 3393, column: 23, scope: !8795)
!8806 = !DILocation(line: 3395, column: 24, scope: !8787)
!8807 = !DILocation(line: 3395, column: 30, scope: !8787)
!8808 = !DILocation(line: 3395, column: 2, scope: !8787)
!8809 = !DILocation(line: 3397, column: 6, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 3397, column: 6)
!8811 = !DILocation(line: 3397, column: 12, scope: !8810)
!8812 = !DILocation(line: 3397, column: 17, scope: !8810)
!8813 = !DILocation(line: 3398, column: 23, scope: !8810)
!8814 = !DILocation(line: 3398, column: 29, scope: !8810)
!8815 = !DILocation(line: 3398, column: 35, scope: !8810)
!8816 = !DILocation(line: 3398, column: 7, scope: !8810)
!8817 = !DILocation(line: 3398, column: 40, scope: !8810)
!8818 = !DILocation(line: 3399, column: 30, scope: !8810)
!8819 = !DILocation(line: 3399, column: 36, scope: !8810)
!8820 = !DILocation(line: 3399, column: 42, scope: !8810)
!8821 = !DILocation(line: 3399, column: 8, scope: !8810)
!8822 = !DILocation(line: 3397, column: 6, scope: !8787)
!8823 = !DILocation(line: 3400, column: 25, scope: !8810)
!8824 = !DILocation(line: 3400, column: 31, scope: !8810)
!8825 = !DILocation(line: 3400, column: 3, scope: !8810)
!8826 = !DILocation(line: 3402, column: 2, scope: !8787)
!8827 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !41, file: !41, line: 655, type: !8828, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8828 = !DISubroutineType(types: !8829)
!8829 = !{!284, !2699}
!8830 = !DILocalVariable(name: "dev", arg: 1, scope: !8827, file: !41, line: 655, type: !2699)
!8831 = !DILocation(line: 655, column: 58, scope: !8827)
!8832 = !DILocation(line: 657, column: 9, scope: !8827)
!8833 = !DILocation(line: 657, column: 14, scope: !8827)
!8834 = !DILocation(line: 657, column: 2, scope: !8827)
!8835 = distinct !DISubprogram(name: "mmc_card_is_removable", scope: !5395, file: !5395, line: 552, type: !5438, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8836 = !DILocalVariable(name: "host", arg: 1, scope: !8835, file: !5395, line: 552, type: !5393)
!8837 = !DILocation(line: 552, column: 58, scope: !8835)
!8838 = !DILocation(line: 554, column: 11, scope: !8835)
!8839 = !DILocation(line: 554, column: 17, scope: !8835)
!8840 = !DILocation(line: 554, column: 22, scope: !8835)
!8841 = !DILocation(line: 554, column: 9, scope: !8835)
!8842 = !DILocation(line: 554, column: 2, scope: !8835)
!8843 = distinct !DISubprogram(name: "dw_mci_runtime_resume", scope: !3, file: !3, line: 3406, type: !2401, scopeLine: 3407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8844 = !DILocalVariable(name: "dev", arg: 1, scope: !8843, file: !3, line: 3406, type: !2369)
!8845 = !DILocation(line: 3406, column: 42, scope: !8843)
!8846 = !DILocalVariable(name: "ret", scope: !8843, file: !3, line: 3408, type: !446)
!8847 = !DILocation(line: 3408, column: 6, scope: !8843)
!8848 = !DILocalVariable(name: "host", scope: !8843, file: !3, line: 3409, type: !286)
!8849 = !DILocation(line: 3409, column: 17, scope: !8843)
!8850 = !DILocation(line: 3409, column: 40, scope: !8843)
!8851 = !DILocation(line: 3409, column: 24, scope: !8843)
!8852 = !DILocation(line: 3411, column: 6, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3411, column: 6)
!8854 = !DILocation(line: 3411, column: 12, scope: !8853)
!8855 = !DILocation(line: 3411, column: 17, scope: !8853)
!8856 = !DILocation(line: 3412, column: 23, scope: !8853)
!8857 = !DILocation(line: 3412, column: 29, scope: !8853)
!8858 = !DILocation(line: 3412, column: 35, scope: !8853)
!8859 = !DILocation(line: 3412, column: 7, scope: !8853)
!8860 = !DILocation(line: 3412, column: 40, scope: !8853)
!8861 = !DILocation(line: 3413, column: 30, scope: !8853)
!8862 = !DILocation(line: 3413, column: 36, scope: !8853)
!8863 = !DILocation(line: 3413, column: 42, scope: !8853)
!8864 = !DILocation(line: 3413, column: 8, scope: !8853)
!8865 = !DILocation(line: 3411, column: 6, scope: !8843)
!8866 = !DILocation(line: 3414, column: 28, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 3413, column: 49)
!8868 = !DILocation(line: 3414, column: 34, scope: !8867)
!8869 = !DILocation(line: 3414, column: 9, scope: !8867)
!8870 = !DILocation(line: 3414, column: 7, scope: !8867)
!8871 = !DILocation(line: 3415, column: 7, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 3415, column: 7)
!8873 = !DILocation(line: 3415, column: 7, scope: !8867)
!8874 = !DILocation(line: 3416, column: 11, scope: !8872)
!8875 = !DILocation(line: 3416, column: 4, scope: !8872)
!8876 = !DILocation(line: 3417, column: 2, scope: !8867)
!8877 = !DILocation(line: 3419, column: 27, scope: !8843)
!8878 = !DILocation(line: 3419, column: 33, scope: !8843)
!8879 = !DILocation(line: 3419, column: 8, scope: !8843)
!8880 = !DILocation(line: 3419, column: 6, scope: !8843)
!8881 = !DILocation(line: 3420, column: 6, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3420, column: 6)
!8883 = !DILocation(line: 3420, column: 6, scope: !8843)
!8884 = !DILocation(line: 3421, column: 3, scope: !8882)
!8885 = !DILocation(line: 3423, column: 25, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3423, column: 6)
!8887 = !DILocation(line: 3423, column: 7, scope: !8886)
!8888 = !DILocation(line: 3423, column: 6, scope: !8843)
!8889 = !DILocation(line: 3424, column: 25, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8886, file: !3, line: 3423, column: 60)
!8891 = !DILocation(line: 3424, column: 31, scope: !8890)
!8892 = !DILocation(line: 3424, column: 3, scope: !8890)
!8893 = !DILocation(line: 3425, column: 7, scope: !8890)
!8894 = !DILocation(line: 3426, column: 3, scope: !8890)
!8895 = !DILocation(line: 3429, column: 6, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3429, column: 6)
!8897 = !DILocation(line: 3429, column: 12, scope: !8896)
!8898 = !DILocation(line: 3429, column: 20, scope: !8896)
!8899 = !DILocation(line: 3429, column: 23, scope: !8896)
!8900 = !DILocation(line: 3429, column: 29, scope: !8896)
!8901 = !DILocation(line: 3429, column: 38, scope: !8896)
!8902 = !DILocation(line: 3429, column: 6, scope: !8843)
!8903 = !DILocation(line: 3430, column: 3, scope: !8896)
!8904 = !DILocation(line: 3430, column: 9, scope: !8896)
!8905 = !DILocation(line: 3430, column: 18, scope: !8896)
!8906 = !DILocation(line: 3430, column: 23, scope: !8896)
!8907 = !DILocation(line: 3436, column: 2, scope: !8843)
!8908 = !DILocation(line: 3437, column: 2, scope: !8843)
!8909 = !DILocation(line: 3437, column: 8, scope: !8843)
!8910 = !DILocation(line: 3437, column: 19, scope: !8843)
!8911 = !DILocation(line: 3440, column: 2, scope: !8843)
!8912 = !DILocation(line: 3442, column: 2, scope: !8843)
!8913 = !DILocation(line: 3443, column: 2, scope: !8843)
!8914 = !DILocation(line: 3446, column: 2, scope: !8843)
!8915 = !DILocation(line: 3449, column: 6, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3449, column: 6)
!8917 = !DILocation(line: 3449, column: 12, scope: !8916)
!8918 = !DILocation(line: 3449, column: 18, scope: !8916)
!8919 = !DILocation(line: 3449, column: 23, scope: !8916)
!8920 = !DILocation(line: 3449, column: 32, scope: !8916)
!8921 = !DILocation(line: 3449, column: 6, scope: !8843)
!8922 = !DILocation(line: 3450, column: 18, scope: !8916)
!8923 = !DILocation(line: 3450, column: 24, scope: !8916)
!8924 = !DILocation(line: 3450, column: 30, scope: !8916)
!8925 = !DILocation(line: 3450, column: 36, scope: !8916)
!8926 = !DILocation(line: 3450, column: 42, scope: !8916)
!8927 = !DILocation(line: 3450, column: 48, scope: !8916)
!8928 = !DILocation(line: 3450, column: 53, scope: !8916)
!8929 = !DILocation(line: 3450, column: 3, scope: !8916)
!8930 = !DILocation(line: 3453, column: 19, scope: !8843)
!8931 = !DILocation(line: 3453, column: 25, scope: !8843)
!8932 = !DILocation(line: 3453, column: 2, scope: !8843)
!8933 = !DILocation(line: 3456, column: 23, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3456, column: 6)
!8935 = !DILocation(line: 3456, column: 29, scope: !8934)
!8936 = !DILocation(line: 3456, column: 35, scope: !8934)
!8937 = !DILocation(line: 3456, column: 6, scope: !8934)
!8938 = !DILocation(line: 3456, column: 6, scope: !8843)
!8939 = !DILocation(line: 3457, column: 28, scope: !8934)
!8940 = !DILocation(line: 3457, column: 34, scope: !8934)
!8941 = !DILocation(line: 3457, column: 3, scope: !8934)
!8942 = !DILocation(line: 3460, column: 19, scope: !8843)
!8943 = !DILocation(line: 3460, column: 2, scope: !8843)
!8944 = !DILocation(line: 3462, column: 2, scope: !8843)
!8945 = !DILabel(scope: !8843, name: "err", file: !3, line: 3464)
!8946 = !DILocation(line: 3464, column: 1, scope: !8843)
!8947 = !DILocation(line: 3465, column: 6, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 3465, column: 6)
!8949 = !DILocation(line: 3465, column: 12, scope: !8948)
!8950 = !DILocation(line: 3465, column: 17, scope: !8948)
!8951 = !DILocation(line: 3466, column: 23, scope: !8948)
!8952 = !DILocation(line: 3466, column: 29, scope: !8948)
!8953 = !DILocation(line: 3466, column: 35, scope: !8948)
!8954 = !DILocation(line: 3466, column: 7, scope: !8948)
!8955 = !DILocation(line: 3466, column: 40, scope: !8948)
!8956 = !DILocation(line: 3467, column: 30, scope: !8948)
!8957 = !DILocation(line: 3467, column: 36, scope: !8948)
!8958 = !DILocation(line: 3467, column: 42, scope: !8948)
!8959 = !DILocation(line: 3467, column: 8, scope: !8948)
!8960 = !DILocation(line: 3465, column: 6, scope: !8843)
!8961 = !DILocation(line: 3468, column: 25, scope: !8948)
!8962 = !DILocation(line: 3468, column: 31, scope: !8948)
!8963 = !DILocation(line: 3468, column: 3, scope: !8948)
!8964 = !DILocation(line: 3470, column: 9, scope: !8843)
!8965 = !DILocation(line: 3470, column: 2, scope: !8843)
!8966 = !DILocation(line: 3471, column: 1, scope: !8843)
!8967 = distinct !DISubprogram(name: "dw_mci_set_ios", scope: !3, file: !3, line: 1405, type: !5420, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!8968 = !DILocalVariable(name: "mmc", arg: 1, scope: !8967, file: !3, line: 1405, type: !5393)
!8969 = !DILocation(line: 1405, column: 45, scope: !8967)
!8970 = !DILocalVariable(name: "ios", arg: 2, scope: !8967, file: !3, line: 1405, type: !5422)
!8971 = !DILocation(line: 1405, column: 66, scope: !8967)
!8972 = !DILocalVariable(name: "slot", scope: !8967, file: !3, line: 1407, type: !6210)
!8973 = !DILocation(line: 1407, column: 22, scope: !8967)
!8974 = !DILocation(line: 1407, column: 38, scope: !8967)
!8975 = !DILocation(line: 1407, column: 29, scope: !8967)
!8976 = !DILocalVariable(name: "drv_data", scope: !8967, file: !3, line: 1408, type: !6194)
!8977 = !DILocation(line: 1408, column: 32, scope: !8967)
!8978 = !DILocation(line: 1408, column: 43, scope: !8967)
!8979 = !DILocation(line: 1408, column: 49, scope: !8967)
!8980 = !DILocation(line: 1408, column: 55, scope: !8967)
!8981 = !DILocalVariable(name: "regs", scope: !8967, file: !3, line: 1409, type: !309)
!8982 = !DILocation(line: 1409, column: 6, scope: !8967)
!8983 = !DILocalVariable(name: "ret", scope: !8967, file: !3, line: 1410, type: !446)
!8984 = !DILocation(line: 1410, column: 6, scope: !8967)
!8985 = !DILocation(line: 1412, column: 10, scope: !8967)
!8986 = !DILocation(line: 1412, column: 15, scope: !8967)
!8987 = !DILocation(line: 1412, column: 2, scope: !8967)
!8988 = !DILocation(line: 1414, column: 3, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1412, column: 26)
!8990 = !DILocation(line: 1414, column: 9, scope: !8989)
!8991 = !DILocation(line: 1414, column: 15, scope: !8989)
!8992 = !DILocation(line: 1415, column: 3, scope: !8989)
!8993 = !DILocation(line: 1417, column: 3, scope: !8989)
!8994 = !DILocation(line: 1417, column: 9, scope: !8989)
!8995 = !DILocation(line: 1417, column: 15, scope: !8989)
!8996 = !DILocation(line: 1418, column: 3, scope: !8989)
!8997 = !DILocation(line: 1421, column: 3, scope: !8989)
!8998 = !DILocation(line: 1421, column: 9, scope: !8989)
!8999 = !DILocation(line: 1421, column: 15, scope: !8989)
!9000 = !DILocation(line: 1422, column: 2, scope: !8989)
!9001 = !DILocation(line: 1424, column: 9, scope: !8967)
!9002 = !DILocation(line: 1424, column: 7, scope: !8967)
!9003 = !DILocation(line: 1427, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1427, column: 6)
!9005 = !DILocation(line: 1427, column: 11, scope: !9004)
!9006 = !DILocation(line: 1427, column: 18, scope: !9004)
!9007 = !DILocation(line: 1427, column: 42, scope: !9004)
!9008 = !DILocation(line: 1428, column: 6, scope: !9004)
!9009 = !DILocation(line: 1428, column: 11, scope: !9004)
!9010 = !DILocation(line: 1428, column: 18, scope: !9004)
!9011 = !DILocation(line: 1428, column: 42, scope: !9004)
!9012 = !DILocation(line: 1429, column: 6, scope: !9004)
!9013 = !DILocation(line: 1429, column: 11, scope: !9004)
!9014 = !DILocation(line: 1429, column: 18, scope: !9004)
!9015 = !DILocation(line: 1427, column: 6, scope: !8967)
!9016 = !DILocation(line: 1430, column: 20, scope: !9004)
!9017 = !DILocation(line: 1430, column: 26, scope: !9004)
!9018 = !DILocation(line: 1430, column: 17, scope: !9004)
!9019 = !DILocation(line: 1430, column: 30, scope: !9004)
!9020 = !DILocation(line: 1430, column: 8, scope: !9004)
!9021 = !DILocation(line: 1430, column: 3, scope: !9004)
!9022 = !DILocation(line: 1432, column: 21, scope: !9004)
!9023 = !DILocation(line: 1432, column: 27, scope: !9004)
!9024 = !DILocation(line: 1432, column: 18, scope: !9004)
!9025 = !DILocation(line: 1432, column: 31, scope: !9004)
!9026 = !DILocation(line: 1432, column: 11, scope: !9004)
!9027 = !DILocation(line: 1432, column: 8, scope: !9004)
!9028 = !DILocation(line: 1434, column: 2, scope: !8967)
!9029 = !DILocation(line: 1435, column: 23, scope: !8967)
!9030 = !DILocation(line: 1435, column: 28, scope: !8967)
!9031 = !DILocation(line: 1435, column: 2, scope: !8967)
!9032 = !DILocation(line: 1435, column: 8, scope: !8967)
!9033 = !DILocation(line: 1435, column: 14, scope: !8967)
!9034 = !DILocation(line: 1435, column: 21, scope: !8967)
!9035 = !DILocation(line: 1441, column: 16, scope: !8967)
!9036 = !DILocation(line: 1441, column: 21, scope: !8967)
!9037 = !DILocation(line: 1441, column: 2, scope: !8967)
!9038 = !DILocation(line: 1441, column: 8, scope: !8967)
!9039 = !DILocation(line: 1441, column: 14, scope: !8967)
!9040 = !DILocation(line: 1443, column: 6, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1443, column: 6)
!9042 = !DILocation(line: 1443, column: 15, scope: !9041)
!9043 = !DILocation(line: 1443, column: 18, scope: !9041)
!9044 = !DILocation(line: 1443, column: 28, scope: !9041)
!9045 = !DILocation(line: 1443, column: 6, scope: !8967)
!9046 = !DILocation(line: 1444, column: 3, scope: !9041)
!9047 = !DILocation(line: 1444, column: 13, scope: !9041)
!9048 = !DILocation(line: 1444, column: 21, scope: !9041)
!9049 = !DILocation(line: 1444, column: 27, scope: !9041)
!9050 = !DILocation(line: 1444, column: 33, scope: !9041)
!9051 = !DILocation(line: 1446, column: 10, scope: !8967)
!9052 = !DILocation(line: 1446, column: 15, scope: !8967)
!9053 = !DILocation(line: 1446, column: 2, scope: !8967)
!9054 = !DILocation(line: 1448, column: 15, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1448, column: 7)
!9056 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1446, column: 27)
!9057 = !DILocation(line: 1448, column: 20, scope: !9055)
!9058 = !DILocation(line: 1448, column: 27, scope: !9055)
!9059 = !DILocation(line: 1448, column: 8, scope: !9055)
!9060 = !DILocation(line: 1448, column: 7, scope: !9056)
!9061 = !DILocation(line: 1449, column: 32, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 1448, column: 34)
!9063 = !DILocation(line: 1449, column: 37, scope: !9062)
!9064 = !DILocation(line: 1449, column: 42, scope: !9062)
!9065 = !DILocation(line: 1449, column: 49, scope: !9062)
!9066 = !DILocation(line: 1450, column: 6, scope: !9062)
!9067 = !DILocation(line: 1450, column: 11, scope: !9062)
!9068 = !DILocation(line: 1449, column: 10, scope: !9062)
!9069 = !DILocation(line: 1449, column: 8, scope: !9062)
!9070 = !DILocation(line: 1451, column: 8, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1451, column: 8)
!9072 = !DILocation(line: 1451, column: 8, scope: !9062)
!9073 = !DILocation(line: 1452, column: 5, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 1451, column: 13)
!9075 = !DILocation(line: 1455, column: 5, scope: !9074)
!9076 = !DILocation(line: 1457, column: 3, scope: !9062)
!9077 = !DILocation(line: 1458, column: 35, scope: !9056)
!9078 = !DILocation(line: 1458, column: 41, scope: !9056)
!9079 = !DILocation(line: 1458, column: 3, scope: !9056)
!9080 = !DILocation(line: 1459, column: 10, scope: !9056)
!9081 = !DILocation(line: 1459, column: 8, scope: !9056)
!9082 = !DILocation(line: 1460, column: 17, scope: !9056)
!9083 = !DILocation(line: 1460, column: 23, scope: !9056)
!9084 = !DILocation(line: 1460, column: 14, scope: !9056)
!9085 = !DILocation(line: 1460, column: 8, scope: !9056)
!9086 = !DILocation(line: 1461, column: 3, scope: !9056)
!9087 = !DILocation(line: 1462, column: 3, scope: !9056)
!9088 = !DILocation(line: 1464, column: 8, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1464, column: 7)
!9090 = !DILocation(line: 1464, column: 14, scope: !9089)
!9091 = !DILocation(line: 1464, column: 20, scope: !9089)
!9092 = !DILocation(line: 1464, column: 7, scope: !9056)
!9093 = !DILocation(line: 1465, column: 16, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 1465, column: 8)
!9095 = distinct !DILexicalBlock(scope: !9089, file: !3, line: 1464, column: 35)
!9096 = !DILocation(line: 1465, column: 21, scope: !9094)
!9097 = !DILocation(line: 1465, column: 28, scope: !9094)
!9098 = !DILocation(line: 1465, column: 9, scope: !9094)
!9099 = !DILocation(line: 1465, column: 8, scope: !9095)
!9100 = !DILocation(line: 1466, column: 28, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1465, column: 36)
!9102 = !DILocation(line: 1466, column: 33, scope: !9101)
!9103 = !DILocation(line: 1466, column: 40, scope: !9101)
!9104 = !DILocation(line: 1466, column: 11, scope: !9101)
!9105 = !DILocation(line: 1466, column: 9, scope: !9101)
!9106 = !DILocation(line: 1467, column: 9, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1467, column: 9)
!9108 = !DILocation(line: 1467, column: 13, scope: !9107)
!9109 = !DILocation(line: 1467, column: 9, scope: !9101)
!9110 = !DILocation(line: 1468, column: 6, scope: !9107)
!9111 = !DILocation(line: 1471, column: 6, scope: !9107)
!9112 = !DILocation(line: 1471, column: 12, scope: !9107)
!9113 = !DILocation(line: 1471, column: 18, scope: !9107)
!9114 = !DILocation(line: 1471, column: 32, scope: !9107)
!9115 = !DILocation(line: 1473, column: 4, scope: !9101)
!9116 = !DILocation(line: 1475, column: 5, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1473, column: 11)
!9118 = !DILocation(line: 1475, column: 11, scope: !9117)
!9119 = !DILocation(line: 1475, column: 17, scope: !9117)
!9120 = !DILocation(line: 1475, column: 31, scope: !9117)
!9121 = !DILocation(line: 1479, column: 22, scope: !9095)
!9122 = !DILocation(line: 1479, column: 28, scope: !9095)
!9123 = !DILocation(line: 1479, column: 4, scope: !9095)
!9124 = !DILocation(line: 1481, column: 3, scope: !9095)
!9125 = !DILocation(line: 1484, column: 20, scope: !9056)
!9126 = !DILocation(line: 1484, column: 3, scope: !9056)
!9127 = !DILocation(line: 1486, column: 3, scope: !9056)
!9128 = !DILocation(line: 1489, column: 20, scope: !9056)
!9129 = !DILocation(line: 1489, column: 3, scope: !9056)
!9130 = !DILocation(line: 1491, column: 15, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1491, column: 7)
!9132 = !DILocation(line: 1491, column: 20, scope: !9131)
!9133 = !DILocation(line: 1491, column: 27, scope: !9131)
!9134 = !DILocation(line: 1491, column: 8, scope: !9131)
!9135 = !DILocation(line: 1491, column: 7, scope: !9056)
!9136 = !DILocation(line: 1492, column: 26, scope: !9131)
!9137 = !DILocation(line: 1492, column: 31, scope: !9131)
!9138 = !DILocation(line: 1492, column: 36, scope: !9131)
!9139 = !DILocation(line: 1492, column: 43, scope: !9131)
!9140 = !DILocation(line: 1492, column: 4, scope: !9131)
!9141 = !DILocation(line: 1494, column: 15, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1494, column: 7)
!9143 = !DILocation(line: 1494, column: 20, scope: !9142)
!9144 = !DILocation(line: 1494, column: 27, scope: !9142)
!9145 = !DILocation(line: 1494, column: 8, scope: !9142)
!9146 = !DILocation(line: 1494, column: 34, scope: !9142)
!9147 = !DILocation(line: 1494, column: 37, scope: !9142)
!9148 = !DILocation(line: 1494, column: 43, scope: !9142)
!9149 = !DILocation(line: 1494, column: 49, scope: !9142)
!9150 = !DILocation(line: 1494, column: 7, scope: !9056)
!9151 = !DILocation(line: 1495, column: 22, scope: !9142)
!9152 = !DILocation(line: 1495, column: 27, scope: !9142)
!9153 = !DILocation(line: 1495, column: 34, scope: !9142)
!9154 = !DILocation(line: 1495, column: 4, scope: !9142)
!9155 = !DILocation(line: 1496, column: 3, scope: !9056)
!9156 = !DILocation(line: 1496, column: 9, scope: !9056)
!9157 = !DILocation(line: 1496, column: 15, scope: !9056)
!9158 = !DILocation(line: 1496, column: 29, scope: !9056)
!9159 = !DILocation(line: 1498, column: 10, scope: !9056)
!9160 = !DILocation(line: 1498, column: 8, scope: !9056)
!9161 = !DILocation(line: 1499, column: 18, scope: !9056)
!9162 = !DILocation(line: 1499, column: 24, scope: !9056)
!9163 = !DILocation(line: 1499, column: 15, scope: !9056)
!9164 = !DILocation(line: 1499, column: 11, scope: !9056)
!9165 = !DILocation(line: 1499, column: 8, scope: !9056)
!9166 = !DILocation(line: 1500, column: 3, scope: !9056)
!9167 = !DILocation(line: 1501, column: 3, scope: !9056)
!9168 = !DILocation(line: 1503, column: 3, scope: !9056)
!9169 = !DILocation(line: 1506, column: 6, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1506, column: 6)
!9171 = !DILocation(line: 1506, column: 12, scope: !9170)
!9172 = !DILocation(line: 1506, column: 18, scope: !9170)
!9173 = !DILocation(line: 1506, column: 24, scope: !9170)
!9174 = !DILocation(line: 1506, column: 52, scope: !9170)
!9175 = !DILocation(line: 1506, column: 55, scope: !9170)
!9176 = !DILocation(line: 1506, column: 60, scope: !9170)
!9177 = !DILocation(line: 1506, column: 66, scope: !9170)
!9178 = !DILocation(line: 1506, column: 6, scope: !8967)
!9179 = !DILocation(line: 1507, column: 3, scope: !9170)
!9180 = !DILocation(line: 1507, column: 9, scope: !9170)
!9181 = !DILocation(line: 1507, column: 15, scope: !9170)
!9182 = !DILocation(line: 1507, column: 21, scope: !9170)
!9183 = !DILocation(line: 1508, column: 1, scope: !8967)
!9184 = distinct !DISubprogram(name: "dw_mci_setup_bus", scope: !3, file: !3, line: 1198, type: !9185, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{null, !6210, !314}
!9187 = !DILocalVariable(name: "slot", arg: 1, scope: !9184, file: !3, line: 1198, type: !6210)
!9188 = !DILocation(line: 1198, column: 50, scope: !9184)
!9189 = !DILocalVariable(name: "force_clkinit", arg: 2, scope: !9184, file: !3, line: 1198, type: !314)
!9190 = !DILocation(line: 1198, column: 61, scope: !9184)
!9191 = !DILocalVariable(name: "host", scope: !9184, file: !3, line: 1200, type: !286)
!9192 = !DILocation(line: 1200, column: 17, scope: !9184)
!9193 = !DILocation(line: 1200, column: 24, scope: !9184)
!9194 = !DILocation(line: 1200, column: 30, scope: !9184)
!9195 = !DILocalVariable(name: "clock", scope: !9184, file: !3, line: 1201, type: !7)
!9196 = !DILocation(line: 1201, column: 15, scope: !9184)
!9197 = !DILocation(line: 1201, column: 23, scope: !9184)
!9198 = !DILocation(line: 1201, column: 29, scope: !9184)
!9199 = !DILocalVariable(name: "div", scope: !9184, file: !3, line: 1202, type: !309)
!9200 = !DILocation(line: 1202, column: 6, scope: !9184)
!9201 = !DILocalVariable(name: "clk_en_a", scope: !9184, file: !3, line: 1203, type: !309)
!9202 = !DILocation(line: 1203, column: 6, scope: !9184)
!9203 = !DILocalVariable(name: "sdmmc_cmd_bits", scope: !9184, file: !3, line: 1204, type: !309)
!9204 = !DILocation(line: 1204, column: 6, scope: !9184)
!9205 = !DILocation(line: 1207, column: 6, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1207, column: 6)
!9207 = !DILocation(line: 1207, column: 12, scope: !9206)
!9208 = !DILocation(line: 1207, column: 18, scope: !9206)
!9209 = !DILocation(line: 1207, column: 6, scope: !9184)
!9210 = !DILocation(line: 1208, column: 18, scope: !9206)
!9211 = !DILocation(line: 1208, column: 3, scope: !9206)
!9212 = !DILocation(line: 1210, column: 2, scope: !9184)
!9213 = !DILocation(line: 1210, column: 8, scope: !9184)
!9214 = !DILocation(line: 1210, column: 13, scope: !9184)
!9215 = !DILocation(line: 1210, column: 26, scope: !9184)
!9216 = !DILocation(line: 1212, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1212, column: 6)
!9218 = !DILocation(line: 1212, column: 6, scope: !9184)
!9219 = !DILocation(line: 1213, column: 3, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 1212, column: 14)
!9221 = !DILocation(line: 1214, column: 16, scope: !9220)
!9222 = !DILocation(line: 1214, column: 22, scope: !9220)
!9223 = !DILocation(line: 1214, column: 3, scope: !9220)
!9224 = !DILocation(line: 1215, column: 2, scope: !9220)
!9225 = !DILocation(line: 1215, column: 13, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 1215, column: 13)
!9227 = !DILocation(line: 1215, column: 22, scope: !9226)
!9228 = !DILocation(line: 1215, column: 28, scope: !9226)
!9229 = !DILocation(line: 1215, column: 19, scope: !9226)
!9230 = !DILocation(line: 1215, column: 42, scope: !9226)
!9231 = !DILocation(line: 1215, column: 45, scope: !9226)
!9232 = !DILocation(line: 1215, column: 13, scope: !9217)
!9233 = !DILocation(line: 1216, column: 9, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 1215, column: 60)
!9235 = !DILocation(line: 1216, column: 15, scope: !9234)
!9236 = !DILocation(line: 1216, column: 24, scope: !9234)
!9237 = !DILocation(line: 1216, column: 22, scope: !9234)
!9238 = !DILocation(line: 1216, column: 7, scope: !9234)
!9239 = !DILocation(line: 1217, column: 7, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1217, column: 7)
!9241 = !DILocation(line: 1217, column: 13, scope: !9240)
!9242 = !DILocation(line: 1217, column: 22, scope: !9240)
!9243 = !DILocation(line: 1217, column: 20, scope: !9240)
!9244 = !DILocation(line: 1217, column: 28, scope: !9240)
!9245 = !DILocation(line: 1217, column: 31, scope: !9240)
!9246 = !DILocation(line: 1217, column: 37, scope: !9240)
!9247 = !DILocation(line: 1217, column: 46, scope: !9240)
!9248 = !DILocation(line: 1217, column: 44, scope: !9240)
!9249 = !DILocation(line: 1217, column: 7, scope: !9234)
!9250 = !DILocation(line: 1222, column: 8, scope: !9240)
!9251 = !DILocation(line: 1222, column: 4, scope: !9240)
!9252 = !DILocation(line: 1224, column: 10, scope: !9234)
!9253 = !DILocation(line: 1224, column: 16, scope: !9234)
!9254 = !DILocation(line: 1224, column: 26, scope: !9234)
!9255 = !DILocation(line: 1224, column: 23, scope: !9234)
!9256 = !DILocation(line: 1224, column: 9, scope: !9234)
!9257 = !DILocation(line: 1224, column: 35, scope: !9234)
!9258 = !DILocation(line: 1224, column: 7, scope: !9234)
!9259 = !DILocation(line: 1226, column: 8, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1226, column: 7)
!9261 = !DILocation(line: 1226, column: 17, scope: !9260)
!9262 = !DILocation(line: 1226, column: 23, scope: !9260)
!9263 = !DILocation(line: 1226, column: 14, scope: !9260)
!9264 = !DILocation(line: 1226, column: 33, scope: !9260)
!9265 = !DILocation(line: 1227, column: 39, scope: !9260)
!9266 = !DILocation(line: 1227, column: 45, scope: !9260)
!9267 = !DILocation(line: 1227, column: 5, scope: !9260)
!9268 = !DILocation(line: 1227, column: 53, scope: !9260)
!9269 = !DILocation(line: 1228, column: 4, scope: !9260)
!9270 = !DILocation(line: 1226, column: 7, scope: !9234)
!9271 = !DILocation(line: 1230, column: 9, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 1230, column: 8)
!9273 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 1228, column: 19)
!9274 = !DILocation(line: 1230, column: 8, scope: !9273)
!9275 = !DILocation(line: 1231, column: 5, scope: !9272)
!9276 = !DILocation(line: 1241, column: 8, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9273, file: !3, line: 1241, column: 8)
!9278 = !DILocation(line: 1241, column: 14, scope: !9277)
!9279 = !DILocation(line: 1241, column: 19, scope: !9277)
!9280 = !DILocation(line: 1241, column: 24, scope: !9277)
!9281 = !DILocation(line: 1241, column: 45, scope: !9277)
!9282 = !DILocation(line: 1242, column: 6, scope: !9277)
!9283 = !DILocation(line: 1242, column: 12, scope: !9277)
!9284 = !DILocation(line: 1242, column: 17, scope: !9277)
!9285 = !DILocation(line: 1242, column: 26, scope: !9277)
!9286 = !DILocation(line: 1242, column: 23, scope: !9277)
!9287 = !DILocation(line: 1241, column: 8, scope: !9273)
!9288 = !DILocation(line: 1243, column: 38, scope: !9277)
!9289 = !DILocation(line: 1243, column: 44, scope: !9277)
!9290 = !DILocation(line: 1243, column: 5, scope: !9277)
!9291 = !DILocation(line: 1244, column: 3, scope: !9273)
!9292 = !DILocation(line: 1247, column: 3, scope: !9234)
!9293 = !DILocation(line: 1248, column: 3, scope: !9234)
!9294 = !DILocation(line: 1251, column: 16, scope: !9234)
!9295 = !DILocation(line: 1251, column: 22, scope: !9234)
!9296 = !DILocation(line: 1251, column: 3, scope: !9234)
!9297 = !DILocation(line: 1254, column: 3, scope: !9234)
!9298 = !DILocation(line: 1257, column: 16, scope: !9234)
!9299 = !DILocation(line: 1257, column: 22, scope: !9234)
!9300 = !DILocation(line: 1257, column: 3, scope: !9234)
!9301 = !DILocation(line: 1260, column: 36, scope: !9234)
!9302 = !DILocation(line: 1260, column: 42, scope: !9234)
!9303 = !DILocation(line: 1260, column: 33, scope: !9234)
!9304 = !DILocation(line: 1260, column: 14, scope: !9234)
!9305 = !DILocation(line: 1260, column: 12, scope: !9234)
!9306 = !DILocation(line: 1261, column: 42, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1261, column: 7)
!9308 = !DILocation(line: 1261, column: 48, scope: !9307)
!9309 = !DILocation(line: 1261, column: 8, scope: !9307)
!9310 = !DILocation(line: 1261, column: 7, scope: !9234)
!9311 = !DILocation(line: 1262, column: 39, scope: !9307)
!9312 = !DILocation(line: 1262, column: 45, scope: !9307)
!9313 = !DILocation(line: 1262, column: 36, scope: !9307)
!9314 = !DILocation(line: 1262, column: 13, scope: !9307)
!9315 = !DILocation(line: 1262, column: 4, scope: !9307)
!9316 = !DILocation(line: 1263, column: 3, scope: !9234)
!9317 = !DILocation(line: 1266, column: 16, scope: !9234)
!9318 = !DILocation(line: 1266, column: 22, scope: !9234)
!9319 = !DILocation(line: 1266, column: 3, scope: !9234)
!9320 = !DILocation(line: 1269, column: 21, scope: !9234)
!9321 = !DILocation(line: 1269, column: 3, scope: !9234)
!9322 = !DILocation(line: 1269, column: 9, scope: !9234)
!9323 = !DILocation(line: 1269, column: 19, scope: !9234)
!9324 = !DILocation(line: 1270, column: 29, scope: !9234)
!9325 = !DILocation(line: 1270, column: 37, scope: !9234)
!9326 = !DILocation(line: 1270, column: 43, scope: !9234)
!9327 = !DILocation(line: 1270, column: 52, scope: !9234)
!9328 = !DILocation(line: 1270, column: 50, scope: !9234)
!9329 = !DILocation(line: 1270, column: 57, scope: !9234)
!9330 = !DILocation(line: 1271, column: 8, scope: !9234)
!9331 = !DILocation(line: 1271, column: 14, scope: !9234)
!9332 = !DILocation(line: 1270, column: 3, scope: !9234)
!9333 = !DILocation(line: 1270, column: 9, scope: !9234)
!9334 = !DILocation(line: 1270, column: 14, scope: !9234)
!9335 = !DILocation(line: 1270, column: 27, scope: !9234)
!9336 = !DILocation(line: 1272, column: 2, scope: !9234)
!9337 = !DILocation(line: 1274, column: 24, scope: !9184)
!9338 = !DILocation(line: 1274, column: 2, scope: !9184)
!9339 = !DILocation(line: 1274, column: 8, scope: !9184)
!9340 = !DILocation(line: 1274, column: 22, scope: !9184)
!9341 = !DILocation(line: 1277, column: 2, scope: !9184)
!9342 = !DILocation(line: 1278, column: 1, scope: !9184)
!9343 = distinct !DISubprogram(name: "sdio_irq_claimed", scope: !5395, file: !5395, line: 515, type: !9344, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{!314, !5393}
!9346 = !DILocalVariable(name: "host", arg: 1, scope: !9343, file: !5395, line: 515, type: !5393)
!9347 = !DILocation(line: 515, column: 54, scope: !9343)
!9348 = !DILocation(line: 517, column: 9, scope: !9343)
!9349 = !DILocation(line: 517, column: 15, scope: !9343)
!9350 = !DILocation(line: 517, column: 25, scope: !9343)
!9351 = !DILocation(line: 517, column: 2, scope: !9343)
!9352 = distinct !DISubprogram(name: "__dw_mci_enable_sdio_irq", scope: !3, file: !3, line: 1642, type: !9353, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{null, !6210, !446}
!9355 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !9356)
!9356 = distinct !DILocation(line: 1658, column: 2, scope: !9352)
!9357 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !9356)
!9358 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !9359)
!9359 = distinct !DILocation(line: 1648, column: 2, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1648, column: 2)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1648, column: 2)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1648, column: 2)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1648, column: 2)
!9364 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1648, column: 2)
!9365 = !DILocalVariable(name: "slot", arg: 1, scope: !9352, file: !3, line: 1642, type: !6210)
!9366 = !DILocation(line: 1642, column: 58, scope: !9352)
!9367 = !DILocalVariable(name: "enb", arg: 2, scope: !9352, file: !3, line: 1642, type: !446)
!9368 = !DILocation(line: 1642, column: 68, scope: !9352)
!9369 = !DILocalVariable(name: "host", scope: !9352, file: !3, line: 1644, type: !286)
!9370 = !DILocation(line: 1644, column: 17, scope: !9352)
!9371 = !DILocation(line: 1644, column: 24, scope: !9352)
!9372 = !DILocation(line: 1644, column: 30, scope: !9352)
!9373 = !DILocalVariable(name: "irqflags", scope: !9352, file: !3, line: 1645, type: !281)
!9374 = !DILocation(line: 1645, column: 16, scope: !9352)
!9375 = !DILocalVariable(name: "int_mask", scope: !9352, file: !3, line: 1646, type: !309)
!9376 = !DILocation(line: 1646, column: 6, scope: !9352)
!9377 = !DILocation(line: 1648, column: 2, scope: !9352)
!9378 = !DILocation(line: 1648, column: 2, scope: !9364)
!9379 = !DILocalVariable(name: "__dummy", scope: !9380, file: !3, line: 1648, type: !281)
!9380 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1648, column: 2)
!9381 = !DILocation(line: 1648, column: 2, scope: !9380)
!9382 = !DILocalVariable(name: "__dummy2", scope: !9380, file: !3, line: 1648, type: !281)
!9383 = !DILocation(line: 1648, column: 2, scope: !9363)
!9384 = !DILocation(line: 1648, column: 2, scope: !9362)
!9385 = !DILocation(line: 1648, column: 2, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1648, column: 2)
!9387 = !DILocalVariable(name: "__dummy", scope: !9388, file: !3, line: 1648, type: !281)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 1648, column: 2)
!9389 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 1648, column: 2)
!9390 = !DILocation(line: 1648, column: 2, scope: !9388)
!9391 = !DILocalVariable(name: "__dummy2", scope: !9388, file: !3, line: 1648, type: !281)
!9392 = !DILocation(line: 1648, column: 2, scope: !9389)
!9393 = !DILocation(line: 1648, column: 2, scope: !9361)
!9394 = !{i32 -2140180922}
!9395 = !DILocation(line: 1648, column: 2, scope: !9360)
!9396 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !9359)
!9397 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !9359)
!9398 = !DILocation(line: 1651, column: 13, scope: !9352)
!9399 = !DILocation(line: 1651, column: 11, scope: !9352)
!9400 = !DILocation(line: 1652, column: 6, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1652, column: 6)
!9402 = !DILocation(line: 1652, column: 6, scope: !9352)
!9403 = !DILocation(line: 1653, column: 15, scope: !9401)
!9404 = !DILocation(line: 1653, column: 12, scope: !9401)
!9405 = !DILocation(line: 1653, column: 3, scope: !9401)
!9406 = !DILocation(line: 1655, column: 16, scope: !9401)
!9407 = !DILocation(line: 1655, column: 15, scope: !9401)
!9408 = !DILocation(line: 1655, column: 12, scope: !9401)
!9409 = !DILocation(line: 1656, column: 2, scope: !9352)
!9410 = !DILocation(line: 1658, column: 26, scope: !9352)
!9411 = !DILocation(line: 1658, column: 32, scope: !9352)
!9412 = !DILocation(line: 1658, column: 42, scope: !9352)
!9413 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !9356)
!9414 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !9356)
!9415 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !9356)
!9416 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !9356)
!9417 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !9356)
!9418 = !DILocation(line: 1659, column: 1, scope: !9352)
!9419 = distinct !DISubprogram(name: "dw_mci_exit", scope: !3, file: !3, line: 3481, type: !1888, scopeLine: 3482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9420 = !DILocation(line: 3483, column: 1, scope: !9419)
!9421 = distinct !DISubprogram(name: "dw_mci_init", scope: !3, file: !3, line: 3475, type: !9422, scopeLine: 3476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9422 = !DISubroutineType(types: !9423)
!9423 = !{!446}
!9424 = !DILocation(line: 3477, column: 2, scope: !9421)
!9425 = !DILocation(line: 3478, column: 2, scope: !9421)
!9426 = distinct !DISubprogram(name: "devm_kzalloc", scope: !41, file: !41, line: 215, type: !9427, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9427 = !DISubroutineType(types: !9428)
!9428 = !{!284, !2369, !661, !282}
!9429 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !41, line: 215, type: !2369)
!9430 = !DILocation(line: 215, column: 49, scope: !9426)
!9431 = !DILocalVariable(name: "size", arg: 2, scope: !9426, file: !41, line: 215, type: !661)
!9432 = !DILocation(line: 215, column: 61, scope: !9426)
!9433 = !DILocalVariable(name: "gfp", arg: 3, scope: !9426, file: !41, line: 215, type: !282)
!9434 = !DILocation(line: 215, column: 73, scope: !9426)
!9435 = !DILocation(line: 217, column: 22, scope: !9426)
!9436 = !DILocation(line: 217, column: 27, scope: !9426)
!9437 = !DILocation(line: 217, column: 33, scope: !9426)
!9438 = !DILocation(line: 217, column: 37, scope: !9426)
!9439 = !DILocation(line: 217, column: 9, scope: !9426)
!9440 = !DILocation(line: 217, column: 2, scope: !9426)
!9441 = distinct !DISubprogram(name: "ERR_PTR", scope: !6868, file: !6868, line: 24, type: !9442, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9442 = !DISubroutineType(types: !9443)
!9443 = !{!284, !285}
!9444 = !DILocalVariable(name: "error", arg: 1, scope: !9441, file: !6868, line: 24, type: !285)
!9445 = !DILocation(line: 24, column: 48, scope: !9441)
!9446 = !DILocation(line: 26, column: 18, scope: !9441)
!9447 = !DILocation(line: 26, column: 9, scope: !9441)
!9448 = !DILocation(line: 26, column: 2, scope: !9441)
!9449 = distinct !DISubprogram(name: "devm_reset_control_get_optional_exclusive", scope: !6187, file: !6187, line: 391, type: !9450, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9450 = !DISubroutineType(types: !9451)
!9451 = !{!6185, !2369, !468}
!9452 = !DILocalVariable(name: "dev", arg: 1, scope: !9449, file: !6187, line: 392, type: !2369)
!9453 = !DILocation(line: 392, column: 21, scope: !9449)
!9454 = !DILocalVariable(name: "id", arg: 2, scope: !9449, file: !6187, line: 392, type: !468)
!9455 = !DILocation(line: 392, column: 38, scope: !9449)
!9456 = !DILocation(line: 394, column: 34, scope: !9449)
!9457 = !DILocation(line: 394, column: 39, scope: !9449)
!9458 = !DILocation(line: 394, column: 9, scope: !9449)
!9459 = !DILocation(line: 394, column: 2, scope: !9449)
!9460 = distinct !DISubprogram(name: "device_property_read_u32", scope: !9461, file: !9461, line: 141, type: !9462, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9461 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!9462 = !DISubroutineType(types: !9463)
!9463 = !{!446, !2369, !468, !1236}
!9464 = !DILocalVariable(name: "dev", arg: 1, scope: !9460, file: !9461, line: 141, type: !2369)
!9465 = !DILocation(line: 141, column: 59, scope: !9460)
!9466 = !DILocalVariable(name: "propname", arg: 2, scope: !9460, file: !9461, line: 142, type: !468)
!9467 = !DILocation(line: 142, column: 21, scope: !9460)
!9468 = !DILocalVariable(name: "val", arg: 3, scope: !9460, file: !9461, line: 142, type: !1236)
!9469 = !DILocation(line: 142, column: 36, scope: !9460)
!9470 = !DILocation(line: 144, column: 40, scope: !9460)
!9471 = !DILocation(line: 144, column: 45, scope: !9460)
!9472 = !DILocation(line: 144, column: 55, scope: !9460)
!9473 = !DILocation(line: 144, column: 9, scope: !9460)
!9474 = !DILocation(line: 144, column: 2, scope: !9460)
!9475 = distinct !DISubprogram(name: "set_bit", scope: !9476, file: !9476, line: 26, type: !9477, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9476 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9477 = !DISubroutineType(types: !9478)
!9478 = !{null, !285, !9479}
!9479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9480, size: 64)
!9480 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !281)
!9481 = !DILocalVariable(name: "nr", arg: 1, scope: !9482, file: !9483, line: 52, type: !285)
!9482 = distinct !DISubprogram(name: "arch_set_bit", scope: !9483, file: !9483, line: 52, type: !9477, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9483 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9484 = !DILocation(line: 52, column: 19, scope: !9482, inlinedAt: !9485)
!9485 = distinct !DILocation(line: 29, column: 2, scope: !9475)
!9486 = !DILocalVariable(name: "addr", arg: 2, scope: !9482, file: !9483, line: 52, type: !9479)
!9487 = !DILocation(line: 52, column: 47, scope: !9482, inlinedAt: !9485)
!9488 = !DILocalVariable(name: "v", arg: 1, scope: !9489, file: !9490, line: 84, type: !7160)
!9489 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !9490, file: !9490, line: 84, type: !9491, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9490 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9491 = !DISubroutineType(types: !9492)
!9492 = !{null, !7160, !661}
!9493 = !DILocation(line: 84, column: 74, scope: !9489, inlinedAt: !9494)
!9494 = distinct !DILocation(line: 28, column: 2, scope: !9475)
!9495 = !DILocalVariable(name: "size", arg: 2, scope: !9489, file: !9490, line: 84, type: !661)
!9496 = !DILocation(line: 84, column: 84, scope: !9489, inlinedAt: !9494)
!9497 = !DILocalVariable(name: "nr", arg: 1, scope: !9475, file: !9476, line: 26, type: !285)
!9498 = !DILocation(line: 26, column: 33, scope: !9475)
!9499 = !DILocalVariable(name: "addr", arg: 2, scope: !9475, file: !9476, line: 26, type: !9479)
!9500 = !DILocation(line: 26, column: 61, scope: !9475)
!9501 = !DILocation(line: 28, column: 26, scope: !9475)
!9502 = !DILocation(line: 28, column: 33, scope: !9475)
!9503 = !DILocation(line: 28, column: 31, scope: !9475)
!9504 = !DILocation(line: 86, column: 20, scope: !9489, inlinedAt: !9494)
!9505 = !DILocation(line: 86, column: 23, scope: !9489, inlinedAt: !9494)
!9506 = !DILocation(line: 86, column: 2, scope: !9489, inlinedAt: !9494)
!9507 = !DILocation(line: 87, column: 2, scope: !9489, inlinedAt: !9494)
!9508 = !DILocation(line: 29, column: 15, scope: !9475)
!9509 = !DILocation(line: 29, column: 19, scope: !9475)
!9510 = !DILocation(line: 54, column: 27, scope: !9511, inlinedAt: !9485)
!9511 = distinct !DILexicalBlock(scope: !9482, file: !9483, line: 54, column: 6)
!9512 = !DILocation(line: 54, column: 6, scope: !9511, inlinedAt: !9485)
!9513 = !DILocation(line: 54, column: 6, scope: !9482, inlinedAt: !9485)
!9514 = !DILocation(line: 56, column: 6, scope: !9515, inlinedAt: !9485)
!9515 = distinct !DILexicalBlock(scope: !9511, file: !9483, line: 54, column: 32)
!9516 = !DILocation(line: 57, column: 12, scope: !9515, inlinedAt: !9485)
!9517 = !DILocation(line: 55, column: 3, scope: !9515, inlinedAt: !9485)
!9518 = !{i32 -2146980412}
!9519 = !DILocation(line: 59, column: 2, scope: !9515, inlinedAt: !9485)
!9520 = !DILocation(line: 61, column: 8, scope: !9521, inlinedAt: !9485)
!9521 = distinct !DILexicalBlock(scope: !9511, file: !9483, line: 59, column: 9)
!9522 = !DILocation(line: 61, column: 32, scope: !9521, inlinedAt: !9485)
!9523 = !DILocation(line: 60, column: 3, scope: !9521, inlinedAt: !9485)
!9524 = !{i32 -2146980280}
!9525 = !DILocation(line: 30, column: 1, scope: !9475)
!9526 = distinct !DISubprogram(name: "tasklet_schedule", scope: !76, file: !76, line: 681, type: !6162, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9527 = !DILocalVariable(name: "t", arg: 1, scope: !9526, file: !76, line: 681, type: !6149)
!9528 = !DILocation(line: 681, column: 60, scope: !9526)
!9529 = !DILocation(line: 683, column: 46, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9526, file: !76, line: 683, column: 6)
!9531 = !DILocation(line: 683, column: 49, scope: !9530)
!9532 = !DILocation(line: 683, column: 7, scope: !9530)
!9533 = !DILocation(line: 683, column: 6, scope: !9526)
!9534 = !DILocation(line: 684, column: 22, scope: !9530)
!9535 = !DILocation(line: 684, column: 3, scope: !9530)
!9536 = !DILocation(line: 685, column: 1, scope: !9526)
!9537 = distinct !DISubprogram(name: "kasan_check_write", scope: !9538, file: !9538, line: 38, type: !9539, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9538 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9539 = !DISubroutineType(types: !9540)
!9540 = !{!314, !7160, !7}
!9541 = !DILocalVariable(name: "p", arg: 1, scope: !9537, file: !9538, line: 38, type: !7160)
!9542 = !DILocation(line: 38, column: 59, scope: !9537)
!9543 = !DILocalVariable(name: "size", arg: 2, scope: !9537, file: !9538, line: 38, type: !7)
!9544 = !DILocation(line: 38, column: 75, scope: !9537)
!9545 = !DILocation(line: 40, column: 2, scope: !9537)
!9546 = distinct !DISubprogram(name: "kcsan_check_access", scope: !9547, file: !9547, line: 178, type: !9548, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9547 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9548 = !DISubroutineType(types: !9549)
!9549 = !{null, !7160, !661, !446}
!9550 = !DILocalVariable(name: "ptr", arg: 1, scope: !9546, file: !9547, line: 178, type: !7160)
!9551 = !DILocation(line: 178, column: 60, scope: !9546)
!9552 = !DILocalVariable(name: "size", arg: 2, scope: !9546, file: !9547, line: 178, type: !661)
!9553 = !DILocation(line: 178, column: 72, scope: !9546)
!9554 = !DILocalVariable(name: "type", arg: 3, scope: !9546, file: !9547, line: 179, type: !446)
!9555 = !DILocation(line: 179, column: 15, scope: !9546)
!9556 = !DILocation(line: 179, column: 23, scope: !9546)
!9557 = distinct !DISubprogram(name: "test_and_set_bit", scope: !9476, file: !9476, line: 68, type: !9558, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9558 = !DISubroutineType(types: !9559)
!9559 = !{!314, !285, !9479}
!9560 = !DILocalVariable(name: "nr", arg: 1, scope: !9561, file: !9483, line: 136, type: !285)
!9561 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !9483, file: !9483, line: 136, type: !9558, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9562 = !DILocation(line: 136, column: 28, scope: !9561, inlinedAt: !9563)
!9563 = distinct !DILocation(line: 71, column: 9, scope: !9557)
!9564 = !DILocalVariable(name: "addr", arg: 2, scope: !9561, file: !9483, line: 136, type: !9479)
!9565 = !DILocation(line: 136, column: 56, scope: !9561, inlinedAt: !9563)
!9566 = !DILocalVariable(name: "c", scope: !9567, file: !9483, line: 138, type: !314)
!9567 = distinct !DILexicalBlock(scope: !9561, file: !9483, line: 138, column: 9)
!9568 = !DILocation(line: 138, column: 9, scope: !9567, inlinedAt: !9563)
!9569 = !DILocalVariable(name: "v", arg: 1, scope: !9570, file: !9490, line: 99, type: !7160)
!9570 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !9490, file: !9490, line: 99, type: !9491, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9571 = !DILocation(line: 99, column: 79, scope: !9570, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 70, column: 2, scope: !9557)
!9573 = !DILocalVariable(name: "size", arg: 2, scope: !9570, file: !9490, line: 99, type: !661)
!9574 = !DILocation(line: 99, column: 89, scope: !9570, inlinedAt: !9572)
!9575 = !DILocalVariable(name: "nr", arg: 1, scope: !9557, file: !9476, line: 68, type: !285)
!9576 = !DILocation(line: 68, column: 42, scope: !9557)
!9577 = !DILocalVariable(name: "addr", arg: 2, scope: !9557, file: !9476, line: 68, type: !9479)
!9578 = !DILocation(line: 68, column: 70, scope: !9557)
!9579 = !DILocation(line: 70, column: 31, scope: !9557)
!9580 = !DILocation(line: 70, column: 38, scope: !9557)
!9581 = !DILocation(line: 70, column: 36, scope: !9557)
!9582 = !DILocation(line: 101, column: 20, scope: !9570, inlinedAt: !9572)
!9583 = !DILocation(line: 101, column: 23, scope: !9570, inlinedAt: !9572)
!9584 = !DILocation(line: 101, column: 2, scope: !9570, inlinedAt: !9572)
!9585 = !DILocation(line: 102, column: 2, scope: !9570, inlinedAt: !9572)
!9586 = !DILocation(line: 71, column: 31, scope: !9557)
!9587 = !DILocation(line: 71, column: 35, scope: !9557)
!9588 = !{i32 -2146975926, i32 -2146975830}
!9589 = !DILocation(line: 71, column: 2, scope: !9557)
!9590 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !9591, file: !9591, line: 666, type: !9592, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9591 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!9592 = !DISubroutineType(types: !9593)
!9593 = !{!281}
!9594 = !DILocalVariable(name: "f", scope: !9590, file: !9591, line: 668, type: !281)
!9595 = !DILocation(line: 668, column: 16, scope: !9590)
!9596 = !DILocation(line: 670, column: 6, scope: !9590)
!9597 = !DILocation(line: 670, column: 4, scope: !9590)
!9598 = !DILocation(line: 671, column: 2, scope: !9590)
!9599 = !DILocation(line: 672, column: 9, scope: !9590)
!9600 = !DILocation(line: 672, column: 2, scope: !9590)
!9601 = distinct !DISubprogram(name: "test_bit", scope: !9602, file: !9602, line: 132, type: !9603, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9602 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9603 = !DISubroutineType(types: !9604)
!9604 = !{!314, !285, !9605}
!9605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9606, size: 64)
!9606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9480)
!9607 = !DILocalVariable(name: "nr", arg: 1, scope: !9608, file: !9483, line: 210, type: !285)
!9608 = distinct !DISubprogram(name: "variable_test_bit", scope: !9483, file: !9483, line: 210, type: !9603, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9609 = !DILocation(line: 210, column: 52, scope: !9608, inlinedAt: !9610)
!9610 = distinct !DILocation(line: 135, column: 9, scope: !9601)
!9611 = !DILocalVariable(name: "addr", arg: 2, scope: !9608, file: !9483, line: 210, type: !9605)
!9612 = !DILocation(line: 210, column: 86, scope: !9608, inlinedAt: !9610)
!9613 = !DILocalVariable(name: "oldbit", scope: !9608, file: !9483, line: 212, type: !314)
!9614 = !DILocation(line: 212, column: 7, scope: !9608, inlinedAt: !9610)
!9615 = !DILocalVariable(name: "nr", arg: 1, scope: !9616, file: !9483, line: 204, type: !285)
!9616 = distinct !DISubprogram(name: "constant_test_bit", scope: !9483, file: !9483, line: 204, type: !9603, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9617 = !DILocation(line: 204, column: 52, scope: !9616, inlinedAt: !9618)
!9618 = distinct !DILocation(line: 135, column: 9, scope: !9601)
!9619 = !DILocalVariable(name: "addr", arg: 2, scope: !9616, file: !9483, line: 204, type: !9605)
!9620 = !DILocation(line: 204, column: 86, scope: !9616, inlinedAt: !9618)
!9621 = !DILocalVariable(name: "v", arg: 1, scope: !9622, file: !9490, line: 69, type: !7160)
!9622 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !9490, file: !9490, line: 69, type: !9491, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9623 = !DILocation(line: 69, column: 73, scope: !9622, inlinedAt: !9624)
!9624 = distinct !DILocation(line: 134, column: 2, scope: !9601)
!9625 = !DILocalVariable(name: "size", arg: 2, scope: !9622, file: !9490, line: 69, type: !661)
!9626 = !DILocation(line: 69, column: 83, scope: !9622, inlinedAt: !9624)
!9627 = !DILocalVariable(name: "nr", arg: 1, scope: !9601, file: !9602, line: 132, type: !285)
!9628 = !DILocation(line: 132, column: 34, scope: !9601)
!9629 = !DILocalVariable(name: "addr", arg: 2, scope: !9601, file: !9602, line: 132, type: !9605)
!9630 = !DILocation(line: 132, column: 68, scope: !9601)
!9631 = !DILocation(line: 134, column: 25, scope: !9601)
!9632 = !DILocation(line: 134, column: 32, scope: !9601)
!9633 = !DILocation(line: 134, column: 30, scope: !9601)
!9634 = !DILocation(line: 71, column: 19, scope: !9622, inlinedAt: !9624)
!9635 = !DILocation(line: 71, column: 22, scope: !9622, inlinedAt: !9624)
!9636 = !DILocation(line: 71, column: 2, scope: !9622, inlinedAt: !9624)
!9637 = !DILocation(line: 72, column: 2, scope: !9622, inlinedAt: !9624)
!9638 = !DILocation(line: 135, column: 9, scope: !9601)
!9639 = !DILocation(line: 206, column: 19, scope: !9616, inlinedAt: !9618)
!9640 = !DILocation(line: 206, column: 22, scope: !9616, inlinedAt: !9618)
!9641 = !DILocation(line: 206, column: 15, scope: !9616, inlinedAt: !9618)
!9642 = !DILocation(line: 207, column: 4, scope: !9616, inlinedAt: !9618)
!9643 = !DILocation(line: 207, column: 9, scope: !9616, inlinedAt: !9618)
!9644 = !DILocation(line: 207, column: 12, scope: !9616, inlinedAt: !9618)
!9645 = !DILocation(line: 206, column: 44, scope: !9616, inlinedAt: !9618)
!9646 = !DILocation(line: 207, column: 37, scope: !9616, inlinedAt: !9618)
!9647 = !DILocation(line: 217, column: 33, scope: !9608, inlinedAt: !9610)
!9648 = !DILocation(line: 217, column: 46, scope: !9608, inlinedAt: !9610)
!9649 = !DILocation(line: 214, column: 2, scope: !9608, inlinedAt: !9610)
!9650 = !{i32 -2146971164, i32 -2146971104}
!9651 = !DILocation(line: 219, column: 9, scope: !9608, inlinedAt: !9610)
!9652 = !DILocation(line: 135, column: 2, scope: !9601)
!9653 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !9591, file: !9591, line: 646, type: !9592, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9654 = !DILocalVariable(name: "__ret", scope: !9655, file: !9591, line: 648, type: !281)
!9655 = distinct !DILexicalBlock(scope: !9653, file: !9591, line: 648, column: 9)
!9656 = !DILocation(line: 648, column: 9, scope: !9655)
!9657 = !DILocalVariable(name: "__edi", scope: !9655, file: !9591, line: 648, type: !281)
!9658 = !DILocalVariable(name: "__esi", scope: !9655, file: !9591, line: 648, type: !281)
!9659 = !DILocalVariable(name: "__edx", scope: !9655, file: !9591, line: 648, type: !281)
!9660 = !DILocalVariable(name: "__ecx", scope: !9655, file: !9591, line: 648, type: !281)
!9661 = !DILocalVariable(name: "__eax", scope: !9655, file: !9591, line: 648, type: !281)
!9662 = !DILocation(line: 648, column: 9, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9664, file: !9591, line: 648, column: 9)
!9664 = distinct !DILexicalBlock(scope: !9655, file: !9591, line: 648, column: 9)
!9665 = !{i32 -2145667066, i32 -2145664751, i32 -2145664517, i32 -2145664466, i32 -2145664438, i32 -2145664413, i32 -2145664729, i32 -2145664716, i32 -2145664278, i32 -2145664159, i32 -2145664624, i32 -2145664597, i32 -2145664569, i32 -2145664539}
!9666 = !DILocalVariable(name: "__mask", scope: !9667, file: !9591, line: 648, type: !281)
!9667 = distinct !DILexicalBlock(scope: !9663, file: !9591, line: 648, column: 9)
!9668 = !DILocation(line: 648, column: 9, scope: !9667)
!9669 = !DILocation(line: 648, column: 9, scope: !9664)
!9670 = !DILocation(line: 648, column: 2, scope: !9653)
!9671 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !9591, file: !9591, line: 656, type: !1888, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9672 = !DILocalVariable(name: "__edi", scope: !9673, file: !9591, line: 658, type: !281)
!9673 = distinct !DILexicalBlock(scope: !9671, file: !9591, line: 658, column: 2)
!9674 = !DILocation(line: 658, column: 2, scope: !9673)
!9675 = !DILocalVariable(name: "__esi", scope: !9673, file: !9591, line: 658, type: !281)
!9676 = !DILocalVariable(name: "__edx", scope: !9673, file: !9591, line: 658, type: !281)
!9677 = !DILocalVariable(name: "__ecx", scope: !9673, file: !9591, line: 658, type: !281)
!9678 = !DILocalVariable(name: "__eax", scope: !9673, file: !9591, line: 658, type: !281)
!9679 = !{i32 -2145659972, i32 -2145659240, i32 -2145659006, i32 -2145658955, i32 -2145658927, i32 -2145658902, i32 -2145659218, i32 -2145659205, i32 -2145658767, i32 -2145658648, i32 -2145659113, i32 -2145659086, i32 -2145659058, i32 -2145659028}
!9680 = !DILocation(line: 659, column: 1, scope: !9671)
!9681 = distinct !DISubprogram(name: "kasan_check_read", scope: !9538, file: !9538, line: 34, type: !9539, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9682 = !DILocalVariable(name: "p", arg: 1, scope: !9681, file: !9538, line: 34, type: !7160)
!9683 = !DILocation(line: 34, column: 58, scope: !9681)
!9684 = !DILocalVariable(name: "size", arg: 2, scope: !9681, file: !9538, line: 34, type: !7)
!9685 = !DILocation(line: 34, column: 74, scope: !9681)
!9686 = !DILocation(line: 36, column: 2, scope: !9681)
!9687 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !9591, file: !9591, line: 651, type: !6158, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9688 = !DILocalVariable(name: "f", arg: 1, scope: !9687, file: !9591, line: 651, type: !281)
!9689 = !DILocation(line: 651, column: 65, scope: !9687)
!9690 = !DILocalVariable(name: "__edi", scope: !9691, file: !9591, line: 653, type: !281)
!9691 = distinct !DILexicalBlock(scope: !9687, file: !9591, line: 653, column: 2)
!9692 = !DILocation(line: 653, column: 2, scope: !9691)
!9693 = !DILocalVariable(name: "__esi", scope: !9691, file: !9591, line: 653, type: !281)
!9694 = !DILocalVariable(name: "__edx", scope: !9691, file: !9591, line: 653, type: !281)
!9695 = !DILocalVariable(name: "__ecx", scope: !9691, file: !9591, line: 653, type: !281)
!9696 = !DILocalVariable(name: "__eax", scope: !9691, file: !9591, line: 653, type: !281)
!9697 = !{i32 -2145662599, i32 -2145661849, i32 -2145661615, i32 -2145661564, i32 -2145661536, i32 -2145661511, i32 -2145661827, i32 -2145661814, i32 -2145661376, i32 -2145661257, i32 -2145661722, i32 -2145661695, i32 -2145661667, i32 -2145661637}
!9698 = !DILocation(line: 654, column: 1, scope: !9687)
!9699 = distinct !DISubprogram(name: "dw_mci_push_part_bytes", scope: !3, file: !3, line: 2189, type: !9700, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9700 = !DISubroutineType(types: !9701)
!9701 = !{!446, !286, !284, !446}
!9702 = !DILocalVariable(name: "host", arg: 1, scope: !9699, file: !3, line: 2189, type: !286)
!9703 = !DILocation(line: 2189, column: 50, scope: !9699)
!9704 = !DILocalVariable(name: "buf", arg: 2, scope: !9699, file: !3, line: 2189, type: !284)
!9705 = !DILocation(line: 2189, column: 62, scope: !9699)
!9706 = !DILocalVariable(name: "cnt", arg: 3, scope: !9699, file: !3, line: 2189, type: !446)
!9707 = !DILocation(line: 2189, column: 71, scope: !9699)
!9708 = !DILocalVariable(name: "__UNIQUE_ID___x307", scope: !9709, file: !3, line: 2191, type: !446)
!9709 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 2191, column: 8)
!9710 = !DILocation(line: 2191, column: 8, scope: !9709)
!9711 = !DILocalVariable(name: "__UNIQUE_ID___y308", scope: !9709, file: !3, line: 2191, type: !446)
!9712 = !DILocation(line: 2191, column: 6, scope: !9699)
!9713 = !DILocation(line: 2192, column: 18, scope: !9699)
!9714 = !DILocation(line: 2192, column: 24, scope: !9699)
!9715 = !DILocation(line: 2192, column: 9, scope: !9699)
!9716 = !DILocation(line: 2192, column: 35, scope: !9699)
!9717 = !DILocation(line: 2192, column: 41, scope: !9699)
!9718 = !DILocation(line: 2192, column: 33, scope: !9699)
!9719 = !DILocation(line: 2192, column: 57, scope: !9699)
!9720 = !DILocation(line: 2192, column: 62, scope: !9699)
!9721 = !DILocation(line: 2192, column: 2, scope: !9699)
!9722 = !DILocation(line: 2193, column: 26, scope: !9699)
!9723 = !DILocation(line: 2193, column: 2, scope: !9699)
!9724 = !DILocation(line: 2193, column: 8, scope: !9699)
!9725 = !DILocation(line: 2193, column: 23, scope: !9699)
!9726 = !DILocation(line: 2194, column: 9, scope: !9699)
!9727 = !DILocation(line: 2194, column: 2, scope: !9699)
!9728 = distinct !DISubprogram(name: "__writew", scope: !7157, file: !7157, line: 70, type: !9729, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9729 = !DISubroutineType(types: !9730)
!9730 = !{null, !361, !7730}
!9731 = !DILocalVariable(name: "val", arg: 1, scope: !9728, file: !7157, line: 70, type: !361)
!9732 = !DILocation(line: 70, column: 1, scope: !9728)
!9733 = !DILocalVariable(name: "addr", arg: 2, scope: !9728, file: !7157, line: 70, type: !7730)
!9734 = !{i32 -2141841626}
!9735 = distinct !DISubprogram(name: "dw_mci_set_part_bytes", scope: !3, file: !3, line: 2182, type: !6247, scopeLine: 2183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9736 = !DILocalVariable(name: "host", arg: 1, scope: !9735, file: !3, line: 2182, type: !286)
!9737 = !DILocation(line: 2182, column: 50, scope: !9735)
!9738 = !DILocalVariable(name: "buf", arg: 2, scope: !9735, file: !3, line: 2182, type: !284)
!9739 = !DILocation(line: 2182, column: 62, scope: !9735)
!9740 = !DILocalVariable(name: "cnt", arg: 3, scope: !9735, file: !3, line: 2182, type: !446)
!9741 = !DILocation(line: 2182, column: 71, scope: !9735)
!9742 = !DILocation(line: 2184, column: 18, scope: !9735)
!9743 = !DILocation(line: 2184, column: 24, scope: !9735)
!9744 = !DILocation(line: 2184, column: 2, scope: !9735)
!9745 = !DILocation(line: 2184, column: 34, scope: !9735)
!9746 = !DILocation(line: 2184, column: 39, scope: !9735)
!9747 = !DILocation(line: 2185, column: 25, scope: !9735)
!9748 = !DILocation(line: 2185, column: 2, scope: !9735)
!9749 = !DILocation(line: 2185, column: 8, scope: !9735)
!9750 = !DILocation(line: 2185, column: 23, scope: !9735)
!9751 = !DILocation(line: 2186, column: 1, scope: !9735)
!9752 = distinct !DISubprogram(name: "__readw", scope: !7157, file: !7157, line: 62, type: !9753, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!361, !7160}
!9755 = !DILocalVariable(name: "addr", arg: 1, scope: !9752, file: !7157, line: 62, type: !7160)
!9756 = !DILocation(line: 62, column: 1, scope: !9752)
!9757 = !DILocalVariable(name: "ret", scope: !9752, file: !7157, line: 62, type: !361)
!9758 = !{i32 -2141843960}
!9759 = distinct !DISubprogram(name: "dw_mci_pull_final_bytes", scope: !3, file: !3, line: 2211, type: !6247, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9760 = !DILocalVariable(name: "host", arg: 1, scope: !9759, file: !3, line: 2211, type: !286)
!9761 = !DILocation(line: 2211, column: 52, scope: !9759)
!9762 = !DILocalVariable(name: "buf", arg: 2, scope: !9759, file: !3, line: 2211, type: !284)
!9763 = !DILocation(line: 2211, column: 64, scope: !9759)
!9764 = !DILocalVariable(name: "cnt", arg: 3, scope: !9759, file: !3, line: 2211, type: !446)
!9765 = !DILocation(line: 2211, column: 73, scope: !9759)
!9766 = !DILocation(line: 2213, column: 9, scope: !9759)
!9767 = !DILocation(line: 2213, column: 15, scope: !9759)
!9768 = !DILocation(line: 2213, column: 21, scope: !9759)
!9769 = !DILocation(line: 2213, column: 2, scope: !9759)
!9770 = !DILocation(line: 2213, column: 31, scope: !9759)
!9771 = !DILocation(line: 2214, column: 25, scope: !9759)
!9772 = !DILocation(line: 2214, column: 2, scope: !9759)
!9773 = !DILocation(line: 2214, column: 8, scope: !9759)
!9774 = !DILocation(line: 2214, column: 23, scope: !9759)
!9775 = !DILocation(line: 2215, column: 31, scope: !9759)
!9776 = !DILocation(line: 2215, column: 37, scope: !9759)
!9777 = !DILocation(line: 2215, column: 28, scope: !9759)
!9778 = !DILocation(line: 2215, column: 51, scope: !9759)
!9779 = !DILocation(line: 2215, column: 49, scope: !9759)
!9780 = !DILocation(line: 2215, column: 25, scope: !9759)
!9781 = !DILocation(line: 2215, column: 2, scope: !9759)
!9782 = !DILocation(line: 2215, column: 8, scope: !9759)
!9783 = !DILocation(line: 2215, column: 23, scope: !9759)
!9784 = !DILocation(line: 2216, column: 1, scope: !9759)
!9785 = distinct !DISubprogram(name: "__writeq", scope: !7157, file: !7157, line: 98, type: !9786, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{null, !326, !7730}
!9788 = !DILocalVariable(name: "val", arg: 1, scope: !9785, file: !7157, line: 98, type: !326)
!9789 = !DILocation(line: 98, column: 1, scope: !9785)
!9790 = !DILocalVariable(name: "addr", arg: 2, scope: !9785, file: !7157, line: 98, type: !7730)
!9791 = !{i32 -2141839750}
!9792 = distinct !DISubprogram(name: "__readq", scope: !7157, file: !7157, line: 96, type: !9793, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!326, !7160}
!9795 = !DILocalVariable(name: "addr", arg: 1, scope: !9792, file: !7157, line: 96, type: !7160)
!9796 = !DILocation(line: 96, column: 1, scope: !9792)
!9797 = !DILocalVariable(name: "ret", scope: !9792, file: !7157, line: 96, type: !326)
!9798 = !{i32 -2141840484}
!9799 = distinct !DISubprogram(name: "ktime_add_us", scope: !1118, file: !1118, line: 179, type: !9800, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!1117, !9802, !9803}
!9802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!9803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!9804 = !DILocalVariable(name: "kt", arg: 1, scope: !9799, file: !1118, line: 179, type: !9802)
!9805 = !DILocation(line: 179, column: 50, scope: !9799)
!9806 = !DILocalVariable(name: "usec", arg: 2, scope: !9799, file: !1118, line: 179, type: !9803)
!9807 = !DILocation(line: 179, column: 64, scope: !9799)
!9808 = !DILocation(line: 181, column: 9, scope: !9799)
!9809 = !DILocation(line: 181, column: 2, scope: !9799)
!9810 = distinct !DISubprogram(name: "readl", scope: !7157, file: !7157, line: 59, type: !7158, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9811 = !DILocalVariable(name: "addr", arg: 1, scope: !9810, file: !7157, line: 59, type: !7160)
!9812 = !DILocation(line: 59, column: 1, scope: !9810)
!9813 = !DILocalVariable(name: "ret", scope: !9810, file: !7157, line: 59, type: !7)
!9814 = !{i32 -2141844777}
!9815 = distinct !DISubprogram(name: "ktime_compare", scope: !1118, file: !1118, line: 95, type: !9816, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{!446, !9802, !9802}
!9818 = !DILocalVariable(name: "cmp1", arg: 1, scope: !9815, file: !1118, line: 95, type: !9802)
!9819 = !DILocation(line: 95, column: 47, scope: !9815)
!9820 = !DILocalVariable(name: "cmp2", arg: 2, scope: !9815, file: !1118, line: 95, type: !9802)
!9821 = !DILocation(line: 95, column: 67, scope: !9815)
!9822 = !DILocation(line: 97, column: 6, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9815, file: !1118, line: 97, column: 6)
!9824 = !DILocation(line: 97, column: 13, scope: !9823)
!9825 = !DILocation(line: 97, column: 11, scope: !9823)
!9826 = !DILocation(line: 97, column: 6, scope: !9815)
!9827 = !DILocation(line: 98, column: 3, scope: !9823)
!9828 = !DILocation(line: 99, column: 6, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9815, file: !1118, line: 99, column: 6)
!9830 = !DILocation(line: 99, column: 13, scope: !9829)
!9831 = !DILocation(line: 99, column: 11, scope: !9829)
!9832 = !DILocation(line: 99, column: 6, scope: !9815)
!9833 = !DILocation(line: 100, column: 3, scope: !9829)
!9834 = !DILocation(line: 101, column: 2, scope: !9815)
!9835 = !DILocation(line: 102, column: 1, scope: !9815)
!9836 = distinct !DISubprogram(name: "dmam_alloc_coherent", scope: !9837, file: !9837, line: 511, type: !9838, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9837 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!9838 = !DISubroutineType(types: !9839)
!9839 = !{!284, !2369, !661, !5988, !282}
!9840 = !DILocalVariable(name: "dev", arg: 1, scope: !9836, file: !9837, line: 511, type: !2369)
!9841 = !DILocation(line: 511, column: 56, scope: !9836)
!9842 = !DILocalVariable(name: "size", arg: 2, scope: !9836, file: !9837, line: 511, type: !661)
!9843 = !DILocation(line: 511, column: 68, scope: !9836)
!9844 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !9836, file: !9837, line: 512, type: !5988)
!9845 = !DILocation(line: 512, column: 15, scope: !9836)
!9846 = !DILocalVariable(name: "gfp", arg: 4, scope: !9836, file: !9837, line: 512, type: !282)
!9847 = !DILocation(line: 512, column: 33, scope: !9836)
!9848 = !DILocation(line: 514, column: 26, scope: !9836)
!9849 = !DILocation(line: 514, column: 31, scope: !9836)
!9850 = !DILocation(line: 514, column: 37, scope: !9836)
!9851 = !DILocation(line: 514, column: 49, scope: !9836)
!9852 = !DILocation(line: 515, column: 5, scope: !9836)
!9853 = !DILocation(line: 515, column: 9, scope: !9836)
!9854 = !DILocation(line: 515, column: 4, scope: !9836)
!9855 = !DILocation(line: 514, column: 9, scope: !9836)
!9856 = !DILocation(line: 514, column: 2, scope: !9836)
!9857 = distinct !DISubprogram(name: "dw_mci_idmac_init", scope: !3, file: !3, line: 496, type: !5836, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!9858 = !DILocalVariable(name: "host", arg: 1, scope: !9857, file: !3, line: 496, type: !286)
!9859 = !DILocation(line: 496, column: 45, scope: !9857)
!9860 = !DILocalVariable(name: "i", scope: !9857, file: !3, line: 498, type: !446)
!9861 = !DILocation(line: 498, column: 6, scope: !9857)
!9862 = !DILocation(line: 500, column: 6, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 500, column: 6)
!9864 = !DILocation(line: 500, column: 12, scope: !9863)
!9865 = !DILocation(line: 500, column: 30, scope: !9863)
!9866 = !DILocation(line: 500, column: 6, scope: !9857)
!9867 = !DILocalVariable(name: "p", scope: !9868, file: !3, line: 501, type: !9869)
!9868 = distinct !DILexicalBlock(scope: !9863, file: !3, line: 500, column: 36)
!9869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9870, size: 64)
!9870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idmac_desc_64addr", file: !3, line: 63, size: 256, elements: !9871)
!9871 = !{!9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879}
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "des0", scope: !9870, file: !3, line: 64, baseType: !309, size: 32)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "des1", scope: !9870, file: !3, line: 68, baseType: !309, size: 32, offset: 32)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "des2", scope: !9870, file: !3, line: 70, baseType: !309, size: 32, offset: 64)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "des3", scope: !9870, file: !3, line: 75, baseType: !309, size: 32, offset: 96)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "des4", scope: !9870, file: !3, line: 77, baseType: !309, size: 32, offset: 128)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "des5", scope: !9870, file: !3, line: 78, baseType: !309, size: 32, offset: 160)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "des6", scope: !9870, file: !3, line: 80, baseType: !309, size: 32, offset: 192)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "des7", scope: !9870, file: !3, line: 81, baseType: !309, size: 32, offset: 224)
!9880 = !DILocation(line: 501, column: 29, scope: !9868)
!9881 = !DILocation(line: 503, column: 3, scope: !9868)
!9882 = !DILocation(line: 503, column: 9, scope: !9868)
!9883 = !DILocation(line: 503, column: 19, scope: !9868)
!9884 = !DILocation(line: 507, column: 10, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9868, file: !3, line: 507, column: 3)
!9886 = !DILocation(line: 507, column: 19, scope: !9885)
!9887 = !DILocation(line: 507, column: 25, scope: !9885)
!9888 = !DILocation(line: 507, column: 17, scope: !9885)
!9889 = !DILocation(line: 507, column: 8, scope: !9885)
!9890 = !DILocation(line: 507, column: 33, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 507, column: 3)
!9892 = !DILocation(line: 507, column: 37, scope: !9891)
!9893 = !DILocation(line: 507, column: 43, scope: !9891)
!9894 = !DILocation(line: 507, column: 53, scope: !9891)
!9895 = !DILocation(line: 507, column: 35, scope: !9891)
!9896 = !DILocation(line: 507, column: 3, scope: !9885)
!9897 = !DILocation(line: 509, column: 15, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 508, column: 19)
!9899 = !DILocation(line: 509, column: 21, scope: !9898)
!9900 = !DILocation(line: 511, column: 9, scope: !9898)
!9901 = !DILocation(line: 511, column: 11, scope: !9898)
!9902 = !DILocation(line: 511, column: 8, scope: !9898)
!9903 = !DILocation(line: 510, column: 40, scope: !9898)
!9904 = !DILocation(line: 509, column: 28, scope: !9898)
!9905 = !DILocation(line: 511, column: 18, scope: !9898)
!9906 = !DILocation(line: 509, column: 14, scope: !9898)
!9907 = !DILocation(line: 509, column: 4, scope: !9898)
!9908 = !DILocation(line: 509, column: 7, scope: !9898)
!9909 = !DILocation(line: 509, column: 12, scope: !9898)
!9910 = !DILocation(line: 513, column: 20, scope: !9898)
!9911 = !DILocation(line: 513, column: 26, scope: !9898)
!9912 = !DILocation(line: 515, column: 9, scope: !9898)
!9913 = !DILocation(line: 515, column: 11, scope: !9898)
!9914 = !DILocation(line: 515, column: 8, scope: !9898)
!9915 = !DILocation(line: 514, column: 40, scope: !9898)
!9916 = !DILocation(line: 513, column: 33, scope: !9898)
!9917 = !DILocation(line: 515, column: 18, scope: !9898)
!9918 = !DILocation(line: 513, column: 14, scope: !9898)
!9919 = !DILocation(line: 513, column: 4, scope: !9898)
!9920 = !DILocation(line: 513, column: 7, scope: !9898)
!9921 = !DILocation(line: 513, column: 12, scope: !9898)
!9922 = !DILocation(line: 517, column: 4, scope: !9898)
!9923 = !DILocation(line: 517, column: 7, scope: !9898)
!9924 = !DILocation(line: 517, column: 12, scope: !9898)
!9925 = !DILocation(line: 518, column: 4, scope: !9898)
!9926 = !DILocation(line: 518, column: 7, scope: !9898)
!9927 = !DILocation(line: 518, column: 12, scope: !9898)
!9928 = !DILocation(line: 519, column: 4, scope: !9898)
!9929 = !DILocation(line: 519, column: 7, scope: !9898)
!9930 = !DILocation(line: 519, column: 12, scope: !9898)
!9931 = !DILocation(line: 520, column: 4, scope: !9898)
!9932 = !DILocation(line: 520, column: 7, scope: !9898)
!9933 = !DILocation(line: 520, column: 12, scope: !9898)
!9934 = !DILocation(line: 521, column: 3, scope: !9898)
!9935 = !DILocation(line: 508, column: 10, scope: !9891)
!9936 = !DILocation(line: 508, column: 15, scope: !9891)
!9937 = !DILocation(line: 507, column: 3, scope: !9891)
!9938 = distinct !{!9938, !9896, !9939}
!9939 = !DILocation(line: 521, column: 3, scope: !9885)
!9940 = !DILocation(line: 524, column: 13, scope: !9868)
!9941 = !DILocation(line: 524, column: 19, scope: !9868)
!9942 = !DILocation(line: 524, column: 26, scope: !9868)
!9943 = !DILocation(line: 524, column: 3, scope: !9868)
!9944 = !DILocation(line: 524, column: 6, scope: !9868)
!9945 = !DILocation(line: 524, column: 11, scope: !9868)
!9946 = !DILocation(line: 525, column: 18, scope: !9868)
!9947 = !DILocation(line: 525, column: 24, scope: !9868)
!9948 = !DILocation(line: 525, column: 31, scope: !9868)
!9949 = !DILocation(line: 525, column: 13, scope: !9868)
!9950 = !DILocation(line: 525, column: 3, scope: !9868)
!9951 = !DILocation(line: 525, column: 6, scope: !9868)
!9952 = !DILocation(line: 525, column: 11, scope: !9868)
!9953 = !DILocation(line: 526, column: 3, scope: !9868)
!9954 = !DILocation(line: 526, column: 6, scope: !9868)
!9955 = !DILocation(line: 526, column: 11, scope: !9868)
!9956 = !DILocation(line: 528, column: 2, scope: !9868)
!9957 = !DILocalVariable(name: "p", scope: !9958, file: !3, line: 529, type: !9959)
!9958 = distinct !DILexicalBlock(scope: !9863, file: !3, line: 528, column: 9)
!9959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9960, size: 64)
!9960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idmac_desc", file: !3, line: 84, size: 128, elements: !9961)
!9961 = !{!9962, !9963, !9964, !9965}
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "des0", scope: !9960, file: !3, line: 85, baseType: !6268, size: 32)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "des1", scope: !9960, file: !3, line: 94, baseType: !6268, size: 32, offset: 32)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "des2", scope: !9960, file: !3, line: 98, baseType: !6268, size: 32, offset: 64)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "des3", scope: !9960, file: !3, line: 100, baseType: !6268, size: 32, offset: 96)
!9966 = !DILocation(line: 529, column: 22, scope: !9958)
!9967 = !DILocation(line: 531, column: 3, scope: !9958)
!9968 = !DILocation(line: 531, column: 9, scope: !9958)
!9969 = !DILocation(line: 531, column: 19, scope: !9958)
!9970 = !DILocation(line: 535, column: 10, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 535, column: 3)
!9972 = !DILocation(line: 535, column: 19, scope: !9971)
!9973 = !DILocation(line: 535, column: 25, scope: !9971)
!9974 = !DILocation(line: 535, column: 17, scope: !9971)
!9975 = !DILocation(line: 535, column: 8, scope: !9971)
!9976 = !DILocation(line: 536, column: 8, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 535, column: 3)
!9978 = !DILocation(line: 536, column: 12, scope: !9977)
!9979 = !DILocation(line: 536, column: 18, scope: !9977)
!9980 = !DILocation(line: 536, column: 28, scope: !9977)
!9981 = !DILocation(line: 536, column: 10, scope: !9977)
!9982 = !DILocation(line: 535, column: 3, scope: !9971)
!9983 = !DILocation(line: 538, column: 14, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 537, column: 18)
!9985 = !DILocation(line: 538, column: 4, scope: !9984)
!9986 = !DILocation(line: 538, column: 7, scope: !9984)
!9987 = !DILocation(line: 538, column: 12, scope: !9984)
!9988 = !DILocation(line: 540, column: 4, scope: !9984)
!9989 = !DILocation(line: 540, column: 7, scope: !9984)
!9990 = !DILocation(line: 540, column: 12, scope: !9984)
!9991 = !DILocation(line: 541, column: 4, scope: !9984)
!9992 = !DILocation(line: 541, column: 7, scope: !9984)
!9993 = !DILocation(line: 541, column: 12, scope: !9984)
!9994 = !DILocation(line: 542, column: 3, scope: !9984)
!9995 = !DILocation(line: 537, column: 9, scope: !9977)
!9996 = !DILocation(line: 537, column: 14, scope: !9977)
!9997 = !DILocation(line: 535, column: 3, scope: !9977)
!9998 = distinct !{!9998, !9982, !9999}
!9999 = !DILocation(line: 542, column: 3, scope: !9971)
!10000 = !DILocation(line: 545, column: 13, scope: !9958)
!10001 = !DILocation(line: 545, column: 3, scope: !9958)
!10002 = !DILocation(line: 545, column: 6, scope: !9958)
!10003 = !DILocation(line: 545, column: 11, scope: !9958)
!10004 = !DILocation(line: 546, column: 3, scope: !9958)
!10005 = !DILocation(line: 546, column: 6, scope: !9958)
!10006 = !DILocation(line: 546, column: 11, scope: !9958)
!10007 = !DILocation(line: 549, column: 21, scope: !9857)
!10008 = !DILocation(line: 549, column: 2, scope: !9857)
!10009 = !DILocation(line: 551, column: 6, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 551, column: 6)
!10011 = !DILocation(line: 551, column: 12, scope: !10010)
!10012 = !DILocation(line: 551, column: 30, scope: !10010)
!10013 = !DILocation(line: 551, column: 6, scope: !9857)
!10014 = !DILocation(line: 553, column: 3, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 551, column: 36)
!10016 = !DILocation(line: 554, column: 3, scope: !10015)
!10017 = !DILocation(line: 558, column: 3, scope: !10015)
!10018 = !DILocation(line: 559, column: 3, scope: !10015)
!10019 = !DILocation(line: 561, column: 2, scope: !10015)
!10020 = !DILocation(line: 563, column: 3, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 561, column: 9)
!10022 = !DILocation(line: 564, column: 3, scope: !10021)
!10023 = !DILocation(line: 568, column: 3, scope: !10021)
!10024 = !DILocation(line: 571, column: 2, scope: !9857)
!10025 = distinct !DISubprogram(name: "dw_mci_idmac_start_dma", scope: !3, file: !3, line: 719, type: !5840, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10026 = !DILocalVariable(name: "host", arg: 1, scope: !10025, file: !3, line: 719, type: !286)
!10027 = !DILocation(line: 719, column: 50, scope: !10025)
!10028 = !DILocalVariable(name: "sg_len", arg: 2, scope: !10025, file: !3, line: 719, type: !7)
!10029 = !DILocation(line: 719, column: 69, scope: !10025)
!10030 = !DILocalVariable(name: "temp", scope: !10025, file: !3, line: 721, type: !309)
!10031 = !DILocation(line: 721, column: 6, scope: !10025)
!10032 = !DILocalVariable(name: "ret", scope: !10025, file: !3, line: 722, type: !446)
!10033 = !DILocation(line: 722, column: 6, scope: !10025)
!10034 = !DILocation(line: 724, column: 6, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 724, column: 6)
!10036 = !DILocation(line: 724, column: 12, scope: !10035)
!10037 = !DILocation(line: 724, column: 30, scope: !10035)
!10038 = !DILocation(line: 724, column: 6, scope: !10025)
!10039 = !DILocation(line: 725, column: 31, scope: !10035)
!10040 = !DILocation(line: 725, column: 37, scope: !10035)
!10041 = !DILocation(line: 725, column: 43, scope: !10035)
!10042 = !DILocation(line: 725, column: 49, scope: !10035)
!10043 = !DILocation(line: 725, column: 9, scope: !10035)
!10044 = !DILocation(line: 725, column: 7, scope: !10035)
!10045 = !DILocation(line: 725, column: 3, scope: !10035)
!10046 = !DILocation(line: 727, column: 31, scope: !10035)
!10047 = !DILocation(line: 727, column: 37, scope: !10035)
!10048 = !DILocation(line: 727, column: 43, scope: !10035)
!10049 = !DILocation(line: 727, column: 49, scope: !10035)
!10050 = !DILocation(line: 727, column: 9, scope: !10035)
!10051 = !DILocation(line: 727, column: 7, scope: !10035)
!10052 = !DILocation(line: 729, column: 6, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 729, column: 6)
!10054 = !DILocation(line: 729, column: 6, scope: !10025)
!10055 = !DILocation(line: 730, column: 3, scope: !10053)
!10056 = !DILocation(line: 733, column: 2, scope: !10025)
!10057 = !{i32 -2140201276}
!10058 = !DILocation(line: 736, column: 20, scope: !10025)
!10059 = !DILocation(line: 736, column: 2, scope: !10025)
!10060 = !DILocation(line: 737, column: 21, scope: !10025)
!10061 = !DILocation(line: 737, column: 2, scope: !10025)
!10062 = !DILocation(line: 740, column: 9, scope: !10025)
!10063 = !DILocation(line: 740, column: 7, scope: !10025)
!10064 = !DILocation(line: 741, column: 7, scope: !10025)
!10065 = !DILocation(line: 742, column: 2, scope: !10025)
!10066 = !DILocation(line: 745, column: 2, scope: !10025)
!10067 = !{i32 -2140200842}
!10068 = !DILocation(line: 748, column: 9, scope: !10025)
!10069 = !DILocation(line: 748, column: 7, scope: !10025)
!10070 = !DILocation(line: 749, column: 7, scope: !10025)
!10071 = !DILocation(line: 750, column: 2, scope: !10025)
!10072 = !DILocation(line: 753, column: 2, scope: !10025)
!10073 = !DILabel(scope: !10025, name: "out", file: !3, line: 755)
!10074 = !DILocation(line: 755, column: 1, scope: !10025)
!10075 = !DILocation(line: 756, column: 9, scope: !10025)
!10076 = !DILocation(line: 756, column: 2, scope: !10025)
!10077 = distinct !DISubprogram(name: "dw_mci_dmac_complete_dma", scope: !3, file: !3, line: 469, type: !2130, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10078 = !DILocalVariable(name: "arg", arg: 1, scope: !10077, file: !3, line: 469, type: !284)
!10079 = !DILocation(line: 469, column: 44, scope: !10077)
!10080 = !DILocalVariable(name: "host", scope: !10077, file: !3, line: 471, type: !286)
!10081 = !DILocation(line: 471, column: 17, scope: !10077)
!10082 = !DILocation(line: 471, column: 24, scope: !10077)
!10083 = !DILocalVariable(name: "data", scope: !10077, file: !3, line: 472, type: !5364)
!10084 = !DILocation(line: 472, column: 19, scope: !10077)
!10085 = !DILocation(line: 472, column: 26, scope: !10077)
!10086 = !DILocation(line: 472, column: 32, scope: !10077)
!10087 = !DILocation(line: 476, column: 7, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 476, column: 6)
!10089 = !DILocation(line: 476, column: 13, scope: !10088)
!10090 = !DILocation(line: 476, column: 21, scope: !10088)
!10091 = !DILocation(line: 476, column: 42, scope: !10088)
!10092 = !DILocation(line: 477, column: 6, scope: !10088)
!10093 = !DILocation(line: 477, column: 11, scope: !10088)
!10094 = !DILocation(line: 477, column: 15, scope: !10088)
!10095 = !DILocation(line: 477, column: 21, scope: !10088)
!10096 = !DILocation(line: 477, column: 27, scope: !10088)
!10097 = !DILocation(line: 476, column: 6, scope: !10077)
!10098 = !DILocation(line: 479, column: 23, scope: !10088)
!10099 = !DILocation(line: 480, column: 9, scope: !10088)
!10100 = !DILocation(line: 480, column: 15, scope: !10088)
!10101 = !DILocation(line: 481, column: 9, scope: !10088)
!10102 = !DILocation(line: 481, column: 15, scope: !10088)
!10103 = !DILocation(line: 479, column: 3, scope: !10088)
!10104 = !DILocation(line: 484, column: 2, scope: !10077)
!10105 = !DILocation(line: 484, column: 8, scope: !10077)
!10106 = !DILocation(line: 484, column: 17, scope: !10077)
!10107 = !DILocation(line: 484, column: 25, scope: !10077)
!10108 = !DILocation(line: 490, column: 6, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 490, column: 6)
!10110 = !DILocation(line: 490, column: 6, scope: !10077)
!10111 = !DILocation(line: 491, column: 33, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 490, column: 12)
!10113 = !DILocation(line: 491, column: 39, scope: !10112)
!10114 = !DILocation(line: 491, column: 3, scope: !10112)
!10115 = !DILocation(line: 492, column: 21, scope: !10112)
!10116 = !DILocation(line: 492, column: 27, scope: !10112)
!10117 = !DILocation(line: 492, column: 3, scope: !10112)
!10118 = !DILocation(line: 493, column: 2, scope: !10112)
!10119 = !DILocation(line: 494, column: 1, scope: !10077)
!10120 = distinct !DISubprogram(name: "dw_mci_idmac_stop_dma", scope: !3, file: !3, line: 452, type: !5845, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10121 = !DILocalVariable(name: "host", arg: 1, scope: !10120, file: !3, line: 452, type: !286)
!10122 = !DILocation(line: 452, column: 50, scope: !10120)
!10123 = !DILocalVariable(name: "temp", scope: !10120, file: !3, line: 454, type: !309)
!10124 = !DILocation(line: 454, column: 6, scope: !10120)
!10125 = !DILocation(line: 457, column: 9, scope: !10120)
!10126 = !DILocation(line: 457, column: 7, scope: !10120)
!10127 = !DILocation(line: 458, column: 7, scope: !10120)
!10128 = !DILocation(line: 459, column: 7, scope: !10120)
!10129 = !DILocation(line: 460, column: 2, scope: !10120)
!10130 = !DILocation(line: 463, column: 9, scope: !10120)
!10131 = !DILocation(line: 463, column: 7, scope: !10120)
!10132 = !DILocation(line: 464, column: 7, scope: !10120)
!10133 = !DILocation(line: 465, column: 7, scope: !10120)
!10134 = !DILocation(line: 466, column: 2, scope: !10120)
!10135 = !DILocation(line: 467, column: 1, scope: !10120)
!10136 = distinct !DISubprogram(name: "dw_mci_dma_cleanup", scope: !3, file: !3, line: 431, type: !5845, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10137 = !DILocalVariable(name: "host", arg: 1, scope: !10136, file: !3, line: 431, type: !286)
!10138 = !DILocation(line: 431, column: 47, scope: !10136)
!10139 = !DILocalVariable(name: "data", scope: !10136, file: !3, line: 433, type: !5364)
!10140 = !DILocation(line: 433, column: 19, scope: !10136)
!10141 = !DILocation(line: 433, column: 26, scope: !10136)
!10142 = !DILocation(line: 433, column: 32, scope: !10136)
!10143 = !DILocation(line: 435, column: 6, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 435, column: 6)
!10145 = !DILocation(line: 435, column: 11, scope: !10144)
!10146 = !DILocation(line: 435, column: 14, scope: !10144)
!10147 = !DILocation(line: 435, column: 20, scope: !10144)
!10148 = !DILocation(line: 435, column: 32, scope: !10144)
!10149 = !DILocation(line: 435, column: 6, scope: !10136)
!10150 = !DILocation(line: 436, column: 3, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 435, column: 50)
!10152 = !DILocation(line: 440, column: 3, scope: !10151)
!10153 = !DILocation(line: 440, column: 9, scope: !10151)
!10154 = !DILocation(line: 440, column: 21, scope: !10151)
!10155 = !DILocation(line: 441, column: 2, scope: !10151)
!10156 = !DILocation(line: 442, column: 1, scope: !10136)
!10157 = distinct !DISubprogram(name: "dw_mci_idmac_reset", scope: !3, file: !3, line: 444, type: !5845, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10158 = !DILocalVariable(name: "host", arg: 1, scope: !10157, file: !3, line: 444, type: !286)
!10159 = !DILocation(line: 444, column: 47, scope: !10157)
!10160 = !DILocalVariable(name: "bmod", scope: !10157, file: !3, line: 446, type: !309)
!10161 = !DILocation(line: 446, column: 6, scope: !10157)
!10162 = !DILocation(line: 446, column: 13, scope: !10157)
!10163 = !DILocation(line: 448, column: 7, scope: !10157)
!10164 = !DILocation(line: 449, column: 2, scope: !10157)
!10165 = !DILocation(line: 450, column: 1, scope: !10157)
!10166 = distinct !DISubprogram(name: "dw_mci_prepare_desc64", scope: !3, file: !3, line: 574, type: !10167, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10167 = !DISubroutineType(types: !10168)
!10168 = !{!446, !286, !5364, !7}
!10169 = !DILocalVariable(name: "host", arg: 1, scope: !10166, file: !3, line: 574, type: !286)
!10170 = !DILocation(line: 574, column: 56, scope: !10166)
!10171 = !DILocalVariable(name: "data", arg: 2, scope: !10166, file: !3, line: 575, type: !5364)
!10172 = !DILocation(line: 575, column: 24, scope: !10166)
!10173 = !DILocalVariable(name: "sg_len", arg: 3, scope: !10166, file: !3, line: 576, type: !7)
!10174 = !DILocation(line: 576, column: 20, scope: !10166)
!10175 = !DILocalVariable(name: "desc_len", scope: !10166, file: !3, line: 578, type: !7)
!10176 = !DILocation(line: 578, column: 15, scope: !10166)
!10177 = !DILocalVariable(name: "desc_first", scope: !10166, file: !3, line: 579, type: !9869)
!10178 = !DILocation(line: 579, column: 28, scope: !10166)
!10179 = !DILocalVariable(name: "desc_last", scope: !10166, file: !3, line: 579, type: !9869)
!10180 = !DILocation(line: 579, column: 41, scope: !10166)
!10181 = !DILocalVariable(name: "desc", scope: !10166, file: !3, line: 579, type: !9869)
!10182 = !DILocation(line: 579, column: 53, scope: !10166)
!10183 = !DILocalVariable(name: "val", scope: !10166, file: !3, line: 580, type: !309)
!10184 = !DILocation(line: 580, column: 6, scope: !10166)
!10185 = !DILocalVariable(name: "i", scope: !10166, file: !3, line: 581, type: !446)
!10186 = !DILocation(line: 581, column: 6, scope: !10166)
!10187 = !DILocation(line: 583, column: 34, scope: !10166)
!10188 = !DILocation(line: 583, column: 40, scope: !10166)
!10189 = !DILocation(line: 583, column: 32, scope: !10166)
!10190 = !DILocation(line: 583, column: 25, scope: !10166)
!10191 = !DILocation(line: 583, column: 13, scope: !10166)
!10192 = !DILocation(line: 585, column: 9, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 585, column: 2)
!10194 = !DILocation(line: 585, column: 7, scope: !10193)
!10195 = !DILocation(line: 585, column: 14, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 585, column: 2)
!10197 = !DILocation(line: 585, column: 18, scope: !10196)
!10198 = !DILocation(line: 585, column: 16, scope: !10196)
!10199 = !DILocation(line: 585, column: 2, scope: !10193)
!10200 = !DILocalVariable(name: "length", scope: !10201, file: !3, line: 586, type: !7)
!10201 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 585, column: 31)
!10202 = !DILocation(line: 586, column: 16, scope: !10201)
!10203 = !DILocation(line: 586, column: 25, scope: !10201)
!10204 = !DILocalVariable(name: "mem_addr", scope: !10201, file: !3, line: 588, type: !326)
!10205 = !DILocation(line: 588, column: 7, scope: !10201)
!10206 = !DILocation(line: 588, column: 18, scope: !10201)
!10207 = !DILocation(line: 590, column: 3, scope: !10201)
!10208 = !DILocation(line: 590, column: 11, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 590, column: 3)
!10210 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 590, column: 3)
!10211 = !DILocation(line: 590, column: 3, scope: !10210)
!10212 = !DILocation(line: 591, column: 16, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 590, column: 28)
!10214 = !DILocation(line: 591, column: 23, scope: !10213)
!10215 = !DILocation(line: 591, column: 15, scope: !10213)
!10216 = !DILocation(line: 592, column: 8, scope: !10213)
!10217 = !DILocation(line: 591, column: 13, scope: !10213)
!10218 = !DILocation(line: 594, column: 14, scope: !10213)
!10219 = !DILocation(line: 594, column: 11, scope: !10213)
!10220 = !DILocalVariable(name: "__timeout_us", scope: !10221, file: !3, line: 602, type: !326)
!10221 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 602, column: 8)
!10222 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 602, column: 8)
!10223 = !DILocation(line: 602, column: 8, scope: !10221)
!10224 = !DILocalVariable(name: "__delay_us", scope: !10221, file: !3, line: 602, type: !281)
!10225 = !DILocalVariable(name: "__timeout", scope: !10221, file: !3, line: 602, type: !1117)
!10226 = !DILocation(line: 602, column: 8, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 602, column: 8)
!10228 = distinct !DILexicalBlock(scope: !10229, file: !3, line: 602, column: 8)
!10229 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 602, column: 8)
!10230 = !DILocation(line: 602, column: 8, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 602, column: 8)
!10232 = !DILocation(line: 602, column: 8, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 602, column: 8)
!10234 = !DILocation(line: 602, column: 8, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 602, column: 8)
!10236 = !DILocation(line: 602, column: 8, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 602, column: 8)
!10238 = !DILocation(line: 602, column: 8, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 602, column: 8)
!10240 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 602, column: 8)
!10241 = !DILocation(line: 602, column: 8, scope: !10240)
!10242 = !DILocation(line: 602, column: 8, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 602, column: 8)
!10244 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 602, column: 8)
!10245 = !DILocation(line: 602, column: 8, scope: !10244)
!10246 = !DILocation(line: 602, column: 8, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 602, column: 8)
!10248 = !DILocation(line: 602, column: 8, scope: !10228)
!10249 = distinct !{!10249, !10250, !10250}
!10250 = !DILocation(line: 602, column: 8, scope: !10229)
!10251 = !DILocation(line: 602, column: 8, scope: !10222)
!10252 = !DILocation(line: 602, column: 8, scope: !10213)
!10253 = !DILocation(line: 605, column: 5, scope: !10222)
!10254 = !DILocation(line: 611, column: 4, scope: !10213)
!10255 = !DILocation(line: 611, column: 10, scope: !10213)
!10256 = !DILocation(line: 611, column: 15, scope: !10213)
!10257 = !DILocation(line: 615, column: 4, scope: !10213)
!10258 = !DILocation(line: 618, column: 17, scope: !10213)
!10259 = !DILocation(line: 618, column: 26, scope: !10213)
!10260 = !DILocation(line: 618, column: 4, scope: !10213)
!10261 = !DILocation(line: 618, column: 10, scope: !10213)
!10262 = !DILocation(line: 618, column: 15, scope: !10213)
!10263 = !DILocation(line: 619, column: 17, scope: !10213)
!10264 = !DILocation(line: 619, column: 26, scope: !10213)
!10265 = !DILocation(line: 619, column: 4, scope: !10213)
!10266 = !DILocation(line: 619, column: 10, scope: !10213)
!10267 = !DILocation(line: 619, column: 15, scope: !10213)
!10268 = !DILocation(line: 622, column: 16, scope: !10213)
!10269 = !DILocation(line: 622, column: 13, scope: !10213)
!10270 = !DILocation(line: 625, column: 16, scope: !10213)
!10271 = !DILocation(line: 625, column: 14, scope: !10213)
!10272 = !DILocation(line: 626, column: 3, scope: !10213)
!10273 = !DILocation(line: 590, column: 24, scope: !10209)
!10274 = !DILocation(line: 590, column: 3, scope: !10209)
!10275 = distinct !{!10275, !10211, !10276}
!10276 = !DILocation(line: 626, column: 3, scope: !10210)
!10277 = !DILocation(line: 627, column: 2, scope: !10201)
!10278 = !DILocation(line: 585, column: 27, scope: !10196)
!10279 = !DILocation(line: 585, column: 2, scope: !10196)
!10280 = distinct !{!10280, !10199, !10281}
!10281 = !DILocation(line: 627, column: 2, scope: !10193)
!10282 = !DILocation(line: 630, column: 2, scope: !10166)
!10283 = !DILocation(line: 630, column: 14, scope: !10166)
!10284 = !DILocation(line: 630, column: 19, scope: !10166)
!10285 = !DILocation(line: 633, column: 2, scope: !10166)
!10286 = !DILocation(line: 633, column: 13, scope: !10166)
!10287 = !DILocation(line: 633, column: 18, scope: !10166)
!10288 = !DILocation(line: 634, column: 2, scope: !10166)
!10289 = !DILocation(line: 634, column: 13, scope: !10166)
!10290 = !DILocation(line: 634, column: 18, scope: !10166)
!10291 = !DILocation(line: 636, column: 2, scope: !10166)
!10292 = !DILabel(scope: !10166, name: "err_own_bit", file: !3, line: 637)
!10293 = !DILocation(line: 637, column: 1, scope: !10166)
!10294 = !DILocation(line: 640, column: 9, scope: !10166)
!10295 = !DILocation(line: 640, column: 15, scope: !10166)
!10296 = !DILocation(line: 640, column: 2, scope: !10166)
!10297 = !DILocation(line: 641, column: 20, scope: !10166)
!10298 = !DILocation(line: 641, column: 2, scope: !10166)
!10299 = !DILocation(line: 642, column: 2, scope: !10166)
!10300 = !DILocation(line: 643, column: 1, scope: !10166)
!10301 = distinct !DISubprogram(name: "dw_mci_prepare_desc32", scope: !3, file: !3, line: 646, type: !10167, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10302 = !DILocalVariable(name: "host", arg: 1, scope: !10301, file: !3, line: 646, type: !286)
!10303 = !DILocation(line: 646, column: 56, scope: !10301)
!10304 = !DILocalVariable(name: "data", arg: 2, scope: !10301, file: !3, line: 647, type: !5364)
!10305 = !DILocation(line: 647, column: 24, scope: !10301)
!10306 = !DILocalVariable(name: "sg_len", arg: 3, scope: !10301, file: !3, line: 648, type: !7)
!10307 = !DILocation(line: 648, column: 20, scope: !10301)
!10308 = !DILocalVariable(name: "desc_len", scope: !10301, file: !3, line: 650, type: !7)
!10309 = !DILocation(line: 650, column: 15, scope: !10301)
!10310 = !DILocalVariable(name: "desc_first", scope: !10301, file: !3, line: 651, type: !9959)
!10311 = !DILocation(line: 651, column: 21, scope: !10301)
!10312 = !DILocalVariable(name: "desc_last", scope: !10301, file: !3, line: 651, type: !9959)
!10313 = !DILocation(line: 651, column: 34, scope: !10301)
!10314 = !DILocalVariable(name: "desc", scope: !10301, file: !3, line: 651, type: !9959)
!10315 = !DILocation(line: 651, column: 46, scope: !10301)
!10316 = !DILocalVariable(name: "val", scope: !10301, file: !3, line: 652, type: !309)
!10317 = !DILocation(line: 652, column: 6, scope: !10301)
!10318 = !DILocalVariable(name: "i", scope: !10301, file: !3, line: 653, type: !446)
!10319 = !DILocation(line: 653, column: 6, scope: !10301)
!10320 = !DILocation(line: 655, column: 34, scope: !10301)
!10321 = !DILocation(line: 655, column: 40, scope: !10301)
!10322 = !DILocation(line: 655, column: 32, scope: !10301)
!10323 = !DILocation(line: 655, column: 25, scope: !10301)
!10324 = !DILocation(line: 655, column: 13, scope: !10301)
!10325 = !DILocation(line: 657, column: 9, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 657, column: 2)
!10327 = !DILocation(line: 657, column: 7, scope: !10326)
!10328 = !DILocation(line: 657, column: 14, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10326, file: !3, line: 657, column: 2)
!10330 = !DILocation(line: 657, column: 18, scope: !10329)
!10331 = !DILocation(line: 657, column: 16, scope: !10329)
!10332 = !DILocation(line: 657, column: 2, scope: !10326)
!10333 = !DILocalVariable(name: "length", scope: !10334, file: !3, line: 658, type: !7)
!10334 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 657, column: 31)
!10335 = !DILocation(line: 658, column: 16, scope: !10334)
!10336 = !DILocation(line: 658, column: 25, scope: !10334)
!10337 = !DILocalVariable(name: "mem_addr", scope: !10334, file: !3, line: 660, type: !309)
!10338 = !DILocation(line: 660, column: 7, scope: !10334)
!10339 = !DILocation(line: 660, column: 18, scope: !10334)
!10340 = !DILocation(line: 662, column: 3, scope: !10334)
!10341 = !DILocation(line: 662, column: 11, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !3, line: 662, column: 3)
!10343 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 662, column: 3)
!10344 = !DILocation(line: 662, column: 3, scope: !10343)
!10345 = !DILocation(line: 663, column: 16, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 662, column: 28)
!10347 = !DILocation(line: 663, column: 23, scope: !10346)
!10348 = !DILocation(line: 663, column: 15, scope: !10346)
!10349 = !DILocation(line: 664, column: 8, scope: !10346)
!10350 = !DILocation(line: 663, column: 13, scope: !10346)
!10351 = !DILocation(line: 666, column: 14, scope: !10346)
!10352 = !DILocation(line: 666, column: 11, scope: !10346)
!10353 = !DILocalVariable(name: "__timeout_us", scope: !10354, file: !3, line: 674, type: !326)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 674, column: 8)
!10355 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 674, column: 8)
!10356 = !DILocation(line: 674, column: 8, scope: !10354)
!10357 = !DILocalVariable(name: "__delay_us", scope: !10354, file: !3, line: 674, type: !281)
!10358 = !DILocalVariable(name: "__timeout", scope: !10354, file: !3, line: 674, type: !1117)
!10359 = !DILocation(line: 674, column: 8, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 674, column: 8)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !3, line: 674, column: 8)
!10362 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 674, column: 8)
!10363 = !DILocation(line: 674, column: 8, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 674, column: 8)
!10365 = !DILocation(line: 674, column: 8, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 674, column: 8)
!10367 = !DILocation(line: 674, column: 8, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 674, column: 8)
!10369 = !DILocation(line: 674, column: 8, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 674, column: 8)
!10371 = !DILocation(line: 674, column: 8, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 674, column: 8)
!10373 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 674, column: 8)
!10374 = !DILocation(line: 674, column: 8, scope: !10373)
!10375 = !DILocation(line: 674, column: 8, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 674, column: 8)
!10377 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 674, column: 8)
!10378 = !DILocation(line: 674, column: 8, scope: !10377)
!10379 = !DILocation(line: 674, column: 8, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 674, column: 8)
!10381 = !DILocation(line: 674, column: 8, scope: !10361)
!10382 = distinct !{!10382, !10383, !10383}
!10383 = !DILocation(line: 674, column: 8, scope: !10362)
!10384 = !DILocation(line: 674, column: 8, scope: !10355)
!10385 = !DILocation(line: 674, column: 8, scope: !10346)
!10386 = !DILocation(line: 678, column: 5, scope: !10355)
!10387 = !DILocation(line: 684, column: 4, scope: !10346)
!10388 = !DILocation(line: 684, column: 10, scope: !10346)
!10389 = !DILocation(line: 684, column: 15, scope: !10346)
!10390 = !DILocation(line: 689, column: 4, scope: !10346)
!10391 = !DILocation(line: 692, column: 17, scope: !10346)
!10392 = !DILocation(line: 692, column: 4, scope: !10346)
!10393 = !DILocation(line: 692, column: 10, scope: !10346)
!10394 = !DILocation(line: 692, column: 15, scope: !10346)
!10395 = !DILocation(line: 695, column: 16, scope: !10346)
!10396 = !DILocation(line: 695, column: 13, scope: !10346)
!10397 = !DILocation(line: 698, column: 16, scope: !10346)
!10398 = !DILocation(line: 698, column: 14, scope: !10346)
!10399 = !DILocation(line: 699, column: 3, scope: !10346)
!10400 = !DILocation(line: 662, column: 24, scope: !10342)
!10401 = !DILocation(line: 662, column: 3, scope: !10342)
!10402 = distinct !{!10402, !10344, !10403}
!10403 = !DILocation(line: 699, column: 3, scope: !10343)
!10404 = !DILocation(line: 700, column: 2, scope: !10334)
!10405 = !DILocation(line: 657, column: 27, scope: !10329)
!10406 = !DILocation(line: 657, column: 2, scope: !10329)
!10407 = distinct !{!10407, !10332, !10408}
!10408 = !DILocation(line: 700, column: 2, scope: !10326)
!10409 = !DILocation(line: 703, column: 2, scope: !10301)
!10410 = !DILocation(line: 703, column: 14, scope: !10301)
!10411 = !DILocation(line: 703, column: 19, scope: !10301)
!10412 = !DILocation(line: 706, column: 2, scope: !10301)
!10413 = !DILocation(line: 706, column: 13, scope: !10301)
!10414 = !DILocation(line: 706, column: 18, scope: !10301)
!10415 = !DILocation(line: 708, column: 2, scope: !10301)
!10416 = !DILocation(line: 708, column: 13, scope: !10301)
!10417 = !DILocation(line: 708, column: 18, scope: !10301)
!10418 = !DILocation(line: 710, column: 2, scope: !10301)
!10419 = !DILabel(scope: !10301, name: "err_own_bit", file: !3, line: 711)
!10420 = !DILocation(line: 711, column: 1, scope: !10301)
!10421 = !DILocation(line: 714, column: 9, scope: !10301)
!10422 = !DILocation(line: 714, column: 15, scope: !10301)
!10423 = !DILocation(line: 714, column: 2, scope: !10301)
!10424 = !DILocation(line: 715, column: 20, scope: !10301)
!10425 = !DILocation(line: 715, column: 2, scope: !10301)
!10426 = !DILocation(line: 716, column: 2, scope: !10301)
!10427 = !DILocation(line: 717, column: 1, scope: !10301)
!10428 = distinct !DISubprogram(name: "mmc_get_dma_dir", scope: !5395, file: !5395, line: 604, type: !10429, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{!261, !5364}
!10431 = !DILocalVariable(name: "data", arg: 1, scope: !10428, file: !5395, line: 604, type: !5364)
!10432 = !DILocation(line: 604, column: 72, scope: !10428)
!10433 = !DILocation(line: 606, column: 9, scope: !10428)
!10434 = !DILocation(line: 606, column: 15, scope: !10428)
!10435 = !DILocation(line: 606, column: 21, scope: !10428)
!10436 = !DILocation(line: 606, column: 2, scope: !10428)
!10437 = distinct !DISubprogram(name: "dw_mci_edmac_init", scope: !3, file: !3, line: 829, type: !5836, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10438 = !DILocalVariable(name: "host", arg: 1, scope: !10437, file: !3, line: 829, type: !286)
!10439 = !DILocation(line: 829, column: 45, scope: !10437)
!10440 = !DILocation(line: 832, column: 14, scope: !10437)
!10441 = !DILocation(line: 832, column: 2, scope: !10437)
!10442 = !DILocation(line: 832, column: 8, scope: !10437)
!10443 = !DILocation(line: 832, column: 12, scope: !10437)
!10444 = !DILocation(line: 833, column: 7, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 833, column: 6)
!10446 = !DILocation(line: 833, column: 13, scope: !10445)
!10447 = !DILocation(line: 833, column: 6, scope: !10437)
!10448 = !DILocation(line: 834, column: 3, scope: !10445)
!10449 = !DILocation(line: 836, column: 35, scope: !10437)
!10450 = !DILocation(line: 836, column: 41, scope: !10437)
!10451 = !DILocation(line: 836, column: 18, scope: !10437)
!10452 = !DILocation(line: 836, column: 2, scope: !10437)
!10453 = !DILocation(line: 836, column: 8, scope: !10437)
!10454 = !DILocation(line: 836, column: 13, scope: !10437)
!10455 = !DILocation(line: 836, column: 16, scope: !10437)
!10456 = !DILocation(line: 837, column: 13, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 837, column: 6)
!10458 = !DILocation(line: 837, column: 19, scope: !10457)
!10459 = !DILocation(line: 837, column: 24, scope: !10457)
!10460 = !DILocation(line: 837, column: 6, scope: !10457)
!10461 = !DILocation(line: 837, column: 6, scope: !10437)
!10462 = !DILocalVariable(name: "ret", scope: !10463, file: !3, line: 838, type: !446)
!10463 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 837, column: 29)
!10464 = !DILocation(line: 838, column: 7, scope: !10463)
!10465 = !DILocation(line: 838, column: 21, scope: !10463)
!10466 = !DILocation(line: 838, column: 27, scope: !10463)
!10467 = !DILocation(line: 838, column: 32, scope: !10463)
!10468 = !DILocation(line: 838, column: 13, scope: !10463)
!10469 = !DILocation(line: 840, column: 3, scope: !10463)
!10470 = !DILocation(line: 841, column: 9, scope: !10463)
!10471 = !DILocation(line: 841, column: 15, scope: !10463)
!10472 = !DILocation(line: 841, column: 3, scope: !10463)
!10473 = !DILocation(line: 842, column: 3, scope: !10463)
!10474 = !DILocation(line: 842, column: 9, scope: !10463)
!10475 = !DILocation(line: 842, column: 13, scope: !10463)
!10476 = !DILocation(line: 843, column: 10, scope: !10463)
!10477 = !DILocation(line: 843, column: 3, scope: !10463)
!10478 = !DILocation(line: 846, column: 2, scope: !10437)
!10479 = !DILocation(line: 847, column: 1, scope: !10437)
!10480 = !DILocalVariable(name: "host", arg: 1, scope: !6349, file: !3, line: 772, type: !286)
!10481 = !DILocation(line: 772, column: 50, scope: !6349)
!10482 = !DILocalVariable(name: "sg_len", arg: 2, scope: !6349, file: !3, line: 773, type: !7)
!10483 = !DILocation(line: 773, column: 23, scope: !6349)
!10484 = !DILocalVariable(name: "cfg", scope: !6349, file: !3, line: 775, type: !6073)
!10485 = !DILocation(line: 775, column: 26, scope: !6349)
!10486 = !DILocalVariable(name: "desc", scope: !6349, file: !3, line: 776, type: !5924)
!10487 = !DILocation(line: 776, column: 34, scope: !6349)
!10488 = !DILocalVariable(name: "sgl", scope: !6349, file: !3, line: 777, type: !317)
!10489 = !DILocation(line: 777, column: 22, scope: !6349)
!10490 = !DILocation(line: 777, column: 28, scope: !6349)
!10491 = !DILocation(line: 777, column: 34, scope: !6349)
!10492 = !DILocation(line: 777, column: 40, scope: !6349)
!10493 = !DILocalVariable(name: "sg_elems", scope: !6349, file: !3, line: 779, type: !309)
!10494 = !DILocation(line: 779, column: 6, scope: !6349)
!10495 = !DILocation(line: 779, column: 17, scope: !6349)
!10496 = !DILocation(line: 779, column: 23, scope: !6349)
!10497 = !DILocation(line: 779, column: 29, scope: !6349)
!10498 = !DILocalVariable(name: "fifoth_val", scope: !6349, file: !3, line: 780, type: !309)
!10499 = !DILocation(line: 780, column: 6, scope: !6349)
!10500 = !DILocalVariable(name: "fifo_offset", scope: !6349, file: !3, line: 781, type: !309)
!10501 = !DILocation(line: 781, column: 6, scope: !6349)
!10502 = !DILocation(line: 781, column: 20, scope: !6349)
!10503 = !DILocation(line: 781, column: 26, scope: !6349)
!10504 = !DILocation(line: 781, column: 37, scope: !6349)
!10505 = !DILocation(line: 781, column: 43, scope: !6349)
!10506 = !DILocation(line: 781, column: 35, scope: !6349)
!10507 = !DILocalVariable(name: "ret", scope: !6349, file: !3, line: 782, type: !446)
!10508 = !DILocation(line: 782, column: 6, scope: !6349)
!10509 = !DILocation(line: 785, column: 17, scope: !6349)
!10510 = !DILocation(line: 785, column: 23, scope: !6349)
!10511 = !DILocation(line: 785, column: 34, scope: !6349)
!10512 = !DILocation(line: 785, column: 32, scope: !6349)
!10513 = !DILocation(line: 785, column: 6, scope: !6349)
!10514 = !DILocation(line: 785, column: 15, scope: !6349)
!10515 = !DILocation(line: 786, column: 21, scope: !6349)
!10516 = !DILocation(line: 786, column: 6, scope: !6349)
!10517 = !DILocation(line: 786, column: 15, scope: !6349)
!10518 = !DILocation(line: 787, column: 6, scope: !6349)
!10519 = !DILocation(line: 787, column: 21, scope: !6349)
!10520 = !DILocation(line: 788, column: 6, scope: !6349)
!10521 = !DILocation(line: 788, column: 21, scope: !6349)
!10522 = !DILocation(line: 791, column: 15, scope: !6349)
!10523 = !DILocation(line: 791, column: 13, scope: !6349)
!10524 = !DILocation(line: 792, column: 27, scope: !6349)
!10525 = !DILocation(line: 792, column: 38, scope: !6349)
!10526 = !DILocation(line: 792, column: 45, scope: !6349)
!10527 = !DILocation(line: 792, column: 21, scope: !6349)
!10528 = !DILocation(line: 792, column: 6, scope: !6349)
!10529 = !DILocation(line: 792, column: 19, scope: !6349)
!10530 = !DILocation(line: 793, column: 25, scope: !6349)
!10531 = !DILocation(line: 793, column: 6, scope: !6349)
!10532 = !DILocation(line: 793, column: 19, scope: !6349)
!10533 = !DILocation(line: 795, column: 6, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 795, column: 6)
!10535 = !DILocation(line: 795, column: 12, scope: !10534)
!10536 = !DILocation(line: 795, column: 18, scope: !10534)
!10537 = !DILocation(line: 795, column: 24, scope: !10534)
!10538 = !DILocation(line: 795, column: 6, scope: !6349)
!10539 = !DILocation(line: 796, column: 7, scope: !10534)
!10540 = !DILocation(line: 796, column: 17, scope: !10534)
!10541 = !DILocation(line: 796, column: 3, scope: !10534)
!10542 = !DILocation(line: 798, column: 7, scope: !10534)
!10543 = !DILocation(line: 798, column: 17, scope: !10534)
!10544 = !DILocation(line: 800, column: 31, scope: !6349)
!10545 = !DILocation(line: 800, column: 37, scope: !6349)
!10546 = !DILocation(line: 800, column: 42, scope: !6349)
!10547 = !DILocation(line: 800, column: 8, scope: !6349)
!10548 = !DILocation(line: 800, column: 6, scope: !6349)
!10549 = !DILocation(line: 801, column: 6, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 801, column: 6)
!10551 = !DILocation(line: 801, column: 6, scope: !6349)
!10552 = !DILocation(line: 802, column: 3, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 801, column: 11)
!10554 = !DILocation(line: 803, column: 3, scope: !10553)
!10555 = !DILocation(line: 806, column: 33, scope: !6349)
!10556 = !DILocation(line: 806, column: 39, scope: !6349)
!10557 = !DILocation(line: 806, column: 44, scope: !6349)
!10558 = !DILocation(line: 806, column: 48, scope: !6349)
!10559 = !DILocation(line: 807, column: 12, scope: !6349)
!10560 = !DILocation(line: 807, column: 24, scope: !6349)
!10561 = !DILocation(line: 806, column: 9, scope: !6349)
!10562 = !DILocation(line: 806, column: 7, scope: !6349)
!10563 = !DILocation(line: 809, column: 7, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 809, column: 6)
!10565 = !DILocation(line: 809, column: 6, scope: !6349)
!10566 = !DILocation(line: 810, column: 3, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 809, column: 13)
!10568 = !DILocation(line: 811, column: 3, scope: !10567)
!10569 = !DILocation(line: 815, column: 2, scope: !6349)
!10570 = !DILocation(line: 815, column: 8, scope: !6349)
!10571 = !DILocation(line: 815, column: 17, scope: !6349)
!10572 = !DILocation(line: 816, column: 33, scope: !6349)
!10573 = !DILocation(line: 816, column: 25, scope: !6349)
!10574 = !DILocation(line: 816, column: 2, scope: !6349)
!10575 = !DILocation(line: 816, column: 8, scope: !6349)
!10576 = !DILocation(line: 816, column: 23, scope: !6349)
!10577 = !DILocation(line: 817, column: 19, scope: !6349)
!10578 = !DILocation(line: 817, column: 2, scope: !6349)
!10579 = !DILocation(line: 820, column: 6, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !6349, file: !3, line: 820, column: 6)
!10581 = !DILocation(line: 820, column: 12, scope: !10580)
!10582 = !DILocation(line: 820, column: 18, scope: !10580)
!10583 = !DILocation(line: 820, column: 24, scope: !10580)
!10584 = !DILocation(line: 820, column: 6, scope: !6349)
!10585 = !DILocation(line: 821, column: 26, scope: !10580)
!10586 = !DILocation(line: 821, column: 52, scope: !10580)
!10587 = !DILocation(line: 822, column: 12, scope: !10580)
!10588 = !DILocation(line: 821, column: 3, scope: !10580)
!10589 = !DILocation(line: 824, column: 26, scope: !6349)
!10590 = !DILocation(line: 824, column: 32, scope: !6349)
!10591 = !DILocation(line: 824, column: 37, scope: !6349)
!10592 = !DILocation(line: 824, column: 2, scope: !6349)
!10593 = !DILocation(line: 826, column: 2, scope: !6349)
!10594 = !DILocation(line: 827, column: 1, scope: !6349)
!10595 = distinct !DISubprogram(name: "dw_mci_edmac_stop_dma", scope: !3, file: !3, line: 767, type: !5845, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10596 = !DILocalVariable(name: "host", arg: 1, scope: !10595, file: !3, line: 767, type: !286)
!10597 = !DILocation(line: 767, column: 50, scope: !10595)
!10598 = !DILocation(line: 769, column: 28, scope: !10595)
!10599 = !DILocation(line: 769, column: 34, scope: !10595)
!10600 = !DILocation(line: 769, column: 39, scope: !10595)
!10601 = !DILocation(line: 769, column: 2, scope: !10595)
!10602 = !DILocation(line: 770, column: 1, scope: !10595)
!10603 = distinct !DISubprogram(name: "dw_mci_edmac_exit", scope: !3, file: !3, line: 849, type: !5845, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10604 = !DILocalVariable(name: "host", arg: 1, scope: !10603, file: !3, line: 849, type: !286)
!10605 = !DILocation(line: 849, column: 46, scope: !10603)
!10606 = !DILocation(line: 851, column: 6, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 851, column: 6)
!10608 = !DILocation(line: 851, column: 12, scope: !10607)
!10609 = !DILocation(line: 851, column: 6, scope: !10603)
!10610 = !DILocation(line: 852, column: 7, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !3, line: 852, column: 7)
!10612 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 851, column: 17)
!10613 = !DILocation(line: 852, column: 13, scope: !10611)
!10614 = !DILocation(line: 852, column: 18, scope: !10611)
!10615 = !DILocation(line: 852, column: 7, scope: !10612)
!10616 = !DILocation(line: 853, column: 24, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 852, column: 22)
!10618 = !DILocation(line: 853, column: 30, scope: !10617)
!10619 = !DILocation(line: 853, column: 35, scope: !10617)
!10620 = !DILocation(line: 853, column: 4, scope: !10617)
!10621 = !DILocation(line: 854, column: 4, scope: !10617)
!10622 = !DILocation(line: 854, column: 10, scope: !10617)
!10623 = !DILocation(line: 854, column: 15, scope: !10617)
!10624 = !DILocation(line: 854, column: 18, scope: !10617)
!10625 = !DILocation(line: 855, column: 3, scope: !10617)
!10626 = !DILocation(line: 856, column: 9, scope: !10612)
!10627 = !DILocation(line: 856, column: 15, scope: !10612)
!10628 = !DILocation(line: 856, column: 3, scope: !10612)
!10629 = !DILocation(line: 857, column: 3, scope: !10612)
!10630 = !DILocation(line: 857, column: 9, scope: !10612)
!10631 = !DILocation(line: 857, column: 13, scope: !10612)
!10632 = !DILocation(line: 858, column: 2, scope: !10612)
!10633 = !DILocation(line: 859, column: 1, scope: !10603)
!10634 = distinct !DISubprogram(name: "kzalloc", scope: !274, file: !274, line: 662, type: !10635, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{!284, !661, !282}
!10637 = !DILocalVariable(name: "s", arg: 1, scope: !10638, file: !274, line: 445, type: !3404)
!10638 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !274, file: !274, line: 445, type: !10639, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{!284, !3404, !282, !661}
!10641 = !DILocation(line: 445, column: 72, scope: !10638, inlinedAt: !10642)
!10642 = distinct !DILocation(line: 552, column: 10, scope: !10643, inlinedAt: !10646)
!10643 = distinct !DILexicalBlock(scope: !10644, file: !274, line: 540, column: 34)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !274, line: 540, column: 6)
!10645 = distinct !DISubprogram(name: "kmalloc", scope: !274, file: !274, line: 538, type: !10635, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10646 = distinct !DILocation(line: 664, column: 9, scope: !10634)
!10647 = !DILocalVariable(name: "flags", arg: 2, scope: !10638, file: !274, line: 446, type: !282)
!10648 = !DILocation(line: 446, column: 9, scope: !10638, inlinedAt: !10642)
!10649 = !DILocalVariable(name: "size", arg: 3, scope: !10638, file: !274, line: 446, type: !661)
!10650 = !DILocation(line: 446, column: 23, scope: !10638, inlinedAt: !10642)
!10651 = !DILocalVariable(name: "ret", scope: !10638, file: !274, line: 448, type: !284)
!10652 = !DILocation(line: 448, column: 8, scope: !10638, inlinedAt: !10642)
!10653 = !DILocalVariable(name: "flags", arg: 1, scope: !10654, file: !274, line: 318, type: !282)
!10654 = distinct !DISubprogram(name: "kmalloc_type", scope: !274, file: !274, line: 318, type: !10655, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!273, !282}
!10657 = !DILocation(line: 318, column: 67, scope: !10654, inlinedAt: !10658)
!10658 = distinct !DILocation(line: 553, column: 20, scope: !10643, inlinedAt: !10646)
!10659 = !DILocalVariable(name: "size", arg: 1, scope: !10660, file: !274, line: 346, type: !661)
!10660 = distinct !DISubprogram(name: "kmalloc_index", scope: !274, file: !274, line: 346, type: !10661, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10661 = !DISubroutineType(types: !10662)
!10662 = !{!7, !661}
!10663 = !DILocation(line: 346, column: 58, scope: !10660, inlinedAt: !10664)
!10664 = distinct !DILocation(line: 547, column: 11, scope: !10643, inlinedAt: !10646)
!10665 = !DILocalVariable(name: "size", arg: 1, scope: !10666, file: !274, line: 472, type: !661)
!10666 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !274, file: !274, line: 472, type: !10667, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10667 = !DISubroutineType(types: !10668)
!10668 = !{!284, !661, !282, !7}
!10669 = !DILocation(line: 472, column: 28, scope: !10666, inlinedAt: !10670)
!10670 = distinct !DILocation(line: 481, column: 9, scope: !10671, inlinedAt: !10672)
!10671 = distinct !DISubprogram(name: "kmalloc_large", scope: !274, file: !274, line: 478, type: !10635, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10672 = distinct !DILocation(line: 545, column: 11, scope: !10673, inlinedAt: !10646)
!10673 = distinct !DILexicalBlock(scope: !10643, file: !274, line: 544, column: 7)
!10674 = !DILocalVariable(name: "flags", arg: 2, scope: !10666, file: !274, line: 472, type: !282)
!10675 = !DILocation(line: 472, column: 40, scope: !10666, inlinedAt: !10670)
!10676 = !DILocalVariable(name: "order", arg: 3, scope: !10666, file: !274, line: 472, type: !7)
!10677 = !DILocation(line: 472, column: 60, scope: !10666, inlinedAt: !10670)
!10678 = !DILocalVariable(name: "size", arg: 1, scope: !10671, file: !274, line: 478, type: !661)
!10679 = !DILocation(line: 478, column: 51, scope: !10671, inlinedAt: !10672)
!10680 = !DILocalVariable(name: "flags", arg: 2, scope: !10671, file: !274, line: 478, type: !282)
!10681 = !DILocation(line: 478, column: 63, scope: !10671, inlinedAt: !10672)
!10682 = !DILocalVariable(name: "order", scope: !10671, file: !274, line: 480, type: !7)
!10683 = !DILocation(line: 480, column: 15, scope: !10671, inlinedAt: !10672)
!10684 = !DILocalVariable(name: "size", arg: 1, scope: !10645, file: !274, line: 538, type: !661)
!10685 = !DILocation(line: 538, column: 45, scope: !10645, inlinedAt: !10646)
!10686 = !DILocalVariable(name: "flags", arg: 2, scope: !10645, file: !274, line: 538, type: !282)
!10687 = !DILocation(line: 538, column: 57, scope: !10645, inlinedAt: !10646)
!10688 = !DILocalVariable(name: "index", scope: !10643, file: !274, line: 542, type: !7)
!10689 = !DILocation(line: 542, column: 16, scope: !10643, inlinedAt: !10646)
!10690 = !DILocalVariable(name: "size", arg: 1, scope: !10634, file: !274, line: 662, type: !661)
!10691 = !DILocation(line: 662, column: 36, scope: !10634)
!10692 = !DILocalVariable(name: "flags", arg: 2, scope: !10634, file: !274, line: 662, type: !282)
!10693 = !DILocation(line: 662, column: 48, scope: !10634)
!10694 = !DILocation(line: 664, column: 17, scope: !10634)
!10695 = !DILocation(line: 664, column: 23, scope: !10634)
!10696 = !DILocation(line: 664, column: 29, scope: !10634)
!10697 = !DILocation(line: 540, column: 27, scope: !10644, inlinedAt: !10646)
!10698 = !DILocation(line: 540, column: 6, scope: !10644, inlinedAt: !10646)
!10699 = !DILocation(line: 540, column: 6, scope: !10645, inlinedAt: !10646)
!10700 = !DILocation(line: 544, column: 7, scope: !10673, inlinedAt: !10646)
!10701 = !DILocation(line: 544, column: 12, scope: !10673, inlinedAt: !10646)
!10702 = !DILocation(line: 544, column: 7, scope: !10643, inlinedAt: !10646)
!10703 = !DILocation(line: 545, column: 25, scope: !10673, inlinedAt: !10646)
!10704 = !DILocation(line: 545, column: 31, scope: !10673, inlinedAt: !10646)
!10705 = !DILocation(line: 480, column: 33, scope: !10671, inlinedAt: !10672)
!10706 = !DILocation(line: 480, column: 23, scope: !10671, inlinedAt: !10672)
!10707 = !DILocation(line: 481, column: 29, scope: !10671, inlinedAt: !10672)
!10708 = !DILocation(line: 481, column: 35, scope: !10671, inlinedAt: !10672)
!10709 = !DILocation(line: 481, column: 42, scope: !10671, inlinedAt: !10672)
!10710 = !DILocation(line: 474, column: 23, scope: !10666, inlinedAt: !10670)
!10711 = !DILocation(line: 474, column: 29, scope: !10666, inlinedAt: !10670)
!10712 = !DILocation(line: 474, column: 36, scope: !10666, inlinedAt: !10670)
!10713 = !DILocation(line: 474, column: 9, scope: !10666, inlinedAt: !10670)
!10714 = !DILocation(line: 545, column: 4, scope: !10673, inlinedAt: !10646)
!10715 = !DILocation(line: 547, column: 25, scope: !10643, inlinedAt: !10646)
!10716 = !DILocation(line: 348, column: 7, scope: !10717, inlinedAt: !10664)
!10717 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 348, column: 6)
!10718 = !DILocation(line: 348, column: 6, scope: !10660, inlinedAt: !10664)
!10719 = !DILocation(line: 349, column: 3, scope: !10717, inlinedAt: !10664)
!10720 = !DILocation(line: 351, column: 6, scope: !10721, inlinedAt: !10664)
!10721 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 351, column: 6)
!10722 = !DILocation(line: 351, column: 11, scope: !10721, inlinedAt: !10664)
!10723 = !DILocation(line: 351, column: 6, scope: !10660, inlinedAt: !10664)
!10724 = !DILocation(line: 352, column: 3, scope: !10721, inlinedAt: !10664)
!10725 = !DILocation(line: 354, column: 32, scope: !10726, inlinedAt: !10664)
!10726 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 354, column: 6)
!10727 = !DILocation(line: 354, column: 37, scope: !10726, inlinedAt: !10664)
!10728 = !DILocation(line: 354, column: 42, scope: !10726, inlinedAt: !10664)
!10729 = !DILocation(line: 354, column: 45, scope: !10726, inlinedAt: !10664)
!10730 = !DILocation(line: 354, column: 50, scope: !10726, inlinedAt: !10664)
!10731 = !DILocation(line: 354, column: 6, scope: !10660, inlinedAt: !10664)
!10732 = !DILocation(line: 355, column: 3, scope: !10726, inlinedAt: !10664)
!10733 = !DILocation(line: 356, column: 32, scope: !10734, inlinedAt: !10664)
!10734 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 356, column: 6)
!10735 = !DILocation(line: 356, column: 37, scope: !10734, inlinedAt: !10664)
!10736 = !DILocation(line: 356, column: 43, scope: !10734, inlinedAt: !10664)
!10737 = !DILocation(line: 356, column: 46, scope: !10734, inlinedAt: !10664)
!10738 = !DILocation(line: 356, column: 51, scope: !10734, inlinedAt: !10664)
!10739 = !DILocation(line: 356, column: 6, scope: !10660, inlinedAt: !10664)
!10740 = !DILocation(line: 357, column: 3, scope: !10734, inlinedAt: !10664)
!10741 = !DILocation(line: 358, column: 6, scope: !10742, inlinedAt: !10664)
!10742 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 358, column: 6)
!10743 = !DILocation(line: 358, column: 11, scope: !10742, inlinedAt: !10664)
!10744 = !DILocation(line: 358, column: 6, scope: !10660, inlinedAt: !10664)
!10745 = !DILocation(line: 358, column: 26, scope: !10742, inlinedAt: !10664)
!10746 = !DILocation(line: 359, column: 6, scope: !10747, inlinedAt: !10664)
!10747 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 359, column: 6)
!10748 = !DILocation(line: 359, column: 11, scope: !10747, inlinedAt: !10664)
!10749 = !DILocation(line: 359, column: 6, scope: !10660, inlinedAt: !10664)
!10750 = !DILocation(line: 359, column: 26, scope: !10747, inlinedAt: !10664)
!10751 = !DILocation(line: 360, column: 6, scope: !10752, inlinedAt: !10664)
!10752 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 360, column: 6)
!10753 = !DILocation(line: 360, column: 11, scope: !10752, inlinedAt: !10664)
!10754 = !DILocation(line: 360, column: 6, scope: !10660, inlinedAt: !10664)
!10755 = !DILocation(line: 360, column: 26, scope: !10752, inlinedAt: !10664)
!10756 = !DILocation(line: 361, column: 6, scope: !10757, inlinedAt: !10664)
!10757 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 361, column: 6)
!10758 = !DILocation(line: 361, column: 11, scope: !10757, inlinedAt: !10664)
!10759 = !DILocation(line: 361, column: 6, scope: !10660, inlinedAt: !10664)
!10760 = !DILocation(line: 361, column: 26, scope: !10757, inlinedAt: !10664)
!10761 = !DILocation(line: 362, column: 6, scope: !10762, inlinedAt: !10664)
!10762 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 362, column: 6)
!10763 = !DILocation(line: 362, column: 11, scope: !10762, inlinedAt: !10664)
!10764 = !DILocation(line: 362, column: 6, scope: !10660, inlinedAt: !10664)
!10765 = !DILocation(line: 362, column: 26, scope: !10762, inlinedAt: !10664)
!10766 = !DILocation(line: 363, column: 6, scope: !10767, inlinedAt: !10664)
!10767 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 363, column: 6)
!10768 = !DILocation(line: 363, column: 11, scope: !10767, inlinedAt: !10664)
!10769 = !DILocation(line: 363, column: 6, scope: !10660, inlinedAt: !10664)
!10770 = !DILocation(line: 363, column: 26, scope: !10767, inlinedAt: !10664)
!10771 = !DILocation(line: 364, column: 6, scope: !10772, inlinedAt: !10664)
!10772 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 364, column: 6)
!10773 = !DILocation(line: 364, column: 11, scope: !10772, inlinedAt: !10664)
!10774 = !DILocation(line: 364, column: 6, scope: !10660, inlinedAt: !10664)
!10775 = !DILocation(line: 364, column: 26, scope: !10772, inlinedAt: !10664)
!10776 = !DILocation(line: 365, column: 6, scope: !10777, inlinedAt: !10664)
!10777 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 365, column: 6)
!10778 = !DILocation(line: 365, column: 11, scope: !10777, inlinedAt: !10664)
!10779 = !DILocation(line: 365, column: 6, scope: !10660, inlinedAt: !10664)
!10780 = !DILocation(line: 365, column: 26, scope: !10777, inlinedAt: !10664)
!10781 = !DILocation(line: 366, column: 6, scope: !10782, inlinedAt: !10664)
!10782 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 366, column: 6)
!10783 = !DILocation(line: 366, column: 11, scope: !10782, inlinedAt: !10664)
!10784 = !DILocation(line: 366, column: 6, scope: !10660, inlinedAt: !10664)
!10785 = !DILocation(line: 366, column: 26, scope: !10782, inlinedAt: !10664)
!10786 = !DILocation(line: 367, column: 6, scope: !10787, inlinedAt: !10664)
!10787 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 367, column: 6)
!10788 = !DILocation(line: 367, column: 11, scope: !10787, inlinedAt: !10664)
!10789 = !DILocation(line: 367, column: 6, scope: !10660, inlinedAt: !10664)
!10790 = !DILocation(line: 367, column: 26, scope: !10787, inlinedAt: !10664)
!10791 = !DILocation(line: 368, column: 6, scope: !10792, inlinedAt: !10664)
!10792 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 368, column: 6)
!10793 = !DILocation(line: 368, column: 11, scope: !10792, inlinedAt: !10664)
!10794 = !DILocation(line: 368, column: 6, scope: !10660, inlinedAt: !10664)
!10795 = !DILocation(line: 368, column: 26, scope: !10792, inlinedAt: !10664)
!10796 = !DILocation(line: 369, column: 6, scope: !10797, inlinedAt: !10664)
!10797 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 369, column: 6)
!10798 = !DILocation(line: 369, column: 11, scope: !10797, inlinedAt: !10664)
!10799 = !DILocation(line: 369, column: 6, scope: !10660, inlinedAt: !10664)
!10800 = !DILocation(line: 369, column: 26, scope: !10797, inlinedAt: !10664)
!10801 = !DILocation(line: 370, column: 6, scope: !10802, inlinedAt: !10664)
!10802 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 370, column: 6)
!10803 = !DILocation(line: 370, column: 11, scope: !10802, inlinedAt: !10664)
!10804 = !DILocation(line: 370, column: 6, scope: !10660, inlinedAt: !10664)
!10805 = !DILocation(line: 370, column: 26, scope: !10802, inlinedAt: !10664)
!10806 = !DILocation(line: 371, column: 6, scope: !10807, inlinedAt: !10664)
!10807 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 371, column: 6)
!10808 = !DILocation(line: 371, column: 11, scope: !10807, inlinedAt: !10664)
!10809 = !DILocation(line: 371, column: 6, scope: !10660, inlinedAt: !10664)
!10810 = !DILocation(line: 371, column: 26, scope: !10807, inlinedAt: !10664)
!10811 = !DILocation(line: 372, column: 6, scope: !10812, inlinedAt: !10664)
!10812 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 372, column: 6)
!10813 = !DILocation(line: 372, column: 11, scope: !10812, inlinedAt: !10664)
!10814 = !DILocation(line: 372, column: 6, scope: !10660, inlinedAt: !10664)
!10815 = !DILocation(line: 372, column: 26, scope: !10812, inlinedAt: !10664)
!10816 = !DILocation(line: 373, column: 6, scope: !10817, inlinedAt: !10664)
!10817 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 373, column: 6)
!10818 = !DILocation(line: 373, column: 11, scope: !10817, inlinedAt: !10664)
!10819 = !DILocation(line: 373, column: 6, scope: !10660, inlinedAt: !10664)
!10820 = !DILocation(line: 373, column: 26, scope: !10817, inlinedAt: !10664)
!10821 = !DILocation(line: 374, column: 6, scope: !10822, inlinedAt: !10664)
!10822 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 374, column: 6)
!10823 = !DILocation(line: 374, column: 11, scope: !10822, inlinedAt: !10664)
!10824 = !DILocation(line: 374, column: 6, scope: !10660, inlinedAt: !10664)
!10825 = !DILocation(line: 374, column: 26, scope: !10822, inlinedAt: !10664)
!10826 = !DILocation(line: 375, column: 6, scope: !10827, inlinedAt: !10664)
!10827 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 375, column: 6)
!10828 = !DILocation(line: 375, column: 11, scope: !10827, inlinedAt: !10664)
!10829 = !DILocation(line: 375, column: 6, scope: !10660, inlinedAt: !10664)
!10830 = !DILocation(line: 375, column: 27, scope: !10827, inlinedAt: !10664)
!10831 = !DILocation(line: 376, column: 6, scope: !10832, inlinedAt: !10664)
!10832 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 376, column: 6)
!10833 = !DILocation(line: 376, column: 11, scope: !10832, inlinedAt: !10664)
!10834 = !DILocation(line: 376, column: 6, scope: !10660, inlinedAt: !10664)
!10835 = !DILocation(line: 376, column: 32, scope: !10832, inlinedAt: !10664)
!10836 = !DILocation(line: 377, column: 6, scope: !10837, inlinedAt: !10664)
!10837 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 377, column: 6)
!10838 = !DILocation(line: 377, column: 11, scope: !10837, inlinedAt: !10664)
!10839 = !DILocation(line: 377, column: 6, scope: !10660, inlinedAt: !10664)
!10840 = !DILocation(line: 377, column: 32, scope: !10837, inlinedAt: !10664)
!10841 = !DILocation(line: 378, column: 6, scope: !10842, inlinedAt: !10664)
!10842 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 378, column: 6)
!10843 = !DILocation(line: 378, column: 11, scope: !10842, inlinedAt: !10664)
!10844 = !DILocation(line: 378, column: 6, scope: !10660, inlinedAt: !10664)
!10845 = !DILocation(line: 378, column: 32, scope: !10842, inlinedAt: !10664)
!10846 = !DILocation(line: 379, column: 6, scope: !10847, inlinedAt: !10664)
!10847 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 379, column: 6)
!10848 = !DILocation(line: 379, column: 11, scope: !10847, inlinedAt: !10664)
!10849 = !DILocation(line: 379, column: 6, scope: !10660, inlinedAt: !10664)
!10850 = !DILocation(line: 379, column: 33, scope: !10847, inlinedAt: !10664)
!10851 = !DILocation(line: 380, column: 6, scope: !10852, inlinedAt: !10664)
!10852 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 380, column: 6)
!10853 = !DILocation(line: 380, column: 11, scope: !10852, inlinedAt: !10664)
!10854 = !DILocation(line: 380, column: 6, scope: !10660, inlinedAt: !10664)
!10855 = !DILocation(line: 380, column: 33, scope: !10852, inlinedAt: !10664)
!10856 = !DILocation(line: 381, column: 6, scope: !10857, inlinedAt: !10664)
!10857 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 381, column: 6)
!10858 = !DILocation(line: 381, column: 11, scope: !10857, inlinedAt: !10664)
!10859 = !DILocation(line: 381, column: 6, scope: !10660, inlinedAt: !10664)
!10860 = !DILocation(line: 381, column: 33, scope: !10857, inlinedAt: !10664)
!10861 = !DILocation(line: 382, column: 2, scope: !10862, inlinedAt: !10664)
!10862 = distinct !DILexicalBlock(scope: !10863, file: !274, line: 382, column: 2)
!10863 = distinct !DILexicalBlock(scope: !10660, file: !274, line: 382, column: 2)
!10864 = !{i32 -2143968533, i32 -2143968504, i32 -2143968458, i32 -2143968400, i32 -2143968346, i32 -2143968292, i32 -2143968237, i32 -2143968206}
!10865 = !DILocation(line: 382, column: 2, scope: !10866, inlinedAt: !10664)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !274, line: 382, column: 2)
!10867 = distinct !DILexicalBlock(scope: !10863, file: !274, line: 382, column: 2)
!10868 = !{i32 -2143967763, i32 -2143967756, i32 -2143967702, i32 -2143967671, i32 -2143967641}
!10869 = !DILocation(line: 382, column: 2, scope: !10867, inlinedAt: !10664)
!10870 = !DILocation(line: 386, column: 1, scope: !10660, inlinedAt: !10664)
!10871 = !DILocation(line: 547, column: 9, scope: !10643, inlinedAt: !10646)
!10872 = !DILocation(line: 549, column: 8, scope: !10873, inlinedAt: !10646)
!10873 = distinct !DILexicalBlock(scope: !10643, file: !274, line: 549, column: 7)
!10874 = !DILocation(line: 549, column: 7, scope: !10643, inlinedAt: !10646)
!10875 = !DILocation(line: 550, column: 4, scope: !10873, inlinedAt: !10646)
!10876 = !DILocation(line: 553, column: 33, scope: !10643, inlinedAt: !10646)
!10877 = !DILocation(line: 325, column: 6, scope: !10878, inlinedAt: !10658)
!10878 = distinct !DILexicalBlock(scope: !10654, file: !274, line: 325, column: 6)
!10879 = !DILocation(line: 325, column: 6, scope: !10654, inlinedAt: !10658)
!10880 = !DILocation(line: 326, column: 3, scope: !10878, inlinedAt: !10658)
!10881 = !DILocation(line: 332, column: 9, scope: !10654, inlinedAt: !10658)
!10882 = !DILocation(line: 332, column: 15, scope: !10654, inlinedAt: !10658)
!10883 = !DILocation(line: 332, column: 2, scope: !10654, inlinedAt: !10658)
!10884 = !DILocation(line: 336, column: 1, scope: !10654, inlinedAt: !10658)
!10885 = !DILocation(line: 553, column: 5, scope: !10643, inlinedAt: !10646)
!10886 = !DILocation(line: 553, column: 41, scope: !10643, inlinedAt: !10646)
!10887 = !DILocation(line: 554, column: 5, scope: !10643, inlinedAt: !10646)
!10888 = !DILocation(line: 554, column: 12, scope: !10643, inlinedAt: !10646)
!10889 = !DILocation(line: 448, column: 31, scope: !10638, inlinedAt: !10642)
!10890 = !DILocation(line: 448, column: 34, scope: !10638, inlinedAt: !10642)
!10891 = !DILocation(line: 448, column: 14, scope: !10638, inlinedAt: !10642)
!10892 = !DILocation(line: 450, column: 22, scope: !10638, inlinedAt: !10642)
!10893 = !DILocation(line: 450, column: 25, scope: !10638, inlinedAt: !10642)
!10894 = !DILocation(line: 450, column: 30, scope: !10638, inlinedAt: !10642)
!10895 = !DILocation(line: 450, column: 36, scope: !10638, inlinedAt: !10642)
!10896 = !DILocation(line: 450, column: 8, scope: !10638, inlinedAt: !10642)
!10897 = !DILocation(line: 450, column: 6, scope: !10638, inlinedAt: !10642)
!10898 = !DILocation(line: 451, column: 9, scope: !10638, inlinedAt: !10642)
!10899 = !DILocation(line: 552, column: 3, scope: !10643, inlinedAt: !10646)
!10900 = !DILocation(line: 557, column: 19, scope: !10645, inlinedAt: !10646)
!10901 = !DILocation(line: 557, column: 25, scope: !10645, inlinedAt: !10646)
!10902 = !DILocation(line: 557, column: 9, scope: !10645, inlinedAt: !10646)
!10903 = !DILocation(line: 557, column: 2, scope: !10645, inlinedAt: !10646)
!10904 = !DILocation(line: 558, column: 1, scope: !10645, inlinedAt: !10646)
!10905 = !DILocation(line: 664, column: 2, scope: !10634)
!10906 = distinct !DISubprogram(name: "get_order", scope: !10907, file: !10907, line: 29, type: !10908, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10907 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10908 = !DISubroutineType(types: !10909)
!10909 = !{!446, !281}
!10910 = !DILocalVariable(name: "x", arg: 1, scope: !10911, file: !9483, line: 366, type: !327)
!10911 = distinct !DISubprogram(name: "fls64", scope: !9483, file: !9483, line: 366, type: !10912, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10912 = !DISubroutineType(types: !10913)
!10913 = !{!446, !327}
!10914 = !DILocation(line: 366, column: 40, scope: !10911, inlinedAt: !10915)
!10915 = distinct !DILocation(line: 46, column: 9, scope: !10906)
!10916 = !DILocalVariable(name: "bitpos", scope: !10911, file: !9483, line: 368, type: !446)
!10917 = !DILocation(line: 368, column: 6, scope: !10911, inlinedAt: !10915)
!10918 = !DILocalVariable(name: "size", arg: 1, scope: !10906, file: !10907, line: 29, type: !281)
!10919 = !DILocation(line: 29, column: 63, scope: !10906)
!10920 = !DILocation(line: 31, column: 27, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10906, file: !10907, line: 31, column: 6)
!10922 = !DILocation(line: 31, column: 6, scope: !10921)
!10923 = !DILocation(line: 31, column: 6, scope: !10906)
!10924 = !DILocation(line: 32, column: 8, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !10907, line: 32, column: 7)
!10926 = distinct !DILexicalBlock(scope: !10921, file: !10907, line: 31, column: 34)
!10927 = !DILocation(line: 32, column: 7, scope: !10926)
!10928 = !DILocation(line: 33, column: 4, scope: !10925)
!10929 = !DILocation(line: 35, column: 7, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10926, file: !10907, line: 35, column: 7)
!10931 = !DILocation(line: 35, column: 12, scope: !10930)
!10932 = !DILocation(line: 35, column: 7, scope: !10926)
!10933 = !DILocation(line: 36, column: 4, scope: !10930)
!10934 = !DILocation(line: 38, column: 10, scope: !10926)
!10935 = !DILocation(line: 38, column: 28, scope: !10926)
!10936 = !DILocation(line: 38, column: 41, scope: !10926)
!10937 = !DILocation(line: 38, column: 3, scope: !10926)
!10938 = !DILocation(line: 41, column: 6, scope: !10906)
!10939 = !DILocation(line: 42, column: 7, scope: !10906)
!10940 = !DILocation(line: 46, column: 15, scope: !10906)
!10941 = !DILocation(line: 374, column: 2, scope: !10911, inlinedAt: !10915)
!10942 = !DILocation(line: 376, column: 14, scope: !10911, inlinedAt: !10915)
!10943 = !{i32 471809}
!10944 = !DILocation(line: 377, column: 9, scope: !10911, inlinedAt: !10915)
!10945 = !DILocation(line: 377, column: 16, scope: !10911, inlinedAt: !10915)
!10946 = !DILocation(line: 46, column: 2, scope: !10906)
!10947 = !DILocation(line: 48, column: 1, scope: !10906)
!10948 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10949, file: !10949, line: 30, type: !10950, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10949 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!446, !326}
!10952 = !DILocation(line: 366, column: 40, scope: !10911, inlinedAt: !10953)
!10953 = distinct !DILocation(line: 32, column: 9, scope: !10948)
!10954 = !DILocation(line: 368, column: 6, scope: !10911, inlinedAt: !10953)
!10955 = !DILocalVariable(name: "n", arg: 1, scope: !10948, file: !10949, line: 30, type: !326)
!10956 = !DILocation(line: 30, column: 21, scope: !10948)
!10957 = !DILocation(line: 32, column: 15, scope: !10948)
!10958 = !DILocation(line: 374, column: 2, scope: !10911, inlinedAt: !10953)
!10959 = !DILocation(line: 376, column: 14, scope: !10911, inlinedAt: !10953)
!10960 = !DILocation(line: 377, column: 9, scope: !10911, inlinedAt: !10953)
!10961 = !DILocation(line: 377, column: 16, scope: !10911, inlinedAt: !10953)
!10962 = !DILocation(line: 32, column: 18, scope: !10948)
!10963 = !DILocation(line: 32, column: 2, scope: !10948)
!10964 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10965, file: !10965, line: 137, type: !10966, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10965 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10966 = !DISubroutineType(types: !10967)
!10967 = !{!284, !3404, !2120, !661, !282}
!10968 = !DILocalVariable(name: "s", arg: 1, scope: !10964, file: !10965, line: 137, type: !3404)
!10969 = !DILocation(line: 137, column: 54, scope: !10964)
!10970 = !DILocalVariable(name: "object", arg: 2, scope: !10964, file: !10965, line: 137, type: !2120)
!10971 = !DILocation(line: 137, column: 69, scope: !10964)
!10972 = !DILocalVariable(name: "size", arg: 3, scope: !10964, file: !10965, line: 138, type: !661)
!10973 = !DILocation(line: 138, column: 12, scope: !10964)
!10974 = !DILocalVariable(name: "flags", arg: 4, scope: !10964, file: !10965, line: 138, type: !282)
!10975 = !DILocation(line: 138, column: 24, scope: !10964)
!10976 = !DILocation(line: 140, column: 17, scope: !10964)
!10977 = !DILocation(line: 140, column: 2, scope: !10964)
!10978 = distinct !DISubprogram(name: "dmaengine_slave_config", scope: !164, file: !164, line: 941, type: !6070, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10979 = !DILocalVariable(name: "chan", arg: 1, scope: !10978, file: !164, line: 941, type: !5855)
!10980 = !DILocation(line: 941, column: 59, scope: !10978)
!10981 = !DILocalVariable(name: "config", arg: 2, scope: !10978, file: !164, line: 942, type: !6072)
!10982 = !DILocation(line: 942, column: 33, scope: !10978)
!10983 = !DILocation(line: 944, column: 6, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10978, file: !164, line: 944, column: 6)
!10985 = !DILocation(line: 944, column: 12, scope: !10984)
!10986 = !DILocation(line: 944, column: 20, scope: !10984)
!10987 = !DILocation(line: 944, column: 6, scope: !10978)
!10988 = !DILocation(line: 945, column: 10, scope: !10984)
!10989 = !DILocation(line: 945, column: 16, scope: !10984)
!10990 = !DILocation(line: 945, column: 24, scope: !10984)
!10991 = !DILocation(line: 945, column: 38, scope: !10984)
!10992 = !DILocation(line: 945, column: 44, scope: !10984)
!10993 = !DILocation(line: 945, column: 3, scope: !10984)
!10994 = !DILocation(line: 947, column: 2, scope: !10978)
!10995 = !DILocation(line: 948, column: 1, scope: !10978)
!10996 = distinct !DISubprogram(name: "dmaengine_prep_slave_sg", scope: !164, file: !164, line: 971, type: !10997, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!5924, !5855, !317, !7, !205, !281}
!10999 = !DILocalVariable(name: "chan", arg: 1, scope: !10996, file: !164, line: 972, type: !5855)
!11000 = !DILocation(line: 972, column: 19, scope: !10996)
!11001 = !DILocalVariable(name: "sgl", arg: 2, scope: !10996, file: !164, line: 972, type: !317)
!11002 = !DILocation(line: 972, column: 45, scope: !10996)
!11003 = !DILocalVariable(name: "sg_len", arg: 3, scope: !10996, file: !164, line: 972, type: !7)
!11004 = !DILocation(line: 972, column: 63, scope: !10996)
!11005 = !DILocalVariable(name: "dir", arg: 4, scope: !10996, file: !164, line: 973, type: !205)
!11006 = !DILocation(line: 973, column: 30, scope: !10996)
!11007 = !DILocalVariable(name: "flags", arg: 5, scope: !10996, file: !164, line: 973, type: !281)
!11008 = !DILocation(line: 973, column: 49, scope: !10996)
!11009 = !DILocation(line: 975, column: 7, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !10996, file: !164, line: 975, column: 6)
!11011 = !DILocation(line: 975, column: 12, scope: !11010)
!11012 = !DILocation(line: 975, column: 16, scope: !11010)
!11013 = !DILocation(line: 975, column: 22, scope: !11010)
!11014 = !DILocation(line: 975, column: 29, scope: !11010)
!11015 = !DILocation(line: 975, column: 33, scope: !11010)
!11016 = !DILocation(line: 975, column: 39, scope: !11010)
!11017 = !DILocation(line: 975, column: 47, scope: !11010)
!11018 = !DILocation(line: 975, column: 6, scope: !10996)
!11019 = !DILocation(line: 976, column: 3, scope: !11010)
!11020 = !DILocation(line: 978, column: 9, scope: !10996)
!11021 = !DILocation(line: 978, column: 15, scope: !10996)
!11022 = !DILocation(line: 978, column: 23, scope: !10996)
!11023 = !DILocation(line: 978, column: 44, scope: !10996)
!11024 = !DILocation(line: 978, column: 50, scope: !10996)
!11025 = !DILocation(line: 978, column: 55, scope: !10996)
!11026 = !DILocation(line: 979, column: 9, scope: !10996)
!11027 = !DILocation(line: 979, column: 14, scope: !10996)
!11028 = !DILocation(line: 978, column: 2, scope: !10996)
!11029 = !DILocation(line: 980, column: 1, scope: !10996)
!11030 = distinct !DISubprogram(name: "dmaengine_submit", scope: !164, file: !164, line: 1198, type: !5934, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11031 = !DILocalVariable(name: "desc", arg: 1, scope: !11030, file: !164, line: 1198, type: !5924)
!11032 = !DILocation(line: 1198, column: 77, scope: !11030)
!11033 = !DILocation(line: 1200, column: 9, scope: !11030)
!11034 = !DILocation(line: 1200, column: 15, scope: !11030)
!11035 = !DILocation(line: 1200, column: 25, scope: !11030)
!11036 = !DILocation(line: 1200, column: 2, scope: !11030)
!11037 = distinct !DISubprogram(name: "dma_async_issue_pending", scope: !164, file: !164, line: 1404, type: !5918, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11038 = !DILocalVariable(name: "chan", arg: 1, scope: !11037, file: !164, line: 1404, type: !5855)
!11039 = !DILocation(line: 1404, column: 61, scope: !11037)
!11040 = !DILocation(line: 1406, column: 2, scope: !11037)
!11041 = !DILocation(line: 1406, column: 8, scope: !11037)
!11042 = !DILocation(line: 1406, column: 16, scope: !11037)
!11043 = !DILocation(line: 1406, column: 37, scope: !11037)
!11044 = !DILocation(line: 1407, column: 1, scope: !11037)
!11045 = distinct !DISubprogram(name: "dmaengine_terminate_async", scope: !164, file: !164, line: 1115, type: !5914, scopeLine: 1116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11046 = !DILocalVariable(name: "chan", arg: 1, scope: !11045, file: !164, line: 1115, type: !5855)
!11047 = !DILocation(line: 1115, column: 62, scope: !11045)
!11048 = !DILocation(line: 1117, column: 6, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11045, file: !164, line: 1117, column: 6)
!11050 = !DILocation(line: 1117, column: 12, scope: !11049)
!11051 = !DILocation(line: 1117, column: 20, scope: !11049)
!11052 = !DILocation(line: 1117, column: 6, scope: !11045)
!11053 = !DILocation(line: 1118, column: 10, scope: !11049)
!11054 = !DILocation(line: 1118, column: 16, scope: !11049)
!11055 = !DILocation(line: 1118, column: 24, scope: !11049)
!11056 = !DILocation(line: 1118, column: 45, scope: !11049)
!11057 = !DILocation(line: 1118, column: 3, scope: !11049)
!11058 = !DILocation(line: 1120, column: 2, scope: !11045)
!11059 = !DILocation(line: 1121, column: 1, scope: !11045)
!11060 = distinct !DISubprogram(name: "dw_mci_clear_pending_cmd_complete", scope: !3, file: !3, line: 1925, type: !11061, scopeLine: 1926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11061 = !DISubroutineType(types: !11062)
!11062 = !{!314, !286}
!11063 = !DILocalVariable(name: "host", arg: 1, scope: !11060, file: !3, line: 1925, type: !286)
!11064 = !DILocation(line: 1925, column: 62, scope: !11060)
!11065 = !DILocation(line: 1927, column: 37, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 1927, column: 6)
!11067 = !DILocation(line: 1927, column: 43, scope: !11066)
!11068 = !DILocation(line: 1927, column: 7, scope: !11066)
!11069 = !DILocation(line: 1927, column: 6, scope: !11060)
!11070 = !DILocation(line: 1928, column: 3, scope: !11066)
!11071 = !DILocalVariable(name: "__ret_warn_on", scope: !11072, file: !3, line: 1937, type: !446)
!11072 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 1937, column: 2)
!11073 = !DILocation(line: 1937, column: 2, scope: !11072)
!11074 = !DILocation(line: 1937, column: 2, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 1937, column: 2)
!11076 = !DILocation(line: 1937, column: 2, scope: !11077)
!11077 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1937, column: 2)
!11078 = !DILocation(line: 1937, column: 2, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 1937, column: 2)
!11080 = !DILocation(line: 1937, column: 2, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 1937, column: 2)
!11082 = !{i32 -2140169756, i32 -2140169727, i32 -2140169681, i32 -2140169623, i32 -2140169569, i32 -2140169515, i32 -2140169460, i32 -2140169429}
!11083 = !DILocation(line: 1937, column: 2, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 1937, column: 2)
!11085 = !{i32 -2140169021, i32 -2140169014, i32 -2140168962, i32 -2140168931, i32 -2140168901}
!11086 = !DILocation(line: 1937, column: 2, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11077, file: !3, line: 1937, column: 2)
!11088 = !DILocation(line: 1938, column: 33, scope: !11060)
!11089 = !DILocation(line: 1938, column: 39, scope: !11060)
!11090 = !DILocation(line: 1938, column: 2, scope: !11060)
!11091 = !DILocation(line: 1940, column: 2, scope: !11060)
!11092 = !DILocation(line: 1941, column: 1, scope: !11060)
!11093 = distinct !DISubprogram(name: "dw_mci_command_complete", scope: !3, file: !3, line: 1824, type: !11094, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11094 = !DISubroutineType(types: !11095)
!11095 = !{!446, !286, !5352}
!11096 = !DILocalVariable(name: "host", arg: 1, scope: !11093, file: !3, line: 1824, type: !286)
!11097 = !DILocation(line: 1824, column: 51, scope: !11093)
!11098 = !DILocalVariable(name: "cmd", arg: 2, scope: !11093, file: !3, line: 1824, type: !5352)
!11099 = !DILocation(line: 1824, column: 77, scope: !11093)
!11100 = !DILocalVariable(name: "status", scope: !11093, file: !3, line: 1826, type: !309)
!11101 = !DILocation(line: 1826, column: 6, scope: !11093)
!11102 = !DILocation(line: 1826, column: 15, scope: !11093)
!11103 = !DILocation(line: 1826, column: 21, scope: !11093)
!11104 = !DILocation(line: 1828, column: 2, scope: !11093)
!11105 = !DILocation(line: 1828, column: 8, scope: !11093)
!11106 = !DILocation(line: 1828, column: 19, scope: !11093)
!11107 = !DILocation(line: 1831, column: 6, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 1831, column: 6)
!11109 = !DILocation(line: 1831, column: 11, scope: !11108)
!11110 = !DILocation(line: 1831, column: 17, scope: !11108)
!11111 = !DILocation(line: 1831, column: 6, scope: !11093)
!11112 = !DILocation(line: 1832, column: 7, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 1832, column: 7)
!11114 = distinct !DILexicalBlock(scope: !11108, file: !3, line: 1831, column: 36)
!11115 = !DILocation(line: 1832, column: 12, scope: !11113)
!11116 = !DILocation(line: 1832, column: 18, scope: !11113)
!11117 = !DILocation(line: 1832, column: 7, scope: !11114)
!11118 = !DILocation(line: 1833, column: 19, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 1832, column: 33)
!11120 = !DILocation(line: 1833, column: 4, scope: !11119)
!11121 = !DILocation(line: 1833, column: 9, scope: !11119)
!11122 = !DILocation(line: 1833, column: 17, scope: !11119)
!11123 = !DILocation(line: 1834, column: 19, scope: !11119)
!11124 = !DILocation(line: 1834, column: 4, scope: !11119)
!11125 = !DILocation(line: 1834, column: 9, scope: !11119)
!11126 = !DILocation(line: 1834, column: 17, scope: !11119)
!11127 = !DILocation(line: 1835, column: 19, scope: !11119)
!11128 = !DILocation(line: 1835, column: 4, scope: !11119)
!11129 = !DILocation(line: 1835, column: 9, scope: !11119)
!11130 = !DILocation(line: 1835, column: 17, scope: !11119)
!11131 = !DILocation(line: 1836, column: 19, scope: !11119)
!11132 = !DILocation(line: 1836, column: 4, scope: !11119)
!11133 = !DILocation(line: 1836, column: 9, scope: !11119)
!11134 = !DILocation(line: 1836, column: 17, scope: !11119)
!11135 = !DILocation(line: 1837, column: 3, scope: !11119)
!11136 = !DILocation(line: 1838, column: 19, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 1837, column: 10)
!11138 = !DILocation(line: 1838, column: 4, scope: !11137)
!11139 = !DILocation(line: 1838, column: 9, scope: !11137)
!11140 = !DILocation(line: 1838, column: 17, scope: !11137)
!11141 = !DILocation(line: 1839, column: 4, scope: !11137)
!11142 = !DILocation(line: 1839, column: 9, scope: !11137)
!11143 = !DILocation(line: 1839, column: 17, scope: !11137)
!11144 = !DILocation(line: 1840, column: 4, scope: !11137)
!11145 = !DILocation(line: 1840, column: 9, scope: !11137)
!11146 = !DILocation(line: 1840, column: 17, scope: !11137)
!11147 = !DILocation(line: 1841, column: 4, scope: !11137)
!11148 = !DILocation(line: 1841, column: 9, scope: !11137)
!11149 = !DILocation(line: 1841, column: 17, scope: !11137)
!11150 = !DILocation(line: 1843, column: 2, scope: !11114)
!11151 = !DILocation(line: 1845, column: 6, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 1845, column: 6)
!11153 = !DILocation(line: 1845, column: 13, scope: !11152)
!11154 = !DILocation(line: 1845, column: 6, scope: !11093)
!11155 = !DILocation(line: 1846, column: 3, scope: !11152)
!11156 = !DILocation(line: 1846, column: 8, scope: !11152)
!11157 = !DILocation(line: 1846, column: 14, scope: !11152)
!11158 = !DILocation(line: 1847, column: 12, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 1847, column: 11)
!11160 = !DILocation(line: 1847, column: 17, scope: !11159)
!11161 = !DILocation(line: 1847, column: 23, scope: !11159)
!11162 = !DILocation(line: 1847, column: 38, scope: !11159)
!11163 = !DILocation(line: 1847, column: 42, scope: !11159)
!11164 = !DILocation(line: 1847, column: 49, scope: !11159)
!11165 = !DILocation(line: 1847, column: 11, scope: !11152)
!11166 = !DILocation(line: 1848, column: 3, scope: !11159)
!11167 = !DILocation(line: 1848, column: 8, scope: !11159)
!11168 = !DILocation(line: 1848, column: 14, scope: !11159)
!11169 = !DILocation(line: 1849, column: 11, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 1849, column: 11)
!11171 = !DILocation(line: 1849, column: 18, scope: !11170)
!11172 = !DILocation(line: 1849, column: 11, scope: !11159)
!11173 = !DILocation(line: 1850, column: 3, scope: !11170)
!11174 = !DILocation(line: 1850, column: 8, scope: !11170)
!11175 = !DILocation(line: 1850, column: 14, scope: !11170)
!11176 = !DILocation(line: 1852, column: 3, scope: !11170)
!11177 = !DILocation(line: 1852, column: 8, scope: !11170)
!11178 = !DILocation(line: 1852, column: 14, scope: !11170)
!11179 = !DILocation(line: 1854, column: 9, scope: !11093)
!11180 = !DILocation(line: 1854, column: 14, scope: !11093)
!11181 = !DILocation(line: 1854, column: 2, scope: !11093)
!11182 = distinct !DISubprogram(name: "__dw_mci_start_request", scope: !3, file: !3, line: 1280, type: !11183, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11183 = !DISubroutineType(types: !11184)
!11184 = !{null, !286, !6210, !5352}
!11185 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !11186)
!11186 = distinct !DILocation(line: 1335, column: 3, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 1318, column: 40)
!11188 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 1318, column: 6)
!11189 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !11186)
!11190 = !DILocalVariable(name: "m", arg: 1, scope: !11191, file: !11192, line: 363, type: !3582)
!11191 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !11192, file: !11192, line: 363, type: !11193, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11192 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!11193 = !DISubroutineType(types: !11194)
!11194 = !{!281, !3582}
!11195 = !DILocation(line: 363, column: 74, scope: !11191, inlinedAt: !11196)
!11196 = distinct !DILocation(line: 1334, column: 15, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 1332, column: 7)
!11198 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !11199)
!11199 = distinct !DILocation(line: 1331, column: 3, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 1331, column: 3)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 1331, column: 3)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 1331, column: 3)
!11203 = distinct !DILexicalBlock(scope: !11204, file: !3, line: 1331, column: 3)
!11204 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 1331, column: 3)
!11205 = !DILocalVariable(name: "host", arg: 1, scope: !11182, file: !3, line: 1280, type: !286)
!11206 = !DILocation(line: 1280, column: 51, scope: !11182)
!11207 = !DILocalVariable(name: "slot", arg: 2, scope: !11182, file: !3, line: 1281, type: !6210)
!11208 = !DILocation(line: 1281, column: 28, scope: !11182)
!11209 = !DILocalVariable(name: "cmd", arg: 3, scope: !11182, file: !3, line: 1282, type: !5352)
!11210 = !DILocation(line: 1282, column: 28, scope: !11182)
!11211 = !DILocalVariable(name: "mrq", scope: !11182, file: !3, line: 1284, type: !5347)
!11212 = !DILocation(line: 1284, column: 22, scope: !11182)
!11213 = !DILocalVariable(name: "data", scope: !11182, file: !3, line: 1285, type: !5364)
!11214 = !DILocation(line: 1285, column: 19, scope: !11182)
!11215 = !DILocalVariable(name: "cmdflags", scope: !11182, file: !3, line: 1286, type: !309)
!11216 = !DILocation(line: 1286, column: 6, scope: !11182)
!11217 = !DILocation(line: 1288, column: 8, scope: !11182)
!11218 = !DILocation(line: 1288, column: 14, scope: !11182)
!11219 = !DILocation(line: 1288, column: 6, scope: !11182)
!11220 = !DILocation(line: 1290, column: 14, scope: !11182)
!11221 = !DILocation(line: 1290, column: 2, scope: !11182)
!11222 = !DILocation(line: 1290, column: 8, scope: !11182)
!11223 = !DILocation(line: 1290, column: 12, scope: !11182)
!11224 = !DILocation(line: 1292, column: 2, scope: !11182)
!11225 = !DILocation(line: 1292, column: 8, scope: !11182)
!11226 = !DILocation(line: 1292, column: 23, scope: !11182)
!11227 = !DILocation(line: 1293, column: 2, scope: !11182)
!11228 = !DILocation(line: 1293, column: 8, scope: !11182)
!11229 = !DILocation(line: 1293, column: 25, scope: !11182)
!11230 = !DILocation(line: 1294, column: 2, scope: !11182)
!11231 = !DILocation(line: 1294, column: 8, scope: !11182)
!11232 = !DILocation(line: 1294, column: 19, scope: !11182)
!11233 = !DILocation(line: 1295, column: 2, scope: !11182)
!11234 = !DILocation(line: 1295, column: 8, scope: !11182)
!11235 = !DILocation(line: 1295, column: 20, scope: !11182)
!11236 = !DILocation(line: 1296, column: 2, scope: !11182)
!11237 = !DILocation(line: 1296, column: 8, scope: !11182)
!11238 = !DILocation(line: 1296, column: 19, scope: !11182)
!11239 = !DILocation(line: 1298, column: 9, scope: !11182)
!11240 = !DILocation(line: 1298, column: 14, scope: !11182)
!11241 = !DILocation(line: 1298, column: 7, scope: !11182)
!11242 = !DILocation(line: 1299, column: 6, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 1299, column: 6)
!11244 = !DILocation(line: 1299, column: 6, scope: !11182)
!11245 = !DILocation(line: 1300, column: 3, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 1299, column: 12)
!11247 = !DILocation(line: 1301, column: 3, scope: !11246)
!11248 = !DILocation(line: 1302, column: 3, scope: !11246)
!11249 = !DILocation(line: 1303, column: 2, scope: !11246)
!11250 = !DILocation(line: 1305, column: 36, scope: !11182)
!11251 = !DILocation(line: 1305, column: 42, scope: !11182)
!11252 = !DILocation(line: 1305, column: 47, scope: !11182)
!11253 = !DILocation(line: 1305, column: 13, scope: !11182)
!11254 = !DILocation(line: 1305, column: 11, scope: !11182)
!11255 = !DILocation(line: 1308, column: 49, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 1308, column: 6)
!11257 = !DILocation(line: 1308, column: 55, scope: !11256)
!11258 = !DILocation(line: 1308, column: 6, scope: !11256)
!11259 = !DILocation(line: 1308, column: 6, scope: !11182)
!11260 = !DILocation(line: 1309, column: 12, scope: !11256)
!11261 = !DILocation(line: 1309, column: 3, scope: !11256)
!11262 = !DILocation(line: 1311, column: 6, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 1311, column: 6)
!11264 = !DILocation(line: 1311, column: 6, scope: !11182)
!11265 = !DILocation(line: 1312, column: 22, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1311, column: 12)
!11267 = !DILocation(line: 1312, column: 28, scope: !11266)
!11268 = !DILocation(line: 1312, column: 3, scope: !11266)
!11269 = !DILocation(line: 1313, column: 3, scope: !11266)
!11270 = !{i32 -2140188438}
!11271 = !DILocation(line: 1314, column: 2, scope: !11266)
!11272 = !DILocation(line: 1316, column: 23, scope: !11182)
!11273 = !DILocation(line: 1316, column: 29, scope: !11182)
!11274 = !DILocation(line: 1316, column: 34, scope: !11182)
!11275 = !DILocation(line: 1316, column: 2, scope: !11182)
!11276 = !DILocation(line: 1318, column: 6, scope: !11188)
!11277 = !DILocation(line: 1318, column: 11, scope: !11188)
!11278 = !DILocation(line: 1318, column: 18, scope: !11188)
!11279 = !DILocation(line: 1318, column: 6, scope: !11182)
!11280 = !DILocalVariable(name: "irqflags", scope: !11187, file: !3, line: 1319, type: !281)
!11281 = !DILocation(line: 1319, column: 17, scope: !11187)
!11282 = !DILocation(line: 1331, column: 3, scope: !11187)
!11283 = !DILocation(line: 1331, column: 3, scope: !11204)
!11284 = !DILocalVariable(name: "__dummy", scope: !11285, file: !3, line: 1331, type: !281)
!11285 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 1331, column: 3)
!11286 = !DILocation(line: 1331, column: 3, scope: !11285)
!11287 = !DILocalVariable(name: "__dummy2", scope: !11285, file: !3, line: 1331, type: !281)
!11288 = !DILocation(line: 1331, column: 3, scope: !11203)
!11289 = !DILocation(line: 1331, column: 3, scope: !11202)
!11290 = !DILocation(line: 1331, column: 3, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 1331, column: 3)
!11292 = !DILocalVariable(name: "__dummy", scope: !11293, file: !3, line: 1331, type: !281)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 1331, column: 3)
!11294 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 1331, column: 3)
!11295 = !DILocation(line: 1331, column: 3, scope: !11293)
!11296 = !DILocalVariable(name: "__dummy2", scope: !11293, file: !3, line: 1331, type: !281)
!11297 = !DILocation(line: 1331, column: 3, scope: !11294)
!11298 = !DILocation(line: 1331, column: 3, scope: !11201)
!11299 = !{i32 -2140187476}
!11300 = !DILocation(line: 1331, column: 3, scope: !11200)
!11301 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !11199)
!11302 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !11199)
!11303 = !DILocation(line: 1332, column: 38, scope: !11197)
!11304 = !DILocation(line: 1332, column: 44, scope: !11197)
!11305 = !DILocation(line: 1332, column: 8, scope: !11197)
!11306 = !DILocation(line: 1332, column: 7, scope: !11187)
!11307 = !DILocation(line: 1333, column: 15, scope: !11197)
!11308 = !DILocation(line: 1333, column: 21, scope: !11197)
!11309 = !DILocation(line: 1334, column: 5, scope: !11197)
!11310 = !DILocation(line: 365, column: 27, scope: !11311, inlinedAt: !11196)
!11311 = distinct !DILexicalBlock(scope: !11191, file: !11192, line: 365, column: 6)
!11312 = !DILocation(line: 365, column: 6, scope: !11311, inlinedAt: !11196)
!11313 = !DILocation(line: 365, column: 6, scope: !11191, inlinedAt: !11196)
!11314 = !DILocation(line: 366, column: 12, scope: !11315, inlinedAt: !11196)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !11192, line: 366, column: 7)
!11316 = distinct !DILexicalBlock(scope: !11311, file: !11192, line: 365, column: 31)
!11317 = !DILocation(line: 366, column: 14, scope: !11315, inlinedAt: !11196)
!11318 = !DILocation(line: 366, column: 7, scope: !11316, inlinedAt: !11196)
!11319 = !DILocation(line: 367, column: 4, scope: !11315, inlinedAt: !11196)
!11320 = !DILocation(line: 368, column: 28, scope: !11316, inlinedAt: !11196)
!11321 = !DILocation(line: 368, column: 10, scope: !11316, inlinedAt: !11196)
!11322 = !DILocation(line: 368, column: 3, scope: !11316, inlinedAt: !11196)
!11323 = !DILocation(line: 370, column: 29, scope: !11324, inlinedAt: !11196)
!11324 = distinct !DILexicalBlock(scope: !11311, file: !11192, line: 369, column: 9)
!11325 = !DILocation(line: 370, column: 10, scope: !11324, inlinedAt: !11196)
!11326 = !DILocation(line: 370, column: 3, scope: !11324, inlinedAt: !11196)
!11327 = !DILocation(line: 372, column: 1, scope: !11191, inlinedAt: !11196)
!11328 = !DILocation(line: 1334, column: 13, scope: !11197)
!11329 = !DILocation(line: 1334, column: 37, scope: !11197)
!11330 = !DILocation(line: 1333, column: 4, scope: !11197)
!11331 = !DILocation(line: 1335, column: 27, scope: !11187)
!11332 = !DILocation(line: 1335, column: 33, scope: !11187)
!11333 = !DILocation(line: 1335, column: 43, scope: !11187)
!11334 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !11186)
!11335 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !11186)
!11336 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !11186)
!11337 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !11186)
!11338 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !11186)
!11339 = !DILocation(line: 1336, column: 2, scope: !11187)
!11340 = !DILocation(line: 1338, column: 43, scope: !11182)
!11341 = !DILocation(line: 1338, column: 49, scope: !11182)
!11342 = !DILocation(line: 1338, column: 20, scope: !11182)
!11343 = !DILocation(line: 1338, column: 2, scope: !11182)
!11344 = !DILocation(line: 1338, column: 8, scope: !11182)
!11345 = !DILocation(line: 1338, column: 18, scope: !11182)
!11346 = !DILocation(line: 1339, column: 1, scope: !11182)
!11347 = distinct !DISubprogram(name: "dw_mci_stop_dma", scope: !3, file: !3, line: 420, type: !5845, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11348 = !DILocalVariable(name: "host", arg: 1, scope: !11347, file: !3, line: 420, type: !286)
!11349 = !DILocation(line: 420, column: 44, scope: !11347)
!11350 = !DILocation(line: 422, column: 6, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 422, column: 6)
!11352 = !DILocation(line: 422, column: 12, scope: !11351)
!11353 = !DILocation(line: 422, column: 6, scope: !11347)
!11354 = !DILocation(line: 423, column: 3, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 422, column: 23)
!11356 = !DILocation(line: 423, column: 9, scope: !11355)
!11357 = !DILocation(line: 423, column: 18, scope: !11355)
!11358 = !DILocation(line: 423, column: 23, scope: !11355)
!11359 = !DILocation(line: 424, column: 3, scope: !11355)
!11360 = !DILocation(line: 424, column: 9, scope: !11355)
!11361 = !DILocation(line: 424, column: 18, scope: !11355)
!11362 = !DILocation(line: 424, column: 26, scope: !11355)
!11363 = !DILocation(line: 425, column: 2, scope: !11355)
!11364 = !DILocation(line: 428, column: 32, scope: !11347)
!11365 = !DILocation(line: 428, column: 38, scope: !11347)
!11366 = !DILocation(line: 428, column: 2, scope: !11347)
!11367 = !DILocation(line: 429, column: 1, scope: !11347)
!11368 = distinct !DISubprogram(name: "send_stop_abort", scope: !3, file: !3, line: 412, type: !6354, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11369 = !DILocalVariable(name: "host", arg: 1, scope: !11368, file: !3, line: 412, type: !286)
!11370 = !DILocation(line: 412, column: 51, scope: !11368)
!11371 = !DILocalVariable(name: "data", arg: 2, scope: !11368, file: !3, line: 412, type: !5364)
!11372 = !DILocation(line: 412, column: 74, scope: !11368)
!11373 = !DILocalVariable(name: "stop", scope: !11368, file: !3, line: 414, type: !5352)
!11374 = !DILocation(line: 414, column: 22, scope: !11368)
!11375 = !DILocation(line: 414, column: 30, scope: !11368)
!11376 = !DILocation(line: 414, column: 36, scope: !11368)
!11377 = !DILocation(line: 416, column: 23, scope: !11368)
!11378 = !DILocation(line: 416, column: 29, scope: !11368)
!11379 = !DILocation(line: 416, column: 35, scope: !11368)
!11380 = !DILocation(line: 416, column: 41, scope: !11368)
!11381 = !DILocation(line: 416, column: 2, scope: !11368)
!11382 = !DILocation(line: 417, column: 1, scope: !11368)
!11383 = distinct !DISubprogram(name: "dw_mci_request_end", scope: !3, file: !3, line: 1791, type: !11384, scopeLine: 1794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11384 = !DISubroutineType(types: !11385)
!11385 = !{null, !286, !5347}
!11386 = !DILocation(line: 352, column: 51, scope: !7743, inlinedAt: !11387)
!11387 = distinct !DILocation(line: 1821, column: 2, scope: !11383)
!11388 = !DILocation(line: 392, column: 53, scope: !7737, inlinedAt: !11389)
!11389 = distinct !DILocation(line: 1819, column: 2, scope: !11383)
!11390 = !DILocalVariable(name: "host", arg: 1, scope: !11383, file: !3, line: 1791, type: !286)
!11391 = !DILocation(line: 1791, column: 47, scope: !11383)
!11392 = !DILocalVariable(name: "mrq", arg: 2, scope: !11383, file: !3, line: 1791, type: !5347)
!11393 = !DILocation(line: 1791, column: 73, scope: !11383)
!11394 = !DILocalVariable(name: "slot", scope: !11383, file: !3, line: 1795, type: !6210)
!11395 = !DILocation(line: 1795, column: 22, scope: !11383)
!11396 = !DILocalVariable(name: "prev_mmc", scope: !11383, file: !3, line: 1796, type: !5393)
!11397 = !DILocation(line: 1796, column: 19, scope: !11383)
!11398 = !DILocation(line: 1796, column: 30, scope: !11383)
!11399 = !DILocation(line: 1796, column: 36, scope: !11383)
!11400 = !DILocation(line: 1796, column: 42, scope: !11383)
!11401 = !DILocalVariable(name: "__ret_warn_on", scope: !11402, file: !3, line: 1798, type: !446)
!11402 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 1798, column: 2)
!11403 = !DILocation(line: 1798, column: 2, scope: !11402)
!11404 = !DILocation(line: 1798, column: 2, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 1798, column: 2)
!11406 = !DILocation(line: 1798, column: 2, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1798, column: 2)
!11408 = !DILocation(line: 1798, column: 2, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1798, column: 2)
!11410 = !DILocation(line: 1798, column: 2, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1798, column: 2)
!11412 = !{i32 -2140177049, i32 -2140177020, i32 -2140176974, i32 -2140176916, i32 -2140176862, i32 -2140176808, i32 -2140176753, i32 -2140176722}
!11413 = !DILocation(line: 1798, column: 2, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1798, column: 2)
!11415 = !{i32 -2140176314, i32 -2140176307, i32 -2140176255, i32 -2140176224, i32 -2140176194}
!11416 = !DILocation(line: 1798, column: 2, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 1798, column: 2)
!11418 = !DILocation(line: 1800, column: 2, scope: !11383)
!11419 = !DILocation(line: 1800, column: 8, scope: !11383)
!11420 = !DILocation(line: 1800, column: 14, scope: !11383)
!11421 = !DILocation(line: 1800, column: 18, scope: !11383)
!11422 = !DILocation(line: 1801, column: 2, scope: !11383)
!11423 = !DILocation(line: 1801, column: 8, scope: !11383)
!11424 = !DILocation(line: 1801, column: 12, scope: !11383)
!11425 = !DILocation(line: 1802, column: 19, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 1802, column: 6)
!11427 = !DILocation(line: 1802, column: 25, scope: !11426)
!11428 = !DILocation(line: 1802, column: 7, scope: !11426)
!11429 = !DILocation(line: 1802, column: 6, scope: !11383)
!11430 = !DILocalVariable(name: "__mptr", scope: !11431, file: !3, line: 1803, type: !284)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 1803, column: 10)
!11432 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 1802, column: 33)
!11433 = !DILocation(line: 1803, column: 10, scope: !11431)
!11434 = !DILocation(line: 1803, column: 10, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 1803, column: 10)
!11436 = !DILocation(line: 1803, column: 8, scope: !11432)
!11437 = !DILocation(line: 1805, column: 13, scope: !11432)
!11438 = !DILocation(line: 1805, column: 19, scope: !11432)
!11439 = !DILocation(line: 1805, column: 3, scope: !11432)
!11440 = !DILocation(line: 1808, column: 3, scope: !11432)
!11441 = !DILocation(line: 1808, column: 9, scope: !11432)
!11442 = !DILocation(line: 1808, column: 15, scope: !11432)
!11443 = !DILocation(line: 1809, column: 24, scope: !11432)
!11444 = !DILocation(line: 1809, column: 30, scope: !11432)
!11445 = !DILocation(line: 1809, column: 3, scope: !11432)
!11446 = !DILocation(line: 1810, column: 2, scope: !11432)
!11447 = !DILocation(line: 1813, column: 7, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 1813, column: 7)
!11449 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 1810, column: 9)
!11450 = !DILocation(line: 1813, column: 13, scope: !11448)
!11451 = !DILocation(line: 1813, column: 19, scope: !11448)
!11452 = !DILocation(line: 1813, column: 7, scope: !11449)
!11453 = !DILocation(line: 1814, column: 4, scope: !11448)
!11454 = !DILocation(line: 1814, column: 10, scope: !11448)
!11455 = !DILocation(line: 1814, column: 16, scope: !11448)
!11456 = !DILocation(line: 1816, column: 4, scope: !11448)
!11457 = !DILocation(line: 1816, column: 10, scope: !11448)
!11458 = !DILocation(line: 1816, column: 16, scope: !11448)
!11459 = !DILocation(line: 1819, column: 15, scope: !11383)
!11460 = !DILocation(line: 1819, column: 21, scope: !11383)
!11461 = !DILocation(line: 394, column: 2, scope: !8050, inlinedAt: !11389)
!11462 = !DILocation(line: 394, column: 2, scope: !8053, inlinedAt: !11389)
!11463 = !DILocation(line: 1820, column: 19, scope: !11383)
!11464 = !DILocation(line: 1820, column: 29, scope: !11383)
!11465 = !DILocation(line: 1820, column: 2, scope: !11383)
!11466 = !DILocation(line: 1821, column: 13, scope: !11383)
!11467 = !DILocation(line: 1821, column: 19, scope: !11383)
!11468 = !DILocation(line: 354, column: 2, scope: !7767, inlinedAt: !11387)
!11469 = !DILocation(line: 354, column: 2, scope: !7770, inlinedAt: !11387)
!11470 = !DILocation(line: 1822, column: 1, scope: !11383)
!11471 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !9476, file: !9476, line: 81, type: !9558, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11472 = !DILocalVariable(name: "nr", arg: 1, scope: !11473, file: !9483, line: 160, type: !285)
!11473 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !9483, file: !9483, line: 160, type: !9558, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11474 = !DILocation(line: 160, column: 30, scope: !11473, inlinedAt: !11475)
!11475 = distinct !DILocation(line: 84, column: 9, scope: !11471)
!11476 = !DILocalVariable(name: "addr", arg: 2, scope: !11473, file: !9483, line: 160, type: !9479)
!11477 = !DILocation(line: 160, column: 58, scope: !11473, inlinedAt: !11475)
!11478 = !DILocalVariable(name: "c", scope: !11479, file: !9483, line: 162, type: !314)
!11479 = distinct !DILexicalBlock(scope: !11473, file: !9483, line: 162, column: 9)
!11480 = !DILocation(line: 162, column: 9, scope: !11479, inlinedAt: !11475)
!11481 = !DILocation(line: 99, column: 79, scope: !9570, inlinedAt: !11482)
!11482 = distinct !DILocation(line: 83, column: 2, scope: !11471)
!11483 = !DILocation(line: 99, column: 89, scope: !9570, inlinedAt: !11482)
!11484 = !DILocalVariable(name: "nr", arg: 1, scope: !11471, file: !9476, line: 81, type: !285)
!11485 = !DILocation(line: 81, column: 44, scope: !11471)
!11486 = !DILocalVariable(name: "addr", arg: 2, scope: !11471, file: !9476, line: 81, type: !9479)
!11487 = !DILocation(line: 81, column: 72, scope: !11471)
!11488 = !DILocation(line: 83, column: 31, scope: !11471)
!11489 = !DILocation(line: 83, column: 38, scope: !11471)
!11490 = !DILocation(line: 83, column: 36, scope: !11471)
!11491 = !DILocation(line: 101, column: 20, scope: !9570, inlinedAt: !11482)
!11492 = !DILocation(line: 101, column: 23, scope: !9570, inlinedAt: !11482)
!11493 = !DILocation(line: 101, column: 2, scope: !9570, inlinedAt: !11482)
!11494 = !DILocation(line: 102, column: 2, scope: !9570, inlinedAt: !11482)
!11495 = !DILocation(line: 84, column: 33, scope: !11471)
!11496 = !DILocation(line: 84, column: 37, scope: !11471)
!11497 = !{i32 -2146974014, i32 -2146973918}
!11498 = !DILocation(line: 84, column: 2, scope: !11471)
!11499 = distinct !DISubprogram(name: "dw_mci_set_drto", scope: !3, file: !3, line: 1900, type: !5845, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11500 = !DILocation(line: 363, column: 74, scope: !11191, inlinedAt: !11501)
!11501 = distinct !DILocation(line: 1921, column: 16, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 1919, column: 6)
!11503 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !11504)
!11504 = distinct !DILocation(line: 1922, column: 2, scope: !11499)
!11505 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !11504)
!11506 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !11507)
!11507 = distinct !DILocation(line: 1918, column: 2, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 1918, column: 2)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 1918, column: 2)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1918, column: 2)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 1918, column: 2)
!11512 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 1918, column: 2)
!11513 = !DILocalVariable(name: "host", arg: 1, scope: !11499, file: !3, line: 1900, type: !286)
!11514 = !DILocation(line: 1900, column: 44, scope: !11499)
!11515 = !DILocalVariable(name: "drto_clks", scope: !11499, file: !3, line: 1902, type: !7)
!11516 = !DILocation(line: 1902, column: 15, scope: !11499)
!11517 = !DILocalVariable(name: "drto_div", scope: !11499, file: !3, line: 1903, type: !7)
!11518 = !DILocation(line: 1903, column: 15, scope: !11499)
!11519 = !DILocalVariable(name: "drto_ms", scope: !11499, file: !3, line: 1904, type: !7)
!11520 = !DILocation(line: 1904, column: 15, scope: !11499)
!11521 = !DILocalVariable(name: "irqflags", scope: !11499, file: !3, line: 1905, type: !281)
!11522 = !DILocation(line: 1905, column: 16, scope: !11499)
!11523 = !DILocation(line: 1907, column: 14, scope: !11499)
!11524 = !DILocation(line: 1907, column: 37, scope: !11499)
!11525 = !DILocation(line: 1907, column: 12, scope: !11499)
!11526 = !DILocation(line: 1908, column: 14, scope: !11499)
!11527 = !DILocation(line: 1908, column: 38, scope: !11499)
!11528 = !DILocation(line: 1908, column: 46, scope: !11499)
!11529 = !DILocation(line: 1908, column: 11, scope: !11499)
!11530 = !DILocation(line: 1909, column: 6, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 1909, column: 6)
!11532 = !DILocation(line: 1909, column: 15, scope: !11531)
!11533 = !DILocation(line: 1909, column: 6, scope: !11499)
!11534 = !DILocation(line: 1910, column: 12, scope: !11531)
!11535 = !DILocation(line: 1910, column: 3, scope: !11531)
!11536 = !DILocalVariable(name: "_tmp", scope: !11537, file: !3, line: 1912, type: !328)
!11537 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 1912, column: 12)
!11538 = !DILocation(line: 1912, column: 12, scope: !11537)
!11539 = !DILocalVariable(name: "__base", scope: !11540, file: !3, line: 1912, type: !1427)
!11540 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 1912, column: 12)
!11541 = !DILocation(line: 1912, column: 12, scope: !11540)
!11542 = !DILocalVariable(name: "__rem", scope: !11540, file: !3, line: 1912, type: !1427)
!11543 = !DILocation(line: 1912, column: 12, scope: !11499)
!11544 = !DILocation(line: 1912, column: 10, scope: !11499)
!11545 = !DILocation(line: 1916, column: 10, scope: !11499)
!11546 = !DILocation(line: 1918, column: 2, scope: !11499)
!11547 = !DILocation(line: 1918, column: 2, scope: !11512)
!11548 = !DILocalVariable(name: "__dummy", scope: !11549, file: !3, line: 1918, type: !281)
!11549 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1918, column: 2)
!11550 = !DILocation(line: 1918, column: 2, scope: !11549)
!11551 = !DILocalVariable(name: "__dummy2", scope: !11549, file: !3, line: 1918, type: !281)
!11552 = !DILocation(line: 1918, column: 2, scope: !11511)
!11553 = !DILocation(line: 1918, column: 2, scope: !11510)
!11554 = !DILocation(line: 1918, column: 2, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 1918, column: 2)
!11556 = !DILocalVariable(name: "__dummy", scope: !11557, file: !3, line: 1918, type: !281)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 1918, column: 2)
!11558 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 1918, column: 2)
!11559 = !DILocation(line: 1918, column: 2, scope: !11557)
!11560 = !DILocalVariable(name: "__dummy2", scope: !11557, file: !3, line: 1918, type: !281)
!11561 = !DILocation(line: 1918, column: 2, scope: !11558)
!11562 = !DILocation(line: 1918, column: 2, scope: !11509)
!11563 = !{i32 -2140170433}
!11564 = !DILocation(line: 1918, column: 2, scope: !11508)
!11565 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !11507)
!11566 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !11507)
!11567 = !DILocation(line: 1919, column: 38, scope: !11502)
!11568 = !DILocation(line: 1919, column: 44, scope: !11502)
!11569 = !DILocation(line: 1919, column: 7, scope: !11502)
!11570 = !DILocation(line: 1919, column: 6, scope: !11499)
!11571 = !DILocation(line: 1920, column: 14, scope: !11502)
!11572 = !DILocation(line: 1920, column: 20, scope: !11502)
!11573 = !DILocation(line: 1921, column: 6, scope: !11502)
!11574 = !DILocation(line: 1921, column: 33, scope: !11502)
!11575 = !DILocation(line: 365, column: 27, scope: !11311, inlinedAt: !11501)
!11576 = !DILocation(line: 365, column: 6, scope: !11311, inlinedAt: !11501)
!11577 = !DILocation(line: 365, column: 6, scope: !11191, inlinedAt: !11501)
!11578 = !DILocation(line: 366, column: 12, scope: !11315, inlinedAt: !11501)
!11579 = !DILocation(line: 366, column: 14, scope: !11315, inlinedAt: !11501)
!11580 = !DILocation(line: 366, column: 7, scope: !11316, inlinedAt: !11501)
!11581 = !DILocation(line: 367, column: 4, scope: !11315, inlinedAt: !11501)
!11582 = !DILocation(line: 368, column: 28, scope: !11316, inlinedAt: !11501)
!11583 = !DILocation(line: 368, column: 10, scope: !11316, inlinedAt: !11501)
!11584 = !DILocation(line: 368, column: 3, scope: !11316, inlinedAt: !11501)
!11585 = !DILocation(line: 370, column: 29, scope: !11324, inlinedAt: !11501)
!11586 = !DILocation(line: 370, column: 10, scope: !11324, inlinedAt: !11501)
!11587 = !DILocation(line: 370, column: 3, scope: !11324, inlinedAt: !11501)
!11588 = !DILocation(line: 372, column: 1, scope: !11191, inlinedAt: !11501)
!11589 = !DILocation(line: 1921, column: 14, scope: !11502)
!11590 = !DILocation(line: 1920, column: 3, scope: !11502)
!11591 = !DILocation(line: 1922, column: 26, scope: !11499)
!11592 = !DILocation(line: 1922, column: 32, scope: !11499)
!11593 = !DILocation(line: 1922, column: 42, scope: !11499)
!11594 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !11504)
!11595 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !11504)
!11596 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !11504)
!11597 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !11504)
!11598 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !11504)
!11599 = !DILocation(line: 1923, column: 1, scope: !11499)
!11600 = distinct !DISubprogram(name: "dw_mci_clear_pending_data_complete", scope: !3, file: !3, line: 1943, type: !11061, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11601 = !DILocalVariable(name: "host", arg: 1, scope: !11600, file: !3, line: 1943, type: !286)
!11602 = !DILocation(line: 1943, column: 63, scope: !11600)
!11603 = !DILocation(line: 1945, column: 38, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 1945, column: 6)
!11605 = !DILocation(line: 1945, column: 44, scope: !11604)
!11606 = !DILocation(line: 1945, column: 7, scope: !11604)
!11607 = !DILocation(line: 1945, column: 6, scope: !11600)
!11608 = !DILocation(line: 1946, column: 3, scope: !11604)
!11609 = !DILocalVariable(name: "__ret_warn_on", scope: !11610, file: !3, line: 1949, type: !446)
!11610 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 1949, column: 2)
!11611 = !DILocation(line: 1949, column: 2, scope: !11610)
!11612 = !DILocation(line: 1949, column: 2, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 1949, column: 2)
!11614 = !DILocation(line: 1949, column: 2, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 1949, column: 2)
!11616 = !DILocation(line: 1949, column: 2, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1949, column: 2)
!11618 = !DILocation(line: 1949, column: 2, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1949, column: 2)
!11620 = !{i32 -2140168270, i32 -2140168241, i32 -2140168195, i32 -2140168137, i32 -2140168083, i32 -2140168029, i32 -2140167974, i32 -2140167943}
!11621 = !DILocation(line: 1949, column: 2, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1949, column: 2)
!11623 = !{i32 -2140167535, i32 -2140167528, i32 -2140167476, i32 -2140167445, i32 -2140167415}
!11624 = !DILocation(line: 1949, column: 2, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1949, column: 2)
!11626 = !DILocation(line: 1950, column: 34, scope: !11600)
!11627 = !DILocation(line: 1950, column: 40, scope: !11600)
!11628 = !DILocation(line: 1950, column: 2, scope: !11600)
!11629 = !DILocation(line: 1952, column: 2, scope: !11600)
!11630 = !DILocation(line: 1953, column: 1, scope: !11600)
!11631 = distinct !DISubprogram(name: "dw_mci_data_complete", scope: !3, file: !3, line: 1857, type: !11632, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{!446, !286, !5364}
!11634 = !DILocalVariable(name: "host", arg: 1, scope: !11631, file: !3, line: 1857, type: !286)
!11635 = !DILocation(line: 1857, column: 48, scope: !11631)
!11636 = !DILocalVariable(name: "data", arg: 2, scope: !11631, file: !3, line: 1857, type: !5364)
!11637 = !DILocation(line: 1857, column: 71, scope: !11631)
!11638 = !DILocalVariable(name: "status", scope: !11631, file: !3, line: 1859, type: !309)
!11639 = !DILocation(line: 1859, column: 6, scope: !11631)
!11640 = !DILocation(line: 1859, column: 15, scope: !11631)
!11641 = !DILocation(line: 1859, column: 21, scope: !11631)
!11642 = !DILocation(line: 1861, column: 6, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 1861, column: 6)
!11644 = !DILocation(line: 1861, column: 13, scope: !11643)
!11645 = !DILocation(line: 1861, column: 6, scope: !11631)
!11646 = !DILocation(line: 1862, column: 7, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 1862, column: 7)
!11648 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1861, column: 40)
!11649 = !DILocation(line: 1862, column: 14, scope: !11647)
!11650 = !DILocation(line: 1862, column: 7, scope: !11648)
!11651 = !DILocation(line: 1863, column: 4, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 1862, column: 32)
!11653 = !DILocation(line: 1863, column: 10, scope: !11652)
!11654 = !DILocation(line: 1863, column: 16, scope: !11652)
!11655 = !DILocation(line: 1864, column: 3, scope: !11652)
!11656 = !DILocation(line: 1864, column: 14, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 1864, column: 14)
!11658 = !DILocation(line: 1864, column: 21, scope: !11657)
!11659 = !DILocation(line: 1864, column: 14, scope: !11647)
!11660 = !DILocation(line: 1865, column: 4, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1864, column: 39)
!11662 = !DILocation(line: 1865, column: 10, scope: !11661)
!11663 = !DILocation(line: 1865, column: 16, scope: !11661)
!11664 = !DILocation(line: 1866, column: 3, scope: !11661)
!11665 = !DILocation(line: 1866, column: 14, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11657, file: !3, line: 1866, column: 14)
!11667 = !DILocation(line: 1866, column: 21, scope: !11666)
!11668 = !DILocation(line: 1866, column: 14, scope: !11657)
!11669 = !DILocation(line: 1867, column: 8, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 1867, column: 8)
!11671 = distinct !DILexicalBlock(scope: !11666, file: !3, line: 1866, column: 38)
!11672 = !DILocation(line: 1867, column: 14, scope: !11670)
!11673 = !DILocation(line: 1867, column: 25, scope: !11670)
!11674 = !DILocation(line: 1867, column: 8, scope: !11671)
!11675 = !DILocation(line: 1874, column: 5, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1868, column: 25)
!11677 = !DILocation(line: 1874, column: 11, scope: !11676)
!11678 = !DILocation(line: 1874, column: 24, scope: !11676)
!11679 = !DILocation(line: 1875, column: 5, scope: !11676)
!11680 = !DILocation(line: 1875, column: 11, scope: !11676)
!11681 = !DILocation(line: 1875, column: 17, scope: !11676)
!11682 = !DILocation(line: 1876, column: 4, scope: !11676)
!11683 = !DILocation(line: 1876, column: 15, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 1876, column: 15)
!11685 = !DILocation(line: 1876, column: 21, scope: !11684)
!11686 = !DILocation(line: 1876, column: 32, scope: !11684)
!11687 = !DILocation(line: 1876, column: 15, scope: !11670)
!11688 = !DILocation(line: 1878, column: 5, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11684, file: !3, line: 1877, column: 26)
!11690 = !DILocation(line: 1878, column: 11, scope: !11689)
!11691 = !DILocation(line: 1878, column: 17, scope: !11689)
!11692 = !DILocation(line: 1879, column: 4, scope: !11689)
!11693 = !DILocation(line: 1880, column: 3, scope: !11671)
!11694 = !DILocation(line: 1882, column: 4, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11666, file: !3, line: 1880, column: 10)
!11696 = !DILocation(line: 1882, column: 10, scope: !11695)
!11697 = !DILocation(line: 1882, column: 16, scope: !11695)
!11698 = !DILocation(line: 1891, column: 16, scope: !11648)
!11699 = !DILocation(line: 1891, column: 3, scope: !11648)
!11700 = !DILocation(line: 1892, column: 2, scope: !11648)
!11701 = !DILocation(line: 1893, column: 24, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1892, column: 9)
!11703 = !DILocation(line: 1893, column: 30, scope: !11702)
!11704 = !DILocation(line: 1893, column: 39, scope: !11702)
!11705 = !DILocation(line: 1893, column: 45, scope: !11702)
!11706 = !DILocation(line: 1893, column: 37, scope: !11702)
!11707 = !DILocation(line: 1893, column: 3, scope: !11702)
!11708 = !DILocation(line: 1893, column: 9, scope: !11702)
!11709 = !DILocation(line: 1893, column: 22, scope: !11702)
!11710 = !DILocation(line: 1894, column: 3, scope: !11702)
!11711 = !DILocation(line: 1894, column: 9, scope: !11702)
!11712 = !DILocation(line: 1894, column: 15, scope: !11702)
!11713 = !DILocation(line: 1897, column: 9, scope: !11631)
!11714 = !DILocation(line: 1897, column: 15, scope: !11631)
!11715 = !DILocation(line: 1897, column: 2, scope: !11631)
!11716 = distinct !DISubprogram(name: "dw_mci_reset", scope: !3, file: !3, line: 1707, type: !11061, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11717 = !DILocalVariable(name: "host", arg: 1, scope: !11716, file: !3, line: 1707, type: !286)
!11718 = !DILocation(line: 1707, column: 41, scope: !11716)
!11719 = !DILocalVariable(name: "flags", scope: !11716, file: !3, line: 1709, type: !309)
!11720 = !DILocation(line: 1709, column: 6, scope: !11716)
!11721 = !DILocalVariable(name: "ret", scope: !11716, file: !3, line: 1710, type: !314)
!11722 = !DILocation(line: 1710, column: 7, scope: !11716)
!11723 = !DILocalVariable(name: "status", scope: !11716, file: !3, line: 1711, type: !309)
!11724 = !DILocation(line: 1711, column: 6, scope: !11716)
!11725 = !DILocation(line: 1717, column: 6, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1717, column: 6)
!11727 = !DILocation(line: 1717, column: 12, scope: !11726)
!11728 = !DILocation(line: 1717, column: 6, scope: !11716)
!11729 = !DILocation(line: 1718, column: 18, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1717, column: 16)
!11731 = !DILocation(line: 1718, column: 24, scope: !11730)
!11732 = !DILocation(line: 1718, column: 3, scope: !11730)
!11733 = !DILocation(line: 1719, column: 3, scope: !11730)
!11734 = !DILocation(line: 1719, column: 9, scope: !11730)
!11735 = !DILocation(line: 1719, column: 12, scope: !11730)
!11736 = !DILocation(line: 1720, column: 2, scope: !11730)
!11737 = !DILocation(line: 1722, column: 6, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1722, column: 6)
!11739 = !DILocation(line: 1722, column: 12, scope: !11738)
!11740 = !DILocation(line: 1722, column: 6, scope: !11716)
!11741 = !DILocation(line: 1723, column: 9, scope: !11738)
!11742 = !DILocation(line: 1723, column: 3, scope: !11738)
!11743 = !DILocation(line: 1725, column: 24, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1725, column: 6)
!11745 = !DILocation(line: 1725, column: 30, scope: !11744)
!11746 = !DILocation(line: 1725, column: 6, scope: !11744)
!11747 = !DILocation(line: 1725, column: 6, scope: !11716)
!11748 = !DILocation(line: 1730, column: 3, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 1725, column: 38)
!11750 = !DILocation(line: 1732, column: 8, scope: !11751)
!11751 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 1732, column: 7)
!11752 = !DILocation(line: 1732, column: 14, scope: !11751)
!11753 = !DILocation(line: 1732, column: 7, scope: !11749)
!11754 = !DILocation(line: 1733, column: 8, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11751, file: !3, line: 1732, column: 23)
!11756 = !DILocation(line: 1734, column: 4, scope: !11755)
!11757 = !DILocalVariable(name: "__timeout_us", scope: !11758, file: !3, line: 1738, type: !326)
!11758 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 1738, column: 7)
!11759 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 1738, column: 7)
!11760 = !DILocation(line: 1738, column: 7, scope: !11758)
!11761 = !DILocalVariable(name: "__delay_us", scope: !11758, file: !3, line: 1738, type: !281)
!11762 = !DILocalVariable(name: "__timeout", scope: !11758, file: !3, line: 1738, type: !1117)
!11763 = !DILocation(line: 1738, column: 7, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !3, line: 1738, column: 7)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 1738, column: 7)
!11766 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 1738, column: 7)
!11767 = !DILocation(line: 1738, column: 7, scope: !11768)
!11768 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 1738, column: 7)
!11769 = !DILocation(line: 1738, column: 7, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 1738, column: 7)
!11771 = !DILocation(line: 1738, column: 7, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 1738, column: 7)
!11773 = !DILocation(line: 1738, column: 7, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11764, file: !3, line: 1738, column: 7)
!11775 = !DILocation(line: 1738, column: 7, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !3, line: 1738, column: 7)
!11777 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 1738, column: 7)
!11778 = !DILocation(line: 1738, column: 7, scope: !11777)
!11779 = !DILocation(line: 1738, column: 7, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 1738, column: 7)
!11781 = distinct !DILexicalBlock(scope: !11776, file: !3, line: 1738, column: 7)
!11782 = !DILocation(line: 1738, column: 7, scope: !11781)
!11783 = !DILocation(line: 1738, column: 7, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11776, file: !3, line: 1738, column: 7)
!11785 = !DILocation(line: 1738, column: 7, scope: !11765)
!11786 = distinct !{!11786, !11787, !11787}
!11787 = !DILocation(line: 1738, column: 7, scope: !11766)
!11788 = !DILocation(line: 1738, column: 7, scope: !11759)
!11789 = !DILocation(line: 1738, column: 7, scope: !11749)
!11790 = !DILocation(line: 1742, column: 4, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 1741, column: 37)
!11792 = !DILocation(line: 1745, column: 4, scope: !11791)
!11793 = !DILocation(line: 1749, column: 26, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 1749, column: 7)
!11795 = !DILocation(line: 1749, column: 8, scope: !11794)
!11796 = !DILocation(line: 1749, column: 7, scope: !11749)
!11797 = !DILocation(line: 1750, column: 4, scope: !11794)
!11798 = !DILocation(line: 1751, column: 2, scope: !11749)
!11799 = !DILocation(line: 1753, column: 9, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 1753, column: 7)
!11801 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 1751, column: 9)
!11802 = !DILocation(line: 1753, column: 31, scope: !11800)
!11803 = !DILocation(line: 1753, column: 7, scope: !11801)
!11804 = !DILocation(line: 1754, column: 4, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 1753, column: 52)
!11806 = !DILocation(line: 1757, column: 4, scope: !11805)
!11807 = !DILocation(line: 1761, column: 6, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 1761, column: 6)
!11809 = !DILocation(line: 1761, column: 12, scope: !11808)
!11810 = !DILocation(line: 1761, column: 20, scope: !11808)
!11811 = !DILocation(line: 1761, column: 6, scope: !11716)
!11812 = !DILocation(line: 1763, column: 21, scope: !11808)
!11813 = !DILocation(line: 1763, column: 3, scope: !11808)
!11814 = !DILocation(line: 1765, column: 6, scope: !11716)
!11815 = !DILocation(line: 1765, column: 2, scope: !11716)
!11816 = !DILabel(scope: !11716, name: "ciu_out", file: !3, line: 1767)
!11817 = !DILocation(line: 1767, column: 1, scope: !11716)
!11818 = !DILocation(line: 1769, column: 15, scope: !11716)
!11819 = !DILocation(line: 1769, column: 21, scope: !11716)
!11820 = !DILocation(line: 1769, column: 2, scope: !11716)
!11821 = !DILocation(line: 1771, column: 9, scope: !11716)
!11822 = !DILocation(line: 1771, column: 2, scope: !11716)
!11823 = distinct !DISubprogram(name: "clear_bit", scope: !9476, file: !9476, line: 39, type: !9477, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11824 = !DILocalVariable(name: "nr", arg: 1, scope: !11825, file: !9483, line: 72, type: !285)
!11825 = distinct !DISubprogram(name: "arch_clear_bit", scope: !9483, file: !9483, line: 72, type: !9477, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11826 = !DILocation(line: 72, column: 21, scope: !11825, inlinedAt: !11827)
!11827 = distinct !DILocation(line: 42, column: 2, scope: !11823)
!11828 = !DILocalVariable(name: "addr", arg: 2, scope: !11825, file: !9483, line: 72, type: !9479)
!11829 = !DILocation(line: 72, column: 49, scope: !11825, inlinedAt: !11827)
!11830 = !DILocation(line: 84, column: 74, scope: !9489, inlinedAt: !11831)
!11831 = distinct !DILocation(line: 41, column: 2, scope: !11823)
!11832 = !DILocation(line: 84, column: 84, scope: !9489, inlinedAt: !11831)
!11833 = !DILocalVariable(name: "nr", arg: 1, scope: !11823, file: !9476, line: 39, type: !285)
!11834 = !DILocation(line: 39, column: 35, scope: !11823)
!11835 = !DILocalVariable(name: "addr", arg: 2, scope: !11823, file: !9476, line: 39, type: !9479)
!11836 = !DILocation(line: 39, column: 63, scope: !11823)
!11837 = !DILocation(line: 41, column: 26, scope: !11823)
!11838 = !DILocation(line: 41, column: 33, scope: !11823)
!11839 = !DILocation(line: 41, column: 31, scope: !11823)
!11840 = !DILocation(line: 86, column: 20, scope: !9489, inlinedAt: !11831)
!11841 = !DILocation(line: 86, column: 23, scope: !9489, inlinedAt: !11831)
!11842 = !DILocation(line: 86, column: 2, scope: !9489, inlinedAt: !11831)
!11843 = !DILocation(line: 87, column: 2, scope: !9489, inlinedAt: !11831)
!11844 = !DILocation(line: 42, column: 17, scope: !11823)
!11845 = !DILocation(line: 42, column: 21, scope: !11823)
!11846 = !DILocation(line: 74, column: 27, scope: !11847, inlinedAt: !11827)
!11847 = distinct !DILexicalBlock(scope: !11825, file: !9483, line: 74, column: 6)
!11848 = !DILocation(line: 74, column: 6, scope: !11847, inlinedAt: !11827)
!11849 = !DILocation(line: 74, column: 6, scope: !11825, inlinedAt: !11827)
!11850 = !DILocation(line: 76, column: 6, scope: !11851, inlinedAt: !11827)
!11851 = distinct !DILexicalBlock(scope: !11847, file: !9483, line: 74, column: 32)
!11852 = !DILocation(line: 77, column: 13, scope: !11851, inlinedAt: !11827)
!11853 = !DILocation(line: 77, column: 12, scope: !11851, inlinedAt: !11827)
!11854 = !DILocation(line: 75, column: 3, scope: !11851, inlinedAt: !11827)
!11855 = !{i32 -2146979458}
!11856 = !DILocation(line: 78, column: 2, scope: !11851, inlinedAt: !11827)
!11857 = !DILocation(line: 80, column: 8, scope: !11858, inlinedAt: !11827)
!11858 = distinct !DILexicalBlock(scope: !11847, file: !9483, line: 78, column: 9)
!11859 = !DILocation(line: 80, column: 32, scope: !11858, inlinedAt: !11827)
!11860 = !DILocation(line: 79, column: 3, scope: !11858, inlinedAt: !11827)
!11861 = !{i32 -2146979326}
!11862 = !DILocation(line: 43, column: 1, scope: !11823)
!11863 = distinct !DISubprogram(name: "dw_mci_prepare_command", scope: !3, file: !3, line: 248, type: !11864, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!11864 = !DISubroutineType(types: !11865)
!11865 = !{!309, !5393, !5352}
!11866 = !DILocalVariable(name: "mmc", arg: 1, scope: !11863, file: !3, line: 248, type: !5393)
!11867 = !DILocation(line: 248, column: 52, scope: !11863)
!11868 = !DILocalVariable(name: "cmd", arg: 2, scope: !11863, file: !3, line: 248, type: !5352)
!11869 = !DILocation(line: 248, column: 77, scope: !11863)
!11870 = !DILocalVariable(name: "slot", scope: !11863, file: !3, line: 250, type: !6210)
!11871 = !DILocation(line: 250, column: 22, scope: !11863)
!11872 = !DILocation(line: 250, column: 38, scope: !11863)
!11873 = !DILocation(line: 250, column: 29, scope: !11863)
!11874 = !DILocalVariable(name: "host", scope: !11863, file: !3, line: 251, type: !286)
!11875 = !DILocation(line: 251, column: 17, scope: !11863)
!11876 = !DILocation(line: 251, column: 24, scope: !11863)
!11877 = !DILocation(line: 251, column: 30, scope: !11863)
!11878 = !DILocalVariable(name: "cmdr", scope: !11863, file: !3, line: 252, type: !309)
!11879 = !DILocation(line: 252, column: 6, scope: !11863)
!11880 = !DILocation(line: 254, column: 2, scope: !11863)
!11881 = !DILocation(line: 254, column: 7, scope: !11863)
!11882 = !DILocation(line: 254, column: 13, scope: !11863)
!11883 = !DILocation(line: 255, column: 9, scope: !11863)
!11884 = !DILocation(line: 255, column: 14, scope: !11863)
!11885 = !DILocation(line: 255, column: 7, scope: !11863)
!11886 = !DILocation(line: 257, column: 6, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 257, column: 6)
!11888 = !DILocation(line: 257, column: 11, scope: !11887)
!11889 = !DILocation(line: 257, column: 18, scope: !11887)
!11890 = !DILocation(line: 257, column: 43, scope: !11887)
!11891 = !DILocation(line: 258, column: 6, scope: !11887)
!11892 = !DILocation(line: 258, column: 11, scope: !11887)
!11893 = !DILocation(line: 258, column: 18, scope: !11887)
!11894 = !DILocation(line: 258, column: 39, scope: !11887)
!11895 = !DILocation(line: 259, column: 6, scope: !11887)
!11896 = !DILocation(line: 259, column: 11, scope: !11887)
!11897 = !DILocation(line: 259, column: 18, scope: !11887)
!11898 = !DILocation(line: 259, column: 43, scope: !11887)
!11899 = !DILocation(line: 260, column: 7, scope: !11887)
!11900 = !DILocation(line: 260, column: 12, scope: !11887)
!11901 = !DILocation(line: 260, column: 19, scope: !11887)
!11902 = !DILocation(line: 260, column: 38, scope: !11887)
!11903 = !DILocation(line: 261, column: 9, scope: !11887)
!11904 = !DILocation(line: 261, column: 14, scope: !11887)
!11905 = !DILocation(line: 261, column: 18, scope: !11887)
!11906 = !DILocation(line: 261, column: 24, scope: !11887)
!11907 = !DILocation(line: 261, column: 35, scope: !11887)
!11908 = !DILocation(line: 257, column: 6, scope: !11863)
!11909 = !DILocation(line: 262, column: 8, scope: !11887)
!11910 = !DILocation(line: 262, column: 3, scope: !11887)
!11911 = !DILocation(line: 263, column: 11, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 263, column: 11)
!11913 = !DILocation(line: 263, column: 16, scope: !11912)
!11914 = !DILocation(line: 263, column: 23, scope: !11912)
!11915 = !DILocation(line: 263, column: 42, scope: !11912)
!11916 = !DILocation(line: 263, column: 45, scope: !11912)
!11917 = !DILocation(line: 263, column: 50, scope: !11912)
!11918 = !DILocation(line: 263, column: 11, scope: !11887)
!11919 = !DILocation(line: 264, column: 8, scope: !11912)
!11920 = !DILocation(line: 264, column: 3, scope: !11912)
!11921 = !DILocation(line: 266, column: 6, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 266, column: 6)
!11923 = !DILocation(line: 266, column: 11, scope: !11922)
!11924 = !DILocation(line: 266, column: 18, scope: !11922)
!11925 = !DILocation(line: 266, column: 6, scope: !11863)
!11926 = !DILocalVariable(name: "clk_en_a", scope: !11927, file: !3, line: 267, type: !309)
!11927 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 266, column: 40)
!11928 = !DILocation(line: 267, column: 7, scope: !11927)
!11929 = !DILocation(line: 270, column: 8, scope: !11927)
!11930 = !DILocalVariable(name: "__ret_warn_on", scope: !11931, file: !3, line: 273, type: !446)
!11931 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 273, column: 3)
!11932 = !DILocation(line: 273, column: 3, scope: !11931)
!11933 = !DILocation(line: 273, column: 3, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 273, column: 3)
!11935 = !DILocation(line: 273, column: 3, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 273, column: 3)
!11937 = !DILocation(line: 273, column: 3, scope: !11938)
!11938 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 273, column: 3)
!11939 = !DILocation(line: 273, column: 3, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 273, column: 3)
!11941 = !{i32 -2140219528, i32 -2140219499, i32 -2140219453, i32 -2140219395, i32 -2140219341, i32 -2140219287, i32 -2140219232, i32 -2140219201}
!11942 = !DILocation(line: 273, column: 3, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 273, column: 3)
!11944 = !{i32 -2140218794, i32 -2140218787, i32 -2140218735, i32 -2140218704, i32 -2140218674}
!11945 = !DILocation(line: 273, column: 3, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11936, file: !3, line: 273, column: 3)
!11947 = !DILocation(line: 274, column: 3, scope: !11927)
!11948 = !DILocation(line: 274, column: 9, scope: !11927)
!11949 = !DILocation(line: 274, column: 15, scope: !11927)
!11950 = !DILocation(line: 274, column: 21, scope: !11927)
!11951 = !DILocation(line: 287, column: 14, scope: !11927)
!11952 = !DILocation(line: 287, column: 12, scope: !11927)
!11953 = !DILocation(line: 288, column: 40, scope: !11927)
!11954 = !DILocation(line: 288, column: 46, scope: !11927)
!11955 = !DILocation(line: 288, column: 37, scope: !11927)
!11956 = !DILocation(line: 288, column: 15, scope: !11927)
!11957 = !DILocation(line: 288, column: 12, scope: !11927)
!11958 = !DILocation(line: 289, column: 3, scope: !11927)
!11959 = !DILocation(line: 290, column: 16, scope: !11927)
!11960 = !DILocation(line: 290, column: 3, scope: !11927)
!11961 = !DILocation(line: 292, column: 2, scope: !11927)
!11962 = !DILocation(line: 294, column: 6, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 294, column: 6)
!11964 = !DILocation(line: 294, column: 11, scope: !11963)
!11965 = !DILocation(line: 294, column: 17, scope: !11963)
!11966 = !DILocation(line: 294, column: 6, scope: !11863)
!11967 = !DILocation(line: 296, column: 8, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 294, column: 36)
!11969 = !DILocation(line: 297, column: 7, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 297, column: 7)
!11971 = !DILocation(line: 297, column: 12, scope: !11970)
!11972 = !DILocation(line: 297, column: 18, scope: !11970)
!11973 = !DILocation(line: 297, column: 7, scope: !11968)
!11974 = !DILocation(line: 298, column: 9, scope: !11970)
!11975 = !DILocation(line: 298, column: 4, scope: !11970)
!11976 = !DILocation(line: 299, column: 2, scope: !11968)
!11977 = !DILocation(line: 301, column: 6, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 301, column: 6)
!11979 = !DILocation(line: 301, column: 11, scope: !11978)
!11980 = !DILocation(line: 301, column: 17, scope: !11978)
!11981 = !DILocation(line: 301, column: 6, scope: !11863)
!11982 = !DILocation(line: 302, column: 8, scope: !11978)
!11983 = !DILocation(line: 302, column: 3, scope: !11978)
!11984 = !DILocation(line: 304, column: 6, scope: !11985)
!11985 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 304, column: 6)
!11986 = !DILocation(line: 304, column: 11, scope: !11985)
!11987 = !DILocation(line: 304, column: 6, scope: !11863)
!11988 = !DILocation(line: 305, column: 8, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11985, file: !3, line: 304, column: 17)
!11990 = !DILocation(line: 306, column: 7, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 306, column: 7)
!11992 = !DILocation(line: 306, column: 12, scope: !11991)
!11993 = !DILocation(line: 306, column: 18, scope: !11991)
!11994 = !DILocation(line: 306, column: 24, scope: !11991)
!11995 = !DILocation(line: 306, column: 7, scope: !11989)
!11996 = !DILocation(line: 307, column: 9, scope: !11991)
!11997 = !DILocation(line: 307, column: 4, scope: !11991)
!11998 = !DILocation(line: 308, column: 2, scope: !11989)
!11999 = !DILocation(line: 310, column: 42, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11863, file: !3, line: 310, column: 6)
!12001 = !DILocation(line: 310, column: 48, scope: !12000)
!12002 = !DILocation(line: 310, column: 7, scope: !12000)
!12003 = !DILocation(line: 310, column: 6, scope: !11863)
!12004 = !DILocation(line: 311, column: 8, scope: !12000)
!12005 = !DILocation(line: 311, column: 3, scope: !12000)
!12006 = !DILocation(line: 313, column: 9, scope: !11863)
!12007 = !DILocation(line: 313, column: 2, scope: !11863)
!12008 = distinct !DISubprogram(name: "dw_mci_submit_data", scope: !3, file: !3, line: 1135, type: !6354, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12009 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !12010)
!12010 = distinct !DILocation(line: 1171, column: 3, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 1154, column: 42)
!12012 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1154, column: 6)
!12013 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !12010)
!12014 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !12015)
!12015 = distinct !DILocation(line: 1167, column: 3, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 1167, column: 3)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 1167, column: 3)
!12018 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 1167, column: 3)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 1167, column: 3)
!12020 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 1167, column: 3)
!12021 = !DILocalVariable(name: "host", arg: 1, scope: !12008, file: !3, line: 1135, type: !286)
!12022 = !DILocation(line: 1135, column: 47, scope: !12008)
!12023 = !DILocalVariable(name: "data", arg: 2, scope: !12008, file: !3, line: 1135, type: !5364)
!12024 = !DILocation(line: 1135, column: 70, scope: !12008)
!12025 = !DILocalVariable(name: "irqflags", scope: !12008, file: !3, line: 1137, type: !281)
!12026 = !DILocation(line: 1137, column: 16, scope: !12008)
!12027 = !DILocalVariable(name: "flags", scope: !12008, file: !3, line: 1138, type: !446)
!12028 = !DILocation(line: 1138, column: 6, scope: !12008)
!12029 = !DILocalVariable(name: "temp", scope: !12008, file: !3, line: 1139, type: !309)
!12030 = !DILocation(line: 1139, column: 6, scope: !12008)
!12031 = !DILocation(line: 1141, column: 2, scope: !12008)
!12032 = !DILocation(line: 1141, column: 8, scope: !12008)
!12033 = !DILocation(line: 1141, column: 14, scope: !12008)
!12034 = !DILocalVariable(name: "__ret_warn_on", scope: !12035, file: !3, line: 1143, type: !446)
!12035 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1143, column: 2)
!12036 = !DILocation(line: 1143, column: 2, scope: !12035)
!12037 = !DILocation(line: 1143, column: 2, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 1143, column: 2)
!12039 = !DILocation(line: 1143, column: 2, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 1143, column: 2)
!12041 = !DILocation(line: 1143, column: 2, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 1143, column: 2)
!12043 = !DILocation(line: 1143, column: 2, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 1143, column: 2)
!12045 = !{i32 -2140194138, i32 -2140194109, i32 -2140194063, i32 -2140194005, i32 -2140193951, i32 -2140193897, i32 -2140193842, i32 -2140193811}
!12046 = !DILocation(line: 1143, column: 2, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 1143, column: 2)
!12048 = !{i32 -2140193403, i32 -2140193396, i32 -2140193344, i32 -2140193313, i32 -2140193283}
!12049 = !DILocation(line: 1143, column: 2, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12040, file: !3, line: 1143, column: 2)
!12051 = !DILocation(line: 1144, column: 2, scope: !12008)
!12052 = !DILocation(line: 1144, column: 8, scope: !12008)
!12053 = !DILocation(line: 1144, column: 11, scope: !12008)
!12054 = !DILocation(line: 1145, column: 15, scope: !12008)
!12055 = !DILocation(line: 1145, column: 2, scope: !12008)
!12056 = !DILocation(line: 1145, column: 8, scope: !12008)
!12057 = !DILocation(line: 1145, column: 13, scope: !12008)
!12058 = !DILocation(line: 1147, column: 6, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 1147, column: 6)
!12060 = !DILocation(line: 1147, column: 12, scope: !12059)
!12061 = !DILocation(line: 1147, column: 18, scope: !12059)
!12062 = !DILocation(line: 1147, column: 6, scope: !12008)
!12063 = !DILocation(line: 1148, column: 3, scope: !12059)
!12064 = !DILocation(line: 1148, column: 9, scope: !12059)
!12065 = !DILocation(line: 1148, column: 20, scope: !12059)
!12066 = !DILocation(line: 1150, column: 3, scope: !12059)
!12067 = !DILocation(line: 1150, column: 9, scope: !12059)
!12068 = !DILocation(line: 1150, column: 20, scope: !12059)
!12069 = !DILocation(line: 1152, column: 19, scope: !12008)
!12070 = !DILocation(line: 1152, column: 25, scope: !12008)
!12071 = !DILocation(line: 1152, column: 2, scope: !12008)
!12072 = !DILocation(line: 1154, column: 29, scope: !12012)
!12073 = !DILocation(line: 1154, column: 35, scope: !12012)
!12074 = !DILocation(line: 1154, column: 6, scope: !12012)
!12075 = !DILocation(line: 1154, column: 6, scope: !12008)
!12076 = !DILocation(line: 1155, column: 7, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 1155, column: 7)
!12078 = !DILocation(line: 1155, column: 13, scope: !12077)
!12079 = !DILocation(line: 1155, column: 19, scope: !12077)
!12080 = !DILocation(line: 1155, column: 25, scope: !12077)
!12081 = !DILocation(line: 1155, column: 7, scope: !12011)
!12082 = !DILocation(line: 1156, column: 10, scope: !12077)
!12083 = !DILocation(line: 1156, column: 4, scope: !12077)
!12084 = !DILocation(line: 1158, column: 10, scope: !12077)
!12085 = !DILocation(line: 1160, column: 19, scope: !12011)
!12086 = !DILocation(line: 1160, column: 25, scope: !12011)
!12087 = !DILocation(line: 1160, column: 35, scope: !12011)
!12088 = !DILocation(line: 1160, column: 41, scope: !12011)
!12089 = !DILocation(line: 1160, column: 45, scope: !12011)
!12090 = !DILocation(line: 1160, column: 51, scope: !12011)
!12091 = !DILocation(line: 1160, column: 59, scope: !12011)
!12092 = !DILocation(line: 1160, column: 3, scope: !12011)
!12093 = !DILocation(line: 1161, column: 14, scope: !12011)
!12094 = !DILocation(line: 1161, column: 20, scope: !12011)
!12095 = !DILocation(line: 1161, column: 3, scope: !12011)
!12096 = !DILocation(line: 1161, column: 9, scope: !12011)
!12097 = !DILocation(line: 1161, column: 12, scope: !12011)
!12098 = !DILocation(line: 1162, column: 3, scope: !12011)
!12099 = !DILocation(line: 1162, column: 9, scope: !12011)
!12100 = !DILocation(line: 1162, column: 24, scope: !12011)
!12101 = !DILocation(line: 1163, column: 3, scope: !12011)
!12102 = !DILocation(line: 1163, column: 9, scope: !12011)
!12103 = !DILocation(line: 1163, column: 24, scope: !12011)
!12104 = !DILocation(line: 1165, column: 3, scope: !12011)
!12105 = !DILocation(line: 1167, column: 3, scope: !12011)
!12106 = !DILocation(line: 1167, column: 3, scope: !12020)
!12107 = !DILocalVariable(name: "__dummy", scope: !12108, file: !3, line: 1167, type: !281)
!12108 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 1167, column: 3)
!12109 = !DILocation(line: 1167, column: 3, scope: !12108)
!12110 = !DILocalVariable(name: "__dummy2", scope: !12108, file: !3, line: 1167, type: !281)
!12111 = !DILocation(line: 1167, column: 3, scope: !12019)
!12112 = !DILocation(line: 1167, column: 3, scope: !12018)
!12113 = !DILocation(line: 1167, column: 3, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 1167, column: 3)
!12115 = !DILocalVariable(name: "__dummy", scope: !12116, file: !3, line: 1167, type: !281)
!12116 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 1167, column: 3)
!12117 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 1167, column: 3)
!12118 = !DILocation(line: 1167, column: 3, scope: !12116)
!12119 = !DILocalVariable(name: "__dummy2", scope: !12116, file: !3, line: 1167, type: !281)
!12120 = !DILocation(line: 1167, column: 3, scope: !12117)
!12121 = !DILocation(line: 1167, column: 3, scope: !12017)
!12122 = !{i32 -2140191648}
!12123 = !DILocation(line: 1167, column: 3, scope: !12016)
!12124 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !12015)
!12125 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !12015)
!12126 = !DILocation(line: 1168, column: 10, scope: !12011)
!12127 = !DILocation(line: 1168, column: 8, scope: !12011)
!12128 = !DILocation(line: 1169, column: 8, scope: !12011)
!12129 = !DILocation(line: 1170, column: 3, scope: !12011)
!12130 = !DILocation(line: 1171, column: 27, scope: !12011)
!12131 = !DILocation(line: 1171, column: 33, scope: !12011)
!12132 = !DILocation(line: 1171, column: 43, scope: !12011)
!12133 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !12010)
!12134 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !12010)
!12135 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !12010)
!12136 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !12010)
!12137 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !12010)
!12138 = !DILocation(line: 1173, column: 10, scope: !12011)
!12139 = !DILocation(line: 1173, column: 8, scope: !12011)
!12140 = !DILocation(line: 1174, column: 8, scope: !12011)
!12141 = !DILocation(line: 1175, column: 3, scope: !12011)
!12142 = !DILocation(line: 1183, column: 7, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 1183, column: 7)
!12144 = !DILocation(line: 1183, column: 13, scope: !12143)
!12145 = !DILocation(line: 1183, column: 7, scope: !12011)
!12146 = !DILocation(line: 1184, column: 25, scope: !12143)
!12147 = !DILocation(line: 1184, column: 31, scope: !12143)
!12148 = !DILocation(line: 1184, column: 4, scope: !12143)
!12149 = !DILocation(line: 1186, column: 4, scope: !12143)
!12150 = !DILocation(line: 1187, column: 3, scope: !12011)
!12151 = !DILocation(line: 1187, column: 9, scope: !12011)
!12152 = !DILocation(line: 1187, column: 20, scope: !12011)
!12153 = !DILocation(line: 1188, column: 2, scope: !12011)
!12154 = !DILocation(line: 1194, column: 22, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 1188, column: 9)
!12156 = !DILocation(line: 1194, column: 28, scope: !12155)
!12157 = !DILocation(line: 1194, column: 3, scope: !12155)
!12158 = !DILocation(line: 1194, column: 9, scope: !12155)
!12159 = !DILocation(line: 1194, column: 20, scope: !12155)
!12160 = !DILocation(line: 1196, column: 1, scope: !12008)
!12161 = distinct !DISubprogram(name: "dw_mci_start_command", scope: !3, file: !3, line: 393, type: !12162, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12162 = !DISubroutineType(types: !12163)
!12163 = !{null, !286, !5352, !309}
!12164 = !DILocalVariable(name: "host", arg: 1, scope: !12161, file: !3, line: 393, type: !286)
!12165 = !DILocation(line: 393, column: 49, scope: !12161)
!12166 = !DILocalVariable(name: "cmd", arg: 2, scope: !12161, file: !3, line: 394, type: !5352)
!12167 = !DILocation(line: 394, column: 26, scope: !12161)
!12168 = !DILocalVariable(name: "cmd_flags", arg: 3, scope: !12161, file: !3, line: 394, type: !309)
!12169 = !DILocation(line: 394, column: 35, scope: !12161)
!12170 = !DILocation(line: 396, column: 14, scope: !12161)
!12171 = !DILocation(line: 396, column: 2, scope: !12161)
!12172 = !DILocation(line: 396, column: 8, scope: !12161)
!12173 = !DILocation(line: 396, column: 12, scope: !12161)
!12174 = !DILocation(line: 401, column: 2, scope: !12161)
!12175 = !DILocation(line: 402, column: 2, scope: !12161)
!12176 = !{i32 -2140214551}
!12177 = !DILocation(line: 403, column: 25, scope: !12161)
!12178 = !DILocation(line: 403, column: 31, scope: !12161)
!12179 = !DILocation(line: 403, column: 2, scope: !12161)
!12180 = !DILocation(line: 405, column: 2, scope: !12161)
!12181 = !DILocation(line: 408, column: 6, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 408, column: 6)
!12183 = !DILocation(line: 408, column: 16, scope: !12182)
!12184 = !DILocation(line: 408, column: 6, scope: !12161)
!12185 = !DILocation(line: 409, column: 18, scope: !12182)
!12186 = !DILocation(line: 409, column: 3, scope: !12182)
!12187 = !DILocation(line: 410, column: 1, scope: !12161)
!12188 = distinct !DISubprogram(name: "dw_mci_prep_stop_abort", scope: !3, file: !3, line: 316, type: !12189, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12189 = !DISubroutineType(types: !12190)
!12190 = !{!309, !286, !5352}
!12191 = !DILocalVariable(name: "host", arg: 1, scope: !12188, file: !3, line: 316, type: !286)
!12192 = !DILocation(line: 316, column: 50, scope: !12188)
!12193 = !DILocalVariable(name: "cmd", arg: 2, scope: !12188, file: !3, line: 316, type: !5352)
!12194 = !DILocation(line: 316, column: 76, scope: !12188)
!12195 = !DILocalVariable(name: "stop", scope: !12188, file: !3, line: 318, type: !5352)
!12196 = !DILocation(line: 318, column: 22, scope: !12188)
!12197 = !DILocalVariable(name: "cmdr", scope: !12188, file: !3, line: 319, type: !309)
!12198 = !DILocation(line: 319, column: 6, scope: !12188)
!12199 = !DILocation(line: 321, column: 7, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 321, column: 6)
!12201 = !DILocation(line: 321, column: 12, scope: !12200)
!12202 = !DILocation(line: 321, column: 6, scope: !12188)
!12203 = !DILocation(line: 322, column: 3, scope: !12200)
!12204 = !DILocation(line: 324, column: 10, scope: !12188)
!12205 = !DILocation(line: 324, column: 16, scope: !12188)
!12206 = !DILocation(line: 324, column: 7, scope: !12188)
!12207 = !DILocation(line: 325, column: 9, scope: !12188)
!12208 = !DILocation(line: 325, column: 14, scope: !12188)
!12209 = !DILocation(line: 325, column: 7, scope: !12188)
!12210 = !DILocation(line: 326, column: 9, scope: !12188)
!12211 = !DILocation(line: 326, column: 2, scope: !12188)
!12212 = !DILocation(line: 328, column: 6, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 328, column: 6)
!12214 = !DILocation(line: 328, column: 11, scope: !12213)
!12215 = !DILocation(line: 328, column: 36, scope: !12213)
!12216 = !DILocation(line: 329, column: 6, scope: !12213)
!12217 = !DILocation(line: 329, column: 11, scope: !12213)
!12218 = !DILocation(line: 329, column: 38, scope: !12213)
!12219 = !DILocation(line: 330, column: 6, scope: !12213)
!12220 = !DILocation(line: 330, column: 11, scope: !12213)
!12221 = !DILocation(line: 330, column: 30, scope: !12213)
!12222 = !DILocation(line: 331, column: 6, scope: !12213)
!12223 = !DILocation(line: 331, column: 11, scope: !12213)
!12224 = !DILocation(line: 331, column: 39, scope: !12213)
!12225 = !DILocation(line: 332, column: 6, scope: !12213)
!12226 = !DILocation(line: 332, column: 11, scope: !12213)
!12227 = !DILocation(line: 332, column: 36, scope: !12213)
!12228 = !DILocation(line: 333, column: 6, scope: !12213)
!12229 = !DILocation(line: 333, column: 11, scope: !12213)
!12230 = !DILocation(line: 328, column: 6, scope: !12188)
!12231 = !DILocation(line: 334, column: 3, scope: !12232)
!12232 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 333, column: 43)
!12233 = !DILocation(line: 334, column: 9, scope: !12232)
!12234 = !DILocation(line: 334, column: 16, scope: !12232)
!12235 = !DILocation(line: 335, column: 3, scope: !12232)
!12236 = !DILocation(line: 335, column: 9, scope: !12232)
!12237 = !DILocation(line: 335, column: 13, scope: !12232)
!12238 = !DILocation(line: 336, column: 3, scope: !12232)
!12239 = !DILocation(line: 336, column: 9, scope: !12232)
!12240 = !DILocation(line: 336, column: 15, scope: !12232)
!12241 = !DILocation(line: 337, column: 2, scope: !12232)
!12242 = !DILocation(line: 337, column: 13, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 337, column: 13)
!12244 = !DILocation(line: 337, column: 18, scope: !12243)
!12245 = !DILocation(line: 337, column: 13, scope: !12213)
!12246 = !DILocation(line: 338, column: 3, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 337, column: 40)
!12248 = !DILocation(line: 338, column: 9, scope: !12247)
!12249 = !DILocation(line: 338, column: 16, scope: !12247)
!12250 = !DILocation(line: 340, column: 11, scope: !12247)
!12251 = !DILocation(line: 340, column: 16, scope: !12247)
!12252 = !DILocation(line: 340, column: 20, scope: !12247)
!12253 = !DILocation(line: 340, column: 27, scope: !12247)
!12254 = !DILocation(line: 339, column: 63, scope: !12247)
!12255 = !DILocation(line: 339, column: 3, scope: !12247)
!12256 = !DILocation(line: 339, column: 9, scope: !12247)
!12257 = !DILocation(line: 339, column: 13, scope: !12247)
!12258 = !DILocation(line: 341, column: 3, scope: !12247)
!12259 = !DILocation(line: 341, column: 9, scope: !12247)
!12260 = !DILocation(line: 341, column: 15, scope: !12247)
!12261 = !DILocation(line: 342, column: 2, scope: !12247)
!12262 = !DILocation(line: 343, column: 3, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 342, column: 9)
!12264 = !DILocation(line: 346, column: 9, scope: !12188)
!12265 = !DILocation(line: 346, column: 15, scope: !12188)
!12266 = !DILocation(line: 346, column: 22, scope: !12188)
!12267 = !DILocation(line: 346, column: 39, scope: !12188)
!12268 = !DILocation(line: 347, column: 22, scope: !12188)
!12269 = !DILocation(line: 346, column: 7, scope: !12188)
!12270 = !DILocation(line: 349, column: 42, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 349, column: 6)
!12272 = !DILocation(line: 349, column: 48, scope: !12271)
!12273 = !DILocation(line: 349, column: 54, scope: !12271)
!12274 = !DILocation(line: 349, column: 7, scope: !12271)
!12275 = !DILocation(line: 349, column: 6, scope: !12188)
!12276 = !DILocation(line: 350, column: 8, scope: !12271)
!12277 = !DILocation(line: 350, column: 3, scope: !12271)
!12278 = !DILocation(line: 352, column: 9, scope: !12188)
!12279 = !DILocation(line: 352, column: 2, scope: !12188)
!12280 = !DILocation(line: 353, column: 1, scope: !12188)
!12281 = distinct !DISubprogram(name: "mmc_priv", scope: !5395, file: !5395, line: 489, type: !12282, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12282 = !DISubroutineType(types: !12283)
!12283 = !{!284, !5393}
!12284 = !DILocalVariable(name: "host", arg: 1, scope: !12281, file: !5395, line: 489, type: !5393)
!12285 = !DILocation(line: 489, column: 47, scope: !12281)
!12286 = !DILocation(line: 491, column: 17, scope: !12281)
!12287 = !DILocation(line: 491, column: 23, scope: !12281)
!12288 = !DILocation(line: 491, column: 9, scope: !12281)
!12289 = !DILocation(line: 491, column: 2, scope: !12281)
!12290 = distinct !DISubprogram(name: "mci_send_cmd", scope: !3, file: !3, line: 230, type: !12291, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12291 = !DISubroutineType(types: !12292)
!12292 = !{null, !6210, !309, !309}
!12293 = !DILocalVariable(name: "slot", arg: 1, scope: !12290, file: !3, line: 230, type: !6210)
!12294 = !DILocation(line: 230, column: 46, scope: !12290)
!12295 = !DILocalVariable(name: "cmd", arg: 2, scope: !12290, file: !3, line: 230, type: !309)
!12296 = !DILocation(line: 230, column: 56, scope: !12290)
!12297 = !DILocalVariable(name: "arg", arg: 3, scope: !12290, file: !3, line: 230, type: !309)
!12298 = !DILocation(line: 230, column: 65, scope: !12290)
!12299 = !DILocalVariable(name: "host", scope: !12290, file: !3, line: 232, type: !286)
!12300 = !DILocation(line: 232, column: 17, scope: !12290)
!12301 = !DILocation(line: 232, column: 24, scope: !12290)
!12302 = !DILocation(line: 232, column: 30, scope: !12290)
!12303 = !DILocalVariable(name: "cmd_status", scope: !12290, file: !3, line: 233, type: !7)
!12304 = !DILocation(line: 233, column: 15, scope: !12290)
!12305 = !DILocation(line: 235, column: 2, scope: !12290)
!12306 = !DILocation(line: 236, column: 2, scope: !12290)
!12307 = !{i32 -2140222435}
!12308 = !DILocation(line: 237, column: 25, scope: !12290)
!12309 = !DILocation(line: 237, column: 31, scope: !12290)
!12310 = !DILocation(line: 237, column: 2, scope: !12290)
!12311 = !DILocation(line: 238, column: 2, scope: !12290)
!12312 = !DILocalVariable(name: "__timeout_us", scope: !12313, file: !3, line: 240, type: !326)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !3, line: 240, column: 6)
!12314 = distinct !DILexicalBlock(scope: !12290, file: !3, line: 240, column: 6)
!12315 = !DILocation(line: 240, column: 6, scope: !12313)
!12316 = !DILocalVariable(name: "__delay_us", scope: !12313, file: !3, line: 240, type: !281)
!12317 = !DILocalVariable(name: "__timeout", scope: !12313, file: !3, line: 240, type: !1117)
!12318 = !DILocation(line: 240, column: 6, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 240, column: 6)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 240, column: 6)
!12321 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 240, column: 6)
!12322 = !DILocation(line: 240, column: 6, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 240, column: 6)
!12324 = !DILocation(line: 240, column: 6, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 240, column: 6)
!12326 = !DILocation(line: 240, column: 6, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12325, file: !3, line: 240, column: 6)
!12328 = !DILocation(line: 240, column: 6, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12319, file: !3, line: 240, column: 6)
!12330 = !DILocation(line: 240, column: 6, scope: !12331)
!12331 = distinct !DILexicalBlock(scope: !12332, file: !3, line: 240, column: 6)
!12332 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 240, column: 6)
!12333 = !DILocation(line: 240, column: 6, scope: !12332)
!12334 = !DILocation(line: 240, column: 6, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 240, column: 6)
!12336 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 240, column: 6)
!12337 = !DILocation(line: 240, column: 6, scope: !12336)
!12338 = !DILocation(line: 240, column: 6, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12331, file: !3, line: 240, column: 6)
!12340 = !DILocation(line: 240, column: 6, scope: !12320)
!12341 = distinct !{!12341, !12342, !12342}
!12342 = !DILocation(line: 240, column: 6, scope: !12321)
!12343 = !DILocation(line: 240, column: 6, scope: !12314)
!12344 = !DILocation(line: 240, column: 6, scope: !12290)
!12345 = !DILocation(line: 243, column: 3, scope: !12314)
!12346 = !DILocation(line: 246, column: 1, scope: !12290)
!12347 = distinct !DISubprogram(name: "dw_mci_wait_while_busy", scope: !3, file: !3, line: 208, type: !12348, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12348 = !DISubroutineType(types: !12349)
!12349 = !{null, !286, !309}
!12350 = !DILocalVariable(name: "host", arg: 1, scope: !12347, file: !3, line: 208, type: !286)
!12351 = !DILocation(line: 208, column: 51, scope: !12347)
!12352 = !DILocalVariable(name: "cmd_flags", arg: 2, scope: !12347, file: !3, line: 208, type: !309)
!12353 = !DILocation(line: 208, column: 61, scope: !12347)
!12354 = !DILocalVariable(name: "status", scope: !12347, file: !3, line: 210, type: !309)
!12355 = !DILocation(line: 210, column: 6, scope: !12347)
!12356 = !DILocation(line: 220, column: 7, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12347, file: !3, line: 220, column: 6)
!12358 = !DILocation(line: 220, column: 17, scope: !12357)
!12359 = !DILocation(line: 220, column: 43, scope: !12357)
!12360 = !DILocation(line: 221, column: 8, scope: !12357)
!12361 = !DILocation(line: 221, column: 18, scope: !12357)
!12362 = !DILocation(line: 220, column: 6, scope: !12347)
!12363 = !DILocalVariable(name: "__timeout_us", scope: !12364, file: !3, line: 222, type: !326)
!12364 = distinct !DILexicalBlock(scope: !12365, file: !3, line: 222, column: 7)
!12365 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 222, column: 7)
!12366 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 221, column: 44)
!12367 = !DILocation(line: 222, column: 7, scope: !12364)
!12368 = !DILocalVariable(name: "__delay_us", scope: !12364, file: !3, line: 222, type: !281)
!12369 = !DILocalVariable(name: "__timeout", scope: !12364, file: !3, line: 222, type: !1117)
!12370 = !DILocation(line: 222, column: 7, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !3, line: 222, column: 7)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !3, line: 222, column: 7)
!12373 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 222, column: 7)
!12374 = !DILocation(line: 222, column: 7, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 222, column: 7)
!12376 = !DILocation(line: 222, column: 7, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 222, column: 7)
!12378 = !DILocation(line: 222, column: 7, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12377, file: !3, line: 222, column: 7)
!12380 = !DILocation(line: 222, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 222, column: 7)
!12382 = !DILocation(line: 222, column: 7, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 222, column: 7)
!12384 = distinct !DILexicalBlock(scope: !12381, file: !3, line: 222, column: 7)
!12385 = !DILocation(line: 222, column: 7, scope: !12384)
!12386 = !DILocation(line: 222, column: 7, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 222, column: 7)
!12388 = distinct !DILexicalBlock(scope: !12383, file: !3, line: 222, column: 7)
!12389 = !DILocation(line: 222, column: 7, scope: !12388)
!12390 = !DILocation(line: 222, column: 7, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12383, file: !3, line: 222, column: 7)
!12392 = !DILocation(line: 222, column: 7, scope: !12372)
!12393 = distinct !{!12393, !12394, !12394}
!12394 = !DILocation(line: 222, column: 7, scope: !12373)
!12395 = !DILocation(line: 222, column: 7, scope: !12365)
!12396 = !DILocation(line: 222, column: 7, scope: !12366)
!12397 = !DILocation(line: 226, column: 4, scope: !12365)
!12398 = !DILocation(line: 227, column: 2, scope: !12366)
!12399 = !DILocation(line: 228, column: 1, scope: !12347)
!12400 = distinct !DISubprogram(name: "dw_mci_ctrl_thld", scope: !3, file: !3, line: 1024, type: !6354, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12401 = !DILocalVariable(name: "host", arg: 1, scope: !12400, file: !3, line: 1024, type: !286)
!12402 = !DILocation(line: 1024, column: 45, scope: !12400)
!12403 = !DILocalVariable(name: "data", arg: 2, scope: !12400, file: !3, line: 1024, type: !5364)
!12404 = !DILocation(line: 1024, column: 68, scope: !12400)
!12405 = !DILocalVariable(name: "blksz", scope: !12400, file: !3, line: 1026, type: !7)
!12406 = !DILocation(line: 1026, column: 15, scope: !12400)
!12407 = !DILocation(line: 1026, column: 23, scope: !12400)
!12408 = !DILocation(line: 1026, column: 29, scope: !12400)
!12409 = !DILocalVariable(name: "blksz_depth", scope: !12400, file: !3, line: 1027, type: !309)
!12410 = !DILocation(line: 1027, column: 6, scope: !12400)
!12411 = !DILocalVariable(name: "fifo_depth", scope: !12400, file: !3, line: 1027, type: !309)
!12412 = !DILocation(line: 1027, column: 19, scope: !12400)
!12413 = !DILocalVariable(name: "thld_size", scope: !12400, file: !3, line: 1028, type: !770)
!12414 = !DILocation(line: 1028, column: 6, scope: !12400)
!12415 = !DILocalVariable(name: "enable", scope: !12400, file: !3, line: 1029, type: !1173)
!12416 = !DILocation(line: 1029, column: 5, scope: !12400)
!12417 = !DILocation(line: 1035, column: 6, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 1035, column: 6)
!12419 = !DILocation(line: 1035, column: 12, scope: !12418)
!12420 = !DILocation(line: 1035, column: 18, scope: !12418)
!12421 = !DILocation(line: 1035, column: 32, scope: !12418)
!12422 = !DILocation(line: 1036, column: 4, scope: !12418)
!12423 = !DILocation(line: 1036, column: 10, scope: !12418)
!12424 = !DILocation(line: 1036, column: 16, scope: !12418)
!12425 = !DILocation(line: 1036, column: 30, scope: !12418)
!12426 = !DILocation(line: 1036, column: 33, scope: !12418)
!12427 = !DILocation(line: 1036, column: 39, scope: !12418)
!12428 = !DILocation(line: 1036, column: 45, scope: !12418)
!12429 = !DILocation(line: 1035, column: 6, scope: !12400)
!12430 = !DILocation(line: 1037, column: 3, scope: !12418)
!12431 = !DILocation(line: 1043, column: 6, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 1043, column: 6)
!12433 = !DILocation(line: 1043, column: 12, scope: !12432)
!12434 = !DILocation(line: 1043, column: 18, scope: !12432)
!12435 = !DILocation(line: 1043, column: 35, scope: !12432)
!12436 = !DILocation(line: 1044, column: 3, scope: !12432)
!12437 = !DILocation(line: 1044, column: 9, scope: !12432)
!12438 = !DILocation(line: 1044, column: 16, scope: !12432)
!12439 = !DILocation(line: 1043, column: 6, scope: !12400)
!12440 = !DILocation(line: 1045, column: 3, scope: !12432)
!12441 = !DILocation(line: 1047, column: 6, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 1047, column: 6)
!12443 = !DILocation(line: 1047, column: 12, scope: !12442)
!12444 = !DILocation(line: 1047, column: 18, scope: !12442)
!12445 = !DILocation(line: 1047, column: 6, scope: !12400)
!12446 = !DILocation(line: 1048, column: 10, scope: !12442)
!12447 = !DILocation(line: 1048, column: 3, scope: !12442)
!12448 = !DILocation(line: 1050, column: 10, scope: !12442)
!12449 = !DILocation(line: 1052, column: 6, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 1052, column: 6)
!12451 = !DILocation(line: 1052, column: 12, scope: !12450)
!12452 = !DILocation(line: 1052, column: 19, scope: !12450)
!12453 = !DILocation(line: 1052, column: 43, scope: !12450)
!12454 = !DILocation(line: 1053, column: 6, scope: !12450)
!12455 = !DILocation(line: 1053, column: 12, scope: !12450)
!12456 = !DILocation(line: 1053, column: 19, scope: !12450)
!12457 = !DILocation(line: 1053, column: 44, scope: !12450)
!12458 = !DILocation(line: 1054, column: 6, scope: !12450)
!12459 = !DILocation(line: 1054, column: 12, scope: !12450)
!12460 = !DILocation(line: 1054, column: 19, scope: !12450)
!12461 = !DILocation(line: 1052, column: 6, scope: !12400)
!12462 = !DILocation(line: 1055, column: 3, scope: !12450)
!12463 = !DILocation(line: 1057, column: 16, scope: !12400)
!12464 = !DILocation(line: 1057, column: 30, scope: !12400)
!12465 = !DILocation(line: 1057, column: 36, scope: !12400)
!12466 = !DILocation(line: 1057, column: 27, scope: !12400)
!12467 = !DILocation(line: 1057, column: 22, scope: !12400)
!12468 = !DILocation(line: 1057, column: 14, scope: !12400)
!12469 = !DILocation(line: 1058, column: 15, scope: !12400)
!12470 = !DILocation(line: 1058, column: 21, scope: !12400)
!12471 = !DILocation(line: 1058, column: 13, scope: !12400)
!12472 = !DILocation(line: 1060, column: 6, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12400, file: !3, line: 1060, column: 6)
!12474 = !DILocation(line: 1060, column: 20, scope: !12473)
!12475 = !DILocation(line: 1060, column: 18, scope: !12473)
!12476 = !DILocation(line: 1060, column: 6, scope: !12400)
!12477 = !DILocation(line: 1061, column: 3, scope: !12473)
!12478 = !DILocation(line: 1068, column: 14, scope: !12400)
!12479 = !DILocation(line: 1068, column: 12, scope: !12400)
!12480 = !DILocation(line: 1069, column: 2, scope: !12400)
!12481 = !DILocation(line: 1070, column: 2, scope: !12400)
!12482 = !DILabel(scope: !12400, name: "disable", file: !3, line: 1072)
!12483 = !DILocation(line: 1072, column: 1, scope: !12400)
!12484 = !DILocation(line: 1073, column: 2, scope: !12400)
!12485 = !DILocation(line: 1074, column: 1, scope: !12400)
!12486 = distinct !DISubprogram(name: "dw_mci_submit_data_dma", scope: !3, file: !3, line: 1076, type: !11632, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12487 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !12488)
!12488 = distinct !DILocation(line: 1121, column: 2, scope: !12486)
!12489 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !12488)
!12490 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !12491)
!12491 = distinct !DILocation(line: 1117, column: 2, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12493, file: !3, line: 1117, column: 2)
!12493 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 1117, column: 2)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 1117, column: 2)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 1117, column: 2)
!12496 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1117, column: 2)
!12497 = !DILocalVariable(name: "host", arg: 1, scope: !12486, file: !3, line: 1076, type: !286)
!12498 = !DILocation(line: 1076, column: 50, scope: !12486)
!12499 = !DILocalVariable(name: "data", arg: 2, scope: !12486, file: !3, line: 1076, type: !5364)
!12500 = !DILocation(line: 1076, column: 73, scope: !12486)
!12501 = !DILocalVariable(name: "irqflags", scope: !12486, file: !3, line: 1078, type: !281)
!12502 = !DILocation(line: 1078, column: 16, scope: !12486)
!12503 = !DILocalVariable(name: "sg_len", scope: !12486, file: !3, line: 1079, type: !446)
!12504 = !DILocation(line: 1079, column: 6, scope: !12486)
!12505 = !DILocalVariable(name: "temp", scope: !12486, file: !3, line: 1080, type: !309)
!12506 = !DILocation(line: 1080, column: 6, scope: !12486)
!12507 = !DILocation(line: 1082, column: 2, scope: !12486)
!12508 = !DILocation(line: 1082, column: 8, scope: !12486)
!12509 = !DILocation(line: 1082, column: 18, scope: !12486)
!12510 = !DILocation(line: 1085, column: 7, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1085, column: 6)
!12512 = !DILocation(line: 1085, column: 13, scope: !12511)
!12513 = !DILocation(line: 1085, column: 6, scope: !12486)
!12514 = !DILocation(line: 1086, column: 3, scope: !12511)
!12515 = !DILocation(line: 1088, column: 35, scope: !12486)
!12516 = !DILocation(line: 1088, column: 41, scope: !12486)
!12517 = !DILocation(line: 1088, column: 11, scope: !12486)
!12518 = !DILocation(line: 1088, column: 9, scope: !12486)
!12519 = !DILocation(line: 1089, column: 6, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1089, column: 6)
!12521 = !DILocation(line: 1089, column: 13, scope: !12520)
!12522 = !DILocation(line: 1089, column: 6, scope: !12486)
!12523 = !DILocation(line: 1090, column: 3, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 1089, column: 18)
!12525 = !DILocation(line: 1090, column: 9, scope: !12524)
!12526 = !DILocation(line: 1090, column: 18, scope: !12524)
!12527 = !DILocation(line: 1090, column: 23, scope: !12524)
!12528 = !DILocation(line: 1091, column: 10, scope: !12524)
!12529 = !DILocation(line: 1091, column: 3, scope: !12524)
!12530 = !DILocation(line: 1094, column: 2, scope: !12486)
!12531 = !DILocation(line: 1094, column: 8, scope: !12486)
!12532 = !DILocation(line: 1094, column: 18, scope: !12486)
!12533 = !DILocation(line: 1096, column: 6, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1096, column: 6)
!12535 = !DILocation(line: 1096, column: 12, scope: !12534)
!12536 = !DILocation(line: 1096, column: 20, scope: !12534)
!12537 = !DILocation(line: 1096, column: 6, scope: !12486)
!12538 = !DILocation(line: 1097, column: 3, scope: !12534)
!12539 = !DILocation(line: 1108, column: 6, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1108, column: 6)
!12541 = !DILocation(line: 1108, column: 12, scope: !12540)
!12542 = !DILocation(line: 1108, column: 26, scope: !12540)
!12543 = !DILocation(line: 1108, column: 32, scope: !12540)
!12544 = !DILocation(line: 1108, column: 23, scope: !12540)
!12545 = !DILocation(line: 1108, column: 6, scope: !12486)
!12546 = !DILocation(line: 1109, column: 24, scope: !12540)
!12547 = !DILocation(line: 1109, column: 30, scope: !12540)
!12548 = !DILocation(line: 1109, column: 3, scope: !12540)
!12549 = !DILocation(line: 1112, column: 9, scope: !12486)
!12550 = !DILocation(line: 1112, column: 7, scope: !12486)
!12551 = !DILocation(line: 1113, column: 7, scope: !12486)
!12552 = !DILocation(line: 1114, column: 2, scope: !12486)
!12553 = !DILocation(line: 1117, column: 2, scope: !12486)
!12554 = !DILocation(line: 1117, column: 2, scope: !12496)
!12555 = !DILocalVariable(name: "__dummy", scope: !12556, file: !3, line: 1117, type: !281)
!12556 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 1117, column: 2)
!12557 = !DILocation(line: 1117, column: 2, scope: !12556)
!12558 = !DILocalVariable(name: "__dummy2", scope: !12556, file: !3, line: 1117, type: !281)
!12559 = !DILocation(line: 1117, column: 2, scope: !12495)
!12560 = !DILocation(line: 1117, column: 2, scope: !12494)
!12561 = !DILocation(line: 1117, column: 2, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 1117, column: 2)
!12563 = !DILocalVariable(name: "__dummy", scope: !12564, file: !3, line: 1117, type: !281)
!12564 = distinct !DILexicalBlock(scope: !12565, file: !3, line: 1117, column: 2)
!12565 = distinct !DILexicalBlock(scope: !12562, file: !3, line: 1117, column: 2)
!12566 = !DILocation(line: 1117, column: 2, scope: !12564)
!12567 = !DILocalVariable(name: "__dummy2", scope: !12564, file: !3, line: 1117, type: !281)
!12568 = !DILocation(line: 1117, column: 2, scope: !12565)
!12569 = !DILocation(line: 1117, column: 2, scope: !12493)
!12570 = !{i32 -2140195432}
!12571 = !DILocation(line: 1117, column: 2, scope: !12492)
!12572 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !12491)
!12573 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !12491)
!12574 = !DILocation(line: 1118, column: 9, scope: !12486)
!12575 = !DILocation(line: 1118, column: 7, scope: !12486)
!12576 = !DILocation(line: 1119, column: 8, scope: !12486)
!12577 = !DILocation(line: 1120, column: 2, scope: !12486)
!12578 = !DILocation(line: 1121, column: 26, scope: !12486)
!12579 = !DILocation(line: 1121, column: 32, scope: !12486)
!12580 = !DILocation(line: 1121, column: 42, scope: !12486)
!12581 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !12488)
!12582 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !12488)
!12583 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !12488)
!12584 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !12488)
!12585 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !12488)
!12586 = !DILocation(line: 1123, column: 6, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12486, file: !3, line: 1123, column: 6)
!12588 = !DILocation(line: 1123, column: 12, scope: !12587)
!12589 = !DILocation(line: 1123, column: 21, scope: !12587)
!12590 = !DILocation(line: 1123, column: 27, scope: !12587)
!12591 = !DILocation(line: 1123, column: 33, scope: !12587)
!12592 = !DILocation(line: 1123, column: 6, scope: !12486)
!12593 = !DILocation(line: 1124, column: 3, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12587, file: !3, line: 1123, column: 42)
!12595 = !DILocation(line: 1124, column: 9, scope: !12594)
!12596 = !DILocation(line: 1124, column: 18, scope: !12594)
!12597 = !DILocation(line: 1124, column: 23, scope: !12594)
!12598 = !DILocation(line: 1129, column: 3, scope: !12594)
!12599 = !DILocation(line: 1132, column: 2, scope: !12486)
!12600 = !DILocation(line: 1133, column: 1, scope: !12486)
!12601 = !DILocalVariable(name: "host", arg: 1, scope: !6353, file: !3, line: 984, type: !286)
!12602 = !DILocation(line: 984, column: 49, scope: !6353)
!12603 = !DILocalVariable(name: "data", arg: 2, scope: !6353, file: !3, line: 984, type: !5364)
!12604 = !DILocation(line: 984, column: 72, scope: !6353)
!12605 = !DILocalVariable(name: "blksz", scope: !6353, file: !3, line: 986, type: !7)
!12606 = !DILocation(line: 986, column: 15, scope: !6353)
!12607 = !DILocation(line: 986, column: 23, scope: !6353)
!12608 = !DILocation(line: 986, column: 29, scope: !6353)
!12609 = !DILocalVariable(name: "fifo_width", scope: !6353, file: !3, line: 988, type: !309)
!12610 = !DILocation(line: 988, column: 6, scope: !6353)
!12611 = !DILocation(line: 988, column: 24, scope: !6353)
!12612 = !DILocation(line: 988, column: 30, scope: !6353)
!12613 = !DILocation(line: 988, column: 21, scope: !6353)
!12614 = !DILocalVariable(name: "blksz_depth", scope: !6353, file: !3, line: 989, type: !309)
!12615 = !DILocation(line: 989, column: 6, scope: !6353)
!12616 = !DILocation(line: 989, column: 20, scope: !6353)
!12617 = !DILocation(line: 989, column: 28, scope: !6353)
!12618 = !DILocation(line: 989, column: 26, scope: !6353)
!12619 = !DILocalVariable(name: "fifoth_val", scope: !6353, file: !3, line: 989, type: !309)
!12620 = !DILocation(line: 989, column: 40, scope: !6353)
!12621 = !DILocalVariable(name: "msize", scope: !6353, file: !3, line: 990, type: !309)
!12622 = !DILocation(line: 990, column: 6, scope: !6353)
!12623 = !DILocalVariable(name: "rx_wmark", scope: !6353, file: !3, line: 990, type: !309)
!12624 = !DILocation(line: 990, column: 17, scope: !6353)
!12625 = !DILocalVariable(name: "tx_wmark", scope: !6353, file: !3, line: 990, type: !309)
!12626 = !DILocation(line: 990, column: 31, scope: !6353)
!12627 = !DILocalVariable(name: "tx_wmark_invers", scope: !6353, file: !3, line: 990, type: !309)
!12628 = !DILocation(line: 990, column: 41, scope: !6353)
!12629 = !DILocalVariable(name: "idx", scope: !6353, file: !3, line: 991, type: !446)
!12630 = !DILocation(line: 991, column: 6, scope: !6353)
!12631 = !DILocation(line: 994, column: 7, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 994, column: 6)
!12633 = !DILocation(line: 994, column: 13, scope: !12632)
!12634 = !DILocation(line: 994, column: 6, scope: !6353)
!12635 = !DILocation(line: 995, column: 3, scope: !12632)
!12636 = !DILocation(line: 997, column: 14, scope: !6353)
!12637 = !DILocation(line: 997, column: 20, scope: !6353)
!12638 = !DILocation(line: 997, column: 32, scope: !6353)
!12639 = !DILocation(line: 997, column: 11, scope: !6353)
!12640 = !DILocation(line: 998, column: 20, scope: !6353)
!12641 = !DILocation(line: 998, column: 26, scope: !6353)
!12642 = !DILocation(line: 998, column: 39, scope: !6353)
!12643 = !DILocation(line: 998, column: 37, scope: !6353)
!12644 = !DILocation(line: 998, column: 18, scope: !6353)
!12645 = !DILocation(line: 1004, column: 6, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1004, column: 6)
!12647 = !DILocation(line: 1004, column: 14, scope: !12646)
!12648 = !DILocation(line: 1004, column: 12, scope: !12646)
!12649 = !DILocation(line: 1004, column: 6, scope: !6353)
!12650 = !DILocation(line: 1005, column: 3, scope: !12646)
!12651 = !DILocation(line: 1007, column: 2, scope: !6353)
!12652 = !DILocation(line: 1008, column: 10, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 1008, column: 7)
!12654 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1007, column: 5)
!12655 = !DILocation(line: 1008, column: 29, scope: !12653)
!12656 = !DILocation(line: 1008, column: 24, scope: !12653)
!12657 = !DILocation(line: 1008, column: 22, scope: !12653)
!12658 = !DILocation(line: 1008, column: 35, scope: !12653)
!12659 = !DILocation(line: 1009, column: 9, scope: !12653)
!12660 = !DILocation(line: 1009, column: 32, scope: !12653)
!12661 = !DILocation(line: 1009, column: 27, scope: !12653)
!12662 = !DILocation(line: 1009, column: 25, scope: !12653)
!12663 = !DILocation(line: 1008, column: 7, scope: !12654)
!12664 = !DILocation(line: 1010, column: 12, scope: !12665)
!12665 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 1009, column: 40)
!12666 = !DILocation(line: 1010, column: 10, scope: !12665)
!12667 = !DILocation(line: 1011, column: 20, scope: !12665)
!12668 = !DILocation(line: 1011, column: 15, scope: !12665)
!12669 = !DILocation(line: 1011, column: 25, scope: !12665)
!12670 = !DILocation(line: 1011, column: 13, scope: !12665)
!12671 = !DILocation(line: 1012, column: 4, scope: !12665)
!12672 = !DILocation(line: 1014, column: 2, scope: !12654)
!12673 = !DILocation(line: 1014, column: 11, scope: !6353)
!12674 = !DILocation(line: 1014, column: 17, scope: !6353)
!12675 = distinct !{!12675, !12651, !12676}
!12676 = !DILocation(line: 1014, column: 20, scope: !6353)
!12677 = !DILabel(scope: !6353, name: "done", file: !3, line: 1019)
!12678 = !DILocation(line: 1019, column: 1, scope: !6353)
!12679 = !DILocation(line: 1020, column: 15, scope: !6353)
!12680 = !DILocation(line: 1020, column: 13, scope: !6353)
!12681 = !DILocation(line: 1021, column: 2, scope: !6353)
!12682 = !DILocation(line: 1022, column: 1, scope: !6353)
!12683 = distinct !DISubprogram(name: "dw_mci_pre_dma_transfer", scope: !3, file: !3, line: 870, type: !12684, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{!446, !286, !5364, !446}
!12686 = !DILocalVariable(name: "host", arg: 1, scope: !12683, file: !3, line: 870, type: !286)
!12687 = !DILocation(line: 870, column: 51, scope: !12683)
!12688 = !DILocalVariable(name: "data", arg: 2, scope: !12683, file: !3, line: 871, type: !5364)
!12689 = !DILocation(line: 871, column: 25, scope: !12683)
!12690 = !DILocalVariable(name: "cookie", arg: 3, scope: !12683, file: !3, line: 872, type: !446)
!12691 = !DILocation(line: 872, column: 12, scope: !12683)
!12692 = !DILocalVariable(name: "sg", scope: !12683, file: !3, line: 874, type: !317)
!12693 = !DILocation(line: 874, column: 22, scope: !12683)
!12694 = !DILocalVariable(name: "i", scope: !12683, file: !3, line: 875, type: !7)
!12695 = !DILocation(line: 875, column: 15, scope: !12683)
!12696 = !DILocalVariable(name: "sg_len", scope: !12683, file: !3, line: 875, type: !7)
!12697 = !DILocation(line: 875, column: 18, scope: !12683)
!12698 = !DILocation(line: 877, column: 6, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 877, column: 6)
!12700 = !DILocation(line: 877, column: 12, scope: !12699)
!12701 = !DILocation(line: 877, column: 24, scope: !12699)
!12702 = !DILocation(line: 877, column: 6, scope: !12683)
!12703 = !DILocation(line: 878, column: 10, scope: !12699)
!12704 = !DILocation(line: 878, column: 16, scope: !12699)
!12705 = !DILocation(line: 878, column: 3, scope: !12699)
!12706 = !DILocation(line: 885, column: 6, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 885, column: 6)
!12708 = !DILocation(line: 885, column: 12, scope: !12707)
!12709 = !DILocation(line: 885, column: 21, scope: !12707)
!12710 = !DILocation(line: 885, column: 27, scope: !12707)
!12711 = !DILocation(line: 885, column: 19, scope: !12707)
!12712 = !DILocation(line: 885, column: 33, scope: !12707)
!12713 = !DILocation(line: 885, column: 6, scope: !12683)
!12714 = !DILocation(line: 886, column: 3, scope: !12707)
!12715 = !DILocation(line: 888, column: 6, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 888, column: 6)
!12717 = !DILocation(line: 888, column: 12, scope: !12716)
!12718 = !DILocation(line: 888, column: 18, scope: !12716)
!12719 = !DILocation(line: 888, column: 6, scope: !12683)
!12720 = !DILocation(line: 889, column: 3, scope: !12716)
!12721 = !DILocation(line: 891, column: 2, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 891, column: 2)
!12723 = !DILocation(line: 891, column: 2, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 891, column: 2)
!12725 = !DILocation(line: 892, column: 7, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 892, column: 7)
!12727 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 891, column: 45)
!12728 = !DILocation(line: 892, column: 11, scope: !12726)
!12729 = !DILocation(line: 892, column: 18, scope: !12726)
!12730 = !DILocation(line: 892, column: 22, scope: !12726)
!12731 = !DILocation(line: 892, column: 25, scope: !12726)
!12732 = !DILocation(line: 892, column: 29, scope: !12726)
!12733 = !DILocation(line: 892, column: 36, scope: !12726)
!12734 = !DILocation(line: 892, column: 7, scope: !12727)
!12735 = !DILocation(line: 893, column: 4, scope: !12726)
!12736 = !DILocation(line: 894, column: 2, scope: !12727)
!12737 = distinct !{!12737, !12721, !12738}
!12738 = !DILocation(line: 894, column: 2, scope: !12722)
!12739 = !DILocation(line: 896, column: 11, scope: !12683)
!12740 = !DILocation(line: 896, column: 9, scope: !12683)
!12741 = !DILocation(line: 900, column: 6, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12683, file: !3, line: 900, column: 6)
!12743 = !DILocation(line: 900, column: 13, scope: !12742)
!12744 = !DILocation(line: 900, column: 6, scope: !12683)
!12745 = !DILocation(line: 901, column: 3, scope: !12742)
!12746 = !DILocation(line: 903, column: 22, scope: !12683)
!12747 = !DILocation(line: 903, column: 2, scope: !12683)
!12748 = !DILocation(line: 903, column: 8, scope: !12683)
!12749 = !DILocation(line: 903, column: 20, scope: !12683)
!12750 = !DILocation(line: 905, column: 9, scope: !12683)
!12751 = !DILocation(line: 905, column: 2, scope: !12683)
!12752 = !DILocation(line: 906, column: 1, scope: !12683)
!12753 = distinct !DISubprogram(name: "dw_mci_set_cto", scope: !3, file: !3, line: 355, type: !5845, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12754 = !DILocation(line: 363, column: 74, scope: !11191, inlinedAt: !12755)
!12755 = distinct !DILocation(line: 389, column: 14, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 387, column: 6)
!12757 = !DILocation(line: 407, column: 64, scope: !6939, inlinedAt: !12758)
!12758 = distinct !DILocation(line: 390, column: 2, scope: !12753)
!12759 = !DILocation(line: 407, column: 84, scope: !6939, inlinedAt: !12758)
!12760 = !DILocation(line: 327, column: 67, scope: !6366, inlinedAt: !12761)
!12761 = distinct !DILocation(line: 386, column: 2, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 386, column: 2)
!12763 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 386, column: 2)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 386, column: 2)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !3, line: 386, column: 2)
!12766 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 386, column: 2)
!12767 = !DILocalVariable(name: "host", arg: 1, scope: !12753, file: !3, line: 355, type: !286)
!12768 = !DILocation(line: 355, column: 50, scope: !12753)
!12769 = !DILocalVariable(name: "cto_clks", scope: !12753, file: !3, line: 357, type: !7)
!12770 = !DILocation(line: 357, column: 15, scope: !12753)
!12771 = !DILocalVariable(name: "cto_div", scope: !12753, file: !3, line: 358, type: !7)
!12772 = !DILocation(line: 358, column: 15, scope: !12753)
!12773 = !DILocalVariable(name: "cto_ms", scope: !12753, file: !3, line: 359, type: !7)
!12774 = !DILocation(line: 359, column: 15, scope: !12753)
!12775 = !DILocalVariable(name: "irqflags", scope: !12753, file: !3, line: 360, type: !281)
!12776 = !DILocation(line: 360, column: 16, scope: !12753)
!12777 = !DILocation(line: 362, column: 13, scope: !12753)
!12778 = !DILocation(line: 362, column: 36, scope: !12753)
!12779 = !DILocation(line: 362, column: 11, scope: !12753)
!12780 = !DILocation(line: 363, column: 13, scope: !12753)
!12781 = !DILocation(line: 363, column: 37, scope: !12753)
!12782 = !DILocation(line: 363, column: 45, scope: !12753)
!12783 = !DILocation(line: 363, column: 10, scope: !12753)
!12784 = !DILocation(line: 364, column: 6, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 364, column: 6)
!12786 = !DILocation(line: 364, column: 14, scope: !12785)
!12787 = !DILocation(line: 364, column: 6, scope: !12753)
!12788 = !DILocation(line: 365, column: 11, scope: !12785)
!12789 = !DILocation(line: 365, column: 3, scope: !12785)
!12790 = !DILocalVariable(name: "_tmp", scope: !12791, file: !3, line: 367, type: !328)
!12791 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 367, column: 11)
!12792 = !DILocation(line: 367, column: 11, scope: !12791)
!12793 = !DILocalVariable(name: "__base", scope: !12794, file: !3, line: 367, type: !1427)
!12794 = distinct !DILexicalBlock(scope: !12791, file: !3, line: 367, column: 11)
!12795 = !DILocation(line: 367, column: 11, scope: !12794)
!12796 = !DILocalVariable(name: "__rem", scope: !12794, file: !3, line: 367, type: !1427)
!12797 = !DILocation(line: 367, column: 11, scope: !12753)
!12798 = !DILocation(line: 367, column: 9, scope: !12753)
!12799 = !DILocation(line: 371, column: 9, scope: !12753)
!12800 = !DILocation(line: 386, column: 2, scope: !12753)
!12801 = !DILocation(line: 386, column: 2, scope: !12766)
!12802 = !DILocalVariable(name: "__dummy", scope: !12803, file: !3, line: 386, type: !281)
!12803 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 386, column: 2)
!12804 = !DILocation(line: 386, column: 2, scope: !12803)
!12805 = !DILocalVariable(name: "__dummy2", scope: !12803, file: !3, line: 386, type: !281)
!12806 = !DILocation(line: 386, column: 2, scope: !12765)
!12807 = !DILocation(line: 386, column: 2, scope: !12764)
!12808 = !DILocation(line: 386, column: 2, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 386, column: 2)
!12810 = !DILocalVariable(name: "__dummy", scope: !12811, file: !3, line: 386, type: !281)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 386, column: 2)
!12812 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 386, column: 2)
!12813 = !DILocation(line: 386, column: 2, scope: !12811)
!12814 = !DILocalVariable(name: "__dummy2", scope: !12811, file: !3, line: 386, type: !281)
!12815 = !DILocation(line: 386, column: 2, scope: !12812)
!12816 = !DILocation(line: 386, column: 2, scope: !12763)
!12817 = !{i32 -2140215084}
!12818 = !DILocation(line: 386, column: 2, scope: !12762)
!12819 = !DILocation(line: 329, column: 10, scope: !6366, inlinedAt: !12761)
!12820 = !DILocation(line: 329, column: 16, scope: !6366, inlinedAt: !12761)
!12821 = !DILocation(line: 387, column: 37, scope: !12756)
!12822 = !DILocation(line: 387, column: 43, scope: !12756)
!12823 = !DILocation(line: 387, column: 7, scope: !12756)
!12824 = !DILocation(line: 387, column: 6, scope: !12753)
!12825 = !DILocation(line: 388, column: 14, scope: !12756)
!12826 = !DILocation(line: 388, column: 20, scope: !12756)
!12827 = !DILocation(line: 389, column: 4, scope: !12756)
!12828 = !DILocation(line: 389, column: 31, scope: !12756)
!12829 = !DILocation(line: 365, column: 27, scope: !11311, inlinedAt: !12755)
!12830 = !DILocation(line: 365, column: 6, scope: !11311, inlinedAt: !12755)
!12831 = !DILocation(line: 365, column: 6, scope: !11191, inlinedAt: !12755)
!12832 = !DILocation(line: 366, column: 12, scope: !11315, inlinedAt: !12755)
!12833 = !DILocation(line: 366, column: 14, scope: !11315, inlinedAt: !12755)
!12834 = !DILocation(line: 366, column: 7, scope: !11316, inlinedAt: !12755)
!12835 = !DILocation(line: 367, column: 4, scope: !11315, inlinedAt: !12755)
!12836 = !DILocation(line: 368, column: 28, scope: !11316, inlinedAt: !12755)
!12837 = !DILocation(line: 368, column: 10, scope: !11316, inlinedAt: !12755)
!12838 = !DILocation(line: 368, column: 3, scope: !11316, inlinedAt: !12755)
!12839 = !DILocation(line: 370, column: 29, scope: !11324, inlinedAt: !12755)
!12840 = !DILocation(line: 370, column: 10, scope: !11324, inlinedAt: !12755)
!12841 = !DILocation(line: 370, column: 3, scope: !11324, inlinedAt: !12755)
!12842 = !DILocation(line: 372, column: 1, scope: !11191, inlinedAt: !12755)
!12843 = !DILocation(line: 389, column: 12, scope: !12756)
!12844 = !DILocation(line: 389, column: 39, scope: !12756)
!12845 = !DILocation(line: 388, column: 3, scope: !12756)
!12846 = !DILocation(line: 390, column: 26, scope: !12753)
!12847 = !DILocation(line: 390, column: 32, scope: !12753)
!12848 = !DILocation(line: 390, column: 42, scope: !12753)
!12849 = !DILocation(line: 409, column: 2, scope: !7027, inlinedAt: !12758)
!12850 = !DILocation(line: 409, column: 2, scope: !7032, inlinedAt: !12758)
!12851 = !DILocation(line: 409, column: 2, scope: !7033, inlinedAt: !12758)
!12852 = !DILocation(line: 409, column: 2, scope: !7040, inlinedAt: !12758)
!12853 = !DILocation(line: 409, column: 2, scope: !7043, inlinedAt: !12758)
!12854 = !DILocation(line: 391, column: 1, scope: !12753)
!12855 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !11192, file: !11192, line: 308, type: !11193, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12856 = !DILocalVariable(name: "m", arg: 1, scope: !12855, file: !11192, line: 308, type: !3582)
!12857 = !DILocation(line: 308, column: 66, scope: !12855)
!12858 = !DILocation(line: 310, column: 10, scope: !12855)
!12859 = !DILocation(line: 310, column: 12, scope: !12855)
!12860 = !DILocation(line: 310, column: 34, scope: !12855)
!12861 = !DILocation(line: 310, column: 39, scope: !12855)
!12862 = !DILocation(line: 310, column: 2, scope: !12855)
!12863 = distinct !DISubprogram(name: "list_empty", scope: !7139, file: !7139, line: 280, type: !12864, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12864 = !DISubroutineType(types: !12865)
!12865 = !{!446, !12866}
!12866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12867, size: 64)
!12867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!12868 = !DILocalVariable(name: "head", arg: 1, scope: !12863, file: !7139, line: 280, type: !12866)
!12869 = !DILocation(line: 280, column: 54, scope: !12863)
!12870 = !DILocation(line: 282, column: 9, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12863, file: !7139, line: 282, column: 9)
!12872 = !DILocation(line: 282, column: 9, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12871, file: !7139, line: 282, column: 9)
!12874 = !DILocation(line: 282, column: 34, scope: !12863)
!12875 = !DILocation(line: 282, column: 31, scope: !12863)
!12876 = !DILocation(line: 282, column: 2, scope: !12863)
!12877 = distinct !DISubprogram(name: "list_del", scope: !7139, file: !7139, line: 144, type: !7140, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12878 = !DILocalVariable(name: "entry", arg: 1, scope: !12877, file: !7139, line: 144, type: !349)
!12879 = !DILocation(line: 144, column: 47, scope: !12877)
!12880 = !DILocation(line: 146, column: 19, scope: !12877)
!12881 = !DILocation(line: 146, column: 2, scope: !12877)
!12882 = !DILocation(line: 147, column: 2, scope: !12877)
!12883 = !DILocation(line: 147, column: 9, scope: !12877)
!12884 = !DILocation(line: 147, column: 14, scope: !12877)
!12885 = !DILocation(line: 148, column: 2, scope: !12877)
!12886 = !DILocation(line: 148, column: 9, scope: !12877)
!12887 = !DILocation(line: 148, column: 14, scope: !12877)
!12888 = !DILocation(line: 149, column: 1, scope: !12877)
!12889 = distinct !DISubprogram(name: "dw_mci_start_request", scope: !3, file: !3, line: 1341, type: !12890, scopeLine: 1343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12890 = !DISubroutineType(types: !12891)
!12891 = !{null, !286, !6210}
!12892 = !DILocalVariable(name: "host", arg: 1, scope: !12889, file: !3, line: 1341, type: !286)
!12893 = !DILocation(line: 1341, column: 49, scope: !12889)
!12894 = !DILocalVariable(name: "slot", arg: 2, scope: !12889, file: !3, line: 1342, type: !6210)
!12895 = !DILocation(line: 1342, column: 26, scope: !12889)
!12896 = !DILocalVariable(name: "mrq", scope: !12889, file: !3, line: 1344, type: !5347)
!12897 = !DILocation(line: 1344, column: 22, scope: !12889)
!12898 = !DILocation(line: 1344, column: 28, scope: !12889)
!12899 = !DILocation(line: 1344, column: 34, scope: !12889)
!12900 = !DILocalVariable(name: "cmd", scope: !12889, file: !3, line: 1345, type: !5352)
!12901 = !DILocation(line: 1345, column: 22, scope: !12889)
!12902 = !DILocation(line: 1347, column: 8, scope: !12889)
!12903 = !DILocation(line: 1347, column: 13, scope: !12889)
!12904 = !DILocation(line: 1347, column: 19, scope: !12889)
!12905 = !DILocation(line: 1347, column: 24, scope: !12889)
!12906 = !DILocation(line: 1347, column: 30, scope: !12889)
!12907 = !DILocation(line: 1347, column: 35, scope: !12889)
!12908 = !DILocation(line: 1347, column: 6, scope: !12889)
!12909 = !DILocation(line: 1348, column: 25, scope: !12889)
!12910 = !DILocation(line: 1348, column: 31, scope: !12889)
!12911 = !DILocation(line: 1348, column: 37, scope: !12889)
!12912 = !DILocation(line: 1348, column: 2, scope: !12889)
!12913 = !DILocation(line: 1349, column: 1, scope: !12889)
!12914 = distinct !DISubprogram(name: "__list_del_entry", scope: !7139, file: !7139, line: 130, type: !7140, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12915 = !DILocalVariable(name: "entry", arg: 1, scope: !12914, file: !7139, line: 130, type: !349)
!12916 = !DILocation(line: 130, column: 55, scope: !12914)
!12917 = !DILocation(line: 132, column: 30, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12914, file: !7139, line: 132, column: 6)
!12919 = !DILocation(line: 132, column: 7, scope: !12918)
!12920 = !DILocation(line: 132, column: 6, scope: !12914)
!12921 = !DILocation(line: 133, column: 3, scope: !12918)
!12922 = !DILocation(line: 135, column: 13, scope: !12914)
!12923 = !DILocation(line: 135, column: 20, scope: !12914)
!12924 = !DILocation(line: 135, column: 26, scope: !12914)
!12925 = !DILocation(line: 135, column: 33, scope: !12914)
!12926 = !DILocation(line: 135, column: 2, scope: !12914)
!12927 = !DILocation(line: 136, column: 1, scope: !12914)
!12928 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7139, file: !7139, line: 51, type: !12929, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12929 = !DISubroutineType(types: !12930)
!12930 = !{!314, !349}
!12931 = !DILocalVariable(name: "entry", arg: 1, scope: !12928, file: !7139, line: 51, type: !349)
!12932 = !DILocation(line: 51, column: 61, scope: !12928)
!12933 = !DILocation(line: 53, column: 2, scope: !12928)
!12934 = distinct !DISubprogram(name: "__list_del", scope: !7139, file: !7139, line: 110, type: !12935, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12935 = !DISubroutineType(types: !12936)
!12936 = !{null, !349, !349}
!12937 = !DILocalVariable(name: "prev", arg: 1, scope: !12934, file: !7139, line: 110, type: !349)
!12938 = !DILocation(line: 110, column: 50, scope: !12934)
!12939 = !DILocalVariable(name: "next", arg: 2, scope: !12934, file: !7139, line: 110, type: !349)
!12940 = !DILocation(line: 110, column: 75, scope: !12934)
!12941 = !DILocation(line: 112, column: 15, scope: !12934)
!12942 = !DILocation(line: 112, column: 2, scope: !12934)
!12943 = !DILocation(line: 112, column: 8, scope: !12934)
!12944 = !DILocation(line: 112, column: 13, scope: !12934)
!12945 = !DILocation(line: 113, column: 2, scope: !12934)
!12946 = !DILocation(line: 113, column: 2, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12934, file: !7139, line: 113, column: 2)
!12948 = !DILocation(line: 113, column: 2, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12947, file: !7139, line: 113, column: 2)
!12950 = !DILocation(line: 113, column: 2, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12947, file: !7139, line: 113, column: 2)
!12952 = !DILocation(line: 114, column: 1, scope: !12934)
!12953 = distinct !DISubprogram(name: "dw_mci_cmd_interrupt", scope: !3, file: !3, line: 2592, type: !12348, scopeLine: 2593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12954 = !DILocalVariable(name: "host", arg: 1, scope: !12953, file: !3, line: 2592, type: !286)
!12955 = !DILocation(line: 2592, column: 49, scope: !12953)
!12956 = !DILocalVariable(name: "status", arg: 2, scope: !12953, file: !3, line: 2592, type: !309)
!12957 = !DILocation(line: 2592, column: 59, scope: !12953)
!12958 = !DILocation(line: 2594, column: 13, scope: !12953)
!12959 = !DILocation(line: 2594, column: 19, scope: !12953)
!12960 = !DILocation(line: 2594, column: 2, scope: !12953)
!12961 = !DILocation(line: 2596, column: 7, scope: !12962)
!12962 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 2596, column: 6)
!12963 = !DILocation(line: 2596, column: 13, scope: !12962)
!12964 = !DILocation(line: 2596, column: 6, scope: !12953)
!12965 = !DILocation(line: 2597, column: 22, scope: !12962)
!12966 = !DILocation(line: 2597, column: 3, scope: !12962)
!12967 = !DILocation(line: 2597, column: 9, scope: !12962)
!12968 = !DILocation(line: 2597, column: 20, scope: !12962)
!12969 = !DILocation(line: 2599, column: 2, scope: !12953)
!12970 = !{i32 -2140158055}
!12971 = !DILocation(line: 2601, column: 31, scope: !12953)
!12972 = !DILocation(line: 2601, column: 37, scope: !12953)
!12973 = !DILocation(line: 2601, column: 2, scope: !12953)
!12974 = !DILocation(line: 2602, column: 20, scope: !12953)
!12975 = !DILocation(line: 2602, column: 26, scope: !12953)
!12976 = !DILocation(line: 2602, column: 2, scope: !12953)
!12977 = !DILocation(line: 2603, column: 1, scope: !12953)
!12978 = distinct !DISubprogram(name: "dw_mci_read_data_pio", scope: !3, file: !3, line: 2484, type: !12979, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!12979 = !DISubroutineType(types: !12980)
!12980 = !{null, !286, !314}
!12981 = !DILocalVariable(name: "host", arg: 1, scope: !12978, file: !3, line: 2484, type: !286)
!12982 = !DILocation(line: 2484, column: 49, scope: !12978)
!12983 = !DILocalVariable(name: "dto", arg: 2, scope: !12978, file: !3, line: 2484, type: !314)
!12984 = !DILocation(line: 2484, column: 60, scope: !12978)
!12985 = !DILocalVariable(name: "sg_miter", scope: !12978, file: !3, line: 2486, type: !12986)
!12986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!12987 = !DILocation(line: 2486, column: 26, scope: !12978)
!12988 = !DILocation(line: 2486, column: 38, scope: !12978)
!12989 = !DILocation(line: 2486, column: 44, scope: !12978)
!12990 = !DILocalVariable(name: "buf", scope: !12978, file: !3, line: 2487, type: !284)
!12991 = !DILocation(line: 2487, column: 8, scope: !12978)
!12992 = !DILocalVariable(name: "offset", scope: !12978, file: !3, line: 2488, type: !7)
!12993 = !DILocation(line: 2488, column: 15, scope: !12978)
!12994 = !DILocalVariable(name: "data", scope: !12978, file: !3, line: 2489, type: !5364)
!12995 = !DILocation(line: 2489, column: 19, scope: !12978)
!12996 = !DILocation(line: 2489, column: 26, scope: !12978)
!12997 = !DILocation(line: 2489, column: 32, scope: !12978)
!12998 = !DILocalVariable(name: "shift", scope: !12978, file: !3, line: 2490, type: !446)
!12999 = !DILocation(line: 2490, column: 6, scope: !12978)
!13000 = !DILocation(line: 2490, column: 14, scope: !12978)
!13001 = !DILocation(line: 2490, column: 20, scope: !12978)
!13002 = !DILocalVariable(name: "status", scope: !12978, file: !3, line: 2491, type: !309)
!13003 = !DILocation(line: 2491, column: 6, scope: !12978)
!13004 = !DILocalVariable(name: "len", scope: !12978, file: !3, line: 2492, type: !7)
!13005 = !DILocation(line: 2492, column: 15, scope: !12978)
!13006 = !DILocalVariable(name: "remain", scope: !12978, file: !3, line: 2493, type: !7)
!13007 = !DILocation(line: 2493, column: 15, scope: !12978)
!13008 = !DILocalVariable(name: "fcnt", scope: !12978, file: !3, line: 2493, type: !7)
!13009 = !DILocation(line: 2493, column: 23, scope: !12978)
!13010 = !DILocation(line: 2495, column: 2, scope: !12978)
!13011 = !DILocation(line: 2496, column: 22, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !3, line: 2496, column: 7)
!13013 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 2495, column: 5)
!13014 = !DILocation(line: 2496, column: 8, scope: !13012)
!13015 = !DILocation(line: 2496, column: 7, scope: !13013)
!13016 = !DILocation(line: 2497, column: 4, scope: !13012)
!13017 = !DILocation(line: 2499, column: 14, scope: !13013)
!13018 = !DILocation(line: 2499, column: 24, scope: !13013)
!13019 = !DILocation(line: 2499, column: 30, scope: !13013)
!13020 = !DILocation(line: 2499, column: 3, scope: !13013)
!13021 = !DILocation(line: 2499, column: 9, scope: !13013)
!13022 = !DILocation(line: 2499, column: 12, scope: !13013)
!13023 = !DILocation(line: 2500, column: 9, scope: !13013)
!13024 = !DILocation(line: 2500, column: 19, scope: !13013)
!13025 = !DILocation(line: 2500, column: 7, scope: !13013)
!13026 = !DILocation(line: 2501, column: 12, scope: !13013)
!13027 = !DILocation(line: 2501, column: 22, scope: !13013)
!13028 = !DILocation(line: 2501, column: 10, scope: !13013)
!13029 = !DILocation(line: 2502, column: 10, scope: !13013)
!13030 = !DILocation(line: 2504, column: 3, scope: !13013)
!13031 = !DILocation(line: 2505, column: 12, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13013, file: !3, line: 2504, column: 6)
!13033 = !DILocation(line: 2506, column: 9, scope: !13032)
!13034 = !DILocation(line: 2506, column: 6, scope: !13032)
!13035 = !DILocation(line: 2506, column: 18, scope: !13032)
!13036 = !DILocation(line: 2506, column: 24, scope: !13032)
!13037 = !DILocation(line: 2506, column: 16, scope: !13032)
!13038 = !DILocation(line: 2505, column: 9, scope: !13032)
!13039 = !DILocalVariable(name: "__UNIQUE_ID___x311", scope: !13040, file: !3, line: 2507, type: !7)
!13040 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 2507, column: 10)
!13041 = !DILocation(line: 2507, column: 10, scope: !13040)
!13042 = !DILocalVariable(name: "__UNIQUE_ID___y312", scope: !13040, file: !3, line: 2507, type: !7)
!13043 = !DILocation(line: 2507, column: 8, scope: !13032)
!13044 = !DILocation(line: 2508, column: 9, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 2508, column: 8)
!13046 = !DILocation(line: 2508, column: 8, scope: !13032)
!13047 = !DILocation(line: 2509, column: 5, scope: !13045)
!13048 = !DILocation(line: 2510, column: 21, scope: !13032)
!13049 = !DILocation(line: 2510, column: 36, scope: !13032)
!13050 = !DILocation(line: 2510, column: 42, scope: !13032)
!13051 = !DILocation(line: 2510, column: 40, scope: !13032)
!13052 = !DILocation(line: 2510, column: 51, scope: !13032)
!13053 = !DILocation(line: 2510, column: 4, scope: !13032)
!13054 = !DILocation(line: 2511, column: 26, scope: !13032)
!13055 = !DILocation(line: 2511, column: 4, scope: !13032)
!13056 = !DILocation(line: 2511, column: 10, scope: !13032)
!13057 = !DILocation(line: 2511, column: 23, scope: !13032)
!13058 = !DILocation(line: 2512, column: 14, scope: !13032)
!13059 = !DILocation(line: 2512, column: 11, scope: !13032)
!13060 = !DILocation(line: 2513, column: 14, scope: !13032)
!13061 = !DILocation(line: 2513, column: 11, scope: !13032)
!13062 = !DILocation(line: 2514, column: 3, scope: !13032)
!13063 = !DILocation(line: 2514, column: 12, scope: !13013)
!13064 = distinct !{!13064, !13030, !13065}
!13065 = !DILocation(line: 2514, column: 18, scope: !13013)
!13066 = !DILocation(line: 2516, column: 24, scope: !13013)
!13067 = !DILocation(line: 2516, column: 3, scope: !13013)
!13068 = !DILocation(line: 2516, column: 13, scope: !13013)
!13069 = !DILocation(line: 2516, column: 22, scope: !13013)
!13070 = !DILocation(line: 2517, column: 12, scope: !13013)
!13071 = !DILocation(line: 2517, column: 10, scope: !13013)
!13072 = !DILocation(line: 2518, column: 3, scope: !13013)
!13073 = !DILocation(line: 2520, column: 2, scope: !13013)
!13074 = !DILocation(line: 2520, column: 12, scope: !12978)
!13075 = !DILocation(line: 2520, column: 19, scope: !12978)
!13076 = !DILocation(line: 2520, column: 37, scope: !12978)
!13077 = !DILocation(line: 2521, column: 5, scope: !12978)
!13078 = !DILocation(line: 2521, column: 9, scope: !12978)
!13079 = !DILocation(line: 2521, column: 12, scope: !12978)
!13080 = !DILocation(line: 0, scope: !12978)
!13081 = distinct !{!13081, !13010, !13082}
!13082 = !DILocation(line: 2521, column: 52, scope: !12978)
!13083 = !DILocation(line: 2523, column: 7, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 2523, column: 6)
!13085 = !DILocation(line: 2523, column: 6, scope: !12978)
!13086 = !DILocation(line: 2524, column: 22, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 2524, column: 7)
!13088 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 2523, column: 15)
!13089 = !DILocation(line: 2524, column: 8, scope: !13087)
!13090 = !DILocation(line: 2524, column: 7, scope: !13088)
!13091 = !DILocation(line: 2525, column: 4, scope: !13087)
!13092 = !DILocation(line: 2526, column: 3, scope: !13088)
!13093 = !DILocation(line: 2526, column: 13, scope: !13088)
!13094 = !DILocation(line: 2526, column: 22, scope: !13088)
!13095 = !DILocation(line: 2527, column: 2, scope: !13088)
!13096 = !DILocation(line: 2528, column: 16, scope: !12978)
!13097 = !DILocation(line: 2528, column: 2, scope: !12978)
!13098 = !DILocation(line: 2529, column: 2, scope: !12978)
!13099 = !DILabel(scope: !12978, name: "done", file: !3, line: 2531)
!13100 = !DILocation(line: 2531, column: 1, scope: !12978)
!13101 = !DILocation(line: 2532, column: 16, scope: !12978)
!13102 = !DILocation(line: 2532, column: 2, scope: !12978)
!13103 = !DILocation(line: 2533, column: 2, scope: !12978)
!13104 = !DILocation(line: 2533, column: 8, scope: !12978)
!13105 = !DILocation(line: 2533, column: 11, scope: !12978)
!13106 = !DILocation(line: 2534, column: 2, scope: !12978)
!13107 = !{i32 -2140160084}
!13108 = !DILocation(line: 2535, column: 32, scope: !12978)
!13109 = !DILocation(line: 2535, column: 38, scope: !12978)
!13110 = !DILocation(line: 2535, column: 2, scope: !12978)
!13111 = !DILocation(line: 2536, column: 1, scope: !12978)
!13112 = distinct !DISubprogram(name: "dw_mci_write_data_pio", scope: !3, file: !3, line: 2538, type: !5845, scopeLine: 2539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13113 = !DILocalVariable(name: "host", arg: 1, scope: !13112, file: !3, line: 2538, type: !286)
!13114 = !DILocation(line: 2538, column: 50, scope: !13112)
!13115 = !DILocalVariable(name: "sg_miter", scope: !13112, file: !3, line: 2540, type: !12986)
!13116 = !DILocation(line: 2540, column: 26, scope: !13112)
!13117 = !DILocation(line: 2540, column: 38, scope: !13112)
!13118 = !DILocation(line: 2540, column: 44, scope: !13112)
!13119 = !DILocalVariable(name: "buf", scope: !13112, file: !3, line: 2541, type: !284)
!13120 = !DILocation(line: 2541, column: 8, scope: !13112)
!13121 = !DILocalVariable(name: "offset", scope: !13112, file: !3, line: 2542, type: !7)
!13122 = !DILocation(line: 2542, column: 15, scope: !13112)
!13123 = !DILocalVariable(name: "data", scope: !13112, file: !3, line: 2543, type: !5364)
!13124 = !DILocation(line: 2543, column: 19, scope: !13112)
!13125 = !DILocation(line: 2543, column: 26, scope: !13112)
!13126 = !DILocation(line: 2543, column: 32, scope: !13112)
!13127 = !DILocalVariable(name: "shift", scope: !13112, file: !3, line: 2544, type: !446)
!13128 = !DILocation(line: 2544, column: 6, scope: !13112)
!13129 = !DILocation(line: 2544, column: 14, scope: !13112)
!13130 = !DILocation(line: 2544, column: 20, scope: !13112)
!13131 = !DILocalVariable(name: "status", scope: !13112, file: !3, line: 2545, type: !309)
!13132 = !DILocation(line: 2545, column: 6, scope: !13112)
!13133 = !DILocalVariable(name: "len", scope: !13112, file: !3, line: 2546, type: !7)
!13134 = !DILocation(line: 2546, column: 15, scope: !13112)
!13135 = !DILocalVariable(name: "fifo_depth", scope: !13112, file: !3, line: 2547, type: !7)
!13136 = !DILocation(line: 2547, column: 15, scope: !13112)
!13137 = !DILocation(line: 2547, column: 28, scope: !13112)
!13138 = !DILocation(line: 2547, column: 34, scope: !13112)
!13139 = !DILocalVariable(name: "remain", scope: !13112, file: !3, line: 2548, type: !7)
!13140 = !DILocation(line: 2548, column: 15, scope: !13112)
!13141 = !DILocalVariable(name: "fcnt", scope: !13112, file: !3, line: 2548, type: !7)
!13142 = !DILocation(line: 2548, column: 23, scope: !13112)
!13143 = !DILocation(line: 2550, column: 2, scope: !13112)
!13144 = !DILocation(line: 2551, column: 22, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13146, file: !3, line: 2551, column: 7)
!13146 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2550, column: 5)
!13147 = !DILocation(line: 2551, column: 8, scope: !13145)
!13148 = !DILocation(line: 2551, column: 7, scope: !13146)
!13149 = !DILocation(line: 2552, column: 4, scope: !13145)
!13150 = !DILocation(line: 2554, column: 14, scope: !13146)
!13151 = !DILocation(line: 2554, column: 24, scope: !13146)
!13152 = !DILocation(line: 2554, column: 30, scope: !13146)
!13153 = !DILocation(line: 2554, column: 3, scope: !13146)
!13154 = !DILocation(line: 2554, column: 9, scope: !13146)
!13155 = !DILocation(line: 2554, column: 12, scope: !13146)
!13156 = !DILocation(line: 2555, column: 9, scope: !13146)
!13157 = !DILocation(line: 2555, column: 19, scope: !13146)
!13158 = !DILocation(line: 2555, column: 7, scope: !13146)
!13159 = !DILocation(line: 2556, column: 12, scope: !13146)
!13160 = !DILocation(line: 2556, column: 22, scope: !13146)
!13161 = !DILocation(line: 2556, column: 10, scope: !13146)
!13162 = !DILocation(line: 2557, column: 10, scope: !13146)
!13163 = !DILocation(line: 2559, column: 3, scope: !13146)
!13164 = !DILocation(line: 2560, column: 13, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13146, file: !3, line: 2559, column: 6)
!13166 = !DILocation(line: 2561, column: 6, scope: !13165)
!13167 = !DILocation(line: 2560, column: 24, scope: !13165)
!13168 = !DILocation(line: 2562, column: 9, scope: !13165)
!13169 = !DILocation(line: 2562, column: 6, scope: !13165)
!13170 = !DILocation(line: 2562, column: 18, scope: !13165)
!13171 = !DILocation(line: 2562, column: 24, scope: !13165)
!13172 = !DILocation(line: 2562, column: 16, scope: !13165)
!13173 = !DILocation(line: 2560, column: 9, scope: !13165)
!13174 = !DILocalVariable(name: "__UNIQUE_ID___x313", scope: !13175, file: !3, line: 2563, type: !7)
!13175 = distinct !DILexicalBlock(scope: !13165, file: !3, line: 2563, column: 10)
!13176 = !DILocation(line: 2563, column: 10, scope: !13175)
!13177 = !DILocalVariable(name: "__UNIQUE_ID___y314", scope: !13175, file: !3, line: 2563, type: !7)
!13178 = !DILocation(line: 2563, column: 8, scope: !13165)
!13179 = !DILocation(line: 2564, column: 9, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13165, file: !3, line: 2564, column: 8)
!13181 = !DILocation(line: 2564, column: 8, scope: !13165)
!13182 = !DILocation(line: 2565, column: 5, scope: !13180)
!13183 = !DILocation(line: 2566, column: 4, scope: !13165)
!13184 = !DILocation(line: 2566, column: 10, scope: !13165)
!13185 = !DILocation(line: 2566, column: 20, scope: !13165)
!13186 = !DILocation(line: 2566, column: 35, scope: !13165)
!13187 = !DILocation(line: 2566, column: 41, scope: !13165)
!13188 = !DILocation(line: 2566, column: 39, scope: !13165)
!13189 = !DILocation(line: 2566, column: 50, scope: !13165)
!13190 = !DILocation(line: 2567, column: 26, scope: !13165)
!13191 = !DILocation(line: 2567, column: 4, scope: !13165)
!13192 = !DILocation(line: 2567, column: 10, scope: !13165)
!13193 = !DILocation(line: 2567, column: 23, scope: !13165)
!13194 = !DILocation(line: 2568, column: 14, scope: !13165)
!13195 = !DILocation(line: 2568, column: 11, scope: !13165)
!13196 = !DILocation(line: 2569, column: 14, scope: !13165)
!13197 = !DILocation(line: 2569, column: 11, scope: !13165)
!13198 = !DILocation(line: 2570, column: 3, scope: !13165)
!13199 = !DILocation(line: 2570, column: 12, scope: !13146)
!13200 = distinct !{!13200, !13163, !13201}
!13201 = !DILocation(line: 2570, column: 18, scope: !13146)
!13202 = !DILocation(line: 2572, column: 24, scope: !13146)
!13203 = !DILocation(line: 2572, column: 3, scope: !13146)
!13204 = !DILocation(line: 2572, column: 13, scope: !13146)
!13205 = !DILocation(line: 2572, column: 22, scope: !13146)
!13206 = !DILocation(line: 2573, column: 12, scope: !13146)
!13207 = !DILocation(line: 2573, column: 10, scope: !13146)
!13208 = !DILocation(line: 2574, column: 3, scope: !13146)
!13209 = !DILocation(line: 2575, column: 2, scope: !13146)
!13210 = !DILocation(line: 2575, column: 11, scope: !13112)
!13211 = !DILocation(line: 2575, column: 18, scope: !13112)
!13212 = distinct !{!13212, !13143, !13213}
!13213 = !DILocation(line: 2575, column: 34, scope: !13112)
!13214 = !DILocation(line: 2577, column: 7, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13112, file: !3, line: 2577, column: 6)
!13216 = !DILocation(line: 2577, column: 6, scope: !13112)
!13217 = !DILocation(line: 2578, column: 22, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13219, file: !3, line: 2578, column: 7)
!13219 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 2577, column: 15)
!13220 = !DILocation(line: 2578, column: 8, scope: !13218)
!13221 = !DILocation(line: 2578, column: 7, scope: !13219)
!13222 = !DILocation(line: 2579, column: 4, scope: !13218)
!13223 = !DILocation(line: 2580, column: 3, scope: !13219)
!13224 = !DILocation(line: 2580, column: 13, scope: !13219)
!13225 = !DILocation(line: 2580, column: 22, scope: !13219)
!13226 = !DILocation(line: 2581, column: 2, scope: !13219)
!13227 = !DILocation(line: 2582, column: 16, scope: !13112)
!13228 = !DILocation(line: 2582, column: 2, scope: !13112)
!13229 = !DILocation(line: 2583, column: 2, scope: !13112)
!13230 = !DILabel(scope: !13112, name: "done", file: !3, line: 2585)
!13231 = !DILocation(line: 2585, column: 1, scope: !13112)
!13232 = !DILocation(line: 2586, column: 16, scope: !13112)
!13233 = !DILocation(line: 2586, column: 2, scope: !13112)
!13234 = !DILocation(line: 2587, column: 2, scope: !13112)
!13235 = !DILocation(line: 2587, column: 8, scope: !13112)
!13236 = !DILocation(line: 2587, column: 11, scope: !13112)
!13237 = !DILocation(line: 2588, column: 2, scope: !13112)
!13238 = !{i32 -2140158103}
!13239 = !DILocation(line: 2589, column: 32, scope: !13112)
!13240 = !DILocation(line: 2589, column: 38, scope: !13112)
!13241 = !DILocation(line: 2589, column: 2, scope: !13112)
!13242 = !DILocation(line: 2590, column: 1, scope: !13112)
!13243 = distinct !DISubprogram(name: "dw_mci_handle_cd", scope: !3, file: !3, line: 2605, type: !5845, scopeLine: 2606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13244 = !DILocation(line: 363, column: 74, scope: !11191, inlinedAt: !13245)
!13245 = distinct !DILocation(line: 2612, column: 3, scope: !13243)
!13246 = !DILocalVariable(name: "host", arg: 1, scope: !13243, file: !3, line: 2605, type: !286)
!13247 = !DILocation(line: 2605, column: 45, scope: !13243)
!13248 = !DILocalVariable(name: "slot", scope: !13243, file: !3, line: 2607, type: !6210)
!13249 = !DILocation(line: 2607, column: 22, scope: !13243)
!13250 = !DILocation(line: 2607, column: 29, scope: !13243)
!13251 = !DILocation(line: 2607, column: 35, scope: !13243)
!13252 = !DILocation(line: 2609, column: 6, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 2609, column: 6)
!13254 = !DILocation(line: 2609, column: 12, scope: !13253)
!13255 = !DILocation(line: 2609, column: 17, scope: !13253)
!13256 = !DILocation(line: 2609, column: 22, scope: !13253)
!13257 = !DILocation(line: 2609, column: 6, scope: !13243)
!13258 = !DILocation(line: 2610, column: 3, scope: !13253)
!13259 = !DILocation(line: 2610, column: 9, scope: !13253)
!13260 = !DILocation(line: 2610, column: 14, scope: !13253)
!13261 = !DILocation(line: 2610, column: 19, scope: !13253)
!13262 = !DILocation(line: 2610, column: 30, scope: !13253)
!13263 = !DILocation(line: 2610, column: 36, scope: !13253)
!13264 = !DILocation(line: 2611, column: 20, scope: !13243)
!13265 = !DILocation(line: 2611, column: 26, scope: !13243)
!13266 = !DILocation(line: 2612, column: 20, scope: !13243)
!13267 = !DILocation(line: 2612, column: 26, scope: !13243)
!13268 = !DILocation(line: 2612, column: 33, scope: !13243)
!13269 = !DILocation(line: 365, column: 27, scope: !11311, inlinedAt: !13245)
!13270 = !DILocation(line: 365, column: 6, scope: !11311, inlinedAt: !13245)
!13271 = !DILocation(line: 365, column: 6, scope: !11191, inlinedAt: !13245)
!13272 = !DILocation(line: 366, column: 12, scope: !11315, inlinedAt: !13245)
!13273 = !DILocation(line: 366, column: 14, scope: !11315, inlinedAt: !13245)
!13274 = !DILocation(line: 366, column: 7, scope: !11316, inlinedAt: !13245)
!13275 = !DILocation(line: 367, column: 4, scope: !11315, inlinedAt: !13245)
!13276 = !DILocation(line: 368, column: 28, scope: !11316, inlinedAt: !13245)
!13277 = !DILocation(line: 368, column: 10, scope: !11316, inlinedAt: !13245)
!13278 = !DILocation(line: 368, column: 3, scope: !11316, inlinedAt: !13245)
!13279 = !DILocation(line: 370, column: 29, scope: !11324, inlinedAt: !13245)
!13280 = !DILocation(line: 370, column: 10, scope: !11324, inlinedAt: !13245)
!13281 = !DILocation(line: 370, column: 3, scope: !11324, inlinedAt: !13245)
!13282 = !DILocation(line: 372, column: 1, scope: !11191, inlinedAt: !13245)
!13283 = !DILocation(line: 2611, column: 2, scope: !13243)
!13284 = !DILocation(line: 2613, column: 1, scope: !13243)
!13285 = distinct !DISubprogram(name: "dw_mci_pull_data", scope: !3, file: !3, line: 2469, type: !6247, scopeLine: 2470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13286 = !DILocalVariable(name: "host", arg: 1, scope: !13285, file: !3, line: 2469, type: !286)
!13287 = !DILocation(line: 2469, column: 45, scope: !13285)
!13288 = !DILocalVariable(name: "buf", arg: 2, scope: !13285, file: !3, line: 2469, type: !284)
!13289 = !DILocation(line: 2469, column: 57, scope: !13285)
!13290 = !DILocalVariable(name: "cnt", arg: 3, scope: !13285, file: !3, line: 2469, type: !446)
!13291 = !DILocation(line: 2469, column: 66, scope: !13285)
!13292 = !DILocalVariable(name: "len", scope: !13285, file: !3, line: 2471, type: !446)
!13293 = !DILocation(line: 2471, column: 6, scope: !13285)
!13294 = !DILocation(line: 2474, column: 31, scope: !13285)
!13295 = !DILocation(line: 2474, column: 37, scope: !13285)
!13296 = !DILocation(line: 2474, column: 42, scope: !13285)
!13297 = !DILocation(line: 2474, column: 8, scope: !13285)
!13298 = !DILocation(line: 2474, column: 6, scope: !13285)
!13299 = !DILocation(line: 2475, column: 6, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13285, file: !3, line: 2475, column: 6)
!13301 = !DILocation(line: 2475, column: 6, scope: !13285)
!13302 = !DILocation(line: 2476, column: 3, scope: !13300)
!13303 = !DILocation(line: 2477, column: 9, scope: !13285)
!13304 = !DILocation(line: 2477, column: 6, scope: !13285)
!13305 = !DILocation(line: 2478, column: 9, scope: !13285)
!13306 = !DILocation(line: 2478, column: 6, scope: !13285)
!13307 = !DILocation(line: 2481, column: 2, scope: !13285)
!13308 = !DILocation(line: 2481, column: 8, scope: !13285)
!13309 = !DILocation(line: 2481, column: 18, scope: !13285)
!13310 = !DILocation(line: 2481, column: 24, scope: !13285)
!13311 = !DILocation(line: 2481, column: 29, scope: !13285)
!13312 = !DILocation(line: 2482, column: 1, scope: !13285)
!13313 = distinct !DISubprogram(name: "dw_mci_pull_part_bytes", scope: !3, file: !3, line: 2198, type: !9700, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13314 = !DILocalVariable(name: "host", arg: 1, scope: !13313, file: !3, line: 2198, type: !286)
!13315 = !DILocation(line: 2198, column: 50, scope: !13313)
!13316 = !DILocalVariable(name: "buf", arg: 2, scope: !13313, file: !3, line: 2198, type: !284)
!13317 = !DILocation(line: 2198, column: 62, scope: !13313)
!13318 = !DILocalVariable(name: "cnt", arg: 3, scope: !13313, file: !3, line: 2198, type: !446)
!13319 = !DILocation(line: 2198, column: 71, scope: !13313)
!13320 = !DILocalVariable(name: "__UNIQUE_ID___x309", scope: !13321, file: !3, line: 2200, type: !446)
!13321 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2200, column: 8)
!13322 = !DILocation(line: 2200, column: 8, scope: !13321)
!13323 = !DILocalVariable(name: "__UNIQUE_ID___y310", scope: !13321, file: !3, line: 2200, type: !446)
!13324 = !DILocation(line: 2200, column: 6, scope: !13313)
!13325 = !DILocation(line: 2201, column: 6, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2201, column: 6)
!13327 = !DILocation(line: 2201, column: 6, scope: !13313)
!13328 = !DILocation(line: 2202, column: 10, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 2201, column: 11)
!13330 = !DILocation(line: 2202, column: 24, scope: !13329)
!13331 = !DILocation(line: 2202, column: 30, scope: !13329)
!13332 = !DILocation(line: 2202, column: 15, scope: !13329)
!13333 = !DILocation(line: 2202, column: 41, scope: !13329)
!13334 = !DILocation(line: 2202, column: 47, scope: !13329)
!13335 = !DILocation(line: 2202, column: 39, scope: !13329)
!13336 = !DILocation(line: 2203, column: 10, scope: !13329)
!13337 = !DILocation(line: 2202, column: 3, scope: !13329)
!13338 = !DILocation(line: 2204, column: 27, scope: !13329)
!13339 = !DILocation(line: 2204, column: 3, scope: !13329)
!13340 = !DILocation(line: 2204, column: 9, scope: !13329)
!13341 = !DILocation(line: 2204, column: 24, scope: !13329)
!13342 = !DILocation(line: 2205, column: 27, scope: !13329)
!13343 = !DILocation(line: 2205, column: 3, scope: !13329)
!13344 = !DILocation(line: 2205, column: 9, scope: !13329)
!13345 = !DILocation(line: 2205, column: 24, scope: !13329)
!13346 = !DILocation(line: 2206, column: 2, scope: !13329)
!13347 = !DILocation(line: 2207, column: 9, scope: !13313)
!13348 = !DILocation(line: 2207, column: 2, scope: !13313)
!13349 = distinct !DISubprogram(name: "dw_mci_init_slot_caps", scope: !3, file: !3, line: 2744, type: !13350, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{!446, !6210}
!13352 = !DILocalVariable(name: "slot", arg: 1, scope: !13349, file: !3, line: 2744, type: !6210)
!13353 = !DILocation(line: 2744, column: 54, scope: !13349)
!13354 = !DILocalVariable(name: "host", scope: !13349, file: !3, line: 2746, type: !286)
!13355 = !DILocation(line: 2746, column: 17, scope: !13349)
!13356 = !DILocation(line: 2746, column: 24, scope: !13349)
!13357 = !DILocation(line: 2746, column: 30, scope: !13349)
!13358 = !DILocalVariable(name: "drv_data", scope: !13349, file: !3, line: 2747, type: !6194)
!13359 = !DILocation(line: 2747, column: 32, scope: !13349)
!13360 = !DILocation(line: 2747, column: 43, scope: !13349)
!13361 = !DILocation(line: 2747, column: 49, scope: !13349)
!13362 = !DILocalVariable(name: "mmc", scope: !13349, file: !3, line: 2748, type: !5393)
!13363 = !DILocation(line: 2748, column: 19, scope: !13349)
!13364 = !DILocation(line: 2748, column: 25, scope: !13349)
!13365 = !DILocation(line: 2748, column: 31, scope: !13349)
!13366 = !DILocalVariable(name: "ctrl_id", scope: !13349, file: !3, line: 2749, type: !446)
!13367 = !DILocation(line: 2749, column: 6, scope: !13349)
!13368 = !DILocation(line: 2751, column: 6, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2751, column: 6)
!13370 = !DILocation(line: 2751, column: 12, scope: !13369)
!13371 = !DILocation(line: 2751, column: 19, scope: !13369)
!13372 = !DILocation(line: 2751, column: 6, scope: !13349)
!13373 = !DILocation(line: 2752, column: 15, scope: !13369)
!13374 = !DILocation(line: 2752, column: 21, scope: !13369)
!13375 = !DILocation(line: 2752, column: 28, scope: !13369)
!13376 = !DILocation(line: 2752, column: 3, scope: !13369)
!13377 = !DILocation(line: 2752, column: 8, scope: !13369)
!13378 = !DILocation(line: 2752, column: 13, scope: !13369)
!13379 = !DILocation(line: 2754, column: 6, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2754, column: 6)
!13381 = !DILocation(line: 2754, column: 12, scope: !13380)
!13382 = !DILocation(line: 2754, column: 19, scope: !13380)
!13383 = !DILocation(line: 2754, column: 6, scope: !13349)
!13384 = !DILocation(line: 2755, column: 18, scope: !13380)
!13385 = !DILocation(line: 2755, column: 24, scope: !13380)
!13386 = !DILocation(line: 2755, column: 31, scope: !13380)
!13387 = !DILocation(line: 2755, column: 3, scope: !13380)
!13388 = !DILocation(line: 2755, column: 8, scope: !13380)
!13389 = !DILocation(line: 2755, column: 16, scope: !13380)
!13390 = !DILocation(line: 2757, column: 6, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2757, column: 6)
!13392 = !DILocation(line: 2757, column: 12, scope: !13391)
!13393 = !DILocation(line: 2757, column: 17, scope: !13391)
!13394 = !DILocation(line: 2757, column: 6, scope: !13349)
!13395 = !DILocation(line: 2758, column: 29, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2757, column: 26)
!13397 = !DILocation(line: 2758, column: 35, scope: !13396)
!13398 = !DILocation(line: 2758, column: 40, scope: !13396)
!13399 = !DILocation(line: 2758, column: 13, scope: !13396)
!13400 = !DILocation(line: 2758, column: 11, scope: !13396)
!13401 = !DILocation(line: 2759, column: 7, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13396, file: !3, line: 2759, column: 7)
!13403 = !DILocation(line: 2759, column: 15, scope: !13402)
!13404 = !DILocation(line: 2759, column: 7, scope: !13396)
!13405 = !DILocation(line: 2760, column: 12, scope: !13402)
!13406 = !DILocation(line: 2760, column: 4, scope: !13402)
!13407 = !DILocation(line: 2761, column: 2, scope: !13396)
!13408 = !DILocalVariable(name: "__mptr", scope: !13409, file: !3, line: 2762, type: !284)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !3, line: 2762, column: 13)
!13410 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 2761, column: 9)
!13411 = !DILocation(line: 2762, column: 13, scope: !13409)
!13412 = !DILocation(line: 2762, column: 13, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13409, file: !3, line: 2762, column: 13)
!13414 = !DILocation(line: 2762, column: 44, scope: !13410)
!13415 = !DILocation(line: 2762, column: 11, scope: !13410)
!13416 = !DILocation(line: 2765, column: 6, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2765, column: 6)
!13418 = !DILocation(line: 2765, column: 15, scope: !13417)
!13419 = !DILocation(line: 2765, column: 18, scope: !13417)
!13420 = !DILocation(line: 2765, column: 28, scope: !13417)
!13421 = !DILocation(line: 2765, column: 6, scope: !13349)
!13422 = !DILocation(line: 2766, column: 7, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !3, line: 2766, column: 7)
!13424 = distinct !DILexicalBlock(scope: !13417, file: !3, line: 2765, column: 34)
!13425 = !DILocation(line: 2766, column: 18, scope: !13423)
!13426 = !DILocation(line: 2766, column: 28, scope: !13423)
!13427 = !DILocation(line: 2766, column: 15, scope: !13423)
!13428 = !DILocation(line: 2766, column: 7, scope: !13424)
!13429 = !DILocation(line: 2767, column: 4, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13423, file: !3, line: 2766, column: 38)
!13431 = !DILocation(line: 2769, column: 4, scope: !13430)
!13432 = !DILocation(line: 2771, column: 16, scope: !13424)
!13433 = !DILocation(line: 2771, column: 26, scope: !13424)
!13434 = !DILocation(line: 2771, column: 31, scope: !13424)
!13435 = !DILocation(line: 2771, column: 3, scope: !13424)
!13436 = !DILocation(line: 2771, column: 8, scope: !13424)
!13437 = !DILocation(line: 2771, column: 13, scope: !13424)
!13438 = !DILocation(line: 2772, column: 2, scope: !13424)
!13439 = !DILocation(line: 2774, column: 6, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2774, column: 6)
!13441 = !DILocation(line: 2774, column: 12, scope: !13440)
!13442 = !DILocation(line: 2774, column: 19, scope: !13440)
!13443 = !DILocation(line: 2774, column: 6, scope: !13349)
!13444 = !DILocation(line: 2775, column: 16, scope: !13440)
!13445 = !DILocation(line: 2775, column: 22, scope: !13440)
!13446 = !DILocation(line: 2775, column: 29, scope: !13440)
!13447 = !DILocation(line: 2775, column: 3, scope: !13440)
!13448 = !DILocation(line: 2775, column: 8, scope: !13440)
!13449 = !DILocation(line: 2775, column: 14, scope: !13440)
!13450 = !DILocation(line: 2777, column: 2, scope: !13349)
!13451 = !DILocation(line: 2777, column: 7, scope: !13349)
!13452 = !DILocation(line: 2777, column: 13, scope: !13349)
!13453 = !DILocation(line: 2778, column: 7, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2778, column: 6)
!13455 = !DILocation(line: 2778, column: 12, scope: !13454)
!13456 = !DILocation(line: 2778, column: 6, scope: !13349)
!13457 = !DILocation(line: 2779, column: 3, scope: !13454)
!13458 = !DILocation(line: 2779, column: 8, scope: !13454)
!13459 = !DILocation(line: 2779, column: 14, scope: !13454)
!13460 = !DILocation(line: 2782, column: 6, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13349, file: !3, line: 2782, column: 6)
!13462 = !DILocation(line: 2782, column: 11, scope: !13461)
!13463 = !DILocation(line: 2782, column: 16, scope: !13461)
!13464 = !DILocation(line: 2782, column: 6, scope: !13349)
!13465 = !DILocation(line: 2783, column: 3, scope: !13461)
!13466 = !DILocation(line: 2783, column: 8, scope: !13461)
!13467 = !DILocation(line: 2783, column: 14, scope: !13461)
!13468 = !DILocation(line: 2785, column: 2, scope: !13349)
!13469 = !DILocation(line: 2786, column: 1, scope: !13349)
!13470 = distinct !DISubprogram(name: "dw_mci_get_cd", scope: !3, file: !3, line: 943, type: !5438, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13471 = !DILocalVariable(name: "mmc", arg: 1, scope: !13470, file: !3, line: 943, type: !5393)
!13472 = !DILocation(line: 943, column: 43, scope: !13470)
!13473 = !DILocalVariable(name: "present", scope: !13470, file: !3, line: 945, type: !446)
!13474 = !DILocation(line: 945, column: 6, scope: !13470)
!13475 = !DILocalVariable(name: "slot", scope: !13470, file: !3, line: 946, type: !6210)
!13476 = !DILocation(line: 946, column: 22, scope: !13470)
!13477 = !DILocation(line: 946, column: 38, scope: !13470)
!13478 = !DILocation(line: 946, column: 29, scope: !13470)
!13479 = !DILocalVariable(name: "host", scope: !13470, file: !3, line: 947, type: !286)
!13480 = !DILocation(line: 947, column: 17, scope: !13470)
!13481 = !DILocation(line: 947, column: 24, scope: !13470)
!13482 = !DILocation(line: 947, column: 30, scope: !13470)
!13483 = !DILocalVariable(name: "gpio_cd", scope: !13470, file: !3, line: 948, type: !446)
!13484 = !DILocation(line: 948, column: 6, scope: !13470)
!13485 = !DILocation(line: 948, column: 32, scope: !13470)
!13486 = !DILocation(line: 948, column: 16, scope: !13470)
!13487 = !DILocation(line: 951, column: 8, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 951, column: 6)
!13489 = !DILocation(line: 951, column: 13, scope: !13488)
!13490 = !DILocation(line: 951, column: 18, scope: !13488)
!13491 = !DILocation(line: 952, column: 5, scope: !13488)
!13492 = !DILocation(line: 952, column: 31, scope: !13488)
!13493 = !DILocation(line: 952, column: 9, scope: !13488)
!13494 = !DILocation(line: 951, column: 6, scope: !13470)
!13495 = !DILocation(line: 953, column: 11, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 952, column: 38)
!13497 = !DILocation(line: 955, column: 39, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13496, file: !3, line: 955, column: 7)
!13499 = !DILocation(line: 955, column: 45, scope: !13498)
!13500 = !DILocation(line: 955, column: 8, scope: !13498)
!13501 = !DILocation(line: 955, column: 7, scope: !13496)
!13502 = !DILocation(line: 956, column: 8, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13504, file: !3, line: 956, column: 8)
!13504 = distinct !DILexicalBlock(scope: !13498, file: !3, line: 955, column: 53)
!13505 = !DILocation(line: 956, column: 13, scope: !13503)
!13506 = !DILocation(line: 956, column: 18, scope: !13503)
!13507 = !DILocation(line: 956, column: 8, scope: !13504)
!13508 = !DILocation(line: 957, column: 5, scope: !13509)
!13509 = distinct !DILexicalBlock(scope: !13503, file: !3, line: 956, column: 40)
!13510 = !DILocation(line: 959, column: 4, scope: !13509)
!13511 = !DILocation(line: 960, column: 5, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13503, file: !3, line: 959, column: 11)
!13513 = !DILocation(line: 963, column: 34, scope: !13504)
!13514 = !DILocation(line: 963, column: 40, scope: !13504)
!13515 = !DILocation(line: 963, column: 4, scope: !13504)
!13516 = !DILocation(line: 964, column: 3, scope: !13504)
!13517 = !DILocation(line: 966, column: 10, scope: !13496)
!13518 = !DILocation(line: 966, column: 3, scope: !13496)
!13519 = !DILocation(line: 967, column: 13, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 967, column: 13)
!13521 = !DILocation(line: 967, column: 21, scope: !13520)
!13522 = !DILocation(line: 967, column: 13, scope: !13488)
!13523 = !DILocation(line: 968, column: 13, scope: !13520)
!13524 = !DILocation(line: 968, column: 11, scope: !13520)
!13525 = !DILocation(line: 968, column: 3, scope: !13520)
!13526 = !DILocation(line: 970, column: 14, scope: !13520)
!13527 = !DILocation(line: 970, column: 53, scope: !13520)
!13528 = !DILocation(line: 970, column: 59, scope: !13520)
!13529 = !DILocation(line: 970, column: 50, scope: !13520)
!13530 = !DILocation(line: 970, column: 45, scope: !13520)
!13531 = !DILocation(line: 971, column: 4, scope: !13520)
!13532 = !DILocation(line: 970, column: 13, scope: !13520)
!13533 = !DILocation(line: 970, column: 11, scope: !13520)
!13534 = !DILocation(line: 973, column: 16, scope: !13470)
!13535 = !DILocation(line: 973, column: 22, scope: !13470)
!13536 = !DILocation(line: 973, column: 2, scope: !13470)
!13537 = !DILocation(line: 974, column: 6, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 974, column: 6)
!13539 = !DILocation(line: 974, column: 14, scope: !13538)
!13540 = !DILocation(line: 974, column: 57, scope: !13538)
!13541 = !DILocation(line: 974, column: 63, scope: !13538)
!13542 = !DILocation(line: 974, column: 18, scope: !13538)
!13543 = !DILocation(line: 974, column: 6, scope: !13470)
!13544 = !DILocation(line: 975, column: 3, scope: !13538)
!13545 = !DILocation(line: 976, column: 12, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13538, file: !3, line: 976, column: 11)
!13547 = !DILocation(line: 976, column: 20, scope: !13546)
!13548 = !DILocation(line: 977, column: 46, scope: !13546)
!13549 = !DILocation(line: 977, column: 52, scope: !13546)
!13550 = !DILocation(line: 977, column: 5, scope: !13546)
!13551 = !DILocation(line: 976, column: 11, scope: !13538)
!13552 = !DILocation(line: 978, column: 3, scope: !13546)
!13553 = !DILocation(line: 979, column: 18, scope: !13470)
!13554 = !DILocation(line: 979, column: 24, scope: !13470)
!13555 = !DILocation(line: 979, column: 2, scope: !13470)
!13556 = !DILocation(line: 981, column: 9, scope: !13470)
!13557 = !DILocation(line: 981, column: 2, scope: !13470)
!13558 = !DILocation(line: 982, column: 1, scope: !13470)
!13559 = distinct !DISubprogram(name: "dw_mci_post_req", scope: !3, file: !3, line: 925, type: !5407, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13560 = !DILocalVariable(name: "mmc", arg: 1, scope: !13559, file: !3, line: 925, type: !5393)
!13561 = !DILocation(line: 925, column: 46, scope: !13559)
!13562 = !DILocalVariable(name: "mrq", arg: 2, scope: !13559, file: !3, line: 926, type: !5347)
!13563 = !DILocation(line: 926, column: 28, scope: !13559)
!13564 = !DILocalVariable(name: "err", arg: 3, scope: !13559, file: !3, line: 927, type: !446)
!13565 = !DILocation(line: 927, column: 12, scope: !13559)
!13566 = !DILocalVariable(name: "slot", scope: !13559, file: !3, line: 929, type: !6210)
!13567 = !DILocation(line: 929, column: 22, scope: !13559)
!13568 = !DILocation(line: 929, column: 38, scope: !13559)
!13569 = !DILocation(line: 929, column: 29, scope: !13559)
!13570 = !DILocalVariable(name: "data", scope: !13559, file: !3, line: 930, type: !5364)
!13571 = !DILocation(line: 930, column: 19, scope: !13559)
!13572 = !DILocation(line: 930, column: 26, scope: !13559)
!13573 = !DILocation(line: 930, column: 31, scope: !13559)
!13574 = !DILocation(line: 932, column: 7, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 932, column: 6)
!13576 = !DILocation(line: 932, column: 13, scope: !13575)
!13577 = !DILocation(line: 932, column: 19, scope: !13575)
!13578 = !DILocation(line: 932, column: 27, scope: !13575)
!13579 = !DILocation(line: 932, column: 31, scope: !13575)
!13580 = !DILocation(line: 932, column: 6, scope: !13559)
!13581 = !DILocation(line: 933, column: 3, scope: !13575)
!13582 = !DILocation(line: 935, column: 6, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 935, column: 6)
!13584 = !DILocation(line: 935, column: 12, scope: !13583)
!13585 = !DILocation(line: 935, column: 24, scope: !13583)
!13586 = !DILocation(line: 935, column: 6, scope: !13559)
!13587 = !DILocation(line: 936, column: 3, scope: !13583)
!13588 = !DILocation(line: 940, column: 2, scope: !13559)
!13589 = !DILocation(line: 940, column: 8, scope: !13559)
!13590 = !DILocation(line: 940, column: 20, scope: !13559)
!13591 = !DILocation(line: 941, column: 1, scope: !13559)
!13592 = distinct !DISubprogram(name: "dw_mci_pre_req", scope: !3, file: !3, line: 908, type: !5411, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13593 = !DILocalVariable(name: "mmc", arg: 1, scope: !13592, file: !3, line: 908, type: !5393)
!13594 = !DILocation(line: 908, column: 45, scope: !13592)
!13595 = !DILocalVariable(name: "mrq", arg: 2, scope: !13592, file: !3, line: 909, type: !5347)
!13596 = !DILocation(line: 909, column: 27, scope: !13592)
!13597 = !DILocalVariable(name: "slot", scope: !13592, file: !3, line: 911, type: !6210)
!13598 = !DILocation(line: 911, column: 22, scope: !13592)
!13599 = !DILocation(line: 911, column: 38, scope: !13592)
!13600 = !DILocation(line: 911, column: 29, scope: !13592)
!13601 = !DILocalVariable(name: "data", scope: !13592, file: !3, line: 912, type: !5364)
!13602 = !DILocation(line: 912, column: 19, scope: !13592)
!13603 = !DILocation(line: 912, column: 26, scope: !13592)
!13604 = !DILocation(line: 912, column: 31, scope: !13592)
!13605 = !DILocation(line: 914, column: 7, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 914, column: 6)
!13607 = !DILocation(line: 914, column: 13, scope: !13606)
!13608 = !DILocation(line: 914, column: 19, scope: !13606)
!13609 = !DILocation(line: 914, column: 27, scope: !13606)
!13610 = !DILocation(line: 914, column: 31, scope: !13606)
!13611 = !DILocation(line: 914, column: 6, scope: !13592)
!13612 = !DILocation(line: 915, column: 3, scope: !13606)
!13613 = !DILocation(line: 918, column: 2, scope: !13592)
!13614 = !DILocation(line: 918, column: 8, scope: !13592)
!13615 = !DILocation(line: 918, column: 20, scope: !13592)
!13616 = !DILocation(line: 920, column: 30, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 920, column: 6)
!13618 = !DILocation(line: 920, column: 36, scope: !13617)
!13619 = !DILocation(line: 920, column: 42, scope: !13617)
!13620 = !DILocation(line: 920, column: 47, scope: !13617)
!13621 = !DILocation(line: 920, column: 6, scope: !13617)
!13622 = !DILocation(line: 921, column: 24, scope: !13617)
!13623 = !DILocation(line: 920, column: 6, scope: !13592)
!13624 = !DILocation(line: 922, column: 3, scope: !13617)
!13625 = !DILocation(line: 922, column: 9, scope: !13617)
!13626 = !DILocation(line: 922, column: 21, scope: !13617)
!13627 = !DILocation(line: 923, column: 1, scope: !13592)
!13628 = distinct !DISubprogram(name: "dw_mci_request", scope: !3, file: !3, line: 1379, type: !5411, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13629 = !DILocalVariable(name: "mmc", arg: 1, scope: !13628, file: !3, line: 1379, type: !5393)
!13630 = !DILocation(line: 1379, column: 45, scope: !13628)
!13631 = !DILocalVariable(name: "mrq", arg: 2, scope: !13628, file: !3, line: 1379, type: !5347)
!13632 = !DILocation(line: 1379, column: 70, scope: !13628)
!13633 = !DILocalVariable(name: "slot", scope: !13628, file: !3, line: 1381, type: !6210)
!13634 = !DILocation(line: 1381, column: 22, scope: !13628)
!13635 = !DILocation(line: 1381, column: 38, scope: !13628)
!13636 = !DILocation(line: 1381, column: 29, scope: !13628)
!13637 = !DILocalVariable(name: "host", scope: !13628, file: !3, line: 1382, type: !286)
!13638 = !DILocation(line: 1382, column: 17, scope: !13628)
!13639 = !DILocation(line: 1382, column: 24, scope: !13628)
!13640 = !DILocation(line: 1382, column: 30, scope: !13628)
!13641 = !DILocalVariable(name: "__ret_warn_on", scope: !13642, file: !3, line: 1384, type: !446)
!13642 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 1384, column: 2)
!13643 = !DILocation(line: 1384, column: 2, scope: !13642)
!13644 = !DILocation(line: 1384, column: 2, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 1384, column: 2)
!13646 = !DILocation(line: 1384, column: 2, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13645, file: !3, line: 1384, column: 2)
!13648 = !DILocation(line: 1384, column: 2, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 1384, column: 2)
!13650 = !DILocation(line: 1384, column: 2, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 1384, column: 2)
!13652 = !{i32 -2140186498, i32 -2140186469, i32 -2140186423, i32 -2140186365, i32 -2140186311, i32 -2140186257, i32 -2140186202, i32 -2140186171}
!13653 = !DILocation(line: 1384, column: 2, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 1384, column: 2)
!13655 = !{i32 -2140185763, i32 -2140185756, i32 -2140185704, i32 -2140185673, i32 -2140185643}
!13656 = !DILocation(line: 1384, column: 2, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 1384, column: 2)
!13658 = !DILocation(line: 1392, column: 21, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 1392, column: 6)
!13660 = !DILocation(line: 1392, column: 7, scope: !13659)
!13661 = !DILocation(line: 1392, column: 6, scope: !13628)
!13662 = !DILocation(line: 1393, column: 3, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 1392, column: 27)
!13664 = !DILocation(line: 1393, column: 8, scope: !13663)
!13665 = !DILocation(line: 1393, column: 13, scope: !13663)
!13666 = !DILocation(line: 1393, column: 19, scope: !13663)
!13667 = !DILocation(line: 1394, column: 20, scope: !13663)
!13668 = !DILocation(line: 1394, column: 25, scope: !13663)
!13669 = !DILocation(line: 1394, column: 3, scope: !13663)
!13670 = !DILocation(line: 1395, column: 3, scope: !13663)
!13671 = !DILocation(line: 1398, column: 16, scope: !13628)
!13672 = !DILocation(line: 1398, column: 22, scope: !13628)
!13673 = !DILocation(line: 1398, column: 2, scope: !13628)
!13674 = !DILocation(line: 1400, column: 23, scope: !13628)
!13675 = !DILocation(line: 1400, column: 29, scope: !13628)
!13676 = !DILocation(line: 1400, column: 35, scope: !13628)
!13677 = !DILocation(line: 1400, column: 2, scope: !13628)
!13678 = !DILocation(line: 1402, column: 18, scope: !13628)
!13679 = !DILocation(line: 1402, column: 24, scope: !13628)
!13680 = !DILocation(line: 1402, column: 2, scope: !13628)
!13681 = !DILocation(line: 1403, column: 1, scope: !13628)
!13682 = distinct !DISubprogram(name: "dw_mci_get_ro", scope: !3, file: !3, line: 1561, type: !5438, scopeLine: 1562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13683 = !DILocalVariable(name: "mmc", arg: 1, scope: !13682, file: !3, line: 1561, type: !5393)
!13684 = !DILocation(line: 1561, column: 43, scope: !13682)
!13685 = !DILocalVariable(name: "read_only", scope: !13682, file: !3, line: 1563, type: !446)
!13686 = !DILocation(line: 1563, column: 6, scope: !13682)
!13687 = !DILocalVariable(name: "slot", scope: !13682, file: !3, line: 1564, type: !6210)
!13688 = !DILocation(line: 1564, column: 22, scope: !13682)
!13689 = !DILocation(line: 1564, column: 38, scope: !13682)
!13690 = !DILocation(line: 1564, column: 29, scope: !13682)
!13691 = !DILocalVariable(name: "gpio_ro", scope: !13682, file: !3, line: 1565, type: !446)
!13692 = !DILocation(line: 1565, column: 6, scope: !13682)
!13693 = !DILocation(line: 1565, column: 32, scope: !13682)
!13694 = !DILocation(line: 1565, column: 16, scope: !13682)
!13695 = !DILocation(line: 1568, column: 6, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 1568, column: 6)
!13697 = !DILocation(line: 1568, column: 14, scope: !13696)
!13698 = !DILocation(line: 1568, column: 6, scope: !13682)
!13699 = !DILocation(line: 1569, column: 15, scope: !13696)
!13700 = !DILocation(line: 1569, column: 13, scope: !13696)
!13701 = !DILocation(line: 1569, column: 3, scope: !13696)
!13702 = !DILocation(line: 1572, column: 4, scope: !13696)
!13703 = !DILocation(line: 1572, column: 42, scope: !13696)
!13704 = !DILocation(line: 1572, column: 48, scope: !13696)
!13705 = !DILocation(line: 1572, column: 39, scope: !13696)
!13706 = !DILocation(line: 1572, column: 34, scope: !13696)
!13707 = !DILocation(line: 1571, column: 13, scope: !13696)
!13708 = !DILocation(line: 1577, column: 9, scope: !13682)
!13709 = !DILocation(line: 1577, column: 2, scope: !13682)
!13710 = distinct !DISubprogram(name: "dw_mci_enable_sdio_irq", scope: !3, file: !3, line: 1661, type: !5443, scopeLine: 1662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13711 = !DILocalVariable(name: "mmc", arg: 1, scope: !13710, file: !3, line: 1661, type: !5393)
!13712 = !DILocation(line: 1661, column: 53, scope: !13710)
!13713 = !DILocalVariable(name: "enb", arg: 2, scope: !13710, file: !3, line: 1661, type: !446)
!13714 = !DILocation(line: 1661, column: 62, scope: !13710)
!13715 = !DILocalVariable(name: "slot", scope: !13710, file: !3, line: 1663, type: !6210)
!13716 = !DILocation(line: 1663, column: 22, scope: !13710)
!13717 = !DILocation(line: 1663, column: 38, scope: !13710)
!13718 = !DILocation(line: 1663, column: 29, scope: !13710)
!13719 = !DILocalVariable(name: "host", scope: !13710, file: !3, line: 1664, type: !286)
!13720 = !DILocation(line: 1664, column: 17, scope: !13710)
!13721 = !DILocation(line: 1664, column: 24, scope: !13710)
!13722 = !DILocation(line: 1664, column: 30, scope: !13710)
!13723 = !DILocation(line: 1666, column: 27, scope: !13710)
!13724 = !DILocation(line: 1666, column: 33, scope: !13710)
!13725 = !DILocation(line: 1666, column: 2, scope: !13710)
!13726 = !DILocation(line: 1669, column: 6, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 1669, column: 6)
!13728 = !DILocation(line: 1669, column: 6, scope: !13710)
!13729 = !DILocation(line: 1670, column: 27, scope: !13727)
!13730 = !DILocation(line: 1670, column: 33, scope: !13727)
!13731 = !DILocation(line: 1670, column: 3, scope: !13727)
!13732 = !DILocation(line: 1672, column: 25, scope: !13727)
!13733 = !DILocation(line: 1672, column: 31, scope: !13727)
!13734 = !DILocation(line: 1672, column: 3, scope: !13727)
!13735 = !DILocation(line: 1673, column: 1, scope: !13710)
!13736 = distinct !DISubprogram(name: "dw_mci_ack_sdio_irq", scope: !3, file: !3, line: 1675, type: !5447, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13737 = !DILocalVariable(name: "mmc", arg: 1, scope: !13736, file: !3, line: 1675, type: !5393)
!13738 = !DILocation(line: 1675, column: 50, scope: !13736)
!13739 = !DILocalVariable(name: "slot", scope: !13736, file: !3, line: 1677, type: !6210)
!13740 = !DILocation(line: 1677, column: 22, scope: !13736)
!13741 = !DILocation(line: 1677, column: 38, scope: !13736)
!13742 = !DILocation(line: 1677, column: 29, scope: !13736)
!13743 = !DILocation(line: 1679, column: 27, scope: !13736)
!13744 = !DILocation(line: 1679, column: 2, scope: !13736)
!13745 = !DILocation(line: 1680, column: 1, scope: !13736)
!13746 = distinct !DISubprogram(name: "dw_mci_init_card", scope: !3, file: !3, line: 1608, type: !5451, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13747 = !DILocalVariable(name: "mmc", arg: 1, scope: !13746, file: !3, line: 1608, type: !5393)
!13748 = !DILocation(line: 1608, column: 47, scope: !13746)
!13749 = !DILocalVariable(name: "card", arg: 2, scope: !13746, file: !3, line: 1608, type: !5453)
!13750 = !DILocation(line: 1608, column: 69, scope: !13746)
!13751 = !DILocalVariable(name: "slot", scope: !13746, file: !3, line: 1610, type: !6210)
!13752 = !DILocation(line: 1610, column: 22, scope: !13746)
!13753 = !DILocation(line: 1610, column: 38, scope: !13746)
!13754 = !DILocation(line: 1610, column: 29, scope: !13746)
!13755 = !DILocalVariable(name: "host", scope: !13746, file: !3, line: 1611, type: !286)
!13756 = !DILocation(line: 1611, column: 17, scope: !13746)
!13757 = !DILocation(line: 1611, column: 24, scope: !13746)
!13758 = !DILocation(line: 1611, column: 30, scope: !13746)
!13759 = !DILocation(line: 1618, column: 6, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13746, file: !3, line: 1618, column: 6)
!13761 = !DILocation(line: 1618, column: 11, scope: !13760)
!13762 = !DILocation(line: 1618, column: 16, scope: !13760)
!13763 = !DILocation(line: 1618, column: 6, scope: !13746)
!13764 = !DILocalVariable(name: "clken_low_pwr", scope: !13765, file: !3, line: 1619, type: !2801)
!13765 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 1618, column: 36)
!13766 = !DILocation(line: 1619, column: 13, scope: !13765)
!13767 = !DILocation(line: 1619, column: 52, scope: !13765)
!13768 = !DILocation(line: 1619, column: 58, scope: !13765)
!13769 = !DILocation(line: 1619, column: 49, scope: !13765)
!13770 = !DILocation(line: 1619, column: 29, scope: !13765)
!13771 = !DILocalVariable(name: "clk_en_a_old", scope: !13765, file: !3, line: 1620, type: !309)
!13772 = !DILocation(line: 1620, column: 7, scope: !13765)
!13773 = !DILocalVariable(name: "clk_en_a", scope: !13765, file: !3, line: 1621, type: !309)
!13774 = !DILocation(line: 1621, column: 7, scope: !13765)
!13775 = !DILocation(line: 1623, column: 18, scope: !13765)
!13776 = !DILocation(line: 1623, column: 16, scope: !13765)
!13777 = !DILocation(line: 1625, column: 7, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 1625, column: 7)
!13779 = !DILocation(line: 1625, column: 13, scope: !13778)
!13780 = !DILocation(line: 1625, column: 18, scope: !13778)
!13781 = !DILocation(line: 1625, column: 35, scope: !13778)
!13782 = !DILocation(line: 1626, column: 7, scope: !13778)
!13783 = !DILocation(line: 1626, column: 13, scope: !13778)
!13784 = !DILocation(line: 1626, column: 18, scope: !13778)
!13785 = !DILocation(line: 1625, column: 7, scope: !13765)
!13786 = !DILocation(line: 1627, column: 37, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13778, file: !3, line: 1626, column: 40)
!13788 = !DILocation(line: 1627, column: 43, scope: !13787)
!13789 = !DILocation(line: 1627, column: 4, scope: !13787)
!13790 = !DILocation(line: 1628, column: 15, scope: !13787)
!13791 = !DILocation(line: 1628, column: 31, scope: !13787)
!13792 = !DILocation(line: 1628, column: 30, scope: !13787)
!13793 = !DILocation(line: 1628, column: 28, scope: !13787)
!13794 = !DILocation(line: 1628, column: 13, scope: !13787)
!13795 = !DILocation(line: 1629, column: 3, scope: !13787)
!13796 = !DILocation(line: 1630, column: 39, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13778, file: !3, line: 1629, column: 10)
!13798 = !DILocation(line: 1630, column: 45, scope: !13797)
!13799 = !DILocation(line: 1630, column: 4, scope: !13797)
!13800 = !DILocation(line: 1631, column: 15, scope: !13797)
!13801 = !DILocation(line: 1631, column: 30, scope: !13797)
!13802 = !DILocation(line: 1631, column: 28, scope: !13797)
!13803 = !DILocation(line: 1631, column: 13, scope: !13797)
!13804 = !DILocation(line: 1634, column: 7, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13765, file: !3, line: 1634, column: 7)
!13806 = !DILocation(line: 1634, column: 19, scope: !13805)
!13807 = !DILocation(line: 1634, column: 16, scope: !13805)
!13808 = !DILocation(line: 1634, column: 7, scope: !13765)
!13809 = !DILocation(line: 1635, column: 4, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13805, file: !3, line: 1634, column: 33)
!13811 = !DILocation(line: 1636, column: 17, scope: !13810)
!13812 = !DILocation(line: 1636, column: 4, scope: !13810)
!13813 = !DILocation(line: 1638, column: 3, scope: !13810)
!13814 = !DILocation(line: 1639, column: 2, scope: !13765)
!13815 = !DILocation(line: 1640, column: 1, scope: !13746)
!13816 = distinct !DISubprogram(name: "dw_mci_switch_voltage", scope: !3, file: !3, line: 1524, type: !5666, scopeLine: 1525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13817 = !DILocalVariable(name: "mmc", arg: 1, scope: !13816, file: !3, line: 1524, type: !5393)
!13818 = !DILocation(line: 1524, column: 51, scope: !13816)
!13819 = !DILocalVariable(name: "ios", arg: 2, scope: !13816, file: !3, line: 1524, type: !5422)
!13820 = !DILocation(line: 1524, column: 72, scope: !13816)
!13821 = !DILocalVariable(name: "slot", scope: !13816, file: !3, line: 1526, type: !6210)
!13822 = !DILocation(line: 1526, column: 22, scope: !13816)
!13823 = !DILocation(line: 1526, column: 38, scope: !13816)
!13824 = !DILocation(line: 1526, column: 29, scope: !13816)
!13825 = !DILocalVariable(name: "host", scope: !13816, file: !3, line: 1527, type: !286)
!13826 = !DILocation(line: 1527, column: 17, scope: !13816)
!13827 = !DILocation(line: 1527, column: 24, scope: !13816)
!13828 = !DILocation(line: 1527, column: 30, scope: !13816)
!13829 = !DILocalVariable(name: "drv_data", scope: !13816, file: !3, line: 1528, type: !6194)
!13830 = !DILocation(line: 1528, column: 32, scope: !13816)
!13831 = !DILocation(line: 1528, column: 43, scope: !13816)
!13832 = !DILocation(line: 1528, column: 49, scope: !13816)
!13833 = !DILocalVariable(name: "uhs", scope: !13816, file: !3, line: 1529, type: !309)
!13834 = !DILocation(line: 1529, column: 6, scope: !13816)
!13835 = !DILocalVariable(name: "v18", scope: !13816, file: !3, line: 1530, type: !309)
!13836 = !DILocation(line: 1530, column: 6, scope: !13816)
!13837 = !DILocation(line: 1530, column: 29, scope: !13816)
!13838 = !DILocation(line: 1530, column: 35, scope: !13816)
!13839 = !DILocation(line: 1530, column: 26, scope: !13816)
!13840 = !DILocation(line: 1530, column: 12, scope: !13816)
!13841 = !DILocalVariable(name: "ret", scope: !13816, file: !3, line: 1531, type: !446)
!13842 = !DILocation(line: 1531, column: 6, scope: !13816)
!13843 = !DILocation(line: 1533, column: 6, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1533, column: 6)
!13845 = !DILocation(line: 1533, column: 15, scope: !13844)
!13846 = !DILocation(line: 1533, column: 18, scope: !13844)
!13847 = !DILocation(line: 1533, column: 28, scope: !13844)
!13848 = !DILocation(line: 1533, column: 6, scope: !13816)
!13849 = !DILocation(line: 1534, column: 10, scope: !13844)
!13850 = !DILocation(line: 1534, column: 20, scope: !13844)
!13851 = !DILocation(line: 1534, column: 35, scope: !13844)
!13852 = !DILocation(line: 1534, column: 40, scope: !13844)
!13853 = !DILocation(line: 1534, column: 3, scope: !13844)
!13854 = !DILocation(line: 1541, column: 8, scope: !13816)
!13855 = !DILocation(line: 1541, column: 6, scope: !13816)
!13856 = !DILocation(line: 1542, column: 6, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1542, column: 6)
!13858 = !DILocation(line: 1542, column: 11, scope: !13857)
!13859 = !DILocation(line: 1542, column: 26, scope: !13857)
!13860 = !DILocation(line: 1542, column: 6, scope: !13816)
!13861 = !DILocation(line: 1543, column: 11, scope: !13857)
!13862 = !DILocation(line: 1543, column: 10, scope: !13857)
!13863 = !DILocation(line: 1543, column: 7, scope: !13857)
!13864 = !DILocation(line: 1543, column: 3, scope: !13857)
!13865 = !DILocation(line: 1545, column: 10, scope: !13857)
!13866 = !DILocation(line: 1545, column: 7, scope: !13857)
!13867 = !DILocation(line: 1547, column: 14, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 1547, column: 6)
!13869 = !DILocation(line: 1547, column: 19, scope: !13868)
!13870 = !DILocation(line: 1547, column: 26, scope: !13868)
!13871 = !DILocation(line: 1547, column: 7, scope: !13868)
!13872 = !DILocation(line: 1547, column: 6, scope: !13816)
!13873 = !DILocation(line: 1548, column: 33, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13868, file: !3, line: 1547, column: 34)
!13875 = !DILocation(line: 1548, column: 38, scope: !13874)
!13876 = !DILocation(line: 1548, column: 9, scope: !13874)
!13877 = !DILocation(line: 1548, column: 7, scope: !13874)
!13878 = !DILocation(line: 1549, column: 7, scope: !13879)
!13879 = distinct !DILexicalBlock(scope: !13874, file: !3, line: 1549, column: 7)
!13880 = !DILocation(line: 1549, column: 11, scope: !13879)
!13881 = !DILocation(line: 1549, column: 7, scope: !13874)
!13882 = !DILocation(line: 1553, column: 11, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13879, file: !3, line: 1549, column: 16)
!13884 = !DILocation(line: 1553, column: 4, scope: !13883)
!13885 = !DILocation(line: 1555, column: 2, scope: !13874)
!13886 = !DILocation(line: 1556, column: 2, scope: !13816)
!13887 = !DILocation(line: 1558, column: 2, scope: !13816)
!13888 = !DILocation(line: 1559, column: 1, scope: !13816)
!13889 = distinct !DISubprogram(name: "dw_mci_card_busy", scope: !3, file: !3, line: 1510, type: !5438, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13890 = !DILocalVariable(name: "mmc", arg: 1, scope: !13889, file: !3, line: 1510, type: !5393)
!13891 = !DILocation(line: 1510, column: 46, scope: !13889)
!13892 = !DILocalVariable(name: "slot", scope: !13889, file: !3, line: 1512, type: !6210)
!13893 = !DILocation(line: 1512, column: 22, scope: !13889)
!13894 = !DILocation(line: 1512, column: 38, scope: !13889)
!13895 = !DILocation(line: 1512, column: 29, scope: !13889)
!13896 = !DILocalVariable(name: "status", scope: !13889, file: !3, line: 1513, type: !309)
!13897 = !DILocation(line: 1513, column: 6, scope: !13889)
!13898 = !DILocation(line: 1519, column: 11, scope: !13889)
!13899 = !DILocation(line: 1519, column: 9, scope: !13889)
!13900 = !DILocation(line: 1521, column: 12, scope: !13889)
!13901 = !DILocation(line: 1521, column: 19, scope: !13889)
!13902 = !DILocation(line: 1521, column: 10, scope: !13889)
!13903 = !DILocation(line: 1521, column: 9, scope: !13889)
!13904 = !DILocation(line: 1521, column: 2, scope: !13889)
!13905 = distinct !DISubprogram(name: "dw_mci_execute_tuning", scope: !3, file: !3, line: 1682, type: !5671, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13906 = !DILocalVariable(name: "mmc", arg: 1, scope: !13905, file: !3, line: 1682, type: !5393)
!13907 = !DILocation(line: 1682, column: 51, scope: !13905)
!13908 = !DILocalVariable(name: "opcode", arg: 2, scope: !13905, file: !3, line: 1682, type: !309)
!13909 = !DILocation(line: 1682, column: 60, scope: !13905)
!13910 = !DILocalVariable(name: "slot", scope: !13905, file: !3, line: 1684, type: !6210)
!13911 = !DILocation(line: 1684, column: 22, scope: !13905)
!13912 = !DILocation(line: 1684, column: 38, scope: !13905)
!13913 = !DILocation(line: 1684, column: 29, scope: !13905)
!13914 = !DILocalVariable(name: "host", scope: !13905, file: !3, line: 1685, type: !286)
!13915 = !DILocation(line: 1685, column: 17, scope: !13905)
!13916 = !DILocation(line: 1685, column: 24, scope: !13905)
!13917 = !DILocation(line: 1685, column: 30, scope: !13905)
!13918 = !DILocalVariable(name: "drv_data", scope: !13905, file: !3, line: 1686, type: !6194)
!13919 = !DILocation(line: 1686, column: 32, scope: !13905)
!13920 = !DILocation(line: 1686, column: 43, scope: !13905)
!13921 = !DILocation(line: 1686, column: 49, scope: !13905)
!13922 = !DILocalVariable(name: "err", scope: !13905, file: !3, line: 1687, type: !446)
!13923 = !DILocation(line: 1687, column: 6, scope: !13905)
!13924 = !DILocation(line: 1689, column: 6, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13905, file: !3, line: 1689, column: 6)
!13926 = !DILocation(line: 1689, column: 15, scope: !13925)
!13927 = !DILocation(line: 1689, column: 18, scope: !13925)
!13928 = !DILocation(line: 1689, column: 28, scope: !13925)
!13929 = !DILocation(line: 1689, column: 6, scope: !13905)
!13930 = !DILocation(line: 1690, column: 9, scope: !13925)
!13931 = !DILocation(line: 1690, column: 19, scope: !13925)
!13932 = !DILocation(line: 1690, column: 34, scope: !13925)
!13933 = !DILocation(line: 1690, column: 40, scope: !13925)
!13934 = !DILocation(line: 1690, column: 7, scope: !13925)
!13935 = !DILocation(line: 1690, column: 3, scope: !13925)
!13936 = !DILocation(line: 1691, column: 9, scope: !13905)
!13937 = !DILocation(line: 1691, column: 2, scope: !13905)
!13938 = distinct !DISubprogram(name: "dw_mci_prepare_hs400_tuning", scope: !3, file: !3, line: 1694, type: !5666, scopeLine: 1696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13939 = !DILocalVariable(name: "mmc", arg: 1, scope: !13938, file: !3, line: 1694, type: !5393)
!13940 = !DILocation(line: 1694, column: 57, scope: !13938)
!13941 = !DILocalVariable(name: "ios", arg: 2, scope: !13938, file: !3, line: 1695, type: !5422)
!13942 = !DILocation(line: 1695, column: 28, scope: !13938)
!13943 = !DILocalVariable(name: "slot", scope: !13938, file: !3, line: 1697, type: !6210)
!13944 = !DILocation(line: 1697, column: 22, scope: !13938)
!13945 = !DILocation(line: 1697, column: 38, scope: !13938)
!13946 = !DILocation(line: 1697, column: 29, scope: !13938)
!13947 = !DILocalVariable(name: "host", scope: !13938, file: !3, line: 1698, type: !286)
!13948 = !DILocation(line: 1698, column: 17, scope: !13938)
!13949 = !DILocation(line: 1698, column: 24, scope: !13938)
!13950 = !DILocation(line: 1698, column: 30, scope: !13938)
!13951 = !DILocalVariable(name: "drv_data", scope: !13938, file: !3, line: 1699, type: !6194)
!13952 = !DILocation(line: 1699, column: 32, scope: !13938)
!13953 = !DILocation(line: 1699, column: 43, scope: !13938)
!13954 = !DILocation(line: 1699, column: 49, scope: !13938)
!13955 = !DILocation(line: 1701, column: 6, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13938, file: !3, line: 1701, column: 6)
!13957 = !DILocation(line: 1701, column: 15, scope: !13956)
!13958 = !DILocation(line: 1701, column: 18, scope: !13956)
!13959 = !DILocation(line: 1701, column: 28, scope: !13956)
!13960 = !DILocation(line: 1701, column: 6, scope: !13938)
!13961 = !DILocation(line: 1702, column: 10, scope: !13956)
!13962 = !DILocation(line: 1702, column: 20, scope: !13956)
!13963 = !DILocation(line: 1702, column: 41, scope: !13956)
!13964 = !DILocation(line: 1702, column: 47, scope: !13956)
!13965 = !DILocation(line: 1702, column: 3, scope: !13956)
!13966 = !DILocation(line: 1704, column: 2, scope: !13938)
!13967 = !DILocation(line: 1705, column: 1, scope: !13938)
!13968 = distinct !DISubprogram(name: "dw_mci_hw_reset", scope: !3, file: !3, line: 1580, type: !5447, scopeLine: 1581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!13969 = !DILocalVariable(name: "mmc", arg: 1, scope: !13968, file: !3, line: 1580, type: !5393)
!13970 = !DILocation(line: 1580, column: 46, scope: !13968)
!13971 = !DILocalVariable(name: "slot", scope: !13968, file: !3, line: 1582, type: !6210)
!13972 = !DILocation(line: 1582, column: 22, scope: !13968)
!13973 = !DILocation(line: 1582, column: 38, scope: !13968)
!13974 = !DILocation(line: 1582, column: 29, scope: !13968)
!13975 = !DILocalVariable(name: "host", scope: !13968, file: !3, line: 1583, type: !286)
!13976 = !DILocation(line: 1583, column: 17, scope: !13968)
!13977 = !DILocation(line: 1583, column: 24, scope: !13968)
!13978 = !DILocation(line: 1583, column: 30, scope: !13968)
!13979 = !DILocalVariable(name: "reset", scope: !13968, file: !3, line: 1584, type: !446)
!13980 = !DILocation(line: 1584, column: 6, scope: !13968)
!13981 = !DILocation(line: 1586, column: 6, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 1586, column: 6)
!13983 = !DILocation(line: 1586, column: 12, scope: !13982)
!13984 = !DILocation(line: 1586, column: 20, scope: !13982)
!13985 = !DILocation(line: 1586, column: 6, scope: !13968)
!13986 = !DILocation(line: 1587, column: 22, scope: !13982)
!13987 = !DILocation(line: 1587, column: 3, scope: !13982)
!13988 = !DILocation(line: 1589, column: 25, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 1589, column: 6)
!13990 = !DILocation(line: 1589, column: 7, scope: !13989)
!13991 = !DILocation(line: 1589, column: 6, scope: !13968)
!13992 = !DILocation(line: 1591, column: 3, scope: !13989)
!13993 = !DILocation(line: 1599, column: 10, scope: !13968)
!13994 = !DILocation(line: 1599, column: 8, scope: !13968)
!13995 = !DILocation(line: 1600, column: 35, scope: !13968)
!13996 = !DILocation(line: 1600, column: 41, scope: !13968)
!13997 = !DILocation(line: 1600, column: 32, scope: !13968)
!13998 = !DILocation(line: 1600, column: 11, scope: !13968)
!13999 = !DILocation(line: 1600, column: 8, scope: !13968)
!14000 = !DILocation(line: 1601, column: 2, scope: !13968)
!14001 = !DILocation(line: 1602, column: 2, scope: !13968)
!14002 = !DILocation(line: 1603, column: 33, scope: !13968)
!14003 = !DILocation(line: 1603, column: 39, scope: !13968)
!14004 = !DILocation(line: 1603, column: 30, scope: !13968)
!14005 = !DILocation(line: 1603, column: 8, scope: !13968)
!14006 = !DILocation(line: 1604, column: 2, scope: !13968)
!14007 = !DILocation(line: 1605, column: 2, scope: !13968)
!14008 = !DILocation(line: 1606, column: 1, scope: !13968)
!14009 = distinct !DISubprogram(name: "spin_lock_bh", scope: !6367, file: !6367, line: 357, type: !7738, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14010 = !DILocalVariable(name: "val", arg: 1, scope: !14011, file: !14012, line: 77, type: !446)
!14011 = distinct !DISubprogram(name: "__preempt_count_add", scope: !14012, file: !14012, line: 77, type: !1881, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14012 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!14013 = !DILocation(line: 77, column: 53, scope: !14011, inlinedAt: !14014)
!14014 = distinct !DILocation(line: 12, column: 2, scope: !14015, inlinedAt: !14019)
!14015 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !14016, file: !14016, line: 10, type: !14017, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14016 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!14017 = !DISubroutineType(types: !14018)
!14018 = !{null, !281, !7}
!14019 = distinct !DILocation(line: 359, column: 2, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !14009, file: !6367, line: 359, column: 2)
!14021 = !DILocalVariable(name: "pao_ID__", scope: !14022, file: !14012, line: 79, type: !14023)
!14022 = distinct !DILexicalBlock(scope: !14011, file: !14012, line: 79, column: 2)
!14023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!14024 = !DILocation(line: 79, column: 2, scope: !14022, inlinedAt: !14014)
!14025 = !DILocalVariable(name: "pto_val__", scope: !14026, file: !14012, line: 79, type: !309)
!14026 = distinct !DILexicalBlock(scope: !14027, file: !14012, line: 79, column: 2)
!14027 = distinct !DILexicalBlock(scope: !14028, file: !14012, line: 79, column: 2)
!14028 = distinct !DILexicalBlock(scope: !14022, file: !14012, line: 79, column: 2)
!14029 = !DILocation(line: 79, column: 2, scope: !14026, inlinedAt: !14014)
!14030 = !DILocalVariable(name: "ip", arg: 1, scope: !14015, file: !14016, line: 10, type: !281)
!14031 = !DILocation(line: 10, column: 65, scope: !14015, inlinedAt: !14019)
!14032 = !DILocalVariable(name: "cnt", arg: 2, scope: !14015, file: !14016, line: 10, type: !7)
!14033 = !DILocation(line: 10, column: 82, scope: !14015, inlinedAt: !14019)
!14034 = !DILocalVariable(name: "lock", arg: 1, scope: !14009, file: !6367, line: 357, type: !2294)
!14035 = !DILocation(line: 357, column: 54, scope: !14009)
!14036 = !DILocation(line: 359, column: 2, scope: !14009)
!14037 = !DILocation(line: 359, column: 2, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14020, file: !6367, line: 359, column: 2)
!14039 = !DILabel(scope: !14038, name: "__here", file: !6367, line: 359)
!14040 = !DILocation(line: 12, column: 2, scope: !14015, inlinedAt: !14019)
!14041 = !{i32 -2145429447}
!14042 = !DILocation(line: 13, column: 2, scope: !14015, inlinedAt: !14019)
!14043 = !{i32 -2145419845}
!14044 = !DILocation(line: 359, column: 2, scope: !14020)
!14045 = !DILocation(line: 359, column: 2, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14020, file: !6367, line: 359, column: 2)
!14047 = !DILocation(line: 360, column: 1, scope: !14009)
!14048 = distinct !DISubprogram(name: "dw_mci_queue_request", scope: !3, file: !3, line: 1352, type: !14049, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14049 = !DISubroutineType(types: !14050)
!14050 = !{null, !286, !6210, !5347}
!14051 = !DILocalVariable(name: "host", arg: 1, scope: !14048, file: !3, line: 1352, type: !286)
!14052 = !DILocation(line: 1352, column: 49, scope: !14048)
!14053 = !DILocalVariable(name: "slot", arg: 2, scope: !14048, file: !3, line: 1352, type: !6210)
!14054 = !DILocation(line: 1352, column: 75, scope: !14048)
!14055 = !DILocalVariable(name: "mrq", arg: 3, scope: !14048, file: !3, line: 1353, type: !5347)
!14056 = !DILocation(line: 1353, column: 26, scope: !14048)
!14057 = !DILocation(line: 1358, column: 14, scope: !14048)
!14058 = !DILocation(line: 1358, column: 2, scope: !14048)
!14059 = !DILocation(line: 1358, column: 8, scope: !14048)
!14060 = !DILocation(line: 1358, column: 12, scope: !14048)
!14061 = !DILocation(line: 1360, column: 6, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14048, file: !3, line: 1360, column: 6)
!14063 = !DILocation(line: 1360, column: 12, scope: !14062)
!14064 = !DILocation(line: 1360, column: 18, scope: !14062)
!14065 = !DILocation(line: 1360, column: 6, scope: !14048)
!14066 = !DILocation(line: 1361, column: 3, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14062, file: !3, line: 1360, column: 47)
!14068 = !DILocation(line: 1368, column: 3, scope: !14067)
!14069 = !DILocation(line: 1368, column: 9, scope: !14067)
!14070 = !DILocation(line: 1368, column: 15, scope: !14067)
!14071 = !DILocation(line: 1369, column: 2, scope: !14067)
!14072 = !DILocation(line: 1371, column: 6, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14048, file: !3, line: 1371, column: 6)
!14074 = !DILocation(line: 1371, column: 12, scope: !14073)
!14075 = !DILocation(line: 1371, column: 18, scope: !14073)
!14076 = !DILocation(line: 1371, column: 6, scope: !14048)
!14077 = !DILocation(line: 1372, column: 3, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 1371, column: 33)
!14079 = !DILocation(line: 1372, column: 9, scope: !14078)
!14080 = !DILocation(line: 1372, column: 15, scope: !14078)
!14081 = !DILocation(line: 1373, column: 24, scope: !14078)
!14082 = !DILocation(line: 1373, column: 30, scope: !14078)
!14083 = !DILocation(line: 1373, column: 3, scope: !14078)
!14084 = !DILocation(line: 1374, column: 2, scope: !14078)
!14085 = !DILocation(line: 1375, column: 18, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14073, file: !3, line: 1374, column: 9)
!14087 = !DILocation(line: 1375, column: 24, scope: !14086)
!14088 = !DILocation(line: 1375, column: 37, scope: !14086)
!14089 = !DILocation(line: 1375, column: 43, scope: !14086)
!14090 = !DILocation(line: 1375, column: 3, scope: !14086)
!14091 = !DILocation(line: 1377, column: 1, scope: !14048)
!14092 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !6367, file: !6367, line: 397, type: !7738, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14093 = !DILocalVariable(name: "lock", arg: 1, scope: !14092, file: !6367, line: 397, type: !2294)
!14094 = !DILocation(line: 397, column: 56, scope: !14092)
!14095 = !DILocation(line: 399, column: 2, scope: !14092)
!14096 = !DILocation(line: 399, column: 2, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !6367, line: 399, column: 2)
!14098 = distinct !DILexicalBlock(scope: !14092, file: !6367, line: 399, column: 2)
!14099 = !DILabel(scope: !14097, name: "__here", file: !6367, line: 399)
!14100 = !DILocation(line: 399, column: 2, scope: !14098)
!14101 = !DILocation(line: 399, column: 2, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14098, file: !6367, line: 399, column: 2)
!14103 = !DILocation(line: 400, column: 1, scope: !14092)
!14104 = distinct !DISubprogram(name: "list_add_tail", scope: !7139, file: !7139, line: 98, type: !12935, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14105 = !DILocalVariable(name: "new", arg: 1, scope: !14104, file: !7139, line: 98, type: !349)
!14106 = !DILocation(line: 98, column: 52, scope: !14104)
!14107 = !DILocalVariable(name: "head", arg: 2, scope: !14104, file: !7139, line: 98, type: !349)
!14108 = !DILocation(line: 98, column: 75, scope: !14104)
!14109 = !DILocation(line: 100, column: 13, scope: !14104)
!14110 = !DILocation(line: 100, column: 18, scope: !14104)
!14111 = !DILocation(line: 100, column: 24, scope: !14104)
!14112 = !DILocation(line: 100, column: 30, scope: !14104)
!14113 = !DILocation(line: 100, column: 2, scope: !14104)
!14114 = !DILocation(line: 101, column: 1, scope: !14104)
!14115 = distinct !DISubprogram(name: "__list_add", scope: !7139, file: !7139, line: 63, type: !14116, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14116 = !DISubroutineType(types: !14117)
!14117 = !{null, !349, !349, !349}
!14118 = !DILocalVariable(name: "new", arg: 1, scope: !14115, file: !7139, line: 63, type: !349)
!14119 = !DILocation(line: 63, column: 49, scope: !14115)
!14120 = !DILocalVariable(name: "prev", arg: 2, scope: !14115, file: !7139, line: 64, type: !349)
!14121 = !DILocation(line: 64, column: 28, scope: !14115)
!14122 = !DILocalVariable(name: "next", arg: 3, scope: !14115, file: !7139, line: 65, type: !349)
!14123 = !DILocation(line: 65, column: 28, scope: !14115)
!14124 = !DILocation(line: 67, column: 24, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14115, file: !7139, line: 67, column: 6)
!14126 = !DILocation(line: 67, column: 29, scope: !14125)
!14127 = !DILocation(line: 67, column: 35, scope: !14125)
!14128 = !DILocation(line: 67, column: 7, scope: !14125)
!14129 = !DILocation(line: 67, column: 6, scope: !14115)
!14130 = !DILocation(line: 68, column: 3, scope: !14125)
!14131 = !DILocation(line: 70, column: 15, scope: !14115)
!14132 = !DILocation(line: 70, column: 2, scope: !14115)
!14133 = !DILocation(line: 70, column: 8, scope: !14115)
!14134 = !DILocation(line: 70, column: 13, scope: !14115)
!14135 = !DILocation(line: 71, column: 14, scope: !14115)
!14136 = !DILocation(line: 71, column: 2, scope: !14115)
!14137 = !DILocation(line: 71, column: 7, scope: !14115)
!14138 = !DILocation(line: 71, column: 12, scope: !14115)
!14139 = !DILocation(line: 72, column: 14, scope: !14115)
!14140 = !DILocation(line: 72, column: 2, scope: !14115)
!14141 = !DILocation(line: 72, column: 7, scope: !14115)
!14142 = !DILocation(line: 72, column: 12, scope: !14115)
!14143 = !DILocation(line: 73, column: 2, scope: !14115)
!14144 = !DILocation(line: 73, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14115, file: !7139, line: 73, column: 2)
!14146 = !DILocation(line: 73, column: 2, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14145, file: !7139, line: 73, column: 2)
!14148 = !DILocation(line: 73, column: 2, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14145, file: !7139, line: 73, column: 2)
!14150 = !DILocation(line: 74, column: 1, scope: !14115)
!14151 = distinct !DISubprogram(name: "__list_add_valid", scope: !7139, file: !7139, line: 45, type: !14152, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{!314, !349, !349, !349}
!14154 = !DILocalVariable(name: "new", arg: 1, scope: !14151, file: !7139, line: 45, type: !349)
!14155 = !DILocation(line: 45, column: 55, scope: !14151)
!14156 = !DILocalVariable(name: "prev", arg: 2, scope: !14151, file: !7139, line: 46, type: !349)
!14157 = !DILocation(line: 46, column: 23, scope: !14151)
!14158 = !DILocalVariable(name: "next", arg: 3, scope: !14151, file: !7139, line: 47, type: !349)
!14159 = !DILocation(line: 47, column: 23, scope: !14151)
!14160 = !DILocation(line: 49, column: 2, scope: !14151)
!14161 = distinct !DISubprogram(name: "pm_runtime_get_noresume", scope: !14162, file: !14162, line: 92, type: !2392, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14162 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!14163 = !DILocalVariable(name: "v", arg: 1, scope: !14164, file: !14165, line: 93, type: !14168)
!14164 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !14165, file: !14165, line: 93, type: !14166, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14165 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!14166 = !DISubroutineType(types: !14167)
!14167 = !{null, !14168}
!14168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!14169 = !DILocation(line: 93, column: 55, scope: !14164, inlinedAt: !14170)
!14170 = distinct !DILocation(line: 241, column: 2, scope: !14171, inlinedAt: !14173)
!14171 = distinct !DISubprogram(name: "atomic_inc", scope: !14172, file: !14172, line: 238, type: !14166, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14172 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!14173 = distinct !DILocation(line: 94, column: 2, scope: !14161)
!14174 = !DILocation(line: 99, column: 79, scope: !9570, inlinedAt: !14175)
!14175 = distinct !DILocation(line: 240, column: 2, scope: !14171, inlinedAt: !14173)
!14176 = !DILocation(line: 99, column: 89, scope: !9570, inlinedAt: !14175)
!14177 = !DILocalVariable(name: "v", arg: 1, scope: !14171, file: !14172, line: 238, type: !14168)
!14178 = !DILocation(line: 238, column: 22, scope: !14171, inlinedAt: !14173)
!14179 = !DILocalVariable(name: "dev", arg: 1, scope: !14161, file: !14162, line: 92, type: !2369)
!14180 = !DILocation(line: 92, column: 59, scope: !14161)
!14181 = !DILocation(line: 94, column: 14, scope: !14161)
!14182 = !DILocation(line: 94, column: 19, scope: !14161)
!14183 = !DILocation(line: 94, column: 25, scope: !14161)
!14184 = !DILocation(line: 240, column: 31, scope: !14171, inlinedAt: !14173)
!14185 = !DILocation(line: 101, column: 20, scope: !9570, inlinedAt: !14175)
!14186 = !DILocation(line: 101, column: 23, scope: !9570, inlinedAt: !14175)
!14187 = !DILocation(line: 101, column: 2, scope: !9570, inlinedAt: !14175)
!14188 = !DILocation(line: 102, column: 2, scope: !9570, inlinedAt: !14175)
!14189 = !DILocation(line: 241, column: 18, scope: !14171, inlinedAt: !14173)
!14190 = !DILocation(line: 96, column: 16, scope: !14164, inlinedAt: !14170)
!14191 = !DILocation(line: 96, column: 19, scope: !14164, inlinedAt: !14170)
!14192 = !DILocation(line: 95, column: 2, scope: !14164, inlinedAt: !14170)
!14193 = !{i32 -2146552200}
!14194 = !DILocation(line: 95, column: 1, scope: !14161)
!14195 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !14162, file: !14162, line: 103, type: !2392, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14196 = !DILocalVariable(name: "v", arg: 1, scope: !14197, file: !14165, line: 200, type: !14168)
!14197 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !14165, file: !14165, line: 200, type: !14198, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!314, !14168, !649, !446}
!14200 = !DILocation(line: 200, column: 63, scope: !14197, inlinedAt: !14201)
!14201 = distinct !DILocation(line: 1093, column: 12, scope: !14202, inlinedAt: !14206)
!14202 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !14203, file: !14203, line: 1086, type: !14204, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14203 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!14204 = !DISubroutineType(types: !14205)
!14205 = !{!446, !14168, !446, !446}
!14206 = distinct !DILocation(line: 1113, column: 9, scope: !14207, inlinedAt: !14210)
!14207 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !14203, file: !14203, line: 1111, type: !14208, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14208 = !DISubroutineType(types: !14209)
!14209 = !{!314, !14168, !446, !446}
!14210 = distinct !DILocation(line: 789, column: 9, scope: !14211, inlinedAt: !14212)
!14211 = distinct !DISubprogram(name: "atomic_add_unless", scope: !14172, file: !14172, line: 786, type: !14208, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14212 = distinct !DILocation(line: 105, column: 2, scope: !14195)
!14213 = !DILocalVariable(name: "old", arg: 2, scope: !14197, file: !14165, line: 200, type: !649)
!14214 = !DILocation(line: 200, column: 71, scope: !14197, inlinedAt: !14201)
!14215 = !DILocalVariable(name: "new", arg: 3, scope: !14197, file: !14165, line: 200, type: !446)
!14216 = !DILocation(line: 200, column: 80, scope: !14197, inlinedAt: !14201)
!14217 = !DILocalVariable(name: "success", scope: !14218, file: !14165, line: 202, type: !314)
!14218 = distinct !DILexicalBlock(scope: !14197, file: !14165, line: 202, column: 9)
!14219 = !DILocation(line: 202, column: 9, scope: !14218, inlinedAt: !14201)
!14220 = !DILocalVariable(name: "_old", scope: !14218, file: !14165, line: 202, type: !649)
!14221 = !DILocalVariable(name: "__old", scope: !14218, file: !14165, line: 202, type: !446)
!14222 = !DILocalVariable(name: "__new", scope: !14218, file: !14165, line: 202, type: !446)
!14223 = !DILocalVariable(name: "__ptr", scope: !14218, file: !14165, line: 202, type: !6275)
!14224 = !DILocalVariable(name: "v", arg: 1, scope: !14225, file: !14165, line: 23, type: !14228)
!14225 = distinct !DISubprogram(name: "arch_atomic_read", scope: !14165, file: !14165, line: 23, type: !14226, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{!446, !14228}
!14228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14229, size: 64)
!14229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!14230 = !DILocation(line: 23, column: 61, scope: !14225, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 1088, column: 10, scope: !14202, inlinedAt: !14206)
!14232 = !DILocalVariable(name: "v", arg: 1, scope: !14202, file: !14203, line: 1086, type: !14168)
!14233 = !DILocation(line: 1086, column: 40, scope: !14202, inlinedAt: !14206)
!14234 = !DILocalVariable(name: "a", arg: 2, scope: !14202, file: !14203, line: 1086, type: !446)
!14235 = !DILocation(line: 1086, column: 47, scope: !14202, inlinedAt: !14206)
!14236 = !DILocalVariable(name: "u", arg: 3, scope: !14202, file: !14203, line: 1086, type: !446)
!14237 = !DILocation(line: 1086, column: 54, scope: !14202, inlinedAt: !14206)
!14238 = !DILocalVariable(name: "c", scope: !14202, file: !14203, line: 1088, type: !446)
!14239 = !DILocation(line: 1088, column: 6, scope: !14202, inlinedAt: !14206)
!14240 = !DILocalVariable(name: "v", arg: 1, scope: !14207, file: !14203, line: 1111, type: !14168)
!14241 = !DILocation(line: 1111, column: 34, scope: !14207, inlinedAt: !14210)
!14242 = !DILocalVariable(name: "a", arg: 2, scope: !14207, file: !14203, line: 1111, type: !446)
!14243 = !DILocation(line: 1111, column: 41, scope: !14207, inlinedAt: !14210)
!14244 = !DILocalVariable(name: "u", arg: 3, scope: !14207, file: !14203, line: 1111, type: !446)
!14245 = !DILocation(line: 1111, column: 48, scope: !14207, inlinedAt: !14210)
!14246 = !DILocation(line: 99, column: 79, scope: !9570, inlinedAt: !14247)
!14247 = distinct !DILocation(line: 788, column: 2, scope: !14211, inlinedAt: !14212)
!14248 = !DILocation(line: 99, column: 89, scope: !9570, inlinedAt: !14247)
!14249 = !DILocalVariable(name: "v", arg: 1, scope: !14211, file: !14172, line: 786, type: !14168)
!14250 = !DILocation(line: 786, column: 29, scope: !14211, inlinedAt: !14212)
!14251 = !DILocalVariable(name: "a", arg: 2, scope: !14211, file: !14172, line: 786, type: !446)
!14252 = !DILocation(line: 786, column: 36, scope: !14211, inlinedAt: !14212)
!14253 = !DILocalVariable(name: "u", arg: 3, scope: !14211, file: !14172, line: 786, type: !446)
!14254 = !DILocation(line: 786, column: 43, scope: !14211, inlinedAt: !14212)
!14255 = !DILocalVariable(name: "dev", arg: 1, scope: !14195, file: !14162, line: 103, type: !2369)
!14256 = !DILocation(line: 103, column: 57, scope: !14195)
!14257 = !DILocation(line: 105, column: 21, scope: !14195)
!14258 = !DILocation(line: 105, column: 26, scope: !14195)
!14259 = !DILocation(line: 105, column: 32, scope: !14195)
!14260 = !DILocation(line: 788, column: 31, scope: !14211, inlinedAt: !14212)
!14261 = !DILocation(line: 101, column: 20, scope: !9570, inlinedAt: !14247)
!14262 = !DILocation(line: 101, column: 23, scope: !9570, inlinedAt: !14247)
!14263 = !DILocation(line: 101, column: 2, scope: !9570, inlinedAt: !14247)
!14264 = !DILocation(line: 102, column: 2, scope: !9570, inlinedAt: !14247)
!14265 = !DILocation(line: 789, column: 32, scope: !14211, inlinedAt: !14212)
!14266 = !DILocation(line: 789, column: 35, scope: !14211, inlinedAt: !14212)
!14267 = !DILocation(line: 789, column: 38, scope: !14211, inlinedAt: !14212)
!14268 = !DILocation(line: 1113, column: 38, scope: !14207, inlinedAt: !14210)
!14269 = !DILocation(line: 1113, column: 41, scope: !14207, inlinedAt: !14210)
!14270 = !DILocation(line: 1113, column: 44, scope: !14207, inlinedAt: !14210)
!14271 = !DILocation(line: 1088, column: 27, scope: !14202, inlinedAt: !14206)
!14272 = !DILocation(line: 29, column: 9, scope: !14225, inlinedAt: !14231)
!14273 = !DILocation(line: 1090, column: 2, scope: !14202, inlinedAt: !14206)
!14274 = !DILocation(line: 1091, column: 7, scope: !14275, inlinedAt: !14206)
!14275 = distinct !DILexicalBlock(scope: !14276, file: !14203, line: 1091, column: 7)
!14276 = distinct !DILexicalBlock(scope: !14202, file: !14203, line: 1090, column: 5)
!14277 = !DILocation(line: 1091, column: 7, scope: !14276, inlinedAt: !14206)
!14278 = !DILocation(line: 1092, column: 4, scope: !14275, inlinedAt: !14206)
!14279 = !DILocation(line: 1093, column: 36, scope: !14202, inlinedAt: !14206)
!14280 = !DILocation(line: 1093, column: 43, scope: !14202, inlinedAt: !14206)
!14281 = !DILocation(line: 1093, column: 47, scope: !14202, inlinedAt: !14206)
!14282 = !DILocation(line: 1093, column: 45, scope: !14202, inlinedAt: !14206)
!14283 = !{i32 -2146540603, i32 -2146540448}
!14284 = !DILocation(line: 202, column: 9, scope: !14285, inlinedAt: !14201)
!14285 = distinct !DILexicalBlock(scope: !14218, file: !14165, line: 202, column: 9)
!14286 = !DILocation(line: 202, column: 9, scope: !14197, inlinedAt: !14201)
!14287 = !DILocation(line: 1093, column: 11, scope: !14202, inlinedAt: !14206)
!14288 = !DILocation(line: 1093, column: 2, scope: !14276, inlinedAt: !14206)
!14289 = distinct !{!14289, !14273, !14290}
!14290 = !DILocation(line: 1093, column: 49, scope: !14202, inlinedAt: !14206)
!14291 = !DILocation(line: 1095, column: 9, scope: !14202, inlinedAt: !14206)
!14292 = !DILocation(line: 1113, column: 50, scope: !14207, inlinedAt: !14210)
!14293 = !DILocation(line: 1113, column: 47, scope: !14207, inlinedAt: !14210)
!14294 = !DILocation(line: 106, column: 1, scope: !14195)
!14295 = distinct !DISubprogram(name: "mmc_regulator_set_vqmmc", scope: !5395, file: !5395, line: 543, type: !5666, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14296 = !DILocalVariable(name: "mmc", arg: 1, scope: !14295, file: !5395, line: 543, type: !5393)
!14297 = !DILocation(line: 543, column: 60, scope: !14295)
!14298 = !DILocalVariable(name: "ios", arg: 2, scope: !14295, file: !5395, line: 544, type: !5422)
!14299 = !DILocation(line: 544, column: 24, scope: !14295)
!14300 = !DILocation(line: 546, column: 2, scope: !14295)
!14301 = distinct !DISubprogram(name: "mmc_regulator_set_ocr", scope: !5395, file: !5395, line: 536, type: !14302, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{!446, !5393, !5782, !361}
!14304 = !DILocalVariable(name: "mmc", arg: 1, scope: !14301, file: !5395, line: 536, type: !5393)
!14305 = !DILocation(line: 536, column: 58, scope: !14301)
!14306 = !DILocalVariable(name: "supply", arg: 2, scope: !14301, file: !5395, line: 537, type: !5782)
!14307 = !DILocation(line: 537, column: 24, scope: !14301)
!14308 = !DILocalVariable(name: "vdd_bit", arg: 3, scope: !14301, file: !5395, line: 538, type: !361)
!14309 = !DILocation(line: 538, column: 21, scope: !14301)
!14310 = !DILocation(line: 540, column: 2, scope: !14301)
!14311 = distinct !DISubprogram(name: "regulator_enable", scope: !14312, file: !14312, line: 410, type: !14313, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14312 = !DIFile(filename: "./include/linux/regulator/consumer.h", directory: "/home/lizy2001/genbc/linux")
!14313 = !DISubroutineType(types: !14314)
!14314 = !{!446, !5782}
!14315 = !DILocalVariable(name: "regulator", arg: 1, scope: !14311, file: !14312, line: 410, type: !5782)
!14316 = !DILocation(line: 410, column: 54, scope: !14311)
!14317 = !DILocation(line: 412, column: 2, scope: !14311)
!14318 = distinct !DISubprogram(name: "regulator_disable", scope: !14312, file: !14312, line: 415, type: !14313, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !304)
!14319 = !DILocalVariable(name: "regulator", arg: 1, scope: !14318, file: !14312, line: 415, type: !5782)
!14320 = !DILocation(line: 415, column: 55, scope: !14318)
!14321 = !DILocation(line: 417, column: 2, scope: !14318)
