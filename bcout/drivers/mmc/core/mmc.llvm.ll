; ModuleID = '../bcout/drivers/mmc/core/mmc.llvm.bc'
source_filename = "drivers/mmc/core/mmc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.mmc_bus_ops = type { void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)* }
%struct.mmc_host = type { %struct.device*, %struct.device, i32, %struct.mmc_host_ops*, %struct.mmc_pwrseq*, i32, i32, i32, i32, i32, i32, i32, %struct.notifier_block, %struct.wakeup_source*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, %struct.spinlock, %struct.mmc_ios, i16, i32, i32, i32, i32, i32, %struct.timer_list, i8, %struct.mmc_card*, %struct.wait_queue_head, %struct.mmc_ctx*, i32, %struct.mmc_ctx, %struct.delayed_work, i32, %struct.mmc_slot, %struct.mmc_bus_ops*, i32, i32, %struct.task_struct*, %struct.delayed_work, i8, %struct.atomic_t, i32, %struct.led_trigger*, %struct.mmc_supply, %struct.dentry*, %struct.mmc_request*, i32, i32, i32, i32, %struct.mmc_cqe_ops*, i8*, i32, i8, i8, i8, [41 x i8], [0 x i64] }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.37, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.37 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type opaque
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.poll_table_struct = type opaque
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.36, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type opaque
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.pgprot = type { i64 }
%struct.anon.36 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.atomic64_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.module = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.mmc_host_ops = type { void (%struct.mmc_host*, %struct.mmc_request*, i32)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*, i32)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_card*, i32, i32)* }
%struct.mmc_pwrseq = type { %struct.mmc_pwrseq_ops*, %struct.device*, %struct.list_head, %struct.module* }
%struct.mmc_pwrseq_ops = type { void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.mmc_ios = type { i32, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.mmc_card = type { %struct.mmc_host*, %struct.device, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i8, [4 x i32], [4 x i32], [2 x i32], [16 x i32], %struct.mmc_cid, %struct.mmc_csd, %struct.mmc_ext_csd, %struct.sd_scr, %struct.sd_ssr, %struct.sd_switch_caps, i32, %struct.atomic_t, %struct.sdio_cccr, %struct.sdio_cis, [7 x %struct.sdio_func*], %struct.sdio_func*, i8, i8, i32, i8**, %struct.sdio_func_tuple*, i32, i32, i32, %struct.dentry*, [7 x %struct.mmc_part], i32, i32, %struct.workqueue_struct* }
%struct.mmc_cid = type { i32, [8 x i8], i8, i32, i16, i16, i8, i8, i8 }
%struct.mmc_csd = type { i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.mmc_ext_csd = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, i64, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, [8 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i32 }
%struct.sd_scr = type { i8, i8, i8, i8, i8, i8 }
%struct.sd_ssr = type { i32, i32, i32 }
%struct.sd_switch_caps = type { i32, i32, i32, i32, i32 }
%struct.sdio_cccr = type { i32, i32, i8 }
%struct.sdio_cis = type { i16, i16, i16, i32 }
%struct.sdio_func = type opaque
%struct.sdio_func_tuple = type opaque
%struct.mmc_part = type { i64, i32, [20 x i8], i8, i32 }
%struct.workqueue_struct = type opaque
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.mmc_ctx = type { %struct.task_struct* }
%struct.mmc_slot = type { i32, i8, i8* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.17, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.0 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type opaque
%struct.key = type opaque
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type opaque
%struct.sighand_struct = type opaque
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.9 }
%struct.anon.9 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.16, i32, [12 x i8] }
%union.anon.16 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.17 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.18, %union.anon.31, %struct.atomic_t, [8 x i8] }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type opaque
%union.anon.31 = type { %struct.atomic_t }
%struct.vm_struct = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.32, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.35 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { i64, i64 }
%union.anon.35 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.atomic_t = type { i32 }
%struct.led_trigger = type opaque
%struct.mmc_supply = type { %struct.regulator*, %struct.regulator* }
%struct.regulator = type opaque
%struct.dentry = type opaque
%struct.mmc_request = type { %struct.mmc_command*, %struct.mmc_command*, %struct.mmc_data*, %struct.mmc_command*, %struct.completion, %struct.completion, void (%struct.mmc_request*)*, void (%struct.mmc_request*)*, %struct.mmc_host*, i8, i32 }
%struct.mmc_data = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.mmc_command*, %struct.mmc_request*, i32, i32, %struct.scatterlist*, i32 }
%struct.scatterlist = type opaque
%struct.mmc_command = type { i32, i32, [4 x i32], i32, i32, i32, i32, %struct.mmc_data*, %struct.mmc_request* }
%struct.mmc_cqe_ops = type { i32 (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i1 (%struct.mmc_host*, %struct.mmc_request*, i8*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.mmc_fixup = type { i8*, i64, i64, i32, i16, i16, i16, i32, void (%struct.mmc_card*, i32)*, i32 }

@.str = private unnamed_addr constant [27 x i8] c"\013%s: %s failed, error %d\0A\00", align 1
@__func__.mmc_hs400_to_hs200 = private unnamed_addr constant [19 x i8] c"mmc_hs400_to_hs200\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"drivers/mmc/core/mmc.c\00", align 1
@mmc_ops = internal constant %struct.mmc_bus_ops { void (%struct.mmc_host*)* @mmc_remove, void (%struct.mmc_host*)* @mmc_detect, i32 (%struct.mmc_host*)* null, i32 (%struct.mmc_host*)* @mmc_suspend, i32 (%struct.mmc_host*)* @mmc_resume, i32 (%struct.mmc_host*)* @mmc_runtime_suspend, i32 (%struct.mmc_host*)* @mmc_runtime_resume, i32 (%struct.mmc_host*)* @mmc_alive, i32 (%struct.mmc_host*)* @mmc_shutdown, i32 (%struct.mmc_host*)* @_mmc_hw_reset, i32 (%struct.mmc_host*)* null }, align 8, !dbg !0
@.str.2 = private unnamed_addr constant [45 x i8] c"\013%s: error %d whilst initialising MMC card\0A\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"\013%s: switch to high-speed from hs200 failed, err:%d\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c"\013%s: switch to bus width for hs400 failed, err:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"\013%s: switch to hs400 failed, err:%d\0A\00", align 1
@__func__.mmc_select_hs400 = private unnamed_addr constant [17 x i8] c"mmc_select_hs400\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"\013%s: Power Off Notification timed out, %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"\013%s: error %d doing aggressive suspend\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"\013%s: error %d doing runtime resume\0A\00", align 1
@use_spi_crc = external dso_local global i8, align 1
@mmc_type = internal global %struct.device_type { i8* null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @mmc_std_groups, i32 0, i32 0), i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* null, void (%struct.device*)* null, %struct.dev_pm_ops* null }, align 8, !dbg !2531
@.str.9 = private unnamed_addr constant [27 x i8] c"\014%s: Enabling HPI failed\0A\00", align 1
@.str.10 = private unnamed_addr constant [54 x i8] c"\014%s: Cache is supported, but failed to turn on (%d)\0A\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"\014%s: Enabling CMDQ failed\0A\00", align 1
@.str.12 = private unnamed_addr constant [36 x i8] c"\016%s: Command Queue Engine enabled\0A\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"\016%s: Host Software Queue enabled\0A\00", align 1
@.str.14 = private unnamed_addr constant [47 x i8] c"\013%s: Host failed to negotiate down from 3.3V\0A\00", align 1
@mmc_std_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @mmc_std_group, %struct.attribute_group* null], align 16, !dbg !2533
@mmc_std_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([26 x %struct.attribute*], [26 x %struct.attribute*]* @mmc_std_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !2536
@mmc_std_attrs = internal global [26 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_cid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_csd, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_date, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_erase_size, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_preferred_erase_size, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_fwrev, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ffu_capable, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_hwrev, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_manfid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_name, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_oemid, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_prv, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rev, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_pre_eol_info, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_life_time, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_serial, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_enhanced_area_offset, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_enhanced_area_size, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_raw_rpmb_size_mult, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_enhanced_rpmb_supported, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rel_sectors, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ocr, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rca, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_dsr, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_cmdq_en, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !2538
@dev_attr_cid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_cid_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2543
@dev_attr_csd = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_csd_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2557
@dev_attr_date = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_date_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2559
@dev_attr_erase_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_erase_size_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2561
@dev_attr_preferred_erase_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_preferred_erase_size_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2563
@dev_attr_fwrev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_fwrev_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2565
@dev_attr_ffu_capable = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_ffu_capable_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2567
@dev_attr_hwrev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_hwrev_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2569
@dev_attr_manfid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_manfid_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2571
@dev_attr_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_name_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2573
@dev_attr_oemid = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_oemid_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2575
@dev_attr_prv = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_prv_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2577
@dev_attr_rev = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_rev_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2579
@dev_attr_pre_eol_info = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_pre_eol_info_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2581
@dev_attr_life_time = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_life_time_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2583
@dev_attr_serial = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_serial_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2585
@dev_attr_enhanced_area_offset = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_enhanced_area_offset_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2587
@dev_attr_enhanced_area_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_enhanced_area_size_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2589
@dev_attr_raw_rpmb_size_mult = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_raw_rpmb_size_mult_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2591
@dev_attr_enhanced_rpmb_supported = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_enhanced_rpmb_supported_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2593
@dev_attr_rel_sectors = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_rel_sectors_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2595
@dev_attr_ocr = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_ocr_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2597
@dev_attr_rca = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_rca_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2599
@dev_attr_dsr = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_dsr_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2601
@dev_attr_cmdq_en = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @mmc_cmdq_en_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !2603
@.str.15 = private unnamed_addr constant [4 x i8] c"cid\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"%08x%08x%08x%08x\0A\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"csd\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"%02d/%04d\0A\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"erase_size\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"preferred_erase_size\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"fwrev\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"0x%x\0A\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"0x%*phN\0A\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"ffu_capable\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"hwrev\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"manfid\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"0x%06x\0A\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"oemid\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"0x%04x\0A\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"prv\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"rev\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"pre_eol_info\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"0x%02x\0A\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"life_time\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"0x%02x 0x%02x\0A\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"serial\00", align 1
@.str.42 = private unnamed_addr constant [8 x i8] c"0x%08x\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"enhanced_area_offset\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"%llu\0A\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"enhanced_area_size\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"raw_rpmb_size_mult\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"%#x\0A\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"enhanced_rpmb_supported\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"rel_sectors\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"ocr\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"rca\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"dsr\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"cmdq_en\00", align 1
@.str.54 = private unnamed_addr constant [45 x i8] c"\013%s: unrecognised CSD structure version %d\0A\00", align 1
@taac_exp = internal constant [8 x i32] [i32 1, i32 10, i32 100, i32 1000, i32 10000, i32 100000, i32 1000000, i32 10000000], align 16, !dbg !2605
@taac_mant = internal constant [16 x i32] [i32 0, i32 10, i32 12, i32 13, i32 15, i32 20, i32 25, i32 30, i32 35, i32 40, i32 45, i32 50, i32 55, i32 60, i32 70, i32 80], align 16, !dbg !2609
@tran_exp = internal constant [8 x i32] [i32 10000, i32 100000, i32 1000000, i32 10000000, i32 0, i32 0, i32 0, i32 0], align 16, !dbg !2612
@tran_mant = internal constant [16 x i8] c"\00\0A\0C\0D\0F\14\19\1E#(-27<FP", align 16, !dbg !2614
@.str.55 = private unnamed_addr constant [40 x i8] c"\013%s: card has unknown MMCA version %d\0A\00", align 1
@.str.56 = private unnamed_addr constant [86 x i8] c"\013%s: unable to read EXT_CSD on a possible high capacity card. Card will be ignored.\0A\00", align 1
@.str.57 = private unnamed_addr constant [56 x i8] c"\014%s: unable to read EXT_CSD, performance might suffer\0A\00", align 1
@.str.58 = private unnamed_addr constant [49 x i8] c"\013%s: unrecognised EXT_CSD structure version %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"mmc-card\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"broken-hpi\00", align 1
@mmc_ext_csd_fixups = internal constant [3 x %struct.mmc_fixup] [%struct.mmc_fixup { i8* null, i64 0, i64 -1, i32 144, i16 330, i16 -1, i16 -1, i32 5, void (%struct.mmc_card*, i32)* @add_quirk, i32 8192 }, %struct.mmc_fixup { i8* null, i64 0, i64 -1, i32 254, i16 334, i16 -1, i16 -1, i32 6, void (%struct.mmc_card*, i32)* @add_quirk, i32 8192 }, %struct.mmc_fixup zeroinitializer], align 16, !dbg !2618
@.str.61 = private unnamed_addr constant [7 x i8] c"boot%d\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"rpmb\00", align 1
@.str.63 = private unnamed_addr constant [64 x i8] c"\014%s: defines enhanced area without partition setting complete\0A\00", align 1
@.str.64 = private unnamed_addr constant [61 x i8] c"\014%s: has partition size defined without partition complete\0A\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"gp%d\00", align 1
@.str.66 = private unnamed_addr constant [47 x i8] c"\013%s: switch to 8bit bus width failed, err:%d\0A\00", align 1
@.str.67 = private unnamed_addr constant [47 x i8] c"\013%s: switch to hs for hs400es failed, err:%d\0A\00", align 1
@.str.68 = private unnamed_addr constant [54 x i8] c"\013%s: switch to bus width for hs400es failed, err:%d\0A\00", align 1
@.str.69 = private unnamed_addr constant [40 x i8] c"\013%s: switch to hs400es failed, err:%d\0A\00", align 1
@__func__.mmc_select_hs400es = private unnamed_addr constant [19 x i8] c"mmc_select_hs400es\00", align 1
@__func__.mmc_select_hs200 = private unnamed_addr constant [17 x i8] c"mmc_select_hs200\00", align 1
@.str.70 = private unnamed_addr constant [43 x i8] c"\014%s: switch to high-speed failed, err:%d\0A\00", align 1
@mmc_select_bus_width.ext_csd_bits = internal global [2 x i32] [i32 2, i32 1], align 4, !dbg !2639
@mmc_select_bus_width.bus_widths = internal global [2 x i32] [i32 3, i32 2], align 4, !dbg !2645
@.str.71 = private unnamed_addr constant [37 x i8] c"\014%s: switch to bus width %d failed\0A\00", align 1
@.str.72 = private unnamed_addr constant [41 x i8] c"\013%s: switch to bus width %d ddr failed\0A\00", align 1
@.str.73 = private unnamed_addr constant [59 x i8] c"\014%s: power class selection to bus width %d ddr %d failed\0A\00", align 1
@.str.74 = private unnamed_addr constant [51 x i8] c"\014%s: Voltage range not supported for power class\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_hs200_to_hs400(%struct.mmc_card* %card) #0 !dbg !2652 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !2653, metadata !DIExpression()), !dbg !2654
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2655
  %call = call i32 @mmc_select_hs400(%struct.mmc_card* %0) #5, !dbg !2656
  ret i32 %call, !dbg !2657
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_hs400(%struct.mmc_card* %card) #0 !dbg !2658 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %max_dtr = alloca i32, align 4
  %err = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !2659, metadata !DIExpression()), !dbg !2660
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !2661, metadata !DIExpression()), !dbg !2662
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2663
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !2664
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !2664
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !2662
  call void @llvm.dbg.declare(metadata i32* %max_dtr, metadata !2665, metadata !DIExpression()), !dbg !2666
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2667, metadata !DIExpression()), !dbg !2668
  store i32 0, i32* %err, align 4, !dbg !2668
  call void @llvm.dbg.declare(metadata i8* %val, metadata !2669, metadata !DIExpression()), !dbg !2670
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2671
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 37, !dbg !2673
  %3 = load i32, i32* %mmc_avail_type, align 4, !dbg !2673
  %and = and i32 %3, 192, !dbg !2674
  %tobool = icmp ne i32 %and, 0, !dbg !2674
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !2675

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2676
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !2677
  %bus_width = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 6, !dbg !2678
  %5 = load i8, i8* %bus_width, align 1, !dbg !2678
  %conv = zext i8 %5 to i32, !dbg !2676
  %cmp = icmp eq i32 %conv, 3, !dbg !2679
  br i1 %cmp, label %if.end, label %if.then, !dbg !2680

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !2681
  br label %return, !dbg !2681

if.end:                                           ; preds = %land.lhs.true
  store i8 1, i8* %val, align 1, !dbg !2682
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2683
  %7 = load i8, i8* %val, align 1, !dbg !2684
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2685
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 21, !dbg !2686
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !2687
  %9 = load i32, i32* %generic_cmd6_time, align 4, !dbg !2687
  %call = call i32 @__mmc_switch(%struct.mmc_card* %6, i8 zeroext 1, i8 zeroext -71, i8 zeroext %7, i32 %9, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !2688
  store i32 %call, i32* %err, align 4, !dbg !2689
  %10 = load i32, i32* %err, align 4, !dbg !2690
  %tobool3 = icmp ne i32 %10, 0, !dbg !2690
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !2692

if.then4:                                         ; preds = %if.end
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2693
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 1, !dbg !2693
  %call5 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !2693
  %12 = load i32, i32* %err, align 4, !dbg !2693
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i8* %call5, i32 %12) #6, !dbg !2693
  %13 = load i32, i32* %err, align 4, !dbg !2695
  store i32 %13, i32* %retval, align 4, !dbg !2696
  br label %return, !dbg !2696

if.end7:                                          ; preds = %if.end
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2697
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 3, !dbg !2699
  %15 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !2699
  %hs400_downgrade = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %15, i32 0, i32 15, !dbg !2700
  %16 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hs400_downgrade, align 8, !dbg !2700
  %tobool8 = icmp ne void (%struct.mmc_host*)* %16, null, !dbg !2697
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !2701

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2702
  %ops10 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 3, !dbg !2703
  %18 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops10, align 8, !dbg !2703
  %hs400_downgrade11 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %18, i32 0, i32 15, !dbg !2704
  %19 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hs400_downgrade11, align 8, !dbg !2704
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2705
  call void %19(%struct.mmc_host* %20) #5, !dbg !2702
  br label %if.end12, !dbg !2702

if.end12:                                         ; preds = %if.then9, %if.end7
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2706
  call void @mmc_set_timing(%struct.mmc_host* %21, i32 1) #5, !dbg !2707
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2708
  %ext_csd13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 21, !dbg !2709
  %hs_max_dtr = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd13, i32 0, i32 17, !dbg !2710
  %23 = load i32, i32* %hs_max_dtr, align 8, !dbg !2710
  store i32 %23, i32* %max_dtr, align 4, !dbg !2711
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2712
  %25 = load i32, i32* %max_dtr, align 4, !dbg !2713
  call void @mmc_set_clock(%struct.mmc_host* %24, i32 %25) #5, !dbg !2714
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2715
  %call14 = call i32 @mmc_switch_status(%struct.mmc_card* %26, i1 zeroext true) #5, !dbg !2716
  store i32 %call14, i32* %err, align 4, !dbg !2717
  %27 = load i32, i32* %err, align 4, !dbg !2718
  %tobool15 = icmp ne i32 %27, 0, !dbg !2718
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !2720

if.then16:                                        ; preds = %if.end12
  br label %out_err, !dbg !2721

if.end17:                                         ; preds = %if.end12
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2722
  %ops18 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %28, i32 0, i32 3, !dbg !2724
  %29 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops18, align 8, !dbg !2724
  %hs400_prepare_ddr = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %29, i32 0, i32 14, !dbg !2725
  %30 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %hs400_prepare_ddr, align 8, !dbg !2725
  %tobool19 = icmp ne i32 (%struct.mmc_host*)* %30, null, !dbg !2722
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !2726

if.then20:                                        ; preds = %if.end17
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2727
  %ops21 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %31, i32 0, i32 3, !dbg !2728
  %32 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops21, align 8, !dbg !2728
  %hs400_prepare_ddr22 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %32, i32 0, i32 14, !dbg !2729
  %33 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %hs400_prepare_ddr22, align 8, !dbg !2729
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2730
  %call23 = call i32 %33(%struct.mmc_host* %34) #5, !dbg !2727
  br label %if.end24, !dbg !2727

if.end24:                                         ; preds = %if.then20, %if.end17
  %35 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2731
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2732
  %ext_csd25 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 21, !dbg !2733
  %generic_cmd6_time26 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd25, i32 0, i32 14, !dbg !2734
  %37 = load i32, i32* %generic_cmd6_time26, align 4, !dbg !2734
  %call27 = call i32 @mmc_switch(%struct.mmc_card* %35, i8 zeroext 1, i8 zeroext -73, i8 zeroext 6, i32 %37) #5, !dbg !2735
  store i32 %call27, i32* %err, align 4, !dbg !2736
  %38 = load i32, i32* %err, align 4, !dbg !2737
  %tobool28 = icmp ne i32 %38, 0, !dbg !2737
  br i1 %tobool28, label %if.then29, label %if.end33, !dbg !2739

if.then29:                                        ; preds = %if.end24
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2740
  %class_dev30 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %39, i32 0, i32 1, !dbg !2740
  %call31 = call i8* @dev_name(%struct.device* %class_dev30) #5, !dbg !2740
  %40 = load i32, i32* %err, align 4, !dbg !2740
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0), i8* %call31, i32 %40) #6, !dbg !2740
  %41 = load i32, i32* %err, align 4, !dbg !2742
  store i32 %41, i32* %retval, align 4, !dbg !2743
  br label %return, !dbg !2743

if.end33:                                         ; preds = %if.end24
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2744
  %drive_strength = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %42, i32 0, i32 38, !dbg !2745
  %43 = load i32, i32* %drive_strength, align 8, !dbg !2745
  %shl = shl i32 %43, 4, !dbg !2746
  %or = or i32 3, %shl, !dbg !2747
  %conv34 = trunc i32 %or to i8, !dbg !2748
  store i8 %conv34, i8* %val, align 1, !dbg !2749
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2750
  %45 = load i8, i8* %val, align 1, !dbg !2751
  %46 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2752
  %ext_csd35 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %46, i32 0, i32 21, !dbg !2753
  %generic_cmd6_time36 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd35, i32 0, i32 14, !dbg !2754
  %47 = load i32, i32* %generic_cmd6_time36, align 4, !dbg !2754
  %call37 = call i32 @__mmc_switch(%struct.mmc_card* %44, i8 zeroext 1, i8 zeroext -71, i8 zeroext %45, i32 %47, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !2755
  store i32 %call37, i32* %err, align 4, !dbg !2756
  %48 = load i32, i32* %err, align 4, !dbg !2757
  %tobool38 = icmp ne i32 %48, 0, !dbg !2757
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !2759

if.then39:                                        ; preds = %if.end33
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2760
  %class_dev40 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %49, i32 0, i32 1, !dbg !2760
  %call41 = call i8* @dev_name(%struct.device* %class_dev40) #5, !dbg !2760
  %50 = load i32, i32* %err, align 4, !dbg !2760
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i8* %call41, i32 %50) #6, !dbg !2760
  %51 = load i32, i32* %err, align 4, !dbg !2762
  store i32 %51, i32* %retval, align 4, !dbg !2763
  br label %return, !dbg !2763

if.end43:                                         ; preds = %if.end33
  %52 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2764
  call void @mmc_set_timing(%struct.mmc_host* %52, i32 10) #5, !dbg !2765
  %53 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2766
  call void @mmc_set_bus_speed(%struct.mmc_card* %53) #5, !dbg !2767
  %54 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2768
  %ops44 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %54, i32 0, i32 3, !dbg !2770
  %55 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops44, align 8, !dbg !2770
  %hs400_complete = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %55, i32 0, i32 16, !dbg !2771
  %56 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hs400_complete, align 8, !dbg !2771
  %tobool45 = icmp ne void (%struct.mmc_host*)* %56, null, !dbg !2768
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !2772

if.then46:                                        ; preds = %if.end43
  %57 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2773
  %ops47 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %57, i32 0, i32 3, !dbg !2774
  %58 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops47, align 8, !dbg !2774
  %hs400_complete48 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %58, i32 0, i32 16, !dbg !2775
  %59 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hs400_complete48, align 8, !dbg !2775
  %60 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2776
  call void %59(%struct.mmc_host* %60) #5, !dbg !2773
  br label %if.end49, !dbg !2773

if.end49:                                         ; preds = %if.then46, %if.end43
  %61 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2777
  %call50 = call i32 @mmc_switch_status(%struct.mmc_card* %61, i1 zeroext true) #5, !dbg !2778
  store i32 %call50, i32* %err, align 4, !dbg !2779
  %62 = load i32, i32* %err, align 4, !dbg !2780
  %tobool51 = icmp ne i32 %62, 0, !dbg !2780
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !2782

if.then52:                                        ; preds = %if.end49
  br label %out_err, !dbg !2783

if.end53:                                         ; preds = %if.end49
  store i32 0, i32* %retval, align 4, !dbg !2784
  br label %return, !dbg !2784

out_err:                                          ; preds = %if.then52, %if.then16
  call void @llvm.dbg.label(metadata !2785), !dbg !2786
  %63 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2787
  %host54 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %63, i32 0, i32 0, !dbg !2787
  %64 = load %struct.mmc_host*, %struct.mmc_host** %host54, align 8, !dbg !2787
  %class_dev55 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %64, i32 0, i32 1, !dbg !2787
  %call56 = call i8* @dev_name(%struct.device* %class_dev55) #5, !dbg !2787
  %65 = load i32, i32* %err, align 4, !dbg !2787
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %call56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.mmc_select_hs400, i64 0, i64 0), i32 %65) #6, !dbg !2787
  %66 = load i32, i32* %err, align 4, !dbg !2788
  store i32 %66, i32* %retval, align 4, !dbg !2789
  br label %return, !dbg !2789

return:                                           ; preds = %out_err, %if.end53, %if.then39, %if.then29, %if.then4, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !2790
  ret i32 %67, !dbg !2790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_hs400_to_hs200(%struct.mmc_card* %card) #0 !dbg !2791 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %max_dtr = alloca i32, align 4
  %err = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !2794, metadata !DIExpression()), !dbg !2795
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2796
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !2797
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !2797
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !2795
  call void @llvm.dbg.declare(metadata i32* %max_dtr, metadata !2798, metadata !DIExpression()), !dbg !2799
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2800, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.declare(metadata i8* %val, metadata !2802, metadata !DIExpression()), !dbg !2803
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2804
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !2805
  %hs_max_dtr = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 17, !dbg !2806
  %3 = load i32, i32* %hs_max_dtr, align 8, !dbg !2806
  store i32 %3, i32* %max_dtr, align 4, !dbg !2807
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2808
  %5 = load i32, i32* %max_dtr, align 4, !dbg !2809
  call void @mmc_set_clock(%struct.mmc_host* %4, i32 %5) #5, !dbg !2810
  store i8 1, i8* %val, align 1, !dbg !2811
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2812
  %7 = load i8, i8* %val, align 1, !dbg !2813
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2814
  %ext_csd2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 21, !dbg !2815
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd2, i32 0, i32 14, !dbg !2816
  %9 = load i32, i32* %generic_cmd6_time, align 4, !dbg !2816
  %call = call i32 @__mmc_switch(%struct.mmc_card* %6, i8 zeroext 1, i8 zeroext -71, i8 zeroext %7, i32 %9, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !2817
  store i32 %call, i32* %err, align 4, !dbg !2818
  %10 = load i32, i32* %err, align 4, !dbg !2819
  %tobool = icmp ne i32 %10, 0, !dbg !2819
  br i1 %tobool, label %if.then, label %if.end, !dbg !2821

if.then:                                          ; preds = %entry
  br label %out_err, !dbg !2822

if.end:                                           ; preds = %entry
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2823
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 3, !dbg !2825
  %12 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !2825
  %hs400_downgrade = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %12, i32 0, i32 15, !dbg !2826
  %13 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hs400_downgrade, align 8, !dbg !2826
  %tobool3 = icmp ne void (%struct.mmc_host*)* %13, null, !dbg !2823
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !2827

if.then4:                                         ; preds = %if.end
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2828
  %ops5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 3, !dbg !2829
  %15 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops5, align 8, !dbg !2829
  %hs400_downgrade6 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %15, i32 0, i32 15, !dbg !2830
  %16 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hs400_downgrade6, align 8, !dbg !2830
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2831
  call void %16(%struct.mmc_host* %17) #5, !dbg !2828
  br label %if.end7, !dbg !2828

if.end7:                                          ; preds = %if.then4, %if.end
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2832
  call void @mmc_set_timing(%struct.mmc_host* %18, i32 8) #5, !dbg !2833
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2834
  %call8 = call i32 @mmc_switch_status(%struct.mmc_card* %19, i1 zeroext true) #5, !dbg !2835
  store i32 %call8, i32* %err, align 4, !dbg !2836
  %20 = load i32, i32* %err, align 4, !dbg !2837
  %tobool9 = icmp ne i32 %20, 0, !dbg !2837
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !2839

if.then10:                                        ; preds = %if.end7
  br label %out_err, !dbg !2840

if.end11:                                         ; preds = %if.end7
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2841
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2842
  %ext_csd12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 21, !dbg !2843
  %generic_cmd6_time13 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd12, i32 0, i32 14, !dbg !2844
  %23 = load i32, i32* %generic_cmd6_time13, align 4, !dbg !2844
  %call14 = call i32 @__mmc_switch(%struct.mmc_card* %21, i8 zeroext 1, i8 zeroext -73, i8 zeroext 2, i32 %23, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !2845
  store i32 %call14, i32* %err, align 4, !dbg !2846
  %24 = load i32, i32* %err, align 4, !dbg !2847
  %tobool15 = icmp ne i32 %24, 0, !dbg !2847
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !2849

if.then16:                                        ; preds = %if.end11
  br label %out_err, !dbg !2850

if.end17:                                         ; preds = %if.end11
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2851
  call void @mmc_set_timing(%struct.mmc_host* %25, i32 1) #5, !dbg !2852
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2853
  %call18 = call i32 @mmc_switch_status(%struct.mmc_card* %26, i1 zeroext true) #5, !dbg !2854
  store i32 %call18, i32* %err, align 4, !dbg !2855
  %27 = load i32, i32* %err, align 4, !dbg !2856
  %tobool19 = icmp ne i32 %27, 0, !dbg !2856
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !2858

if.then20:                                        ; preds = %if.end17
  br label %out_err, !dbg !2859

if.end21:                                         ; preds = %if.end17
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2860
  %drive_strength = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 38, !dbg !2861
  %29 = load i32, i32* %drive_strength, align 8, !dbg !2861
  %shl = shl i32 %29, 4, !dbg !2862
  %or = or i32 2, %shl, !dbg !2863
  %conv = trunc i32 %or to i8, !dbg !2864
  store i8 %conv, i8* %val, align 1, !dbg !2865
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2866
  %31 = load i8, i8* %val, align 1, !dbg !2867
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2868
  %ext_csd22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 21, !dbg !2869
  %generic_cmd6_time23 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd22, i32 0, i32 14, !dbg !2870
  %33 = load i32, i32* %generic_cmd6_time23, align 4, !dbg !2870
  %call24 = call i32 @__mmc_switch(%struct.mmc_card* %30, i8 zeroext 1, i8 zeroext -71, i8 zeroext %31, i32 %33, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !2871
  store i32 %call24, i32* %err, align 4, !dbg !2872
  %34 = load i32, i32* %err, align 4, !dbg !2873
  %tobool25 = icmp ne i32 %34, 0, !dbg !2873
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !2875

if.then26:                                        ; preds = %if.end21
  br label %out_err, !dbg !2876

if.end27:                                         ; preds = %if.end21
  %35 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2877
  call void @mmc_set_timing(%struct.mmc_host* %35, i32 9) #5, !dbg !2878
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2879
  %call28 = call i32 @mmc_switch_status(%struct.mmc_card* %36, i1 zeroext false) #5, !dbg !2880
  store i32 %call28, i32* %err, align 4, !dbg !2881
  %37 = load i32, i32* %err, align 4, !dbg !2882
  %tobool29 = icmp ne i32 %37, 0, !dbg !2882
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !2884

if.then30:                                        ; preds = %if.end27
  br label %out_err, !dbg !2885

if.end31:                                         ; preds = %if.end27
  %38 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2886
  call void @mmc_set_bus_speed(%struct.mmc_card* %38) #5, !dbg !2887
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2888
  %ops32 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %39, i32 0, i32 3, !dbg !2890
  %40 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops32, align 8, !dbg !2890
  %prepare_hs400_tuning = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %40, i32 0, i32 13, !dbg !2891
  %41 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %prepare_hs400_tuning, align 8, !dbg !2891
  %tobool33 = icmp ne i32 (%struct.mmc_host*, %struct.mmc_ios*)* %41, null, !dbg !2888
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !2892

if.then34:                                        ; preds = %if.end31
  %42 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2893
  %ops35 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %42, i32 0, i32 3, !dbg !2894
  %43 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops35, align 8, !dbg !2894
  %prepare_hs400_tuning36 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %43, i32 0, i32 13, !dbg !2895
  %44 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %prepare_hs400_tuning36, align 8, !dbg !2895
  %45 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2896
  %46 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2897
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %46, i32 0, i32 29, !dbg !2898
  %call37 = call i32 %44(%struct.mmc_host* %45, %struct.mmc_ios* %ios) #5, !dbg !2893
  br label %if.end38, !dbg !2893

if.end38:                                         ; preds = %if.then34, %if.end31
  store i32 0, i32* %retval, align 4, !dbg !2899
  br label %return, !dbg !2899

out_err:                                          ; preds = %if.then30, %if.then26, %if.then20, %if.then16, %if.then10, %if.then
  call void @llvm.dbg.label(metadata !2900), !dbg !2901
  %47 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2902
  %host39 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %47, i32 0, i32 0, !dbg !2902
  %48 = load %struct.mmc_host*, %struct.mmc_host** %host39, align 8, !dbg !2902
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %48, i32 0, i32 1, !dbg !2902
  %call40 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !2902
  %49 = load i32, i32* %err, align 4, !dbg !2902
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %call40, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.mmc_hs400_to_hs200, i64 0, i64 0), i32 %49) #6, !dbg !2902
  %50 = load i32, i32* %err, align 4, !dbg !2903
  store i32 %50, i32* %retval, align 4, !dbg !2904
  br label %return, !dbg !2904

return:                                           ; preds = %out_err, %if.end38
  %51 = load i32, i32* %retval, align 4, !dbg !2905
  ret i32 %51, !dbg !2905
}

; Function Attrs: noredzone
declare dso_local void @mmc_set_clock(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @__mmc_switch(%struct.mmc_card*, i8 zeroext, i8 zeroext, i8 zeroext, i32, i8 zeroext, i1 zeroext, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_timing(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_switch_status(%struct.mmc_card*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_set_bus_speed(%struct.mmc_card* %card) #0 !dbg !2906 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %max_dtr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !2909, metadata !DIExpression()), !dbg !2910
  call void @llvm.dbg.declare(metadata i32* %max_dtr, metadata !2911, metadata !DIExpression()), !dbg !2912
  store i32 -1, i32* %max_dtr, align 4, !dbg !2912
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2913
  %call = call zeroext i1 @mmc_card_hs200(%struct.mmc_card* %0) #5, !dbg !2915
  br i1 %call, label %land.lhs.true, label %lor.lhs.false, !dbg !2916

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2917
  %call1 = call zeroext i1 @mmc_card_hs400(%struct.mmc_card* %1) #5, !dbg !2918
  br i1 %call1, label %land.lhs.true, label %if.else, !dbg !2919

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %max_dtr, align 4, !dbg !2920
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2921
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 21, !dbg !2922
  %hs200_max_dtr = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 18, !dbg !2923
  %4 = load i32, i32* %hs200_max_dtr, align 4, !dbg !2923
  %cmp = icmp ugt i32 %2, %4, !dbg !2924
  br i1 %cmp, label %if.then, label %if.else, !dbg !2925

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2926
  %ext_csd2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 21, !dbg !2927
  %hs200_max_dtr3 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd2, i32 0, i32 18, !dbg !2928
  %6 = load i32, i32* %hs200_max_dtr3, align 4, !dbg !2928
  store i32 %6, i32* %max_dtr, align 4, !dbg !2929
  br label %if.end18, !dbg !2930

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2931
  %call4 = call i32 @mmc_card_hs(%struct.mmc_card* %7) #5, !dbg !2933
  %tobool = icmp ne i32 %call4, 0, !dbg !2933
  br i1 %tobool, label %land.lhs.true5, label %if.else11, !dbg !2934

land.lhs.true5:                                   ; preds = %if.else
  %8 = load i32, i32* %max_dtr, align 4, !dbg !2935
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2936
  %ext_csd6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 21, !dbg !2937
  %hs_max_dtr = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd6, i32 0, i32 17, !dbg !2938
  %10 = load i32, i32* %hs_max_dtr, align 8, !dbg !2938
  %cmp7 = icmp ugt i32 %8, %10, !dbg !2939
  br i1 %cmp7, label %if.then8, label %if.else11, !dbg !2940

if.then8:                                         ; preds = %land.lhs.true5
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2941
  %ext_csd9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 21, !dbg !2942
  %hs_max_dtr10 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd9, i32 0, i32 17, !dbg !2943
  %12 = load i32, i32* %hs_max_dtr10, align 8, !dbg !2943
  store i32 %12, i32* %max_dtr, align 4, !dbg !2944
  br label %if.end17, !dbg !2945

if.else11:                                        ; preds = %land.lhs.true5, %if.else
  %13 = load i32, i32* %max_dtr, align 4, !dbg !2946
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2948
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %14, i32 0, i32 20, !dbg !2949
  %max_dtr12 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 7, !dbg !2950
  %15 = load i32, i32* %max_dtr12, align 4, !dbg !2950
  %cmp13 = icmp ugt i32 %13, %15, !dbg !2951
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !2952

if.then14:                                        ; preds = %if.else11
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2953
  %csd15 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 20, !dbg !2954
  %max_dtr16 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd15, i32 0, i32 7, !dbg !2955
  %17 = load i32, i32* %max_dtr16, align 4, !dbg !2955
  store i32 %17, i32* %max_dtr, align 4, !dbg !2956
  br label %if.end, !dbg !2957

if.end:                                           ; preds = %if.then14, %if.else11
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then8
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !2958
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 0, !dbg !2959
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !2959
  %20 = load i32, i32* %max_dtr, align 4, !dbg !2960
  call void @mmc_set_clock(%struct.mmc_host* %19, i32 %20) #5, !dbg !2961
  ret void, !dbg !2962
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !2963 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !2966, metadata !DIExpression()), !dbg !2967
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2968
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !2970
  %1 = load i8*, i8** %init_name, align 8, !dbg !2970
  %tobool = icmp ne i8* %1, null, !dbg !2968
  br i1 %tobool, label %if.then, label %if.end, !dbg !2971

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2972
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !2973
  %3 = load i8*, i8** %init_name1, align 8, !dbg !2973
  store i8* %3, i8** %retval, align 8, !dbg !2974
  br label %return, !dbg !2974

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !2975
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !2976
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #5, !dbg !2977
  store i8* %call, i8** %retval, align 8, !dbg !2978
  br label %return, !dbg !2978

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !2979
  ret i8* %5, !dbg !2979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_attach_mmc(%struct.mmc_host* %host) #0 !dbg !2980 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  %ocr = alloca i32, align 4
  %rocr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !2981, metadata !DIExpression()), !dbg !2982
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2983, metadata !DIExpression()), !dbg !2984
  call void @llvm.dbg.declare(metadata i32* %ocr, metadata !2985, metadata !DIExpression()), !dbg !2986
  call void @llvm.dbg.declare(metadata i32* %rocr, metadata !2987, metadata !DIExpression()), !dbg !2988
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !2989, metadata !DIExpression()), !dbg !2991
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !2991
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !2991
  %bf.load = load i16, i16* %claimed, align 32, !dbg !2991
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !2991
  %bf.clear = and i16 %bf.lshr, 1, !dbg !2991
  %bf.cast = zext i16 %bf.clear to i32, !dbg !2991
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !2991
  %lnot = xor i1 %tobool, true, !dbg !2991
  %lnot1 = xor i1 %lnot, true, !dbg !2991
  %lnot2 = xor i1 %lnot1, true, !dbg !2991
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !2991
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !2991
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !2992
  %tobool3 = icmp ne i32 %1, 0, !dbg !2992
  %lnot4 = xor i1 %tobool3, true, !dbg !2992
  %lnot6 = xor i1 %lnot4, true, !dbg !2992
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !2992
  %conv = sext i32 %lnot.ext7 to i64, !dbg !2992
  %tobool8 = icmp ne i64 %conv, 0, !dbg !2992
  br i1 %tobool8, label %if.then, label %if.end, !dbg !2991

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2992

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !2994

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !2996

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !2994

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 2218, i32 2305, i64 12) #7, !dbg !2998, !srcloc !3000
  br label %do.end11, !dbg !2998

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 187) #7, !dbg !3001, !srcloc !3003
  br label %do.body12, !dbg !2994

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !3004

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !2994

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !2994

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !2991
  %tobool15 = icmp ne i32 %2, 0, !dbg !2991
  %lnot16 = xor i1 %tobool15, true, !dbg !2991
  %lnot18 = xor i1 %lnot16, true, !dbg !2991
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !2991
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !2991
  store i64 %conv20, i64* %tmp, align 8, !dbg !2992
  %3 = load i64, i64* %tmp, align 8, !dbg !2991
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3006
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !3006
  %5 = load i32, i32* %caps, align 4, !dbg !3006
  %and = and i32 %5, 16, !dbg !3006
  %tobool21 = icmp ne i32 %and, 0, !dbg !3006
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !3008

if.then22:                                        ; preds = %if.end
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3009
  call void @mmc_set_bus_mode(%struct.mmc_host* %6, i32 1) #5, !dbg !3010
  br label %if.end23, !dbg !3010

if.end23:                                         ; preds = %if.then22, %if.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3011
  %call = call i32 @mmc_send_op_cond(%struct.mmc_host* %7, i32 0, i32* %ocr) #5, !dbg !3012
  store i32 %call, i32* %err, align 4, !dbg !3013
  %8 = load i32, i32* %err, align 4, !dbg !3014
  %tobool24 = icmp ne i32 %8, 0, !dbg !3014
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !3016

if.then25:                                        ; preds = %if.end23
  %9 = load i32, i32* %err, align 4, !dbg !3017
  store i32 %9, i32* %retval, align 4, !dbg !3018
  br label %return, !dbg !3018

if.end26:                                         ; preds = %if.end23
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3019
  call void @mmc_attach_bus(%struct.mmc_host* %10, %struct.mmc_bus_ops* @mmc_ops) #5, !dbg !3020
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3021
  %ocr_avail_mmc = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 11, !dbg !3023
  %12 = load i32, i32* %ocr_avail_mmc, align 16, !dbg !3023
  %tobool27 = icmp ne i32 %12, 0, !dbg !3021
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !3024

if.then28:                                        ; preds = %if.end26
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3025
  %ocr_avail_mmc29 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 11, !dbg !3026
  %14 = load i32, i32* %ocr_avail_mmc29, align 16, !dbg !3026
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3027
  %ocr_avail = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %15, i32 0, i32 8, !dbg !3028
  store i32 %14, i32* %ocr_avail, align 4, !dbg !3029
  br label %if.end30, !dbg !3027

if.end30:                                         ; preds = %if.then28, %if.end26
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3030
  %caps31 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 17, !dbg !3030
  %17 = load i32, i32* %caps31, align 4, !dbg !3030
  %and32 = and i32 %17, 16, !dbg !3030
  %tobool33 = icmp ne i32 %and32, 0, !dbg !3030
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !3032

if.then34:                                        ; preds = %if.end30
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3033
  %call35 = call i32 @mmc_spi_read_ocr(%struct.mmc_host* %18, i32 1, i32* %ocr) #5, !dbg !3035
  store i32 %call35, i32* %err, align 4, !dbg !3036
  %19 = load i32, i32* %err, align 4, !dbg !3037
  %tobool36 = icmp ne i32 %19, 0, !dbg !3037
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3039

if.then37:                                        ; preds = %if.then34
  br label %err54, !dbg !3040

if.end38:                                         ; preds = %if.then34
  br label %if.end39, !dbg !3041

if.end39:                                         ; preds = %if.end38, %if.end30
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3042
  %21 = load i32, i32* %ocr, align 4, !dbg !3043
  %call40 = call i32 @mmc_select_voltage(%struct.mmc_host* %20, i32 %21) #5, !dbg !3044
  store i32 %call40, i32* %rocr, align 4, !dbg !3045
  %22 = load i32, i32* %rocr, align 4, !dbg !3046
  %tobool41 = icmp ne i32 %22, 0, !dbg !3046
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !3048

if.then42:                                        ; preds = %if.end39
  store i32 -22, i32* %err, align 4, !dbg !3049
  br label %err54, !dbg !3051

if.end43:                                         ; preds = %if.end39
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3052
  %24 = load i32, i32* %rocr, align 4, !dbg !3053
  %call44 = call i32 @mmc_init_card(%struct.mmc_host* %23, i32 %24, %struct.mmc_card* null) #5, !dbg !3054
  store i32 %call44, i32* %err, align 4, !dbg !3055
  %25 = load i32, i32* %err, align 4, !dbg !3056
  %tobool45 = icmp ne i32 %25, 0, !dbg !3056
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !3058

if.then46:                                        ; preds = %if.end43
  br label %err54, !dbg !3059

if.end47:                                         ; preds = %if.end43
  %26 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3060
  call void @mmc_release_host(%struct.mmc_host* %26) #5, !dbg !3061
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3062
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %27, i32 0, i32 38, !dbg !3063
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3063
  %call48 = call i32 @mmc_add_card(%struct.mmc_card* %28) #5, !dbg !3064
  store i32 %call48, i32* %err, align 4, !dbg !3065
  %29 = load i32, i32* %err, align 4, !dbg !3066
  %tobool49 = icmp ne i32 %29, 0, !dbg !3066
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !3068

if.then50:                                        ; preds = %if.end47
  br label %remove_card, !dbg !3069

if.end51:                                         ; preds = %if.end47
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3070
  call void @mmc_claim_host(%struct.mmc_host* %30) #5, !dbg !3071
  store i32 0, i32* %retval, align 4, !dbg !3072
  br label %return, !dbg !3072

remove_card:                                      ; preds = %if.then50
  call void @llvm.dbg.label(metadata !3073), !dbg !3074
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3075
  %card52 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %31, i32 0, i32 38, !dbg !3076
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card52, align 8, !dbg !3076
  call void @mmc_remove_card(%struct.mmc_card* %32) #5, !dbg !3077
  %33 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3078
  call void @mmc_claim_host(%struct.mmc_host* %33) #5, !dbg !3079
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3080
  %card53 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 38, !dbg !3081
  store %struct.mmc_card* null, %struct.mmc_card** %card53, align 8, !dbg !3082
  br label %err54, !dbg !3080

err54:                                            ; preds = %remove_card, %if.then46, %if.then42, %if.then37
  call void @llvm.dbg.label(metadata !3083), !dbg !3084
  %35 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3085
  call void @mmc_detach_bus(%struct.mmc_host* %35) #5, !dbg !3086
  %36 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3087
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %36, i32 0, i32 1, !dbg !3087
  %call55 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !3087
  %37 = load i32, i32* %err, align 4, !dbg !3087
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i8* %call55, i32 %37) #6, !dbg !3087
  %38 = load i32, i32* %err, align 4, !dbg !3088
  store i32 %38, i32* %retval, align 4, !dbg !3089
  br label %return, !dbg !3089

return:                                           ; preds = %err54, %if.end51, %if.then25
  %39 = load i32, i32* %retval, align 4, !dbg !3090
  ret i32 %39, !dbg !3090
}

; Function Attrs: noredzone
declare dso_local void @mmc_set_bus_mode(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_op_cond(%struct.mmc_host*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_attach_bus(%struct.mmc_host*, %struct.mmc_bus_ops*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_spi_read_ocr(%struct.mmc_host*, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_select_voltage(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_init_card(%struct.mmc_host* %host, i32 %ocr, %struct.mmc_card* %oldcard) #0 !dbg !3091 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  %oldcard.addr = alloca %struct.mmc_card*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  %cid = alloca [4 x i32], align 16
  %rocr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  %timeout_ms = alloca i32, align 4
  %__UNIQUE_ID___x185 = alloca i32, align 4
  %__UNIQUE_ID___y186 = alloca i32, align 4
  %tmp263 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3094, metadata !DIExpression()), !dbg !3095
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  store %struct.mmc_card* %oldcard, %struct.mmc_card** %oldcard.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %oldcard.addr, metadata !3098, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !3100, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3102, metadata !DIExpression()), !dbg !3103
  call void @llvm.dbg.declare(metadata [4 x i32]* %cid, metadata !3104, metadata !DIExpression()), !dbg !3105
  call void @llvm.dbg.declare(metadata i32* %rocr, metadata !3106, metadata !DIExpression()), !dbg !3107
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !3108, metadata !DIExpression()), !dbg !3110
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3110
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !3110
  %bf.load = load i16, i16* %claimed, align 32, !dbg !3110
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !3110
  %bf.clear = and i16 %bf.lshr, 1, !dbg !3110
  %bf.cast = zext i16 %bf.clear to i32, !dbg !3110
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !3110
  %lnot = xor i1 %tobool, true, !dbg !3110
  %lnot1 = xor i1 %lnot, true, !dbg !3110
  %lnot2 = xor i1 %lnot1, true, !dbg !3110
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !3110
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !3110
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !3111
  %tobool3 = icmp ne i32 %1, 0, !dbg !3111
  %lnot4 = xor i1 %tobool3, true, !dbg !3111
  %lnot6 = xor i1 %lnot4, true, !dbg !3111
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !3111
  %conv = sext i32 %lnot.ext7 to i64, !dbg !3111
  %tobool8 = icmp ne i64 %conv, 0, !dbg !3111
  br i1 %tobool8, label %if.then, label %if.end, !dbg !3110

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !3111

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !3113

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !3115

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !3113

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 1561, i32 2305, i64 12) #7, !dbg !3117, !srcloc !3119
  br label %do.end11, !dbg !3117

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 184) #7, !dbg !3120, !srcloc !3122
  br label %do.body12, !dbg !3113

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !3123

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !3113

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !3113

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !3110
  %tobool15 = icmp ne i32 %2, 0, !dbg !3110
  %lnot16 = xor i1 %tobool15, true, !dbg !3110
  %lnot18 = xor i1 %lnot16, true, !dbg !3110
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !3110
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !3110
  store i64 %conv20, i64* %tmp, align 8, !dbg !3111
  %3 = load i64, i64* %tmp, align 8, !dbg !3110
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3125
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !3125
  %5 = load i32, i32* %caps, align 4, !dbg !3125
  %and = and i32 %5, 16, !dbg !3125
  %tobool21 = icmp ne i32 %and, 0, !dbg !3125
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !3127

if.then22:                                        ; preds = %if.end
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3128
  call void @mmc_set_bus_mode(%struct.mmc_host* %6, i32 1) #5, !dbg !3129
  br label %if.end23, !dbg !3129

if.end23:                                         ; preds = %if.then22, %if.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3130
  %call = call i32 @mmc_go_idle(%struct.mmc_host* %7) #5, !dbg !3131
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3132
  %9 = load i32, i32* %ocr.addr, align 4, !dbg !3133
  %or = or i32 %9, 1073741824, !dbg !3134
  %call24 = call i32 @mmc_send_op_cond(%struct.mmc_host* %8, i32 %or, i32* %rocr) #5, !dbg !3135
  store i32 %call24, i32* %err, align 4, !dbg !3136
  %10 = load i32, i32* %err, align 4, !dbg !3137
  %tobool25 = icmp ne i32 %10, 0, !dbg !3137
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !3139

if.then26:                                        ; preds = %if.end23
  br label %err356, !dbg !3140

if.end27:                                         ; preds = %if.end23
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3141
  %caps28 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 17, !dbg !3141
  %12 = load i32, i32* %caps28, align 4, !dbg !3141
  %and29 = and i32 %12, 16, !dbg !3141
  %tobool30 = icmp ne i32 %and29, 0, !dbg !3141
  br i1 %tobool30, label %if.then31, label %if.end38, !dbg !3143

if.then31:                                        ; preds = %if.end27
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3144
  %14 = load i8, i8* @use_spi_crc, align 1, !dbg !3146
  %tobool32 = trunc i8 %14 to i1, !dbg !3146
  %conv33 = zext i1 %tobool32 to i32, !dbg !3146
  %call34 = call i32 @mmc_spi_set_crc(%struct.mmc_host* %13, i32 %conv33) #5, !dbg !3147
  store i32 %call34, i32* %err, align 4, !dbg !3148
  %15 = load i32, i32* %err, align 4, !dbg !3149
  %tobool35 = icmp ne i32 %15, 0, !dbg !3149
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !3151

if.then36:                                        ; preds = %if.then31
  br label %err356, !dbg !3152

if.end37:                                         ; preds = %if.then31
  br label %if.end38, !dbg !3153

if.end38:                                         ; preds = %if.end37, %if.end27
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3154
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %cid, i64 0, i64 0, !dbg !3155
  %call39 = call i32 @mmc_send_cid(%struct.mmc_host* %16, i32* %arraydecay) #5, !dbg !3156
  store i32 %call39, i32* %err, align 4, !dbg !3157
  %17 = load i32, i32* %err, align 4, !dbg !3158
  %tobool40 = icmp ne i32 %17, 0, !dbg !3158
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !3160

if.then41:                                        ; preds = %if.end38
  br label %err356, !dbg !3161

if.end42:                                         ; preds = %if.end38
  %18 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3162
  %tobool43 = icmp ne %struct.mmc_card* %18, null, !dbg !3162
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !3164

if.then44:                                        ; preds = %if.end42
  %arraydecay45 = getelementptr inbounds [4 x i32], [4 x i32]* %cid, i64 0, i64 0, !dbg !3165
  %19 = bitcast i32* %arraydecay45 to i8*, !dbg !3165
  %20 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3168
  %raw_cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 15, !dbg !3169
  %arraydecay46 = getelementptr inbounds [4 x i32], [4 x i32]* %raw_cid, i64 0, i64 0, !dbg !3168
  %21 = bitcast i32* %arraydecay46 to i8*, !dbg !3168
  %call47 = call i32 @memcmp(i8* %19, i8* %21, i64 16) #5, !dbg !3170
  %cmp = icmp ne i32 %call47, 0, !dbg !3171
  br i1 %cmp, label %if.then49, label %if.end51, !dbg !3172

if.then49:                                        ; preds = %if.then44
  store i32 0, i32* %tmp50, align 4, !dbg !3173
  %22 = load i32, i32* %tmp50, align 4, !dbg !3177
  store i32 -2, i32* %err, align 4, !dbg !3178
  br label %err356, !dbg !3179

if.end51:                                         ; preds = %if.then44
  %23 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3180
  store %struct.mmc_card* %23, %struct.mmc_card** %card, align 8, !dbg !3181
  br label %if.end62, !dbg !3182

if.else:                                          ; preds = %if.end42
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3183
  %call52 = call %struct.mmc_card* @mmc_alloc_card(%struct.mmc_host* %24, %struct.device_type* @mmc_type) #5, !dbg !3185
  store %struct.mmc_card* %call52, %struct.mmc_card** %card, align 8, !dbg !3186
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3187
  %26 = bitcast %struct.mmc_card* %25 to i8*, !dbg !3187
  %call53 = call zeroext i1 @IS_ERR(i8* %26) #5, !dbg !3189
  br i1 %call53, label %if.then54, label %if.end57, !dbg !3190

if.then54:                                        ; preds = %if.else
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3191
  %28 = bitcast %struct.mmc_card* %27 to i8*, !dbg !3191
  %call55 = call i64 @PTR_ERR(i8* %28) #5, !dbg !3193
  %conv56 = trunc i64 %call55 to i32, !dbg !3193
  store i32 %conv56, i32* %err, align 4, !dbg !3194
  br label %err356, !dbg !3195

if.end57:                                         ; preds = %if.else
  %29 = load i32, i32* %ocr.addr, align 4, !dbg !3196
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3197
  %ocr58 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %30, i32 0, i32 2, !dbg !3198
  store i32 %29, i32* %ocr58, align 8, !dbg !3199
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3200
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %31, i32 0, i32 4, !dbg !3201
  store i32 0, i32* %type, align 8, !dbg !3202
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3203
  %rca = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 3, !dbg !3204
  store i32 1, i32* %rca, align 4, !dbg !3205
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3206
  %raw_cid59 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 15, !dbg !3207
  %arraydecay60 = getelementptr inbounds [4 x i32], [4 x i32]* %raw_cid59, i64 0, i64 0, !dbg !3208
  %34 = bitcast i32* %arraydecay60 to i8*, !dbg !3208
  %arraydecay61 = getelementptr inbounds [4 x i32], [4 x i32]* %cid, i64 0, i64 0, !dbg !3208
  %35 = bitcast i32* %arraydecay61 to i8*, !dbg !3208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 16 %35, i64 16, i1 false), !dbg !3208
  br label %if.end62

if.end62:                                         ; preds = %if.end57, %if.end51
  %36 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3209
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %36, i32 0, i32 3, !dbg !3211
  %37 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !3211
  %init_card = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %37, i32 0, i32 9, !dbg !3212
  %38 = load void (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*, %struct.mmc_card*)** %init_card, align 8, !dbg !3212
  %tobool63 = icmp ne void (%struct.mmc_host*, %struct.mmc_card*)* %38, null, !dbg !3209
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !3213

if.then64:                                        ; preds = %if.end62
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3214
  %ops65 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %39, i32 0, i32 3, !dbg !3215
  %40 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops65, align 8, !dbg !3215
  %init_card66 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %40, i32 0, i32 9, !dbg !3216
  %41 = load void (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*, %struct.mmc_card*)** %init_card66, align 8, !dbg !3216
  %42 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3217
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3218
  call void %41(%struct.mmc_host* %42, %struct.mmc_card* %43) #5, !dbg !3214
  br label %if.end67, !dbg !3214

if.end67:                                         ; preds = %if.then64, %if.end62
  %44 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3219
  %caps68 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %44, i32 0, i32 17, !dbg !3219
  %45 = load i32, i32* %caps68, align 4, !dbg !3219
  %and69 = and i32 %45, 16, !dbg !3219
  %tobool70 = icmp ne i32 %and69, 0, !dbg !3219
  br i1 %tobool70, label %if.end76, label %if.then71, !dbg !3221

if.then71:                                        ; preds = %if.end67
  %46 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3222
  %call72 = call i32 @mmc_set_relative_addr(%struct.mmc_card* %46) #5, !dbg !3224
  store i32 %call72, i32* %err, align 4, !dbg !3225
  %47 = load i32, i32* %err, align 4, !dbg !3226
  %tobool73 = icmp ne i32 %47, 0, !dbg !3226
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !3228

if.then74:                                        ; preds = %if.then71
  br label %free_card, !dbg !3229

if.end75:                                         ; preds = %if.then71
  %48 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3230
  call void @mmc_set_bus_mode(%struct.mmc_host* %48, i32 2) #5, !dbg !3231
  br label %if.end76, !dbg !3232

if.end76:                                         ; preds = %if.end75, %if.end67
  %49 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3233
  %tobool77 = icmp ne %struct.mmc_card* %49, null, !dbg !3233
  br i1 %tobool77, label %if.end92, label %if.then78, !dbg !3235

if.then78:                                        ; preds = %if.end76
  %50 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3236
  %51 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3238
  %raw_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %51, i32 0, i32 16, !dbg !3239
  %arraydecay79 = getelementptr inbounds [4 x i32], [4 x i32]* %raw_csd, i64 0, i64 0, !dbg !3238
  %call80 = call i32 @mmc_send_csd(%struct.mmc_card* %50, i32* %arraydecay79) #5, !dbg !3240
  store i32 %call80, i32* %err, align 4, !dbg !3241
  %52 = load i32, i32* %err, align 4, !dbg !3242
  %tobool81 = icmp ne i32 %52, 0, !dbg !3242
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !3244

if.then82:                                        ; preds = %if.then78
  br label %free_card, !dbg !3245

if.end83:                                         ; preds = %if.then78
  %53 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3246
  %call84 = call i32 @mmc_decode_csd(%struct.mmc_card* %53) #5, !dbg !3247
  store i32 %call84, i32* %err, align 4, !dbg !3248
  %54 = load i32, i32* %err, align 4, !dbg !3249
  %tobool85 = icmp ne i32 %54, 0, !dbg !3249
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !3251

if.then86:                                        ; preds = %if.end83
  br label %free_card, !dbg !3252

if.end87:                                         ; preds = %if.end83
  %55 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3253
  %call88 = call i32 @mmc_decode_cid(%struct.mmc_card* %55) #5, !dbg !3254
  store i32 %call88, i32* %err, align 4, !dbg !3255
  %56 = load i32, i32* %err, align 4, !dbg !3256
  %tobool89 = icmp ne i32 %56, 0, !dbg !3256
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !3258

if.then90:                                        ; preds = %if.end87
  br label %free_card, !dbg !3259

if.end91:                                         ; preds = %if.end87
  br label %if.end92, !dbg !3260

if.end92:                                         ; preds = %if.end91, %if.end76
  %57 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3261
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %57, i32 0, i32 20, !dbg !3263
  %dsr_imp = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 12, !dbg !3264
  %bf.load93 = load i8, i8* %dsr_imp, align 8, !dbg !3264
  %bf.lshr94 = lshr i8 %bf.load93, 4, !dbg !3264
  %bf.clear95 = and i8 %bf.lshr94, 1, !dbg !3264
  %bf.cast96 = zext i8 %bf.clear95 to i32, !dbg !3264
  %tobool97 = icmp ne i32 %bf.cast96, 0, !dbg !3261
  br i1 %tobool97, label %land.lhs.true, label %if.end101, !dbg !3265

land.lhs.true:                                    ; preds = %if.end92
  %58 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3266
  %dsr_req = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %58, i32 0, i32 60, !dbg !3267
  %59 = load i32, i32* %dsr_req, align 8, !dbg !3267
  %tobool98 = icmp ne i32 %59, 0, !dbg !3266
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !3268

if.then99:                                        ; preds = %land.lhs.true
  %60 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3269
  %call100 = call i32 @mmc_set_dsr(%struct.mmc_host* %60) #5, !dbg !3270
  br label %if.end101, !dbg !3270

if.end101:                                        ; preds = %if.then99, %land.lhs.true, %if.end92
  %61 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3271
  %caps102 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %61, i32 0, i32 17, !dbg !3271
  %62 = load i32, i32* %caps102, align 4, !dbg !3271
  %and103 = and i32 %62, 16, !dbg !3271
  %tobool104 = icmp ne i32 %and103, 0, !dbg !3271
  br i1 %tobool104, label %if.end110, label %if.then105, !dbg !3273

if.then105:                                       ; preds = %if.end101
  %63 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3274
  %call106 = call i32 @mmc_select_card(%struct.mmc_card* %63) #5, !dbg !3276
  store i32 %call106, i32* %err, align 4, !dbg !3277
  %64 = load i32, i32* %err, align 4, !dbg !3278
  %tobool107 = icmp ne i32 %64, 0, !dbg !3278
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !3280

if.then108:                                       ; preds = %if.then105
  br label %free_card, !dbg !3281

if.end109:                                        ; preds = %if.then105
  br label %if.end110, !dbg !3282

if.end110:                                        ; preds = %if.end109, %if.end101
  %65 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3283
  %tobool111 = icmp ne %struct.mmc_card* %65, null, !dbg !3283
  br i1 %tobool111, label %if.end123, label %if.then112, !dbg !3285

if.then112:                                       ; preds = %if.end110
  %66 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3286
  %call113 = call i32 @mmc_read_ext_csd(%struct.mmc_card* %66) #5, !dbg !3288
  store i32 %call113, i32* %err, align 4, !dbg !3289
  %67 = load i32, i32* %err, align 4, !dbg !3290
  %tobool114 = icmp ne i32 %67, 0, !dbg !3290
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !3292

if.then115:                                       ; preds = %if.then112
  br label %free_card, !dbg !3293

if.end116:                                        ; preds = %if.then112
  %68 = load i32, i32* %rocr, align 4, !dbg !3294
  %conv117 = zext i32 %68 to i64, !dbg !3294
  %and118 = and i64 %conv117, 1073741824, !dbg !3296
  %tobool119 = icmp ne i64 %and118, 0, !dbg !3296
  br i1 %tobool119, label %if.then120, label %if.end122, !dbg !3297

if.then120:                                       ; preds = %if.end116
  %69 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3298
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %69, i32 0, i32 5, !dbg !3298
  %70 = load i32, i32* %state, align 4, !dbg !3298
  %or121 = or i32 %70, 4, !dbg !3298
  store i32 %or121, i32* %state, align 4, !dbg !3298
  br label %if.end122, !dbg !3298

if.end122:                                        ; preds = %if.then120, %if.end116
  %71 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3299
  call void @mmc_set_erase_size(%struct.mmc_card* %71) #5, !dbg !3300
  br label %if.end123, !dbg !3301

if.end123:                                        ; preds = %if.end122, %if.end110
  %72 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3302
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %72, i32 0, i32 21, !dbg !3304
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !3305
  %73 = load i8, i8* %rev, align 8, !dbg !3305
  %conv124 = zext i8 %73 to i32, !dbg !3302
  %cmp125 = icmp sge i32 %conv124, 3, !dbg !3306
  br i1 %cmp125, label %if.then127, label %if.end143, !dbg !3307

if.then127:                                       ; preds = %if.end123
  %74 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3308
  %75 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3310
  %ext_csd128 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %75, i32 0, i32 21, !dbg !3311
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd128, i32 0, i32 14, !dbg !3312
  %76 = load i32, i32* %generic_cmd6_time, align 4, !dbg !3312
  %call129 = call i32 @mmc_switch(%struct.mmc_card* %74, i8 zeroext 1, i8 zeroext -81, i8 zeroext 1, i32 %76) #5, !dbg !3313
  store i32 %call129, i32* %err, align 4, !dbg !3314
  %77 = load i32, i32* %err, align 4, !dbg !3315
  %tobool130 = icmp ne i32 %77, 0, !dbg !3315
  br i1 %tobool130, label %land.lhs.true131, label %if.end135, !dbg !3317

land.lhs.true131:                                 ; preds = %if.then127
  %78 = load i32, i32* %err, align 4, !dbg !3318
  %cmp132 = icmp ne i32 %78, -74, !dbg !3319
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !3320

if.then134:                                       ; preds = %land.lhs.true131
  br label %free_card, !dbg !3321

if.end135:                                        ; preds = %land.lhs.true131, %if.then127
  %79 = load i32, i32* %err, align 4, !dbg !3322
  %tobool136 = icmp ne i32 %79, 0, !dbg !3322
  br i1 %tobool136, label %if.then137, label %if.else140, !dbg !3324

if.then137:                                       ; preds = %if.end135
  store i32 0, i32* %err, align 4, !dbg !3325
  %80 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3327
  %ext_csd138 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %80, i32 0, i32 21, !dbg !3328
  %enhanced_area_offset = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd138, i32 0, i32 26, !dbg !3329
  store i64 -22, i64* %enhanced_area_offset, align 8, !dbg !3330
  %81 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3331
  %ext_csd139 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %81, i32 0, i32 21, !dbg !3332
  %enhanced_area_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd139, i32 0, i32 27, !dbg !3333
  store i32 -22, i32* %enhanced_area_size, align 8, !dbg !3334
  br label %if.end142, !dbg !3335

if.else140:                                       ; preds = %if.end135
  %82 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3336
  %ext_csd141 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %82, i32 0, i32 21, !dbg !3338
  %erase_group_def = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd141, i32 0, i32 1, !dbg !3339
  store i8 1, i8* %erase_group_def, align 1, !dbg !3340
  %83 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3341
  call void @mmc_set_erase_size(%struct.mmc_card* %83) #5, !dbg !3342
  br label %if.end142

if.end142:                                        ; preds = %if.else140, %if.then137
  br label %if.end143, !dbg !3343

if.end143:                                        ; preds = %if.end142, %if.end123
  %84 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3344
  %ext_csd144 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %84, i32 0, i32 21, !dbg !3346
  %part_config = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd144, i32 0, i32 6, !dbg !3347
  %85 = load i8, i8* %part_config, align 2, !dbg !3347
  %conv145 = zext i8 %85 to i32, !dbg !3344
  %and146 = and i32 %conv145, 7, !dbg !3348
  %tobool147 = icmp ne i32 %and146, 0, !dbg !3348
  br i1 %tobool147, label %if.then148, label %if.end164, !dbg !3349

if.then148:                                       ; preds = %if.end143
  %86 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3350
  %ext_csd149 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %86, i32 0, i32 21, !dbg !3352
  %part_config150 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd149, i32 0, i32 6, !dbg !3353
  %87 = load i8, i8* %part_config150, align 2, !dbg !3354
  %conv151 = zext i8 %87 to i32, !dbg !3354
  %and152 = and i32 %conv151, -8, !dbg !3354
  %conv153 = trunc i32 %and152 to i8, !dbg !3354
  store i8 %conv153, i8* %part_config150, align 2, !dbg !3354
  %88 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3355
  %89 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3356
  %ext_csd154 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %89, i32 0, i32 21, !dbg !3357
  %part_config155 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd154, i32 0, i32 6, !dbg !3358
  %90 = load i8, i8* %part_config155, align 2, !dbg !3358
  %91 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3359
  %ext_csd156 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %91, i32 0, i32 21, !dbg !3360
  %part_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd156, i32 0, i32 12, !dbg !3361
  %92 = load i32, i32* %part_time, align 4, !dbg !3361
  %call157 = call i32 @mmc_switch(%struct.mmc_card* %88, i8 zeroext 1, i8 zeroext -77, i8 zeroext %90, i32 %92) #5, !dbg !3362
  store i32 %call157, i32* %err, align 4, !dbg !3363
  %93 = load i32, i32* %err, align 4, !dbg !3364
  %tobool158 = icmp ne i32 %93, 0, !dbg !3364
  br i1 %tobool158, label %land.lhs.true159, label %if.end163, !dbg !3366

land.lhs.true159:                                 ; preds = %if.then148
  %94 = load i32, i32* %err, align 4, !dbg !3367
  %cmp160 = icmp ne i32 %94, -74, !dbg !3368
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !3369

if.then162:                                       ; preds = %land.lhs.true159
  br label %free_card, !dbg !3370

if.end163:                                        ; preds = %land.lhs.true159, %if.then148
  br label %if.end164, !dbg !3371

if.end164:                                        ; preds = %if.end163, %if.end143
  %95 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3372
  %ext_csd165 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %95, i32 0, i32 21, !dbg !3374
  %rev166 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd165, i32 0, i32 0, !dbg !3375
  %96 = load i8, i8* %rev166, align 8, !dbg !3375
  %conv167 = zext i8 %96 to i32, !dbg !3372
  %cmp168 = icmp sge i32 %conv167, 6, !dbg !3376
  br i1 %cmp168, label %if.then170, label %if.end184, !dbg !3377

if.then170:                                       ; preds = %if.end164
  %97 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3378
  %98 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3380
  %ext_csd171 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %98, i32 0, i32 21, !dbg !3381
  %generic_cmd6_time172 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd171, i32 0, i32 14, !dbg !3382
  %99 = load i32, i32* %generic_cmd6_time172, align 4, !dbg !3382
  %call173 = call i32 @mmc_switch(%struct.mmc_card* %97, i8 zeroext 1, i8 zeroext 34, i8 zeroext 1, i32 %99) #5, !dbg !3383
  store i32 %call173, i32* %err, align 4, !dbg !3384
  %100 = load i32, i32* %err, align 4, !dbg !3385
  %tobool174 = icmp ne i32 %100, 0, !dbg !3385
  br i1 %tobool174, label %land.lhs.true175, label %if.end179, !dbg !3387

land.lhs.true175:                                 ; preds = %if.then170
  %101 = load i32, i32* %err, align 4, !dbg !3388
  %cmp176 = icmp ne i32 %101, -74, !dbg !3389
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !3390

if.then178:                                       ; preds = %land.lhs.true175
  br label %free_card, !dbg !3391

if.end179:                                        ; preds = %land.lhs.true175, %if.then170
  %102 = load i32, i32* %err, align 4, !dbg !3392
  %tobool180 = icmp ne i32 %102, 0, !dbg !3392
  br i1 %tobool180, label %if.end183, label %if.then181, !dbg !3394

if.then181:                                       ; preds = %if.end179
  %103 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3395
  %ext_csd182 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %103, i32 0, i32 21, !dbg !3396
  %power_off_notification = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd182, i32 0, i32 16, !dbg !3397
  store i8 1, i8* %power_off_notification, align 4, !dbg !3398
  br label %if.end183, !dbg !3395

if.end183:                                        ; preds = %if.then181, %if.end179
  br label %if.end184, !dbg !3399

if.end184:                                        ; preds = %if.end183, %if.end164
  %104 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3400
  %call185 = call i32 @mmc_can_discard(%struct.mmc_card* %104) #5, !dbg !3402
  %tobool186 = icmp ne i32 %call185, 0, !dbg !3402
  br i1 %tobool186, label %if.then187, label %if.else188, !dbg !3403

if.then187:                                       ; preds = %if.end184
  %105 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3404
  %erase_arg = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %105, i32 0, i32 13, !dbg !3405
  store i32 3, i32* %erase_arg, align 4, !dbg !3406
  br label %if.end196, !dbg !3404

if.else188:                                       ; preds = %if.end184
  %106 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3407
  %call189 = call i32 @mmc_can_trim(%struct.mmc_card* %106) #5, !dbg !3409
  %tobool190 = icmp ne i32 %call189, 0, !dbg !3409
  br i1 %tobool190, label %if.then191, label %if.else193, !dbg !3410

if.then191:                                       ; preds = %if.else188
  %107 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3411
  %erase_arg192 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %107, i32 0, i32 13, !dbg !3412
  store i32 1, i32* %erase_arg192, align 4, !dbg !3413
  br label %if.end195, !dbg !3411

if.else193:                                       ; preds = %if.else188
  %108 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3414
  %erase_arg194 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %108, i32 0, i32 13, !dbg !3415
  store i32 0, i32* %erase_arg194, align 4, !dbg !3416
  br label %if.end195

if.end195:                                        ; preds = %if.else193, %if.then191
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then187
  %109 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3417
  %call197 = call i32 @mmc_select_timing(%struct.mmc_card* %109) #5, !dbg !3418
  store i32 %call197, i32* %err, align 4, !dbg !3419
  %110 = load i32, i32* %err, align 4, !dbg !3420
  %tobool198 = icmp ne i32 %110, 0, !dbg !3420
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !3422

if.then199:                                       ; preds = %if.end196
  br label %free_card, !dbg !3423

if.end200:                                        ; preds = %if.end196
  %111 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3424
  %call201 = call zeroext i1 @mmc_card_hs200(%struct.mmc_card* %111) #5, !dbg !3426
  br i1 %call201, label %if.then202, label %if.else216, !dbg !3427

if.then202:                                       ; preds = %if.end200
  %112 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3428
  %doing_init_tune = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %112, i32 0, i32 30, !dbg !3430
  %bf.load203 = load i16, i16* %doing_init_tune, align 32, !dbg !3431
  %bf.clear204 = and i16 %bf.load203, -9, !dbg !3431
  %bf.set = or i16 %bf.clear204, 8, !dbg !3431
  store i16 %bf.set, i16* %doing_init_tune, align 32, !dbg !3431
  %113 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3432
  %call205 = call i32 @mmc_hs200_tuning(%struct.mmc_card* %113) #5, !dbg !3433
  store i32 %call205, i32* %err, align 4, !dbg !3434
  %114 = load i32, i32* %err, align 4, !dbg !3435
  %tobool206 = icmp ne i32 %114, 0, !dbg !3435
  br i1 %tobool206, label %if.end209, label %if.then207, !dbg !3437

if.then207:                                       ; preds = %if.then202
  %115 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3438
  %call208 = call i32 @mmc_select_hs400(%struct.mmc_card* %115) #5, !dbg !3439
  store i32 %call208, i32* %err, align 4, !dbg !3440
  br label %if.end209, !dbg !3441

if.end209:                                        ; preds = %if.then207, %if.then202
  %116 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3442
  %doing_init_tune210 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %116, i32 0, i32 30, !dbg !3443
  %bf.load211 = load i16, i16* %doing_init_tune210, align 32, !dbg !3444
  %bf.clear212 = and i16 %bf.load211, -9, !dbg !3444
  store i16 %bf.clear212, i16* %doing_init_tune210, align 32, !dbg !3444
  %117 = load i32, i32* %err, align 4, !dbg !3445
  %tobool213 = icmp ne i32 %117, 0, !dbg !3445
  br i1 %tobool213, label %if.then214, label %if.end215, !dbg !3447

if.then214:                                       ; preds = %if.end209
  br label %free_card, !dbg !3448

if.end215:                                        ; preds = %if.end209
  br label %if.end232, !dbg !3449

if.else216:                                       ; preds = %if.end200
  %118 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3450
  %call217 = call zeroext i1 @mmc_card_hs400es(%struct.mmc_card* %118) #5, !dbg !3452
  br i1 %call217, label %if.end231, label %if.then218, !dbg !3453

if.then218:                                       ; preds = %if.else216
  %119 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3454
  %call219 = call i32 @mmc_select_bus_width(%struct.mmc_card* %119) #5, !dbg !3456
  store i32 %call219, i32* %err, align 4, !dbg !3457
  %120 = load i32, i32* %err, align 4, !dbg !3458
  %cmp220 = icmp sgt i32 %120, 0, !dbg !3460
  br i1 %cmp220, label %land.lhs.true222, label %if.end230, !dbg !3461

land.lhs.true222:                                 ; preds = %if.then218
  %121 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3462
  %call223 = call i32 @mmc_card_hs(%struct.mmc_card* %121) #5, !dbg !3463
  %tobool224 = icmp ne i32 %call223, 0, !dbg !3463
  br i1 %tobool224, label %if.then225, label %if.end230, !dbg !3464

if.then225:                                       ; preds = %land.lhs.true222
  %122 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3465
  %call226 = call i32 @mmc_select_hs_ddr(%struct.mmc_card* %122) #5, !dbg !3467
  store i32 %call226, i32* %err, align 4, !dbg !3468
  %123 = load i32, i32* %err, align 4, !dbg !3469
  %tobool227 = icmp ne i32 %123, 0, !dbg !3469
  br i1 %tobool227, label %if.then228, label %if.end229, !dbg !3471

if.then228:                                       ; preds = %if.then225
  br label %free_card, !dbg !3472

if.end229:                                        ; preds = %if.then225
  br label %if.end230, !dbg !3473

if.end230:                                        ; preds = %if.end229, %land.lhs.true222, %if.then218
  br label %if.end231, !dbg !3474

if.end231:                                        ; preds = %if.end230, %if.else216
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end215
  %124 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3475
  %call233 = call i32 @mmc_select_powerclass(%struct.mmc_card* %124) #5, !dbg !3476
  %125 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3477
  %ext_csd234 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %125, i32 0, i32 21, !dbg !3479
  %hpi = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd234, i32 0, i32 30, !dbg !3480
  %126 = load i8, i8* %hpi, align 1, !dbg !3480
  %tobool235 = trunc i8 %126 to i1, !dbg !3480
  br i1 %tobool235, label %if.then236, label %if.end256, !dbg !3481

if.then236:                                       ; preds = %if.end232
  %127 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3482
  %128 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3484
  %ext_csd237 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %128, i32 0, i32 21, !dbg !3485
  %generic_cmd6_time238 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd237, i32 0, i32 14, !dbg !3486
  %129 = load i32, i32* %generic_cmd6_time238, align 4, !dbg !3486
  %call239 = call i32 @mmc_switch(%struct.mmc_card* %127, i8 zeroext 1, i8 zeroext -95, i8 zeroext 1, i32 %129) #5, !dbg !3487
  store i32 %call239, i32* %err, align 4, !dbg !3488
  %130 = load i32, i32* %err, align 4, !dbg !3489
  %tobool240 = icmp ne i32 %130, 0, !dbg !3489
  br i1 %tobool240, label %land.lhs.true241, label %if.end245, !dbg !3491

land.lhs.true241:                                 ; preds = %if.then236
  %131 = load i32, i32* %err, align 4, !dbg !3492
  %cmp242 = icmp ne i32 %131, -74, !dbg !3493
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !3494

if.then244:                                       ; preds = %land.lhs.true241
  br label %free_card, !dbg !3495

if.end245:                                        ; preds = %land.lhs.true241, %if.then236
  %132 = load i32, i32* %err, align 4, !dbg !3496
  %tobool246 = icmp ne i32 %132, 0, !dbg !3496
  br i1 %tobool246, label %if.then247, label %if.else252, !dbg !3498

if.then247:                                       ; preds = %if.end245
  %133 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3499
  %host248 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %133, i32 0, i32 0, !dbg !3499
  %134 = load %struct.mmc_host*, %struct.mmc_host** %host248, align 8, !dbg !3499
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %134, i32 0, i32 1, !dbg !3499
  %call249 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !3499
  %call250 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %call249) #6, !dbg !3499
  %135 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3501
  %ext_csd251 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %135, i32 0, i32 21, !dbg !3502
  %hpi_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd251, i32 0, i32 29, !dbg !3503
  store i8 0, i8* %hpi_en, align 8, !dbg !3504
  store i32 0, i32* %err, align 4, !dbg !3505
  br label %if.end255, !dbg !3506

if.else252:                                       ; preds = %if.end245
  %136 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3507
  %ext_csd253 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %136, i32 0, i32 21, !dbg !3509
  %hpi_en254 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd253, i32 0, i32 29, !dbg !3510
  store i8 1, i8* %hpi_en254, align 8, !dbg !3511
  br label %if.end255

if.end255:                                        ; preds = %if.else252, %if.then247
  br label %if.end256, !dbg !3512

if.end256:                                        ; preds = %if.end255, %if.end232
  %137 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3513
  %ext_csd257 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %137, i32 0, i32 21, !dbg !3515
  %cache_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd257, i32 0, i32 28, !dbg !3516
  %138 = load i32, i32* %cache_size, align 4, !dbg !3516
  %cmp258 = icmp ugt i32 %138, 0, !dbg !3517
  br i1 %cmp258, label %if.then260, label %if.end284, !dbg !3518

if.then260:                                       ; preds = %if.end256
  call void @llvm.dbg.declare(metadata i32* %timeout_ms, metadata !3519, metadata !DIExpression()), !dbg !3521
  store i32 1600, i32* %timeout_ms, align 4, !dbg !3521
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x185, metadata !3522, metadata !DIExpression()), !dbg !3524
  %139 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3524
  %ext_csd261 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %139, i32 0, i32 21, !dbg !3524
  %generic_cmd6_time262 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd261, i32 0, i32 14, !dbg !3524
  %140 = load i32, i32* %generic_cmd6_time262, align 4, !dbg !3524
  store i32 %140, i32* %__UNIQUE_ID___x185, align 4, !dbg !3524
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y186, metadata !3525, metadata !DIExpression()), !dbg !3524
  %141 = load i32, i32* %timeout_ms, align 4, !dbg !3524
  store i32 %141, i32* %__UNIQUE_ID___y186, align 4, !dbg !3524
  %142 = load i32, i32* %__UNIQUE_ID___x185, align 4, !dbg !3524
  %143 = load i32, i32* %__UNIQUE_ID___y186, align 4, !dbg !3524
  %cmp264 = icmp ugt i32 %142, %143, !dbg !3524
  br i1 %cmp264, label %cond.true, label %cond.false, !dbg !3524

cond.true:                                        ; preds = %if.then260
  %144 = load i32, i32* %__UNIQUE_ID___x185, align 4, !dbg !3524
  br label %cond.end, !dbg !3524

cond.false:                                       ; preds = %if.then260
  %145 = load i32, i32* %__UNIQUE_ID___y186, align 4, !dbg !3524
  br label %cond.end, !dbg !3524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %144, %cond.true ], [ %145, %cond.false ], !dbg !3524
  store i32 %cond, i32* %tmp263, align 4, !dbg !3524
  %146 = load i32, i32* %tmp263, align 4, !dbg !3524
  store i32 %146, i32* %timeout_ms, align 4, !dbg !3526
  %147 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3527
  %148 = load i32, i32* %timeout_ms, align 4, !dbg !3528
  %call266 = call i32 @mmc_switch(%struct.mmc_card* %147, i8 zeroext 1, i8 zeroext 33, i8 zeroext 1, i32 %148) #5, !dbg !3529
  store i32 %call266, i32* %err, align 4, !dbg !3530
  %149 = load i32, i32* %err, align 4, !dbg !3531
  %tobool267 = icmp ne i32 %149, 0, !dbg !3531
  br i1 %tobool267, label %land.lhs.true268, label %if.end272, !dbg !3533

land.lhs.true268:                                 ; preds = %cond.end
  %150 = load i32, i32* %err, align 4, !dbg !3534
  %cmp269 = icmp ne i32 %150, -74, !dbg !3535
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !3536

if.then271:                                       ; preds = %land.lhs.true268
  br label %free_card, !dbg !3537

if.end272:                                        ; preds = %land.lhs.true268, %cond.end
  %151 = load i32, i32* %err, align 4, !dbg !3538
  %tobool273 = icmp ne i32 %151, 0, !dbg !3538
  br i1 %tobool273, label %if.then274, label %if.else280, !dbg !3540

if.then274:                                       ; preds = %if.end272
  %152 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3541
  %host275 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %152, i32 0, i32 0, !dbg !3541
  %153 = load %struct.mmc_host*, %struct.mmc_host** %host275, align 8, !dbg !3541
  %class_dev276 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %153, i32 0, i32 1, !dbg !3541
  %call277 = call i8* @dev_name(%struct.device* %class_dev276) #5, !dbg !3541
  %154 = load i32, i32* %err, align 4, !dbg !3541
  %call278 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10, i64 0, i64 0), i8* %call277, i32 %154) #6, !dbg !3541
  %155 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3543
  %ext_csd279 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %155, i32 0, i32 21, !dbg !3544
  %cache_ctrl = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd279, i32 0, i32 7, !dbg !3545
  store i8 0, i8* %cache_ctrl, align 1, !dbg !3546
  store i32 0, i32* %err, align 4, !dbg !3547
  br label %if.end283, !dbg !3548

if.else280:                                       ; preds = %if.end272
  %156 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3549
  %ext_csd281 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %156, i32 0, i32 21, !dbg !3551
  %cache_ctrl282 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd281, i32 0, i32 7, !dbg !3552
  store i8 1, i8* %cache_ctrl282, align 1, !dbg !3553
  br label %if.end283

if.end283:                                        ; preds = %if.else280, %if.then274
  br label %if.end284, !dbg !3554

if.end284:                                        ; preds = %if.end283, %if.end256
  %157 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3555
  %ext_csd285 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %157, i32 0, i32 21, !dbg !3556
  %cmdq_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd285, i32 0, i32 40, !dbg !3557
  store i8 0, i8* %cmdq_en, align 2, !dbg !3558
  %158 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3559
  %ext_csd286 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %158, i32 0, i32 21, !dbg !3561
  %cmdq_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd286, i32 0, i32 41, !dbg !3562
  %159 = load i8, i8* %cmdq_support, align 1, !dbg !3562
  %tobool287 = trunc i8 %159 to i1, !dbg !3562
  br i1 %tobool287, label %land.lhs.true289, label %if.end310, !dbg !3563

land.lhs.true289:                                 ; preds = %if.end284
  %160 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3564
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %160, i32 0, i32 18, !dbg !3565
  %161 = load i32, i32* %caps2, align 8, !dbg !3565
  %and290 = and i32 %161, 8388608, !dbg !3566
  %tobool291 = icmp ne i32 %and290, 0, !dbg !3566
  br i1 %tobool291, label %if.then292, label %if.end310, !dbg !3567

if.then292:                                       ; preds = %land.lhs.true289
  %162 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3568
  %call293 = call i32 @mmc_cmdq_enable(%struct.mmc_card* %162) #5, !dbg !3570
  store i32 %call293, i32* %err, align 4, !dbg !3571
  %163 = load i32, i32* %err, align 4, !dbg !3572
  %tobool294 = icmp ne i32 %163, 0, !dbg !3572
  br i1 %tobool294, label %land.lhs.true295, label %if.end299, !dbg !3574

land.lhs.true295:                                 ; preds = %if.then292
  %164 = load i32, i32* %err, align 4, !dbg !3575
  %cmp296 = icmp ne i32 %164, -74, !dbg !3576
  br i1 %cmp296, label %if.then298, label %if.end299, !dbg !3577

if.then298:                                       ; preds = %land.lhs.true295
  br label %free_card, !dbg !3578

if.end299:                                        ; preds = %land.lhs.true295, %if.then292
  %165 = load i32, i32* %err, align 4, !dbg !3579
  %tobool300 = icmp ne i32 %165, 0, !dbg !3579
  br i1 %tobool300, label %if.then301, label %if.end309, !dbg !3581

if.then301:                                       ; preds = %if.end299
  %166 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3582
  %host302 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %166, i32 0, i32 0, !dbg !3582
  %167 = load %struct.mmc_host*, %struct.mmc_host** %host302, align 8, !dbg !3582
  %class_dev303 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %167, i32 0, i32 1, !dbg !3582
  %call304 = call i8* @dev_name(%struct.device* %class_dev303) #5, !dbg !3582
  %call305 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* %call304) #6, !dbg !3582
  %168 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3584
  %ext_csd306 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %168, i32 0, i32 21, !dbg !3585
  %cmdq_support307 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd306, i32 0, i32 41, !dbg !3586
  store i8 0, i8* %cmdq_support307, align 1, !dbg !3587
  %169 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3588
  %ext_csd308 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %169, i32 0, i32 21, !dbg !3589
  %cmdq_depth = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd308, i32 0, i32 42, !dbg !3590
  store i32 0, i32* %cmdq_depth, align 4, !dbg !3591
  store i32 0, i32* %err, align 4, !dbg !3592
  br label %if.end309, !dbg !3593

if.end309:                                        ; preds = %if.then301, %if.end299
  br label %if.end310, !dbg !3594

if.end310:                                        ; preds = %if.end309, %land.lhs.true289, %if.end284
  %170 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3595
  %ext_csd311 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %170, i32 0, i32 21, !dbg !3596
  %cmdq_en312 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd311, i32 0, i32 40, !dbg !3597
  %171 = load i8, i8* %cmdq_en312, align 2, !dbg !3597
  %tobool313 = trunc i8 %171 to i1, !dbg !3597
  %172 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3598
  %reenable_cmdq = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %172, i32 0, i32 8, !dbg !3599
  %frombool = zext i1 %tobool313 to i8, !dbg !3600
  store i8 %frombool, i8* %reenable_cmdq, align 8, !dbg !3600
  %173 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3601
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %173, i32 0, i32 62, !dbg !3603
  %174 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !3603
  %tobool314 = icmp ne %struct.mmc_cqe_ops* %174, null, !dbg !3601
  br i1 %tobool314, label %land.lhs.true315, label %if.end336, !dbg !3604

land.lhs.true315:                                 ; preds = %if.end310
  %175 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3605
  %cqe_enabled = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %175, i32 0, i32 65, !dbg !3606
  %176 = load i8, i8* %cqe_enabled, align 4, !dbg !3606
  %tobool316 = trunc i8 %176 to i1, !dbg !3606
  br i1 %tobool316, label %if.end336, label %if.then317, !dbg !3607

if.then317:                                       ; preds = %land.lhs.true315
  %177 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3608
  %cqe_ops318 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %177, i32 0, i32 62, !dbg !3610
  %178 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops318, align 64, !dbg !3610
  %cqe_enable = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %178, i32 0, i32 0, !dbg !3611
  %179 = load i32 (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_card*)** %cqe_enable, align 8, !dbg !3611
  %180 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3612
  %181 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3613
  %call319 = call i32 %179(%struct.mmc_host* %180, %struct.mmc_card* %181) #5, !dbg !3608
  store i32 %call319, i32* %err, align 4, !dbg !3614
  %182 = load i32, i32* %err, align 4, !dbg !3615
  %tobool320 = icmp ne i32 %182, 0, !dbg !3615
  br i1 %tobool320, label %if.end335, label %if.then321, !dbg !3617

if.then321:                                       ; preds = %if.then317
  %183 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3618
  %cqe_enabled322 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %183, i32 0, i32 65, !dbg !3620
  store i8 1, i8* %cqe_enabled322, align 4, !dbg !3621
  %184 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3622
  %ext_csd323 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %184, i32 0, i32 21, !dbg !3624
  %cmdq_en324 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd323, i32 0, i32 40, !dbg !3625
  %185 = load i8, i8* %cmdq_en324, align 2, !dbg !3625
  %tobool325 = trunc i8 %185 to i1, !dbg !3625
  br i1 %tobool325, label %if.then326, label %if.else330, !dbg !3626

if.then326:                                       ; preds = %if.then321
  %186 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3627
  %class_dev327 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %186, i32 0, i32 1, !dbg !3627
  %call328 = call i8* @dev_name(%struct.device* %class_dev327) #5, !dbg !3627
  %call329 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i8* %call328) #6, !dbg !3627
  br label %if.end334, !dbg !3629

if.else330:                                       ; preds = %if.then321
  %187 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3630
  %hsq_enabled = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %187, i32 0, i32 67, !dbg !3632
  store i8 1, i8* %hsq_enabled, align 2, !dbg !3633
  %188 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3634
  %class_dev331 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %188, i32 0, i32 1, !dbg !3634
  %call332 = call i8* @dev_name(%struct.device* %class_dev331) #5, !dbg !3634
  %call333 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), i8* %call332) #6, !dbg !3634
  br label %if.end334

if.end334:                                        ; preds = %if.else330, %if.then326
  br label %if.end335, !dbg !3635

if.end335:                                        ; preds = %if.end334, %if.then317
  br label %if.end336, !dbg !3636

if.end336:                                        ; preds = %if.end335, %land.lhs.true315, %if.end310
  %189 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3637
  %caps2337 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %189, i32 0, i32 18, !dbg !3639
  %190 = load i32, i32* %caps2337, align 8, !dbg !3639
  %and338 = and i32 %190, 33554432, !dbg !3640
  %tobool339 = icmp ne i32 %and338, 0, !dbg !3640
  br i1 %tobool339, label %land.lhs.true340, label %if.end348, !dbg !3641

land.lhs.true340:                                 ; preds = %if.end336
  %191 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3642
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %191, i32 0, i32 29, !dbg !3643
  %signal_voltage = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 8, !dbg !3644
  %192 = load i8, i8* %signal_voltage, align 1, !dbg !3644
  %conv341 = zext i8 %192 to i32, !dbg !3642
  %cmp342 = icmp eq i32 %conv341, 0, !dbg !3645
  br i1 %cmp342, label %if.then344, label %if.end348, !dbg !3646

if.then344:                                       ; preds = %land.lhs.true340
  %193 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3647
  %class_dev345 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %193, i32 0, i32 1, !dbg !3647
  %call346 = call i8* @dev_name(%struct.device* %class_dev345) #5, !dbg !3647
  %call347 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.14, i64 0, i64 0), i8* %call346) #6, !dbg !3647
  store i32 -22, i32* %err, align 4, !dbg !3649
  br label %free_card, !dbg !3650

if.end348:                                        ; preds = %land.lhs.true340, %if.end336
  %194 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3651
  %tobool349 = icmp ne %struct.mmc_card* %194, null, !dbg !3651
  br i1 %tobool349, label %if.end352, label %if.then350, !dbg !3653

if.then350:                                       ; preds = %if.end348
  %195 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3654
  %196 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3655
  %card351 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %196, i32 0, i32 38, !dbg !3656
  store %struct.mmc_card* %195, %struct.mmc_card** %card351, align 8, !dbg !3657
  br label %if.end352, !dbg !3655

if.end352:                                        ; preds = %if.then350, %if.end348
  store i32 0, i32* %retval, align 4, !dbg !3658
  br label %return, !dbg !3658

free_card:                                        ; preds = %if.then344, %if.then298, %if.then271, %if.then244, %if.then228, %if.then214, %if.then199, %if.then178, %if.then162, %if.then134, %if.then115, %if.then108, %if.then90, %if.then86, %if.then82, %if.then74
  call void @llvm.dbg.label(metadata !3659), !dbg !3660
  %197 = load %struct.mmc_card*, %struct.mmc_card** %oldcard.addr, align 8, !dbg !3661
  %tobool353 = icmp ne %struct.mmc_card* %197, null, !dbg !3661
  br i1 %tobool353, label %if.end355, label %if.then354, !dbg !3663

if.then354:                                       ; preds = %free_card
  %198 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3664
  call void @mmc_remove_card(%struct.mmc_card* %198) #5, !dbg !3665
  br label %if.end355, !dbg !3665

if.end355:                                        ; preds = %if.then354, %free_card
  br label %err356, !dbg !3661

err356:                                           ; preds = %if.end355, %if.then54, %if.then49, %if.then41, %if.then36, %if.then26
  call void @llvm.dbg.label(metadata !3666), !dbg !3667
  %199 = load i32, i32* %err, align 4, !dbg !3668
  store i32 %199, i32* %retval, align 4, !dbg !3669
  br label %return, !dbg !3669

return:                                           ; preds = %err356, %if.end352
  %200 = load i32, i32* %retval, align 4, !dbg !3670
  ret i32 %200, !dbg !3670
}

; Function Attrs: noredzone
declare dso_local void @mmc_release_host(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_add_card(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_claim_host(%struct.mmc_host* %host) #0 !dbg !3671 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3672, metadata !DIExpression()), !dbg !3673
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3674
  %call = call i32 @__mmc_claim_host(%struct.mmc_host* %0, %struct.mmc_ctx* null, %struct.atomic_t* null) #5, !dbg !3675
  ret void, !dbg !3676
}

; Function Attrs: noredzone
declare dso_local void @mmc_remove_card(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_detach_bus(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_switch(%struct.mmc_card*, i8 zeroext, i8 zeroext, i8 zeroext, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_card_hs200(%struct.mmc_card* %card) #0 !dbg !3677 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3681, metadata !DIExpression()), !dbg !3682
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3683
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !3684
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !3684
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !3685
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !3686
  %2 = load i8, i8* %timing, align 4, !dbg !3686
  %conv = zext i8 %2 to i32, !dbg !3683
  %cmp = icmp eq i32 %conv, 9, !dbg !3687
  ret i1 %cmp, !dbg !3688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_card_hs400(%struct.mmc_card* %card) #0 !dbg !3689 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3692
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !3693
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !3693
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !3694
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !3695
  %2 = load i8, i8* %timing, align 4, !dbg !3695
  %conv = zext i8 %2 to i32, !dbg !3692
  %cmp = icmp eq i32 %conv, 10, !dbg !3696
  ret i1 %cmp, !dbg !3697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_card_hs(%struct.mmc_card* %card) #0 !dbg !3698 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !3699, metadata !DIExpression()), !dbg !3700
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3701
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !3702
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !3702
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !3703
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !3704
  %2 = load i8, i8* %timing, align 4, !dbg !3704
  %conv = zext i8 %2 to i32, !dbg !3701
  %cmp = icmp eq i32 %conv, 2, !dbg !3705
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3706

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !3707
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !3708
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !3708
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !3709
  %timing4 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 7, !dbg !3710
  %5 = load i8, i8* %timing4, align 4, !dbg !3710
  %conv5 = zext i8 %5 to i32, !dbg !3707
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !3711
  br label %lor.end, !dbg !3706

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !3706
  ret i32 %lor.ext, !dbg !3712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !3713 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !3720
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !3721
  %1 = load i8*, i8** %name, align 8, !dbg !3721
  ret i8* %1, !dbg !3722
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_remove(%struct.mmc_host* %host) #0 !dbg !3723 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3726
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !3727
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3727
  call void @mmc_remove_card(%struct.mmc_card* %1) #5, !dbg !3728
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3729
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !3730
  store %struct.mmc_card* null, %struct.mmc_card** %card1, align 8, !dbg !3731
  ret void, !dbg !3732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_detect(%struct.mmc_host* %host) #0 !dbg !3733 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3734, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3736, metadata !DIExpression()), !dbg !3737
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3738
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !3739
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3739
  call void @mmc_get_card(%struct.mmc_card* %1, %struct.mmc_ctx* null) #5, !dbg !3740
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3741
  %call = call i32 @_mmc_detect_card_removed(%struct.mmc_host* %2) #5, !dbg !3742
  store i32 %call, i32* %err, align 4, !dbg !3743
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3744
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 38, !dbg !3745
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !3745
  call void @mmc_put_card(%struct.mmc_card* %4, %struct.mmc_ctx* null) #5, !dbg !3746
  %5 = load i32, i32* %err, align 4, !dbg !3747
  %tobool = icmp ne i32 %5, 0, !dbg !3747
  br i1 %tobool, label %if.then, label %if.end, !dbg !3749

if.then:                                          ; preds = %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3750
  call void @mmc_remove(%struct.mmc_host* %6) #5, !dbg !3752
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3753
  call void @mmc_claim_host(%struct.mmc_host* %7) #5, !dbg !3754
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3755
  call void @mmc_detach_bus(%struct.mmc_host* %8) #5, !dbg !3756
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3757
  call void @mmc_power_off(%struct.mmc_host* %9) #5, !dbg !3758
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3759
  call void @mmc_release_host(%struct.mmc_host* %10) #5, !dbg !3760
  br label %if.end, !dbg !3761

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_suspend(%struct.mmc_host* %host) #0 !dbg !3763 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3766, metadata !DIExpression()), !dbg !3767
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3768
  %call = call i32 @_mmc_suspend(%struct.mmc_host* %0, i1 zeroext true) #5, !dbg !3769
  store i32 %call, i32* %err, align 4, !dbg !3770
  %1 = load i32, i32* %err, align 4, !dbg !3771
  %tobool = icmp ne i32 %1, 0, !dbg !3771
  br i1 %tobool, label %if.end, label %if.then, !dbg !3773

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3774
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !3776
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3776
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 1, !dbg !3777
  call void @pm_runtime_disable(%struct.device* %dev) #5, !dbg !3778
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3779
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 38, !dbg !3780
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !3780
  %dev2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 1, !dbg !3781
  %call3 = call i32 @pm_runtime_set_suspended(%struct.device* %dev2) #5, !dbg !3782
  br label %if.end, !dbg !3783

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %err, align 4, !dbg !3784
  ret i32 %6, !dbg !3785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_resume(%struct.mmc_host* %host) #0 !dbg !3786 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3787, metadata !DIExpression()), !dbg !3788
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3789
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !3790
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3790
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 1, !dbg !3791
  call void @pm_runtime_enable(%struct.device* %dev) #5, !dbg !3792
  ret i32 0, !dbg !3793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_runtime_suspend(%struct.mmc_host* %host) #0 !dbg !3794 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3795, metadata !DIExpression()), !dbg !3796
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3797, metadata !DIExpression()), !dbg !3798
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3799
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !3801
  %1 = load i32, i32* %caps, align 4, !dbg !3801
  %and = and i32 %1, 128, !dbg !3802
  %tobool = icmp ne i32 %and, 0, !dbg !3802
  br i1 %tobool, label %if.end, label %if.then, !dbg !3803

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3804
  br label %return, !dbg !3804

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3805
  %call = call i32 @_mmc_suspend(%struct.mmc_host* %2, i1 zeroext true) #5, !dbg !3806
  store i32 %call, i32* %err, align 4, !dbg !3807
  %3 = load i32, i32* %err, align 4, !dbg !3808
  %tobool1 = icmp ne i32 %3, 0, !dbg !3808
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !3810

if.then2:                                         ; preds = %if.end
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3811
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 1, !dbg !3811
  %call3 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !3811
  %5 = load i32, i32* %err, align 4, !dbg !3811
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i8* %call3, i32 %5) #6, !dbg !3811
  br label %if.end5, !dbg !3811

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load i32, i32* %err, align 4, !dbg !3812
  store i32 %6, i32* %retval, align 4, !dbg !3813
  br label %return, !dbg !3813

return:                                           ; preds = %if.end5, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !3814
  ret i32 %7, !dbg !3814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_runtime_resume(%struct.mmc_host* %host) #0 !dbg !3815 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3818, metadata !DIExpression()), !dbg !3819
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3820
  %call = call i32 @_mmc_resume(%struct.mmc_host* %0) #5, !dbg !3821
  store i32 %call, i32* %err, align 4, !dbg !3822
  %1 = load i32, i32* %err, align 4, !dbg !3823
  %tobool = icmp ne i32 %1, 0, !dbg !3823
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3825

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !3826
  %cmp = icmp ne i32 %2, -123, !dbg !3827
  br i1 %cmp, label %if.then, label %if.end, !dbg !3828

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3829
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 1, !dbg !3829
  %call1 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !3829
  %4 = load i32, i32* %err, align 4, !dbg !3829
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8* %call1, i32 %4) #6, !dbg !3829
  br label %if.end, !dbg !3829

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !3830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_alive(%struct.mmc_host* %host) #0 !dbg !3831 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3832, metadata !DIExpression()), !dbg !3833
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3834
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !3835
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3835
  %call = call i32 @mmc_send_status(%struct.mmc_card* %1, i32* null) #5, !dbg !3836
  ret i32 %call, !dbg !3837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_shutdown(%struct.mmc_host* %host) #0 !dbg !3838 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3839, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3841, metadata !DIExpression()), !dbg !3842
  store i32 0, i32* %err, align 4, !dbg !3842
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3843
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !3845
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3845
  %call = call i32 @mmc_can_poweroff_notify(%struct.mmc_card* %1) #5, !dbg !3846
  %tobool = icmp ne i32 %call, 0, !dbg !3846
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3847

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3848
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 18, !dbg !3849
  %3 = load i32, i32* %caps2, align 8, !dbg !3849
  %and = and i32 %3, 4, !dbg !3850
  %tobool1 = icmp ne i32 %and, 0, !dbg !3850
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3851

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3852
  %call2 = call i32 @_mmc_resume(%struct.mmc_host* %4) #5, !dbg !3853
  store i32 %call2, i32* %err, align 4, !dbg !3854
  br label %if.end, !dbg !3855

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i32, i32* %err, align 4, !dbg !3856
  %tobool3 = icmp ne i32 %5, 0, !dbg !3856
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !3858

if.then4:                                         ; preds = %if.end
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3859
  %call5 = call i32 @_mmc_suspend(%struct.mmc_host* %6, i1 zeroext false) #5, !dbg !3860
  store i32 %call5, i32* %err, align 4, !dbg !3861
  br label %if.end6, !dbg !3862

if.end6:                                          ; preds = %if.then4, %if.end
  %7 = load i32, i32* %err, align 4, !dbg !3863
  ret i32 %7, !dbg !3864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mmc_hw_reset(%struct.mmc_host* %host) #0 !dbg !3865 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %card = alloca %struct.mmc_card*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !3868, metadata !DIExpression()), !dbg !3869
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3870
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !3871
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !3871
  store %struct.mmc_card* %1, %struct.mmc_card** %card, align 8, !dbg !3869
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3872
  %card2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !3873
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !3873
  %call = call i32 @mmc_flush_cache(%struct.mmc_card* %3) #5, !dbg !3874
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3875
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !3877
  %5 = load i32, i32* %caps, align 4, !dbg !3877
  %and = and i32 %5, -2147483648, !dbg !3878
  %tobool = icmp ne i32 %and, 0, !dbg !3878
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !3879

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3880
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 3, !dbg !3881
  %7 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !3881
  %hw_reset = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %7, i32 0, i32 19, !dbg !3882
  %8 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hw_reset, align 8, !dbg !3882
  %tobool3 = icmp ne void (%struct.mmc_host*)* %8, null, !dbg !3880
  br i1 %tobool3, label %land.lhs.true4, label %if.else, !dbg !3883

land.lhs.true4:                                   ; preds = %land.lhs.true
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3884
  %call5 = call i32 @mmc_can_reset(%struct.mmc_card* %9) #5, !dbg !3885
  %tobool6 = icmp ne i32 %call5, 0, !dbg !3885
  br i1 %tobool6, label %if.then, label %if.else, !dbg !3886

if.then:                                          ; preds = %land.lhs.true4
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3887
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3889
  %f_init = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 7, !dbg !3890
  %12 = load i32, i32* %f_init, align 32, !dbg !3890
  call void @mmc_set_clock(%struct.mmc_host* %10, i32 %12) #5, !dbg !3891
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3892
  %ops7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 3, !dbg !3893
  %14 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops7, align 8, !dbg !3893
  %hw_reset8 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %14, i32 0, i32 19, !dbg !3894
  %15 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hw_reset8, align 8, !dbg !3894
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3895
  call void %15(%struct.mmc_host* %16) #5, !dbg !3892
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3896
  call void @mmc_set_initial_state(%struct.mmc_host* %17) #5, !dbg !3897
  br label %if.end, !dbg !3898

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3899
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3901
  %ocr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 2, !dbg !3902
  %20 = load i32, i32* %ocr, align 8, !dbg !3902
  call void @mmc_power_cycle(%struct.mmc_host* %18, i32 %20) #5, !dbg !3903
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3904
  call void @mmc_pwrseq_reset(%struct.mmc_host* %21) #5, !dbg !3905
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3906
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3907
  %ocr9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 2, !dbg !3908
  %24 = load i32, i32* %ocr9, align 8, !dbg !3908
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3909
  %call10 = call i32 @mmc_init_card(%struct.mmc_host* %22, i32 %24, %struct.mmc_card* %25) #5, !dbg !3910
  ret i32 %call10, !dbg !3911
}

; Function Attrs: noredzone
declare dso_local void @mmc_get_card(%struct.mmc_card*, %struct.mmc_ctx*) #2

; Function Attrs: noredzone
declare dso_local i32 @_mmc_detect_card_removed(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_put_card(%struct.mmc_card*, %struct.mmc_ctx*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_power_off(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mmc_suspend(%struct.mmc_host* %host, i1 zeroext %is_suspend) #0 !dbg !3912 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %is_suspend.addr = alloca i8, align 1
  %err = alloca i32, align 4
  %notify_type = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !3915, metadata !DIExpression()), !dbg !3916
  %frombool = zext i1 %is_suspend to i8
  store i8 %frombool, i8* %is_suspend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_suspend.addr, metadata !3917, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3919, metadata !DIExpression()), !dbg !3920
  store i32 0, i32* %err, align 4, !dbg !3920
  call void @llvm.dbg.declare(metadata i32* %notify_type, metadata !3921, metadata !DIExpression()), !dbg !3922
  %0 = load i8, i8* %is_suspend.addr, align 1, !dbg !3923
  %tobool = trunc i8 %0 to i1, !dbg !3923
  %1 = zext i1 %tobool to i64, !dbg !3923
  %cond = select i1 %tobool, i32 2, i32 3, !dbg !3923
  store i32 %cond, i32* %notify_type, align 4, !dbg !3922
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3924
  call void @mmc_claim_host(%struct.mmc_host* %2) #5, !dbg !3925
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3926
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 38, !dbg !3926
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !3926
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 5, !dbg !3926
  %5 = load i32, i32* %state, align 4, !dbg !3926
  %and = and i32 %5, 32, !dbg !3926
  %tobool1 = icmp ne i32 %and, 0, !dbg !3926
  br i1 %tobool1, label %if.then, label %if.end, !dbg !3928

if.then:                                          ; preds = %entry
  br label %out, !dbg !3929

if.end:                                           ; preds = %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3930
  %card2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 38, !dbg !3931
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !3931
  %call = call i32 @mmc_flush_cache(%struct.mmc_card* %7) #5, !dbg !3932
  store i32 %call, i32* %err, align 4, !dbg !3933
  %8 = load i32, i32* %err, align 4, !dbg !3934
  %tobool3 = icmp ne i32 %8, 0, !dbg !3934
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !3936

if.then4:                                         ; preds = %if.end
  br label %out, !dbg !3937

if.end5:                                          ; preds = %if.end
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3938
  %card6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 38, !dbg !3940
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card6, align 8, !dbg !3940
  %call7 = call i32 @mmc_can_poweroff_notify(%struct.mmc_card* %10) #5, !dbg !3941
  %tobool8 = icmp ne i32 %call7, 0, !dbg !3941
  br i1 %tobool8, label %land.lhs.true, label %if.else, !dbg !3942

land.lhs.true:                                    ; preds = %if.end5
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3943
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 18, !dbg !3944
  %12 = load i32, i32* %caps2, align 8, !dbg !3944
  %and9 = and i32 %12, 4, !dbg !3945
  %tobool10 = icmp ne i32 %and9, 0, !dbg !3945
  br i1 %tobool10, label %if.then16, label %lor.lhs.false, !dbg !3946

lor.lhs.false:                                    ; preds = %land.lhs.true
  %13 = load i8, i8* %is_suspend.addr, align 1, !dbg !3947
  %tobool11 = trunc i8 %13 to i1, !dbg !3947
  br i1 %tobool11, label %lor.lhs.false12, label %if.then16, !dbg !3948

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3949
  %caps213 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 18, !dbg !3950
  %15 = load i32, i32* %caps213, align 8, !dbg !3950
  %and14 = and i32 %15, 8, !dbg !3951
  %tobool15 = icmp ne i32 %and14, 0, !dbg !3951
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !3952

if.then16:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %land.lhs.true
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3953
  %card17 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 38, !dbg !3954
  %17 = load %struct.mmc_card*, %struct.mmc_card** %card17, align 8, !dbg !3954
  %18 = load i32, i32* %notify_type, align 4, !dbg !3955
  %call18 = call i32 @mmc_poweroff_notify(%struct.mmc_card* %17, i32 %18) #5, !dbg !3956
  store i32 %call18, i32* %err, align 4, !dbg !3957
  br label %if.end31, !dbg !3958

if.else:                                          ; preds = %lor.lhs.false12, %if.end5
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3959
  %card19 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 38, !dbg !3961
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card19, align 8, !dbg !3961
  %call20 = call i32 @mmc_can_sleep(%struct.mmc_card* %20) #5, !dbg !3962
  %tobool21 = icmp ne i32 %call20, 0, !dbg !3962
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !3963

if.then22:                                        ; preds = %if.else
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3964
  %call23 = call i32 @mmc_sleep(%struct.mmc_host* %21) #5, !dbg !3965
  store i32 %call23, i32* %err, align 4, !dbg !3966
  br label %if.end30, !dbg !3967

if.else24:                                        ; preds = %if.else
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3968
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 17, !dbg !3968
  %23 = load i32, i32* %caps, align 4, !dbg !3968
  %and25 = and i32 %23, 16, !dbg !3968
  %tobool26 = icmp ne i32 %and25, 0, !dbg !3968
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !3970

if.then27:                                        ; preds = %if.else24
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3971
  %call28 = call i32 @mmc_deselect_cards(%struct.mmc_host* %24) #5, !dbg !3972
  store i32 %call28, i32* %err, align 4, !dbg !3973
  br label %if.end29, !dbg !3974

if.end29:                                         ; preds = %if.then27, %if.else24
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then22
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then16
  %25 = load i32, i32* %err, align 4, !dbg !3975
  %tobool32 = icmp ne i32 %25, 0, !dbg !3975
  br i1 %tobool32, label %if.end36, label %if.then33, !dbg !3977

if.then33:                                        ; preds = %if.end31
  %26 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3978
  call void @mmc_power_off(%struct.mmc_host* %26) #5, !dbg !3980
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3981
  %card34 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %27, i32 0, i32 38, !dbg !3981
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card34, align 8, !dbg !3981
  %state35 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 5, !dbg !3981
  %29 = load i32, i32* %state35, align 4, !dbg !3981
  %or = or i32 %29, 32, !dbg !3981
  store i32 %or, i32* %state35, align 4, !dbg !3981
  br label %if.end36, !dbg !3982

if.end36:                                         ; preds = %if.then33, %if.end31
  br label %out, !dbg !3975

out:                                              ; preds = %if.end36, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !3983), !dbg !3984
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !3985
  call void @mmc_release_host(%struct.mmc_host* %30) #5, !dbg !3986
  %31 = load i32, i32* %err, align 4, !dbg !3987
  ret i32 %31, !dbg !3988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !3989 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3991, metadata !DIExpression()), !dbg !3992
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3993
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #5, !dbg !3994
  ret void, !dbg !3995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_suspended(%struct.device* %dev) #0 !dbg !3996 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !3997, metadata !DIExpression()), !dbg !3998
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !3999
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 2) #5, !dbg !4000
  ret i32 %call, !dbg !4001
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_flush_cache(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_can_poweroff_notify(%struct.mmc_card* %card) #0 !dbg !4002 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4007, metadata !DIExpression()), !dbg !4008
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4009
  %tobool = icmp ne %struct.mmc_card* %0, null, !dbg !4009
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !4010

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4011
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 4, !dbg !4011
  %2 = load i32, i32* %type, align 8, !dbg !4011
  %cmp = icmp eq i32 %2, 0, !dbg !4011
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4012

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4013
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 21, !dbg !4014
  %power_off_notification = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 16, !dbg !4015
  %4 = load i8, i8* %power_off_notification, align 4, !dbg !4015
  %conv = zext i8 %4 to i32, !dbg !4013
  %cmp1 = icmp eq i32 %conv, 1, !dbg !4016
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !4017
  %land.ext = zext i1 %5 to i32, !dbg !4012
  ret i32 %land.ext, !dbg !4018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_poweroff_notify(%struct.mmc_card* %card, i32 %notify_type) #0 !dbg !4019 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %notify_type.addr = alloca i32, align 4
  %timeout = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4022, metadata !DIExpression()), !dbg !4023
  store i32 %notify_type, i32* %notify_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %notify_type.addr, metadata !4024, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !4026, metadata !DIExpression()), !dbg !4027
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4028
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !4029
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !4030
  %1 = load i32, i32* %generic_cmd6_time, align 4, !dbg !4030
  store i32 %1, i32* %timeout, align 4, !dbg !4027
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4031, metadata !DIExpression()), !dbg !4032
  %2 = load i32, i32* %notify_type.addr, align 4, !dbg !4033
  %cmp = icmp eq i32 %2, 3, !dbg !4035
  br i1 %cmp, label %if.then, label %if.end, !dbg !4036

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4037
  %ext_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 21, !dbg !4038
  %power_off_longtime = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd1, i32 0, i32 15, !dbg !4039
  %4 = load i32, i32* %power_off_longtime, align 8, !dbg !4039
  store i32 %4, i32* %timeout, align 4, !dbg !4040
  br label %if.end, !dbg !4041

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4042
  %6 = load i32, i32* %notify_type.addr, align 4, !dbg !4043
  %conv = trunc i32 %6 to i8, !dbg !4043
  %7 = load i32, i32* %timeout, align 4, !dbg !4044
  %call = call i32 @__mmc_switch(%struct.mmc_card* %5, i8 zeroext 1, i8 zeroext 34, i8 zeroext %conv, i32 %7, i8 zeroext 0, i1 zeroext false, i1 zeroext false) #5, !dbg !4045
  store i32 %call, i32* %err, align 4, !dbg !4046
  %8 = load i32, i32* %err, align 4, !dbg !4047
  %tobool = icmp ne i32 %8, 0, !dbg !4047
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !4049

if.then2:                                         ; preds = %if.end
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4050
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 0, !dbg !4050
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !4050
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 1, !dbg !4050
  %call3 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !4050
  %11 = load i32, i32* %timeout, align 4, !dbg !4050
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %call3, i32 %11) #6, !dbg !4050
  br label %if.end5, !dbg !4050

if.end5:                                          ; preds = %if.then2, %if.end
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4051
  %ext_csd6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 21, !dbg !4052
  %power_off_notification = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd6, i32 0, i32 16, !dbg !4053
  store i8 0, i8* %power_off_notification, align 4, !dbg !4054
  %13 = load i32, i32* %err, align 4, !dbg !4055
  ret i32 %13, !dbg !4056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_can_sleep(%struct.mmc_card* %card) #0 !dbg !4057 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4058, metadata !DIExpression()), !dbg !4059
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4060
  %tobool = icmp ne %struct.mmc_card* %0, null, !dbg !4060
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4061

land.rhs:                                         ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4062
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 21, !dbg !4063
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !4064
  %2 = load i8, i8* %rev, align 8, !dbg !4064
  %conv = zext i8 %2 to i32, !dbg !4062
  %cmp = icmp sge i32 %conv, 3, !dbg !4065
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !4066
  %land.ext = zext i1 %3 to i32, !dbg !4061
  ret i32 %land.ext, !dbg !4067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sleep(%struct.mmc_host* %host) #0 !dbg !4068 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %cmd = alloca %struct.mmc_command, align 8
  %card = alloca %struct.mmc_card*, align 8
  %timeout_ms = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !4069, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !4071, metadata !DIExpression()), !dbg !4072
  %0 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !4072
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !4072
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !4073, metadata !DIExpression()), !dbg !4074
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4075
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 38, !dbg !4076
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !4076
  store %struct.mmc_card* %2, %struct.mmc_card** %card, align 8, !dbg !4074
  call void @llvm.dbg.declare(metadata i32* %timeout_ms, metadata !4077, metadata !DIExpression()), !dbg !4078
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4079
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 21, !dbg !4079
  %sa_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 13, !dbg !4079
  %4 = load i32, i32* %sa_timeout, align 8, !dbg !4079
  %add = add i32 %4, 10000, !dbg !4079
  %sub = sub i32 %add, 1, !dbg !4079
  %div = udiv i32 %sub, 10000, !dbg !4079
  store i32 %div, i32* %timeout_ms, align 4, !dbg !4078
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4080, metadata !DIExpression()), !dbg !4081
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4082
  call void @mmc_retune_hold(%struct.mmc_host* %5) #5, !dbg !4083
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4084
  %call = call i32 @mmc_deselect_cards(%struct.mmc_host* %6) #5, !dbg !4085
  store i32 %call, i32* %err, align 4, !dbg !4086
  %7 = load i32, i32* %err, align 4, !dbg !4087
  %tobool = icmp ne i32 %7, 0, !dbg !4087
  br i1 %tobool, label %if.then, label %if.end, !dbg !4089

if.then:                                          ; preds = %entry
  br label %out_release, !dbg !4090

if.end:                                           ; preds = %entry
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !4091
  store i32 5, i32* %opcode, align 8, !dbg !4092
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4093
  %rca = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 3, !dbg !4094
  %9 = load i32, i32* %rca, align 4, !dbg !4094
  %shl = shl i32 %9, 16, !dbg !4095
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !4096
  store i32 %shl, i32* %arg, align 4, !dbg !4097
  %arg2 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !4098
  %10 = load i32, i32* %arg2, align 4, !dbg !4099
  %or = or i32 %10, 32768, !dbg !4099
  store i32 %or, i32* %arg2, align 4, !dbg !4099
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4100
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 17, !dbg !4102
  %12 = load i32, i32* %caps, align 4, !dbg !4102
  %and = and i32 %12, 4194304, !dbg !4103
  %tobool3 = icmp ne i32 %and, 0, !dbg !4103
  br i1 %tobool3, label %if.else, label %land.lhs.true, !dbg !4104

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4105
  %max_busy_timeout = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 27, !dbg !4106
  %14 = load i32, i32* %max_busy_timeout, align 8, !dbg !4106
  %tobool4 = icmp ne i32 %14, 0, !dbg !4105
  br i1 %tobool4, label %land.lhs.true5, label %if.else, !dbg !4107

land.lhs.true5:                                   ; preds = %land.lhs.true
  %15 = load i32, i32* %timeout_ms, align 4, !dbg !4108
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4109
  %max_busy_timeout6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 27, !dbg !4110
  %17 = load i32, i32* %max_busy_timeout6, align 8, !dbg !4110
  %cmp = icmp ugt i32 %15, %17, !dbg !4111
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4112

if.then7:                                         ; preds = %land.lhs.true5
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !4113
  store i32 21, i32* %flags, align 8, !dbg !4115
  br label %if.end9, !dbg !4116

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %if.end
  %flags8 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !4117
  store i32 29, i32* %flags8, align 8, !dbg !4119
  %18 = load i32, i32* %timeout_ms, align 4, !dbg !4120
  %busy_timeout = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 6, !dbg !4121
  store i32 %18, i32* %busy_timeout, align 4, !dbg !4122
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4123
  %call10 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %19, %struct.mmc_command* %cmd, i32 0) #5, !dbg !4124
  store i32 %call10, i32* %err, align 4, !dbg !4125
  %20 = load i32, i32* %err, align 4, !dbg !4126
  %tobool11 = icmp ne i32 %20, 0, !dbg !4126
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !4128

if.then12:                                        ; preds = %if.end9
  br label %out_release, !dbg !4129

if.end13:                                         ; preds = %if.end9
  %busy_timeout14 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 6, !dbg !4130
  %21 = load i32, i32* %busy_timeout14, align 4, !dbg !4130
  %tobool15 = icmp ne i32 %21, 0, !dbg !4132
  br i1 %tobool15, label %lor.lhs.false, label %if.then19, !dbg !4133

lor.lhs.false:                                    ; preds = %if.end13
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4134
  %caps16 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 17, !dbg !4135
  %23 = load i32, i32* %caps16, align 4, !dbg !4135
  %and17 = and i32 %23, 512, !dbg !4136
  %tobool18 = icmp ne i32 %and17, 0, !dbg !4136
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !4137

if.then19:                                        ; preds = %lor.lhs.false, %if.end13
  %24 = load i32, i32* %timeout_ms, align 4, !dbg !4138
  call void @mmc_delay(i32 %24) #5, !dbg !4139
  br label %if.end20, !dbg !4139

if.end20:                                         ; preds = %if.then19, %lor.lhs.false
  br label %out_release, !dbg !4140

out_release:                                      ; preds = %if.end20, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !4141), !dbg !4142
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4143
  call void @mmc_retune_release(%struct.mmc_host* %25) #5, !dbg !4144
  %26 = load i32, i32* %err, align 4, !dbg !4145
  ret i32 %26, !dbg !4146
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_deselect_cards(%struct.mmc_host*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local void @mmc_retune_hold(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_wait_for_cmd(%struct.mmc_host*, %struct.mmc_command*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_delay(i32 %ms) #0 !dbg !4147 {
entry:
  %ms.addr = alloca i32, align 4
  store i32 %ms, i32* %ms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ms.addr, metadata !4150, metadata !DIExpression()), !dbg !4151
  %0 = load i32, i32* %ms.addr, align 4, !dbg !4152
  %cmp = icmp ule i32 %0, 20, !dbg !4154
  br i1 %cmp, label %if.then, label %if.else, !dbg !4155

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ms.addr, align 4, !dbg !4156
  %mul = mul i32 %1, 1000, !dbg !4157
  %conv = zext i32 %mul to i64, !dbg !4156
  %2 = load i32, i32* %ms.addr, align 4, !dbg !4158
  %mul1 = mul i32 %2, 1250, !dbg !4159
  %conv2 = zext i32 %mul1 to i64, !dbg !4158
  call void @usleep_range(i64 %conv, i64 %conv2) #5, !dbg !4160
  br label %if.end, !dbg !4160

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ms.addr, align 4, !dbg !4161
  call void @msleep(i32 %3) #5, !dbg !4162
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4163
}

; Function Attrs: noredzone
declare dso_local void @mmc_retune_release(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_set_status(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mmc_resume(%struct.mmc_host* %host) #0 !dbg !4164 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !4165, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4167, metadata !DIExpression()), !dbg !4168
  store i32 0, i32* %err, align 4, !dbg !4168
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4169
  call void @mmc_claim_host(%struct.mmc_host* %0) #5, !dbg !4170
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4171
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 38, !dbg !4171
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !4171
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 5, !dbg !4171
  %3 = load i32, i32* %state, align 4, !dbg !4171
  %and = and i32 %3, 32, !dbg !4171
  %tobool = icmp ne i32 %and, 0, !dbg !4171
  br i1 %tobool, label %if.end, label %if.then, !dbg !4173

if.then:                                          ; preds = %entry
  br label %out, !dbg !4174

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4175
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4176
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 38, !dbg !4177
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !4177
  %ocr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 2, !dbg !4178
  %7 = load i32, i32* %ocr, align 8, !dbg !4178
  call void @mmc_power_up(%struct.mmc_host* %4, i32 %7) #5, !dbg !4179
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4180
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4181
  %card2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 38, !dbg !4182
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !4182
  %ocr3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 2, !dbg !4183
  %11 = load i32, i32* %ocr3, align 8, !dbg !4183
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4184
  %card4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 38, !dbg !4185
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card4, align 8, !dbg !4185
  %call = call i32 @mmc_init_card(%struct.mmc_host* %8, i32 %11, %struct.mmc_card* %13) #5, !dbg !4186
  store i32 %call, i32* %err, align 4, !dbg !4187
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4188
  %card5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 38, !dbg !4188
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card5, align 8, !dbg !4188
  %state6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 5, !dbg !4188
  %16 = load i32, i32* %state6, align 4, !dbg !4188
  %and7 = and i32 %16, -33, !dbg !4188
  store i32 %and7, i32* %state6, align 4, !dbg !4188
  br label %out, !dbg !4188

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !4189), !dbg !4190
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !4191
  call void @mmc_release_host(%struct.mmc_host* %17) #5, !dbg !4192
  %18 = load i32, i32* %err, align 4, !dbg !4193
  ret i32 %18, !dbg !4194
}

; Function Attrs: noredzone
declare dso_local void @mmc_power_up(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_status(%struct.mmc_card*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_can_reset(%struct.mmc_card* %card) #0 !dbg !4195 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %rst_n_function = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4196, metadata !DIExpression()), !dbg !4197
  call void @llvm.dbg.declare(metadata i8* %rst_n_function, metadata !4198, metadata !DIExpression()), !dbg !4199
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4200
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !4201
  %rst_n_function1 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 8, !dbg !4202
  %1 = load i8, i8* %rst_n_function1, align 8, !dbg !4202
  store i8 %1, i8* %rst_n_function, align 1, !dbg !4203
  %2 = load i8, i8* %rst_n_function, align 1, !dbg !4204
  %conv = zext i8 %2 to i32, !dbg !4204
  %and = and i32 %conv, 3, !dbg !4206
  %cmp = icmp ne i32 %and, 1, !dbg !4207
  br i1 %cmp, label %if.then, label %if.end, !dbg !4208

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4209
  br label %return, !dbg !4209

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4210
  br label %return, !dbg !4210

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4211
  ret i32 %3, !dbg !4211
}

; Function Attrs: noredzone
declare dso_local void @mmc_set_initial_state(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_power_cycle(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mmc_pwrseq_reset(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_go_idle(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_spi_set_crc(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_cid(%struct.mmc_host*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local %struct.mmc_card* @mmc_alloc_card(%struct.mmc_host*, %struct.device_type*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !4212 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !4218
  %1 = ptrtoint i8* %0 to i64, !dbg !4218
  %2 = inttoptr i64 %1 to i8*, !dbg !4218
  %3 = ptrtoint i8* %2 to i64, !dbg !4218
  %cmp = icmp uge i64 %3, -4095, !dbg !4218
  %lnot = xor i1 %cmp, true, !dbg !4218
  %lnot1 = xor i1 %lnot, true, !dbg !4218
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4218
  %conv = sext i32 %lnot.ext to i64, !dbg !4218
  %tobool = icmp ne i64 %conv, 0, !dbg !4218
  ret i1 %tobool, !dbg !4219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !4220 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4223, metadata !DIExpression()), !dbg !4224
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !4225
  %1 = ptrtoint i8* %0 to i64, !dbg !4226
  ret i64 %1, !dbg !4227
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @mmc_set_relative_addr(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_csd(%struct.mmc_card*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_decode_csd(%struct.mmc_card* %card) #0 !dbg !4228 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %csd = alloca %struct.mmc_csd*, align 8
  %e = alloca i32, align 4
  %m = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %resp = alloca i32*, align 8
  %__size = alloca i32, align 4
  %__mask = alloca i32, align 4
  %__off = alloca i32, align 4
  %__shft = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__size8 = alloca i32, align 4
  %__mask9 = alloca i32, align 4
  %__off10 = alloca i32, align 4
  %__shft11 = alloca i32, align 4
  %__res12 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  %__size18 = alloca i32, align 4
  %__mask19 = alloca i32, align 4
  %__off20 = alloca i32, align 4
  %__shft21 = alloca i32, align 4
  %__res22 = alloca i32, align 4
  %tmp25 = alloca i32, align 4
  %__size27 = alloca i32, align 4
  %__mask28 = alloca i32, align 4
  %__off29 = alloca i32, align 4
  %__shft30 = alloca i32, align 4
  %__res31 = alloca i32, align 4
  %tmp34 = alloca i32, align 4
  %__size39 = alloca i32, align 4
  %__mask40 = alloca i32, align 4
  %__off41 = alloca i32, align 4
  %__shft42 = alloca i32, align 4
  %__res43 = alloca i32, align 4
  %tmp46 = alloca i32, align 4
  %__size50 = alloca i32, align 4
  %__mask51 = alloca i32, align 4
  %__off52 = alloca i32, align 4
  %__shft53 = alloca i32, align 4
  %__res54 = alloca i32, align 4
  %tmp57 = alloca i32, align 4
  %__size59 = alloca i32, align 4
  %__mask60 = alloca i32, align 4
  %__off61 = alloca i32, align 4
  %__shft62 = alloca i32, align 4
  %__res63 = alloca i32, align 4
  %tmp66 = alloca i32, align 4
  %__size74 = alloca i32, align 4
  %__mask75 = alloca i32, align 4
  %__off76 = alloca i32, align 4
  %__shft77 = alloca i32, align 4
  %__res78 = alloca i32, align 4
  %tmp81 = alloca i32, align 4
  %__size84 = alloca i32, align 4
  %__mask85 = alloca i32, align 4
  %__off86 = alloca i32, align 4
  %__shft87 = alloca i32, align 4
  %__res88 = alloca i32, align 4
  %tmp91 = alloca i32, align 4
  %__size93 = alloca i32, align 4
  %__mask94 = alloca i32, align 4
  %__off95 = alloca i32, align 4
  %__shft96 = alloca i32, align 4
  %__res97 = alloca i32, align 4
  %tmp101 = alloca i32, align 4
  %__size106 = alloca i32, align 4
  %__mask107 = alloca i32, align 4
  %__off108 = alloca i32, align 4
  %__shft109 = alloca i32, align 4
  %__res110 = alloca i32, align 4
  %tmp113 = alloca i32, align 4
  %__size115 = alloca i32, align 4
  %__mask116 = alloca i32, align 4
  %__off117 = alloca i32, align 4
  %__shft118 = alloca i32, align 4
  %__res119 = alloca i32, align 4
  %tmp122 = alloca i32, align 4
  %__size124 = alloca i32, align 4
  %__mask125 = alloca i32, align 4
  %__off126 = alloca i32, align 4
  %__shft127 = alloca i32, align 4
  %__res128 = alloca i32, align 4
  %tmp131 = alloca i32, align 4
  %__size138 = alloca i32, align 4
  %__mask139 = alloca i32, align 4
  %__off140 = alloca i32, align 4
  %__shft141 = alloca i32, align 4
  %__res142 = alloca i32, align 4
  %tmp145 = alloca i32, align 4
  %__size153 = alloca i32, align 4
  %__mask154 = alloca i32, align 4
  %__off155 = alloca i32, align 4
  %__shft156 = alloca i32, align 4
  %__res157 = alloca i32, align 4
  %tmp160 = alloca i32, align 4
  %__size168 = alloca i32, align 4
  %__mask169 = alloca i32, align 4
  %__off170 = alloca i32, align 4
  %__shft171 = alloca i32, align 4
  %__res172 = alloca i32, align 4
  %tmp175 = alloca i32, align 4
  %__size177 = alloca i32, align 4
  %__mask178 = alloca i32, align 4
  %__off179 = alloca i32, align 4
  %__shft180 = alloca i32, align 4
  %__res181 = alloca i32, align 4
  %tmp184 = alloca i32, align 4
  %__size186 = alloca i32, align 4
  %__mask187 = alloca i32, align 4
  %__off188 = alloca i32, align 4
  %__shft189 = alloca i32, align 4
  %__res190 = alloca i32, align 4
  %tmp193 = alloca i32, align 4
  %__size205 = alloca i32, align 4
  %__mask206 = alloca i32, align 4
  %__off207 = alloca i32, align 4
  %__shft208 = alloca i32, align 4
  %__res209 = alloca i32, align 4
  %tmp212 = alloca i32, align 4
  %__size214 = alloca i32, align 4
  %__mask215 = alloca i32, align 4
  %__off216 = alloca i32, align 4
  %__shft217 = alloca i32, align 4
  %__res218 = alloca i32, align 4
  %tmp221 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4229, metadata !DIExpression()), !dbg !4230
  call void @llvm.dbg.declare(metadata %struct.mmc_csd** %csd, metadata !4231, metadata !DIExpression()), !dbg !4233
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4234
  %csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 20, !dbg !4235
  store %struct.mmc_csd* %csd1, %struct.mmc_csd** %csd, align 8, !dbg !4233
  call void @llvm.dbg.declare(metadata i32* %e, metadata !4236, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4238, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4240, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4242, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.declare(metadata i32** %resp, metadata !4244, metadata !DIExpression()), !dbg !4245
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4246
  %raw_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 16, !dbg !4247
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %raw_csd, i64 0, i64 0, !dbg !4246
  store i32* %arraydecay, i32** %resp, align 8, !dbg !4245
  call void @llvm.dbg.declare(metadata i32* %__size, metadata !4248, metadata !DIExpression()), !dbg !4251
  store i32 2, i32* %__size, align 4, !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %__mask, metadata !4252, metadata !DIExpression()), !dbg !4251
  store i32 3, i32* %__mask, align 4, !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %__off, metadata !4254, metadata !DIExpression()), !dbg !4251
  store i32 0, i32* %__off, align 4, !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %__shft, metadata !4255, metadata !DIExpression()), !dbg !4251
  store i32 30, i32* %__shft, align 4, !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %__res, metadata !4256, metadata !DIExpression()), !dbg !4251
  %2 = load i32*, i32** %resp, align 8, !dbg !4251
  %arrayidx = getelementptr i32, i32* %2, i64 0, !dbg !4251
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4251
  %shr = lshr i32 %3, 30, !dbg !4251
  store i32 %shr, i32* %__res, align 4, !dbg !4251
  %4 = load i32, i32* %__res, align 4, !dbg !4251
  %and = and i32 %4, 3, !dbg !4251
  store i32 %and, i32* %tmp, align 4, !dbg !4257
  %5 = load i32, i32* %tmp, align 4, !dbg !4251
  %conv = trunc i32 %5 to i8, !dbg !4259
  %6 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4260
  %structure = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %6, i32 0, i32 0, !dbg !4261
  store i8 %conv, i8* %structure, align 4, !dbg !4262
  %7 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4263
  %structure2 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %7, i32 0, i32 0, !dbg !4265
  %8 = load i8, i8* %structure2, align 4, !dbg !4265
  %conv3 = zext i8 %8 to i32, !dbg !4263
  %cmp = icmp eq i32 %conv3, 0, !dbg !4266
  br i1 %cmp, label %if.then, label %if.end, !dbg !4267

if.then:                                          ; preds = %entry
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4268
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 0, !dbg !4268
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !4268
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 1, !dbg !4268
  %call = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !4268
  %11 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4268
  %structure5 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %11, i32 0, i32 0, !dbg !4268
  %12 = load i8, i8* %structure5, align 4, !dbg !4268
  %conv6 = zext i8 %12 to i32, !dbg !4268
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54, i64 0, i64 0), i8* %call, i32 %conv6) #6, !dbg !4268
  store i32 -22, i32* %retval, align 4, !dbg !4270
  br label %return, !dbg !4270

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__size8, metadata !4271, metadata !DIExpression()), !dbg !4273
  store i32 4, i32* %__size8, align 4, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %__mask9, metadata !4274, metadata !DIExpression()), !dbg !4273
  store i32 15, i32* %__mask9, align 4, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %__off10, metadata !4275, metadata !DIExpression()), !dbg !4273
  store i32 0, i32* %__off10, align 4, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %__shft11, metadata !4276, metadata !DIExpression()), !dbg !4273
  store i32 26, i32* %__shft11, align 4, !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %__res12, metadata !4277, metadata !DIExpression()), !dbg !4273
  %13 = load i32*, i32** %resp, align 8, !dbg !4273
  %arrayidx13 = getelementptr i32, i32* %13, i64 0, !dbg !4273
  %14 = load i32, i32* %arrayidx13, align 4, !dbg !4273
  %shr14 = lshr i32 %14, 26, !dbg !4273
  store i32 %shr14, i32* %__res12, align 4, !dbg !4273
  %15 = load i32, i32* %__res12, align 4, !dbg !4273
  %and16 = and i32 %15, 15, !dbg !4273
  store i32 %and16, i32* %tmp15, align 4, !dbg !4278
  %16 = load i32, i32* %tmp15, align 4, !dbg !4273
  %conv17 = trunc i32 %16 to i8, !dbg !4280
  %17 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4281
  %mmca_vsn = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %17, i32 0, i32 1, !dbg !4282
  store i8 %conv17, i8* %mmca_vsn, align 1, !dbg !4283
  call void @llvm.dbg.declare(metadata i32* %__size18, metadata !4284, metadata !DIExpression()), !dbg !4286
  store i32 4, i32* %__size18, align 4, !dbg !4286
  call void @llvm.dbg.declare(metadata i32* %__mask19, metadata !4287, metadata !DIExpression()), !dbg !4286
  store i32 15, i32* %__mask19, align 4, !dbg !4286
  call void @llvm.dbg.declare(metadata i32* %__off20, metadata !4288, metadata !DIExpression()), !dbg !4286
  store i32 0, i32* %__off20, align 4, !dbg !4286
  call void @llvm.dbg.declare(metadata i32* %__shft21, metadata !4289, metadata !DIExpression()), !dbg !4286
  store i32 19, i32* %__shft21, align 4, !dbg !4286
  call void @llvm.dbg.declare(metadata i32* %__res22, metadata !4290, metadata !DIExpression()), !dbg !4286
  %18 = load i32*, i32** %resp, align 8, !dbg !4286
  %arrayidx23 = getelementptr i32, i32* %18, i64 0, !dbg !4286
  %19 = load i32, i32* %arrayidx23, align 4, !dbg !4286
  %shr24 = lshr i32 %19, 19, !dbg !4286
  store i32 %shr24, i32* %__res22, align 4, !dbg !4286
  %20 = load i32, i32* %__res22, align 4, !dbg !4286
  %and26 = and i32 %20, 15, !dbg !4286
  store i32 %and26, i32* %tmp25, align 4, !dbg !4291
  %21 = load i32, i32* %tmp25, align 4, !dbg !4286
  store i32 %21, i32* %m, align 4, !dbg !4293
  call void @llvm.dbg.declare(metadata i32* %__size27, metadata !4294, metadata !DIExpression()), !dbg !4296
  store i32 3, i32* %__size27, align 4, !dbg !4296
  call void @llvm.dbg.declare(metadata i32* %__mask28, metadata !4297, metadata !DIExpression()), !dbg !4296
  store i32 7, i32* %__mask28, align 4, !dbg !4296
  call void @llvm.dbg.declare(metadata i32* %__off29, metadata !4298, metadata !DIExpression()), !dbg !4296
  store i32 0, i32* %__off29, align 4, !dbg !4296
  call void @llvm.dbg.declare(metadata i32* %__shft30, metadata !4299, metadata !DIExpression()), !dbg !4296
  store i32 16, i32* %__shft30, align 4, !dbg !4296
  call void @llvm.dbg.declare(metadata i32* %__res31, metadata !4300, metadata !DIExpression()), !dbg !4296
  %22 = load i32*, i32** %resp, align 8, !dbg !4296
  %arrayidx32 = getelementptr i32, i32* %22, i64 0, !dbg !4296
  %23 = load i32, i32* %arrayidx32, align 4, !dbg !4296
  %shr33 = lshr i32 %23, 16, !dbg !4296
  store i32 %shr33, i32* %__res31, align 4, !dbg !4296
  %24 = load i32, i32* %__res31, align 4, !dbg !4296
  %and35 = and i32 %24, 7, !dbg !4296
  store i32 %and35, i32* %tmp34, align 4, !dbg !4301
  %25 = load i32, i32* %tmp34, align 4, !dbg !4296
  store i32 %25, i32* %e, align 4, !dbg !4303
  %26 = load i32, i32* %e, align 4, !dbg !4304
  %idxprom = zext i32 %26 to i64, !dbg !4305
  %arrayidx36 = getelementptr [8 x i32], [8 x i32]* @taac_exp, i64 0, i64 %idxprom, !dbg !4305
  %27 = load i32, i32* %arrayidx36, align 4, !dbg !4305
  %28 = load i32, i32* %m, align 4, !dbg !4306
  %idxprom37 = zext i32 %28 to i64, !dbg !4307
  %arrayidx38 = getelementptr [16 x i32], [16 x i32]* @taac_mant, i64 0, i64 %idxprom37, !dbg !4307
  %29 = load i32, i32* %arrayidx38, align 4, !dbg !4307
  %mul = mul i32 %27, %29, !dbg !4308
  %add = add i32 %mul, 9, !dbg !4309
  %div = udiv i32 %add, 10, !dbg !4310
  %30 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4311
  %taac_ns = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %30, i32 0, i32 4, !dbg !4312
  store i32 %div, i32* %taac_ns, align 4, !dbg !4313
  call void @llvm.dbg.declare(metadata i32* %__size39, metadata !4314, metadata !DIExpression()), !dbg !4316
  store i32 8, i32* %__size39, align 4, !dbg !4316
  call void @llvm.dbg.declare(metadata i32* %__mask40, metadata !4317, metadata !DIExpression()), !dbg !4316
  store i32 255, i32* %__mask40, align 4, !dbg !4316
  call void @llvm.dbg.declare(metadata i32* %__off41, metadata !4318, metadata !DIExpression()), !dbg !4316
  store i32 0, i32* %__off41, align 4, !dbg !4316
  call void @llvm.dbg.declare(metadata i32* %__shft42, metadata !4319, metadata !DIExpression()), !dbg !4316
  store i32 8, i32* %__shft42, align 4, !dbg !4316
  call void @llvm.dbg.declare(metadata i32* %__res43, metadata !4320, metadata !DIExpression()), !dbg !4316
  %31 = load i32*, i32** %resp, align 8, !dbg !4316
  %arrayidx44 = getelementptr i32, i32* %31, i64 0, !dbg !4316
  %32 = load i32, i32* %arrayidx44, align 4, !dbg !4316
  %shr45 = lshr i32 %32, 8, !dbg !4316
  store i32 %shr45, i32* %__res43, align 4, !dbg !4316
  %33 = load i32, i32* %__res43, align 4, !dbg !4316
  %and47 = and i32 %33, 255, !dbg !4316
  store i32 %and47, i32* %tmp46, align 4, !dbg !4321
  %34 = load i32, i32* %tmp46, align 4, !dbg !4316
  %mul48 = mul i32 %34, 100, !dbg !4323
  %conv49 = trunc i32 %mul48 to i16, !dbg !4324
  %35 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4325
  %taac_clks = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %35, i32 0, i32 3, !dbg !4326
  store i16 %conv49, i16* %taac_clks, align 4, !dbg !4327
  call void @llvm.dbg.declare(metadata i32* %__size50, metadata !4328, metadata !DIExpression()), !dbg !4330
  store i32 4, i32* %__size50, align 4, !dbg !4330
  call void @llvm.dbg.declare(metadata i32* %__mask51, metadata !4331, metadata !DIExpression()), !dbg !4330
  store i32 15, i32* %__mask51, align 4, !dbg !4330
  call void @llvm.dbg.declare(metadata i32* %__off52, metadata !4332, metadata !DIExpression()), !dbg !4330
  store i32 0, i32* %__off52, align 4, !dbg !4330
  call void @llvm.dbg.declare(metadata i32* %__shft53, metadata !4333, metadata !DIExpression()), !dbg !4330
  store i32 3, i32* %__shft53, align 4, !dbg !4330
  call void @llvm.dbg.declare(metadata i32* %__res54, metadata !4334, metadata !DIExpression()), !dbg !4330
  %36 = load i32*, i32** %resp, align 8, !dbg !4330
  %arrayidx55 = getelementptr i32, i32* %36, i64 0, !dbg !4330
  %37 = load i32, i32* %arrayidx55, align 4, !dbg !4330
  %shr56 = lshr i32 %37, 3, !dbg !4330
  store i32 %shr56, i32* %__res54, align 4, !dbg !4330
  %38 = load i32, i32* %__res54, align 4, !dbg !4330
  %and58 = and i32 %38, 15, !dbg !4330
  store i32 %and58, i32* %tmp57, align 4, !dbg !4335
  %39 = load i32, i32* %tmp57, align 4, !dbg !4330
  store i32 %39, i32* %m, align 4, !dbg !4337
  call void @llvm.dbg.declare(metadata i32* %__size59, metadata !4338, metadata !DIExpression()), !dbg !4340
  store i32 3, i32* %__size59, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %__mask60, metadata !4341, metadata !DIExpression()), !dbg !4340
  store i32 7, i32* %__mask60, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %__off61, metadata !4342, metadata !DIExpression()), !dbg !4340
  store i32 0, i32* %__off61, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %__shft62, metadata !4343, metadata !DIExpression()), !dbg !4340
  store i32 0, i32* %__shft62, align 4, !dbg !4340
  call void @llvm.dbg.declare(metadata i32* %__res63, metadata !4344, metadata !DIExpression()), !dbg !4340
  %40 = load i32*, i32** %resp, align 8, !dbg !4340
  %arrayidx64 = getelementptr i32, i32* %40, i64 0, !dbg !4340
  %41 = load i32, i32* %arrayidx64, align 4, !dbg !4340
  %shr65 = lshr i32 %41, 0, !dbg !4340
  store i32 %shr65, i32* %__res63, align 4, !dbg !4340
  %42 = load i32, i32* %__res63, align 4, !dbg !4340
  %and67 = and i32 %42, 7, !dbg !4340
  store i32 %and67, i32* %tmp66, align 4, !dbg !4345
  %43 = load i32, i32* %tmp66, align 4, !dbg !4340
  store i32 %43, i32* %e, align 4, !dbg !4347
  %44 = load i32, i32* %e, align 4, !dbg !4348
  %idxprom68 = zext i32 %44 to i64, !dbg !4349
  %arrayidx69 = getelementptr [8 x i32], [8 x i32]* @tran_exp, i64 0, i64 %idxprom68, !dbg !4349
  %45 = load i32, i32* %arrayidx69, align 4, !dbg !4349
  %46 = load i32, i32* %m, align 4, !dbg !4350
  %idxprom70 = zext i32 %46 to i64, !dbg !4351
  %arrayidx71 = getelementptr [16 x i8], [16 x i8]* @tran_mant, i64 0, i64 %idxprom70, !dbg !4351
  %47 = load i8, i8* %arrayidx71, align 1, !dbg !4351
  %conv72 = zext i8 %47 to i32, !dbg !4351
  %mul73 = mul i32 %45, %conv72, !dbg !4352
  %48 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4353
  %max_dtr = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %48, i32 0, i32 7, !dbg !4354
  store i32 %mul73, i32* %max_dtr, align 4, !dbg !4355
  call void @llvm.dbg.declare(metadata i32* %__size74, metadata !4356, metadata !DIExpression()), !dbg !4358
  store i32 12, i32* %__size74, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %__mask75, metadata !4359, metadata !DIExpression()), !dbg !4358
  store i32 4095, i32* %__mask75, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %__off76, metadata !4360, metadata !DIExpression()), !dbg !4358
  store i32 1, i32* %__off76, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %__shft77, metadata !4361, metadata !DIExpression()), !dbg !4358
  store i32 20, i32* %__shft77, align 4, !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %__res78, metadata !4362, metadata !DIExpression()), !dbg !4358
  %49 = load i32*, i32** %resp, align 8, !dbg !4358
  %arrayidx79 = getelementptr i32, i32* %49, i64 1, !dbg !4358
  %50 = load i32, i32* %arrayidx79, align 4, !dbg !4358
  %shr80 = lshr i32 %50, 20, !dbg !4358
  store i32 %shr80, i32* %__res78, align 4, !dbg !4358
  %51 = load i32, i32* %__res78, align 4, !dbg !4358
  %and82 = and i32 %51, 4095, !dbg !4358
  store i32 %and82, i32* %tmp81, align 4, !dbg !4363
  %52 = load i32, i32* %tmp81, align 4, !dbg !4358
  %conv83 = trunc i32 %52 to i16, !dbg !4365
  %53 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4366
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %53, i32 0, i32 2, !dbg !4367
  store i16 %conv83, i16* %cmdclass, align 2, !dbg !4368
  call void @llvm.dbg.declare(metadata i32* %__size84, metadata !4369, metadata !DIExpression()), !dbg !4371
  store i32 3, i32* %__size84, align 4, !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %__mask85, metadata !4372, metadata !DIExpression()), !dbg !4371
  store i32 7, i32* %__mask85, align 4, !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %__off86, metadata !4373, metadata !DIExpression()), !dbg !4371
  store i32 2, i32* %__off86, align 4, !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %__shft87, metadata !4374, metadata !DIExpression()), !dbg !4371
  store i32 15, i32* %__shft87, align 4, !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %__res88, metadata !4375, metadata !DIExpression()), !dbg !4371
  %54 = load i32*, i32** %resp, align 8, !dbg !4371
  %arrayidx89 = getelementptr i32, i32* %54, i64 2, !dbg !4371
  %55 = load i32, i32* %arrayidx89, align 4, !dbg !4371
  %shr90 = lshr i32 %55, 15, !dbg !4371
  store i32 %shr90, i32* %__res88, align 4, !dbg !4371
  %56 = load i32, i32* %__res88, align 4, !dbg !4371
  %and92 = and i32 %56, 7, !dbg !4371
  store i32 %and92, i32* %tmp91, align 4, !dbg !4376
  %57 = load i32, i32* %tmp91, align 4, !dbg !4371
  store i32 %57, i32* %e, align 4, !dbg !4378
  call void @llvm.dbg.declare(metadata i32* %__size93, metadata !4379, metadata !DIExpression()), !dbg !4381
  store i32 12, i32* %__size93, align 4, !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %__mask94, metadata !4382, metadata !DIExpression()), !dbg !4381
  store i32 4095, i32* %__mask94, align 4, !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %__off95, metadata !4383, metadata !DIExpression()), !dbg !4381
  store i32 2, i32* %__off95, align 4, !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %__shft96, metadata !4384, metadata !DIExpression()), !dbg !4381
  store i32 30, i32* %__shft96, align 4, !dbg !4381
  call void @llvm.dbg.declare(metadata i32* %__res97, metadata !4385, metadata !DIExpression()), !dbg !4381
  %58 = load i32*, i32** %resp, align 8, !dbg !4381
  %arrayidx98 = getelementptr i32, i32* %58, i64 2, !dbg !4381
  %59 = load i32, i32* %arrayidx98, align 4, !dbg !4381
  %shr99 = lshr i32 %59, 30, !dbg !4381
  store i32 %shr99, i32* %__res97, align 4, !dbg !4381
  %60 = load i32*, i32** %resp, align 8, !dbg !4386
  %arrayidx100 = getelementptr i32, i32* %60, i64 1, !dbg !4386
  %61 = load i32, i32* %arrayidx100, align 4, !dbg !4386
  %shl = shl i32 %61, 2, !dbg !4386
  %62 = load i32, i32* %__res97, align 4, !dbg !4386
  %or = or i32 %62, %shl, !dbg !4386
  store i32 %or, i32* %__res97, align 4, !dbg !4386
  %63 = load i32, i32* %__res97, align 4, !dbg !4381
  %and102 = and i32 %63, 4095, !dbg !4381
  store i32 %and102, i32* %tmp101, align 4, !dbg !4386
  %64 = load i32, i32* %tmp101, align 4, !dbg !4381
  store i32 %64, i32* %m, align 4, !dbg !4388
  %65 = load i32, i32* %m, align 4, !dbg !4389
  %add103 = add i32 1, %65, !dbg !4390
  %66 = load i32, i32* %e, align 4, !dbg !4391
  %add104 = add i32 %66, 2, !dbg !4392
  %shl105 = shl i32 %add103, %add104, !dbg !4393
  %67 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4394
  %capacity = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %67, i32 0, i32 11, !dbg !4395
  store i32 %shl105, i32* %capacity, align 4, !dbg !4396
  call void @llvm.dbg.declare(metadata i32* %__size106, metadata !4397, metadata !DIExpression()), !dbg !4399
  store i32 4, i32* %__size106, align 4, !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %__mask107, metadata !4400, metadata !DIExpression()), !dbg !4399
  store i32 15, i32* %__mask107, align 4, !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %__off108, metadata !4401, metadata !DIExpression()), !dbg !4399
  store i32 1, i32* %__off108, align 4, !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %__shft109, metadata !4402, metadata !DIExpression()), !dbg !4399
  store i32 16, i32* %__shft109, align 4, !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %__res110, metadata !4403, metadata !DIExpression()), !dbg !4399
  %68 = load i32*, i32** %resp, align 8, !dbg !4399
  %arrayidx111 = getelementptr i32, i32* %68, i64 1, !dbg !4399
  %69 = load i32, i32* %arrayidx111, align 4, !dbg !4399
  %shr112 = lshr i32 %69, 16, !dbg !4399
  store i32 %shr112, i32* %__res110, align 4, !dbg !4399
  %70 = load i32, i32* %__res110, align 4, !dbg !4399
  %and114 = and i32 %70, 15, !dbg !4399
  store i32 %and114, i32* %tmp113, align 4, !dbg !4404
  %71 = load i32, i32* %tmp113, align 4, !dbg !4399
  %72 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4406
  %read_blkbits = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %72, i32 0, i32 9, !dbg !4407
  store i32 %71, i32* %read_blkbits, align 4, !dbg !4408
  call void @llvm.dbg.declare(metadata i32* %__size115, metadata !4409, metadata !DIExpression()), !dbg !4411
  store i32 1, i32* %__size115, align 4, !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %__mask116, metadata !4412, metadata !DIExpression()), !dbg !4411
  store i32 1, i32* %__mask116, align 4, !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %__off117, metadata !4413, metadata !DIExpression()), !dbg !4411
  store i32 1, i32* %__off117, align 4, !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %__shft118, metadata !4414, metadata !DIExpression()), !dbg !4411
  store i32 15, i32* %__shft118, align 4, !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %__res119, metadata !4415, metadata !DIExpression()), !dbg !4411
  %73 = load i32*, i32** %resp, align 8, !dbg !4411
  %arrayidx120 = getelementptr i32, i32* %73, i64 1, !dbg !4411
  %74 = load i32, i32* %arrayidx120, align 4, !dbg !4411
  %shr121 = lshr i32 %74, 15, !dbg !4411
  store i32 %shr121, i32* %__res119, align 4, !dbg !4411
  %75 = load i32, i32* %__res119, align 4, !dbg !4411
  %and123 = and i32 %75, 1, !dbg !4411
  store i32 %and123, i32* %tmp122, align 4, !dbg !4416
  %76 = load i32, i32* %tmp122, align 4, !dbg !4411
  %77 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4418
  %read_partial = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %77, i32 0, i32 12, !dbg !4419
  %78 = trunc i32 %76 to i8, !dbg !4420
  %bf.load = load i8, i8* %read_partial, align 4, !dbg !4420
  %bf.value = and i8 %78, 1, !dbg !4420
  %bf.clear = and i8 %bf.load, -2, !dbg !4420
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !4420
  store i8 %bf.set, i8* %read_partial, align 4, !dbg !4420
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !4420
  call void @llvm.dbg.declare(metadata i32* %__size124, metadata !4421, metadata !DIExpression()), !dbg !4423
  store i32 1, i32* %__size124, align 4, !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %__mask125, metadata !4424, metadata !DIExpression()), !dbg !4423
  store i32 1, i32* %__mask125, align 4, !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %__off126, metadata !4425, metadata !DIExpression()), !dbg !4423
  store i32 1, i32* %__off126, align 4, !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %__shft127, metadata !4426, metadata !DIExpression()), !dbg !4423
  store i32 14, i32* %__shft127, align 4, !dbg !4423
  call void @llvm.dbg.declare(metadata i32* %__res128, metadata !4427, metadata !DIExpression()), !dbg !4423
  %79 = load i32*, i32** %resp, align 8, !dbg !4423
  %arrayidx129 = getelementptr i32, i32* %79, i64 1, !dbg !4423
  %80 = load i32, i32* %arrayidx129, align 4, !dbg !4423
  %shr130 = lshr i32 %80, 14, !dbg !4423
  store i32 %shr130, i32* %__res128, align 4, !dbg !4423
  %81 = load i32, i32* %__res128, align 4, !dbg !4423
  %and132 = and i32 %81, 1, !dbg !4423
  store i32 %and132, i32* %tmp131, align 4, !dbg !4428
  %82 = load i32, i32* %tmp131, align 4, !dbg !4423
  %83 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4430
  %write_misalign = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %83, i32 0, i32 12, !dbg !4431
  %84 = trunc i32 %82 to i8, !dbg !4432
  %bf.load133 = load i8, i8* %write_misalign, align 4, !dbg !4432
  %bf.value134 = and i8 %84, 1, !dbg !4432
  %bf.shl = shl i8 %bf.value134, 3, !dbg !4432
  %bf.clear135 = and i8 %bf.load133, -9, !dbg !4432
  %bf.set136 = or i8 %bf.clear135, %bf.shl, !dbg !4432
  store i8 %bf.set136, i8* %write_misalign, align 4, !dbg !4432
  %bf.result.cast137 = zext i8 %bf.value134 to i32, !dbg !4432
  call void @llvm.dbg.declare(metadata i32* %__size138, metadata !4433, metadata !DIExpression()), !dbg !4435
  store i32 1, i32* %__size138, align 4, !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %__mask139, metadata !4436, metadata !DIExpression()), !dbg !4435
  store i32 1, i32* %__mask139, align 4, !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %__off140, metadata !4437, metadata !DIExpression()), !dbg !4435
  store i32 1, i32* %__off140, align 4, !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %__shft141, metadata !4438, metadata !DIExpression()), !dbg !4435
  store i32 13, i32* %__shft141, align 4, !dbg !4435
  call void @llvm.dbg.declare(metadata i32* %__res142, metadata !4439, metadata !DIExpression()), !dbg !4435
  %85 = load i32*, i32** %resp, align 8, !dbg !4435
  %arrayidx143 = getelementptr i32, i32* %85, i64 1, !dbg !4435
  %86 = load i32, i32* %arrayidx143, align 4, !dbg !4435
  %shr144 = lshr i32 %86, 13, !dbg !4435
  store i32 %shr144, i32* %__res142, align 4, !dbg !4435
  %87 = load i32, i32* %__res142, align 4, !dbg !4435
  %and146 = and i32 %87, 1, !dbg !4435
  store i32 %and146, i32* %tmp145, align 4, !dbg !4440
  %88 = load i32, i32* %tmp145, align 4, !dbg !4435
  %89 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4442
  %read_misalign = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %89, i32 0, i32 12, !dbg !4443
  %90 = trunc i32 %88 to i8, !dbg !4444
  %bf.load147 = load i8, i8* %read_misalign, align 4, !dbg !4444
  %bf.value148 = and i8 %90, 1, !dbg !4444
  %bf.shl149 = shl i8 %bf.value148, 1, !dbg !4444
  %bf.clear150 = and i8 %bf.load147, -3, !dbg !4444
  %bf.set151 = or i8 %bf.clear150, %bf.shl149, !dbg !4444
  store i8 %bf.set151, i8* %read_misalign, align 4, !dbg !4444
  %bf.result.cast152 = zext i8 %bf.value148 to i32, !dbg !4444
  call void @llvm.dbg.declare(metadata i32* %__size153, metadata !4445, metadata !DIExpression()), !dbg !4447
  store i32 1, i32* %__size153, align 4, !dbg !4447
  call void @llvm.dbg.declare(metadata i32* %__mask154, metadata !4448, metadata !DIExpression()), !dbg !4447
  store i32 1, i32* %__mask154, align 4, !dbg !4447
  call void @llvm.dbg.declare(metadata i32* %__off155, metadata !4449, metadata !DIExpression()), !dbg !4447
  store i32 1, i32* %__off155, align 4, !dbg !4447
  call void @llvm.dbg.declare(metadata i32* %__shft156, metadata !4450, metadata !DIExpression()), !dbg !4447
  store i32 12, i32* %__shft156, align 4, !dbg !4447
  call void @llvm.dbg.declare(metadata i32* %__res157, metadata !4451, metadata !DIExpression()), !dbg !4447
  %91 = load i32*, i32** %resp, align 8, !dbg !4447
  %arrayidx158 = getelementptr i32, i32* %91, i64 1, !dbg !4447
  %92 = load i32, i32* %arrayidx158, align 4, !dbg !4447
  %shr159 = lshr i32 %92, 12, !dbg !4447
  store i32 %shr159, i32* %__res157, align 4, !dbg !4447
  %93 = load i32, i32* %__res157, align 4, !dbg !4447
  %and161 = and i32 %93, 1, !dbg !4447
  store i32 %and161, i32* %tmp160, align 4, !dbg !4452
  %94 = load i32, i32* %tmp160, align 4, !dbg !4447
  %95 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4454
  %dsr_imp = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %95, i32 0, i32 12, !dbg !4455
  %96 = trunc i32 %94 to i8, !dbg !4456
  %bf.load162 = load i8, i8* %dsr_imp, align 4, !dbg !4456
  %bf.value163 = and i8 %96, 1, !dbg !4456
  %bf.shl164 = shl i8 %bf.value163, 4, !dbg !4456
  %bf.clear165 = and i8 %bf.load162, -17, !dbg !4456
  %bf.set166 = or i8 %bf.clear165, %bf.shl164, !dbg !4456
  store i8 %bf.set166, i8* %dsr_imp, align 4, !dbg !4456
  %bf.result.cast167 = zext i8 %bf.value163 to i32, !dbg !4456
  call void @llvm.dbg.declare(metadata i32* %__size168, metadata !4457, metadata !DIExpression()), !dbg !4459
  store i32 3, i32* %__size168, align 4, !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %__mask169, metadata !4460, metadata !DIExpression()), !dbg !4459
  store i32 7, i32* %__mask169, align 4, !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %__off170, metadata !4461, metadata !DIExpression()), !dbg !4459
  store i32 3, i32* %__off170, align 4, !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %__shft171, metadata !4462, metadata !DIExpression()), !dbg !4459
  store i32 26, i32* %__shft171, align 4, !dbg !4459
  call void @llvm.dbg.declare(metadata i32* %__res172, metadata !4463, metadata !DIExpression()), !dbg !4459
  %97 = load i32*, i32** %resp, align 8, !dbg !4459
  %arrayidx173 = getelementptr i32, i32* %97, i64 3, !dbg !4459
  %98 = load i32, i32* %arrayidx173, align 4, !dbg !4459
  %shr174 = lshr i32 %98, 26, !dbg !4459
  store i32 %shr174, i32* %__res172, align 4, !dbg !4459
  %99 = load i32, i32* %__res172, align 4, !dbg !4459
  %and176 = and i32 %99, 7, !dbg !4459
  store i32 %and176, i32* %tmp175, align 4, !dbg !4464
  %100 = load i32, i32* %tmp175, align 4, !dbg !4459
  %101 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4466
  %r2w_factor = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %101, i32 0, i32 6, !dbg !4467
  store i32 %100, i32* %r2w_factor, align 4, !dbg !4468
  call void @llvm.dbg.declare(metadata i32* %__size177, metadata !4469, metadata !DIExpression()), !dbg !4471
  store i32 4, i32* %__size177, align 4, !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %__mask178, metadata !4472, metadata !DIExpression()), !dbg !4471
  store i32 15, i32* %__mask178, align 4, !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %__off179, metadata !4473, metadata !DIExpression()), !dbg !4471
  store i32 3, i32* %__off179, align 4, !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %__shft180, metadata !4474, metadata !DIExpression()), !dbg !4471
  store i32 22, i32* %__shft180, align 4, !dbg !4471
  call void @llvm.dbg.declare(metadata i32* %__res181, metadata !4475, metadata !DIExpression()), !dbg !4471
  %102 = load i32*, i32** %resp, align 8, !dbg !4471
  %arrayidx182 = getelementptr i32, i32* %102, i64 3, !dbg !4471
  %103 = load i32, i32* %arrayidx182, align 4, !dbg !4471
  %shr183 = lshr i32 %103, 22, !dbg !4471
  store i32 %shr183, i32* %__res181, align 4, !dbg !4471
  %104 = load i32, i32* %__res181, align 4, !dbg !4471
  %and185 = and i32 %104, 15, !dbg !4471
  store i32 %and185, i32* %tmp184, align 4, !dbg !4476
  %105 = load i32, i32* %tmp184, align 4, !dbg !4471
  %106 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4478
  %write_blkbits = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %106, i32 0, i32 10, !dbg !4479
  store i32 %105, i32* %write_blkbits, align 4, !dbg !4480
  call void @llvm.dbg.declare(metadata i32* %__size186, metadata !4481, metadata !DIExpression()), !dbg !4483
  store i32 1, i32* %__size186, align 4, !dbg !4483
  call void @llvm.dbg.declare(metadata i32* %__mask187, metadata !4484, metadata !DIExpression()), !dbg !4483
  store i32 1, i32* %__mask187, align 4, !dbg !4483
  call void @llvm.dbg.declare(metadata i32* %__off188, metadata !4485, metadata !DIExpression()), !dbg !4483
  store i32 3, i32* %__off188, align 4, !dbg !4483
  call void @llvm.dbg.declare(metadata i32* %__shft189, metadata !4486, metadata !DIExpression()), !dbg !4483
  store i32 21, i32* %__shft189, align 4, !dbg !4483
  call void @llvm.dbg.declare(metadata i32* %__res190, metadata !4487, metadata !DIExpression()), !dbg !4483
  %107 = load i32*, i32** %resp, align 8, !dbg !4483
  %arrayidx191 = getelementptr i32, i32* %107, i64 3, !dbg !4483
  %108 = load i32, i32* %arrayidx191, align 4, !dbg !4483
  %shr192 = lshr i32 %108, 21, !dbg !4483
  store i32 %shr192, i32* %__res190, align 4, !dbg !4483
  %109 = load i32, i32* %__res190, align 4, !dbg !4483
  %and194 = and i32 %109, 1, !dbg !4483
  store i32 %and194, i32* %tmp193, align 4, !dbg !4488
  %110 = load i32, i32* %tmp193, align 4, !dbg !4483
  %111 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4490
  %write_partial = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %111, i32 0, i32 12, !dbg !4491
  %112 = trunc i32 %110 to i8, !dbg !4492
  %bf.load195 = load i8, i8* %write_partial, align 4, !dbg !4492
  %bf.value196 = and i8 %112, 1, !dbg !4492
  %bf.shl197 = shl i8 %bf.value196, 2, !dbg !4492
  %bf.clear198 = and i8 %bf.load195, -5, !dbg !4492
  %bf.set199 = or i8 %bf.clear198, %bf.shl197, !dbg !4492
  store i8 %bf.set199, i8* %write_partial, align 4, !dbg !4492
  %bf.result.cast200 = zext i8 %bf.value196 to i32, !dbg !4492
  %113 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4493
  %write_blkbits201 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %113, i32 0, i32 10, !dbg !4495
  %114 = load i32, i32* %write_blkbits201, align 4, !dbg !4495
  %cmp202 = icmp uge i32 %114, 9, !dbg !4496
  br i1 %cmp202, label %if.then204, label %if.end229, !dbg !4497

if.then204:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__size205, metadata !4498, metadata !DIExpression()), !dbg !4501
  store i32 5, i32* %__size205, align 4, !dbg !4501
  call void @llvm.dbg.declare(metadata i32* %__mask206, metadata !4502, metadata !DIExpression()), !dbg !4501
  store i32 31, i32* %__mask206, align 4, !dbg !4501
  call void @llvm.dbg.declare(metadata i32* %__off207, metadata !4503, metadata !DIExpression()), !dbg !4501
  store i32 2, i32* %__off207, align 4, !dbg !4501
  call void @llvm.dbg.declare(metadata i32* %__shft208, metadata !4504, metadata !DIExpression()), !dbg !4501
  store i32 10, i32* %__shft208, align 4, !dbg !4501
  call void @llvm.dbg.declare(metadata i32* %__res209, metadata !4505, metadata !DIExpression()), !dbg !4501
  %115 = load i32*, i32** %resp, align 8, !dbg !4501
  %arrayidx210 = getelementptr i32, i32* %115, i64 2, !dbg !4501
  %116 = load i32, i32* %arrayidx210, align 4, !dbg !4501
  %shr211 = lshr i32 %116, 10, !dbg !4501
  store i32 %shr211, i32* %__res209, align 4, !dbg !4501
  %117 = load i32, i32* %__res209, align 4, !dbg !4501
  %and213 = and i32 %117, 31, !dbg !4501
  store i32 %and213, i32* %tmp212, align 4, !dbg !4506
  %118 = load i32, i32* %tmp212, align 4, !dbg !4501
  store i32 %118, i32* %a, align 4, !dbg !4508
  call void @llvm.dbg.declare(metadata i32* %__size214, metadata !4509, metadata !DIExpression()), !dbg !4511
  store i32 5, i32* %__size214, align 4, !dbg !4511
  call void @llvm.dbg.declare(metadata i32* %__mask215, metadata !4512, metadata !DIExpression()), !dbg !4511
  store i32 31, i32* %__mask215, align 4, !dbg !4511
  call void @llvm.dbg.declare(metadata i32* %__off216, metadata !4513, metadata !DIExpression()), !dbg !4511
  store i32 2, i32* %__off216, align 4, !dbg !4511
  call void @llvm.dbg.declare(metadata i32* %__shft217, metadata !4514, metadata !DIExpression()), !dbg !4511
  store i32 5, i32* %__shft217, align 4, !dbg !4511
  call void @llvm.dbg.declare(metadata i32* %__res218, metadata !4515, metadata !DIExpression()), !dbg !4511
  %119 = load i32*, i32** %resp, align 8, !dbg !4511
  %arrayidx219 = getelementptr i32, i32* %119, i64 2, !dbg !4511
  %120 = load i32, i32* %arrayidx219, align 4, !dbg !4511
  %shr220 = lshr i32 %120, 5, !dbg !4511
  store i32 %shr220, i32* %__res218, align 4, !dbg !4511
  %121 = load i32, i32* %__res218, align 4, !dbg !4511
  %and222 = and i32 %121, 31, !dbg !4511
  store i32 %and222, i32* %tmp221, align 4, !dbg !4516
  %122 = load i32, i32* %tmp221, align 4, !dbg !4511
  store i32 %122, i32* %b, align 4, !dbg !4518
  %123 = load i32, i32* %a, align 4, !dbg !4519
  %add223 = add i32 %123, 1, !dbg !4520
  %124 = load i32, i32* %b, align 4, !dbg !4521
  %add224 = add i32 %124, 1, !dbg !4522
  %mul225 = mul i32 %add223, %add224, !dbg !4523
  %125 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4524
  %erase_size = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %125, i32 0, i32 8, !dbg !4525
  store i32 %mul225, i32* %erase_size, align 4, !dbg !4526
  %126 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4527
  %write_blkbits226 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %126, i32 0, i32 10, !dbg !4528
  %127 = load i32, i32* %write_blkbits226, align 4, !dbg !4528
  %sub = sub i32 %127, 9, !dbg !4529
  %128 = load %struct.mmc_csd*, %struct.mmc_csd** %csd, align 8, !dbg !4530
  %erase_size227 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %128, i32 0, i32 8, !dbg !4531
  %129 = load i32, i32* %erase_size227, align 4, !dbg !4532
  %shl228 = shl i32 %129, %sub, !dbg !4532
  store i32 %shl228, i32* %erase_size227, align 4, !dbg !4532
  br label %if.end229, !dbg !4533

if.end229:                                        ; preds = %if.then204, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4534
  br label %return, !dbg !4534

return:                                           ; preds = %if.end229, %if.then
  %130 = load i32, i32* %retval, align 4, !dbg !4535
  ret i32 %130, !dbg !4535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_decode_cid(%struct.mmc_card* %card) #0 !dbg !4536 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %resp = alloca i32*, align 8
  %__size = alloca i32, align 4
  %__mask = alloca i32, align 4
  %__off = alloca i32, align 4
  %__shft = alloca i32, align 4
  %__res = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__size1 = alloca i32, align 4
  %__mask2 = alloca i32, align 4
  %__off3 = alloca i32, align 4
  %__shft4 = alloca i32, align 4
  %__res5 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %__size13 = alloca i32, align 4
  %__mask14 = alloca i32, align 4
  %__off15 = alloca i32, align 4
  %__shft16 = alloca i32, align 4
  %__res17 = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  %__size26 = alloca i32, align 4
  %__mask27 = alloca i32, align 4
  %__off28 = alloca i32, align 4
  %__shft29 = alloca i32, align 4
  %__res30 = alloca i32, align 4
  %tmp33 = alloca i32, align 4
  %__size39 = alloca i32, align 4
  %__mask40 = alloca i32, align 4
  %__off41 = alloca i32, align 4
  %__shft42 = alloca i32, align 4
  %__res43 = alloca i32, align 4
  %tmp46 = alloca i32, align 4
  %__size52 = alloca i32, align 4
  %__mask53 = alloca i32, align 4
  %__off54 = alloca i32, align 4
  %__shft55 = alloca i32, align 4
  %__res56 = alloca i32, align 4
  %tmp59 = alloca i32, align 4
  %__size65 = alloca i32, align 4
  %__mask66 = alloca i32, align 4
  %__off67 = alloca i32, align 4
  %__shft68 = alloca i32, align 4
  %__res69 = alloca i32, align 4
  %tmp72 = alloca i32, align 4
  %__size78 = alloca i32, align 4
  %__mask79 = alloca i32, align 4
  %__off80 = alloca i32, align 4
  %__shft81 = alloca i32, align 4
  %__res82 = alloca i32, align 4
  %tmp85 = alloca i32, align 4
  %__size91 = alloca i32, align 4
  %__mask92 = alloca i32, align 4
  %__off93 = alloca i32, align 4
  %__shft94 = alloca i32, align 4
  %__res95 = alloca i32, align 4
  %tmp98 = alloca i32, align 4
  %__size102 = alloca i32, align 4
  %__mask103 = alloca i32, align 4
  %__off104 = alloca i32, align 4
  %__shft105 = alloca i32, align 4
  %__res106 = alloca i32, align 4
  %tmp109 = alloca i32, align 4
  %__size113 = alloca i32, align 4
  %__mask114 = alloca i32, align 4
  %__off115 = alloca i32, align 4
  %__shft116 = alloca i32, align 4
  %__res117 = alloca i32, align 4
  %tmp121 = alloca i32, align 4
  %__size124 = alloca i32, align 4
  %__mask125 = alloca i32, align 4
  %__off126 = alloca i32, align 4
  %__shft127 = alloca i32, align 4
  %__res128 = alloca i32, align 4
  %tmp131 = alloca i32, align 4
  %__size135 = alloca i32, align 4
  %__mask136 = alloca i32, align 4
  %__off137 = alloca i32, align 4
  %__shft138 = alloca i32, align 4
  %__res139 = alloca i32, align 4
  %tmp142 = alloca i32, align 4
  %__size147 = alloca i32, align 4
  %__mask148 = alloca i32, align 4
  %__off149 = alloca i32, align 4
  %__shft150 = alloca i32, align 4
  %__res151 = alloca i32, align 4
  %tmp154 = alloca i32, align 4
  %__size158 = alloca i32, align 4
  %__mask159 = alloca i32, align 4
  %__off160 = alloca i32, align 4
  %__shft161 = alloca i32, align 4
  %__res162 = alloca i32, align 4
  %tmp165 = alloca i32, align 4
  %__size169 = alloca i32, align 4
  %__mask170 = alloca i32, align 4
  %__off171 = alloca i32, align 4
  %__shft172 = alloca i32, align 4
  %__res173 = alloca i32, align 4
  %tmp176 = alloca i32, align 4
  %__size182 = alloca i32, align 4
  %__mask183 = alloca i32, align 4
  %__off184 = alloca i32, align 4
  %__shft185 = alloca i32, align 4
  %__res186 = alloca i32, align 4
  %tmp189 = alloca i32, align 4
  %__size195 = alloca i32, align 4
  %__mask196 = alloca i32, align 4
  %__off197 = alloca i32, align 4
  %__shft198 = alloca i32, align 4
  %__res199 = alloca i32, align 4
  %tmp202 = alloca i32, align 4
  %__size208 = alloca i32, align 4
  %__mask209 = alloca i32, align 4
  %__off210 = alloca i32, align 4
  %__shft211 = alloca i32, align 4
  %__res212 = alloca i32, align 4
  %tmp215 = alloca i32, align 4
  %__size221 = alloca i32, align 4
  %__mask222 = alloca i32, align 4
  %__off223 = alloca i32, align 4
  %__shft224 = alloca i32, align 4
  %__res225 = alloca i32, align 4
  %tmp228 = alloca i32, align 4
  %__size234 = alloca i32, align 4
  %__mask235 = alloca i32, align 4
  %__off236 = alloca i32, align 4
  %__shft237 = alloca i32, align 4
  %__res238 = alloca i32, align 4
  %tmp241 = alloca i32, align 4
  %__size247 = alloca i32, align 4
  %__mask248 = alloca i32, align 4
  %__off249 = alloca i32, align 4
  %__shft250 = alloca i32, align 4
  %__res251 = alloca i32, align 4
  %tmp254 = alloca i32, align 4
  %__size258 = alloca i32, align 4
  %__mask259 = alloca i32, align 4
  %__off260 = alloca i32, align 4
  %__shft261 = alloca i32, align 4
  %__res262 = alloca i32, align 4
  %tmp268 = alloca i32, align 4
  %__size271 = alloca i32, align 4
  %__mask272 = alloca i32, align 4
  %__off273 = alloca i32, align 4
  %__shft274 = alloca i32, align 4
  %__res275 = alloca i32, align 4
  %tmp278 = alloca i32, align 4
  %__size283 = alloca i32, align 4
  %__mask284 = alloca i32, align 4
  %__off285 = alloca i32, align 4
  %__shft286 = alloca i32, align 4
  %__res287 = alloca i32, align 4
  %tmp290 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata i32** %resp, metadata !4539, metadata !DIExpression()), !dbg !4540
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4541
  %raw_cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 15, !dbg !4542
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %raw_cid, i64 0, i64 0, !dbg !4541
  store i32* %arraydecay, i32** %resp, align 8, !dbg !4540
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4543
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 20, !dbg !4544
  %mmca_vsn = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 1, !dbg !4545
  %2 = load i8, i8* %mmca_vsn, align 1, !dbg !4545
  %conv = zext i8 %2 to i32, !dbg !4543
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb146
    i32 3, label %sw.bb146
    i32 4, label %sw.bb146
  ], !dbg !4546

sw.bb:                                            ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata i32* %__size, metadata !4547, metadata !DIExpression()), !dbg !4550
  store i32 24, i32* %__size, align 4, !dbg !4550
  call void @llvm.dbg.declare(metadata i32* %__mask, metadata !4551, metadata !DIExpression()), !dbg !4550
  store i32 16777215, i32* %__mask, align 4, !dbg !4550
  call void @llvm.dbg.declare(metadata i32* %__off, metadata !4552, metadata !DIExpression()), !dbg !4550
  store i32 0, i32* %__off, align 4, !dbg !4550
  call void @llvm.dbg.declare(metadata i32* %__shft, metadata !4553, metadata !DIExpression()), !dbg !4550
  store i32 8, i32* %__shft, align 4, !dbg !4550
  call void @llvm.dbg.declare(metadata i32* %__res, metadata !4554, metadata !DIExpression()), !dbg !4550
  %3 = load i32*, i32** %resp, align 8, !dbg !4550
  %arrayidx = getelementptr i32, i32* %3, i64 0, !dbg !4550
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4550
  %shr = lshr i32 %4, 8, !dbg !4550
  store i32 %shr, i32* %__res, align 4, !dbg !4550
  %5 = load i32, i32* %__res, align 4, !dbg !4550
  %and = and i32 %5, 16777215, !dbg !4550
  store i32 %and, i32* %tmp, align 4, !dbg !4555
  %6 = load i32, i32* %tmp, align 4, !dbg !4550
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4557
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 19, !dbg !4558
  %manfid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 0, !dbg !4559
  store i32 %6, i32* %manfid, align 4, !dbg !4560
  call void @llvm.dbg.declare(metadata i32* %__size1, metadata !4561, metadata !DIExpression()), !dbg !4563
  store i32 8, i32* %__size1, align 4, !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %__mask2, metadata !4564, metadata !DIExpression()), !dbg !4563
  store i32 255, i32* %__mask2, align 4, !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %__off3, metadata !4565, metadata !DIExpression()), !dbg !4563
  store i32 0, i32* %__off3, align 4, !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %__shft4, metadata !4566, metadata !DIExpression()), !dbg !4563
  store i32 0, i32* %__shft4, align 4, !dbg !4563
  call void @llvm.dbg.declare(metadata i32* %__res5, metadata !4567, metadata !DIExpression()), !dbg !4563
  %8 = load i32*, i32** %resp, align 8, !dbg !4563
  %arrayidx6 = getelementptr i32, i32* %8, i64 0, !dbg !4563
  %9 = load i32, i32* %arrayidx6, align 4, !dbg !4563
  %shr7 = lshr i32 %9, 0, !dbg !4563
  store i32 %shr7, i32* %__res5, align 4, !dbg !4563
  %10 = load i32, i32* %__res5, align 4, !dbg !4563
  %and9 = and i32 %10, 255, !dbg !4563
  store i32 %and9, i32* %tmp8, align 4, !dbg !4568
  %11 = load i32, i32* %tmp8, align 4, !dbg !4563
  %conv10 = trunc i32 %11 to i8, !dbg !4570
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4571
  %cid11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 19, !dbg !4572
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid11, i32 0, i32 1, !dbg !4573
  %arrayidx12 = getelementptr [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !4571
  store i8 %conv10, i8* %arrayidx12, align 4, !dbg !4574
  call void @llvm.dbg.declare(metadata i32* %__size13, metadata !4575, metadata !DIExpression()), !dbg !4577
  store i32 8, i32* %__size13, align 4, !dbg !4577
  call void @llvm.dbg.declare(metadata i32* %__mask14, metadata !4578, metadata !DIExpression()), !dbg !4577
  store i32 255, i32* %__mask14, align 4, !dbg !4577
  call void @llvm.dbg.declare(metadata i32* %__off15, metadata !4579, metadata !DIExpression()), !dbg !4577
  store i32 1, i32* %__off15, align 4, !dbg !4577
  call void @llvm.dbg.declare(metadata i32* %__shft16, metadata !4580, metadata !DIExpression()), !dbg !4577
  store i32 24, i32* %__shft16, align 4, !dbg !4577
  call void @llvm.dbg.declare(metadata i32* %__res17, metadata !4581, metadata !DIExpression()), !dbg !4577
  %13 = load i32*, i32** %resp, align 8, !dbg !4577
  %arrayidx18 = getelementptr i32, i32* %13, i64 1, !dbg !4577
  %14 = load i32, i32* %arrayidx18, align 4, !dbg !4577
  %shr19 = lshr i32 %14, 24, !dbg !4577
  store i32 %shr19, i32* %__res17, align 4, !dbg !4577
  %15 = load i32, i32* %__res17, align 4, !dbg !4577
  %and21 = and i32 %15, 255, !dbg !4577
  store i32 %and21, i32* %tmp20, align 4, !dbg !4582
  %16 = load i32, i32* %tmp20, align 4, !dbg !4577
  %conv22 = trunc i32 %16 to i8, !dbg !4584
  %17 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4585
  %cid23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %17, i32 0, i32 19, !dbg !4586
  %prod_name24 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid23, i32 0, i32 1, !dbg !4587
  %arrayidx25 = getelementptr [8 x i8], [8 x i8]* %prod_name24, i64 0, i64 1, !dbg !4585
  store i8 %conv22, i8* %arrayidx25, align 1, !dbg !4588
  call void @llvm.dbg.declare(metadata i32* %__size26, metadata !4589, metadata !DIExpression()), !dbg !4591
  store i32 8, i32* %__size26, align 4, !dbg !4591
  call void @llvm.dbg.declare(metadata i32* %__mask27, metadata !4592, metadata !DIExpression()), !dbg !4591
  store i32 255, i32* %__mask27, align 4, !dbg !4591
  call void @llvm.dbg.declare(metadata i32* %__off28, metadata !4593, metadata !DIExpression()), !dbg !4591
  store i32 1, i32* %__off28, align 4, !dbg !4591
  call void @llvm.dbg.declare(metadata i32* %__shft29, metadata !4594, metadata !DIExpression()), !dbg !4591
  store i32 16, i32* %__shft29, align 4, !dbg !4591
  call void @llvm.dbg.declare(metadata i32* %__res30, metadata !4595, metadata !DIExpression()), !dbg !4591
  %18 = load i32*, i32** %resp, align 8, !dbg !4591
  %arrayidx31 = getelementptr i32, i32* %18, i64 1, !dbg !4591
  %19 = load i32, i32* %arrayidx31, align 4, !dbg !4591
  %shr32 = lshr i32 %19, 16, !dbg !4591
  store i32 %shr32, i32* %__res30, align 4, !dbg !4591
  %20 = load i32, i32* %__res30, align 4, !dbg !4591
  %and34 = and i32 %20, 255, !dbg !4591
  store i32 %and34, i32* %tmp33, align 4, !dbg !4596
  %21 = load i32, i32* %tmp33, align 4, !dbg !4591
  %conv35 = trunc i32 %21 to i8, !dbg !4598
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4599
  %cid36 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 19, !dbg !4600
  %prod_name37 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid36, i32 0, i32 1, !dbg !4601
  %arrayidx38 = getelementptr [8 x i8], [8 x i8]* %prod_name37, i64 0, i64 2, !dbg !4599
  store i8 %conv35, i8* %arrayidx38, align 2, !dbg !4602
  call void @llvm.dbg.declare(metadata i32* %__size39, metadata !4603, metadata !DIExpression()), !dbg !4605
  store i32 8, i32* %__size39, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %__mask40, metadata !4606, metadata !DIExpression()), !dbg !4605
  store i32 255, i32* %__mask40, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %__off41, metadata !4607, metadata !DIExpression()), !dbg !4605
  store i32 1, i32* %__off41, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %__shft42, metadata !4608, metadata !DIExpression()), !dbg !4605
  store i32 8, i32* %__shft42, align 4, !dbg !4605
  call void @llvm.dbg.declare(metadata i32* %__res43, metadata !4609, metadata !DIExpression()), !dbg !4605
  %23 = load i32*, i32** %resp, align 8, !dbg !4605
  %arrayidx44 = getelementptr i32, i32* %23, i64 1, !dbg !4605
  %24 = load i32, i32* %arrayidx44, align 4, !dbg !4605
  %shr45 = lshr i32 %24, 8, !dbg !4605
  store i32 %shr45, i32* %__res43, align 4, !dbg !4605
  %25 = load i32, i32* %__res43, align 4, !dbg !4605
  %and47 = and i32 %25, 255, !dbg !4605
  store i32 %and47, i32* %tmp46, align 4, !dbg !4610
  %26 = load i32, i32* %tmp46, align 4, !dbg !4605
  %conv48 = trunc i32 %26 to i8, !dbg !4612
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4613
  %cid49 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %27, i32 0, i32 19, !dbg !4614
  %prod_name50 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid49, i32 0, i32 1, !dbg !4615
  %arrayidx51 = getelementptr [8 x i8], [8 x i8]* %prod_name50, i64 0, i64 3, !dbg !4613
  store i8 %conv48, i8* %arrayidx51, align 1, !dbg !4616
  call void @llvm.dbg.declare(metadata i32* %__size52, metadata !4617, metadata !DIExpression()), !dbg !4619
  store i32 8, i32* %__size52, align 4, !dbg !4619
  call void @llvm.dbg.declare(metadata i32* %__mask53, metadata !4620, metadata !DIExpression()), !dbg !4619
  store i32 255, i32* %__mask53, align 4, !dbg !4619
  call void @llvm.dbg.declare(metadata i32* %__off54, metadata !4621, metadata !DIExpression()), !dbg !4619
  store i32 1, i32* %__off54, align 4, !dbg !4619
  call void @llvm.dbg.declare(metadata i32* %__shft55, metadata !4622, metadata !DIExpression()), !dbg !4619
  store i32 0, i32* %__shft55, align 4, !dbg !4619
  call void @llvm.dbg.declare(metadata i32* %__res56, metadata !4623, metadata !DIExpression()), !dbg !4619
  %28 = load i32*, i32** %resp, align 8, !dbg !4619
  %arrayidx57 = getelementptr i32, i32* %28, i64 1, !dbg !4619
  %29 = load i32, i32* %arrayidx57, align 4, !dbg !4619
  %shr58 = lshr i32 %29, 0, !dbg !4619
  store i32 %shr58, i32* %__res56, align 4, !dbg !4619
  %30 = load i32, i32* %__res56, align 4, !dbg !4619
  %and60 = and i32 %30, 255, !dbg !4619
  store i32 %and60, i32* %tmp59, align 4, !dbg !4624
  %31 = load i32, i32* %tmp59, align 4, !dbg !4619
  %conv61 = trunc i32 %31 to i8, !dbg !4626
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4627
  %cid62 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 19, !dbg !4628
  %prod_name63 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid62, i32 0, i32 1, !dbg !4629
  %arrayidx64 = getelementptr [8 x i8], [8 x i8]* %prod_name63, i64 0, i64 4, !dbg !4627
  store i8 %conv61, i8* %arrayidx64, align 4, !dbg !4630
  call void @llvm.dbg.declare(metadata i32* %__size65, metadata !4631, metadata !DIExpression()), !dbg !4633
  store i32 8, i32* %__size65, align 4, !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %__mask66, metadata !4634, metadata !DIExpression()), !dbg !4633
  store i32 255, i32* %__mask66, align 4, !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %__off67, metadata !4635, metadata !DIExpression()), !dbg !4633
  store i32 2, i32* %__off67, align 4, !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %__shft68, metadata !4636, metadata !DIExpression()), !dbg !4633
  store i32 24, i32* %__shft68, align 4, !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %__res69, metadata !4637, metadata !DIExpression()), !dbg !4633
  %33 = load i32*, i32** %resp, align 8, !dbg !4633
  %arrayidx70 = getelementptr i32, i32* %33, i64 2, !dbg !4633
  %34 = load i32, i32* %arrayidx70, align 4, !dbg !4633
  %shr71 = lshr i32 %34, 24, !dbg !4633
  store i32 %shr71, i32* %__res69, align 4, !dbg !4633
  %35 = load i32, i32* %__res69, align 4, !dbg !4633
  %and73 = and i32 %35, 255, !dbg !4633
  store i32 %and73, i32* %tmp72, align 4, !dbg !4638
  %36 = load i32, i32* %tmp72, align 4, !dbg !4633
  %conv74 = trunc i32 %36 to i8, !dbg !4640
  %37 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4641
  %cid75 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %37, i32 0, i32 19, !dbg !4642
  %prod_name76 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid75, i32 0, i32 1, !dbg !4643
  %arrayidx77 = getelementptr [8 x i8], [8 x i8]* %prod_name76, i64 0, i64 5, !dbg !4641
  store i8 %conv74, i8* %arrayidx77, align 1, !dbg !4644
  call void @llvm.dbg.declare(metadata i32* %__size78, metadata !4645, metadata !DIExpression()), !dbg !4647
  store i32 8, i32* %__size78, align 4, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %__mask79, metadata !4648, metadata !DIExpression()), !dbg !4647
  store i32 255, i32* %__mask79, align 4, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %__off80, metadata !4649, metadata !DIExpression()), !dbg !4647
  store i32 2, i32* %__off80, align 4, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %__shft81, metadata !4650, metadata !DIExpression()), !dbg !4647
  store i32 16, i32* %__shft81, align 4, !dbg !4647
  call void @llvm.dbg.declare(metadata i32* %__res82, metadata !4651, metadata !DIExpression()), !dbg !4647
  %38 = load i32*, i32** %resp, align 8, !dbg !4647
  %arrayidx83 = getelementptr i32, i32* %38, i64 2, !dbg !4647
  %39 = load i32, i32* %arrayidx83, align 4, !dbg !4647
  %shr84 = lshr i32 %39, 16, !dbg !4647
  store i32 %shr84, i32* %__res82, align 4, !dbg !4647
  %40 = load i32, i32* %__res82, align 4, !dbg !4647
  %and86 = and i32 %40, 255, !dbg !4647
  store i32 %and86, i32* %tmp85, align 4, !dbg !4652
  %41 = load i32, i32* %tmp85, align 4, !dbg !4647
  %conv87 = trunc i32 %41 to i8, !dbg !4654
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4655
  %cid88 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %42, i32 0, i32 19, !dbg !4656
  %prod_name89 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid88, i32 0, i32 1, !dbg !4657
  %arrayidx90 = getelementptr [8 x i8], [8 x i8]* %prod_name89, i64 0, i64 6, !dbg !4655
  store i8 %conv87, i8* %arrayidx90, align 2, !dbg !4658
  call void @llvm.dbg.declare(metadata i32* %__size91, metadata !4659, metadata !DIExpression()), !dbg !4661
  store i32 4, i32* %__size91, align 4, !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %__mask92, metadata !4662, metadata !DIExpression()), !dbg !4661
  store i32 15, i32* %__mask92, align 4, !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %__off93, metadata !4663, metadata !DIExpression()), !dbg !4661
  store i32 2, i32* %__off93, align 4, !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %__shft94, metadata !4664, metadata !DIExpression()), !dbg !4661
  store i32 12, i32* %__shft94, align 4, !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %__res95, metadata !4665, metadata !DIExpression()), !dbg !4661
  %43 = load i32*, i32** %resp, align 8, !dbg !4661
  %arrayidx96 = getelementptr i32, i32* %43, i64 2, !dbg !4661
  %44 = load i32, i32* %arrayidx96, align 4, !dbg !4661
  %shr97 = lshr i32 %44, 12, !dbg !4661
  store i32 %shr97, i32* %__res95, align 4, !dbg !4661
  %45 = load i32, i32* %__res95, align 4, !dbg !4661
  %and99 = and i32 %45, 15, !dbg !4661
  store i32 %and99, i32* %tmp98, align 4, !dbg !4666
  %46 = load i32, i32* %tmp98, align 4, !dbg !4661
  %conv100 = trunc i32 %46 to i8, !dbg !4668
  %47 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4669
  %cid101 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %47, i32 0, i32 19, !dbg !4670
  %hwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid101, i32 0, i32 6, !dbg !4671
  store i8 %conv100, i8* %hwrev, align 4, !dbg !4672
  call void @llvm.dbg.declare(metadata i32* %__size102, metadata !4673, metadata !DIExpression()), !dbg !4675
  store i32 4, i32* %__size102, align 4, !dbg !4675
  call void @llvm.dbg.declare(metadata i32* %__mask103, metadata !4676, metadata !DIExpression()), !dbg !4675
  store i32 15, i32* %__mask103, align 4, !dbg !4675
  call void @llvm.dbg.declare(metadata i32* %__off104, metadata !4677, metadata !DIExpression()), !dbg !4675
  store i32 2, i32* %__off104, align 4, !dbg !4675
  call void @llvm.dbg.declare(metadata i32* %__shft105, metadata !4678, metadata !DIExpression()), !dbg !4675
  store i32 8, i32* %__shft105, align 4, !dbg !4675
  call void @llvm.dbg.declare(metadata i32* %__res106, metadata !4679, metadata !DIExpression()), !dbg !4675
  %48 = load i32*, i32** %resp, align 8, !dbg !4675
  %arrayidx107 = getelementptr i32, i32* %48, i64 2, !dbg !4675
  %49 = load i32, i32* %arrayidx107, align 4, !dbg !4675
  %shr108 = lshr i32 %49, 8, !dbg !4675
  store i32 %shr108, i32* %__res106, align 4, !dbg !4675
  %50 = load i32, i32* %__res106, align 4, !dbg !4675
  %and110 = and i32 %50, 15, !dbg !4675
  store i32 %and110, i32* %tmp109, align 4, !dbg !4680
  %51 = load i32, i32* %tmp109, align 4, !dbg !4675
  %conv111 = trunc i32 %51 to i8, !dbg !4682
  %52 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4683
  %cid112 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %52, i32 0, i32 19, !dbg !4684
  %fwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid112, i32 0, i32 7, !dbg !4685
  store i8 %conv111, i8* %fwrev, align 1, !dbg !4686
  call void @llvm.dbg.declare(metadata i32* %__size113, metadata !4687, metadata !DIExpression()), !dbg !4689
  store i32 24, i32* %__size113, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %__mask114, metadata !4690, metadata !DIExpression()), !dbg !4689
  store i32 16777215, i32* %__mask114, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %__off115, metadata !4691, metadata !DIExpression()), !dbg !4689
  store i32 3, i32* %__off115, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %__shft116, metadata !4692, metadata !DIExpression()), !dbg !4689
  store i32 16, i32* %__shft116, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %__res117, metadata !4693, metadata !DIExpression()), !dbg !4689
  %53 = load i32*, i32** %resp, align 8, !dbg !4689
  %arrayidx118 = getelementptr i32, i32* %53, i64 3, !dbg !4689
  %54 = load i32, i32* %arrayidx118, align 4, !dbg !4689
  %shr119 = lshr i32 %54, 16, !dbg !4689
  store i32 %shr119, i32* %__res117, align 4, !dbg !4689
  %55 = load i32*, i32** %resp, align 8, !dbg !4694
  %arrayidx120 = getelementptr i32, i32* %55, i64 2, !dbg !4694
  %56 = load i32, i32* %arrayidx120, align 4, !dbg !4694
  %shl = shl i32 %56, 16, !dbg !4694
  %57 = load i32, i32* %__res117, align 4, !dbg !4694
  %or = or i32 %57, %shl, !dbg !4694
  store i32 %or, i32* %__res117, align 4, !dbg !4694
  %58 = load i32, i32* %__res117, align 4, !dbg !4689
  %and122 = and i32 %58, 16777215, !dbg !4689
  store i32 %and122, i32* %tmp121, align 4, !dbg !4694
  %59 = load i32, i32* %tmp121, align 4, !dbg !4689
  %60 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4696
  %cid123 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %60, i32 0, i32 19, !dbg !4697
  %serial = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid123, i32 0, i32 3, !dbg !4698
  store i32 %59, i32* %serial, align 4, !dbg !4699
  call void @llvm.dbg.declare(metadata i32* %__size124, metadata !4700, metadata !DIExpression()), !dbg !4702
  store i32 4, i32* %__size124, align 4, !dbg !4702
  call void @llvm.dbg.declare(metadata i32* %__mask125, metadata !4703, metadata !DIExpression()), !dbg !4702
  store i32 15, i32* %__mask125, align 4, !dbg !4702
  call void @llvm.dbg.declare(metadata i32* %__off126, metadata !4704, metadata !DIExpression()), !dbg !4702
  store i32 3, i32* %__off126, align 4, !dbg !4702
  call void @llvm.dbg.declare(metadata i32* %__shft127, metadata !4705, metadata !DIExpression()), !dbg !4702
  store i32 12, i32* %__shft127, align 4, !dbg !4702
  call void @llvm.dbg.declare(metadata i32* %__res128, metadata !4706, metadata !DIExpression()), !dbg !4702
  %61 = load i32*, i32** %resp, align 8, !dbg !4702
  %arrayidx129 = getelementptr i32, i32* %61, i64 3, !dbg !4702
  %62 = load i32, i32* %arrayidx129, align 4, !dbg !4702
  %shr130 = lshr i32 %62, 12, !dbg !4702
  store i32 %shr130, i32* %__res128, align 4, !dbg !4702
  %63 = load i32, i32* %__res128, align 4, !dbg !4702
  %and132 = and i32 %63, 15, !dbg !4702
  store i32 %and132, i32* %tmp131, align 4, !dbg !4707
  %64 = load i32, i32* %tmp131, align 4, !dbg !4702
  %conv133 = trunc i32 %64 to i8, !dbg !4709
  %65 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4710
  %cid134 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %65, i32 0, i32 19, !dbg !4711
  %month = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid134, i32 0, i32 8, !dbg !4712
  store i8 %conv133, i8* %month, align 2, !dbg !4713
  call void @llvm.dbg.declare(metadata i32* %__size135, metadata !4714, metadata !DIExpression()), !dbg !4716
  store i32 4, i32* %__size135, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %__mask136, metadata !4717, metadata !DIExpression()), !dbg !4716
  store i32 15, i32* %__mask136, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %__off137, metadata !4718, metadata !DIExpression()), !dbg !4716
  store i32 3, i32* %__off137, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %__shft138, metadata !4719, metadata !DIExpression()), !dbg !4716
  store i32 8, i32* %__shft138, align 4, !dbg !4716
  call void @llvm.dbg.declare(metadata i32* %__res139, metadata !4720, metadata !DIExpression()), !dbg !4716
  %66 = load i32*, i32** %resp, align 8, !dbg !4716
  %arrayidx140 = getelementptr i32, i32* %66, i64 3, !dbg !4716
  %67 = load i32, i32* %arrayidx140, align 4, !dbg !4716
  %shr141 = lshr i32 %67, 8, !dbg !4716
  store i32 %shr141, i32* %__res139, align 4, !dbg !4716
  %68 = load i32, i32* %__res139, align 4, !dbg !4716
  %and143 = and i32 %68, 15, !dbg !4716
  store i32 %and143, i32* %tmp142, align 4, !dbg !4721
  %69 = load i32, i32* %tmp142, align 4, !dbg !4716
  %add = add i32 %69, 1997, !dbg !4723
  %conv144 = trunc i32 %add to i16, !dbg !4724
  %70 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4725
  %cid145 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %70, i32 0, i32 19, !dbg !4726
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid145, i32 0, i32 5, !dbg !4727
  store i16 %conv144, i16* %year, align 2, !dbg !4728
  br label %sw.epilog, !dbg !4729

sw.bb146:                                         ; preds = %entry, %entry, %entry
  call void @llvm.dbg.declare(metadata i32* %__size147, metadata !4730, metadata !DIExpression()), !dbg !4732
  store i32 8, i32* %__size147, align 4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %__mask148, metadata !4733, metadata !DIExpression()), !dbg !4732
  store i32 255, i32* %__mask148, align 4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %__off149, metadata !4734, metadata !DIExpression()), !dbg !4732
  store i32 0, i32* %__off149, align 4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %__shft150, metadata !4735, metadata !DIExpression()), !dbg !4732
  store i32 24, i32* %__shft150, align 4, !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %__res151, metadata !4736, metadata !DIExpression()), !dbg !4732
  %71 = load i32*, i32** %resp, align 8, !dbg !4732
  %arrayidx152 = getelementptr i32, i32* %71, i64 0, !dbg !4732
  %72 = load i32, i32* %arrayidx152, align 4, !dbg !4732
  %shr153 = lshr i32 %72, 24, !dbg !4732
  store i32 %shr153, i32* %__res151, align 4, !dbg !4732
  %73 = load i32, i32* %__res151, align 4, !dbg !4732
  %and155 = and i32 %73, 255, !dbg !4732
  store i32 %and155, i32* %tmp154, align 4, !dbg !4737
  %74 = load i32, i32* %tmp154, align 4, !dbg !4732
  %75 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4739
  %cid156 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %75, i32 0, i32 19, !dbg !4740
  %manfid157 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid156, i32 0, i32 0, !dbg !4741
  store i32 %74, i32* %manfid157, align 4, !dbg !4742
  call void @llvm.dbg.declare(metadata i32* %__size158, metadata !4743, metadata !DIExpression()), !dbg !4745
  store i32 16, i32* %__size158, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %__mask159, metadata !4746, metadata !DIExpression()), !dbg !4745
  store i32 65535, i32* %__mask159, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %__off160, metadata !4747, metadata !DIExpression()), !dbg !4745
  store i32 0, i32* %__off160, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %__shft161, metadata !4748, metadata !DIExpression()), !dbg !4745
  store i32 8, i32* %__shft161, align 4, !dbg !4745
  call void @llvm.dbg.declare(metadata i32* %__res162, metadata !4749, metadata !DIExpression()), !dbg !4745
  %76 = load i32*, i32** %resp, align 8, !dbg !4745
  %arrayidx163 = getelementptr i32, i32* %76, i64 0, !dbg !4745
  %77 = load i32, i32* %arrayidx163, align 4, !dbg !4745
  %shr164 = lshr i32 %77, 8, !dbg !4745
  store i32 %shr164, i32* %__res162, align 4, !dbg !4745
  %78 = load i32, i32* %__res162, align 4, !dbg !4745
  %and166 = and i32 %78, 65535, !dbg !4745
  store i32 %and166, i32* %tmp165, align 4, !dbg !4750
  %79 = load i32, i32* %tmp165, align 4, !dbg !4745
  %conv167 = trunc i32 %79 to i16, !dbg !4752
  %80 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4753
  %cid168 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %80, i32 0, i32 19, !dbg !4754
  %oemid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid168, i32 0, i32 4, !dbg !4755
  store i16 %conv167, i16* %oemid, align 4, !dbg !4756
  call void @llvm.dbg.declare(metadata i32* %__size169, metadata !4757, metadata !DIExpression()), !dbg !4759
  store i32 8, i32* %__size169, align 4, !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %__mask170, metadata !4760, metadata !DIExpression()), !dbg !4759
  store i32 255, i32* %__mask170, align 4, !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %__off171, metadata !4761, metadata !DIExpression()), !dbg !4759
  store i32 0, i32* %__off171, align 4, !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %__shft172, metadata !4762, metadata !DIExpression()), !dbg !4759
  store i32 0, i32* %__shft172, align 4, !dbg !4759
  call void @llvm.dbg.declare(metadata i32* %__res173, metadata !4763, metadata !DIExpression()), !dbg !4759
  %81 = load i32*, i32** %resp, align 8, !dbg !4759
  %arrayidx174 = getelementptr i32, i32* %81, i64 0, !dbg !4759
  %82 = load i32, i32* %arrayidx174, align 4, !dbg !4759
  %shr175 = lshr i32 %82, 0, !dbg !4759
  store i32 %shr175, i32* %__res173, align 4, !dbg !4759
  %83 = load i32, i32* %__res173, align 4, !dbg !4759
  %and177 = and i32 %83, 255, !dbg !4759
  store i32 %and177, i32* %tmp176, align 4, !dbg !4764
  %84 = load i32, i32* %tmp176, align 4, !dbg !4759
  %conv178 = trunc i32 %84 to i8, !dbg !4766
  %85 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4767
  %cid179 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %85, i32 0, i32 19, !dbg !4768
  %prod_name180 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid179, i32 0, i32 1, !dbg !4769
  %arrayidx181 = getelementptr [8 x i8], [8 x i8]* %prod_name180, i64 0, i64 0, !dbg !4767
  store i8 %conv178, i8* %arrayidx181, align 4, !dbg !4770
  call void @llvm.dbg.declare(metadata i32* %__size182, metadata !4771, metadata !DIExpression()), !dbg !4773
  store i32 8, i32* %__size182, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata i32* %__mask183, metadata !4774, metadata !DIExpression()), !dbg !4773
  store i32 255, i32* %__mask183, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata i32* %__off184, metadata !4775, metadata !DIExpression()), !dbg !4773
  store i32 1, i32* %__off184, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata i32* %__shft185, metadata !4776, metadata !DIExpression()), !dbg !4773
  store i32 24, i32* %__shft185, align 4, !dbg !4773
  call void @llvm.dbg.declare(metadata i32* %__res186, metadata !4777, metadata !DIExpression()), !dbg !4773
  %86 = load i32*, i32** %resp, align 8, !dbg !4773
  %arrayidx187 = getelementptr i32, i32* %86, i64 1, !dbg !4773
  %87 = load i32, i32* %arrayidx187, align 4, !dbg !4773
  %shr188 = lshr i32 %87, 24, !dbg !4773
  store i32 %shr188, i32* %__res186, align 4, !dbg !4773
  %88 = load i32, i32* %__res186, align 4, !dbg !4773
  %and190 = and i32 %88, 255, !dbg !4773
  store i32 %and190, i32* %tmp189, align 4, !dbg !4778
  %89 = load i32, i32* %tmp189, align 4, !dbg !4773
  %conv191 = trunc i32 %89 to i8, !dbg !4780
  %90 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4781
  %cid192 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %90, i32 0, i32 19, !dbg !4782
  %prod_name193 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid192, i32 0, i32 1, !dbg !4783
  %arrayidx194 = getelementptr [8 x i8], [8 x i8]* %prod_name193, i64 0, i64 1, !dbg !4781
  store i8 %conv191, i8* %arrayidx194, align 1, !dbg !4784
  call void @llvm.dbg.declare(metadata i32* %__size195, metadata !4785, metadata !DIExpression()), !dbg !4787
  store i32 8, i32* %__size195, align 4, !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %__mask196, metadata !4788, metadata !DIExpression()), !dbg !4787
  store i32 255, i32* %__mask196, align 4, !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %__off197, metadata !4789, metadata !DIExpression()), !dbg !4787
  store i32 1, i32* %__off197, align 4, !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %__shft198, metadata !4790, metadata !DIExpression()), !dbg !4787
  store i32 16, i32* %__shft198, align 4, !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %__res199, metadata !4791, metadata !DIExpression()), !dbg !4787
  %91 = load i32*, i32** %resp, align 8, !dbg !4787
  %arrayidx200 = getelementptr i32, i32* %91, i64 1, !dbg !4787
  %92 = load i32, i32* %arrayidx200, align 4, !dbg !4787
  %shr201 = lshr i32 %92, 16, !dbg !4787
  store i32 %shr201, i32* %__res199, align 4, !dbg !4787
  %93 = load i32, i32* %__res199, align 4, !dbg !4787
  %and203 = and i32 %93, 255, !dbg !4787
  store i32 %and203, i32* %tmp202, align 4, !dbg !4792
  %94 = load i32, i32* %tmp202, align 4, !dbg !4787
  %conv204 = trunc i32 %94 to i8, !dbg !4794
  %95 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4795
  %cid205 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %95, i32 0, i32 19, !dbg !4796
  %prod_name206 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid205, i32 0, i32 1, !dbg !4797
  %arrayidx207 = getelementptr [8 x i8], [8 x i8]* %prod_name206, i64 0, i64 2, !dbg !4795
  store i8 %conv204, i8* %arrayidx207, align 2, !dbg !4798
  call void @llvm.dbg.declare(metadata i32* %__size208, metadata !4799, metadata !DIExpression()), !dbg !4801
  store i32 8, i32* %__size208, align 4, !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %__mask209, metadata !4802, metadata !DIExpression()), !dbg !4801
  store i32 255, i32* %__mask209, align 4, !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %__off210, metadata !4803, metadata !DIExpression()), !dbg !4801
  store i32 1, i32* %__off210, align 4, !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %__shft211, metadata !4804, metadata !DIExpression()), !dbg !4801
  store i32 8, i32* %__shft211, align 4, !dbg !4801
  call void @llvm.dbg.declare(metadata i32* %__res212, metadata !4805, metadata !DIExpression()), !dbg !4801
  %96 = load i32*, i32** %resp, align 8, !dbg !4801
  %arrayidx213 = getelementptr i32, i32* %96, i64 1, !dbg !4801
  %97 = load i32, i32* %arrayidx213, align 4, !dbg !4801
  %shr214 = lshr i32 %97, 8, !dbg !4801
  store i32 %shr214, i32* %__res212, align 4, !dbg !4801
  %98 = load i32, i32* %__res212, align 4, !dbg !4801
  %and216 = and i32 %98, 255, !dbg !4801
  store i32 %and216, i32* %tmp215, align 4, !dbg !4806
  %99 = load i32, i32* %tmp215, align 4, !dbg !4801
  %conv217 = trunc i32 %99 to i8, !dbg !4808
  %100 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4809
  %cid218 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %100, i32 0, i32 19, !dbg !4810
  %prod_name219 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid218, i32 0, i32 1, !dbg !4811
  %arrayidx220 = getelementptr [8 x i8], [8 x i8]* %prod_name219, i64 0, i64 3, !dbg !4809
  store i8 %conv217, i8* %arrayidx220, align 1, !dbg !4812
  call void @llvm.dbg.declare(metadata i32* %__size221, metadata !4813, metadata !DIExpression()), !dbg !4815
  store i32 8, i32* %__size221, align 4, !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %__mask222, metadata !4816, metadata !DIExpression()), !dbg !4815
  store i32 255, i32* %__mask222, align 4, !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %__off223, metadata !4817, metadata !DIExpression()), !dbg !4815
  store i32 1, i32* %__off223, align 4, !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %__shft224, metadata !4818, metadata !DIExpression()), !dbg !4815
  store i32 0, i32* %__shft224, align 4, !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %__res225, metadata !4819, metadata !DIExpression()), !dbg !4815
  %101 = load i32*, i32** %resp, align 8, !dbg !4815
  %arrayidx226 = getelementptr i32, i32* %101, i64 1, !dbg !4815
  %102 = load i32, i32* %arrayidx226, align 4, !dbg !4815
  %shr227 = lshr i32 %102, 0, !dbg !4815
  store i32 %shr227, i32* %__res225, align 4, !dbg !4815
  %103 = load i32, i32* %__res225, align 4, !dbg !4815
  %and229 = and i32 %103, 255, !dbg !4815
  store i32 %and229, i32* %tmp228, align 4, !dbg !4820
  %104 = load i32, i32* %tmp228, align 4, !dbg !4815
  %conv230 = trunc i32 %104 to i8, !dbg !4822
  %105 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4823
  %cid231 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %105, i32 0, i32 19, !dbg !4824
  %prod_name232 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid231, i32 0, i32 1, !dbg !4825
  %arrayidx233 = getelementptr [8 x i8], [8 x i8]* %prod_name232, i64 0, i64 4, !dbg !4823
  store i8 %conv230, i8* %arrayidx233, align 4, !dbg !4826
  call void @llvm.dbg.declare(metadata i32* %__size234, metadata !4827, metadata !DIExpression()), !dbg !4829
  store i32 8, i32* %__size234, align 4, !dbg !4829
  call void @llvm.dbg.declare(metadata i32* %__mask235, metadata !4830, metadata !DIExpression()), !dbg !4829
  store i32 255, i32* %__mask235, align 4, !dbg !4829
  call void @llvm.dbg.declare(metadata i32* %__off236, metadata !4831, metadata !DIExpression()), !dbg !4829
  store i32 2, i32* %__off236, align 4, !dbg !4829
  call void @llvm.dbg.declare(metadata i32* %__shft237, metadata !4832, metadata !DIExpression()), !dbg !4829
  store i32 24, i32* %__shft237, align 4, !dbg !4829
  call void @llvm.dbg.declare(metadata i32* %__res238, metadata !4833, metadata !DIExpression()), !dbg !4829
  %106 = load i32*, i32** %resp, align 8, !dbg !4829
  %arrayidx239 = getelementptr i32, i32* %106, i64 2, !dbg !4829
  %107 = load i32, i32* %arrayidx239, align 4, !dbg !4829
  %shr240 = lshr i32 %107, 24, !dbg !4829
  store i32 %shr240, i32* %__res238, align 4, !dbg !4829
  %108 = load i32, i32* %__res238, align 4, !dbg !4829
  %and242 = and i32 %108, 255, !dbg !4829
  store i32 %and242, i32* %tmp241, align 4, !dbg !4834
  %109 = load i32, i32* %tmp241, align 4, !dbg !4829
  %conv243 = trunc i32 %109 to i8, !dbg !4836
  %110 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4837
  %cid244 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %110, i32 0, i32 19, !dbg !4838
  %prod_name245 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid244, i32 0, i32 1, !dbg !4839
  %arrayidx246 = getelementptr [8 x i8], [8 x i8]* %prod_name245, i64 0, i64 5, !dbg !4837
  store i8 %conv243, i8* %arrayidx246, align 1, !dbg !4840
  call void @llvm.dbg.declare(metadata i32* %__size247, metadata !4841, metadata !DIExpression()), !dbg !4843
  store i32 8, i32* %__size247, align 4, !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %__mask248, metadata !4844, metadata !DIExpression()), !dbg !4843
  store i32 255, i32* %__mask248, align 4, !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %__off249, metadata !4845, metadata !DIExpression()), !dbg !4843
  store i32 2, i32* %__off249, align 4, !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %__shft250, metadata !4846, metadata !DIExpression()), !dbg !4843
  store i32 16, i32* %__shft250, align 4, !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %__res251, metadata !4847, metadata !DIExpression()), !dbg !4843
  %111 = load i32*, i32** %resp, align 8, !dbg !4843
  %arrayidx252 = getelementptr i32, i32* %111, i64 2, !dbg !4843
  %112 = load i32, i32* %arrayidx252, align 4, !dbg !4843
  %shr253 = lshr i32 %112, 16, !dbg !4843
  store i32 %shr253, i32* %__res251, align 4, !dbg !4843
  %113 = load i32, i32* %__res251, align 4, !dbg !4843
  %and255 = and i32 %113, 255, !dbg !4843
  store i32 %and255, i32* %tmp254, align 4, !dbg !4848
  %114 = load i32, i32* %tmp254, align 4, !dbg !4843
  %conv256 = trunc i32 %114 to i8, !dbg !4850
  %115 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4851
  %cid257 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %115, i32 0, i32 19, !dbg !4852
  %prv = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid257, i32 0, i32 2, !dbg !4853
  store i8 %conv256, i8* %prv, align 4, !dbg !4854
  call void @llvm.dbg.declare(metadata i32* %__size258, metadata !4855, metadata !DIExpression()), !dbg !4857
  store i32 32, i32* %__size258, align 4, !dbg !4857
  call void @llvm.dbg.declare(metadata i32* %__mask259, metadata !4858, metadata !DIExpression()), !dbg !4857
  store i32 -1, i32* %__mask259, align 4, !dbg !4857
  call void @llvm.dbg.declare(metadata i32* %__off260, metadata !4859, metadata !DIExpression()), !dbg !4857
  store i32 3, i32* %__off260, align 4, !dbg !4857
  call void @llvm.dbg.declare(metadata i32* %__shft261, metadata !4860, metadata !DIExpression()), !dbg !4857
  store i32 16, i32* %__shft261, align 4, !dbg !4857
  call void @llvm.dbg.declare(metadata i32* %__res262, metadata !4861, metadata !DIExpression()), !dbg !4857
  %116 = load i32*, i32** %resp, align 8, !dbg !4857
  %arrayidx263 = getelementptr i32, i32* %116, i64 3, !dbg !4857
  %117 = load i32, i32* %arrayidx263, align 4, !dbg !4857
  %shr264 = lshr i32 %117, 16, !dbg !4857
  store i32 %shr264, i32* %__res262, align 4, !dbg !4857
  %118 = load i32*, i32** %resp, align 8, !dbg !4862
  %arrayidx265 = getelementptr i32, i32* %118, i64 2, !dbg !4862
  %119 = load i32, i32* %arrayidx265, align 4, !dbg !4862
  %shl266 = shl i32 %119, 16, !dbg !4862
  %120 = load i32, i32* %__res262, align 4, !dbg !4862
  %or267 = or i32 %120, %shl266, !dbg !4862
  store i32 %or267, i32* %__res262, align 4, !dbg !4862
  %121 = load i32, i32* %__res262, align 4, !dbg !4857
  store i32 %121, i32* %tmp268, align 4, !dbg !4862
  %122 = load i32, i32* %tmp268, align 4, !dbg !4857
  %123 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4864
  %cid269 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %123, i32 0, i32 19, !dbg !4865
  %serial270 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid269, i32 0, i32 3, !dbg !4866
  store i32 %122, i32* %serial270, align 4, !dbg !4867
  call void @llvm.dbg.declare(metadata i32* %__size271, metadata !4868, metadata !DIExpression()), !dbg !4870
  store i32 4, i32* %__size271, align 4, !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %__mask272, metadata !4871, metadata !DIExpression()), !dbg !4870
  store i32 15, i32* %__mask272, align 4, !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %__off273, metadata !4872, metadata !DIExpression()), !dbg !4870
  store i32 3, i32* %__off273, align 4, !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %__shft274, metadata !4873, metadata !DIExpression()), !dbg !4870
  store i32 12, i32* %__shft274, align 4, !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %__res275, metadata !4874, metadata !DIExpression()), !dbg !4870
  %124 = load i32*, i32** %resp, align 8, !dbg !4870
  %arrayidx276 = getelementptr i32, i32* %124, i64 3, !dbg !4870
  %125 = load i32, i32* %arrayidx276, align 4, !dbg !4870
  %shr277 = lshr i32 %125, 12, !dbg !4870
  store i32 %shr277, i32* %__res275, align 4, !dbg !4870
  %126 = load i32, i32* %__res275, align 4, !dbg !4870
  %and279 = and i32 %126, 15, !dbg !4870
  store i32 %and279, i32* %tmp278, align 4, !dbg !4875
  %127 = load i32, i32* %tmp278, align 4, !dbg !4870
  %conv280 = trunc i32 %127 to i8, !dbg !4877
  %128 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4878
  %cid281 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %128, i32 0, i32 19, !dbg !4879
  %month282 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid281, i32 0, i32 8, !dbg !4880
  store i8 %conv280, i8* %month282, align 2, !dbg !4881
  call void @llvm.dbg.declare(metadata i32* %__size283, metadata !4882, metadata !DIExpression()), !dbg !4884
  store i32 4, i32* %__size283, align 4, !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %__mask284, metadata !4885, metadata !DIExpression()), !dbg !4884
  store i32 15, i32* %__mask284, align 4, !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %__off285, metadata !4886, metadata !DIExpression()), !dbg !4884
  store i32 3, i32* %__off285, align 4, !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %__shft286, metadata !4887, metadata !DIExpression()), !dbg !4884
  store i32 8, i32* %__shft286, align 4, !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %__res287, metadata !4888, metadata !DIExpression()), !dbg !4884
  %129 = load i32*, i32** %resp, align 8, !dbg !4884
  %arrayidx288 = getelementptr i32, i32* %129, i64 3, !dbg !4884
  %130 = load i32, i32* %arrayidx288, align 4, !dbg !4884
  %shr289 = lshr i32 %130, 8, !dbg !4884
  store i32 %shr289, i32* %__res287, align 4, !dbg !4884
  %131 = load i32, i32* %__res287, align 4, !dbg !4884
  %and291 = and i32 %131, 15, !dbg !4884
  store i32 %and291, i32* %tmp290, align 4, !dbg !4889
  %132 = load i32, i32* %tmp290, align 4, !dbg !4884
  %add292 = add i32 %132, 1997, !dbg !4891
  %conv293 = trunc i32 %add292 to i16, !dbg !4892
  %133 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4893
  %cid294 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %133, i32 0, i32 19, !dbg !4894
  %year295 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid294, i32 0, i32 5, !dbg !4895
  store i16 %conv293, i16* %year295, align 2, !dbg !4896
  br label %sw.epilog, !dbg !4897

sw.default:                                       ; preds = %entry
  %134 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4898
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %134, i32 0, i32 0, !dbg !4898
  %135 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !4898
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %135, i32 0, i32 1, !dbg !4898
  %call = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !4898
  %136 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4898
  %csd296 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %136, i32 0, i32 20, !dbg !4898
  %mmca_vsn297 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd296, i32 0, i32 1, !dbg !4898
  %137 = load i8, i8* %mmca_vsn297, align 1, !dbg !4898
  %conv298 = zext i8 %137 to i32, !dbg !4898
  %call299 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.55, i64 0, i64 0), i8* %call, i32 %conv298) #6, !dbg !4898
  store i32 -22, i32* %retval, align 4, !dbg !4899
  br label %return, !dbg !4899

sw.epilog:                                        ; preds = %sw.bb146, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !4900
  br label %return, !dbg !4900

return:                                           ; preds = %sw.epilog, %sw.default
  %138 = load i32, i32* %retval, align 4, !dbg !4901
  ret i32 %138, !dbg !4901
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_set_dsr(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_select_card(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_read_ext_csd(%struct.mmc_card* %card) #0 !dbg !4902 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %ext_csd = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  call void @llvm.dbg.declare(metadata i8** %ext_csd, metadata !4905, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4908, metadata !DIExpression()), !dbg !4909
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4910
  %call = call i32 @mmc_can_ext_csd(%struct.mmc_card* %0) #5, !dbg !4912
  %tobool = icmp ne i32 %call, 0, !dbg !4912
  br i1 %tobool, label %if.end, label %if.then, !dbg !4913

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4914
  br label %return, !dbg !4914

if.end:                                           ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4915
  %call1 = call i32 @mmc_get_ext_csd(%struct.mmc_card* %1, i8** %ext_csd) #5, !dbg !4916
  store i32 %call1, i32* %err, align 4, !dbg !4917
  %2 = load i32, i32* %err, align 4, !dbg !4918
  %tobool2 = icmp ne i32 %2, 0, !dbg !4918
  br i1 %tobool2, label %if.then3, label %if.end18, !dbg !4920

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %err, align 4, !dbg !4921
  %cmp = icmp ne i32 %3, -22, !dbg !4924
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !4925

land.lhs.true:                                    ; preds = %if.then3
  %4 = load i32, i32* %err, align 4, !dbg !4926
  %cmp4 = icmp ne i32 %4, -38, !dbg !4927
  br i1 %cmp4, label %land.lhs.true5, label %if.end8, !dbg !4928

land.lhs.true5:                                   ; preds = %land.lhs.true
  %5 = load i32, i32* %err, align 4, !dbg !4929
  %cmp6 = icmp ne i32 %5, -14, !dbg !4930
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !4931

if.then7:                                         ; preds = %land.lhs.true5
  %6 = load i32, i32* %err, align 4, !dbg !4932
  store i32 %6, i32* %retval, align 4, !dbg !4933
  br label %return, !dbg !4933

if.end8:                                          ; preds = %land.lhs.true5, %land.lhs.true, %if.then3
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4934
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 20, !dbg !4936
  %capacity = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 11, !dbg !4937
  %8 = load i32, i32* %capacity, align 4, !dbg !4937
  %cmp9 = icmp eq i32 %8, 2097152, !dbg !4938
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !4939

if.then10:                                        ; preds = %if.end8
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4940
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 0, !dbg !4940
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !4940
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 1, !dbg !4940
  %call11 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !4940
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.56, i64 0, i64 0), i8* %call11) #6, !dbg !4940
  br label %if.end17, !dbg !4942

if.else:                                          ; preds = %if.end8
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4943
  %host13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 0, !dbg !4943
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host13, align 8, !dbg !4943
  %class_dev14 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 1, !dbg !4943
  %call15 = call i8* @dev_name(%struct.device* %class_dev14) #5, !dbg !4943
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.57, i64 0, i64 0), i8* %call15) #6, !dbg !4943
  store i32 0, i32* %err, align 4, !dbg !4945
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then10
  %13 = load i32, i32* %err, align 4, !dbg !4946
  store i32 %13, i32* %retval, align 4, !dbg !4947
  br label %return, !dbg !4947

if.end18:                                         ; preds = %if.end
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4948
  %15 = load i8*, i8** %ext_csd, align 8, !dbg !4949
  %call19 = call i32 @mmc_decode_ext_csd(%struct.mmc_card* %14, i8* %15) #5, !dbg !4950
  store i32 %call19, i32* %err, align 4, !dbg !4951
  %16 = load i8*, i8** %ext_csd, align 8, !dbg !4952
  call void @kfree(i8* %16) #5, !dbg !4953
  %17 = load i32, i32* %err, align 4, !dbg !4954
  store i32 %17, i32* %retval, align 4, !dbg !4955
  br label %return, !dbg !4955

return:                                           ; preds = %if.end18, %if.end17, %if.then7, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !4956
  ret i32 %18, !dbg !4956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_set_erase_size(%struct.mmc_card* %card) #0 !dbg !4957 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4958, metadata !DIExpression()), !dbg !4959
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4960
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !4962
  %erase_group_def = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 1, !dbg !4963
  %1 = load i8, i8* %erase_group_def, align 1, !dbg !4963
  %conv = zext i8 %1 to i32, !dbg !4960
  %and = and i32 %conv, 1, !dbg !4964
  %tobool = icmp ne i32 %and, 0, !dbg !4964
  br i1 %tobool, label %if.then, label %if.else, !dbg !4965

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4966
  %ext_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !4967
  %hc_erase_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd1, i32 0, i32 20, !dbg !4968
  %3 = load i32, i32* %hc_erase_size, align 4, !dbg !4968
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4969
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 9, !dbg !4970
  store i32 %3, i32* %erase_size, align 4, !dbg !4971
  br label %if.end, !dbg !4969

if.else:                                          ; preds = %entry
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4972
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 20, !dbg !4973
  %erase_size2 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 8, !dbg !4974
  %6 = load i32, i32* %erase_size2, align 8, !dbg !4974
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4975
  %erase_size3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 9, !dbg !4976
  store i32 %6, i32* %erase_size3, align 4, !dbg !4977
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4978
  call void @mmc_init_erase(%struct.mmc_card* %8) #5, !dbg !4979
  ret void, !dbg !4980
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_can_discard(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_can_trim(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_timing(%struct.mmc_card* %card) #0 !dbg !4981 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4984, metadata !DIExpression()), !dbg !4985
  store i32 0, i32* %err, align 4, !dbg !4985
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4986
  %call = call i32 @mmc_can_ext_csd(%struct.mmc_card* %0) #5, !dbg !4988
  %tobool = icmp ne i32 %call, 0, !dbg !4988
  br i1 %tobool, label %if.end, label %if.then, !dbg !4989

if.then:                                          ; preds = %entry
  br label %bus_speed, !dbg !4990

if.end:                                           ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4991
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 37, !dbg !4993
  %2 = load i32, i32* %mmc_avail_type, align 4, !dbg !4993
  %and = and i32 %2, 256, !dbg !4994
  %tobool1 = icmp ne i32 %and, 0, !dbg !4994
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !4995

if.then2:                                         ; preds = %if.end
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !4996
  %call3 = call i32 @mmc_select_hs400es(%struct.mmc_card* %3) #5, !dbg !4997
  store i32 %call3, i32* %err, align 4, !dbg !4998
  br label %if.end17, !dbg !4999

if.else:                                          ; preds = %if.end
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5000
  %mmc_avail_type4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 37, !dbg !5002
  %5 = load i32, i32* %mmc_avail_type4, align 4, !dbg !5002
  %and5 = and i32 %5, 48, !dbg !5003
  %tobool6 = icmp ne i32 %and5, 0, !dbg !5003
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !5004

if.then7:                                         ; preds = %if.else
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5005
  %call8 = call i32 @mmc_select_hs200(%struct.mmc_card* %6) #5, !dbg !5006
  store i32 %call8, i32* %err, align 4, !dbg !5007
  br label %if.end16, !dbg !5008

if.else9:                                         ; preds = %if.else
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5009
  %mmc_avail_type10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 37, !dbg !5011
  %8 = load i32, i32* %mmc_avail_type10, align 4, !dbg !5011
  %and11 = and i32 %8, 3, !dbg !5012
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5012
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !5013

if.then13:                                        ; preds = %if.else9
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5014
  %call14 = call i32 @mmc_select_hs(%struct.mmc_card* %9) #5, !dbg !5015
  store i32 %call14, i32* %err, align 4, !dbg !5016
  br label %if.end15, !dbg !5017

if.end15:                                         ; preds = %if.then13, %if.else9
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then7
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then2
  %10 = load i32, i32* %err, align 4, !dbg !5018
  %tobool18 = icmp ne i32 %10, 0, !dbg !5018
  br i1 %tobool18, label %land.lhs.true, label %if.end20, !dbg !5020

land.lhs.true:                                    ; preds = %if.end17
  %11 = load i32, i32* %err, align 4, !dbg !5021
  %cmp = icmp ne i32 %11, -74, !dbg !5022
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !5023

if.then19:                                        ; preds = %land.lhs.true
  %12 = load i32, i32* %err, align 4, !dbg !5024
  store i32 %12, i32* %retval, align 4, !dbg !5025
  br label %return, !dbg !5025

if.end20:                                         ; preds = %land.lhs.true, %if.end17
  br label %bus_speed, !dbg !5026

bus_speed:                                        ; preds = %if.end20, %if.then
  call void @llvm.dbg.label(metadata !5027), !dbg !5028
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5029
  call void @mmc_set_bus_speed(%struct.mmc_card* %13) #5, !dbg !5030
  store i32 0, i32* %retval, align 4, !dbg !5031
  br label %return, !dbg !5031

return:                                           ; preds = %bus_speed, %if.then19
  %14 = load i32, i32* %retval, align 4, !dbg !5032
  ret i32 %14, !dbg !5032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_hs200_tuning(%struct.mmc_card* %card) #0 !dbg !5033 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5034, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5036, metadata !DIExpression()), !dbg !5037
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5038
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !5039
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !5039
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !5037
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5040
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 37, !dbg !5042
  %3 = load i32, i32* %mmc_avail_type, align 4, !dbg !5042
  %and = and i32 %3, 192, !dbg !5043
  %tobool = icmp ne i32 %and, 0, !dbg !5043
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !5044

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5045
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !5046
  %bus_width = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 6, !dbg !5047
  %5 = load i8, i8* %bus_width, align 1, !dbg !5047
  %conv = zext i8 %5 to i32, !dbg !5045
  %cmp = icmp eq i32 %conv, 3, !dbg !5048
  br i1 %cmp, label %if.then, label %if.end8, !dbg !5049

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5050
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 3, !dbg !5052
  %7 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !5052
  %prepare_hs400_tuning = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %7, i32 0, i32 13, !dbg !5053
  %8 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %prepare_hs400_tuning, align 8, !dbg !5053
  %tobool3 = icmp ne i32 (%struct.mmc_host*, %struct.mmc_ios*)* %8, null, !dbg !5050
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5054

if.then4:                                         ; preds = %if.then
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5055
  %ops5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 3, !dbg !5056
  %10 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops5, align 8, !dbg !5056
  %prepare_hs400_tuning6 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %10, i32 0, i32 13, !dbg !5057
  %11 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %prepare_hs400_tuning6, align 8, !dbg !5057
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5058
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5059
  %ios7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 29, !dbg !5060
  %call = call i32 %11(%struct.mmc_host* %12, %struct.mmc_ios* %ios7) #5, !dbg !5055
  br label %if.end, !dbg !5055

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end8, !dbg !5053

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5061
  %call9 = call i32 @mmc_execute_tuning(%struct.mmc_card* %14) #5, !dbg !5062
  ret i32 %call9, !dbg !5063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_card_hs400es(%struct.mmc_card* %card) #0 !dbg !5064 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5067
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !5068
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5068
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !5069
  %enhanced_strobe = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 10, !dbg !5070
  %2 = load i8, i8* %enhanced_strobe, align 1, !dbg !5070
  %tobool = trunc i8 %2 to i1, !dbg !5070
  ret i1 %tobool, !dbg !5071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_bus_width(%struct.mmc_card* %card) #0 !dbg !2641 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %idx = alloca i32, align 4
  %bus_width = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5074, metadata !DIExpression()), !dbg !5075
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5076
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !5077
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !5077
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !5075
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5078, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.declare(metadata i32* %bus_width, metadata !5080, metadata !DIExpression()), !dbg !5081
  store i32 0, i32* %bus_width, align 4, !dbg !5081
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5082, metadata !DIExpression()), !dbg !5083
  store i32 0, i32* %err, align 4, !dbg !5083
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5084
  %call = call i32 @mmc_can_ext_csd(%struct.mmc_card* %2) #5, !dbg !5086
  %tobool = icmp ne i32 %call, 0, !dbg !5086
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5087

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5088
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 17, !dbg !5089
  %4 = load i32, i32* %caps, align 4, !dbg !5089
  %and = and i32 %4, 65, !dbg !5090
  %tobool2 = icmp ne i32 %and, 0, !dbg !5090
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5091

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !5092
  br label %return, !dbg !5092

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5093
  %caps3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 17, !dbg !5094
  %6 = load i32, i32* %caps3, align 4, !dbg !5094
  %and4 = and i32 %6, 64, !dbg !5095
  %tobool5 = icmp ne i32 %and4, 0, !dbg !5096
  %7 = zext i1 %tobool5 to i64, !dbg !5096
  %cond = select i1 %tobool5, i32 0, i32 1, !dbg !5096
  store i32 %cond, i32* %idx, align 4, !dbg !5097
  br label %for.cond, !dbg !5098

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %idx, align 4, !dbg !5099
  %conv = zext i32 %8 to i64, !dbg !5099
  %cmp = icmp ult i64 %conv, 2, !dbg !5102
  br i1 %cmp, label %for.body, label %for.end, !dbg !5103

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5104
  %10 = load i32, i32* %idx, align 4, !dbg !5106
  %idxprom = zext i32 %10 to i64, !dbg !5107
  %arrayidx = getelementptr [2 x i32], [2 x i32]* @mmc_select_bus_width.ext_csd_bits, i64 0, i64 %idxprom, !dbg !5107
  %11 = load i32, i32* %arrayidx, align 4, !dbg !5107
  %conv7 = trunc i32 %11 to i8, !dbg !5107
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5108
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 21, !dbg !5109
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !5110
  %13 = load i32, i32* %generic_cmd6_time, align 4, !dbg !5110
  %call8 = call i32 @mmc_switch(%struct.mmc_card* %9, i8 zeroext 1, i8 zeroext -73, i8 zeroext %conv7, i32 %13) #5, !dbg !5111
  store i32 %call8, i32* %err, align 4, !dbg !5112
  %14 = load i32, i32* %err, align 4, !dbg !5113
  %tobool9 = icmp ne i32 %14, 0, !dbg !5113
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5115

if.then10:                                        ; preds = %for.body
  br label %for.inc, !dbg !5116

if.end11:                                         ; preds = %for.body
  %15 = load i32, i32* %idx, align 4, !dbg !5117
  %idxprom12 = zext i32 %15 to i64, !dbg !5118
  %arrayidx13 = getelementptr [2 x i32], [2 x i32]* @mmc_select_bus_width.bus_widths, i64 0, i64 %idxprom12, !dbg !5118
  %16 = load i32, i32* %arrayidx13, align 4, !dbg !5118
  store i32 %16, i32* %bus_width, align 4, !dbg !5119
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5120
  %18 = load i32, i32* %bus_width, align 4, !dbg !5121
  call void @mmc_set_bus_width(%struct.mmc_host* %17, i32 %18) #5, !dbg !5122
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5123
  %caps14 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 17, !dbg !5125
  %20 = load i32, i32* %caps14, align 4, !dbg !5125
  %and15 = and i32 %20, 32768, !dbg !5126
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5126
  br i1 %tobool16, label %if.else, label %if.then17, !dbg !5127

if.then17:                                        ; preds = %if.end11
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5128
  %22 = load i32, i32* %bus_width, align 4, !dbg !5129
  %call18 = call i32 @mmc_compare_ext_csds(%struct.mmc_card* %21, i32 %22) #5, !dbg !5130
  store i32 %call18, i32* %err, align 4, !dbg !5131
  br label %if.end21, !dbg !5132

if.else:                                          ; preds = %if.end11
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5133
  %24 = load i32, i32* %bus_width, align 4, !dbg !5134
  %conv19 = trunc i32 %24 to i8, !dbg !5134
  %call20 = call i32 @mmc_bus_test(%struct.mmc_card* %23, i8 zeroext %conv19) #5, !dbg !5135
  store i32 %call20, i32* %err, align 4, !dbg !5136
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then17
  %25 = load i32, i32* %err, align 4, !dbg !5137
  %tobool22 = icmp ne i32 %25, 0, !dbg !5137
  br i1 %tobool22, label %if.else24, label %if.then23, !dbg !5139

if.then23:                                        ; preds = %if.end21
  %26 = load i32, i32* %bus_width, align 4, !dbg !5140
  store i32 %26, i32* %err, align 4, !dbg !5142
  br label %for.end, !dbg !5143

if.else24:                                        ; preds = %if.end21
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5144
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %27, i32 0, i32 1, !dbg !5144
  %call25 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !5144
  %28 = load i32, i32* %bus_width, align 4, !dbg !5144
  %shl = shl i32 1, %28, !dbg !5144
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i8* %call25, i32 %shl) #6, !dbg !5144
  br label %if.end27

if.end27:                                         ; preds = %if.else24
  br label %for.inc, !dbg !5146

for.inc:                                          ; preds = %if.end27, %if.then10
  %29 = load i32, i32* %idx, align 4, !dbg !5147
  %inc = add i32 %29, 1, !dbg !5147
  store i32 %inc, i32* %idx, align 4, !dbg !5147
  br label %for.cond, !dbg !5148, !llvm.loop !5149

for.end:                                          ; preds = %if.then23, %for.cond
  %30 = load i32, i32* %err, align 4, !dbg !5151
  store i32 %30, i32* %retval, align 4, !dbg !5152
  br label %return, !dbg !5152

return:                                           ; preds = %for.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !5153
  ret i32 %31, !dbg !5153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_hs_ddr(%struct.mmc_card* %card) #0 !dbg !5154 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %bus_width = alloca i32, align 4
  %ext_csd_bits = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5155, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5157, metadata !DIExpression()), !dbg !5158
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5159
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !5160
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !5160
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !5158
  call void @llvm.dbg.declare(metadata i32* %bus_width, metadata !5161, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.declare(metadata i32* %ext_csd_bits, metadata !5163, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5165, metadata !DIExpression()), !dbg !5166
  store i32 0, i32* %err, align 4, !dbg !5166
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5167
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 37, !dbg !5169
  %3 = load i32, i32* %mmc_avail_type, align 4, !dbg !5169
  %and = and i32 %3, 12, !dbg !5170
  %tobool = icmp ne i32 %and, 0, !dbg !5170
  br i1 %tobool, label %if.end, label %if.then, !dbg !5171

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5172
  br label %return, !dbg !5172

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5173
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !5174
  %bus_width2 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 6, !dbg !5175
  %5 = load i8, i8* %bus_width2, align 1, !dbg !5175
  %conv = zext i8 %5 to i32, !dbg !5173
  store i32 %conv, i32* %bus_width, align 4, !dbg !5176
  %6 = load i32, i32* %bus_width, align 4, !dbg !5177
  %cmp = icmp eq i32 %6, 0, !dbg !5179
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5180

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5181
  br label %return, !dbg !5181

if.end5:                                          ; preds = %if.end
  %7 = load i32, i32* %bus_width, align 4, !dbg !5182
  %cmp6 = icmp eq i32 %7, 3, !dbg !5183
  %8 = zext i1 %cmp6 to i64, !dbg !5184
  %cond = select i1 %cmp6, i32 6, i32 5, !dbg !5184
  store i32 %cond, i32* %ext_csd_bits, align 4, !dbg !5185
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5186
  %10 = load i32, i32* %ext_csd_bits, align 4, !dbg !5187
  %conv8 = trunc i32 %10 to i8, !dbg !5187
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5188
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 21, !dbg !5189
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !5190
  %12 = load i32, i32* %generic_cmd6_time, align 4, !dbg !5190
  %call = call i32 @__mmc_switch(%struct.mmc_card* %9, i8 zeroext 1, i8 zeroext -73, i8 zeroext %conv8, i32 %12, i8 zeroext 8, i1 zeroext true, i1 zeroext true) #5, !dbg !5191
  store i32 %call, i32* %err, align 4, !dbg !5192
  %13 = load i32, i32* %err, align 4, !dbg !5193
  %tobool9 = icmp ne i32 %13, 0, !dbg !5193
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !5195

if.then10:                                        ; preds = %if.end5
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5196
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 1, !dbg !5196
  %call11 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !5196
  %15 = load i32, i32* %bus_width, align 4, !dbg !5196
  %shl = shl i32 1, %15, !dbg !5196
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.72, i64 0, i64 0), i8* %call11, i32 %shl) #6, !dbg !5196
  %16 = load i32, i32* %err, align 4, !dbg !5198
  store i32 %16, i32* %retval, align 4, !dbg !5199
  br label %return, !dbg !5199

if.end13:                                         ; preds = %if.end5
  %17 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5200
  %mmc_avail_type14 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %17, i32 0, i32 37, !dbg !5202
  %18 = load i32, i32* %mmc_avail_type14, align 4, !dbg !5202
  %and15 = and i32 %18, 8, !dbg !5203
  %tobool16 = icmp ne i32 %and15, 0, !dbg !5203
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !5204

if.then17:                                        ; preds = %if.end13
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5205
  %call18 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %19, i32 2) #5, !dbg !5207
  store i32 %call18, i32* %err, align 4, !dbg !5208
  %20 = load i32, i32* %err, align 4, !dbg !5209
  %tobool19 = icmp ne i32 %20, 0, !dbg !5209
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !5211

if.then20:                                        ; preds = %if.then17
  store i32 0, i32* %retval, align 4, !dbg !5212
  br label %return, !dbg !5212

if.end21:                                         ; preds = %if.then17
  br label %if.end22, !dbg !5213

if.end22:                                         ; preds = %if.end21, %if.end13
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5214
  %mmc_avail_type23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 37, !dbg !5216
  %22 = load i32, i32* %mmc_avail_type23, align 4, !dbg !5216
  %and24 = and i32 %22, 4, !dbg !5217
  %tobool25 = icmp ne i32 %and24, 0, !dbg !5217
  br i1 %tobool25, label %land.lhs.true, label %if.end30, !dbg !5218

land.lhs.true:                                    ; preds = %if.end22
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5219
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 17, !dbg !5220
  %24 = load i32, i32* %caps, align 4, !dbg !5220
  %and26 = and i32 %24, 4096, !dbg !5221
  %tobool27 = icmp ne i32 %and26, 0, !dbg !5221
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !5222

if.then28:                                        ; preds = %land.lhs.true
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5223
  %call29 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %25, i32 1) #5, !dbg !5224
  store i32 %call29, i32* %err, align 4, !dbg !5225
  br label %if.end30, !dbg !5226

if.end30:                                         ; preds = %if.then28, %land.lhs.true, %if.end22
  %26 = load i32, i32* %err, align 4, !dbg !5227
  %tobool31 = icmp ne i32 %26, 0, !dbg !5227
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !5229

if.then32:                                        ; preds = %if.end30
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5230
  %call33 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %27, i32 0) #5, !dbg !5231
  store i32 %call33, i32* %err, align 4, !dbg !5232
  br label %if.end34, !dbg !5233

if.end34:                                         ; preds = %if.then32, %if.end30
  %28 = load i32, i32* %err, align 4, !dbg !5234
  store i32 %28, i32* %retval, align 4, !dbg !5235
  br label %return, !dbg !5235

return:                                           ; preds = %if.end34, %if.then20, %if.then10, %if.then4, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !5236
  ret i32 %29, !dbg !5236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_powerclass(%struct.mmc_card* %card) #0 !dbg !5237 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %bus_width = alloca i32, align 4
  %ext_csd_bits = alloca i32, align 4
  %err = alloca i32, align 4
  %ddr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5238, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5240, metadata !DIExpression()), !dbg !5241
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5242
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !5243
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !5243
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !5241
  call void @llvm.dbg.declare(metadata i32* %bus_width, metadata !5244, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata i32* %ext_csd_bits, metadata !5246, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata i32* %ddr, metadata !5250, metadata !DIExpression()), !dbg !5251
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5252
  %call = call i32 @mmc_can_ext_csd(%struct.mmc_card* %2) #5, !dbg !5254
  %tobool = icmp ne i32 %call, 0, !dbg !5254
  br i1 %tobool, label %if.end, label %if.then, !dbg !5255

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5256
  br label %return, !dbg !5256

if.end:                                           ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5257
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 29, !dbg !5258
  %bus_width2 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 6, !dbg !5259
  %4 = load i8, i8* %bus_width2, align 1, !dbg !5259
  %conv = zext i8 %4 to i32, !dbg !5257
  store i32 %conv, i32* %bus_width, align 4, !dbg !5260
  %5 = load i32, i32* %bus_width, align 4, !dbg !5261
  %cmp = icmp eq i32 %5, 0, !dbg !5263
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5264

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5265
  br label %return, !dbg !5265

if.end5:                                          ; preds = %if.end
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5266
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 37, !dbg !5267
  %7 = load i32, i32* %mmc_avail_type, align 4, !dbg !5267
  %and = and i32 %7, 12, !dbg !5268
  store i32 %and, i32* %ddr, align 4, !dbg !5269
  %8 = load i32, i32* %ddr, align 4, !dbg !5270
  %tobool6 = icmp ne i32 %8, 0, !dbg !5270
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5272

if.then7:                                         ; preds = %if.end5
  %9 = load i32, i32* %bus_width, align 4, !dbg !5273
  %cmp8 = icmp eq i32 %9, 3, !dbg !5274
  %10 = zext i1 %cmp8 to i64, !dbg !5275
  %cond = select i1 %cmp8, i32 6, i32 5, !dbg !5275
  store i32 %cond, i32* %ext_csd_bits, align 4, !dbg !5276
  br label %if.end13, !dbg !5277

if.else:                                          ; preds = %if.end5
  %11 = load i32, i32* %bus_width, align 4, !dbg !5278
  %cmp10 = icmp eq i32 %11, 3, !dbg !5279
  %12 = zext i1 %cmp10 to i64, !dbg !5280
  %cond12 = select i1 %cmp10, i32 2, i32 1, !dbg !5280
  store i32 %cond12, i32* %ext_csd_bits, align 4, !dbg !5281
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5282
  %14 = load i32, i32* %ext_csd_bits, align 4, !dbg !5283
  %call14 = call i32 @__mmc_select_powerclass(%struct.mmc_card* %13, i32 %14) #5, !dbg !5284
  store i32 %call14, i32* %err, align 4, !dbg !5285
  %15 = load i32, i32* %err, align 4, !dbg !5286
  %tobool15 = icmp ne i32 %15, 0, !dbg !5286
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !5288

if.then16:                                        ; preds = %if.end13
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5289
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 1, !dbg !5289
  %call17 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !5289
  %17 = load i32, i32* %bus_width, align 4, !dbg !5289
  %shl = shl i32 1, %17, !dbg !5289
  %18 = load i32, i32* %ddr, align 4, !dbg !5289
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.73, i64 0, i64 0), i8* %call17, i32 %shl, i32 %18) #6, !dbg !5289
  br label %if.end19, !dbg !5289

if.end19:                                         ; preds = %if.then16, %if.end13
  %19 = load i32, i32* %err, align 4, !dbg !5290
  store i32 %19, i32* %retval, align 4, !dbg !5291
  br label %return, !dbg !5291

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !5292
  ret i32 %20, !dbg !5292
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_cmdq_enable(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_cid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5293 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5294, metadata !DIExpression()), !dbg !5295
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5296, metadata !DIExpression()), !dbg !5295
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5297, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5298, metadata !DIExpression()), !dbg !5295
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5299, metadata !DIExpression()), !dbg !5301
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5301
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5301
  store i8* %1, i8** %__mptr, align 8, !dbg !5301
  br label %do.body, !dbg !5301

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5302

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5301
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5301
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5301
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5302
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5301
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5295
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5295
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5295
  %raw_cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 15, !dbg !5295
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %raw_cid, i64 0, i64 0, !dbg !5295
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5295
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5295
  %raw_cid1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 15, !dbg !5295
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %raw_cid1, i64 0, i64 1, !dbg !5295
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !5295
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5295
  %raw_cid3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 15, !dbg !5295
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %raw_cid3, i64 0, i64 2, !dbg !5295
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !5295
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5295
  %raw_cid5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 15, !dbg !5295
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %raw_cid5, i64 0, i64 3, !dbg !5295
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !5295
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13) #5, !dbg !5295
  %conv = sext i32 %call to i64, !dbg !5295
  ret i64 %conv, !dbg !5295
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_csd_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5304 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5305, metadata !DIExpression()), !dbg !5306
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5307, metadata !DIExpression()), !dbg !5306
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5308, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5309, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5310, metadata !DIExpression()), !dbg !5312
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5312
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5312
  store i8* %1, i8** %__mptr, align 8, !dbg !5312
  br label %do.body, !dbg !5312

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5313

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5312
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5312
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5312
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5313
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5312
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5306
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5306
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5306
  %raw_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 16, !dbg !5306
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %raw_csd, i64 0, i64 0, !dbg !5306
  %7 = load i32, i32* %arrayidx, align 4, !dbg !5306
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5306
  %raw_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 16, !dbg !5306
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %raw_csd1, i64 0, i64 1, !dbg !5306
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !5306
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5306
  %raw_csd3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 16, !dbg !5306
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %raw_csd3, i64 0, i64 2, !dbg !5306
  %11 = load i32, i32* %arrayidx4, align 4, !dbg !5306
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5306
  %raw_csd5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 16, !dbg !5306
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %raw_csd5, i64 0, i64 3, !dbg !5306
  %13 = load i32, i32* %arrayidx6, align 4, !dbg !5306
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i32 %7, i32 %9, i32 %11, i32 %13) #5, !dbg !5306
  %conv = sext i32 %call to i64, !dbg !5306
  ret i64 %conv, !dbg !5306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_date_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5315 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5316, metadata !DIExpression()), !dbg !5317
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5318, metadata !DIExpression()), !dbg !5317
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5319, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5320, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5321, metadata !DIExpression()), !dbg !5323
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5323
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5323
  store i8* %1, i8** %__mptr, align 8, !dbg !5323
  br label %do.body, !dbg !5323

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5324

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5323
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5323
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5323
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5324
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5323
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5317
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5317
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5317
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5317
  %month = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 8, !dbg !5317
  %7 = load i8, i8* %month, align 2, !dbg !5317
  %conv = zext i8 %7 to i32, !dbg !5317
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5317
  %cid1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 19, !dbg !5317
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid1, i32 0, i32 5, !dbg !5317
  %9 = load i16, i16* %year, align 2, !dbg !5317
  %conv2 = zext i16 %9 to i32, !dbg !5317
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i32 %conv, i32 %conv2) #5, !dbg !5317
  %conv3 = sext i32 %call to i64, !dbg !5317
  ret i64 %conv3, !dbg !5317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_erase_size_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5326 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5327, metadata !DIExpression()), !dbg !5328
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5329, metadata !DIExpression()), !dbg !5328
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5330, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5331, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5332, metadata !DIExpression()), !dbg !5334
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5334
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5334
  store i8* %1, i8** %__mptr, align 8, !dbg !5334
  br label %do.body, !dbg !5334

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5335

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5334
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5334
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5334
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5335
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5334
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5328
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5328
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5328
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 9, !dbg !5328
  %7 = load i32, i32* %erase_size, align 4, !dbg !5328
  %shl = shl i32 %7, 9, !dbg !5328
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %shl) #5, !dbg !5328
  %conv = sext i32 %call to i64, !dbg !5328
  ret i64 %conv, !dbg !5328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_preferred_erase_size_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5337 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5340, metadata !DIExpression()), !dbg !5339
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5341, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5342, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5343, metadata !DIExpression()), !dbg !5345
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5345
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5345
  store i8* %1, i8** %__mptr, align 8, !dbg !5345
  br label %do.body, !dbg !5345

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5346

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5345
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5345
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5345
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5346
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5345
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5339
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5339
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5339
  %pref_erase = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 11, !dbg !5339
  %7 = load i32, i32* %pref_erase, align 4, !dbg !5339
  %shl = shl i32 %7, 9, !dbg !5339
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %shl) #5, !dbg !5339
  %conv = sext i32 %call to i64, !dbg !5339
  ret i64 %conv, !dbg !5339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_fwrev_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5348 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5349, metadata !DIExpression()), !dbg !5350
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5355, metadata !DIExpression()), !dbg !5356
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5357, metadata !DIExpression()), !dbg !5359
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5359
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5359
  store i8* %1, i8** %__mptr, align 8, !dbg !5359
  br label %do.body, !dbg !5359

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5360

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5359
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5359
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5359
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5360
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5359
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5356
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5362
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 21, !dbg !5364
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !5365
  %6 = load i8, i8* %rev, align 8, !dbg !5365
  %conv = zext i8 %6 to i32, !dbg !5362
  %cmp = icmp slt i32 %conv, 7, !dbg !5366
  br i1 %cmp, label %if.then, label %if.else, !dbg !5367

if.then:                                          ; preds = %do.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !5368
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5370
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 19, !dbg !5371
  %fwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 7, !dbg !5372
  %9 = load i8, i8* %fwrev, align 1, !dbg !5372
  %conv2 = zext i8 %9 to i32, !dbg !5370
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %conv2) #5, !dbg !5373
  %conv3 = sext i32 %call to i64, !dbg !5373
  store i64 %conv3, i64* %retval, align 8, !dbg !5374
  br label %return, !dbg !5374

if.else:                                          ; preds = %do.end
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !5375
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5377
  %ext_csd4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 21, !dbg !5378
  %fwrev5 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd4, i32 0, i32 43, !dbg !5379
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %fwrev5, i64 0, i64 0, !dbg !5377
  %call6 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 8, i8* %arraydecay) #5, !dbg !5380
  %conv7 = sext i32 %call6 to i64, !dbg !5380
  store i64 %conv7, i64* %retval, align 8, !dbg !5381
  br label %return, !dbg !5381

return:                                           ; preds = %if.else, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !5382
  ret i64 %12, !dbg !5382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_ffu_capable_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5383 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5384, metadata !DIExpression()), !dbg !5385
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5386, metadata !DIExpression()), !dbg !5385
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5387, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5388, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5389, metadata !DIExpression()), !dbg !5391
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5391
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5391
  store i8* %1, i8** %__mptr, align 8, !dbg !5391
  br label %do.body, !dbg !5391

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5392

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5391
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5391
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5391
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5392
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5391
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5385
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5385
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5385
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5385
  %ffu_capable = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 39, !dbg !5385
  %7 = load i8, i8* %ffu_capable, align 1, !dbg !5385
  %tobool = trunc i8 %7 to i1, !dbg !5385
  %conv = zext i1 %tobool to i32, !dbg !5385
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i32 %conv) #5, !dbg !5385
  %conv1 = sext i32 %call to i64, !dbg !5385
  ret i64 %conv1, !dbg !5385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_hwrev_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5394 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5395, metadata !DIExpression()), !dbg !5396
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5397, metadata !DIExpression()), !dbg !5396
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5398, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5399, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5400, metadata !DIExpression()), !dbg !5402
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5402
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5402
  store i8* %1, i8** %__mptr, align 8, !dbg !5402
  br label %do.body, !dbg !5402

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5403

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5402
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5402
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5402
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5403
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5402
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5396
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5396
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5396
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5396
  %hwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 6, !dbg !5396
  %7 = load i8, i8* %hwrev, align 4, !dbg !5396
  %conv = zext i8 %7 to i32, !dbg !5396
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %conv) #5, !dbg !5396
  %conv1 = sext i32 %call to i64, !dbg !5396
  ret i64 %conv1, !dbg !5396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_manfid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5405 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5406, metadata !DIExpression()), !dbg !5407
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5408, metadata !DIExpression()), !dbg !5407
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5409, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5410, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5411, metadata !DIExpression()), !dbg !5413
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5413
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5413
  store i8* %1, i8** %__mptr, align 8, !dbg !5413
  br label %do.body, !dbg !5413

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5414

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5413
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5413
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5413
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5414
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5413
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5407
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5407
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5407
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5407
  %manfid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 0, !dbg !5407
  %7 = load i32, i32* %manfid, align 4, !dbg !5407
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i32 %7) #5, !dbg !5407
  %conv = sext i32 %call to i64, !dbg !5407
  ret i64 %conv, !dbg !5407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_name_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5416 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5419, metadata !DIExpression()), !dbg !5418
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5420, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5421, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5422, metadata !DIExpression()), !dbg !5424
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5424
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5424
  store i8* %1, i8** %__mptr, align 8, !dbg !5424
  br label %do.body, !dbg !5424

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5425

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5424
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5424
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5424
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5425
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5424
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5418
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5418
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5418
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5418
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 1, !dbg !5418
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !5418
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay) #5, !dbg !5418
  %conv = sext i32 %call to i64, !dbg !5418
  ret i64 %conv, !dbg !5418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_oemid_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5427 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5428, metadata !DIExpression()), !dbg !5429
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5430, metadata !DIExpression()), !dbg !5429
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5431, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5432, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5433, metadata !DIExpression()), !dbg !5435
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5435
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5435
  store i8* %1, i8** %__mptr, align 8, !dbg !5435
  br label %do.body, !dbg !5435

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5436

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5435
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5435
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5435
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5436
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5435
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5429
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5429
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5429
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5429
  %oemid = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 4, !dbg !5429
  %7 = load i16, i16* %oemid, align 4, !dbg !5429
  %conv = zext i16 %7 to i32, !dbg !5429
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i32 %conv) #5, !dbg !5429
  %conv1 = sext i32 %call to i64, !dbg !5429
  ret i64 %conv1, !dbg !5429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_prv_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5438 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5439, metadata !DIExpression()), !dbg !5440
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5441, metadata !DIExpression()), !dbg !5440
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5442, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5443, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5444, metadata !DIExpression()), !dbg !5446
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5446
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5446
  store i8* %1, i8** %__mptr, align 8, !dbg !5446
  br label %do.body, !dbg !5446

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5447

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5446
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5446
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5446
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5447
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5446
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5440
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5440
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5440
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5440
  %prv = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 2, !dbg !5440
  %7 = load i8, i8* %prv, align 4, !dbg !5440
  %conv = zext i8 %7 to i32, !dbg !5440
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %conv) #5, !dbg !5440
  %conv1 = sext i32 %call to i64, !dbg !5440
  ret i64 %conv1, !dbg !5440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_rev_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5449 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5450, metadata !DIExpression()), !dbg !5451
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5452, metadata !DIExpression()), !dbg !5451
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5453, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5454, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5455, metadata !DIExpression()), !dbg !5457
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5457
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5457
  store i8* %1, i8** %__mptr, align 8, !dbg !5457
  br label %do.body, !dbg !5457

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5458

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5457
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5457
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5457
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5458
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5457
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5451
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5451
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5451
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5451
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !5451
  %7 = load i8, i8* %rev, align 8, !dbg !5451
  %conv = zext i8 %7 to i32, !dbg !5451
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %conv) #5, !dbg !5451
  %conv1 = sext i32 %call to i64, !dbg !5451
  ret i64 %conv1, !dbg !5451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_pre_eol_info_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5460 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5461, metadata !DIExpression()), !dbg !5462
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5463, metadata !DIExpression()), !dbg !5462
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5464, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5465, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5466, metadata !DIExpression()), !dbg !5468
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5468
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5468
  store i8* %1, i8** %__mptr, align 8, !dbg !5468
  br label %do.body, !dbg !5468

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5469

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5468
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5468
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5468
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5469
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5468
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5462
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5462
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5462
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5462
  %pre_eol_info = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 72, !dbg !5462
  %7 = load i8, i8* %pre_eol_info, align 1, !dbg !5462
  %conv = zext i8 %7 to i32, !dbg !5462
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i64 0, i64 0), i32 %conv) #5, !dbg !5462
  %conv1 = sext i32 %call to i64, !dbg !5462
  ret i64 %conv1, !dbg !5462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_life_time_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5471 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5472, metadata !DIExpression()), !dbg !5473
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5474, metadata !DIExpression()), !dbg !5473
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5475, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5476, metadata !DIExpression()), !dbg !5473
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5477, metadata !DIExpression()), !dbg !5479
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5479
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5479
  store i8* %1, i8** %__mptr, align 8, !dbg !5479
  br label %do.body, !dbg !5479

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5480

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5479
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5479
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5479
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5480
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5479
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5473
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5473
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5473
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5473
  %device_life_time_est_typ_a = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 73, !dbg !5473
  %7 = load i8, i8* %device_life_time_est_typ_a, align 8, !dbg !5473
  %conv = zext i8 %7 to i32, !dbg !5473
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5473
  %ext_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 21, !dbg !5473
  %device_life_time_est_typ_b = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd1, i32 0, i32 74, !dbg !5473
  %9 = load i8, i8* %device_life_time_est_typ_b, align 1, !dbg !5473
  %conv2 = zext i8 %9 to i32, !dbg !5473
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0), i32 %conv, i32 %conv2) #5, !dbg !5473
  %conv3 = sext i32 %call to i64, !dbg !5473
  ret i64 %conv3, !dbg !5473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_serial_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5482 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5485, metadata !DIExpression()), !dbg !5484
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5486, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5487, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5488, metadata !DIExpression()), !dbg !5490
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5490
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5490
  store i8* %1, i8** %__mptr, align 8, !dbg !5490
  br label %do.body, !dbg !5490

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5491

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5490
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5490
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5490
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5491
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5490
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5484
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5484
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5484
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !5484
  %serial = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 3, !dbg !5484
  %7 = load i32, i32* %serial, align 4, !dbg !5484
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i32 %7) #5, !dbg !5484
  %conv = sext i32 %call to i64, !dbg !5484
  ret i64 %conv, !dbg !5484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_enhanced_area_offset_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5493 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5494, metadata !DIExpression()), !dbg !5495
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5496, metadata !DIExpression()), !dbg !5495
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5497, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5498, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5499, metadata !DIExpression()), !dbg !5501
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5501
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5501
  store i8* %1, i8** %__mptr, align 8, !dbg !5501
  br label %do.body, !dbg !5501

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5502

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5501
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5501
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5501
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5502
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5501
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5495
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5495
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5495
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5495
  %enhanced_area_offset = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 26, !dbg !5495
  %7 = load i64, i64* %enhanced_area_offset, align 8, !dbg !5495
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i64 %7) #5, !dbg !5495
  %conv = sext i32 %call to i64, !dbg !5495
  ret i64 %conv, !dbg !5495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_enhanced_area_size_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5504 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5505, metadata !DIExpression()), !dbg !5506
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5507, metadata !DIExpression()), !dbg !5506
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5508, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5509, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5510, metadata !DIExpression()), !dbg !5512
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5512
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5512
  store i8* %1, i8** %__mptr, align 8, !dbg !5512
  br label %do.body, !dbg !5512

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5513

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5512
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5512
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5512
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5513
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5512
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5506
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5506
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5506
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5506
  %enhanced_area_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 27, !dbg !5506
  %7 = load i32, i32* %enhanced_area_size, align 8, !dbg !5506
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %7) #5, !dbg !5506
  %conv = sext i32 %call to i64, !dbg !5506
  ret i64 %conv, !dbg !5506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_raw_rpmb_size_mult_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5515 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5518, metadata !DIExpression()), !dbg !5517
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5519, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5520, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5521, metadata !DIExpression()), !dbg !5523
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5523
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5523
  store i8* %1, i8** %__mptr, align 8, !dbg !5523
  br label %do.body, !dbg !5523

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5524

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5523
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5523
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5523
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5524
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5523
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5517
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5517
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5517
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5517
  %raw_rpmb_size_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 46, !dbg !5517
  %7 = load i8, i8* %raw_rpmb_size_mult, align 2, !dbg !5517
  %conv = zext i8 %7 to i32, !dbg !5517
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i32 %conv) #5, !dbg !5517
  %conv1 = sext i32 %call to i64, !dbg !5517
  ret i64 %conv1, !dbg !5517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_enhanced_rpmb_supported_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5526 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5527, metadata !DIExpression()), !dbg !5528
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5529, metadata !DIExpression()), !dbg !5528
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5530, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5531, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5532, metadata !DIExpression()), !dbg !5534
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5534
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5534
  store i8* %1, i8** %__mptr, align 8, !dbg !5534
  br label %do.body, !dbg !5534

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5535

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5534
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5534
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5534
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5535
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5534
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5528
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5528
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5528
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5528
  %enhanced_rpmb_supported = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 5, !dbg !5528
  %7 = load i8, i8* %enhanced_rpmb_supported, align 1, !dbg !5528
  %tobool = trunc i8 %7 to i1, !dbg !5528
  %conv = zext i1 %tobool to i32, !dbg !5528
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i32 %conv) #5, !dbg !5528
  %conv1 = sext i32 %call to i64, !dbg !5528
  ret i64 %conv1, !dbg !5528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_rel_sectors_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5537 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5538, metadata !DIExpression()), !dbg !5539
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5540, metadata !DIExpression()), !dbg !5539
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5541, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5542, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5543, metadata !DIExpression()), !dbg !5545
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5545
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5545
  store i8* %1, i8** %__mptr, align 8, !dbg !5545
  br label %do.body, !dbg !5545

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5546

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5545
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5545
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5545
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5546
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5545
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5539
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5539
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5539
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5539
  %rel_sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 3, !dbg !5539
  %7 = load i8, i8* %rel_sectors, align 1, !dbg !5539
  %conv = zext i8 %7 to i32, !dbg !5539
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i32 %conv) #5, !dbg !5539
  %conv1 = sext i32 %call to i64, !dbg !5539
  ret i64 %conv1, !dbg !5539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_ocr_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5548 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5551, metadata !DIExpression()), !dbg !5550
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5552, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5553, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5554, metadata !DIExpression()), !dbg !5556
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5556
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5556
  store i8* %1, i8** %__mptr, align 8, !dbg !5556
  br label %do.body, !dbg !5556

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5557

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5556
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5556
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5556
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5557
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5556
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5550
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5550
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5550
  %ocr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 2, !dbg !5550
  %7 = load i32, i32* %ocr, align 8, !dbg !5550
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i32 %7) #5, !dbg !5550
  %conv = sext i32 %call to i64, !dbg !5550
  ret i64 %conv, !dbg !5550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_rca_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5559 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5560, metadata !DIExpression()), !dbg !5561
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5562, metadata !DIExpression()), !dbg !5561
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5563, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5564, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5565, metadata !DIExpression()), !dbg !5567
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5567
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5567
  store i8* %1, i8** %__mptr, align 8, !dbg !5567
  br label %do.body, !dbg !5567

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5568

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5567
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5567
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5567
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5568
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5567
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5561
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5561
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5561
  %rca = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 3, !dbg !5561
  %7 = load i32, i32* %rca, align 4, !dbg !5561
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i32 %7) #5, !dbg !5561
  %conv = sext i32 %call to i64, !dbg !5561
  ret i64 %conv, !dbg !5561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_dsr_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5570 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5571, metadata !DIExpression()), !dbg !5572
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5573, metadata !DIExpression()), !dbg !5574
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5575, metadata !DIExpression()), !dbg !5576
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5577, metadata !DIExpression()), !dbg !5578
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5579, metadata !DIExpression()), !dbg !5581
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5581
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5581
  store i8* %1, i8** %__mptr, align 8, !dbg !5581
  br label %do.body, !dbg !5581

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5582

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5581
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5581
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5581
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5582
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5581
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5578
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5584, metadata !DIExpression()), !dbg !5585
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5586
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 0, !dbg !5587
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !5587
  store %struct.mmc_host* %6, %struct.mmc_host** %host, align 8, !dbg !5585
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5588
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 20, !dbg !5590
  %dsr_imp = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 12, !dbg !5591
  %bf.load = load i8, i8* %dsr_imp, align 8, !dbg !5591
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !5591
  %bf.clear = and i8 %bf.lshr, 1, !dbg !5591
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5591
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5588
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5592

land.lhs.true:                                    ; preds = %do.end
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5593
  %dsr_req = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 60, !dbg !5594
  %9 = load i32, i32* %dsr_req, align 8, !dbg !5594
  %tobool2 = icmp ne i32 %9, 0, !dbg !5593
  br i1 %tobool2, label %if.then, label %if.else, !dbg !5595

if.then:                                          ; preds = %land.lhs.true
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !5596
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5597
  %dsr = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 61, !dbg !5598
  %12 = load i32, i32* %dsr, align 4, !dbg !5598
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %12) #5, !dbg !5599
  %conv = sext i32 %call to i64, !dbg !5599
  store i64 %conv, i64* %retval, align 8, !dbg !5600
  br label %return, !dbg !5600

if.else:                                          ; preds = %land.lhs.true, %do.end
  %13 = load i8*, i8** %buf.addr, align 8, !dbg !5601
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 1028) #5, !dbg !5602
  %conv4 = sext i32 %call3 to i64, !dbg !5602
  store i64 %conv4, i64* %retval, align 8, !dbg !5603
  br label %return, !dbg !5603

return:                                           ; preds = %if.else, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !5604
  ret i64 %14, !dbg !5604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_cmdq_en_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !5605 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !5608, metadata !DIExpression()), !dbg !5607
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5609, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5610, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5611, metadata !DIExpression()), !dbg !5613
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5613
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5613
  store i8* %1, i8** %__mptr, align 8, !dbg !5613
  br label %do.body, !dbg !5613

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5614

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5613
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !5613
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !5613
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !5614
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !5613
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !5607
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !5607
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5607
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !5607
  %cmdq_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 40, !dbg !5607
  %7 = load i8, i8* %cmdq_en, align 2, !dbg !5607
  %tobool = trunc i8 %7 to i1, !dbg !5607
  %conv = zext i1 %tobool to i32, !dbg !5607
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i32 %conv) #5, !dbg !5607
  %conv1 = sext i32 %call to i64, !dbg !5607
  ret i64 %conv1, !dbg !5607
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_can_ext_csd(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_get_ext_csd(%struct.mmc_card*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_decode_ext_csd(%struct.mmc_card* %card, i8* %ext_csd) #0 !dbg !5616 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %ext_csd.addr = alloca i8*, align 8
  %err = alloca i32, align 4
  %idx = alloca i32, align 4
  %part_size = alloca i64, align 8
  %np = alloca %struct.device_node*, align 8
  %broken_hpi = alloca i8, align 1
  %sa_shift = alloca i8, align 1
  %tmp = alloca i32, align 4
  %tmp249 = alloca i32, align 4
  %tmp439 = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !5619, metadata !DIExpression()), !dbg !5620
  store i8* %ext_csd, i8** %ext_csd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ext_csd.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5623, metadata !DIExpression()), !dbg !5624
  store i32 0, i32* %err, align 4, !dbg !5624
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5625, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.declare(metadata i64* %part_size, metadata !5627, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5629, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.declare(metadata i8* %broken_hpi, metadata !5631, metadata !DIExpression()), !dbg !5632
  store i8 0, i8* %broken_hpi, align 1, !dbg !5632
  %0 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5633
  %arrayidx = getelementptr i8, i8* %0, i64 194, !dbg !5633
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5633
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5634
  %ext_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !5635
  %raw_ext_csd_structure = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd1, i32 0, i32 49, !dbg !5636
  store i8 %1, i8* %raw_ext_csd_structure, align 1, !dbg !5637
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5638
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 20, !dbg !5640
  %structure = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 0, !dbg !5641
  %4 = load i8, i8* %structure, align 8, !dbg !5641
  %conv = zext i8 %4 to i32, !dbg !5638
  %cmp = icmp eq i32 %conv, 3, !dbg !5642
  br i1 %cmp, label %if.then, label %if.end13, !dbg !5643

if.then:                                          ; preds = %entry
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5644
  %ext_csd3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 21, !dbg !5647
  %raw_ext_csd_structure4 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd3, i32 0, i32 49, !dbg !5648
  %6 = load i8, i8* %raw_ext_csd_structure4, align 1, !dbg !5648
  %conv5 = zext i8 %6 to i32, !dbg !5644
  %cmp6 = icmp sgt i32 %conv5, 2, !dbg !5649
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !5650

if.then8:                                         ; preds = %if.then
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5651
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 0, !dbg !5651
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5651
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 1, !dbg !5651
  %call = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !5651
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5651
  %ext_csd9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 21, !dbg !5651
  %raw_ext_csd_structure10 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd9, i32 0, i32 49, !dbg !5651
  %10 = load i8, i8* %raw_ext_csd_structure10, align 1, !dbg !5651
  %conv11 = zext i8 %10 to i32, !dbg !5651
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.58, i64 0, i64 0), i8* %call, i32 %conv11) #6, !dbg !5651
  store i32 -22, i32* %err, align 4, !dbg !5653
  br label %out, !dbg !5654

if.end:                                           ; preds = %if.then
  br label %if.end13, !dbg !5655

if.end13:                                         ; preds = %if.end, %entry
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5656
  %host14 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 0, !dbg !5657
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host14, align 8, !dbg !5657
  %call15 = call %struct.device_node* @mmc_of_find_child_device(%struct.mmc_host* %12, i32 0) #5, !dbg !5658
  store %struct.device_node* %call15, %struct.device_node** %np, align 8, !dbg !5659
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5660
  %tobool = icmp ne %struct.device_node* %13, null, !dbg !5660
  br i1 %tobool, label %land.lhs.true, label %if.end20, !dbg !5662

land.lhs.true:                                    ; preds = %if.end13
  %14 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5663
  %call16 = call i32 @of_device_is_compatible(%struct.device_node* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #5, !dbg !5664
  %tobool17 = icmp ne i32 %call16, 0, !dbg !5664
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !5665

if.then18:                                        ; preds = %land.lhs.true
  %15 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5666
  %call19 = call zeroext i1 @of_property_read_bool(%struct.device_node* %15, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0)) #5, !dbg !5667
  %frombool = zext i1 %call19 to i8, !dbg !5668
  store i8 %frombool, i8* %broken_hpi, align 1, !dbg !5668
  br label %if.end20, !dbg !5669

if.end20:                                         ; preds = %if.then18, %land.lhs.true, %if.end13
  %16 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5670
  call void @of_node_put(%struct.device_node* %16) #5, !dbg !5671
  %17 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5672
  %arrayidx21 = getelementptr i8, i8* %17, i64 192, !dbg !5672
  %18 = load i8, i8* %arrayidx21, align 1, !dbg !5672
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5673
  %ext_csd22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 21, !dbg !5674
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd22, i32 0, i32 0, !dbg !5675
  store i8 %18, i8* %rev, align 8, !dbg !5676
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5677
  call void @mmc_fixup_device(%struct.mmc_card* %20, %struct.mmc_fixup* getelementptr inbounds ([3 x %struct.mmc_fixup], [3 x %struct.mmc_fixup]* @mmc_ext_csd_fixups, i64 0, i64 0)) #5, !dbg !5678
  %21 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5679
  %arrayidx23 = getelementptr i8, i8* %21, i64 212, !dbg !5679
  %22 = load i8, i8* %arrayidx23, align 1, !dbg !5679
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5680
  %ext_csd24 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 21, !dbg !5681
  %raw_sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd24, i32 0, i32 71, !dbg !5682
  %arrayidx25 = getelementptr [4 x i8], [4 x i8]* %raw_sectors, i64 0, i64 0, !dbg !5680
  store i8 %22, i8* %arrayidx25, align 1, !dbg !5683
  %24 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5684
  %arrayidx26 = getelementptr i8, i8* %24, i64 213, !dbg !5684
  %25 = load i8, i8* %arrayidx26, align 1, !dbg !5684
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5685
  %ext_csd27 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %26, i32 0, i32 21, !dbg !5686
  %raw_sectors28 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd27, i32 0, i32 71, !dbg !5687
  %arrayidx29 = getelementptr [4 x i8], [4 x i8]* %raw_sectors28, i64 0, i64 1, !dbg !5685
  store i8 %25, i8* %arrayidx29, align 1, !dbg !5688
  %27 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5689
  %arrayidx30 = getelementptr i8, i8* %27, i64 214, !dbg !5689
  %28 = load i8, i8* %arrayidx30, align 1, !dbg !5689
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5690
  %ext_csd31 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %29, i32 0, i32 21, !dbg !5691
  %raw_sectors32 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd31, i32 0, i32 71, !dbg !5692
  %arrayidx33 = getelementptr [4 x i8], [4 x i8]* %raw_sectors32, i64 0, i64 2, !dbg !5690
  store i8 %28, i8* %arrayidx33, align 1, !dbg !5693
  %30 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5694
  %arrayidx34 = getelementptr i8, i8* %30, i64 215, !dbg !5694
  %31 = load i8, i8* %arrayidx34, align 1, !dbg !5694
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5695
  %ext_csd35 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 21, !dbg !5696
  %raw_sectors36 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd35, i32 0, i32 71, !dbg !5697
  %arrayidx37 = getelementptr [4 x i8], [4 x i8]* %raw_sectors36, i64 0, i64 3, !dbg !5695
  store i8 %31, i8* %arrayidx37, align 1, !dbg !5698
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5699
  %ext_csd38 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 21, !dbg !5701
  %rev39 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd38, i32 0, i32 0, !dbg !5702
  %34 = load i8, i8* %rev39, align 8, !dbg !5702
  %conv40 = zext i8 %34 to i32, !dbg !5699
  %cmp41 = icmp sge i32 %conv40, 2, !dbg !5703
  br i1 %cmp41, label %if.then43, label %if.end65, !dbg !5704

if.then43:                                        ; preds = %if.end20
  %35 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5705
  %arrayidx44 = getelementptr i8, i8* %35, i64 212, !dbg !5705
  %36 = load i8, i8* %arrayidx44, align 1, !dbg !5705
  %conv45 = zext i8 %36 to i32, !dbg !5705
  %shl = shl i32 %conv45, 0, !dbg !5707
  %37 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5708
  %arrayidx46 = getelementptr i8, i8* %37, i64 213, !dbg !5708
  %38 = load i8, i8* %arrayidx46, align 1, !dbg !5708
  %conv47 = zext i8 %38 to i32, !dbg !5708
  %shl48 = shl i32 %conv47, 8, !dbg !5709
  %or = or i32 %shl, %shl48, !dbg !5710
  %39 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5711
  %arrayidx49 = getelementptr i8, i8* %39, i64 214, !dbg !5711
  %40 = load i8, i8* %arrayidx49, align 1, !dbg !5711
  %conv50 = zext i8 %40 to i32, !dbg !5711
  %shl51 = shl i32 %conv50, 16, !dbg !5712
  %or52 = or i32 %or, %shl51, !dbg !5713
  %41 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5714
  %arrayidx53 = getelementptr i8, i8* %41, i64 215, !dbg !5714
  %42 = load i8, i8* %arrayidx53, align 1, !dbg !5714
  %conv54 = zext i8 %42 to i32, !dbg !5714
  %shl55 = shl i32 %conv54, 24, !dbg !5715
  %or56 = or i32 %or52, %shl55, !dbg !5716
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5717
  %ext_csd57 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %43, i32 0, i32 21, !dbg !5718
  %sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd57, i32 0, i32 19, !dbg !5719
  store i32 %or56, i32* %sectors, align 8, !dbg !5720
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5721
  %ext_csd58 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 21, !dbg !5723
  %sectors59 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd58, i32 0, i32 19, !dbg !5724
  %45 = load i32, i32* %sectors59, align 8, !dbg !5724
  %cmp60 = icmp ugt i32 %45, 4194304, !dbg !5725
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !5726

if.then62:                                        ; preds = %if.then43
  %46 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5727
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %46, i32 0, i32 5, !dbg !5727
  %47 = load i32, i32* %state, align 4, !dbg !5727
  %or63 = or i32 %47, 4, !dbg !5727
  store i32 %or63, i32* %state, align 4, !dbg !5727
  br label %if.end64, !dbg !5727

if.end64:                                         ; preds = %if.then62, %if.then43
  br label %if.end65, !dbg !5728

if.end65:                                         ; preds = %if.end64, %if.end20
  %48 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5729
  %arrayidx66 = getelementptr i8, i8* %48, i64 184, !dbg !5729
  %49 = load i8, i8* %arrayidx66, align 1, !dbg !5729
  %50 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5730
  %ext_csd67 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %50, i32 0, i32 21, !dbg !5731
  %strobe_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd67, i32 0, i32 48, !dbg !5732
  store i8 %49, i8* %strobe_support, align 4, !dbg !5733
  %51 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5734
  %arrayidx68 = getelementptr i8, i8* %51, i64 196, !dbg !5734
  %52 = load i8, i8* %arrayidx68, align 1, !dbg !5734
  %53 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5735
  %ext_csd69 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %53, i32 0, i32 21, !dbg !5736
  %raw_card_type = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd69, i32 0, i32 50, !dbg !5737
  store i8 %52, i8* %raw_card_type, align 2, !dbg !5738
  %54 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5739
  call void @mmc_select_card_type(%struct.mmc_card* %54) #5, !dbg !5740
  %55 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5741
  %arrayidx70 = getelementptr i8, i8* %55, i64 217, !dbg !5741
  %56 = load i8, i8* %arrayidx70, align 1, !dbg !5741
  %57 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5742
  %ext_csd71 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %57, i32 0, i32 21, !dbg !5743
  %raw_s_a_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd71, i32 0, i32 57, !dbg !5744
  store i8 %56, i8* %raw_s_a_timeout, align 1, !dbg !5745
  %58 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5746
  %arrayidx72 = getelementptr i8, i8* %58, i64 223, !dbg !5746
  %59 = load i8, i8* %arrayidx72, align 1, !dbg !5746
  %60 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5747
  %ext_csd73 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %60, i32 0, i32 21, !dbg !5748
  %raw_erase_timeout_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd73, i32 0, i32 59, !dbg !5749
  store i8 %59, i8* %raw_erase_timeout_mult, align 1, !dbg !5750
  %61 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5751
  %arrayidx74 = getelementptr i8, i8* %61, i64 224, !dbg !5751
  %62 = load i8, i8* %arrayidx74, align 1, !dbg !5751
  %63 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5752
  %ext_csd75 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %63, i32 0, i32 21, !dbg !5753
  %raw_hc_erase_grp_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd75, i32 0, i32 60, !dbg !5754
  store i8 %62, i8* %raw_hc_erase_grp_size, align 8, !dbg !5755
  %64 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5756
  %ext_csd76 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %64, i32 0, i32 21, !dbg !5758
  %rev77 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd76, i32 0, i32 0, !dbg !5759
  %65 = load i8, i8* %rev77, align 8, !dbg !5759
  %conv78 = zext i8 %65 to i32, !dbg !5756
  %cmp79 = icmp sge i32 %conv78, 3, !dbg !5760
  br i1 %cmp79, label %if.then81, label %if.end140, !dbg !5761

if.then81:                                        ; preds = %if.end65
  call void @llvm.dbg.declare(metadata i8* %sa_shift, metadata !5762, metadata !DIExpression()), !dbg !5764
  %66 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5765
  %arrayidx82 = getelementptr i8, i8* %66, i64 217, !dbg !5765
  %67 = load i8, i8* %arrayidx82, align 1, !dbg !5765
  store i8 %67, i8* %sa_shift, align 1, !dbg !5764
  %68 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5766
  %arrayidx83 = getelementptr i8, i8* %68, i64 179, !dbg !5766
  %69 = load i8, i8* %arrayidx83, align 1, !dbg !5766
  %70 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5767
  %ext_csd84 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %70, i32 0, i32 21, !dbg !5768
  %part_config = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd84, i32 0, i32 6, !dbg !5769
  store i8 %69, i8* %part_config, align 2, !dbg !5770
  %71 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5771
  %arrayidx85 = getelementptr i8, i8* %71, i64 199, !dbg !5771
  %72 = load i8, i8* %arrayidx85, align 1, !dbg !5771
  %conv86 = zext i8 %72 to i32, !dbg !5771
  %mul = mul i32 10, %conv86, !dbg !5772
  %73 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5773
  %ext_csd87 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %73, i32 0, i32 21, !dbg !5774
  %part_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd87, i32 0, i32 12, !dbg !5775
  store i32 %mul, i32* %part_time, align 4, !dbg !5776
  %74 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5777
  %ext_csd88 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %74, i32 0, i32 21, !dbg !5779
  %part_time89 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd88, i32 0, i32 12, !dbg !5780
  %75 = load i32, i32* %part_time89, align 4, !dbg !5780
  %tobool90 = icmp ne i32 %75, 0, !dbg !5777
  br i1 %tobool90, label %land.lhs.true91, label %if.end99, !dbg !5781

land.lhs.true91:                                  ; preds = %if.then81
  %76 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5782
  %ext_csd92 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %76, i32 0, i32 21, !dbg !5783
  %part_time93 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd92, i32 0, i32 12, !dbg !5784
  %77 = load i32, i32* %part_time93, align 4, !dbg !5784
  %cmp94 = icmp ult i32 %77, 300, !dbg !5785
  br i1 %cmp94, label %if.then96, label %if.end99, !dbg !5786

if.then96:                                        ; preds = %land.lhs.true91
  %78 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5787
  %ext_csd97 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %78, i32 0, i32 21, !dbg !5788
  %part_time98 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd97, i32 0, i32 12, !dbg !5789
  store i32 300, i32* %part_time98, align 4, !dbg !5790
  br label %if.end99, !dbg !5787

if.end99:                                         ; preds = %if.then96, %land.lhs.true91, %if.then81
  %79 = load i8, i8* %sa_shift, align 1, !dbg !5791
  %conv100 = zext i8 %79 to i32, !dbg !5791
  %cmp101 = icmp sgt i32 %conv100, 0, !dbg !5793
  br i1 %cmp101, label %land.lhs.true103, label %if.end112, !dbg !5794

land.lhs.true103:                                 ; preds = %if.end99
  %80 = load i8, i8* %sa_shift, align 1, !dbg !5795
  %conv104 = zext i8 %80 to i32, !dbg !5795
  %cmp105 = icmp sle i32 %conv104, 23, !dbg !5796
  br i1 %cmp105, label %if.then107, label %if.end112, !dbg !5797

if.then107:                                       ; preds = %land.lhs.true103
  %81 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5798
  %arrayidx108 = getelementptr i8, i8* %81, i64 217, !dbg !5798
  %82 = load i8, i8* %arrayidx108, align 1, !dbg !5798
  %conv109 = zext i8 %82 to i32, !dbg !5798
  %shl110 = shl i32 1, %conv109, !dbg !5799
  %83 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5800
  %ext_csd111 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %83, i32 0, i32 21, !dbg !5801
  %sa_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd111, i32 0, i32 13, !dbg !5802
  store i32 %shl110, i32* %sa_timeout, align 8, !dbg !5803
  br label %if.end112, !dbg !5800

if.end112:                                        ; preds = %if.then107, %land.lhs.true103, %if.end99
  %84 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5804
  %arrayidx113 = getelementptr i8, i8* %84, i64 175, !dbg !5804
  %85 = load i8, i8* %arrayidx113, align 1, !dbg !5804
  %86 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5805
  %ext_csd114 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %86, i32 0, i32 21, !dbg !5806
  %erase_group_def = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd114, i32 0, i32 1, !dbg !5807
  store i8 %85, i8* %erase_group_def, align 1, !dbg !5808
  %87 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5809
  %arrayidx115 = getelementptr i8, i8* %87, i64 223, !dbg !5809
  %88 = load i8, i8* %arrayidx115, align 1, !dbg !5809
  %conv116 = zext i8 %88 to i32, !dbg !5809
  %mul117 = mul i32 300, %conv116, !dbg !5810
  %89 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5811
  %ext_csd118 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %89, i32 0, i32 21, !dbg !5812
  %hc_erase_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd118, i32 0, i32 21, !dbg !5813
  store i32 %mul117, i32* %hc_erase_timeout, align 8, !dbg !5814
  %90 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5815
  %arrayidx119 = getelementptr i8, i8* %90, i64 224, !dbg !5815
  %91 = load i8, i8* %arrayidx119, align 1, !dbg !5815
  %conv120 = zext i8 %91 to i32, !dbg !5815
  %shl121 = shl i32 %conv120, 10, !dbg !5816
  %92 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5817
  %ext_csd122 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %92, i32 0, i32 21, !dbg !5818
  %hc_erase_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd122, i32 0, i32 20, !dbg !5819
  store i32 %shl121, i32* %hc_erase_size, align 4, !dbg !5820
  %93 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5821
  %arrayidx123 = getelementptr i8, i8* %93, i64 222, !dbg !5821
  %94 = load i8, i8* %arrayidx123, align 1, !dbg !5821
  %95 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5822
  %ext_csd124 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %95, i32 0, i32 21, !dbg !5823
  %rel_sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd124, i32 0, i32 3, !dbg !5824
  store i8 %94, i8* %rel_sectors, align 1, !dbg !5825
  %96 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5826
  %arrayidx125 = getelementptr i8, i8* %96, i64 226, !dbg !5826
  %97 = load i8, i8* %arrayidx125, align 1, !dbg !5826
  %conv126 = zext i8 %97 to i32, !dbg !5826
  %tobool127 = icmp ne i32 %conv126, 0, !dbg !5826
  br i1 %tobool127, label %land.lhs.true128, label %if.end139, !dbg !5828

land.lhs.true128:                                 ; preds = %if.end112
  %98 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5829
  %host129 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %98, i32 0, i32 0, !dbg !5830
  %99 = load %struct.mmc_host*, %struct.mmc_host** %host129, align 8, !dbg !5830
  %call130 = call i32 @mmc_boot_partition_access(%struct.mmc_host* %99) #5, !dbg !5831
  %tobool131 = icmp ne i32 %call130, 0, !dbg !5831
  br i1 %tobool131, label %if.then132, label %if.end139, !dbg !5832

if.then132:                                       ; preds = %land.lhs.true128
  store i32 0, i32* %idx, align 4, !dbg !5833
  br label %for.cond, !dbg !5836

for.cond:                                         ; preds = %for.inc, %if.then132
  %100 = load i32, i32* %idx, align 4, !dbg !5837
  %cmp133 = icmp slt i32 %100, 2, !dbg !5839
  br i1 %cmp133, label %for.body, label %for.end, !dbg !5840

for.body:                                         ; preds = %for.cond
  %101 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5841
  %arrayidx135 = getelementptr i8, i8* %101, i64 226, !dbg !5841
  %102 = load i8, i8* %arrayidx135, align 1, !dbg !5841
  %conv136 = zext i8 %102 to i32, !dbg !5841
  %shl137 = shl i32 %conv136, 17, !dbg !5843
  %conv138 = sext i32 %shl137 to i64, !dbg !5841
  store i64 %conv138, i64* %part_size, align 8, !dbg !5844
  %103 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5845
  %104 = load i64, i64* %part_size, align 8, !dbg !5846
  %105 = load i32, i32* %idx, align 4, !dbg !5847
  %add = add i32 1, %105, !dbg !5848
  %106 = load i32, i32* %idx, align 4, !dbg !5849
  call void @mmc_part_add(%struct.mmc_card* %103, i64 %104, i32 %add, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i32 %106, i1 zeroext true, i32 2) #5, !dbg !5850
  br label %for.inc, !dbg !5851

for.inc:                                          ; preds = %for.body
  %107 = load i32, i32* %idx, align 4, !dbg !5852
  %inc = add i32 %107, 1, !dbg !5852
  store i32 %inc, i32* %idx, align 4, !dbg !5852
  br label %for.cond, !dbg !5853, !llvm.loop !5854

for.end:                                          ; preds = %for.cond
  br label %if.end139, !dbg !5856

if.end139:                                        ; preds = %for.end, %land.lhs.true128, %if.end112
  br label %if.end140, !dbg !5857

if.end140:                                        ; preds = %if.end139, %if.end65
  %108 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5858
  %arrayidx141 = getelementptr i8, i8* %108, i64 221, !dbg !5858
  %109 = load i8, i8* %arrayidx141, align 1, !dbg !5858
  %110 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5859
  %ext_csd142 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %110, i32 0, i32 21, !dbg !5860
  %raw_hc_erase_gap_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd142, i32 0, i32 58, !dbg !5861
  store i8 %109, i8* %raw_hc_erase_gap_size, align 2, !dbg !5862
  %111 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5863
  %arrayidx143 = getelementptr i8, i8* %111, i64 229, !dbg !5863
  %112 = load i8, i8* %arrayidx143, align 1, !dbg !5863
  %113 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5864
  %ext_csd144 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %113, i32 0, i32 21, !dbg !5865
  %raw_sec_trim_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd144, i32 0, i32 61, !dbg !5866
  store i8 %112, i8* %raw_sec_trim_mult, align 1, !dbg !5867
  %114 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5868
  %arrayidx145 = getelementptr i8, i8* %114, i64 230, !dbg !5868
  %115 = load i8, i8* %arrayidx145, align 1, !dbg !5868
  %116 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5869
  %ext_csd146 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %116, i32 0, i32 21, !dbg !5870
  %raw_sec_erase_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd146, i32 0, i32 62, !dbg !5871
  store i8 %115, i8* %raw_sec_erase_mult, align 2, !dbg !5872
  %117 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5873
  %arrayidx147 = getelementptr i8, i8* %117, i64 231, !dbg !5873
  %118 = load i8, i8* %arrayidx147, align 1, !dbg !5873
  %119 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5874
  %ext_csd148 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %119, i32 0, i32 21, !dbg !5875
  %raw_sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd148, i32 0, i32 63, !dbg !5876
  store i8 %118, i8* %raw_sec_feature_support, align 1, !dbg !5877
  %120 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5878
  %arrayidx149 = getelementptr i8, i8* %120, i64 232, !dbg !5878
  %121 = load i8, i8* %arrayidx149, align 1, !dbg !5878
  %122 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5879
  %ext_csd150 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %122, i32 0, i32 21, !dbg !5880
  %raw_trim_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd150, i32 0, i32 64, !dbg !5881
  store i8 %121, i8* %raw_trim_mult, align 4, !dbg !5882
  %123 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5883
  %arrayidx151 = getelementptr i8, i8* %123, i64 160, !dbg !5883
  %124 = load i8, i8* %arrayidx151, align 1, !dbg !5883
  %125 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5884
  %ext_csd152 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %125, i32 0, i32 21, !dbg !5885
  %raw_partition_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd152, i32 0, i32 45, !dbg !5886
  store i8 %124, i8* %raw_partition_support, align 1, !dbg !5887
  %126 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5888
  %arrayidx153 = getelementptr i8, i8* %126, i64 197, !dbg !5888
  %127 = load i8, i8* %arrayidx153, align 1, !dbg !5888
  %128 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5889
  %ext_csd154 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %128, i32 0, i32 21, !dbg !5890
  %raw_driver_strength = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd154, i32 0, i32 51, !dbg !5891
  store i8 %127, i8* %raw_driver_strength, align 1, !dbg !5892
  %129 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5893
  %ext_csd155 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %129, i32 0, i32 21, !dbg !5895
  %rev156 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd155, i32 0, i32 0, !dbg !5896
  %130 = load i8, i8* %rev156, align 8, !dbg !5896
  %conv157 = zext i8 %130 to i32, !dbg !5893
  %cmp158 = icmp sge i32 %conv157, 4, !dbg !5897
  br i1 %cmp158, label %if.then160, label %if.end203, !dbg !5898

if.then160:                                       ; preds = %if.end140
  %131 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5899
  %arrayidx161 = getelementptr i8, i8* %131, i64 155, !dbg !5899
  %132 = load i8, i8* %arrayidx161, align 1, !dbg !5899
  %conv162 = zext i8 %132 to i32, !dbg !5899
  %and = and i32 %conv162, 1, !dbg !5902
  %tobool163 = icmp ne i32 %and, 0, !dbg !5902
  br i1 %tobool163, label %if.then164, label %if.else, !dbg !5903

if.then164:                                       ; preds = %if.then160
  %133 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5904
  %ext_csd165 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %133, i32 0, i32 21, !dbg !5905
  %partition_setting_completed = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd165, i32 0, i32 25, !dbg !5906
  store i8 1, i8* %partition_setting_completed, align 8, !dbg !5907
  br label %if.end168, !dbg !5904

if.else:                                          ; preds = %if.then160
  %134 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5908
  %ext_csd166 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %134, i32 0, i32 21, !dbg !5909
  %partition_setting_completed167 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd166, i32 0, i32 25, !dbg !5910
  store i8 0, i8* %partition_setting_completed167, align 8, !dbg !5911
  br label %if.end168

if.end168:                                        ; preds = %if.else, %if.then164
  %135 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5912
  %136 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5913
  call void @mmc_manage_enhanced_area(%struct.mmc_card* %135, i8* %136) #5, !dbg !5914
  %137 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5915
  %138 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5916
  call void @mmc_manage_gp_partitions(%struct.mmc_card* %137, i8* %138) #5, !dbg !5917
  %139 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5918
  %arrayidx169 = getelementptr i8, i8* %139, i64 229, !dbg !5918
  %140 = load i8, i8* %arrayidx169, align 1, !dbg !5918
  %conv170 = zext i8 %140 to i32, !dbg !5918
  %141 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5919
  %ext_csd171 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %141, i32 0, i32 21, !dbg !5920
  %sec_trim_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd171, i32 0, i32 22, !dbg !5921
  store i32 %conv170, i32* %sec_trim_mult, align 4, !dbg !5922
  %142 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5923
  %arrayidx172 = getelementptr i8, i8* %142, i64 230, !dbg !5923
  %143 = load i8, i8* %arrayidx172, align 1, !dbg !5923
  %conv173 = zext i8 %143 to i32, !dbg !5923
  %144 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5924
  %ext_csd174 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %144, i32 0, i32 21, !dbg !5925
  %sec_erase_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd174, i32 0, i32 23, !dbg !5926
  store i32 %conv173, i32* %sec_erase_mult, align 8, !dbg !5927
  %145 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5928
  %arrayidx175 = getelementptr i8, i8* %145, i64 231, !dbg !5928
  %146 = load i8, i8* %arrayidx175, align 1, !dbg !5928
  %147 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5929
  %ext_csd176 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %147, i32 0, i32 21, !dbg !5930
  %sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd176, i32 0, i32 2, !dbg !5931
  store i8 %146, i8* %sec_feature_support, align 2, !dbg !5932
  %148 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5933
  %arrayidx177 = getelementptr i8, i8* %148, i64 232, !dbg !5933
  %149 = load i8, i8* %arrayidx177, align 1, !dbg !5933
  %conv178 = zext i8 %149 to i32, !dbg !5933
  %mul179 = mul i32 300, %conv178, !dbg !5934
  %150 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5935
  %ext_csd180 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %150, i32 0, i32 21, !dbg !5936
  %trim_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd180, i32 0, i32 24, !dbg !5937
  store i32 %mul179, i32* %trim_timeout, align 4, !dbg !5938
  %151 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5939
  %arrayidx181 = getelementptr i8, i8* %151, i64 173, !dbg !5939
  %152 = load i8, i8* %arrayidx181, align 1, !dbg !5939
  %conv182 = zext i8 %152 to i32, !dbg !5939
  %153 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5940
  %ext_csd183 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %153, i32 0, i32 21, !dbg !5941
  %boot_ro_lock = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd183, i32 0, i32 37, !dbg !5942
  store i32 %conv182, i32* %boot_ro_lock, align 4, !dbg !5943
  %154 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5944
  %ext_csd184 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %154, i32 0, i32 21, !dbg !5945
  %boot_ro_lockable = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd184, i32 0, i32 38, !dbg !5946
  store i8 1, i8* %boot_ro_lockable, align 8, !dbg !5947
  %155 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5948
  %arrayidx185 = getelementptr i8, i8* %155, i64 200, !dbg !5948
  %156 = load i8, i8* %arrayidx185, align 1, !dbg !5948
  %157 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5949
  %ext_csd186 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %157, i32 0, i32 21, !dbg !5950
  %raw_pwr_cl_52_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd186, i32 0, i32 53, !dbg !5951
  store i8 %156, i8* %raw_pwr_cl_52_195, align 1, !dbg !5952
  %158 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5953
  %arrayidx187 = getelementptr i8, i8* %158, i64 201, !dbg !5953
  %159 = load i8, i8* %arrayidx187, align 1, !dbg !5953
  %160 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5954
  %ext_csd188 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %160, i32 0, i32 21, !dbg !5955
  %raw_pwr_cl_26_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd188, i32 0, i32 54, !dbg !5956
  store i8 %159, i8* %raw_pwr_cl_26_195, align 2, !dbg !5957
  %161 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5958
  %arrayidx189 = getelementptr i8, i8* %161, i64 202, !dbg !5958
  %162 = load i8, i8* %arrayidx189, align 1, !dbg !5958
  %163 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5959
  %ext_csd190 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %163, i32 0, i32 21, !dbg !5960
  %raw_pwr_cl_52_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd190, i32 0, i32 55, !dbg !5961
  store i8 %162, i8* %raw_pwr_cl_52_360, align 1, !dbg !5962
  %164 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5963
  %arrayidx191 = getelementptr i8, i8* %164, i64 203, !dbg !5963
  %165 = load i8, i8* %arrayidx191, align 1, !dbg !5963
  %166 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5964
  %ext_csd192 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %166, i32 0, i32 21, !dbg !5965
  %raw_pwr_cl_26_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd192, i32 0, i32 56, !dbg !5966
  store i8 %165, i8* %raw_pwr_cl_26_360, align 4, !dbg !5967
  %167 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5968
  %arrayidx193 = getelementptr i8, i8* %167, i64 236, !dbg !5968
  %168 = load i8, i8* %arrayidx193, align 1, !dbg !5968
  %169 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5969
  %ext_csd194 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %169, i32 0, i32 21, !dbg !5970
  %raw_pwr_cl_200_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd194, i32 0, i32 65, !dbg !5971
  store i8 %168, i8* %raw_pwr_cl_200_195, align 1, !dbg !5972
  %170 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5973
  %arrayidx195 = getelementptr i8, i8* %170, i64 237, !dbg !5973
  %171 = load i8, i8* %arrayidx195, align 1, !dbg !5973
  %172 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5974
  %ext_csd196 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %172, i32 0, i32 21, !dbg !5975
  %raw_pwr_cl_200_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd196, i32 0, i32 66, !dbg !5976
  store i8 %171, i8* %raw_pwr_cl_200_360, align 2, !dbg !5977
  %173 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5978
  %arrayidx197 = getelementptr i8, i8* %173, i64 238, !dbg !5978
  %174 = load i8, i8* %arrayidx197, align 1, !dbg !5978
  %175 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5979
  %ext_csd198 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %175, i32 0, i32 21, !dbg !5980
  %raw_pwr_cl_ddr_52_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd198, i32 0, i32 67, !dbg !5981
  store i8 %174, i8* %raw_pwr_cl_ddr_52_195, align 1, !dbg !5982
  %176 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5983
  %arrayidx199 = getelementptr i8, i8* %176, i64 239, !dbg !5983
  %177 = load i8, i8* %arrayidx199, align 1, !dbg !5983
  %178 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5984
  %ext_csd200 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %178, i32 0, i32 21, !dbg !5985
  %raw_pwr_cl_ddr_52_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd200, i32 0, i32 68, !dbg !5986
  store i8 %177, i8* %raw_pwr_cl_ddr_52_360, align 8, !dbg !5987
  %179 = load i8*, i8** %ext_csd.addr, align 8, !dbg !5988
  %arrayidx201 = getelementptr i8, i8* %179, i64 253, !dbg !5988
  %180 = load i8, i8* %arrayidx201, align 1, !dbg !5988
  %181 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5989
  %ext_csd202 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %181, i32 0, i32 21, !dbg !5990
  %raw_pwr_cl_ddr_200_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd202, i32 0, i32 69, !dbg !5991
  store i8 %180, i8* %raw_pwr_cl_ddr_200_360, align 1, !dbg !5992
  br label %if.end203, !dbg !5993

if.end203:                                        ; preds = %if.end168, %if.end140
  %182 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !5994
  %ext_csd204 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %182, i32 0, i32 21, !dbg !5996
  %rev205 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd204, i32 0, i32 0, !dbg !5997
  %183 = load i8, i8* %rev205, align 8, !dbg !5997
  %conv206 = zext i8 %183 to i32, !dbg !5994
  %cmp207 = icmp sge i32 %conv206, 5, !dbg !5998
  br i1 %cmp207, label %if.then209, label %if.end298, !dbg !5999

if.then209:                                       ; preds = %if.end203
  %184 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6000
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %184, i32 0, i32 19, !dbg !6003
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 5, !dbg !6004
  %185 = load i16, i16* %year, align 2, !dbg !6004
  %conv210 = zext i16 %185 to i32, !dbg !6000
  %cmp211 = icmp slt i32 %conv210, 2010, !dbg !6005
  br i1 %cmp211, label %if.then213, label %if.end219, !dbg !6006

if.then213:                                       ; preds = %if.then209
  %186 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6007
  %cid214 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %186, i32 0, i32 19, !dbg !6008
  %year215 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid214, i32 0, i32 5, !dbg !6009
  %187 = load i16, i16* %year215, align 2, !dbg !6010
  %conv216 = zext i16 %187 to i32, !dbg !6010
  %add217 = add i32 %conv216, 16, !dbg !6010
  %conv218 = trunc i32 %add217 to i16, !dbg !6010
  store i16 %conv218, i16* %year215, align 2, !dbg !6010
  br label %if.end219, !dbg !6007

if.end219:                                        ; preds = %if.then213, %if.then209
  %188 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6011
  %arrayidx220 = getelementptr i8, i8* %188, i64 502, !dbg !6011
  %189 = load i8, i8* %arrayidx220, align 1, !dbg !6011
  %conv221 = zext i8 %189 to i32, !dbg !6011
  %and222 = and i32 %conv221, 1, !dbg !6013
  %tobool223 = icmp ne i32 %and222, 0, !dbg !6013
  br i1 %tobool223, label %if.then224, label %if.end251, !dbg !6014

if.then224:                                       ; preds = %if.end219
  %190 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6015
  %ext_csd225 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %190, i32 0, i32 21, !dbg !6017
  %bkops = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd225, i32 0, i32 32, !dbg !6018
  store i8 1, i8* %bkops, align 8, !dbg !6019
  %191 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6020
  %arrayidx226 = getelementptr i8, i8* %191, i64 163, !dbg !6020
  %192 = load i8, i8* %arrayidx226, align 1, !dbg !6020
  %conv227 = zext i8 %192 to i32, !dbg !6020
  %and228 = and i32 %conv227, 1, !dbg !6021
  %tobool229 = icmp ne i32 %and228, 0, !dbg !6022
  %193 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6023
  %ext_csd230 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %193, i32 0, i32 21, !dbg !6024
  %man_bkops_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd230, i32 0, i32 33, !dbg !6025
  %frombool231 = zext i1 %tobool229 to i8, !dbg !6026
  store i8 %frombool231, i8* %man_bkops_en, align 1, !dbg !6026
  %194 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6027
  %arrayidx232 = getelementptr i8, i8* %194, i64 246, !dbg !6027
  %195 = load i8, i8* %arrayidx232, align 1, !dbg !6027
  %196 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6028
  %ext_csd233 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %196, i32 0, i32 21, !dbg !6029
  %raw_bkops_status = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd233, i32 0, i32 70, !dbg !6030
  store i8 %195, i8* %raw_bkops_status, align 2, !dbg !6031
  %197 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6032
  %ext_csd234 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %197, i32 0, i32 21, !dbg !6034
  %man_bkops_en235 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd234, i32 0, i32 33, !dbg !6035
  %198 = load i8, i8* %man_bkops_en235, align 1, !dbg !6035
  %tobool236 = trunc i8 %198 to i1, !dbg !6035
  br i1 %tobool236, label %if.then237, label %if.end238, !dbg !6036

if.then237:                                       ; preds = %if.then224
  store i32 0, i32* %tmp, align 4, !dbg !6037
  %199 = load i32, i32* %tmp, align 4, !dbg !6040
  br label %if.end238, !dbg !6041

if.end238:                                        ; preds = %if.then237, %if.then224
  %200 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6042
  %arrayidx239 = getelementptr i8, i8* %200, i64 163, !dbg !6042
  %201 = load i8, i8* %arrayidx239, align 1, !dbg !6042
  %conv240 = zext i8 %201 to i32, !dbg !6042
  %and241 = and i32 %conv240, 2, !dbg !6043
  %tobool242 = icmp ne i32 %and241, 0, !dbg !6044
  %202 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6045
  %ext_csd243 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %202, i32 0, i32 21, !dbg !6046
  %auto_bkops_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd243, i32 0, i32 34, !dbg !6047
  %frombool244 = zext i1 %tobool242 to i8, !dbg !6048
  store i8 %frombool244, i8* %auto_bkops_en, align 2, !dbg !6048
  %203 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6049
  %ext_csd245 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %203, i32 0, i32 21, !dbg !6051
  %auto_bkops_en246 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd245, i32 0, i32 34, !dbg !6052
  %204 = load i8, i8* %auto_bkops_en246, align 2, !dbg !6052
  %tobool247 = trunc i8 %204 to i1, !dbg !6052
  br i1 %tobool247, label %if.then248, label %if.end250, !dbg !6053

if.then248:                                       ; preds = %if.end238
  store i32 0, i32* %tmp249, align 4, !dbg !6054
  %205 = load i32, i32* %tmp249, align 4, !dbg !6057
  br label %if.end250, !dbg !6058

if.end250:                                        ; preds = %if.then248, %if.end238
  br label %if.end251, !dbg !6059

if.end251:                                        ; preds = %if.end250, %if.end219
  %206 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6060
  %call252 = call i32 @mmc_card_broken_hpi(%struct.mmc_card* %206) #5, !dbg !6062
  %tobool253 = icmp ne i32 %call252, 0, !dbg !6062
  br i1 %tobool253, label %if.end278, label %land.lhs.true254, !dbg !6063

land.lhs.true254:                                 ; preds = %if.end251
  %207 = load i8, i8* %broken_hpi, align 1, !dbg !6064
  %tobool255 = trunc i8 %207 to i1, !dbg !6064
  br i1 %tobool255, label %if.end278, label %land.lhs.true256, !dbg !6065

land.lhs.true256:                                 ; preds = %land.lhs.true254
  %208 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6066
  %arrayidx257 = getelementptr i8, i8* %208, i64 503, !dbg !6066
  %209 = load i8, i8* %arrayidx257, align 1, !dbg !6066
  %conv258 = zext i8 %209 to i32, !dbg !6066
  %and259 = and i32 %conv258, 1, !dbg !6067
  %tobool260 = icmp ne i32 %and259, 0, !dbg !6067
  br i1 %tobool260, label %if.then261, label %if.end278, !dbg !6068

if.then261:                                       ; preds = %land.lhs.true256
  %210 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6069
  %ext_csd262 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %210, i32 0, i32 21, !dbg !6071
  %hpi = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd262, i32 0, i32 30, !dbg !6072
  store i8 1, i8* %hpi, align 1, !dbg !6073
  %211 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6074
  %arrayidx263 = getelementptr i8, i8* %211, i64 503, !dbg !6074
  %212 = load i8, i8* %arrayidx263, align 1, !dbg !6074
  %conv264 = zext i8 %212 to i32, !dbg !6074
  %and265 = and i32 %conv264, 2, !dbg !6076
  %tobool266 = icmp ne i32 %and265, 0, !dbg !6076
  br i1 %tobool266, label %if.then267, label %if.else269, !dbg !6077

if.then267:                                       ; preds = %if.then261
  %213 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6078
  %ext_csd268 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %213, i32 0, i32 21, !dbg !6079
  %hpi_cmd = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd268, i32 0, i32 31, !dbg !6080
  store i32 12, i32* %hpi_cmd, align 4, !dbg !6081
  br label %if.end272, !dbg !6078

if.else269:                                       ; preds = %if.then261
  %214 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6082
  %ext_csd270 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %214, i32 0, i32 21, !dbg !6083
  %hpi_cmd271 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd270, i32 0, i32 31, !dbg !6084
  store i32 13, i32* %hpi_cmd271, align 4, !dbg !6085
  br label %if.end272

if.end272:                                        ; preds = %if.else269, %if.then267
  %215 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6086
  %arrayidx273 = getelementptr i8, i8* %215, i64 198, !dbg !6086
  %216 = load i8, i8* %arrayidx273, align 1, !dbg !6086
  %conv274 = zext i8 %216 to i32, !dbg !6086
  %mul275 = mul i32 %conv274, 10, !dbg !6087
  %conv276 = trunc i32 %mul275 to i8, !dbg !6086
  %217 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6088
  %ext_csd277 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %217, i32 0, i32 21, !dbg !6089
  %out_of_int_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd277, i32 0, i32 52, !dbg !6090
  store i8 %conv276, i8* %out_of_int_time, align 8, !dbg !6091
  br label %if.end278, !dbg !6092

if.end278:                                        ; preds = %if.end272, %land.lhs.true256, %land.lhs.true254, %if.end251
  %218 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6093
  %arrayidx279 = getelementptr i8, i8* %218, i64 166, !dbg !6093
  %219 = load i8, i8* %arrayidx279, align 1, !dbg !6093
  %220 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6094
  %ext_csd280 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %220, i32 0, i32 21, !dbg !6095
  %rel_param = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd280, i32 0, i32 4, !dbg !6096
  store i8 %219, i8* %rel_param, align 4, !dbg !6097
  %221 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6098
  %arrayidx281 = getelementptr i8, i8* %221, i64 162, !dbg !6098
  %222 = load i8, i8* %arrayidx281, align 1, !dbg !6098
  %223 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6099
  %ext_csd282 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %223, i32 0, i32 21, !dbg !6100
  %rst_n_function = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd282, i32 0, i32 8, !dbg !6101
  store i8 %222, i8* %rst_n_function, align 8, !dbg !6102
  %224 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6103
  %arrayidx283 = getelementptr i8, i8* %224, i64 168, !dbg !6103
  %225 = load i8, i8* %arrayidx283, align 1, !dbg !6103
  %226 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6104
  %ext_csd284 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %226, i32 0, i32 21, !dbg !6105
  %raw_rpmb_size_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd284, i32 0, i32 46, !dbg !6106
  store i8 %225, i8* %raw_rpmb_size_mult, align 2, !dbg !6107
  %227 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6108
  %arrayidx285 = getelementptr i8, i8* %227, i64 168, !dbg !6108
  %228 = load i8, i8* %arrayidx285, align 1, !dbg !6108
  %conv286 = zext i8 %228 to i32, !dbg !6108
  %tobool287 = icmp ne i32 %conv286, 0, !dbg !6108
  br i1 %tobool287, label %land.lhs.true288, label %if.end297, !dbg !6110

land.lhs.true288:                                 ; preds = %if.end278
  %229 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6111
  %host289 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %229, i32 0, i32 0, !dbg !6112
  %230 = load %struct.mmc_host*, %struct.mmc_host** %host289, align 8, !dbg !6112
  %call290 = call i32 @mmc_host_cmd23(%struct.mmc_host* %230) #5, !dbg !6113
  %tobool291 = icmp ne i32 %call290, 0, !dbg !6113
  br i1 %tobool291, label %if.then292, label %if.end297, !dbg !6114

if.then292:                                       ; preds = %land.lhs.true288
  %231 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6115
  %232 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6117
  %arrayidx293 = getelementptr i8, i8* %232, i64 168, !dbg !6117
  %233 = load i8, i8* %arrayidx293, align 1, !dbg !6117
  %conv294 = zext i8 %233 to i32, !dbg !6117
  %shl295 = shl i32 %conv294, 17, !dbg !6118
  %conv296 = sext i32 %shl295 to i64, !dbg !6117
  call void @mmc_part_add(%struct.mmc_card* %231, i64 %conv296, i32 3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i32 0, i1 zeroext false, i32 8) #5, !dbg !6119
  br label %if.end297, !dbg !6120

if.end297:                                        ; preds = %if.then292, %land.lhs.true288, %if.end278
  br label %if.end298, !dbg !6121

if.end298:                                        ; preds = %if.end297, %if.end203
  %234 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6122
  %arrayidx299 = getelementptr i8, i8* %234, i64 181, !dbg !6122
  %235 = load i8, i8* %arrayidx299, align 1, !dbg !6122
  %236 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6123
  %ext_csd300 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %236, i32 0, i32 21, !dbg !6124
  %raw_erased_mem_count = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd300, i32 0, i32 47, !dbg !6125
  store i8 %235, i8* %raw_erased_mem_count, align 1, !dbg !6126
  %237 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6127
  %arrayidx301 = getelementptr i8, i8* %237, i64 181, !dbg !6127
  %238 = load i8, i8* %arrayidx301, align 1, !dbg !6127
  %tobool302 = icmp ne i8 %238, 0, !dbg !6127
  br i1 %tobool302, label %if.then303, label %if.else304, !dbg !6129

if.then303:                                       ; preds = %if.end298
  %239 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6130
  %erased_byte = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %239, i32 0, i32 14, !dbg !6131
  store i8 -1, i8* %erased_byte, align 8, !dbg !6132
  br label %if.end306, !dbg !6130

if.else304:                                       ; preds = %if.end298
  %240 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6133
  %erased_byte305 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %240, i32 0, i32 14, !dbg !6134
  store i8 0, i8* %erased_byte305, align 8, !dbg !6135
  br label %if.end306

if.end306:                                        ; preds = %if.else304, %if.then303
  %241 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6136
  %ext_csd307 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %241, i32 0, i32 21, !dbg !6137
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd307, i32 0, i32 14, !dbg !6138
  store i32 500, i32* %generic_cmd6_time, align 4, !dbg !6139
  %242 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6140
  %ext_csd308 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %242, i32 0, i32 21, !dbg !6142
  %rev309 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd308, i32 0, i32 0, !dbg !6143
  %243 = load i8, i8* %rev309, align 8, !dbg !6143
  %conv310 = zext i8 %243 to i32, !dbg !6140
  %cmp311 = icmp sge i32 %conv310, 6, !dbg !6144
  br i1 %cmp311, label %if.then313, label %if.else378, !dbg !6145

if.then313:                                       ; preds = %if.end306
  %244 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6146
  %ext_csd314 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %244, i32 0, i32 21, !dbg !6148
  %feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd314, i32 0, i32 75, !dbg !6149
  %245 = load i32, i32* %feature_support, align 4, !dbg !6150
  %conv315 = zext i32 %245 to i64, !dbg !6150
  %or316 = or i64 %conv315, 1, !dbg !6150
  %conv317 = trunc i64 %or316 to i32, !dbg !6150
  store i32 %conv317, i32* %feature_support, align 4, !dbg !6150
  %246 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6151
  %arrayidx318 = getelementptr i8, i8* %246, i64 248, !dbg !6151
  %247 = load i8, i8* %arrayidx318, align 1, !dbg !6151
  %conv319 = zext i8 %247 to i32, !dbg !6151
  %mul320 = mul i32 10, %conv319, !dbg !6152
  %248 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6153
  %ext_csd321 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %248, i32 0, i32 21, !dbg !6154
  %generic_cmd6_time322 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd321, i32 0, i32 14, !dbg !6155
  store i32 %mul320, i32* %generic_cmd6_time322, align 4, !dbg !6156
  %249 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6157
  %arrayidx323 = getelementptr i8, i8* %249, i64 247, !dbg !6157
  %250 = load i8, i8* %arrayidx323, align 1, !dbg !6157
  %conv324 = zext i8 %250 to i32, !dbg !6157
  %mul325 = mul i32 10, %conv324, !dbg !6158
  %251 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6159
  %ext_csd326 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %251, i32 0, i32 21, !dbg !6160
  %power_off_longtime = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd326, i32 0, i32 15, !dbg !6161
  store i32 %mul325, i32* %power_off_longtime, align 8, !dbg !6162
  %252 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6163
  %arrayidx327 = getelementptr i8, i8* %252, i64 249, !dbg !6163
  %253 = load i8, i8* %arrayidx327, align 1, !dbg !6163
  %conv328 = zext i8 %253 to i32, !dbg !6163
  %shl329 = shl i32 %conv328, 0, !dbg !6164
  %254 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6165
  %arrayidx330 = getelementptr i8, i8* %254, i64 250, !dbg !6165
  %255 = load i8, i8* %arrayidx330, align 1, !dbg !6165
  %conv331 = zext i8 %255 to i32, !dbg !6165
  %shl332 = shl i32 %conv331, 8, !dbg !6166
  %or333 = or i32 %shl329, %shl332, !dbg !6167
  %256 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6168
  %arrayidx334 = getelementptr i8, i8* %256, i64 251, !dbg !6168
  %257 = load i8, i8* %arrayidx334, align 1, !dbg !6168
  %conv335 = zext i8 %257 to i32, !dbg !6168
  %shl336 = shl i32 %conv335, 16, !dbg !6169
  %or337 = or i32 %or333, %shl336, !dbg !6170
  %258 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6171
  %arrayidx338 = getelementptr i8, i8* %258, i64 252, !dbg !6171
  %259 = load i8, i8* %arrayidx338, align 1, !dbg !6171
  %conv339 = zext i8 %259 to i32, !dbg !6171
  %shl340 = shl i32 %conv339, 24, !dbg !6172
  %or341 = or i32 %or337, %shl340, !dbg !6173
  %260 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6174
  %ext_csd342 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %260, i32 0, i32 21, !dbg !6175
  %cache_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd342, i32 0, i32 28, !dbg !6176
  store i32 %or341, i32* %cache_size, align 4, !dbg !6177
  %261 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6178
  %arrayidx343 = getelementptr i8, i8* %261, i64 61, !dbg !6178
  %262 = load i8, i8* %arrayidx343, align 1, !dbg !6178
  %conv344 = zext i8 %262 to i32, !dbg !6178
  %cmp345 = icmp eq i32 %conv344, 1, !dbg !6180
  br i1 %cmp345, label %if.then347, label %if.else349, !dbg !6181

if.then347:                                       ; preds = %if.then313
  %263 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6182
  %ext_csd348 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %263, i32 0, i32 21, !dbg !6183
  %data_sector_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd348, i32 0, i32 35, !dbg !6184
  store i32 4096, i32* %data_sector_size, align 4, !dbg !6185
  br label %if.end352, !dbg !6182

if.else349:                                       ; preds = %if.then313
  %264 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6186
  %ext_csd350 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %264, i32 0, i32 21, !dbg !6187
  %data_sector_size351 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd350, i32 0, i32 35, !dbg !6188
  store i32 512, i32* %data_sector_size351, align 4, !dbg !6189
  br label %if.end352

if.end352:                                        ; preds = %if.else349, %if.then347
  %265 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6190
  %arrayidx353 = getelementptr i8, i8* %265, i64 499, !dbg !6190
  %266 = load i8, i8* %arrayidx353, align 1, !dbg !6190
  %conv354 = zext i8 %266 to i32, !dbg !6190
  %and355 = and i32 %conv354, 1, !dbg !6192
  %tobool356 = icmp ne i32 %and355, 0, !dbg !6192
  br i1 %tobool356, label %land.lhs.true357, label %if.else370, !dbg !6193

land.lhs.true357:                                 ; preds = %if.end352
  %267 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6194
  %arrayidx358 = getelementptr i8, i8* %267, i64 498, !dbg !6194
  %268 = load i8, i8* %arrayidx358, align 1, !dbg !6194
  %conv359 = zext i8 %268 to i32, !dbg !6194
  %cmp360 = icmp sle i32 %conv359, 8, !dbg !6195
  br i1 %cmp360, label %if.then362, label %if.else370, !dbg !6196

if.then362:                                       ; preds = %land.lhs.true357
  %269 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6197
  %arrayidx363 = getelementptr i8, i8* %269, i64 498, !dbg !6197
  %270 = load i8, i8* %arrayidx363, align 1, !dbg !6197
  %conv364 = zext i8 %270 to i32, !dbg !6197
  %shl365 = shl i32 1, %conv364, !dbg !6199
  %271 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6200
  %ext_csd366 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %271, i32 0, i32 21, !dbg !6201
  %data_sector_size367 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd366, i32 0, i32 35, !dbg !6202
  %272 = load i32, i32* %data_sector_size367, align 4, !dbg !6202
  %mul368 = mul i32 %shl365, %272, !dbg !6203
  %273 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6204
  %ext_csd369 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %273, i32 0, i32 21, !dbg !6205
  %data_tag_unit_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd369, i32 0, i32 36, !dbg !6206
  store i32 %mul368, i32* %data_tag_unit_size, align 8, !dbg !6207
  br label %if.end373, !dbg !6208

if.else370:                                       ; preds = %land.lhs.true357, %if.end352
  %274 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6209
  %ext_csd371 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %274, i32 0, i32 21, !dbg !6211
  %data_tag_unit_size372 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd371, i32 0, i32 36, !dbg !6212
  store i32 0, i32* %data_tag_unit_size372, align 8, !dbg !6213
  br label %if.end373

if.end373:                                        ; preds = %if.else370, %if.then362
  %275 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6214
  %arrayidx374 = getelementptr i8, i8* %275, i64 500, !dbg !6214
  %276 = load i8, i8* %arrayidx374, align 1, !dbg !6214
  %277 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6215
  %ext_csd375 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %277, i32 0, i32 21, !dbg !6216
  %max_packed_writes = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd375, i32 0, i32 9, !dbg !6217
  store i8 %276, i8* %max_packed_writes, align 1, !dbg !6218
  %278 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6219
  %arrayidx376 = getelementptr i8, i8* %278, i64 501, !dbg !6219
  %279 = load i8, i8* %arrayidx376, align 1, !dbg !6219
  %280 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6220
  %ext_csd377 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %280, i32 0, i32 21, !dbg !6221
  %max_packed_reads = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd377, i32 0, i32 10, !dbg !6222
  store i8 %279, i8* %max_packed_reads, align 2, !dbg !6223
  br label %if.end381, !dbg !6224

if.else378:                                       ; preds = %if.end306
  %281 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6225
  %ext_csd379 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %281, i32 0, i32 21, !dbg !6227
  %data_sector_size380 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd379, i32 0, i32 35, !dbg !6228
  store i32 512, i32* %data_sector_size380, align 4, !dbg !6229
  br label %if.end381

if.end381:                                        ; preds = %if.else378, %if.end373
  %282 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6230
  %ext_csd382 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %282, i32 0, i32 21, !dbg !6232
  %rev383 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd382, i32 0, i32 0, !dbg !6233
  %283 = load i8, i8* %rev383, align 8, !dbg !6233
  %conv384 = zext i8 %283 to i32, !dbg !6230
  %cmp385 = icmp sge i32 %conv384, 7, !dbg !6234
  br i1 %cmp385, label %if.then387, label %if.end406, !dbg !6235

if.then387:                                       ; preds = %if.end381
  %284 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6236
  %ext_csd388 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %284, i32 0, i32 21, !dbg !6238
  %fwrev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd388, i32 0, i32 43, !dbg !6239
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %fwrev, i64 0, i64 0, !dbg !6240
  %285 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6241
  %arrayidx389 = getelementptr i8, i8* %285, i64 254, !dbg !6241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %arrayidx389, i64 8, i1 false), !dbg !6240
  %286 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6242
  %arrayidx390 = getelementptr i8, i8* %286, i64 493, !dbg !6242
  %287 = load i8, i8* %arrayidx390, align 1, !dbg !6242
  %conv391 = zext i8 %287 to i32, !dbg !6242
  %and392 = and i32 %conv391, 1, !dbg !6243
  %tobool393 = icmp ne i32 %and392, 0, !dbg !6243
  br i1 %tobool393, label %land.rhs, label %land.end, !dbg !6244

land.rhs:                                         ; preds = %if.then387
  %288 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6245
  %arrayidx394 = getelementptr i8, i8* %288, i64 169, !dbg !6245
  %289 = load i8, i8* %arrayidx394, align 1, !dbg !6245
  %conv395 = zext i8 %289 to i32, !dbg !6245
  %and396 = and i32 %conv395, 1, !dbg !6246
  %tobool397 = icmp ne i32 %and396, 0, !dbg !6247
  %lnot = xor i1 %tobool397, true, !dbg !6247
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then387
  %290 = phi i1 [ false, %if.then387 ], [ %lnot, %land.rhs ], !dbg !6248
  %291 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6249
  %ext_csd398 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %291, i32 0, i32 21, !dbg !6250
  %ffu_capable = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd398, i32 0, i32 39, !dbg !6251
  %frombool399 = zext i1 %290 to i8, !dbg !6252
  store i8 %frombool399, i8* %ffu_capable, align 1, !dbg !6252
  %292 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6253
  %arrayidx400 = getelementptr i8, i8* %292, i64 267, !dbg !6253
  %293 = load i8, i8* %arrayidx400, align 1, !dbg !6253
  %294 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6254
  %ext_csd401 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %294, i32 0, i32 21, !dbg !6255
  %pre_eol_info = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd401, i32 0, i32 72, !dbg !6256
  store i8 %293, i8* %pre_eol_info, align 1, !dbg !6257
  %295 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6258
  %arrayidx402 = getelementptr i8, i8* %295, i64 268, !dbg !6258
  %296 = load i8, i8* %arrayidx402, align 1, !dbg !6258
  %297 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6259
  %ext_csd403 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %297, i32 0, i32 21, !dbg !6260
  %device_life_time_est_typ_a = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd403, i32 0, i32 73, !dbg !6261
  store i8 %296, i8* %device_life_time_est_typ_a, align 8, !dbg !6262
  %298 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6263
  %arrayidx404 = getelementptr i8, i8* %298, i64 269, !dbg !6263
  %299 = load i8, i8* %arrayidx404, align 1, !dbg !6263
  %300 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6264
  %ext_csd405 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %300, i32 0, i32 21, !dbg !6265
  %device_life_time_est_typ_b = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd405, i32 0, i32 74, !dbg !6266
  store i8 %299, i8* %device_life_time_est_typ_b, align 1, !dbg !6267
  br label %if.end406, !dbg !6268

if.end406:                                        ; preds = %land.end, %if.end381
  %301 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6269
  %ext_csd407 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %301, i32 0, i32 21, !dbg !6271
  %rev408 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd407, i32 0, i32 0, !dbg !6272
  %302 = load i8, i8* %rev408, align 8, !dbg !6272
  %conv409 = zext i8 %302 to i32, !dbg !6269
  %cmp410 = icmp sge i32 %conv409, 8, !dbg !6273
  br i1 %cmp410, label %if.then412, label %if.end448, !dbg !6274

if.then412:                                       ; preds = %if.end406
  %303 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6275
  %arrayidx413 = getelementptr i8, i8* %303, i64 308, !dbg !6275
  %304 = load i8, i8* %arrayidx413, align 1, !dbg !6275
  %conv414 = zext i8 %304 to i64, !dbg !6275
  %and415 = and i64 %conv414, 1, !dbg !6277
  %tobool416 = icmp ne i64 %and415, 0, !dbg !6275
  %305 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6278
  %ext_csd417 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %305, i32 0, i32 21, !dbg !6279
  %cmdq_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd417, i32 0, i32 41, !dbg !6280
  %frombool418 = zext i1 %tobool416 to i8, !dbg !6281
  store i8 %frombool418, i8* %cmdq_support, align 1, !dbg !6281
  %306 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6282
  %arrayidx419 = getelementptr i8, i8* %306, i64 307, !dbg !6282
  %307 = load i8, i8* %arrayidx419, align 1, !dbg !6282
  %conv420 = zext i8 %307 to i64, !dbg !6282
  %and421 = and i64 %conv420, 31, !dbg !6283
  %add422 = add i64 %and421, 1, !dbg !6284
  %conv423 = trunc i64 %add422 to i32, !dbg !6285
  %308 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6286
  %ext_csd424 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %308, i32 0, i32 21, !dbg !6287
  %cmdq_depth = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd424, i32 0, i32 42, !dbg !6288
  store i32 %conv423, i32* %cmdq_depth, align 4, !dbg !6289
  %309 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6290
  %ext_csd425 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %309, i32 0, i32 21, !dbg !6292
  %cmdq_depth426 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd425, i32 0, i32 42, !dbg !6293
  %310 = load i32, i32* %cmdq_depth426, align 4, !dbg !6293
  %cmp427 = icmp ule i32 %310, 2, !dbg !6294
  br i1 %cmp427, label %if.then429, label %if.end434, !dbg !6295

if.then429:                                       ; preds = %if.then412
  %311 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6296
  %ext_csd430 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %311, i32 0, i32 21, !dbg !6298
  %cmdq_support431 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd430, i32 0, i32 41, !dbg !6299
  store i8 0, i8* %cmdq_support431, align 1, !dbg !6300
  %312 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6301
  %ext_csd432 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %312, i32 0, i32 21, !dbg !6302
  %cmdq_depth433 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd432, i32 0, i32 42, !dbg !6303
  store i32 0, i32* %cmdq_depth433, align 4, !dbg !6304
  br label %if.end434, !dbg !6305

if.end434:                                        ; preds = %if.then429, %if.then412
  %313 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6306
  %ext_csd435 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %313, i32 0, i32 21, !dbg !6308
  %cmdq_support436 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd435, i32 0, i32 41, !dbg !6309
  %314 = load i8, i8* %cmdq_support436, align 1, !dbg !6309
  %tobool437 = trunc i8 %314 to i1, !dbg !6309
  br i1 %tobool437, label %if.then438, label %if.end440, !dbg !6310

if.then438:                                       ; preds = %if.end434
  store i32 0, i32* %tmp439, align 4, !dbg !6311
  %315 = load i32, i32* %tmp439, align 4, !dbg !6315
  br label %if.end440, !dbg !6316

if.end440:                                        ; preds = %if.then438, %if.end434
  %316 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6317
  %ext_csd441 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %316, i32 0, i32 21, !dbg !6318
  %rel_param442 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd441, i32 0, i32 4, !dbg !6319
  %317 = load i8, i8* %rel_param442, align 4, !dbg !6319
  %conv443 = zext i8 %317 to i32, !dbg !6317
  %and444 = and i32 %conv443, 16, !dbg !6320
  %tobool445 = icmp ne i32 %and444, 0, !dbg !6321
  %318 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6322
  %ext_csd446 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %318, i32 0, i32 21, !dbg !6323
  %enhanced_rpmb_supported = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd446, i32 0, i32 5, !dbg !6324
  %frombool447 = zext i1 %tobool445 to i8, !dbg !6325
  store i8 %frombool447, i8* %enhanced_rpmb_supported, align 1, !dbg !6325
  br label %if.end448, !dbg !6326

if.end448:                                        ; preds = %if.end440, %if.end406
  br label %out, !dbg !6327

out:                                              ; preds = %if.end448, %if.then8
  call void @llvm.dbg.label(metadata !6328), !dbg !6329
  %319 = load i32, i32* %err, align 4, !dbg !6330
  ret i32 %319, !dbg !6331
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.device_node* @mmc_of_find_child_device(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @of_device_is_compatible(%struct.device_node*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @of_property_read_bool(%struct.device_node* %np, i8* %propname) #0 !dbg !6332 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %prop = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !6341, metadata !DIExpression()), !dbg !6342
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6343
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !6344
  %call = call %struct.property* @of_find_property(%struct.device_node* %0, i8* %1, i32* null) #5, !dbg !6345
  store %struct.property* %call, %struct.property** %prop, align 8, !dbg !6342
  %2 = load %struct.property*, %struct.property** %prop, align 8, !dbg !6346
  %tobool = icmp ne %struct.property* %2, null, !dbg !6346
  %3 = zext i1 %tobool to i64, !dbg !6346
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !6346
  %tobool1 = icmp ne i32 %cond, 0, !dbg !6346
  ret i1 %tobool1, !dbg !6347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !6348 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6351, metadata !DIExpression()), !dbg !6352
  ret void, !dbg !6353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_fixup_device(%struct.mmc_card* %card, %struct.mmc_fixup* %table) #0 !dbg !6354 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %table.addr = alloca %struct.mmc_fixup*, align 8
  %f = alloca %struct.mmc_fixup*, align 8
  %rev = alloca i64, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6358, metadata !DIExpression()), !dbg !6359
  store %struct.mmc_fixup* %table, %struct.mmc_fixup** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_fixup** %table.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.declare(metadata %struct.mmc_fixup** %f, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata i64* %rev, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6366
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 19, !dbg !6366
  %hwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 6, !dbg !6366
  %1 = load i8, i8* %hwrev, align 4, !dbg !6366
  %conv = zext i8 %1 to i64, !dbg !6366
  %shl = shl i64 %conv, 40, !dbg !6366
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6366
  %cid1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 19, !dbg !6366
  %fwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid1, i32 0, i32 7, !dbg !6366
  %3 = load i8, i8* %fwrev, align 1, !dbg !6366
  %conv2 = zext i8 %3 to i64, !dbg !6366
  %shl3 = shl i64 %conv2, 32, !dbg !6366
  %or = or i64 %shl, %shl3, !dbg !6366
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6366
  %cid4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 19, !dbg !6366
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid4, i32 0, i32 5, !dbg !6366
  %5 = load i16, i16* %year, align 2, !dbg !6366
  %conv5 = zext i16 %5 to i64, !dbg !6366
  %shl6 = shl i64 %conv5, 16, !dbg !6366
  %or7 = or i64 %or, %shl6, !dbg !6366
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6366
  %cid8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !6366
  %month = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid8, i32 0, i32 8, !dbg !6366
  %7 = load i8, i8* %month, align 2, !dbg !6366
  %conv9 = zext i8 %7 to i64, !dbg !6366
  %or10 = or i64 %or7, %conv9, !dbg !6366
  store i64 %or10, i64* %rev, align 8, !dbg !6365
  %8 = load %struct.mmc_fixup*, %struct.mmc_fixup** %table.addr, align 8, !dbg !6367
  store %struct.mmc_fixup* %8, %struct.mmc_fixup** %f, align 8, !dbg !6369
  br label %for.cond, !dbg !6370

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6371
  %vendor_fixup = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %9, i32 0, i32 8, !dbg !6373
  %10 = load void (%struct.mmc_card*, i32)*, void (%struct.mmc_card*, i32)** %vendor_fixup, align 8, !dbg !6373
  %tobool = icmp ne void (%struct.mmc_card*, i32)* %10, null, !dbg !6374
  br i1 %tobool, label %for.body, label %for.end, !dbg !6374

for.body:                                         ; preds = %for.cond
  %11 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6375
  %manfid = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %11, i32 0, i32 3, !dbg !6378
  %12 = load i32, i32* %manfid, align 8, !dbg !6378
  %cmp = icmp eq i32 %12, -1, !dbg !6379
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6380

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6381
  %manfid12 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %13, i32 0, i32 3, !dbg !6382
  %14 = load i32, i32* %manfid12, align 8, !dbg !6382
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6383
  %cid13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 19, !dbg !6384
  %manfid14 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid13, i32 0, i32 0, !dbg !6385
  %16 = load i32, i32* %manfid14, align 4, !dbg !6385
  %cmp15 = icmp eq i32 %14, %16, !dbg !6386
  br i1 %cmp15, label %land.lhs.true, label %if.end, !dbg !6387

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %17 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6388
  %oemid = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %17, i32 0, i32 4, !dbg !6389
  %18 = load i16, i16* %oemid, align 4, !dbg !6389
  %conv17 = zext i16 %18 to i32, !dbg !6388
  %cmp18 = icmp eq i32 %conv17, 65535, !dbg !6390
  br i1 %cmp18, label %land.lhs.true28, label %lor.lhs.false20, !dbg !6391

lor.lhs.false20:                                  ; preds = %land.lhs.true
  %19 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6392
  %oemid21 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %19, i32 0, i32 4, !dbg !6393
  %20 = load i16, i16* %oemid21, align 4, !dbg !6393
  %conv22 = zext i16 %20 to i32, !dbg !6392
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6394
  %cid23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 19, !dbg !6395
  %oemid24 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid23, i32 0, i32 4, !dbg !6396
  %22 = load i16, i16* %oemid24, align 4, !dbg !6396
  %conv25 = zext i16 %22 to i32, !dbg !6394
  %cmp26 = icmp eq i32 %conv22, %conv25, !dbg !6397
  br i1 %cmp26, label %land.lhs.true28, label %if.end, !dbg !6398

land.lhs.true28:                                  ; preds = %lor.lhs.false20, %land.lhs.true
  %23 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6399
  %name = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %23, i32 0, i32 0, !dbg !6400
  %24 = load i8*, i8** %name, align 8, !dbg !6400
  %cmp29 = icmp eq i8* %24, null, !dbg !6401
  br i1 %cmp29, label %land.lhs.true35, label %lor.lhs.false31, !dbg !6402

lor.lhs.false31:                                  ; preds = %land.lhs.true28
  %25 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6403
  %name32 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %25, i32 0, i32 0, !dbg !6404
  %26 = load i8*, i8** %name32, align 8, !dbg !6404
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6405
  %cid33 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %27, i32 0, i32 19, !dbg !6406
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid33, i32 0, i32 1, !dbg !6407
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !6405
  %call = call i32 @strncmp(i8* %26, i8* %arraydecay, i64 8) #5, !dbg !6408
  %tobool34 = icmp ne i32 %call, 0, !dbg !6408
  br i1 %tobool34, label %if.end, label %land.lhs.true35, !dbg !6409

land.lhs.true35:                                  ; preds = %lor.lhs.false31, %land.lhs.true28
  %28 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6410
  %cis_vendor = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %28, i32 0, i32 5, !dbg !6411
  %29 = load i16, i16* %cis_vendor, align 2, !dbg !6411
  %conv36 = zext i16 %29 to i32, !dbg !6410
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6412
  %cis = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %30, i32 0, i32 28, !dbg !6413
  %vendor = getelementptr inbounds %struct.sdio_cis, %struct.sdio_cis* %cis, i32 0, i32 0, !dbg !6414
  %31 = load i16, i16* %vendor, align 4, !dbg !6414
  %conv37 = zext i16 %31 to i32, !dbg !6412
  %cmp38 = icmp eq i32 %conv36, %conv37, !dbg !6415
  br i1 %cmp38, label %land.lhs.true45, label %lor.lhs.false40, !dbg !6416

lor.lhs.false40:                                  ; preds = %land.lhs.true35
  %32 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6417
  %cis_vendor41 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %32, i32 0, i32 5, !dbg !6418
  %33 = load i16, i16* %cis_vendor41, align 2, !dbg !6418
  %conv42 = zext i16 %33 to i32, !dbg !6417
  %cmp43 = icmp eq i32 %conv42, 65535, !dbg !6419
  br i1 %cmp43, label %land.lhs.true45, label %if.end, !dbg !6420

land.lhs.true45:                                  ; preds = %lor.lhs.false40, %land.lhs.true35
  %34 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6421
  %cis_device = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %34, i32 0, i32 6, !dbg !6422
  %35 = load i16, i16* %cis_device, align 8, !dbg !6422
  %conv46 = zext i16 %35 to i32, !dbg !6421
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6423
  %cis47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 28, !dbg !6424
  %device = getelementptr inbounds %struct.sdio_cis, %struct.sdio_cis* %cis47, i32 0, i32 1, !dbg !6425
  %37 = load i16, i16* %device, align 2, !dbg !6425
  %conv48 = zext i16 %37 to i32, !dbg !6423
  %cmp49 = icmp eq i32 %conv46, %conv48, !dbg !6426
  br i1 %cmp49, label %land.lhs.true56, label %lor.lhs.false51, !dbg !6427

lor.lhs.false51:                                  ; preds = %land.lhs.true45
  %38 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6428
  %cis_device52 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %38, i32 0, i32 6, !dbg !6429
  %39 = load i16, i16* %cis_device52, align 8, !dbg !6429
  %conv53 = zext i16 %39 to i32, !dbg !6428
  %cmp54 = icmp eq i32 %conv53, 65535, !dbg !6430
  br i1 %cmp54, label %land.lhs.true56, label %if.end, !dbg !6431

land.lhs.true56:                                  ; preds = %lor.lhs.false51, %land.lhs.true45
  %40 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6432
  %ext_csd_rev = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %40, i32 0, i32 7, !dbg !6433
  %41 = load i32, i32* %ext_csd_rev, align 4, !dbg !6433
  %cmp57 = icmp eq i32 %41, -1, !dbg !6434
  br i1 %cmp57, label %land.lhs.true65, label %lor.lhs.false59, !dbg !6435

lor.lhs.false59:                                  ; preds = %land.lhs.true56
  %42 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6436
  %ext_csd_rev60 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %42, i32 0, i32 7, !dbg !6437
  %43 = load i32, i32* %ext_csd_rev60, align 4, !dbg !6437
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6438
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 21, !dbg !6439
  %rev61 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !6440
  %45 = load i8, i8* %rev61, align 8, !dbg !6440
  %conv62 = zext i8 %45 to i32, !dbg !6438
  %cmp63 = icmp eq i32 %43, %conv62, !dbg !6441
  br i1 %cmp63, label %land.lhs.true65, label %if.end, !dbg !6442

land.lhs.true65:                                  ; preds = %lor.lhs.false59, %land.lhs.true56
  %46 = load i64, i64* %rev, align 8, !dbg !6443
  %47 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6444
  %rev_start = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %47, i32 0, i32 1, !dbg !6445
  %48 = load i64, i64* %rev_start, align 8, !dbg !6445
  %cmp66 = icmp uge i64 %46, %48, !dbg !6446
  br i1 %cmp66, label %land.lhs.true68, label %if.end, !dbg !6447

land.lhs.true68:                                  ; preds = %land.lhs.true65
  %49 = load i64, i64* %rev, align 8, !dbg !6448
  %50 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6449
  %rev_end = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %50, i32 0, i32 2, !dbg !6450
  %51 = load i64, i64* %rev_end, align 8, !dbg !6450
  %cmp69 = icmp ule i64 %49, %51, !dbg !6451
  br i1 %cmp69, label %if.then, label %if.end, !dbg !6452

if.then:                                          ; preds = %land.lhs.true68
  %52 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6453
  %vendor_fixup71 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %52, i32 0, i32 8, !dbg !6455
  %53 = load void (%struct.mmc_card*, i32)*, void (%struct.mmc_card*, i32)** %vendor_fixup71, align 8, !dbg !6455
  %54 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6456
  %55 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6457
  %data = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %55, i32 0, i32 9, !dbg !6458
  %56 = load i32, i32* %data, align 8, !dbg !6458
  call void %53(%struct.mmc_card* %54, i32 %56) #5, !dbg !6453
  br label %if.end, !dbg !6459

if.end:                                           ; preds = %if.then, %land.lhs.true68, %land.lhs.true65, %lor.lhs.false59, %lor.lhs.false51, %lor.lhs.false40, %lor.lhs.false31, %lor.lhs.false20, %lor.lhs.false
  br label %for.inc, !dbg !6460

for.inc:                                          ; preds = %if.end
  %57 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !6461
  %incdec.ptr = getelementptr %struct.mmc_fixup, %struct.mmc_fixup* %57, i32 1, !dbg !6461
  store %struct.mmc_fixup* %incdec.ptr, %struct.mmc_fixup** %f, align 8, !dbg !6461
  br label %for.cond, !dbg !6462, !llvm.loop !6463

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_select_card_type(%struct.mmc_card* %card) #0 !dbg !6466 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %card_type = alloca i8, align 1
  %caps = alloca i32, align 4
  %caps23 = alloca i32, align 4
  %hs_max_dtr = alloca i32, align 4
  %hs200_max_dtr = alloca i32, align 4
  %avail_type = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !6469, metadata !DIExpression()), !dbg !6470
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6471
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !6472
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !6472
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata i8* %card_type, metadata !6473, metadata !DIExpression()), !dbg !6474
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6475
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !6476
  %raw_card_type = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 50, !dbg !6477
  %3 = load i8, i8* %raw_card_type, align 2, !dbg !6477
  store i8 %3, i8* %card_type, align 1, !dbg !6474
  call void @llvm.dbg.declare(metadata i32* %caps, metadata !6478, metadata !DIExpression()), !dbg !6479
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6480
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 17, !dbg !6481
  %5 = load i32, i32* %caps2, align 4, !dbg !6481
  store i32 %5, i32* %caps, align 4, !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %caps23, metadata !6482, metadata !DIExpression()), !dbg !6483
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6484
  %caps24 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 18, !dbg !6485
  %7 = load i32, i32* %caps24, align 8, !dbg !6485
  store i32 %7, i32* %caps23, align 4, !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %hs_max_dtr, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i32 0, i32* %hs_max_dtr, align 4, !dbg !6487
  call void @llvm.dbg.declare(metadata i32* %hs200_max_dtr, metadata !6488, metadata !DIExpression()), !dbg !6489
  store i32 0, i32* %hs200_max_dtr, align 4, !dbg !6489
  call void @llvm.dbg.declare(metadata i32* %avail_type, metadata !6490, metadata !DIExpression()), !dbg !6491
  store i32 0, i32* %avail_type, align 4, !dbg !6491
  %8 = load i32, i32* %caps, align 4, !dbg !6492
  %and = and i32 %8, 2, !dbg !6494
  %tobool = icmp ne i32 %and, 0, !dbg !6494
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6495

land.lhs.true:                                    ; preds = %entry
  %9 = load i8, i8* %card_type, align 1, !dbg !6496
  %conv = zext i8 %9 to i32, !dbg !6496
  %and5 = and i32 %conv, 1, !dbg !6497
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6497
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6498

if.then:                                          ; preds = %land.lhs.true
  store i32 26000000, i32* %hs_max_dtr, align 4, !dbg !6499
  %10 = load i32, i32* %avail_type, align 4, !dbg !6501
  %or = or i32 %10, 1, !dbg !6501
  store i32 %or, i32* %avail_type, align 4, !dbg !6501
  br label %if.end, !dbg !6502

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %11 = load i32, i32* %caps, align 4, !dbg !6503
  %and7 = and i32 %11, 2, !dbg !6505
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6505
  br i1 %tobool8, label %land.lhs.true9, label %if.end15, !dbg !6506

land.lhs.true9:                                   ; preds = %if.end
  %12 = load i8, i8* %card_type, align 1, !dbg !6507
  %conv10 = zext i8 %12 to i32, !dbg !6507
  %and11 = and i32 %conv10, 2, !dbg !6508
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6508
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6509

if.then13:                                        ; preds = %land.lhs.true9
  store i32 52000000, i32* %hs_max_dtr, align 4, !dbg !6510
  %13 = load i32, i32* %avail_type, align 4, !dbg !6512
  %or14 = or i32 %13, 2, !dbg !6512
  store i32 %or14, i32* %avail_type, align 4, !dbg !6512
  br label %if.end15, !dbg !6513

if.end15:                                         ; preds = %if.then13, %land.lhs.true9, %if.end
  %14 = load i32, i32* %caps, align 4, !dbg !6514
  %and16 = and i32 %14, 6144, !dbg !6516
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6516
  br i1 %tobool17, label %land.lhs.true18, label %if.end24, !dbg !6517

land.lhs.true18:                                  ; preds = %if.end15
  %15 = load i8, i8* %card_type, align 1, !dbg !6518
  %conv19 = zext i8 %15 to i32, !dbg !6518
  %and20 = and i32 %conv19, 4, !dbg !6519
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6519
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6520

if.then22:                                        ; preds = %land.lhs.true18
  store i32 52000000, i32* %hs_max_dtr, align 4, !dbg !6521
  %16 = load i32, i32* %avail_type, align 4, !dbg !6523
  %or23 = or i32 %16, 4, !dbg !6523
  store i32 %or23, i32* %avail_type, align 4, !dbg !6523
  br label %if.end24, !dbg !6524

if.end24:                                         ; preds = %if.then22, %land.lhs.true18, %if.end15
  %17 = load i32, i32* %caps, align 4, !dbg !6525
  %and25 = and i32 %17, 8192, !dbg !6527
  %tobool26 = icmp ne i32 %and25, 0, !dbg !6527
  br i1 %tobool26, label %land.lhs.true27, label %if.end33, !dbg !6528

land.lhs.true27:                                  ; preds = %if.end24
  %18 = load i8, i8* %card_type, align 1, !dbg !6529
  %conv28 = zext i8 %18 to i32, !dbg !6529
  %and29 = and i32 %conv28, 8, !dbg !6530
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6530
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !6531

if.then31:                                        ; preds = %land.lhs.true27
  store i32 52000000, i32* %hs_max_dtr, align 4, !dbg !6532
  %19 = load i32, i32* %avail_type, align 4, !dbg !6534
  %or32 = or i32 %19, 8, !dbg !6534
  store i32 %or32, i32* %avail_type, align 4, !dbg !6534
  br label %if.end33, !dbg !6535

if.end33:                                         ; preds = %if.then31, %land.lhs.true27, %if.end24
  %20 = load i32, i32* %caps23, align 4, !dbg !6536
  %and34 = and i32 %20, 32, !dbg !6538
  %tobool35 = icmp ne i32 %and34, 0, !dbg !6538
  br i1 %tobool35, label %land.lhs.true36, label %if.end42, !dbg !6539

land.lhs.true36:                                  ; preds = %if.end33
  %21 = load i8, i8* %card_type, align 1, !dbg !6540
  %conv37 = zext i8 %21 to i32, !dbg !6540
  %and38 = and i32 %conv37, 16, !dbg !6541
  %tobool39 = icmp ne i32 %and38, 0, !dbg !6541
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !6542

if.then40:                                        ; preds = %land.lhs.true36
  store i32 200000000, i32* %hs200_max_dtr, align 4, !dbg !6543
  %22 = load i32, i32* %avail_type, align 4, !dbg !6545
  %or41 = or i32 %22, 16, !dbg !6545
  store i32 %or41, i32* %avail_type, align 4, !dbg !6545
  br label %if.end42, !dbg !6546

if.end42:                                         ; preds = %if.then40, %land.lhs.true36, %if.end33
  %23 = load i32, i32* %caps23, align 4, !dbg !6547
  %and43 = and i32 %23, 64, !dbg !6549
  %tobool44 = icmp ne i32 %and43, 0, !dbg !6549
  br i1 %tobool44, label %land.lhs.true45, label %if.end51, !dbg !6550

land.lhs.true45:                                  ; preds = %if.end42
  %24 = load i8, i8* %card_type, align 1, !dbg !6551
  %conv46 = zext i8 %24 to i32, !dbg !6551
  %and47 = and i32 %conv46, 32, !dbg !6552
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6552
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !6553

if.then49:                                        ; preds = %land.lhs.true45
  store i32 200000000, i32* %hs200_max_dtr, align 4, !dbg !6554
  %25 = load i32, i32* %avail_type, align 4, !dbg !6556
  %or50 = or i32 %25, 32, !dbg !6556
  store i32 %or50, i32* %avail_type, align 4, !dbg !6556
  br label %if.end51, !dbg !6557

if.end51:                                         ; preds = %if.then49, %land.lhs.true45, %if.end42
  %26 = load i32, i32* %caps23, align 4, !dbg !6558
  %and52 = and i32 %26, 32768, !dbg !6560
  %tobool53 = icmp ne i32 %and52, 0, !dbg !6560
  br i1 %tobool53, label %land.lhs.true54, label %if.end60, !dbg !6561

land.lhs.true54:                                  ; preds = %if.end51
  %27 = load i8, i8* %card_type, align 1, !dbg !6562
  %conv55 = zext i8 %27 to i32, !dbg !6562
  %and56 = and i32 %conv55, 64, !dbg !6563
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6563
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !6564

if.then58:                                        ; preds = %land.lhs.true54
  store i32 200000000, i32* %hs200_max_dtr, align 4, !dbg !6565
  %28 = load i32, i32* %avail_type, align 4, !dbg !6567
  %or59 = or i32 %28, 64, !dbg !6567
  store i32 %or59, i32* %avail_type, align 4, !dbg !6567
  br label %if.end60, !dbg !6568

if.end60:                                         ; preds = %if.then58, %land.lhs.true54, %if.end51
  %29 = load i32, i32* %caps23, align 4, !dbg !6569
  %and61 = and i32 %29, 65536, !dbg !6571
  %tobool62 = icmp ne i32 %and61, 0, !dbg !6571
  br i1 %tobool62, label %land.lhs.true63, label %if.end69, !dbg !6572

land.lhs.true63:                                  ; preds = %if.end60
  %30 = load i8, i8* %card_type, align 1, !dbg !6573
  %conv64 = zext i8 %30 to i32, !dbg !6573
  %and65 = and i32 %conv64, 128, !dbg !6574
  %tobool66 = icmp ne i32 %and65, 0, !dbg !6574
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !6575

if.then67:                                        ; preds = %land.lhs.true63
  store i32 200000000, i32* %hs200_max_dtr, align 4, !dbg !6576
  %31 = load i32, i32* %avail_type, align 4, !dbg !6578
  %or68 = or i32 %31, 128, !dbg !6578
  store i32 %or68, i32* %avail_type, align 4, !dbg !6578
  br label %if.end69, !dbg !6579

if.end69:                                         ; preds = %if.then67, %land.lhs.true63, %if.end60
  %32 = load i32, i32* %caps23, align 4, !dbg !6580
  %and70 = and i32 %32, 1048576, !dbg !6582
  %tobool71 = icmp ne i32 %and70, 0, !dbg !6582
  br i1 %tobool71, label %land.lhs.true72, label %if.end81, !dbg !6583

land.lhs.true72:                                  ; preds = %if.end69
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6584
  %ext_csd73 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 21, !dbg !6585
  %strobe_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd73, i32 0, i32 48, !dbg !6586
  %34 = load i8, i8* %strobe_support, align 4, !dbg !6586
  %conv74 = zext i8 %34 to i32, !dbg !6584
  %tobool75 = icmp ne i32 %conv74, 0, !dbg !6584
  br i1 %tobool75, label %land.lhs.true76, label %if.end81, !dbg !6587

land.lhs.true76:                                  ; preds = %land.lhs.true72
  %35 = load i32, i32* %avail_type, align 4, !dbg !6588
  %and77 = and i32 %35, 192, !dbg !6589
  %tobool78 = icmp ne i32 %and77, 0, !dbg !6589
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !6590

if.then79:                                        ; preds = %land.lhs.true76
  %36 = load i32, i32* %avail_type, align 4, !dbg !6591
  %or80 = or i32 %36, 256, !dbg !6591
  store i32 %or80, i32* %avail_type, align 4, !dbg !6591
  br label %if.end81, !dbg !6592

if.end81:                                         ; preds = %if.then79, %land.lhs.true76, %land.lhs.true72, %if.end69
  %37 = load i32, i32* %hs_max_dtr, align 4, !dbg !6593
  %38 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6594
  %ext_csd82 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %38, i32 0, i32 21, !dbg !6595
  %hs_max_dtr83 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd82, i32 0, i32 17, !dbg !6596
  store i32 %37, i32* %hs_max_dtr83, align 8, !dbg !6597
  %39 = load i32, i32* %hs200_max_dtr, align 4, !dbg !6598
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6599
  %ext_csd84 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 21, !dbg !6600
  %hs200_max_dtr85 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd84, i32 0, i32 18, !dbg !6601
  store i32 %39, i32* %hs200_max_dtr85, align 4, !dbg !6602
  %41 = load i32, i32* %avail_type, align 4, !dbg !6603
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6604
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %42, i32 0, i32 37, !dbg !6605
  store i32 %41, i32* %mmc_avail_type, align 4, !dbg !6606
  ret void, !dbg !6607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_boot_partition_access(%struct.mmc_host* %host) #0 !dbg !6608 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6609, metadata !DIExpression()), !dbg !6610
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6611
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 18, !dbg !6612
  %1 = load i32, i32* %caps2, align 8, !dbg !6612
  %and = and i32 %1, 1, !dbg !6613
  %tobool = icmp ne i32 %and, 0, !dbg !6614
  %lnot = xor i1 %tobool, true, !dbg !6614
  %lnot.ext = zext i1 %lnot to i32, !dbg !6614
  ret i32 %lnot.ext, !dbg !6615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_part_add(%struct.mmc_card* %card, i64 %size, i32 %part_cfg, i8* %name, i32 %idx, i1 zeroext %ro, i32 %area_type) #0 !dbg !6616 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %size.addr = alloca i64, align 8
  %part_cfg.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %idx.addr = alloca i32, align 4
  %ro.addr = alloca i8, align 1
  %area_type.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6619, metadata !DIExpression()), !dbg !6620
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6621, metadata !DIExpression()), !dbg !6622
  store i32 %part_cfg, i32* %part_cfg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %part_cfg.addr, metadata !6623, metadata !DIExpression()), !dbg !6624
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6625, metadata !DIExpression()), !dbg !6626
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !6627, metadata !DIExpression()), !dbg !6628
  %frombool = zext i1 %ro to i8
  store i8 %frombool, i8* %ro.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ro.addr, metadata !6629, metadata !DIExpression()), !dbg !6630
  store i32 %area_type, i32* %area_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %area_type.addr, metadata !6631, metadata !DIExpression()), !dbg !6632
  %0 = load i64, i64* %size.addr, align 8, !dbg !6633
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6634
  %part = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 40, !dbg !6635
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6636
  %nr_parts = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 41, !dbg !6637
  %3 = load i32, i32* %nr_parts, align 8, !dbg !6637
  %idxprom = zext i32 %3 to i64, !dbg !6634
  %arrayidx = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part, i64 0, i64 %idxprom, !dbg !6634
  %size1 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx, i32 0, i32 0, !dbg !6638
  store i64 %0, i64* %size1, align 8, !dbg !6639
  %4 = load i32, i32* %part_cfg.addr, align 4, !dbg !6640
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6641
  %part2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 40, !dbg !6642
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6643
  %nr_parts3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 41, !dbg !6644
  %7 = load i32, i32* %nr_parts3, align 8, !dbg !6644
  %idxprom4 = zext i32 %7 to i64, !dbg !6641
  %arrayidx5 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part2, i64 0, i64 %idxprom4, !dbg !6641
  %part_cfg6 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx5, i32 0, i32 1, !dbg !6645
  store i32 %4, i32* %part_cfg6, align 8, !dbg !6646
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6647
  %part7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 40, !dbg !6648
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6649
  %nr_parts8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 41, !dbg !6650
  %10 = load i32, i32* %nr_parts8, align 8, !dbg !6650
  %idxprom9 = zext i32 %10 to i64, !dbg !6647
  %arrayidx10 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part7, i64 0, i64 %idxprom9, !dbg !6647
  %name11 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx10, i32 0, i32 2, !dbg !6651
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %name11, i64 0, i64 0, !dbg !6647
  %11 = load i8*, i8** %name.addr, align 8, !dbg !6652
  %12 = load i32, i32* %idx.addr, align 4, !dbg !6653
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* %11, i32 %12) #5, !dbg !6654
  %13 = load i8, i8* %ro.addr, align 1, !dbg !6655
  %tobool = trunc i8 %13 to i1, !dbg !6655
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6656
  %part12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %14, i32 0, i32 40, !dbg !6657
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6658
  %nr_parts13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 41, !dbg !6659
  %16 = load i32, i32* %nr_parts13, align 8, !dbg !6659
  %idxprom14 = zext i32 %16 to i64, !dbg !6656
  %arrayidx15 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part12, i64 0, i64 %idxprom14, !dbg !6656
  %force_ro = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx15, i32 0, i32 3, !dbg !6660
  %frombool16 = zext i1 %tobool to i8, !dbg !6661
  store i8 %frombool16, i8* %force_ro, align 8, !dbg !6661
  %17 = load i32, i32* %area_type.addr, align 4, !dbg !6662
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6663
  %part17 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 40, !dbg !6664
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6665
  %nr_parts18 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 41, !dbg !6666
  %20 = load i32, i32* %nr_parts18, align 8, !dbg !6666
  %idxprom19 = zext i32 %20 to i64, !dbg !6663
  %arrayidx20 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part17, i64 0, i64 %idxprom19, !dbg !6663
  %area_type21 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx20, i32 0, i32 4, !dbg !6667
  store i32 %17, i32* %area_type21, align 4, !dbg !6668
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6669
  %nr_parts22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 41, !dbg !6670
  %22 = load i32, i32* %nr_parts22, align 8, !dbg !6671
  %inc = add i32 %22, 1, !dbg !6671
  store i32 %inc, i32* %nr_parts22, align 8, !dbg !6671
  ret void, !dbg !6672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_manage_enhanced_area(%struct.mmc_card* %card, i8* %ext_csd) #0 !dbg !6673 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %ext_csd.addr = alloca i8*, align 8
  %hc_erase_grp_sz = alloca i8, align 1
  %hc_wp_grp_sz = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6676, metadata !DIExpression()), !dbg !6677
  store i8* %ext_csd, i8** %ext_csd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ext_csd.addr, metadata !6678, metadata !DIExpression()), !dbg !6679
  call void @llvm.dbg.declare(metadata i8* %hc_erase_grp_sz, metadata !6680, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.declare(metadata i8* %hc_wp_grp_sz, metadata !6682, metadata !DIExpression()), !dbg !6683
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6684
  %ext_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !6685
  %enhanced_area_offset = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd1, i32 0, i32 26, !dbg !6686
  store i64 -22, i64* %enhanced_area_offset, align 8, !dbg !6687
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6688
  %ext_csd2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 21, !dbg !6689
  %enhanced_area_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd2, i32 0, i32 27, !dbg !6690
  store i32 -22, i32* %enhanced_area_size, align 8, !dbg !6691
  %2 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6692
  %arrayidx = getelementptr i8, i8* %2, i64 160, !dbg !6692
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6692
  %conv = zext i8 %3 to i32, !dbg !6692
  %and = and i32 %conv, 2, !dbg !6694
  %tobool = icmp ne i32 %and, 0, !dbg !6694
  br i1 %tobool, label %land.lhs.true, label %if.end57, !dbg !6695

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6696
  %arrayidx3 = getelementptr i8, i8* %4, i64 156, !dbg !6696
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !6696
  %conv4 = zext i8 %5 to i32, !dbg !6696
  %and5 = and i32 %conv4, 1, !dbg !6697
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6697
  br i1 %tobool6, label %if.then, label %if.end57, !dbg !6698

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6699
  %ext_csd7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !6702
  %partition_setting_completed = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd7, i32 0, i32 25, !dbg !6703
  %7 = load i8, i8* %partition_setting_completed, align 8, !dbg !6703
  %tobool8 = trunc i8 %7 to i1, !dbg !6703
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6704

if.then9:                                         ; preds = %if.then
  %8 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6705
  %arrayidx10 = getelementptr i8, i8* %8, i64 224, !dbg !6705
  %9 = load i8, i8* %arrayidx10, align 1, !dbg !6705
  store i8 %9, i8* %hc_erase_grp_sz, align 1, !dbg !6707
  %10 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6708
  %arrayidx11 = getelementptr i8, i8* %10, i64 221, !dbg !6708
  %11 = load i8, i8* %arrayidx11, align 1, !dbg !6708
  store i8 %11, i8* %hc_wp_grp_sz, align 1, !dbg !6709
  %12 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6710
  %arrayidx12 = getelementptr i8, i8* %12, i64 139, !dbg !6710
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !6710
  %conv13 = zext i8 %13 to i64, !dbg !6711
  %shl = shl i64 %conv13, 24, !dbg !6712
  %14 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6713
  %arrayidx14 = getelementptr i8, i8* %14, i64 138, !dbg !6713
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !6713
  %conv15 = zext i8 %15 to i64, !dbg !6714
  %shl16 = shl i64 %conv15, 16, !dbg !6715
  %add = add i64 %shl, %shl16, !dbg !6716
  %16 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6717
  %arrayidx17 = getelementptr i8, i8* %16, i64 137, !dbg !6717
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !6717
  %conv18 = zext i8 %17 to i64, !dbg !6718
  %shl19 = shl i64 %conv18, 8, !dbg !6719
  %add20 = add i64 %add, %shl19, !dbg !6720
  %18 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6721
  %arrayidx21 = getelementptr i8, i8* %18, i64 136, !dbg !6721
  %19 = load i8, i8* %arrayidx21, align 1, !dbg !6721
  %conv22 = zext i8 %19 to i64, !dbg !6722
  %add23 = add i64 %add20, %conv22, !dbg !6723
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6724
  %ext_csd24 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 21, !dbg !6725
  %enhanced_area_offset25 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd24, i32 0, i32 26, !dbg !6726
  store i64 %add23, i64* %enhanced_area_offset25, align 8, !dbg !6727
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6728
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 5, !dbg !6728
  %22 = load i32, i32* %state, align 4, !dbg !6728
  %and26 = and i32 %22, 4, !dbg !6728
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6728
  br i1 %tobool27, label %if.then28, label %if.end, !dbg !6730

if.then28:                                        ; preds = %if.then9
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6731
  %ext_csd29 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 21, !dbg !6732
  %enhanced_area_offset30 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd29, i32 0, i32 26, !dbg !6733
  %24 = load i64, i64* %enhanced_area_offset30, align 8, !dbg !6734
  %shl31 = shl i64 %24, 9, !dbg !6734
  store i64 %shl31, i64* %enhanced_area_offset30, align 8, !dbg !6734
  br label %if.end, !dbg !6731

if.end:                                           ; preds = %if.then28, %if.then9
  %25 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6735
  %arrayidx32 = getelementptr i8, i8* %25, i64 142, !dbg !6735
  %26 = load i8, i8* %arrayidx32, align 1, !dbg !6735
  %conv33 = zext i8 %26 to i32, !dbg !6735
  %shl34 = shl i32 %conv33, 16, !dbg !6736
  %27 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6737
  %arrayidx35 = getelementptr i8, i8* %27, i64 141, !dbg !6737
  %28 = load i8, i8* %arrayidx35, align 1, !dbg !6737
  %conv36 = zext i8 %28 to i32, !dbg !6737
  %shl37 = shl i32 %conv36, 8, !dbg !6738
  %add38 = add i32 %shl34, %shl37, !dbg !6739
  %29 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6740
  %arrayidx39 = getelementptr i8, i8* %29, i64 140, !dbg !6740
  %30 = load i8, i8* %arrayidx39, align 1, !dbg !6740
  %conv40 = zext i8 %30 to i32, !dbg !6740
  %add41 = add i32 %add38, %conv40, !dbg !6741
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6742
  %ext_csd42 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %31, i32 0, i32 21, !dbg !6743
  %enhanced_area_size43 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd42, i32 0, i32 27, !dbg !6744
  store i32 %add41, i32* %enhanced_area_size43, align 8, !dbg !6745
  %32 = load i8, i8* %hc_erase_grp_sz, align 1, !dbg !6746
  %conv44 = zext i8 %32 to i32, !dbg !6746
  %33 = load i8, i8* %hc_wp_grp_sz, align 1, !dbg !6747
  %conv45 = zext i8 %33 to i32, !dbg !6747
  %mul = mul i32 %conv44, %conv45, !dbg !6748
  %conv46 = sext i32 %mul to i64, !dbg !6749
  %34 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6750
  %ext_csd47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %34, i32 0, i32 21, !dbg !6751
  %enhanced_area_size48 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd47, i32 0, i32 27, !dbg !6752
  %35 = load i32, i32* %enhanced_area_size48, align 8, !dbg !6753
  %conv49 = zext i32 %35 to i64, !dbg !6753
  %mul50 = mul i64 %conv49, %conv46, !dbg !6753
  %conv51 = trunc i64 %mul50 to i32, !dbg !6753
  store i32 %conv51, i32* %enhanced_area_size48, align 8, !dbg !6753
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6754
  %ext_csd52 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 21, !dbg !6755
  %enhanced_area_size53 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd52, i32 0, i32 27, !dbg !6756
  %37 = load i32, i32* %enhanced_area_size53, align 8, !dbg !6757
  %shl54 = shl i32 %37, 9, !dbg !6757
  store i32 %shl54, i32* %enhanced_area_size53, align 8, !dbg !6757
  br label %if.end56, !dbg !6758

if.else:                                          ; preds = %if.then
  %38 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6759
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %38, i32 0, i32 0, !dbg !6759
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6759
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %39, i32 0, i32 1, !dbg !6759
  %call = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !6759
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.63, i64 0, i64 0), i8* %call) #6, !dbg !6759
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.end
  br label %if.end57, !dbg !6761

if.end57:                                         ; preds = %if.end56, %land.lhs.true, %entry
  ret void, !dbg !6762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_manage_gp_partitions(%struct.mmc_card* %card, i8* %ext_csd) #0 !dbg !6763 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %ext_csd.addr = alloca i8*, align 8
  %idx = alloca i32, align 4
  %hc_erase_grp_sz = alloca i8, align 1
  %hc_wp_grp_sz = alloca i8, align 1
  %part_size = alloca i64, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6764, metadata !DIExpression()), !dbg !6765
  store i8* %ext_csd, i8** %ext_csd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ext_csd.addr, metadata !6766, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6768, metadata !DIExpression()), !dbg !6769
  call void @llvm.dbg.declare(metadata i8* %hc_erase_grp_sz, metadata !6770, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.declare(metadata i8* %hc_wp_grp_sz, metadata !6772, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.declare(metadata i64* %part_size, metadata !6774, metadata !DIExpression()), !dbg !6775
  %0 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6776
  %arrayidx = getelementptr i8, i8* %0, i64 160, !dbg !6776
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6776
  %conv = zext i8 %1 to i32, !dbg !6776
  %and = and i32 %conv, 1, !dbg !6778
  %tobool = icmp ne i32 %and, 0, !dbg !6778
  br i1 %tobool, label %if.then, label %if.end56, !dbg !6779

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6780
  %arrayidx1 = getelementptr i8, i8* %2, i64 224, !dbg !6780
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !6780
  store i8 %3, i8* %hc_erase_grp_sz, align 1, !dbg !6782
  %4 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6783
  %arrayidx2 = getelementptr i8, i8* %4, i64 221, !dbg !6783
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !6783
  store i8 %5, i8* %hc_wp_grp_sz, align 1, !dbg !6784
  store i32 0, i32* %idx, align 4, !dbg !6785
  br label %for.cond, !dbg !6787

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %idx, align 4, !dbg !6788
  %cmp = icmp slt i32 %6, 4, !dbg !6790
  br i1 %cmp, label %for.body, label %for.end, !dbg !6791

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6792
  %8 = load i32, i32* %idx, align 4, !dbg !6795
  %mul = mul i32 %8, 3, !dbg !6796
  %add = add i32 143, %mul, !dbg !6797
  %idxprom = sext i32 %add to i64, !dbg !6792
  %arrayidx4 = getelementptr i8, i8* %7, i64 %idxprom, !dbg !6792
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !6792
  %tobool5 = icmp ne i8 %9, 0, !dbg !6792
  br i1 %tobool5, label %if.end, label %land.lhs.true, !dbg !6798

land.lhs.true:                                    ; preds = %for.body
  %10 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6799
  %11 = load i32, i32* %idx, align 4, !dbg !6800
  %mul6 = mul i32 %11, 3, !dbg !6801
  %add7 = add i32 143, %mul6, !dbg !6802
  %add8 = add i32 %add7, 1, !dbg !6803
  %idxprom9 = sext i32 %add8 to i64, !dbg !6799
  %arrayidx10 = getelementptr i8, i8* %10, i64 %idxprom9, !dbg !6799
  %12 = load i8, i8* %arrayidx10, align 1, !dbg !6799
  %tobool11 = icmp ne i8 %12, 0, !dbg !6799
  br i1 %tobool11, label %if.end, label %land.lhs.true12, !dbg !6804

land.lhs.true12:                                  ; preds = %land.lhs.true
  %13 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6805
  %14 = load i32, i32* %idx, align 4, !dbg !6806
  %mul13 = mul i32 %14, 3, !dbg !6807
  %add14 = add i32 143, %mul13, !dbg !6808
  %add15 = add i32 %add14, 2, !dbg !6809
  %idxprom16 = sext i32 %add15 to i64, !dbg !6805
  %arrayidx17 = getelementptr i8, i8* %13, i64 %idxprom16, !dbg !6805
  %15 = load i8, i8* %arrayidx17, align 1, !dbg !6805
  %tobool18 = icmp ne i8 %15, 0, !dbg !6805
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !6810

if.then19:                                        ; preds = %land.lhs.true12
  br label %for.inc, !dbg !6811

if.end:                                           ; preds = %land.lhs.true12, %land.lhs.true, %for.body
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6812
  %ext_csd20 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 21, !dbg !6814
  %partition_setting_completed = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd20, i32 0, i32 25, !dbg !6815
  %17 = load i8, i8* %partition_setting_completed, align 8, !dbg !6815
  %tobool21 = trunc i8 %17 to i1, !dbg !6815
  %conv22 = zext i1 %tobool21 to i32, !dbg !6812
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !6816
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !6817

if.then25:                                        ; preds = %if.end
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6818
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 0, !dbg !6818
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6818
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 1, !dbg !6818
  %call = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !6818
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.64, i64 0, i64 0), i8* %call) #6, !dbg !6818
  br label %for.end, !dbg !6820

if.end27:                                         ; preds = %if.end
  %20 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6821
  %21 = load i32, i32* %idx, align 4, !dbg !6822
  %mul28 = mul i32 %21, 3, !dbg !6823
  %add29 = add i32 143, %mul28, !dbg !6824
  %add30 = add i32 %add29, 2, !dbg !6825
  %idxprom31 = sext i32 %add30 to i64, !dbg !6821
  %arrayidx32 = getelementptr i8, i8* %20, i64 %idxprom31, !dbg !6821
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !6821
  %conv33 = zext i8 %22 to i32, !dbg !6821
  %shl = shl i32 %conv33, 16, !dbg !6826
  %23 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6827
  %24 = load i32, i32* %idx, align 4, !dbg !6828
  %mul34 = mul i32 %24, 3, !dbg !6829
  %add35 = add i32 143, %mul34, !dbg !6830
  %add36 = add i32 %add35, 1, !dbg !6831
  %idxprom37 = sext i32 %add36 to i64, !dbg !6827
  %arrayidx38 = getelementptr i8, i8* %23, i64 %idxprom37, !dbg !6827
  %25 = load i8, i8* %arrayidx38, align 1, !dbg !6827
  %conv39 = zext i8 %25 to i32, !dbg !6827
  %shl40 = shl i32 %conv39, 8, !dbg !6832
  %add41 = add i32 %shl, %shl40, !dbg !6833
  %26 = load i8*, i8** %ext_csd.addr, align 8, !dbg !6834
  %27 = load i32, i32* %idx, align 4, !dbg !6835
  %mul42 = mul i32 %27, 3, !dbg !6836
  %add43 = add i32 143, %mul42, !dbg !6837
  %idxprom44 = sext i32 %add43 to i64, !dbg !6834
  %arrayidx45 = getelementptr i8, i8* %26, i64 %idxprom44, !dbg !6834
  %28 = load i8, i8* %arrayidx45, align 1, !dbg !6834
  %conv46 = zext i8 %28 to i32, !dbg !6834
  %add47 = add i32 %add41, %conv46, !dbg !6838
  %conv48 = sext i32 %add47 to i64, !dbg !6839
  store i64 %conv48, i64* %part_size, align 8, !dbg !6840
  %29 = load i8, i8* %hc_erase_grp_sz, align 1, !dbg !6841
  %conv49 = zext i8 %29 to i32, !dbg !6841
  %30 = load i8, i8* %hc_wp_grp_sz, align 1, !dbg !6842
  %conv50 = zext i8 %30 to i32, !dbg !6842
  %mul51 = mul i32 %conv49, %conv50, !dbg !6843
  %conv52 = sext i32 %mul51 to i64, !dbg !6844
  %31 = load i64, i64* %part_size, align 8, !dbg !6845
  %mul53 = mul i64 %31, %conv52, !dbg !6845
  store i64 %mul53, i64* %part_size, align 8, !dbg !6845
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6846
  %33 = load i64, i64* %part_size, align 8, !dbg !6847
  %shl54 = shl i64 %33, 19, !dbg !6848
  %34 = load i32, i32* %idx, align 4, !dbg !6849
  %add55 = add i32 4, %34, !dbg !6850
  %35 = load i32, i32* %idx, align 4, !dbg !6851
  call void @mmc_part_add(%struct.mmc_card* %32, i64 %shl54, i32 %add55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0), i32 %35, i1 zeroext false, i32 4) #5, !dbg !6852
  br label %for.inc, !dbg !6853

for.inc:                                          ; preds = %if.end27, %if.then19
  %36 = load i32, i32* %idx, align 4, !dbg !6854
  %inc = add i32 %36, 1, !dbg !6854
  store i32 %inc, i32* %idx, align 4, !dbg !6854
  br label %for.cond, !dbg !6855, !llvm.loop !6856

for.end:                                          ; preds = %if.then25, %for.cond
  br label %if.end56, !dbg !6858

if.end56:                                         ; preds = %for.end, %entry
  ret void, !dbg !6859
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_card_broken_hpi(%struct.mmc_card* %c) #0 !dbg !6860 {
entry:
  %c.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %c, %struct.mmc_card** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %c.addr, metadata !6861, metadata !DIExpression()), !dbg !6862
  %0 = load %struct.mmc_card*, %struct.mmc_card** %c.addr, align 8, !dbg !6863
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 6, !dbg !6864
  %1 = load i32, i32* %quirks, align 8, !dbg !6864
  %and = and i32 %1, 8192, !dbg !6865
  ret i32 %and, !dbg !6866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_host_cmd23(%struct.mmc_host* %host) #0 !dbg !6867 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6868, metadata !DIExpression()), !dbg !6869
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6870
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !6871
  %1 = load i32, i32* %caps, align 4, !dbg !6871
  %and = and i32 %1, 1073741824, !dbg !6872
  ret i32 %and, !dbg !6873
}

; Function Attrs: noredzone
declare dso_local %struct.property* @of_find_property(%struct.device_node*, i8*, i32*) #2

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_quirk(%struct.mmc_card* %card, i32 %data) #0 !dbg !6874 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %data.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6877, metadata !DIExpression()), !dbg !6878
  %0 = load i32, i32* %data.addr, align 4, !dbg !6879
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6880
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 6, !dbg !6881
  %2 = load i32, i32* %quirks, align 8, !dbg !6882
  %or = or i32 %2, %0, !dbg !6882
  store i32 %or, i32* %quirks, align 8, !dbg !6882
  ret void, !dbg !6883
}

; Function Attrs: noredzone
declare dso_local void @mmc_init_erase(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_hs400es(%struct.mmc_card* %card) #0 !dbg !6884 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !6887, metadata !DIExpression()), !dbg !6888
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6889
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !6890
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !6890
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !6888
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6891, metadata !DIExpression()), !dbg !6892
  store i32 -22, i32* %err, align 4, !dbg !6892
  call void @llvm.dbg.declare(metadata i8* %val, metadata !6893, metadata !DIExpression()), !dbg !6894
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6895
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 17, !dbg !6897
  %3 = load i32, i32* %caps, align 4, !dbg !6897
  %and = and i32 %3, 64, !dbg !6898
  %tobool = icmp ne i32 %and, 0, !dbg !6898
  br i1 %tobool, label %if.end, label %if.then, !dbg !6899

if.then:                                          ; preds = %entry
  store i32 -524, i32* %err, align 4, !dbg !6900
  br label %out_err, !dbg !6902

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6903
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 37, !dbg !6905
  %5 = load i32, i32* %mmc_avail_type, align 4, !dbg !6905
  %and2 = and i32 %5, 128, !dbg !6906
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6906
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6907

if.then4:                                         ; preds = %if.end
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6908
  %call = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %6, i32 2) #5, !dbg !6909
  store i32 %call, i32* %err, align 4, !dbg !6910
  br label %if.end5, !dbg !6911

if.end5:                                          ; preds = %if.then4, %if.end
  %7 = load i32, i32* %err, align 4, !dbg !6912
  %tobool6 = icmp ne i32 %7, 0, !dbg !6912
  br i1 %tobool6, label %land.lhs.true, label %if.end12, !dbg !6914

land.lhs.true:                                    ; preds = %if.end5
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6915
  %mmc_avail_type7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 37, !dbg !6916
  %9 = load i32, i32* %mmc_avail_type7, align 4, !dbg !6916
  %and8 = and i32 %9, 64, !dbg !6917
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6917
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !6918

if.then10:                                        ; preds = %land.lhs.true
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6919
  %call11 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %10, i32 1) #5, !dbg !6920
  store i32 %call11, i32* %err, align 4, !dbg !6921
  br label %if.end12, !dbg !6922

if.end12:                                         ; preds = %if.then10, %land.lhs.true, %if.end5
  %11 = load i32, i32* %err, align 4, !dbg !6923
  %tobool13 = icmp ne i32 %11, 0, !dbg !6923
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !6925

if.then14:                                        ; preds = %if.end12
  br label %out_err, !dbg !6926

if.end15:                                         ; preds = %if.end12
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6927
  %call16 = call i32 @mmc_select_bus_width(%struct.mmc_card* %12) #5, !dbg !6928
  store i32 %call16, i32* %err, align 4, !dbg !6929
  %13 = load i32, i32* %err, align 4, !dbg !6930
  %cmp = icmp ne i32 %13, 3, !dbg !6932
  br i1 %cmp, label %if.then17, label %if.end21, !dbg !6933

if.then17:                                        ; preds = %if.end15
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6934
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 1, !dbg !6934
  %call18 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !6934
  %15 = load i32, i32* %err, align 4, !dbg !6934
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.66, i64 0, i64 0), i8* %call18, i32 %15) #6, !dbg !6934
  %16 = load i32, i32* %err, align 4, !dbg !6936
  %cmp20 = icmp slt i32 %16, 0, !dbg !6937
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !6936

cond.true:                                        ; preds = %if.then17
  %17 = load i32, i32* %err, align 4, !dbg !6938
  br label %cond.end, !dbg !6936

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !6936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ -524, %cond.false ], !dbg !6936
  store i32 %cond, i32* %err, align 4, !dbg !6939
  br label %out_err, !dbg !6940

if.end21:                                         ; preds = %if.end15
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6941
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6942
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 21, !dbg !6943
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !6944
  %20 = load i32, i32* %generic_cmd6_time, align 4, !dbg !6944
  %call22 = call i32 @__mmc_switch(%struct.mmc_card* %18, i8 zeroext 1, i8 zeroext -71, i8 zeroext 1, i32 %20, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !6945
  store i32 %call22, i32* %err, align 4, !dbg !6946
  %21 = load i32, i32* %err, align 4, !dbg !6947
  %tobool23 = icmp ne i32 %21, 0, !dbg !6947
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !6949

if.then24:                                        ; preds = %if.end21
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6950
  %class_dev25 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 1, !dbg !6950
  %call26 = call i8* @dev_name(%struct.device* %class_dev25) #5, !dbg !6950
  %23 = load i32, i32* %err, align 4, !dbg !6950
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.67, i64 0, i64 0), i8* %call26, i32 %23) #6, !dbg !6950
  br label %out_err, !dbg !6952

if.end28:                                         ; preds = %if.end21
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6953
  call void @mmc_set_timing(%struct.mmc_host* %24, i32 1) #5, !dbg !6954
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6955
  %call29 = call i32 @mmc_switch_status(%struct.mmc_card* %25, i1 zeroext true) #5, !dbg !6956
  store i32 %call29, i32* %err, align 4, !dbg !6957
  %26 = load i32, i32* %err, align 4, !dbg !6958
  %tobool30 = icmp ne i32 %26, 0, !dbg !6958
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6960

if.then31:                                        ; preds = %if.end28
  br label %out_err, !dbg !6961

if.end32:                                         ; preds = %if.end28
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6962
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6963
  %ext_csd33 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 21, !dbg !6964
  %hs_max_dtr = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd33, i32 0, i32 17, !dbg !6965
  %29 = load i32, i32* %hs_max_dtr, align 8, !dbg !6965
  call void @mmc_set_clock(%struct.mmc_host* %27, i32 %29) #5, !dbg !6966
  store i8 -122, i8* %val, align 1, !dbg !6967
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6968
  %31 = load i8, i8* %val, align 1, !dbg !6969
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6970
  %ext_csd34 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 21, !dbg !6971
  %generic_cmd6_time35 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd34, i32 0, i32 14, !dbg !6972
  %33 = load i32, i32* %generic_cmd6_time35, align 4, !dbg !6972
  %call36 = call i32 @mmc_switch(%struct.mmc_card* %30, i8 zeroext 1, i8 zeroext -73, i8 zeroext %31, i32 %33) #5, !dbg !6973
  store i32 %call36, i32* %err, align 4, !dbg !6974
  %34 = load i32, i32* %err, align 4, !dbg !6975
  %tobool37 = icmp ne i32 %34, 0, !dbg !6975
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !6977

if.then38:                                        ; preds = %if.end32
  %35 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6978
  %class_dev39 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %35, i32 0, i32 1, !dbg !6978
  %call40 = call i8* @dev_name(%struct.device* %class_dev39) #5, !dbg !6978
  %36 = load i32, i32* %err, align 4, !dbg !6978
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.68, i64 0, i64 0), i8* %call40, i32 %36) #6, !dbg !6978
  br label %out_err, !dbg !6980

if.end42:                                         ; preds = %if.end32
  %37 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6981
  call void @mmc_select_driver_type(%struct.mmc_card* %37) #5, !dbg !6982
  %38 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6983
  %drive_strength = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %38, i32 0, i32 38, !dbg !6984
  %39 = load i32, i32* %drive_strength, align 8, !dbg !6984
  %shl = shl i32 %39, 4, !dbg !6985
  %or = or i32 3, %shl, !dbg !6986
  %conv = trunc i32 %or to i8, !dbg !6987
  store i8 %conv, i8* %val, align 1, !dbg !6988
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6989
  %41 = load i8, i8* %val, align 1, !dbg !6990
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6991
  %ext_csd43 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %42, i32 0, i32 21, !dbg !6992
  %generic_cmd6_time44 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd43, i32 0, i32 14, !dbg !6993
  %43 = load i32, i32* %generic_cmd6_time44, align 4, !dbg !6993
  %call45 = call i32 @__mmc_switch(%struct.mmc_card* %40, i8 zeroext 1, i8 zeroext -71, i8 zeroext %41, i32 %43, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !6994
  store i32 %call45, i32* %err, align 4, !dbg !6995
  %44 = load i32, i32* %err, align 4, !dbg !6996
  %tobool46 = icmp ne i32 %44, 0, !dbg !6996
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !6998

if.then47:                                        ; preds = %if.end42
  %45 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6999
  %class_dev48 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %45, i32 0, i32 1, !dbg !6999
  %call49 = call i8* @dev_name(%struct.device* %class_dev48) #5, !dbg !6999
  %46 = load i32, i32* %err, align 4, !dbg !6999
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i64 0, i64 0), i8* %call49, i32 %46) #6, !dbg !6999
  br label %out_err, !dbg !7001

if.end51:                                         ; preds = %if.end42
  %47 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7002
  call void @mmc_set_timing(%struct.mmc_host* %47, i32 10) #5, !dbg !7003
  %48 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7004
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %48, i32 0, i32 29, !dbg !7005
  %enhanced_strobe = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 10, !dbg !7006
  store i8 1, i8* %enhanced_strobe, align 1, !dbg !7007
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7008
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %49, i32 0, i32 3, !dbg !7010
  %50 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7010
  %hs400_enhanced_strobe = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %50, i32 0, i32 17, !dbg !7011
  %51 = load void (%struct.mmc_host*, %struct.mmc_ios*)*, void (%struct.mmc_host*, %struct.mmc_ios*)** %hs400_enhanced_strobe, align 8, !dbg !7011
  %tobool52 = icmp ne void (%struct.mmc_host*, %struct.mmc_ios*)* %51, null, !dbg !7008
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !7012

if.then53:                                        ; preds = %if.end51
  %52 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7013
  %ops54 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %52, i32 0, i32 3, !dbg !7014
  %53 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops54, align 8, !dbg !7014
  %hs400_enhanced_strobe55 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %53, i32 0, i32 17, !dbg !7015
  %54 = load void (%struct.mmc_host*, %struct.mmc_ios*)*, void (%struct.mmc_host*, %struct.mmc_ios*)** %hs400_enhanced_strobe55, align 8, !dbg !7015
  %55 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7016
  %56 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7017
  %ios56 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %56, i32 0, i32 29, !dbg !7018
  call void %54(%struct.mmc_host* %55, %struct.mmc_ios* %ios56) #5, !dbg !7013
  br label %if.end57, !dbg !7013

if.end57:                                         ; preds = %if.then53, %if.end51
  %57 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7019
  %call58 = call i32 @mmc_switch_status(%struct.mmc_card* %57, i1 zeroext true) #5, !dbg !7020
  store i32 %call58, i32* %err, align 4, !dbg !7021
  %58 = load i32, i32* %err, align 4, !dbg !7022
  %tobool59 = icmp ne i32 %58, 0, !dbg !7022
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !7024

if.then60:                                        ; preds = %if.end57
  br label %out_err, !dbg !7025

if.end61:                                         ; preds = %if.end57
  store i32 0, i32* %retval, align 4, !dbg !7026
  br label %return, !dbg !7026

out_err:                                          ; preds = %if.then60, %if.then47, %if.then38, %if.then31, %if.then24, %cond.end, %if.then14, %if.then
  call void @llvm.dbg.label(metadata !7027), !dbg !7028
  %59 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7029
  %host62 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %59, i32 0, i32 0, !dbg !7029
  %60 = load %struct.mmc_host*, %struct.mmc_host** %host62, align 8, !dbg !7029
  %class_dev63 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %60, i32 0, i32 1, !dbg !7029
  %call64 = call i8* @dev_name(%struct.device* %class_dev63) #5, !dbg !7029
  %61 = load i32, i32* %err, align 4, !dbg !7029
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %call64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.mmc_select_hs400es, i64 0, i64 0), i32 %61) #6, !dbg !7029
  %62 = load i32, i32* %err, align 4, !dbg !7030
  store i32 %62, i32* %retval, align 4, !dbg !7031
  br label %return, !dbg !7031

return:                                           ; preds = %out_err, %if.end61
  %63 = load i32, i32* %retval, align 4, !dbg !7032
  ret i32 %63, !dbg !7032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_hs200(%struct.mmc_card* %card) #0 !dbg !7033 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %old_timing = alloca i32, align 4
  %old_signal_voltage = alloca i32, align 4
  %err = alloca i32, align 4
  %val = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7036, metadata !DIExpression()), !dbg !7037
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7038
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !7039
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7039
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !7037
  call void @llvm.dbg.declare(metadata i32* %old_timing, metadata !7040, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.declare(metadata i32* %old_signal_voltage, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7044, metadata !DIExpression()), !dbg !7045
  store i32 -22, i32* %err, align 4, !dbg !7045
  call void @llvm.dbg.declare(metadata i8* %val, metadata !7046, metadata !DIExpression()), !dbg !7047
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7048
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 29, !dbg !7049
  %signal_voltage = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 8, !dbg !7050
  %3 = load i8, i8* %signal_voltage, align 1, !dbg !7050
  %conv = zext i8 %3 to i32, !dbg !7048
  store i32 %conv, i32* %old_signal_voltage, align 4, !dbg !7051
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7052
  %mmc_avail_type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 37, !dbg !7054
  %5 = load i32, i32* %mmc_avail_type, align 4, !dbg !7054
  %and = and i32 %5, 32, !dbg !7055
  %tobool = icmp ne i32 %and, 0, !dbg !7055
  br i1 %tobool, label %if.then, label %if.end, !dbg !7056

if.then:                                          ; preds = %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7057
  %call = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %6, i32 2) #5, !dbg !7058
  store i32 %call, i32* %err, align 4, !dbg !7059
  br label %if.end, !dbg !7060

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %err, align 4, !dbg !7061
  %tobool2 = icmp ne i32 %7, 0, !dbg !7061
  br i1 %tobool2, label %land.lhs.true, label %if.end8, !dbg !7063

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7064
  %mmc_avail_type3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 37, !dbg !7065
  %9 = load i32, i32* %mmc_avail_type3, align 4, !dbg !7065
  %and4 = and i32 %9, 16, !dbg !7066
  %tobool5 = icmp ne i32 %and4, 0, !dbg !7066
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7067

if.then6:                                         ; preds = %land.lhs.true
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7068
  %call7 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %10, i32 1) #5, !dbg !7069
  store i32 %call7, i32* %err, align 4, !dbg !7070
  br label %if.end8, !dbg !7071

if.end8:                                          ; preds = %if.then6, %land.lhs.true, %if.end
  %11 = load i32, i32* %err, align 4, !dbg !7072
  %tobool9 = icmp ne i32 %11, 0, !dbg !7072
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7074

if.then10:                                        ; preds = %if.end8
  %12 = load i32, i32* %err, align 4, !dbg !7075
  store i32 %12, i32* %retval, align 4, !dbg !7076
  br label %return, !dbg !7076

if.end11:                                         ; preds = %if.end8
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7077
  call void @mmc_select_driver_type(%struct.mmc_card* %13) #5, !dbg !7078
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7079
  %call12 = call i32 @mmc_select_bus_width(%struct.mmc_card* %14) #5, !dbg !7080
  store i32 %call12, i32* %err, align 4, !dbg !7081
  %15 = load i32, i32* %err, align 4, !dbg !7082
  %cmp = icmp sgt i32 %15, 0, !dbg !7084
  br i1 %cmp, label %if.then14, label %if.end27, !dbg !7085

if.then14:                                        ; preds = %if.end11
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7086
  %drive_strength = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 38, !dbg !7088
  %17 = load i32, i32* %drive_strength, align 8, !dbg !7088
  %shl = shl i32 %17, 4, !dbg !7089
  %or = or i32 2, %shl, !dbg !7090
  %conv15 = trunc i32 %or to i8, !dbg !7091
  store i8 %conv15, i8* %val, align 1, !dbg !7092
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7093
  %19 = load i8, i8* %val, align 1, !dbg !7094
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7095
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 21, !dbg !7096
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !7097
  %21 = load i32, i32* %generic_cmd6_time, align 4, !dbg !7097
  %call16 = call i32 @__mmc_switch(%struct.mmc_card* %18, i8 zeroext 1, i8 zeroext -71, i8 zeroext %19, i32 %21, i8 zeroext 0, i1 zeroext false, i1 zeroext true) #5, !dbg !7098
  store i32 %call16, i32* %err, align 4, !dbg !7099
  %22 = load i32, i32* %err, align 4, !dbg !7100
  %tobool17 = icmp ne i32 %22, 0, !dbg !7100
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !7102

if.then18:                                        ; preds = %if.then14
  br label %err28, !dbg !7103

if.end19:                                         ; preds = %if.then14
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7104
  %ios20 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 29, !dbg !7105
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios20, i32 0, i32 7, !dbg !7106
  %24 = load i8, i8* %timing, align 4, !dbg !7106
  %conv21 = zext i8 %24 to i32, !dbg !7104
  store i32 %conv21, i32* %old_timing, align 4, !dbg !7107
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7108
  call void @mmc_set_timing(%struct.mmc_host* %25, i32 9) #5, !dbg !7109
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7110
  %call22 = call i32 @mmc_switch_status(%struct.mmc_card* %26, i1 zeroext false) #5, !dbg !7111
  store i32 %call22, i32* %err, align 4, !dbg !7112
  %27 = load i32, i32* %err, align 4, !dbg !7113
  %cmp23 = icmp eq i32 %27, -74, !dbg !7115
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7116

if.then25:                                        ; preds = %if.end19
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7117
  %29 = load i32, i32* %old_timing, align 4, !dbg !7118
  call void @mmc_set_timing(%struct.mmc_host* %28, i32 %29) #5, !dbg !7119
  br label %if.end26, !dbg !7119

if.end26:                                         ; preds = %if.then25, %if.end19
  br label %if.end27, !dbg !7120

if.end27:                                         ; preds = %if.end26, %if.end11
  br label %err28, !dbg !7121

err28:                                            ; preds = %if.end27, %if.then18
  call void @llvm.dbg.label(metadata !7122), !dbg !7123
  %30 = load i32, i32* %err, align 4, !dbg !7124
  %tobool29 = icmp ne i32 %30, 0, !dbg !7124
  br i1 %tobool29, label %if.then30, label %if.end38, !dbg !7126

if.then30:                                        ; preds = %err28
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7127
  %32 = load i32, i32* %old_signal_voltage, align 4, !dbg !7130
  %call31 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %31, i32 %32) #5, !dbg !7131
  %tobool32 = icmp ne i32 %call31, 0, !dbg !7131
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !7132

if.then33:                                        ; preds = %if.then30
  store i32 -5, i32* %err, align 4, !dbg !7133
  br label %if.end34, !dbg !7134

if.end34:                                         ; preds = %if.then33, %if.then30
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7135
  %host35 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 0, !dbg !7135
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host35, align 8, !dbg !7135
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 1, !dbg !7135
  %call36 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !7135
  %35 = load i32, i32* %err, align 4, !dbg !7135
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* %call36, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.mmc_select_hs200, i64 0, i64 0), i32 %35) #6, !dbg !7135
  br label %if.end38, !dbg !7136

if.end38:                                         ; preds = %if.end34, %err28
  %36 = load i32, i32* %err, align 4, !dbg !7137
  store i32 %36, i32* %retval, align 4, !dbg !7138
  br label %return, !dbg !7138

return:                                           ; preds = %if.end38, %if.then10
  %37 = load i32, i32* %retval, align 4, !dbg !7139
  ret i32 %37, !dbg !7139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_select_hs(%struct.mmc_card* %card) #0 !dbg !7140 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7143, metadata !DIExpression()), !dbg !7144
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7145
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7146
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 21, !dbg !7147
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !7148
  %2 = load i32, i32* %generic_cmd6_time, align 4, !dbg !7148
  %call = call i32 @__mmc_switch(%struct.mmc_card* %0, i8 zeroext 1, i8 zeroext -71, i8 zeroext 1, i32 %2, i8 zeroext 1, i1 zeroext true, i1 zeroext true) #5, !dbg !7149
  store i32 %call, i32* %err, align 4, !dbg !7150
  %3 = load i32, i32* %err, align 4, !dbg !7151
  %tobool = icmp ne i32 %3, 0, !dbg !7151
  br i1 %tobool, label %if.then, label %if.end, !dbg !7153

if.then:                                          ; preds = %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7154
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 0, !dbg !7154
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7154
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 1, !dbg !7154
  %call1 = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !7154
  %6 = load i32, i32* %err, align 4, !dbg !7154
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.70, i64 0, i64 0), i8* %call1, i32 %6) #6, !dbg !7154
  br label %if.end, !dbg !7154

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %err, align 4, !dbg !7155
  ret i32 %7, !dbg !7156
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_set_signal_voltage(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_select_driver_type(%struct.mmc_card* %card) #0 !dbg !7157 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %card_drv_type = alloca i32, align 4
  %drive_strength = alloca i32, align 4
  %drv_type = alloca i32, align 4
  %fixed_drv_type = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.declare(metadata i32* %card_drv_type, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata i32* %drive_strength, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata i32* %drv_type, metadata !7164, metadata !DIExpression()), !dbg !7165
  store i32 0, i32* %drv_type, align 4, !dbg !7165
  call void @llvm.dbg.declare(metadata i32* %fixed_drv_type, metadata !7166, metadata !DIExpression()), !dbg !7167
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7168
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !7169
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7169
  %fixed_drv_type1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 19, !dbg !7170
  %2 = load i32, i32* %fixed_drv_type1, align 4, !dbg !7170
  store i32 %2, i32* %fixed_drv_type, align 4, !dbg !7167
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7171
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 21, !dbg !7172
  %raw_driver_strength = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 51, !dbg !7173
  %4 = load i8, i8* %raw_driver_strength, align 1, !dbg !7173
  %conv = zext i8 %4 to i32, !dbg !7171
  %or = or i32 %conv, 1, !dbg !7174
  store i32 %or, i32* %card_drv_type, align 4, !dbg !7175
  %5 = load i32, i32* %fixed_drv_type, align 4, !dbg !7176
  %cmp = icmp sge i32 %5, 0, !dbg !7178
  br i1 %cmp, label %if.then, label %if.else, !dbg !7179

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %card_drv_type, align 4, !dbg !7180
  %7 = load i32, i32* %fixed_drv_type, align 4, !dbg !7181
  %shl = shl i32 1, %7, !dbg !7181
  %and = and i32 %6, %shl, !dbg !7182
  %tobool = icmp ne i32 %and, 0, !dbg !7182
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7180

cond.true:                                        ; preds = %if.then
  %8 = load i32, i32* %fixed_drv_type, align 4, !dbg !7183
  br label %cond.end, !dbg !7180

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !7180

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !7180
  store i32 %cond, i32* %drive_strength, align 4, !dbg !7184
  br label %if.end, !dbg !7185

if.else:                                          ; preds = %entry
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7186
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7187
  %ext_csd3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 21, !dbg !7188
  %hs200_max_dtr = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd3, i32 0, i32 18, !dbg !7189
  %11 = load i32, i32* %hs200_max_dtr, align 4, !dbg !7189
  %12 = load i32, i32* %card_drv_type, align 4, !dbg !7190
  %call = call i32 @mmc_select_drive_strength(%struct.mmc_card* %9, i32 %11, i32 %12, i32* %drv_type) #5, !dbg !7191
  store i32 %call, i32* %drive_strength, align 4, !dbg !7192
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %13 = load i32, i32* %drive_strength, align 4, !dbg !7193
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7194
  %drive_strength4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %14, i32 0, i32 38, !dbg !7195
  store i32 %13, i32* %drive_strength4, align 8, !dbg !7196
  %15 = load i32, i32* %drv_type, align 4, !dbg !7197
  %tobool5 = icmp ne i32 %15, 0, !dbg !7197
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7199

if.then6:                                         ; preds = %if.end
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7200
  %host7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 0, !dbg !7201
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host7, align 8, !dbg !7201
  %18 = load i32, i32* %drv_type, align 4, !dbg !7202
  call void @mmc_set_driver_type(%struct.mmc_host* %17, i32 %18) #5, !dbg !7203
  br label %if.end8, !dbg !7203

if.end8:                                          ; preds = %if.then6, %if.end
  ret void, !dbg !7204
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_select_drive_strength(%struct.mmc_card*, i32, i32, i32*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_driver_type(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_execute_tuning(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_bus_width(%struct.mmc_host*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_compare_ext_csds(%struct.mmc_card* %card, i32 %bus_width) #0 !dbg !7205 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %bus_width.addr = alloca i32, align 4
  %bw_ext_csd = alloca i8*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  store i32 %bus_width, i32* %bus_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_width.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.declare(metadata i8** %bw_ext_csd, metadata !7210, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7212, metadata !DIExpression()), !dbg !7213
  %0 = load i32, i32* %bus_width.addr, align 4, !dbg !7214
  %cmp = icmp eq i32 %0, 0, !dbg !7216
  br i1 %cmp, label %if.then, label %if.end, !dbg !7217

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7218
  br label %return, !dbg !7218

if.end:                                           ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7219
  %call = call i32 @mmc_get_ext_csd(%struct.mmc_card* %1, i8** %bw_ext_csd) #5, !dbg !7220
  store i32 %call, i32* %err, align 4, !dbg !7221
  %2 = load i32, i32* %err, align 4, !dbg !7222
  %tobool = icmp ne i32 %2, 0, !dbg !7222
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !7224

if.then1:                                         ; preds = %if.end
  %3 = load i32, i32* %err, align 4, !dbg !7225
  store i32 %3, i32* %retval, align 4, !dbg !7226
  br label %return, !dbg !7226

if.end2:                                          ; preds = %if.end
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7227
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 21, !dbg !7228
  %raw_partition_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 45, !dbg !7229
  %5 = load i8, i8* %raw_partition_support, align 1, !dbg !7229
  %conv = zext i8 %5 to i32, !dbg !7227
  %6 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7230
  %arrayidx = getelementptr i8, i8* %6, i64 160, !dbg !7230
  %7 = load i8, i8* %arrayidx, align 1, !dbg !7230
  %conv3 = zext i8 %7 to i32, !dbg !7230
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !7231
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !7232

land.lhs.true:                                    ; preds = %if.end2
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7233
  %ext_csd6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 21, !dbg !7234
  %raw_erased_mem_count = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd6, i32 0, i32 47, !dbg !7235
  %9 = load i8, i8* %raw_erased_mem_count, align 1, !dbg !7235
  %conv7 = zext i8 %9 to i32, !dbg !7233
  %10 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7236
  %arrayidx8 = getelementptr i8, i8* %10, i64 181, !dbg !7236
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !7236
  %conv9 = zext i8 %11 to i32, !dbg !7236
  %cmp10 = icmp eq i32 %conv7, %conv9, !dbg !7237
  br i1 %cmp10, label %land.lhs.true12, label %land.end, !dbg !7238

land.lhs.true12:                                  ; preds = %land.lhs.true
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7239
  %ext_csd13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 21, !dbg !7240
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd13, i32 0, i32 0, !dbg !7241
  %13 = load i8, i8* %rev, align 8, !dbg !7241
  %conv14 = zext i8 %13 to i32, !dbg !7239
  %14 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7242
  %arrayidx15 = getelementptr i8, i8* %14, i64 192, !dbg !7242
  %15 = load i8, i8* %arrayidx15, align 1, !dbg !7242
  %conv16 = zext i8 %15 to i32, !dbg !7242
  %cmp17 = icmp eq i32 %conv14, %conv16, !dbg !7243
  br i1 %cmp17, label %land.lhs.true19, label %land.end, !dbg !7244

land.lhs.true19:                                  ; preds = %land.lhs.true12
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7245
  %ext_csd20 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 21, !dbg !7246
  %raw_ext_csd_structure = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd20, i32 0, i32 49, !dbg !7247
  %17 = load i8, i8* %raw_ext_csd_structure, align 1, !dbg !7247
  %conv21 = zext i8 %17 to i32, !dbg !7245
  %18 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7248
  %arrayidx22 = getelementptr i8, i8* %18, i64 194, !dbg !7248
  %19 = load i8, i8* %arrayidx22, align 1, !dbg !7248
  %conv23 = zext i8 %19 to i32, !dbg !7248
  %cmp24 = icmp eq i32 %conv21, %conv23, !dbg !7249
  br i1 %cmp24, label %land.lhs.true26, label %land.end, !dbg !7250

land.lhs.true26:                                  ; preds = %land.lhs.true19
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7251
  %ext_csd27 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 21, !dbg !7252
  %raw_card_type = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd27, i32 0, i32 50, !dbg !7253
  %21 = load i8, i8* %raw_card_type, align 2, !dbg !7253
  %conv28 = zext i8 %21 to i32, !dbg !7251
  %22 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7254
  %arrayidx29 = getelementptr i8, i8* %22, i64 196, !dbg !7254
  %23 = load i8, i8* %arrayidx29, align 1, !dbg !7254
  %conv30 = zext i8 %23 to i32, !dbg !7254
  %cmp31 = icmp eq i32 %conv28, %conv30, !dbg !7255
  br i1 %cmp31, label %land.lhs.true33, label %land.end, !dbg !7256

land.lhs.true33:                                  ; preds = %land.lhs.true26
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7257
  %ext_csd34 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 21, !dbg !7258
  %raw_s_a_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd34, i32 0, i32 57, !dbg !7259
  %25 = load i8, i8* %raw_s_a_timeout, align 1, !dbg !7259
  %conv35 = zext i8 %25 to i32, !dbg !7257
  %26 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7260
  %arrayidx36 = getelementptr i8, i8* %26, i64 217, !dbg !7260
  %27 = load i8, i8* %arrayidx36, align 1, !dbg !7260
  %conv37 = zext i8 %27 to i32, !dbg !7260
  %cmp38 = icmp eq i32 %conv35, %conv37, !dbg !7261
  br i1 %cmp38, label %land.lhs.true40, label %land.end, !dbg !7262

land.lhs.true40:                                  ; preds = %land.lhs.true33
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7263
  %ext_csd41 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 21, !dbg !7264
  %raw_hc_erase_gap_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd41, i32 0, i32 58, !dbg !7265
  %29 = load i8, i8* %raw_hc_erase_gap_size, align 2, !dbg !7265
  %conv42 = zext i8 %29 to i32, !dbg !7263
  %30 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7266
  %arrayidx43 = getelementptr i8, i8* %30, i64 221, !dbg !7266
  %31 = load i8, i8* %arrayidx43, align 1, !dbg !7266
  %conv44 = zext i8 %31 to i32, !dbg !7266
  %cmp45 = icmp eq i32 %conv42, %conv44, !dbg !7267
  br i1 %cmp45, label %land.lhs.true47, label %land.end, !dbg !7268

land.lhs.true47:                                  ; preds = %land.lhs.true40
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7269
  %ext_csd48 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 21, !dbg !7270
  %raw_erase_timeout_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd48, i32 0, i32 59, !dbg !7271
  %33 = load i8, i8* %raw_erase_timeout_mult, align 1, !dbg !7271
  %conv49 = zext i8 %33 to i32, !dbg !7269
  %34 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7272
  %arrayidx50 = getelementptr i8, i8* %34, i64 223, !dbg !7272
  %35 = load i8, i8* %arrayidx50, align 1, !dbg !7272
  %conv51 = zext i8 %35 to i32, !dbg !7272
  %cmp52 = icmp eq i32 %conv49, %conv51, !dbg !7273
  br i1 %cmp52, label %land.lhs.true54, label %land.end, !dbg !7274

land.lhs.true54:                                  ; preds = %land.lhs.true47
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7275
  %ext_csd55 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 21, !dbg !7276
  %raw_hc_erase_grp_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd55, i32 0, i32 60, !dbg !7277
  %37 = load i8, i8* %raw_hc_erase_grp_size, align 8, !dbg !7277
  %conv56 = zext i8 %37 to i32, !dbg !7275
  %38 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7278
  %arrayidx57 = getelementptr i8, i8* %38, i64 224, !dbg !7278
  %39 = load i8, i8* %arrayidx57, align 1, !dbg !7278
  %conv58 = zext i8 %39 to i32, !dbg !7278
  %cmp59 = icmp eq i32 %conv56, %conv58, !dbg !7279
  br i1 %cmp59, label %land.lhs.true61, label %land.end, !dbg !7280

land.lhs.true61:                                  ; preds = %land.lhs.true54
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7281
  %ext_csd62 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 21, !dbg !7282
  %raw_sec_trim_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd62, i32 0, i32 61, !dbg !7283
  %41 = load i8, i8* %raw_sec_trim_mult, align 1, !dbg !7283
  %conv63 = zext i8 %41 to i32, !dbg !7281
  %42 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7284
  %arrayidx64 = getelementptr i8, i8* %42, i64 229, !dbg !7284
  %43 = load i8, i8* %arrayidx64, align 1, !dbg !7284
  %conv65 = zext i8 %43 to i32, !dbg !7284
  %cmp66 = icmp eq i32 %conv63, %conv65, !dbg !7285
  br i1 %cmp66, label %land.lhs.true68, label %land.end, !dbg !7286

land.lhs.true68:                                  ; preds = %land.lhs.true61
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7287
  %ext_csd69 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 21, !dbg !7288
  %raw_sec_erase_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd69, i32 0, i32 62, !dbg !7289
  %45 = load i8, i8* %raw_sec_erase_mult, align 2, !dbg !7289
  %conv70 = zext i8 %45 to i32, !dbg !7287
  %46 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7290
  %arrayidx71 = getelementptr i8, i8* %46, i64 230, !dbg !7290
  %47 = load i8, i8* %arrayidx71, align 1, !dbg !7290
  %conv72 = zext i8 %47 to i32, !dbg !7290
  %cmp73 = icmp eq i32 %conv70, %conv72, !dbg !7291
  br i1 %cmp73, label %land.lhs.true75, label %land.end, !dbg !7292

land.lhs.true75:                                  ; preds = %land.lhs.true68
  %48 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7293
  %ext_csd76 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %48, i32 0, i32 21, !dbg !7294
  %raw_sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd76, i32 0, i32 63, !dbg !7295
  %49 = load i8, i8* %raw_sec_feature_support, align 1, !dbg !7295
  %conv77 = zext i8 %49 to i32, !dbg !7293
  %50 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7296
  %arrayidx78 = getelementptr i8, i8* %50, i64 231, !dbg !7296
  %51 = load i8, i8* %arrayidx78, align 1, !dbg !7296
  %conv79 = zext i8 %51 to i32, !dbg !7296
  %cmp80 = icmp eq i32 %conv77, %conv79, !dbg !7297
  br i1 %cmp80, label %land.lhs.true82, label %land.end, !dbg !7298

land.lhs.true82:                                  ; preds = %land.lhs.true75
  %52 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7299
  %ext_csd83 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %52, i32 0, i32 21, !dbg !7300
  %raw_trim_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd83, i32 0, i32 64, !dbg !7301
  %53 = load i8, i8* %raw_trim_mult, align 4, !dbg !7301
  %conv84 = zext i8 %53 to i32, !dbg !7299
  %54 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7302
  %arrayidx85 = getelementptr i8, i8* %54, i64 232, !dbg !7302
  %55 = load i8, i8* %arrayidx85, align 1, !dbg !7302
  %conv86 = zext i8 %55 to i32, !dbg !7302
  %cmp87 = icmp eq i32 %conv84, %conv86, !dbg !7303
  br i1 %cmp87, label %land.lhs.true89, label %land.end, !dbg !7304

land.lhs.true89:                                  ; preds = %land.lhs.true82
  %56 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7305
  %ext_csd90 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %56, i32 0, i32 21, !dbg !7306
  %raw_sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd90, i32 0, i32 71, !dbg !7307
  %arrayidx91 = getelementptr [4 x i8], [4 x i8]* %raw_sectors, i64 0, i64 0, !dbg !7305
  %57 = load i8, i8* %arrayidx91, align 1, !dbg !7305
  %conv92 = zext i8 %57 to i32, !dbg !7305
  %58 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7308
  %arrayidx93 = getelementptr i8, i8* %58, i64 212, !dbg !7308
  %59 = load i8, i8* %arrayidx93, align 1, !dbg !7308
  %conv94 = zext i8 %59 to i32, !dbg !7308
  %cmp95 = icmp eq i32 %conv92, %conv94, !dbg !7309
  br i1 %cmp95, label %land.lhs.true97, label %land.end, !dbg !7310

land.lhs.true97:                                  ; preds = %land.lhs.true89
  %60 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7311
  %ext_csd98 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %60, i32 0, i32 21, !dbg !7312
  %raw_sectors99 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd98, i32 0, i32 71, !dbg !7313
  %arrayidx100 = getelementptr [4 x i8], [4 x i8]* %raw_sectors99, i64 0, i64 1, !dbg !7311
  %61 = load i8, i8* %arrayidx100, align 1, !dbg !7311
  %conv101 = zext i8 %61 to i32, !dbg !7311
  %62 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7314
  %arrayidx102 = getelementptr i8, i8* %62, i64 213, !dbg !7314
  %63 = load i8, i8* %arrayidx102, align 1, !dbg !7314
  %conv103 = zext i8 %63 to i32, !dbg !7314
  %cmp104 = icmp eq i32 %conv101, %conv103, !dbg !7315
  br i1 %cmp104, label %land.lhs.true106, label %land.end, !dbg !7316

land.lhs.true106:                                 ; preds = %land.lhs.true97
  %64 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7317
  %ext_csd107 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %64, i32 0, i32 21, !dbg !7318
  %raw_sectors108 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd107, i32 0, i32 71, !dbg !7319
  %arrayidx109 = getelementptr [4 x i8], [4 x i8]* %raw_sectors108, i64 0, i64 2, !dbg !7317
  %65 = load i8, i8* %arrayidx109, align 1, !dbg !7317
  %conv110 = zext i8 %65 to i32, !dbg !7317
  %66 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7320
  %arrayidx111 = getelementptr i8, i8* %66, i64 214, !dbg !7320
  %67 = load i8, i8* %arrayidx111, align 1, !dbg !7320
  %conv112 = zext i8 %67 to i32, !dbg !7320
  %cmp113 = icmp eq i32 %conv110, %conv112, !dbg !7321
  br i1 %cmp113, label %land.lhs.true115, label %land.end, !dbg !7322

land.lhs.true115:                                 ; preds = %land.lhs.true106
  %68 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7323
  %ext_csd116 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %68, i32 0, i32 21, !dbg !7324
  %raw_sectors117 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd116, i32 0, i32 71, !dbg !7325
  %arrayidx118 = getelementptr [4 x i8], [4 x i8]* %raw_sectors117, i64 0, i64 3, !dbg !7323
  %69 = load i8, i8* %arrayidx118, align 1, !dbg !7323
  %conv119 = zext i8 %69 to i32, !dbg !7323
  %70 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7326
  %arrayidx120 = getelementptr i8, i8* %70, i64 215, !dbg !7326
  %71 = load i8, i8* %arrayidx120, align 1, !dbg !7326
  %conv121 = zext i8 %71 to i32, !dbg !7326
  %cmp122 = icmp eq i32 %conv119, %conv121, !dbg !7327
  br i1 %cmp122, label %land.lhs.true124, label %land.end, !dbg !7328

land.lhs.true124:                                 ; preds = %land.lhs.true115
  %72 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7329
  %ext_csd125 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %72, i32 0, i32 21, !dbg !7330
  %raw_pwr_cl_52_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd125, i32 0, i32 53, !dbg !7331
  %73 = load i8, i8* %raw_pwr_cl_52_195, align 1, !dbg !7331
  %conv126 = zext i8 %73 to i32, !dbg !7329
  %74 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7332
  %arrayidx127 = getelementptr i8, i8* %74, i64 200, !dbg !7332
  %75 = load i8, i8* %arrayidx127, align 1, !dbg !7332
  %conv128 = zext i8 %75 to i32, !dbg !7332
  %cmp129 = icmp eq i32 %conv126, %conv128, !dbg !7333
  br i1 %cmp129, label %land.lhs.true131, label %land.end, !dbg !7334

land.lhs.true131:                                 ; preds = %land.lhs.true124
  %76 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7335
  %ext_csd132 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %76, i32 0, i32 21, !dbg !7336
  %raw_pwr_cl_26_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd132, i32 0, i32 54, !dbg !7337
  %77 = load i8, i8* %raw_pwr_cl_26_195, align 2, !dbg !7337
  %conv133 = zext i8 %77 to i32, !dbg !7335
  %78 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7338
  %arrayidx134 = getelementptr i8, i8* %78, i64 201, !dbg !7338
  %79 = load i8, i8* %arrayidx134, align 1, !dbg !7338
  %conv135 = zext i8 %79 to i32, !dbg !7338
  %cmp136 = icmp eq i32 %conv133, %conv135, !dbg !7339
  br i1 %cmp136, label %land.lhs.true138, label %land.end, !dbg !7340

land.lhs.true138:                                 ; preds = %land.lhs.true131
  %80 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7341
  %ext_csd139 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %80, i32 0, i32 21, !dbg !7342
  %raw_pwr_cl_52_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd139, i32 0, i32 55, !dbg !7343
  %81 = load i8, i8* %raw_pwr_cl_52_360, align 1, !dbg !7343
  %conv140 = zext i8 %81 to i32, !dbg !7341
  %82 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7344
  %arrayidx141 = getelementptr i8, i8* %82, i64 202, !dbg !7344
  %83 = load i8, i8* %arrayidx141, align 1, !dbg !7344
  %conv142 = zext i8 %83 to i32, !dbg !7344
  %cmp143 = icmp eq i32 %conv140, %conv142, !dbg !7345
  br i1 %cmp143, label %land.lhs.true145, label %land.end, !dbg !7346

land.lhs.true145:                                 ; preds = %land.lhs.true138
  %84 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7347
  %ext_csd146 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %84, i32 0, i32 21, !dbg !7348
  %raw_pwr_cl_26_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd146, i32 0, i32 56, !dbg !7349
  %85 = load i8, i8* %raw_pwr_cl_26_360, align 4, !dbg !7349
  %conv147 = zext i8 %85 to i32, !dbg !7347
  %86 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7350
  %arrayidx148 = getelementptr i8, i8* %86, i64 203, !dbg !7350
  %87 = load i8, i8* %arrayidx148, align 1, !dbg !7350
  %conv149 = zext i8 %87 to i32, !dbg !7350
  %cmp150 = icmp eq i32 %conv147, %conv149, !dbg !7351
  br i1 %cmp150, label %land.lhs.true152, label %land.end, !dbg !7352

land.lhs.true152:                                 ; preds = %land.lhs.true145
  %88 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7353
  %ext_csd153 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %88, i32 0, i32 21, !dbg !7354
  %raw_pwr_cl_200_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd153, i32 0, i32 65, !dbg !7355
  %89 = load i8, i8* %raw_pwr_cl_200_195, align 1, !dbg !7355
  %conv154 = zext i8 %89 to i32, !dbg !7353
  %90 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7356
  %arrayidx155 = getelementptr i8, i8* %90, i64 236, !dbg !7356
  %91 = load i8, i8* %arrayidx155, align 1, !dbg !7356
  %conv156 = zext i8 %91 to i32, !dbg !7356
  %cmp157 = icmp eq i32 %conv154, %conv156, !dbg !7357
  br i1 %cmp157, label %land.lhs.true159, label %land.end, !dbg !7358

land.lhs.true159:                                 ; preds = %land.lhs.true152
  %92 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7359
  %ext_csd160 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %92, i32 0, i32 21, !dbg !7360
  %raw_pwr_cl_200_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd160, i32 0, i32 66, !dbg !7361
  %93 = load i8, i8* %raw_pwr_cl_200_360, align 2, !dbg !7361
  %conv161 = zext i8 %93 to i32, !dbg !7359
  %94 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7362
  %arrayidx162 = getelementptr i8, i8* %94, i64 237, !dbg !7362
  %95 = load i8, i8* %arrayidx162, align 1, !dbg !7362
  %conv163 = zext i8 %95 to i32, !dbg !7362
  %cmp164 = icmp eq i32 %conv161, %conv163, !dbg !7363
  br i1 %cmp164, label %land.lhs.true166, label %land.end, !dbg !7364

land.lhs.true166:                                 ; preds = %land.lhs.true159
  %96 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7365
  %ext_csd167 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %96, i32 0, i32 21, !dbg !7366
  %raw_pwr_cl_ddr_52_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd167, i32 0, i32 67, !dbg !7367
  %97 = load i8, i8* %raw_pwr_cl_ddr_52_195, align 1, !dbg !7367
  %conv168 = zext i8 %97 to i32, !dbg !7365
  %98 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7368
  %arrayidx169 = getelementptr i8, i8* %98, i64 238, !dbg !7368
  %99 = load i8, i8* %arrayidx169, align 1, !dbg !7368
  %conv170 = zext i8 %99 to i32, !dbg !7368
  %cmp171 = icmp eq i32 %conv168, %conv170, !dbg !7369
  br i1 %cmp171, label %land.lhs.true173, label %land.end, !dbg !7370

land.lhs.true173:                                 ; preds = %land.lhs.true166
  %100 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7371
  %ext_csd174 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %100, i32 0, i32 21, !dbg !7372
  %raw_pwr_cl_ddr_52_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd174, i32 0, i32 68, !dbg !7373
  %101 = load i8, i8* %raw_pwr_cl_ddr_52_360, align 8, !dbg !7373
  %conv175 = zext i8 %101 to i32, !dbg !7371
  %102 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7374
  %arrayidx176 = getelementptr i8, i8* %102, i64 239, !dbg !7374
  %103 = load i8, i8* %arrayidx176, align 1, !dbg !7374
  %conv177 = zext i8 %103 to i32, !dbg !7374
  %cmp178 = icmp eq i32 %conv175, %conv177, !dbg !7375
  br i1 %cmp178, label %land.rhs, label %land.end, !dbg !7376

land.rhs:                                         ; preds = %land.lhs.true173
  %104 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7377
  %ext_csd180 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %104, i32 0, i32 21, !dbg !7378
  %raw_pwr_cl_ddr_200_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd180, i32 0, i32 69, !dbg !7379
  %105 = load i8, i8* %raw_pwr_cl_ddr_200_360, align 1, !dbg !7379
  %conv181 = zext i8 %105 to i32, !dbg !7377
  %106 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7380
  %arrayidx182 = getelementptr i8, i8* %106, i64 253, !dbg !7380
  %107 = load i8, i8* %arrayidx182, align 1, !dbg !7380
  %conv183 = zext i8 %107 to i32, !dbg !7380
  %cmp184 = icmp eq i32 %conv181, %conv183, !dbg !7381
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true173, %land.lhs.true166, %land.lhs.true159, %land.lhs.true152, %land.lhs.true145, %land.lhs.true138, %land.lhs.true131, %land.lhs.true124, %land.lhs.true115, %land.lhs.true106, %land.lhs.true97, %land.lhs.true89, %land.lhs.true82, %land.lhs.true75, %land.lhs.true68, %land.lhs.true61, %land.lhs.true54, %land.lhs.true47, %land.lhs.true40, %land.lhs.true33, %land.lhs.true26, %land.lhs.true19, %land.lhs.true12, %land.lhs.true, %if.end2
  %108 = phi i1 [ false, %land.lhs.true173 ], [ false, %land.lhs.true166 ], [ false, %land.lhs.true159 ], [ false, %land.lhs.true152 ], [ false, %land.lhs.true145 ], [ false, %land.lhs.true138 ], [ false, %land.lhs.true131 ], [ false, %land.lhs.true124 ], [ false, %land.lhs.true115 ], [ false, %land.lhs.true106 ], [ false, %land.lhs.true97 ], [ false, %land.lhs.true89 ], [ false, %land.lhs.true82 ], [ false, %land.lhs.true75 ], [ false, %land.lhs.true68 ], [ false, %land.lhs.true61 ], [ false, %land.lhs.true54 ], [ false, %land.lhs.true47 ], [ false, %land.lhs.true40 ], [ false, %land.lhs.true33 ], [ false, %land.lhs.true26 ], [ false, %land.lhs.true19 ], [ false, %land.lhs.true12 ], [ false, %land.lhs.true ], [ false, %if.end2 ], [ %cmp184, %land.rhs ], !dbg !7382
  %lnot = xor i1 %108, true, !dbg !7383
  %lnot.ext = zext i1 %lnot to i32, !dbg !7383
  store i32 %lnot.ext, i32* %err, align 4, !dbg !7384
  %109 = load i32, i32* %err, align 4, !dbg !7385
  %tobool186 = icmp ne i32 %109, 0, !dbg !7385
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !7387

if.then187:                                       ; preds = %land.end
  store i32 -22, i32* %err, align 4, !dbg !7388
  br label %if.end188, !dbg !7389

if.end188:                                        ; preds = %if.then187, %land.end
  %110 = load i8*, i8** %bw_ext_csd, align 8, !dbg !7390
  call void @kfree(i8* %110) #5, !dbg !7391
  %111 = load i32, i32* %err, align 4, !dbg !7392
  store i32 %111, i32* %retval, align 4, !dbg !7393
  br label %return, !dbg !7393

return:                                           ; preds = %if.end188, %if.then1, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !7394
  ret i32 %112, !dbg !7394
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_bus_test(%struct.mmc_card*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mmc_select_powerclass(%struct.mmc_card* %card, i32 %bus_width) #0 !dbg !7395 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %bus_width.addr = alloca i32, align 4
  %host = alloca %struct.mmc_host*, align 8
  %ext_csd = alloca %struct.mmc_ext_csd*, align 8
  %pwrclass_val = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  store i32 %bus_width, i32* %bus_width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bus_width.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7400, metadata !DIExpression()), !dbg !7401
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7402
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !7403
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7403
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.mmc_ext_csd** %ext_csd, metadata !7404, metadata !DIExpression()), !dbg !7406
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7407
  %ext_csd2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !7408
  store %struct.mmc_ext_csd* %ext_csd2, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7406
  call void @llvm.dbg.declare(metadata i32* %pwrclass_val, metadata !7409, metadata !DIExpression()), !dbg !7410
  store i32 0, i32* %pwrclass_val, align 4, !dbg !7410
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7411, metadata !DIExpression()), !dbg !7412
  store i32 0, i32* %err, align 4, !dbg !7412
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7413
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 29, !dbg !7414
  %vdd = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 1, !dbg !7415
  %4 = load i16, i16* %vdd, align 4, !dbg !7415
  %conv = zext i16 %4 to i32, !dbg !7413
  %shl = shl i32 1, %conv, !dbg !7416
  switch i32 %shl, label %sw.default [
    i32 128, label %sw.bb
    i32 32768, label %sw.bb24
    i32 65536, label %sw.bb24
    i32 131072, label %sw.bb24
    i32 262144, label %sw.bb24
    i32 524288, label %sw.bb24
    i32 1048576, label %sw.bb24
    i32 2097152, label %sw.bb24
    i32 4194304, label %sw.bb24
    i32 8388608, label %sw.bb24
  ], !dbg !7417

sw.bb:                                            ; preds = %entry
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7418
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 29, !dbg !7421
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 0, !dbg !7422
  %6 = load i32, i32* %clock, align 4, !dbg !7422
  %cmp = icmp ule i32 %6, 26000000, !dbg !7423
  br i1 %cmp, label %if.then, label %if.else, !dbg !7424

if.then:                                          ; preds = %sw.bb
  %7 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7425
  %raw_pwr_cl_26_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %7, i32 0, i32 54, !dbg !7426
  %8 = load i8, i8* %raw_pwr_cl_26_195, align 2, !dbg !7426
  %conv5 = zext i8 %8 to i32, !dbg !7425
  store i32 %conv5, i32* %pwrclass_val, align 4, !dbg !7427
  br label %if.end23, !dbg !7428

if.else:                                          ; preds = %sw.bb
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7429
  %ios6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 29, !dbg !7431
  %clock7 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios6, i32 0, i32 0, !dbg !7432
  %10 = load i32, i32* %clock7, align 4, !dbg !7432
  %cmp8 = icmp ule i32 %10, 52000000, !dbg !7433
  br i1 %cmp8, label %if.then10, label %if.else15, !dbg !7434

if.then10:                                        ; preds = %if.else
  %11 = load i32, i32* %bus_width.addr, align 4, !dbg !7435
  %cmp11 = icmp ule i32 %11, 2, !dbg !7436
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !7437

cond.true:                                        ; preds = %if.then10
  %12 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7438
  %raw_pwr_cl_52_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %12, i32 0, i32 53, !dbg !7439
  %13 = load i8, i8* %raw_pwr_cl_52_195, align 1, !dbg !7439
  %conv13 = zext i8 %13 to i32, !dbg !7438
  br label %cond.end, !dbg !7437

cond.false:                                       ; preds = %if.then10
  %14 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7440
  %raw_pwr_cl_ddr_52_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %14, i32 0, i32 67, !dbg !7441
  %15 = load i8, i8* %raw_pwr_cl_ddr_52_195, align 1, !dbg !7441
  %conv14 = zext i8 %15 to i32, !dbg !7440
  br label %cond.end, !dbg !7437

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv13, %cond.true ], [ %conv14, %cond.false ], !dbg !7437
  store i32 %cond, i32* %pwrclass_val, align 4, !dbg !7442
  br label %if.end22, !dbg !7443

if.else15:                                        ; preds = %if.else
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7444
  %ios16 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 29, !dbg !7446
  %clock17 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios16, i32 0, i32 0, !dbg !7447
  %17 = load i32, i32* %clock17, align 4, !dbg !7447
  %cmp18 = icmp ule i32 %17, 200000000, !dbg !7448
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !7449

if.then20:                                        ; preds = %if.else15
  %18 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7450
  %raw_pwr_cl_200_195 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %18, i32 0, i32 65, !dbg !7451
  %19 = load i8, i8* %raw_pwr_cl_200_195, align 1, !dbg !7451
  %conv21 = zext i8 %19 to i32, !dbg !7450
  store i32 %conv21, i32* %pwrclass_val, align 4, !dbg !7452
  br label %if.end, !dbg !7453

if.end:                                           ; preds = %if.then20, %if.else15
  br label %if.end22

if.end22:                                         ; preds = %if.end, %cond.end
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then
  br label %sw.epilog, !dbg !7454

sw.bb24:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7455
  %ios25 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %20, i32 0, i32 29, !dbg !7457
  %clock26 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios25, i32 0, i32 0, !dbg !7458
  %21 = load i32, i32* %clock26, align 4, !dbg !7458
  %cmp27 = icmp ule i32 %21, 26000000, !dbg !7459
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !7460

if.then29:                                        ; preds = %sw.bb24
  %22 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7461
  %raw_pwr_cl_26_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %22, i32 0, i32 56, !dbg !7462
  %23 = load i8, i8* %raw_pwr_cl_26_360, align 4, !dbg !7462
  %conv30 = zext i8 %23 to i32, !dbg !7461
  store i32 %conv30, i32* %pwrclass_val, align 4, !dbg !7463
  br label %if.end61, !dbg !7464

if.else31:                                        ; preds = %sw.bb24
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7465
  %ios32 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %24, i32 0, i32 29, !dbg !7467
  %clock33 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios32, i32 0, i32 0, !dbg !7468
  %25 = load i32, i32* %clock33, align 4, !dbg !7468
  %cmp34 = icmp ule i32 %25, 52000000, !dbg !7469
  br i1 %cmp34, label %if.then36, label %if.else45, !dbg !7470

if.then36:                                        ; preds = %if.else31
  %26 = load i32, i32* %bus_width.addr, align 4, !dbg !7471
  %cmp37 = icmp ule i32 %26, 2, !dbg !7472
  br i1 %cmp37, label %cond.true39, label %cond.false41, !dbg !7473

cond.true39:                                      ; preds = %if.then36
  %27 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7474
  %raw_pwr_cl_52_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %27, i32 0, i32 55, !dbg !7475
  %28 = load i8, i8* %raw_pwr_cl_52_360, align 1, !dbg !7475
  %conv40 = zext i8 %28 to i32, !dbg !7474
  br label %cond.end43, !dbg !7473

cond.false41:                                     ; preds = %if.then36
  %29 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7476
  %raw_pwr_cl_ddr_52_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %29, i32 0, i32 68, !dbg !7477
  %30 = load i8, i8* %raw_pwr_cl_ddr_52_360, align 8, !dbg !7477
  %conv42 = zext i8 %30 to i32, !dbg !7476
  br label %cond.end43, !dbg !7473

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i32 [ %conv40, %cond.true39 ], [ %conv42, %cond.false41 ], !dbg !7473
  store i32 %cond44, i32* %pwrclass_val, align 4, !dbg !7478
  br label %if.end60, !dbg !7479

if.else45:                                        ; preds = %if.else31
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7480
  %ios46 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %31, i32 0, i32 29, !dbg !7482
  %clock47 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios46, i32 0, i32 0, !dbg !7483
  %32 = load i32, i32* %clock47, align 4, !dbg !7483
  %cmp48 = icmp ule i32 %32, 200000000, !dbg !7484
  br i1 %cmp48, label %if.then50, label %if.end59, !dbg !7485

if.then50:                                        ; preds = %if.else45
  %33 = load i32, i32* %bus_width.addr, align 4, !dbg !7486
  %cmp51 = icmp eq i32 %33, 6, !dbg !7487
  br i1 %cmp51, label %cond.true53, label %cond.false55, !dbg !7488

cond.true53:                                      ; preds = %if.then50
  %34 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7489
  %raw_pwr_cl_ddr_200_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %34, i32 0, i32 69, !dbg !7490
  %35 = load i8, i8* %raw_pwr_cl_ddr_200_360, align 1, !dbg !7490
  %conv54 = zext i8 %35 to i32, !dbg !7489
  br label %cond.end57, !dbg !7488

cond.false55:                                     ; preds = %if.then50
  %36 = load %struct.mmc_ext_csd*, %struct.mmc_ext_csd** %ext_csd, align 8, !dbg !7491
  %raw_pwr_cl_200_360 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %36, i32 0, i32 66, !dbg !7492
  %37 = load i8, i8* %raw_pwr_cl_200_360, align 2, !dbg !7492
  %conv56 = zext i8 %37 to i32, !dbg !7491
  br label %cond.end57, !dbg !7488

cond.end57:                                       ; preds = %cond.false55, %cond.true53
  %cond58 = phi i32 [ %conv54, %cond.true53 ], [ %conv56, %cond.false55 ], !dbg !7488
  store i32 %cond58, i32* %pwrclass_val, align 4, !dbg !7493
  br label %if.end59, !dbg !7494

if.end59:                                         ; preds = %cond.end57, %if.else45
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %cond.end43
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then29
  br label %sw.epilog, !dbg !7495

sw.default:                                       ; preds = %entry
  %38 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7496
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %38, i32 0, i32 1, !dbg !7496
  %call = call i8* @dev_name(%struct.device* %class_dev) #5, !dbg !7496
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.74, i64 0, i64 0), i8* %call) #6, !dbg !7496
  store i32 -22, i32* %retval, align 4, !dbg !7497
  br label %return, !dbg !7497

sw.epilog:                                        ; preds = %if.end61, %if.end23
  %39 = load i32, i32* %bus_width.addr, align 4, !dbg !7498
  %and = and i32 %39, 6, !dbg !7500
  %tobool = icmp ne i32 %and, 0, !dbg !7500
  br i1 %tobool, label %if.then63, label %if.else65, !dbg !7501

if.then63:                                        ; preds = %sw.epilog
  %40 = load i32, i32* %pwrclass_val, align 4, !dbg !7502
  %and64 = and i32 %40, 240, !dbg !7503
  %shr = lshr i32 %and64, 4, !dbg !7504
  store i32 %shr, i32* %pwrclass_val, align 4, !dbg !7505
  br label %if.end68, !dbg !7506

if.else65:                                        ; preds = %sw.epilog
  %41 = load i32, i32* %pwrclass_val, align 4, !dbg !7507
  %and66 = and i32 %41, 15, !dbg !7508
  %shr67 = lshr i32 %and66, 0, !dbg !7509
  store i32 %shr67, i32* %pwrclass_val, align 4, !dbg !7510
  br label %if.end68

if.end68:                                         ; preds = %if.else65, %if.then63
  %42 = load i32, i32* %pwrclass_val, align 4, !dbg !7511
  %cmp69 = icmp ugt i32 %42, 0, !dbg !7513
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !7514

if.then71:                                        ; preds = %if.end68
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7515
  %44 = load i32, i32* %pwrclass_val, align 4, !dbg !7517
  %conv72 = trunc i32 %44 to i8, !dbg !7517
  %45 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7518
  %ext_csd73 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %45, i32 0, i32 21, !dbg !7519
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd73, i32 0, i32 14, !dbg !7520
  %46 = load i32, i32* %generic_cmd6_time, align 4, !dbg !7520
  %call74 = call i32 @mmc_switch(%struct.mmc_card* %43, i8 zeroext 1, i8 zeroext -69, i8 zeroext %conv72, i32 %46) #5, !dbg !7521
  store i32 %call74, i32* %err, align 4, !dbg !7522
  br label %if.end75, !dbg !7523

if.end75:                                         ; preds = %if.then71, %if.end68
  %47 = load i32, i32* %err, align 4, !dbg !7524
  store i32 %47, i32* %retval, align 4, !dbg !7525
  br label %return, !dbg !7525

return:                                           ; preds = %if.end75, %sw.default
  %48 = load i32, i32* %retval, align 4, !dbg !7526
  ret i32 %48, !dbg !7526
}

; Function Attrs: noredzone
declare dso_local i32 @__mmc_claim_host(%struct.mmc_host*, %struct.mmc_ctx*, %struct.atomic_t*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { noredzone }
attributes #6 = { cold noredzone }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2647, !2648, !2649, !2650}
!llvm.ident = !{!2651}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mmc_ops", scope: !2, file: !3, line: 2198, type: !2256, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !55, globals: !2530, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/mmc/core/mmc.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !17, !23, !29, !36, !44, !50}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !12, line: 16, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !18, line: 26, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!19 = !{!20, !21, !22}
!20 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!23 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !24, line: 44, baseType: !7, size: 32, elements: !25)
!24 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!25 = !{!26, !27, !28}
!26 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!27 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !30, line: 343, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34, !35}
!32 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !37, line: 524, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !37, line: 502, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !51, line: 10, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!55 = !{!7, !56, !57, !185, !170, !119, !254, !177, !366, !258, !182}
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!58 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_card", file: !59, line: 244, size: 12672, elements: !60)
!59 = !DIFile(filename: "./include/linux/mmc/card.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2341, !2343, !2355, !2375, !2456, !2465, !2471, !2479, !2480, !2481, !2492, !2499, !2505, !2506, !2507, !2508, !2509, !2510, !2513, !2514, !2515, !2516, !2517, !2527, !2528, !2529}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !58, file: !59, line: 245, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !63, size: 64)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host", file: !64, line: 275, size: 10752, elements: !65)
!64 = !DIFile(filename: "./include/linux/mmc/host.h", directory: "/home/lizy2001/genbc/linux")
!65 = !{!66, !2027, !2028, !2029, !2156, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2236, !2237, !2238, !2247, !2248, !2254, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2281, !2288, !2291, !2292, !2293, !2294, !2295, !2296, !2317, !2318, !2319, !2320, !2321, !2322}
!66 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !63, file: !64, line: 276, baseType: !67, size: 64)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !30, line: 461, size: 5568, elements: !69)
!69 = !{!70, !1551, !1552, !1555, !1556, !1607, !1704, !1705, !1706, !1707, !1708, !1717, !1822, !1835, !1838, !1839, !1843, !1845, !1846, !1847, !1851, !1857, !1858, !1861, !1976, !1977, !1980, !1981, !1982, !1983, !2015, !2016, !2017, !2020, !2023, !2024, !2025, !2026}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !68, file: !30, line: 462, baseType: !71, size: 512)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !72, line: 64, size: 512, elements: !73)
!72 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !78, !85, !87, !148, !1387, !1541, !1546, !1547, !1548, !1549, !1550}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !71, file: !72, line: 65, baseType: !75, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !77)
!77 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !71, file: !72, line: 66, baseType: !79, size: 128, offset: 64)
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !80, line: 178, size: 128, elements: !81)
!80 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !84}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !79, file: !80, line: 179, baseType: !83, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !79, file: !80, line: 179, baseType: !83, size: 64, offset: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !71, file: !72, line: 67, baseType: !86, size: 64, offset: 192)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !71, file: !72, line: 68, baseType: !88, size: 64, offset: 256)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !72, line: 192, size: 704, elements: !90)
!90 = !{!91, !92, !108, !109}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !89, file: !72, line: 193, baseType: !79, size: 128)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !89, file: !72, line: 194, baseType: !93, offset: 128)
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !94, line: 83, baseType: !95)
!94 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!95 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !94, line: 71, elements: !96)
!96 = !{!97}
!97 = !DIDerivedType(tag: DW_TAG_member, scope: !95, file: !94, line: 72, baseType: !98)
!98 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !95, file: !94, line: 72, elements: !99)
!99 = !{!100}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !98, file: !94, line: 73, baseType: !101)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !94, line: 20, elements: !102)
!102 = !{!103}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !101, file: !94, line: 21, baseType: !104)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !105, line: 25, baseType: !106)
!105 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 25, elements: !107)
!107 = !{}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !89, file: !72, line: 195, baseType: !71, size: 512, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !89, file: !72, line: 196, baseType: !110, size: 64, offset: 640)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !112)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !72, line: 156, size: 192, elements: !113)
!113 = !{!114, !120, !125}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !112, file: !72, line: 157, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DISubroutineType(types: !118)
!118 = !{!119, !88, !86}
!119 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !112, file: !72, line: 158, baseType: !121, size: 64, offset: 64)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DISubroutineType(types: !124)
!124 = !{!75, !88, !86}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !112, file: !72, line: 159, baseType: !126, size: 64, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !127)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DISubroutineType(types: !129)
!129 = !{!119, !88, !86, !130}
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !72, line: 148, size: 20736, elements: !132)
!132 = !{!133, !138, !142, !143, !147}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !131, file: !72, line: 149, baseType: !134, size: 192)
!134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 192, elements: !136)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!136 = !{!137}
!137 = !DISubrange(count: 3)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !131, file: !72, line: 150, baseType: !139, size: 4096, offset: 192)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 4096, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !131, file: !72, line: 151, baseType: !119, size: 32, offset: 4288)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !131, file: !72, line: 152, baseType: !144, size: 16384, offset: 4320)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 16384, elements: !145)
!145 = !{!146}
!146 = !DISubrange(count: 2048)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !131, file: !72, line: 153, baseType: !119, size: 32, offset: 20704)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !71, file: !72, line: 69, baseType: !149, size: 64, offset: 320)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !72, line: 138, size: 448, elements: !151)
!151 = !{!152, !156, !186, !188, !1332, !1365, !1369}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !150, file: !72, line: 139, baseType: !153, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = !DISubroutineType(types: !155)
!155 = !{null, !86}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !150, file: !72, line: 140, baseType: !157, size: 64, offset: 64)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !160, line: 230, size: 128, elements: !161)
!160 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!161 = !{!162, !178}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !159, file: !160, line: 231, baseType: !163, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DISubroutineType(types: !165)
!165 = !{!166, !86, !171, !135}
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !80, line: 60, baseType: !167)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !168, line: 73, baseType: !169)
!168 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !168, line: 15, baseType: !170)
!170 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !160, line: 30, size: 128, elements: !173)
!173 = !{!174, !175}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !172, file: !160, line: 31, baseType: !75, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !172, file: !160, line: 32, baseType: !176, size: 16, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !80, line: 19, baseType: !177)
!177 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !159, file: !160, line: 232, baseType: !179, size: 64, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DISubroutineType(types: !181)
!181 = !{!166, !86, !171, !75, !182}
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !80, line: 55, baseType: !183)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !168, line: 72, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !168, line: 16, baseType: !185)
!185 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !150, file: !72, line: 141, baseType: !187, size: 64, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !150, file: !72, line: 142, baseType: !189, size: 64, offset: 192)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !160, line: 84, size: 320, elements: !193)
!193 = !{!194, !195, !199, !1329, !1330}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !192, file: !160, line: 85, baseType: !75, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !192, file: !160, line: 86, baseType: !196, size: 64, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{!176, !86, !171, !119}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !192, file: !160, line: 88, baseType: !200, size: 64, offset: 128)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DISubroutineType(types: !202)
!202 = !{!176, !86, !203, !119}
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !160, line: 168, size: 448, elements: !205)
!205 = !{!206, !207, !208, !209, !219, !220}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !204, file: !160, line: 169, baseType: !172, size: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !204, file: !160, line: 170, baseType: !182, size: 64, offset: 128)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !204, file: !160, line: 171, baseType: !56, size: 64, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !204, file: !160, line: 172, baseType: !210, size: 64, offset: 256)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = !DISubroutineType(types: !212)
!212 = !{!166, !213, !86, !203, !135, !216, !182}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !215, line: 526, flags: DIFlagFwdDecl)
!215 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !80, line: 46, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !168, line: 88, baseType: !218)
!218 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !204, file: !160, line: 174, baseType: !210, size: 64, offset: 320)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !204, file: !160, line: 176, baseType: !221, size: 64, offset: 384)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = !DISubroutineType(types: !223)
!223 = !{!119, !213, !86, !203, !224}
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !226, line: 305, size: 1472, elements: !227)
!226 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!227 = !{!228, !229, !230, !231, !232, !240, !241, !1303, !1309, !1310, !1315, !1316, !1319, !1323, !1324, !1325, !1326, !1327}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !225, file: !226, line: 308, baseType: !185, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !225, file: !226, line: 309, baseType: !185, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !225, file: !226, line: 313, baseType: !224, size: 64, offset: 128)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !225, file: !226, line: 313, baseType: !224, size: 64, offset: 192)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !225, file: !226, line: 315, baseType: !233, size: 192, align: 64, offset: 256)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !234, line: 24, size: 192, align: 64, elements: !235)
!234 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!235 = !{!236, !237, !239}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !233, file: !234, line: 25, baseType: !185, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !233, file: !234, line: 26, baseType: !238, size: 64, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !233, file: !234, line: 27, baseType: !238, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !225, file: !226, line: 323, baseType: !185, size: 64, offset: 448)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !225, file: !226, line: 327, baseType: !242, size: 64, offset: 512)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !226, line: 388, size: 7296, elements: !244)
!244 = !{!245, !1299}
!245 = !DIDerivedType(tag: DW_TAG_member, scope: !243, file: !226, line: 389, baseType: !246, size: 7296)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !243, file: !226, line: 389, size: 7296, elements: !247)
!247 = !{!248, !249, !253, !259, !263, !264, !265, !266, !267, !275, !280, !281, !282, !283, !292, !293, !294, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !329, !337, !340, !372, !373, !1270, !1271, !1274, !1277, !1278, !1281, !1282, !1283, !1286, !1298}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !246, file: !226, line: 390, baseType: !224, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !246, file: !226, line: 391, baseType: !250, size: 64, offset: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !234, line: 31, size: 64, elements: !251)
!251 = !{!252}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !250, file: !234, line: 32, baseType: !238, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !246, file: !226, line: 392, baseType: !254, size: 64, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !255, line: 23, baseType: !256)
!255 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !257, line: 31, baseType: !258)
!257 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!258 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !246, file: !226, line: 394, baseType: !260, size: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = !DISubroutineType(types: !262)
!262 = !{!185, !213, !185, !185, !185, !185}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !246, file: !226, line: 398, baseType: !185, size: 64, offset: 256)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !246, file: !226, line: 399, baseType: !185, size: 64, offset: 320)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !246, file: !226, line: 405, baseType: !185, size: 64, offset: 384)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !246, file: !226, line: 406, baseType: !185, size: 64, offset: 448)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !246, file: !226, line: 407, baseType: !268, size: 64, offset: 512)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !215, line: 286, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 286, size: 64, elements: !271)
!271 = !{!272}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !270, file: !215, line: 286, baseType: !273, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !274, line: 18, baseType: !185)
!274 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!275 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !246, file: !226, line: 416, baseType: !276, size: 32, offset: 576)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !80, line: 168, baseType: !277)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !80, line: 166, size: 32, elements: !278)
!278 = !{!279}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !277, file: !80, line: 167, baseType: !119, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !246, file: !226, line: 428, baseType: !276, size: 32, offset: 608)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !246, file: !226, line: 437, baseType: !276, size: 32, offset: 640)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !246, file: !226, line: 447, baseType: !276, size: 32, offset: 672)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !246, file: !226, line: 450, baseType: !284, size: 64, offset: 704)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !285, line: 13, baseType: !286)
!285 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !80, line: 175, baseType: !287)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !80, line: 173, size: 64, elements: !288)
!288 = !{!289}
!289 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !287, file: !80, line: 174, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !255, line: 22, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !257, line: 30, baseType: !218)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !246, file: !226, line: 452, baseType: !119, size: 32, offset: 768)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !246, file: !226, line: 454, baseType: !93, offset: 800)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !246, file: !226, line: 457, baseType: !295, size: 256, offset: 832)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !296, line: 35, size: 256, elements: !297)
!296 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!297 = !{!298, !299, !300, !302}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !295, file: !296, line: 36, baseType: !284, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !295, file: !296, line: 42, baseType: !284, size: 64, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !295, file: !296, line: 46, baseType: !301, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !94, line: 29, baseType: !101)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !295, file: !296, line: 47, baseType: !79, size: 128, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !246, file: !226, line: 459, baseType: !79, size: 128, offset: 1088)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !246, file: !226, line: 466, baseType: !185, size: 64, offset: 1216)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !246, file: !226, line: 467, baseType: !185, size: 64, offset: 1280)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !246, file: !226, line: 469, baseType: !185, size: 64, offset: 1344)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !246, file: !226, line: 470, baseType: !185, size: 64, offset: 1408)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !246, file: !226, line: 471, baseType: !286, size: 64, offset: 1472)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !246, file: !226, line: 472, baseType: !185, size: 64, offset: 1536)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !246, file: !226, line: 473, baseType: !185, size: 64, offset: 1600)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !246, file: !226, line: 474, baseType: !185, size: 64, offset: 1664)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !246, file: !226, line: 475, baseType: !185, size: 64, offset: 1728)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !246, file: !226, line: 477, baseType: !93, offset: 1792)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !246, file: !226, line: 478, baseType: !185, size: 64, offset: 1792)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !246, file: !226, line: 478, baseType: !185, size: 64, offset: 1856)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !246, file: !226, line: 478, baseType: !185, size: 64, offset: 1920)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !246, file: !226, line: 478, baseType: !185, size: 64, offset: 1984)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !246, file: !226, line: 479, baseType: !185, size: 64, offset: 2048)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !246, file: !226, line: 479, baseType: !185, size: 64, offset: 2112)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !246, file: !226, line: 479, baseType: !185, size: 64, offset: 2176)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !246, file: !226, line: 480, baseType: !185, size: 64, offset: 2240)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !246, file: !226, line: 480, baseType: !185, size: 64, offset: 2304)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !246, file: !226, line: 480, baseType: !185, size: 64, offset: 2368)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !246, file: !226, line: 480, baseType: !185, size: 64, offset: 2432)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !246, file: !226, line: 482, baseType: !326, size: 2816, offset: 2496)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 2816, elements: !327)
!327 = !{!328}
!328 = !DISubrange(count: 44)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !246, file: !226, line: 488, baseType: !330, size: 256, offset: 5312)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !331, line: 60, size: 256, elements: !332)
!331 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!332 = !{!333}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !330, file: !331, line: 61, baseType: !334, size: 256)
!334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !335)
!335 = !{!336}
!336 = !DISubrange(count: 4)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !246, file: !226, line: 490, baseType: !338, size: 64, offset: 5568)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !226, line: 490, flags: DIFlagFwdDecl)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !246, file: !226, line: 493, baseType: !341, size: 896, offset: 5632)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !342, line: 53, baseType: !343)
!342 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !342, line: 13, size: 896, elements: !344)
!344 = !{!345, !346, !347, !348, !351, !352, !359, !360, !364, !365, !368}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !343, file: !342, line: 18, baseType: !254, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !343, file: !342, line: 28, baseType: !286, size: 64, offset: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !343, file: !342, line: 31, baseType: !295, size: 256, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !343, file: !342, line: 32, baseType: !349, size: 64, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !342, line: 32, flags: DIFlagFwdDecl)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !343, file: !342, line: 37, baseType: !177, size: 16, offset: 448)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !343, file: !342, line: 40, baseType: !353, size: 192, offset: 512)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !354, line: 53, size: 192, elements: !355)
!354 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!355 = !{!356, !357, !358}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !353, file: !354, line: 54, baseType: !284, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !353, file: !354, line: 55, baseType: !93, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !353, file: !354, line: 59, baseType: !79, size: 128, offset: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !343, file: !342, line: 41, baseType: !56, size: 64, offset: 704)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !343, file: !342, line: 42, baseType: !361, size: 64, offset: 768)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !342, line: 42, flags: DIFlagFwdDecl)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !343, file: !342, line: 44, baseType: !276, size: 32, offset: 832)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !343, file: !342, line: 50, baseType: !366, size: 16, offset: 864)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !255, line: 19, baseType: !367)
!367 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !257, line: 24, baseType: !177)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !343, file: !342, line: 51, baseType: !369, size: 16, offset: 880)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !255, line: 18, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !257, line: 23, baseType: !371)
!371 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !246, file: !226, line: 495, baseType: !185, size: 64, offset: 6528)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !246, file: !226, line: 497, baseType: !374, size: 64, offset: 6592)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !226, line: 381, size: 384, elements: !376)
!376 = !{!377, !378, !1269}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !375, file: !226, line: 382, baseType: !276, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !375, file: !226, line: 383, baseType: !379, size: 128, offset: 64)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !226, line: 376, size: 128, elements: !380)
!380 = !{!381, !1267}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !379, file: !226, line: 377, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !384, line: 640, size: 48640, elements: !385)
!384 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!385 = !{!386, !394, !396, !397, !403, !404, !405, !406, !407, !408, !409, !410, !414, !432, !443, !538, !539, !540, !551, !552, !554, !555, !556, !557, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !636, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !692, !694, !695, !696, !708, !710, !711, !712, !713, !714, !720, !721, !722, !723, !724, !725, !726, !738, !743, !747, !748, !749, !752, !756, !759, !762, !765, !768, !771, !774, !777, !783, !784, !785, !791, !792, !793, !794, !795, !804, !805, !806, !807, !808, !813, !814, !815, !818, !819, !822, !825, !828, !831, !834, !837, !838, !918, !921, !924, !925, !928, !929, !930, !936, !937, !938, !951, !952, !953, !965, !970, !973, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !383, file: !384, line: 646, baseType: !387, size: 128)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !388, line: 56, size: 128, elements: !389)
!388 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!389 = !{!390, !391}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !387, file: !388, line: 57, baseType: !185, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !387, file: !388, line: 58, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !255, line: 21, baseType: !393)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !257, line: 27, baseType: !7)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !383, file: !384, line: 649, baseType: !395, size: 64, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !170)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !383, file: !384, line: 657, baseType: !56, size: 64, offset: 192)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !383, file: !384, line: 658, baseType: !398, size: 32, offset: 256)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !399, line: 113, baseType: !400)
!399 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !399, line: 111, size: 32, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !400, file: !399, line: 112, baseType: !276, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !383, file: !384, line: 660, baseType: !7, size: 32, offset: 288)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !383, file: !384, line: 661, baseType: !7, size: 32, offset: 320)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !383, file: !384, line: 684, baseType: !119, size: 32, offset: 352)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !383, file: !384, line: 686, baseType: !119, size: 32, offset: 384)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !383, file: !384, line: 687, baseType: !119, size: 32, offset: 416)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !383, file: !384, line: 688, baseType: !119, size: 32, offset: 448)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !383, file: !384, line: 689, baseType: !7, size: 32, offset: 480)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !383, file: !384, line: 691, baseType: !411, size: 64, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!413 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !384, line: 691, flags: DIFlagFwdDecl)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !383, file: !384, line: 692, baseType: !415, size: 832, offset: 576)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !384, line: 451, size: 832, elements: !416)
!416 = !{!417, !422, !423, !424, !425, !426, !427, !428, !429, !430}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !415, file: !384, line: 453, baseType: !418, size: 128)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !384, line: 325, size: 128, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !418, file: !384, line: 326, baseType: !185, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !418, file: !384, line: 327, baseType: !392, size: 32, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !415, file: !384, line: 454, baseType: !233, size: 192, align: 64, offset: 128)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !415, file: !384, line: 455, baseType: !79, size: 128, offset: 320)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !415, file: !384, line: 456, baseType: !7, size: 32, offset: 448)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !415, file: !384, line: 458, baseType: !254, size: 64, offset: 512)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !415, file: !384, line: 459, baseType: !254, size: 64, offset: 576)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !415, file: !384, line: 460, baseType: !254, size: 64, offset: 640)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !415, file: !384, line: 461, baseType: !254, size: 64, offset: 704)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !415, file: !384, line: 463, baseType: !254, size: 64, offset: 768)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !415, file: !384, line: 465, baseType: !431, offset: 832)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !384, line: 415, elements: !107)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !383, file: !384, line: 693, baseType: !433, size: 384, offset: 1408)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !384, line: 489, size: 384, elements: !434)
!434 = !{!435, !436, !437, !438, !439, !440, !441}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !433, file: !384, line: 490, baseType: !79, size: 128)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !433, file: !384, line: 491, baseType: !185, size: 64, offset: 128)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !433, file: !384, line: 492, baseType: !185, size: 64, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !433, file: !384, line: 493, baseType: !7, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !433, file: !384, line: 494, baseType: !177, size: 16, offset: 288)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !433, file: !384, line: 495, baseType: !177, size: 16, offset: 304)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !433, file: !384, line: 497, baseType: !442, size: 64, offset: 320)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !383, file: !384, line: 697, baseType: !444, size: 1792, offset: 1792)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !384, line: 507, size: 1792, elements: !445)
!445 = !{!446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !535, !536}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !444, file: !384, line: 508, baseType: !233, size: 192, align: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !444, file: !384, line: 515, baseType: !254, size: 64, offset: 192)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !444, file: !384, line: 516, baseType: !254, size: 64, offset: 256)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !444, file: !384, line: 517, baseType: !254, size: 64, offset: 320)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !444, file: !384, line: 518, baseType: !254, size: 64, offset: 384)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !444, file: !384, line: 519, baseType: !254, size: 64, offset: 448)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !444, file: !384, line: 526, baseType: !290, size: 64, offset: 512)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !444, file: !384, line: 527, baseType: !254, size: 64, offset: 576)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !444, file: !384, line: 528, baseType: !7, size: 32, offset: 640)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !444, file: !384, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !444, file: !384, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !444, file: !384, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !444, file: !384, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !444, file: !384, line: 563, baseType: !460, size: 512, offset: 704)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !461)
!461 = !{!462, !470, !471, !476, !528, !532, !533, !534}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !460, file: !6, line: 119, baseType: !463, size: 256)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !464, line: 9, size: 256, elements: !465)
!464 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !463, file: !464, line: 10, baseType: !233, size: 192, align: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !463, file: !464, line: 11, baseType: !468, size: 64, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !469, line: 29, baseType: !290)
!469 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !460, file: !6, line: 120, baseType: !468, size: 64, offset: 256)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !460, file: !6, line: 121, baseType: !472, size: 64, offset: 320)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DISubroutineType(types: !474)
!474 = !{!5, !475}
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !460, file: !6, line: 122, baseType: !477, size: 64, offset: 384)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !479)
!479 = !{!480, !500, !501, !504, !514, !515, !523, !527}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !478, file: !6, line: 160, baseType: !481, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !483)
!483 = !{!484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !6, line: 215, baseType: !301)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !482, file: !6, line: 216, baseType: !7, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !482, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !482, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !482, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !482, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !482, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !482, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !482, file: !6, line: 233, baseType: !468, size: 64, offset: 128)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !482, file: !6, line: 234, baseType: !475, size: 64, offset: 192)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !482, file: !6, line: 235, baseType: !468, size: 64, offset: 256)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !482, file: !6, line: 236, baseType: !475, size: 64, offset: 320)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !482, file: !6, line: 237, baseType: !497, size: 4096, offset: 512)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !478, size: 4096, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 8)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !478, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !478, file: !6, line: 162, baseType: !502, size: 32, offset: 96)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !80, line: 27, baseType: !503)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !168, line: 96, baseType: !119)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !478, file: !6, line: 163, baseType: !505, size: 32, offset: 128)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !506, line: 276, baseType: !507)
!506 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !506, line: 276, size: 32, elements: !508)
!508 = !{!509}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !507, file: !506, line: 276, baseType: !510, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !506, line: 70, baseType: !511)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !506, line: 65, size: 32, elements: !512)
!512 = !{!513}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !511, file: !506, line: 66, baseType: !7, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !478, file: !6, line: 164, baseType: !475, size: 64, offset: 192)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !478, file: !6, line: 165, baseType: !516, size: 128, offset: 256)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !464, line: 14, size: 128, elements: !517)
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !516, file: !464, line: 15, baseType: !519, size: 128)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !234, line: 125, size: 128, elements: !520)
!520 = !{!521, !522}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !519, file: !234, line: 126, baseType: !250, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !519, file: !234, line: 127, baseType: !238, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !478, file: !6, line: 166, baseType: !524, size: 64, offset: 384)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DISubroutineType(types: !526)
!526 = !{!468}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !478, file: !6, line: 167, baseType: !468, size: 64, offset: 448)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !460, file: !6, line: 123, baseType: !529, size: 8, offset: 448)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !255, line: 17, baseType: !530)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !257, line: 21, baseType: !531)
!531 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !460, file: !6, line: 124, baseType: !529, size: 8, offset: 456)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !460, file: !6, line: 125, baseType: !529, size: 8, offset: 464)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !460, file: !6, line: 126, baseType: !529, size: 8, offset: 472)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !444, file: !384, line: 572, baseType: !460, size: 512, offset: 1216)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !444, file: !384, line: 580, baseType: !537, size: 64, offset: 1728)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !383, file: !384, line: 721, baseType: !7, size: 32, offset: 3584)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !383, file: !384, line: 722, baseType: !119, size: 32, offset: 3616)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !383, file: !384, line: 723, baseType: !541, size: 64, offset: 3648)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !544, line: 17, baseType: !545)
!544 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !544, line: 17, size: 64, elements: !546)
!546 = !{!547}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !545, file: !544, line: 17, baseType: !548, size: 64)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 64, elements: !549)
!549 = !{!550}
!550 = !DISubrange(count: 1)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !383, file: !384, line: 724, baseType: !543, size: 64, offset: 3712)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !383, file: !384, line: 749, baseType: !553, offset: 3776)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !384, line: 290, elements: !107)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !383, file: !384, line: 751, baseType: !79, size: 128, offset: 3776)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !383, file: !384, line: 757, baseType: !242, size: 64, offset: 3904)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !383, file: !384, line: 758, baseType: !242, size: 64, offset: 3968)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !383, file: !384, line: 761, baseType: !558, size: 320, offset: 4032)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !331, line: 34, size: 320, elements: !559)
!559 = !{!560, !561}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !558, file: !331, line: 35, baseType: !254, size: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !558, file: !331, line: 36, baseType: !562, size: 256, offset: 64)
!562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !335)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !383, file: !384, line: 766, baseType: !119, size: 32, offset: 4352)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !383, file: !384, line: 767, baseType: !119, size: 32, offset: 4384)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !383, file: !384, line: 768, baseType: !119, size: 32, offset: 4416)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !383, file: !384, line: 770, baseType: !119, size: 32, offset: 4448)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !383, file: !384, line: 772, baseType: !185, size: 64, offset: 4480)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !383, file: !384, line: 775, baseType: !7, size: 32, offset: 4544)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !383, file: !384, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !383, file: !384, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !383, file: !384, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !383, file: !384, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !383, file: !384, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !383, file: !384, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !383, file: !384, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !383, file: !384, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !383, file: !384, line: 831, baseType: !185, size: 64, offset: 4672)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !383, file: !384, line: 833, baseType: !579, size: 384, offset: 4736)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !12, line: 25, size: 384, elements: !580)
!580 = !{!581, !586}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !579, file: !12, line: 26, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!170, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, scope: !579, file: !12, line: 27, baseType: !587, size: 320, offset: 64)
!587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !579, file: !12, line: 27, size: 320, elements: !588)
!588 = !{!589, !599, !626}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !587, file: !12, line: 36, baseType: !590, size: 320)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !587, file: !12, line: 29, size: 320, elements: !591)
!591 = !{!592, !594, !595, !596, !597, !598}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !590, file: !12, line: 30, baseType: !593, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !590, file: !12, line: 31, baseType: !392, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !590, file: !12, line: 32, baseType: !392, size: 32, offset: 96)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !590, file: !12, line: 33, baseType: !392, size: 32, offset: 128)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !590, file: !12, line: 34, baseType: !254, size: 64, offset: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !590, file: !12, line: 35, baseType: !593, size: 64, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !587, file: !12, line: 46, baseType: !600, size: 192)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !587, file: !12, line: 38, size: 192, elements: !601)
!601 = !{!602, !603, !604, !625}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !600, file: !12, line: 39, baseType: !502, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !600, file: !12, line: 40, baseType: !11, size: 32, offset: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !600, file: !12, line: 41, baseType: !605, size: 64, offset: 64)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !600, file: !12, line: 41, size: 64, elements: !606)
!606 = !{!607, !615}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !605, file: !12, line: 42, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !610, line: 7, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !614}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !609, file: !610, line: 8, baseType: !613, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !168, line: 93, baseType: !218)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !609, file: !610, line: 9, baseType: !218, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !605, file: !12, line: 43, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !618, line: 7, size: 64, elements: !619)
!618 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!619 = !{!620, !624}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !617, file: !618, line: 8, baseType: !621, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !618, line: 5, baseType: !622)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !255, line: 20, baseType: !623)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !257, line: 26, baseType: !119)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !617, file: !618, line: 9, baseType: !622, size: 32, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !600, file: !12, line: 45, baseType: !254, size: 64, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !587, file: !12, line: 54, baseType: !627, size: 256)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !587, file: !12, line: 48, size: 256, elements: !628)
!628 = !{!629, !632, !633, !634, !635}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !627, file: !12, line: 49, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !12, line: 14, flags: DIFlagFwdDecl)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !627, file: !12, line: 50, baseType: !119, size: 32, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !627, file: !12, line: 51, baseType: !119, size: 32, offset: 96)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !627, file: !12, line: 52, baseType: !185, size: 64, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !627, file: !12, line: 53, baseType: !185, size: 64, offset: 192)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !383, file: !384, line: 835, baseType: !637, size: 32, offset: 5120)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !80, line: 22, baseType: !638)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !168, line: 28, baseType: !119)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !383, file: !384, line: 836, baseType: !637, size: 32, offset: 5152)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !383, file: !384, line: 840, baseType: !185, size: 64, offset: 5184)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !383, file: !384, line: 849, baseType: !382, size: 64, offset: 5248)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !383, file: !384, line: 852, baseType: !382, size: 64, offset: 5312)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !383, file: !384, line: 857, baseType: !79, size: 128, offset: 5376)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !383, file: !384, line: 858, baseType: !79, size: 128, offset: 5504)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !383, file: !384, line: 859, baseType: !382, size: 64, offset: 5632)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !383, file: !384, line: 867, baseType: !79, size: 128, offset: 5696)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !383, file: !384, line: 868, baseType: !79, size: 128, offset: 5824)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !383, file: !384, line: 871, baseType: !649, size: 64, offset: 5952)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !651, line: 59, size: 768, elements: !652)
!651 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!652 = !{!653, !654, !655, !656, !667, !668, !675, !684}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !650, file: !651, line: 61, baseType: !398, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !650, file: !651, line: 62, baseType: !7, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !650, file: !651, line: 63, baseType: !93, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !650, file: !651, line: 65, baseType: !657, size: 256, offset: 64)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 256, elements: !335)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !80, line: 182, size: 64, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !658, file: !80, line: 183, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !80, line: 186, size: 128, elements: !663)
!663 = !{!664, !665}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !662, file: !80, line: 187, baseType: !661, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !662, file: !80, line: 187, baseType: !666, size: 64, offset: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !650, file: !651, line: 66, baseType: !658, size: 64, offset: 320)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !650, file: !651, line: 68, baseType: !669, size: 128, offset: 384)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !670, line: 40, baseType: !671)
!670 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !670, line: 36, size: 128, elements: !672)
!672 = !{!673, !674}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !671, file: !670, line: 37, baseType: !93)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !671, file: !670, line: 38, baseType: !79, size: 128)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !650, file: !651, line: 69, baseType: !676, size: 128, align: 64, offset: 512)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !80, line: 216, size: 128, align: 64, elements: !677)
!677 = !{!678, !680}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !676, file: !80, line: 217, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !676, file: !80, line: 218, baseType: !681, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{null, !679}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !650, file: !651, line: 70, baseType: !685, size: 128, offset: 640)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !686, size: 128, elements: !549)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !651, line: 54, size: 128, elements: !687)
!687 = !{!688, !689}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !686, file: !651, line: 55, baseType: !119, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !686, file: !651, line: 56, baseType: !690, size: 64, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !651, line: 56, flags: DIFlagFwdDecl)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !383, file: !384, line: 872, baseType: !693, size: 512, offset: 6016)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !662, size: 512, elements: !335)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !383, file: !384, line: 873, baseType: !79, size: 128, offset: 6528)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !383, file: !384, line: 874, baseType: !79, size: 128, offset: 6656)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !383, file: !384, line: 876, baseType: !697, size: 64, offset: 6784)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !699, line: 26, size: 192, elements: !700)
!699 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!700 = !{!701, !702}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !698, file: !699, line: 27, baseType: !7, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !698, file: !699, line: 28, baseType: !703, size: 128, offset: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !704, line: 43, size: 128, elements: !705)
!704 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !703, file: !704, line: 44, baseType: !301)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !703, file: !704, line: 45, baseType: !79, size: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !383, file: !384, line: 879, baseType: !709, size: 64, offset: 6848)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !383, file: !384, line: 882, baseType: !709, size: 64, offset: 6912)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !383, file: !384, line: 884, baseType: !254, size: 64, offset: 6976)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !383, file: !384, line: 885, baseType: !254, size: 64, offset: 7040)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !383, file: !384, line: 890, baseType: !254, size: 64, offset: 7104)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !383, file: !384, line: 891, baseType: !715, size: 128, offset: 7168)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !384, line: 242, size: 128, elements: !716)
!716 = !{!717, !718, !719}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !715, file: !384, line: 244, baseType: !254, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !715, file: !384, line: 245, baseType: !254, size: 64, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !715, file: !384, line: 246, baseType: !301, offset: 128)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !383, file: !384, line: 900, baseType: !185, size: 64, offset: 7296)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !383, file: !384, line: 901, baseType: !185, size: 64, offset: 7360)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !383, file: !384, line: 904, baseType: !254, size: 64, offset: 7424)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !383, file: !384, line: 907, baseType: !254, size: 64, offset: 7488)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !383, file: !384, line: 910, baseType: !185, size: 64, offset: 7552)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !383, file: !384, line: 911, baseType: !185, size: 64, offset: 7616)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !383, file: !384, line: 914, baseType: !727, size: 640, offset: 7680)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !728, line: 123, size: 640, elements: !729)
!728 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!729 = !{!730, !736, !737}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !727, file: !728, line: 124, baseType: !731, size: 576)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !732, size: 576, elements: !136)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !728, line: 108, size: 192, elements: !733)
!733 = !{!734, !735}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !732, file: !728, line: 109, baseType: !254, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !732, file: !728, line: 110, baseType: !516, size: 128, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !727, file: !728, line: 125, baseType: !7, size: 32, offset: 576)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !727, file: !728, line: 126, baseType: !7, size: 32, offset: 608)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !383, file: !384, line: 917, baseType: !739, size: 192, offset: 8320)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !728, line: 134, size: 192, elements: !740)
!740 = !{!741, !742}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !739, file: !728, line: 135, baseType: !676, size: 128, align: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !739, file: !728, line: 136, baseType: !7, size: 32, offset: 128)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !383, file: !384, line: 923, baseType: !744, size: 64, offset: 8512)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !746)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !384, line: 923, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !383, file: !384, line: 926, baseType: !744, size: 64, offset: 8576)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !383, file: !384, line: 929, baseType: !744, size: 64, offset: 8640)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !383, file: !384, line: 933, baseType: !750, size: 64, offset: 8704)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !384, line: 933, flags: DIFlagFwdDecl)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !383, file: !384, line: 943, baseType: !753, size: 128, offset: 8768)
!753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 128, elements: !754)
!754 = !{!755}
!755 = !DISubrange(count: 16)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !383, file: !384, line: 945, baseType: !757, size: 64, offset: 8896)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !384, line: 49, flags: DIFlagFwdDecl)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !383, file: !384, line: 956, baseType: !760, size: 64, offset: 8960)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !384, line: 45, flags: DIFlagFwdDecl)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !383, file: !384, line: 959, baseType: !763, size: 64, offset: 9024)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !384, line: 959, flags: DIFlagFwdDecl)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !383, file: !384, line: 962, baseType: !766, size: 64, offset: 9088)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !384, line: 66, flags: DIFlagFwdDecl)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !383, file: !384, line: 966, baseType: !769, size: 64, offset: 9152)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !384, line: 50, flags: DIFlagFwdDecl)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !383, file: !384, line: 969, baseType: !772, size: 64, offset: 9216)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !728, line: 223, flags: DIFlagFwdDecl)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !383, file: !384, line: 970, baseType: !775, size: 64, offset: 9280)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !384, line: 62, flags: DIFlagFwdDecl)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !383, file: !384, line: 971, baseType: !778, size: 64, offset: 9344)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !779, line: 25, baseType: !780)
!779 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !779, line: 23, size: 64, elements: !781)
!781 = !{!782}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !780, file: !779, line: 24, baseType: !548, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !383, file: !384, line: 972, baseType: !778, size: 64, offset: 9408)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !383, file: !384, line: 974, baseType: !778, size: 64, offset: 9472)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !383, file: !384, line: 975, baseType: !786, size: 192, offset: 9536)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !787, line: 30, size: 192, elements: !788)
!787 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!788 = !{!789, !790}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !786, file: !787, line: 31, baseType: !79, size: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !786, file: !787, line: 32, baseType: !778, size: 64, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !383, file: !384, line: 976, baseType: !185, size: 64, offset: 9728)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !383, file: !384, line: 977, baseType: !182, size: 64, offset: 9792)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !383, file: !384, line: 978, baseType: !7, size: 32, offset: 9856)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !383, file: !384, line: 980, baseType: !679, size: 64, offset: 9920)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !383, file: !384, line: 989, baseType: !796, size: 128, offset: 9984)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !797, line: 35, size: 128, elements: !798)
!797 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!798 = !{!799, !800, !801}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !796, file: !797, line: 36, baseType: !119, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !796, file: !797, line: 37, baseType: !276, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !796, file: !797, line: 38, baseType: !802, size: 64, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !797, line: 23, flags: DIFlagFwdDecl)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !383, file: !384, line: 992, baseType: !254, size: 64, offset: 10112)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !383, file: !384, line: 993, baseType: !254, size: 64, offset: 10176)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !383, file: !384, line: 996, baseType: !93, offset: 10240)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !383, file: !384, line: 999, baseType: !301, offset: 10240)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !383, file: !384, line: 1001, baseType: !809, size: 64, offset: 10240)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !384, line: 636, size: 64, elements: !810)
!810 = !{!811}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !809, file: !384, line: 637, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !383, file: !384, line: 1005, baseType: !519, size: 128, offset: 10304)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !383, file: !384, line: 1007, baseType: !382, size: 64, offset: 10432)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !383, file: !384, line: 1009, baseType: !816, size: 64, offset: 10496)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !384, line: 1009, flags: DIFlagFwdDecl)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !383, file: !384, line: 1043, baseType: !56, size: 64, offset: 10560)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !383, file: !384, line: 1046, baseType: !820, size: 64, offset: 10624)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !384, line: 41, flags: DIFlagFwdDecl)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !383, file: !384, line: 1050, baseType: !823, size: 64, offset: 10688)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !384, line: 42, flags: DIFlagFwdDecl)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !383, file: !384, line: 1054, baseType: !826, size: 64, offset: 10752)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !384, line: 55, flags: DIFlagFwdDecl)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !383, file: !384, line: 1056, baseType: !829, size: 64, offset: 10816)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !384, line: 40, flags: DIFlagFwdDecl)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !383, file: !384, line: 1058, baseType: !832, size: 64, offset: 10880)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !384, line: 47, flags: DIFlagFwdDecl)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !383, file: !384, line: 1061, baseType: !835, size: 64, offset: 10944)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !384, line: 43, flags: DIFlagFwdDecl)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !383, file: !384, line: 1064, baseType: !185, size: 64, offset: 11008)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !383, file: !384, line: 1065, baseType: !839, size: 64, offset: 11072)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !787, line: 14, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !787, line: 12, size: 384, elements: !842)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !787, line: 13, baseType: !844, size: 384)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !787, line: 13, size: 384, elements: !845)
!845 = !{!846, !847, !848, !849}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !844, file: !787, line: 13, baseType: !119, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !844, file: !787, line: 13, baseType: !119, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !844, file: !787, line: 13, baseType: !119, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !844, file: !787, line: 13, baseType: !850, size: 256, offset: 128)
!850 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !851, line: 32, size: 256, elements: !852)
!851 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!852 = !{!853, !859, !872, !878, !887, !907, !912}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !850, file: !851, line: 37, baseType: !854, size: 64)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 34, size: 64, elements: !855)
!855 = !{!856, !857}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !854, file: !851, line: 35, baseType: !638, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !854, file: !851, line: 36, baseType: !858, size: 32, offset: 32)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !168, line: 49, baseType: !7)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !850, file: !851, line: 45, baseType: !860, size: 192)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 40, size: 192, elements: !861)
!861 = !{!862, !864, !865, !871}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !860, file: !851, line: 41, baseType: !863, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !168, line: 95, baseType: !119)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !860, file: !851, line: 42, baseType: !119, size: 32, offset: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !860, file: !851, line: 43, baseType: !866, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !851, line: 11, baseType: !867)
!867 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !851, line: 8, size: 64, elements: !868)
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !867, file: !851, line: 9, baseType: !119, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !867, file: !851, line: 10, baseType: !56, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !860, file: !851, line: 44, baseType: !119, size: 32, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !850, file: !851, line: 52, baseType: !873, size: 128)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 48, size: 128, elements: !874)
!874 = !{!875, !876, !877}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !873, file: !851, line: 49, baseType: !638, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !873, file: !851, line: 50, baseType: !858, size: 32, offset: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !873, file: !851, line: 51, baseType: !866, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !850, file: !851, line: 61, baseType: !879, size: 256)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 55, size: 256, elements: !880)
!880 = !{!881, !882, !883, !884, !886}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !879, file: !851, line: 56, baseType: !638, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !879, file: !851, line: 57, baseType: !858, size: 32, offset: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !879, file: !851, line: 58, baseType: !119, size: 32, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !879, file: !851, line: 59, baseType: !885, size: 64, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !168, line: 94, baseType: !169)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !879, file: !851, line: 60, baseType: !885, size: 64, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !850, file: !851, line: 95, baseType: !888, size: 256)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 64, size: 256, elements: !889)
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !888, file: !851, line: 65, baseType: !56, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, scope: !888, file: !851, line: 77, baseType: !892, size: 192, offset: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !888, file: !851, line: 77, size: 192, elements: !893)
!893 = !{!894, !895, !902}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !892, file: !851, line: 82, baseType: !371, size: 16)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !892, file: !851, line: 88, baseType: !896, size: 192)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !851, line: 84, size: 192, elements: !897)
!897 = !{!898, !900, !901}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !896, file: !851, line: 85, baseType: !899, size: 64)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 64, elements: !498)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !896, file: !851, line: 86, baseType: !56, size: 64, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !896, file: !851, line: 87, baseType: !56, size: 64, offset: 128)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !892, file: !851, line: 93, baseType: !903, size: 96)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !892, file: !851, line: 90, size: 96, elements: !904)
!904 = !{!905, !906}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !903, file: !851, line: 91, baseType: !899, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !903, file: !851, line: 92, baseType: !393, size: 32, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !850, file: !851, line: 101, baseType: !908, size: 128)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 98, size: 128, elements: !909)
!909 = !{!910, !911}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !908, file: !851, line: 99, baseType: !170, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !908, file: !851, line: 100, baseType: !119, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !850, file: !851, line: 108, baseType: !913, size: 128)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !850, file: !851, line: 104, size: 128, elements: !914)
!914 = !{!915, !916, !917}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !913, file: !851, line: 105, baseType: !56, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !913, file: !851, line: 106, baseType: !119, size: 32, offset: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !913, file: !851, line: 107, baseType: !7, size: 32, offset: 96)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !383, file: !384, line: 1067, baseType: !919, offset: 11136)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !920, line: 12, elements: !107)
!920 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!921 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !383, file: !384, line: 1099, baseType: !922, size: 64, offset: 11136)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !384, line: 56, flags: DIFlagFwdDecl)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !383, file: !384, line: 1103, baseType: !79, size: 128, offset: 11200)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !383, file: !384, line: 1104, baseType: !926, size: 64, offset: 11328)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !384, line: 46, flags: DIFlagFwdDecl)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !383, file: !384, line: 1105, baseType: !353, size: 192, offset: 11392)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !383, file: !384, line: 1106, baseType: !7, size: 32, offset: 11584)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !383, file: !384, line: 1109, baseType: !931, size: 128, offset: 11648)
!931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !932, size: 128, elements: !934)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !384, line: 51, flags: DIFlagFwdDecl)
!934 = !{!935}
!935 = !DISubrange(count: 2)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !383, file: !384, line: 1110, baseType: !353, size: 192, offset: 11776)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !383, file: !384, line: 1111, baseType: !79, size: 128, offset: 11968)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !383, file: !384, line: 1173, baseType: !939, size: 64, offset: 12096)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !941, line: 62, size: 256, align: 256, elements: !942)
!941 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!942 = !{!943, !944, !945, !950}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !940, file: !941, line: 75, baseType: !393, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !940, file: !941, line: 90, baseType: !393, size: 32, offset: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !940, file: !941, line: 124, baseType: !946, size: 64, offset: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !940, file: !941, line: 109, size: 64, elements: !947)
!947 = !{!948, !949}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !946, file: !941, line: 110, baseType: !256, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !946, file: !941, line: 112, baseType: !256, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !940, file: !941, line: 144, baseType: !393, size: 32, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !383, file: !384, line: 1174, baseType: !392, size: 32, offset: 12160)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !383, file: !384, line: 1179, baseType: !185, size: 64, offset: 12224)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !383, file: !384, line: 1182, baseType: !954, size: 128, offset: 12288)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !331, line: 76, size: 128, elements: !955)
!955 = !{!956, !961, !964}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !954, file: !331, line: 85, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !958, line: 7, size: 64, elements: !959)
!958 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!959 = !{!960}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !957, file: !958, line: 12, baseType: !545, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !954, file: !331, line: 88, baseType: !962, size: 8, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !80, line: 30, baseType: !963)
!963 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !954, file: !331, line: 95, baseType: !962, size: 8, offset: 72)
!965 = !DIDerivedType(tag: DW_TAG_member, scope: !383, file: !384, line: 1184, baseType: !966, size: 128, offset: 12416)
!966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !383, file: !384, line: 1184, size: 128, elements: !967)
!967 = !{!968, !969}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !966, file: !384, line: 1185, baseType: !398, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !966, file: !384, line: 1186, baseType: !676, size: 128, align: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !383, file: !384, line: 1190, baseType: !971, size: 64, offset: 12544)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !384, line: 53, flags: DIFlagFwdDecl)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !383, file: !384, line: 1192, baseType: !974, size: 128, offset: 12608)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !331, line: 64, size: 128, elements: !975)
!975 = !{!976, !1069, !1070}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !974, file: !331, line: 65, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !226, line: 68, size: 512, align: 128, elements: !979)
!979 = !{!980, !981, !1061, !1068}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !978, file: !226, line: 69, baseType: !185, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, scope: !978, file: !226, line: 77, baseType: !982, size: 320, offset: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !978, file: !226, line: 77, size: 320, elements: !983)
!983 = !{!984, !993, !998, !1026, !1034, !1040, !1053, !1060}
!984 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 78, baseType: !985, size: 320)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 78, size: 320, elements: !986)
!986 = !{!987, !988, !991, !992}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !985, file: !226, line: 84, baseType: !79, size: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !985, file: !226, line: 86, baseType: !989, size: 64, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !226, line: 26, flags: DIFlagFwdDecl)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !985, file: !226, line: 87, baseType: !185, size: 64, offset: 192)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !985, file: !226, line: 94, baseType: !185, size: 64, offset: 256)
!993 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 96, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 96, size: 64, elements: !995)
!995 = !{!996}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !994, file: !226, line: 101, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !80, line: 143, baseType: !254)
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 103, baseType: !999, size: 320)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 103, size: 320, elements: !1000)
!1000 = !{!1001, !1011, !1014, !1015}
!1001 = !DIDerivedType(tag: DW_TAG_member, scope: !999, file: !226, line: 104, baseType: !1002, size: 128)
!1002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !999, file: !226, line: 104, size: 128, elements: !1003)
!1003 = !{!1004, !1005}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1002, file: !226, line: 105, baseType: !79, size: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, scope: !1002, file: !226, line: 106, baseType: !1006, size: 128)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1002, file: !226, line: 106, size: 128, elements: !1007)
!1007 = !{!1008, !1009, !1010}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1006, file: !226, line: 107, baseType: !977, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1006, file: !226, line: 109, baseType: !119, size: 32, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1006, file: !226, line: 110, baseType: !119, size: 32, offset: 96)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !999, file: !226, line: 117, baseType: !1012, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !226, line: 117, flags: DIFlagFwdDecl)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !999, file: !226, line: 119, baseType: !56, size: 64, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_member, scope: !999, file: !226, line: 120, baseType: !1016, size: 64, offset: 256)
!1016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !999, file: !226, line: 120, size: 64, elements: !1017)
!1017 = !{!1018, !1019, !1020}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1016, file: !226, line: 121, baseType: !56, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1016, file: !226, line: 122, baseType: !185, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, scope: !1016, file: !226, line: 123, baseType: !1021, size: 32)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1016, file: !226, line: 123, size: 32, elements: !1022)
!1022 = !{!1023, !1024, !1025}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1021, file: !226, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1021, file: !226, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1021, file: !226, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 130, baseType: !1027, size: 192)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 130, size: 192, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1033}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1027, file: !226, line: 131, baseType: !185, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1027, file: !226, line: 134, baseType: !531, size: 8, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1027, file: !226, line: 135, baseType: !531, size: 8, offset: 72)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1027, file: !226, line: 136, baseType: !276, size: 32, offset: 96)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1027, file: !226, line: 137, baseType: !7, size: 32, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 139, baseType: !1035, size: 256)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 139, size: 256, elements: !1036)
!1036 = !{!1037, !1038, !1039}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1035, file: !226, line: 140, baseType: !185, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1035, file: !226, line: 141, baseType: !276, size: 32, offset: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1035, file: !226, line: 143, baseType: !79, size: 128, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 145, baseType: !1041, size: 256)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 145, size: 256, elements: !1042)
!1042 = !{!1043, !1044, !1046, !1047, !1052}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1041, file: !226, line: 146, baseType: !185, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1041, file: !226, line: 147, baseType: !1045, size: 64, offset: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !215, line: 509, baseType: !977)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1041, file: !226, line: 148, baseType: !185, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_member, scope: !1041, file: !226, line: 149, baseType: !1048, size: 64, offset: 192)
!1048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1041, file: !226, line: 149, size: 64, elements: !1049)
!1049 = !{!1050, !1051}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1048, file: !226, line: 150, baseType: !242, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1048, file: !226, line: 151, baseType: !276, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1041, file: !226, line: 156, baseType: !93, offset: 256)
!1053 = !DIDerivedType(tag: DW_TAG_member, scope: !982, file: !226, line: 159, baseType: !1054, size: 128)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !982, file: !226, line: 159, size: 128, elements: !1055)
!1055 = !{!1056, !1059}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !1054, file: !226, line: 161, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !226, line: 161, flags: DIFlagFwdDecl)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !1054, file: !226, line: 162, baseType: !56, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !982, file: !226, line: 176, baseType: !676, size: 128, align: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !978, file: !226, line: 179, baseType: !1062, size: 32, offset: 384)
!1062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !978, file: !226, line: 179, size: 32, elements: !1063)
!1063 = !{!1064, !1065, !1066, !1067}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !1062, file: !226, line: 184, baseType: !276, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !1062, file: !226, line: 192, baseType: !7, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1062, file: !226, line: 194, baseType: !7, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1062, file: !226, line: 195, baseType: !119, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !978, file: !226, line: 199, baseType: !276, size: 32, offset: 416)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !974, file: !331, line: 67, baseType: !393, size: 32, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !974, file: !331, line: 68, baseType: !393, size: 32, offset: 96)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !383, file: !384, line: 1206, baseType: !119, size: 32, offset: 12736)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !383, file: !384, line: 1207, baseType: !119, size: 32, offset: 12768)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !383, file: !384, line: 1209, baseType: !185, size: 64, offset: 12800)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !383, file: !384, line: 1219, baseType: !254, size: 64, offset: 12864)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !383, file: !384, line: 1220, baseType: !254, size: 64, offset: 12928)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !383, file: !384, line: 1317, baseType: !119, size: 32, offset: 12992)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !383, file: !384, line: 1319, baseType: !382, size: 64, offset: 13056)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !383, file: !384, line: 1322, baseType: !1079, size: 64, offset: 13120)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1081, line: 9, flags: DIFlagFwdDecl)
!1081 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !383, file: !384, line: 1326, baseType: !398, size: 32, offset: 13184)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !383, file: !384, line: 1342, baseType: !56, size: 64, offset: 13248)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !383, file: !384, line: 1343, baseType: !256, size: 64, offset: 13312)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !383, file: !384, line: 1344, baseType: !254, size: 64, offset: 13376)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !383, file: !384, line: 1345, baseType: !256, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !383, file: !384, line: 1346, baseType: !256, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !383, file: !384, line: 1347, baseType: !256, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !383, file: !384, line: 1348, baseType: !676, size: 128, align: 64, offset: 13504)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !383, file: !384, line: 1358, baseType: !1091, size: 34816, offset: 13824)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !1092, line: 485, size: 34816, elements: !1093)
!1092 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!1093 = !{!1094, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1123, !1124, !1125, !1126, !1127, !1128, !1131, !1132, !1133}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !1091, file: !1092, line: 487, baseType: !1095, size: 192)
!1095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1096, size: 192, elements: !136)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !1097, line: 16, size: 64, elements: !1098)
!1097 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!1098 = !{!1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !1096, file: !1097, line: 17, baseType: !366, size: 16)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !1096, file: !1097, line: 18, baseType: !366, size: 16, offset: 16)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !1096, file: !1097, line: 19, baseType: !366, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1096, file: !1097, line: 19, baseType: !366, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1096, file: !1097, line: 19, baseType: !366, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !1096, file: !1097, line: 19, baseType: !366, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1096, file: !1097, line: 19, baseType: !366, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !1096, file: !1097, line: 20, baseType: !366, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !1096, file: !1097, line: 20, baseType: !366, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1096, file: !1097, line: 20, baseType: !366, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1096, file: !1097, line: 20, baseType: !366, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1096, file: !1097, line: 20, baseType: !366, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !1096, file: !1097, line: 20, baseType: !366, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1091, file: !1092, line: 491, baseType: !185, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1091, file: !1092, line: 495, baseType: !177, size: 16, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1091, file: !1092, line: 496, baseType: !177, size: 16, offset: 272)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !1091, file: !1092, line: 497, baseType: !177, size: 16, offset: 288)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !1091, file: !1092, line: 498, baseType: !177, size: 16, offset: 304)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !1091, file: !1092, line: 502, baseType: !185, size: 64, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1091, file: !1092, line: 503, baseType: !185, size: 64, offset: 384)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !1091, file: !1092, line: 514, baseType: !1120, size: 256, offset: 448)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1121, size: 256, elements: !335)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !1092, line: 483, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !1091, file: !1092, line: 516, baseType: !185, size: 64, offset: 704)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !1091, file: !1092, line: 518, baseType: !185, size: 64, offset: 768)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !1091, file: !1092, line: 520, baseType: !185, size: 64, offset: 832)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !1091, file: !1092, line: 521, baseType: !185, size: 64, offset: 896)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !1091, file: !1092, line: 522, baseType: !185, size: 64, offset: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !1091, file: !1092, line: 528, baseType: !1129, size: 64, offset: 1024)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !1092, line: 10, flags: DIFlagFwdDecl)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !1091, file: !1092, line: 535, baseType: !185, size: 64, offset: 1088)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !1091, file: !1092, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !1091, file: !1092, line: 540, baseType: !1134, size: 33280, offset: 1536)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !1135, line: 317, size: 33280, elements: !1136)
!1135 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!1136 = !{!1137, !1138, !1139}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !1134, file: !1135, line: 330, baseType: !7, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !1134, file: !1135, line: 337, baseType: !185, size: 64, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1134, file: !1135, line: 348, baseType: !1140, size: 32768, offset: 512)
!1140 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !1135, line: 304, size: 32768, elements: !1141)
!1141 = !{!1142, !1157, !1196, !1246, !1263}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !1140, file: !1135, line: 305, baseType: !1143, size: 896)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !1135, line: 12, size: 896, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1156}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1143, file: !1135, line: 13, baseType: !392, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1143, file: !1135, line: 14, baseType: !392, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1143, file: !1135, line: 15, baseType: !392, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1143, file: !1135, line: 16, baseType: !392, size: 32, offset: 96)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1143, file: !1135, line: 17, baseType: !392, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1143, file: !1135, line: 18, baseType: !392, size: 32, offset: 160)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1143, file: !1135, line: 19, baseType: !392, size: 32, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1143, file: !1135, line: 22, baseType: !1153, size: 640, offset: 224)
!1153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 640, elements: !1154)
!1154 = !{!1155}
!1155 = !DISubrange(count: 20)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1143, file: !1135, line: 25, baseType: !392, size: 32, offset: 864)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !1140, file: !1135, line: 306, baseType: !1158, size: 4096, align: 128)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !1135, line: 34, size: 4096, align: 128, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1179, !1180, !1181, !1185, !1187, !1191}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1158, file: !1135, line: 35, baseType: !366, size: 16)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1158, file: !1135, line: 36, baseType: !366, size: 16, offset: 16)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1158, file: !1135, line: 37, baseType: !366, size: 16, offset: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !1158, file: !1135, line: 38, baseType: !366, size: 16, offset: 48)
!1164 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !1135, line: 39, baseType: !1165, size: 128, offset: 64)
!1165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1158, file: !1135, line: 39, size: 128, elements: !1166)
!1166 = !{!1167, !1172}
!1167 = !DIDerivedType(tag: DW_TAG_member, scope: !1165, file: !1135, line: 40, baseType: !1168, size: 128)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1165, file: !1135, line: 40, size: 128, elements: !1169)
!1169 = !{!1170, !1171}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !1168, file: !1135, line: 41, baseType: !254, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !1168, file: !1135, line: 42, baseType: !254, size: 64, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, scope: !1165, file: !1135, line: 44, baseType: !1173, size: 128)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1165, file: !1135, line: 44, size: 128, elements: !1174)
!1174 = !{!1175, !1176, !1177, !1178}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1173, file: !1135, line: 45, baseType: !392, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1173, file: !1135, line: 46, baseType: !392, size: 32, offset: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1173, file: !1135, line: 47, baseType: !392, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1173, file: !1135, line: 48, baseType: !392, size: 32, offset: 96)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !1158, file: !1135, line: 51, baseType: !392, size: 32, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !1158, file: !1135, line: 52, baseType: !392, size: 32, offset: 224)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1158, file: !1135, line: 55, baseType: !1182, size: 1024, offset: 256)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 1024, elements: !1183)
!1183 = !{!1184}
!1184 = !DISubrange(count: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !1158, file: !1135, line: 58, baseType: !1186, size: 2048, offset: 1280)
!1186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 2048, elements: !140)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1158, file: !1135, line: 60, baseType: !1188, size: 384, offset: 3328)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 384, elements: !1189)
!1189 = !{!1190}
!1190 = !DISubrange(count: 12)
!1191 = !DIDerivedType(tag: DW_TAG_member, scope: !1158, file: !1135, line: 62, baseType: !1192, size: 384, offset: 3712)
!1192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1158, file: !1135, line: 62, size: 384, elements: !1193)
!1193 = !{!1194, !1195}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !1192, file: !1135, line: 63, baseType: !1188, size: 384)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !1192, file: !1135, line: 64, baseType: !1188, size: 384)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1140, file: !1135, line: 307, baseType: !1197, size: 1088)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !1135, line: 79, size: 1088, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1245}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !1197, file: !1135, line: 80, baseType: !392, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !1197, file: !1135, line: 81, baseType: !392, size: 32, offset: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !1197, file: !1135, line: 82, baseType: !392, size: 32, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !1197, file: !1135, line: 83, baseType: !392, size: 32, offset: 96)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !1197, file: !1135, line: 84, baseType: !392, size: 32, offset: 128)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !1197, file: !1135, line: 85, baseType: !392, size: 32, offset: 160)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !1197, file: !1135, line: 86, baseType: !392, size: 32, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !1197, file: !1135, line: 88, baseType: !1153, size: 640, offset: 224)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !1197, file: !1135, line: 89, baseType: !529, size: 8, offset: 864)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1197, file: !1135, line: 90, baseType: !529, size: 8, offset: 872)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !1197, file: !1135, line: 91, baseType: !529, size: 8, offset: 880)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !1197, file: !1135, line: 92, baseType: !529, size: 8, offset: 888)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !1197, file: !1135, line: 93, baseType: !529, size: 8, offset: 896)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !1197, file: !1135, line: 94, baseType: !529, size: 8, offset: 904)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1197, file: !1135, line: 95, baseType: !1214, size: 64, offset: 960)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !1216, line: 11, size: 128, elements: !1217)
!1216 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!1217 = !{!1218, !1219}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !1215, file: !1216, line: 12, baseType: !170, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !1215, file: !1216, line: 13, baseType: !1220, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !1222, line: 56, size: 1344, elements: !1223)
!1222 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !1221, file: !1222, line: 61, baseType: !185, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !1221, file: !1222, line: 62, baseType: !185, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !1221, file: !1222, line: 63, baseType: !185, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1221, file: !1222, line: 64, baseType: !185, size: 64, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !1221, file: !1222, line: 65, baseType: !185, size: 64, offset: 256)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !1221, file: !1222, line: 66, baseType: !185, size: 64, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1221, file: !1222, line: 68, baseType: !185, size: 64, offset: 384)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1221, file: !1222, line: 69, baseType: !185, size: 64, offset: 448)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1221, file: !1222, line: 70, baseType: !185, size: 64, offset: 512)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1221, file: !1222, line: 71, baseType: !185, size: 64, offset: 576)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !1221, file: !1222, line: 72, baseType: !185, size: 64, offset: 640)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !1221, file: !1222, line: 73, baseType: !185, size: 64, offset: 704)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !1221, file: !1222, line: 74, baseType: !185, size: 64, offset: 768)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !1221, file: !1222, line: 75, baseType: !185, size: 64, offset: 832)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !1221, file: !1222, line: 76, baseType: !185, size: 64, offset: 896)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !1221, file: !1222, line: 81, baseType: !185, size: 64, offset: 960)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !1221, file: !1222, line: 83, baseType: !185, size: 64, offset: 1024)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !1221, file: !1222, line: 84, baseType: !185, size: 64, offset: 1088)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1221, file: !1222, line: 85, baseType: !185, size: 64, offset: 1152)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1221, file: !1222, line: 86, baseType: !185, size: 64, offset: 1216)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !1221, file: !1222, line: 87, baseType: !185, size: 64, offset: 1280)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !1197, file: !1135, line: 96, baseType: !392, size: 32, offset: 1024)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !1140, file: !1135, line: 308, baseType: !1247, size: 4608, align: 512)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !1135, line: 289, size: 4608, align: 512, elements: !1248)
!1248 = !{!1249, !1250, !1259}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !1247, file: !1135, line: 290, baseType: !1158, size: 4096, align: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1247, file: !1135, line: 291, baseType: !1251, size: 512, offset: 4096)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !1135, line: 268, size: 512, elements: !1252)
!1252 = !{!1253, !1254, !1255}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !1251, file: !1135, line: 269, baseType: !254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !1251, file: !1135, line: 270, baseType: !254, size: 64, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1251, file: !1135, line: 271, baseType: !1256, size: 384, offset: 128)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !254, size: 384, elements: !1257)
!1257 = !{!1258}
!1258 = !DISubrange(count: 6)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !1247, file: !1135, line: 292, baseType: !1260, offset: 4608)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, elements: !1261)
!1261 = !{!1262}
!1262 = !DISubrange(count: 0)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !1140, file: !1135, line: 309, baseType: !1264, size: 32768)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 32768, elements: !1265)
!1265 = !{!1266}
!1266 = !DISubrange(count: 4096)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !379, file: !226, line: 378, baseType: !1268, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !375, file: !226, line: 384, baseType: !698, size: 192, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !246, file: !226, line: 500, baseType: !93, offset: 6656)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !246, file: !226, line: 501, baseType: !1272, size: 64, offset: 6656)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !226, line: 387, flags: DIFlagFwdDecl)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !246, file: !226, line: 516, baseType: !1275, size: 64, offset: 6720)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !226, line: 516, flags: DIFlagFwdDecl)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !246, file: !226, line: 519, baseType: !213, size: 64, offset: 6784)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !246, file: !226, line: 521, baseType: !1279, size: 64, offset: 6848)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !226, line: 521, flags: DIFlagFwdDecl)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !246, file: !226, line: 545, baseType: !276, size: 32, offset: 6912)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !246, file: !226, line: 548, baseType: !962, size: 8, offset: 6944)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !246, file: !226, line: 550, baseType: !1284, offset: 6952)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !1285, line: 142, elements: !107)
!1285 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !246, file: !226, line: 554, baseType: !1287, size: 256, offset: 6976)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1288, line: 102, size: 256, elements: !1289)
!1288 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1289 = !{!1290, !1291, !1292}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1287, file: !1288, line: 103, baseType: !284, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1287, file: !1288, line: 104, baseType: !79, size: 128, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1287, file: !1288, line: 105, baseType: !1293, size: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1288, line: 21, baseType: !1294)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DISubroutineType(types: !1296)
!1296 = !{null, !1297}
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !246, file: !226, line: 557, baseType: !392, size: 32, offset: 7232)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !243, file: !226, line: 565, baseType: !1300, offset: 7296)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, elements: !1301)
!1301 = !{!1302}
!1302 = !DISubrange(count: -1)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !225, file: !226, line: 333, baseType: !1304, size: 64, offset: 576)
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !215, line: 284, baseType: !1305)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !215, line: 284, size: 64, elements: !1306)
!1306 = !{!1307}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1305, file: !215, line: 284, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !274, line: 19, baseType: !185)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !225, file: !226, line: 334, baseType: !185, size: 64, offset: 640)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !225, file: !226, line: 343, baseType: !1311, size: 256, offset: 704)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !225, file: !226, line: 340, size: 256, elements: !1312)
!1312 = !{!1313, !1314}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1311, file: !226, line: 341, baseType: !233, size: 192, align: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1311, file: !226, line: 342, baseType: !185, size: 64, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !225, file: !226, line: 351, baseType: !79, size: 128, offset: 960)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !225, file: !226, line: 353, baseType: !1317, size: 64, offset: 1088)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !226, line: 353, flags: DIFlagFwdDecl)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !225, file: !226, line: 356, baseType: !1320, size: 64, offset: 1152)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1322)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !226, line: 356, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !225, file: !226, line: 359, baseType: !185, size: 64, offset: 1216)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !225, file: !226, line: 361, baseType: !213, size: 64, offset: 1280)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !225, file: !226, line: 362, baseType: !56, size: 64, offset: 1344)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !225, file: !226, line: 365, baseType: !284, size: 64, offset: 1408)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !225, file: !226, line: 373, baseType: !1328, offset: 1472)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !226, line: 296, elements: !107)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !192, file: !160, line: 90, baseType: !187, size: 64, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !192, file: !160, line: 91, baseType: !1331, size: 64, offset: 256)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !150, file: !72, line: 143, baseType: !1333, size: 64, offset: 256)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!1336, !86}
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !18, line: 39, size: 384, elements: !1339)
!1339 = !{!1340, !1341, !1345, !1349, !1357, !1361}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1338, file: !18, line: 40, baseType: !17, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !1338, file: !18, line: 41, baseType: !1342, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!962}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !1338, file: !18, line: 42, baseType: !1346, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!56}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !1338, file: !18, line: 43, baseType: !1350, size: 64, offset: 192)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{!1353, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !18, line: 19, flags: DIFlagFwdDecl)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !1338, file: !18, line: 44, baseType: !1358, size: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{!1353}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !1338, file: !18, line: 45, baseType: !1362, size: 64, offset: 320)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !56}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !150, file: !72, line: 144, baseType: !1366, size: 64, offset: 320)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!1353, !86}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !150, file: !72, line: 145, baseType: !1370, size: 64, offset: 384)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{null, !86, !1373, !1380}
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1375, line: 23, baseType: !1376)
!1375 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 21, size: 32, elements: !1377)
!1377 = !{!1378}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1376, file: !1375, line: 22, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !80, line: 32, baseType: !858)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1375, line: 28, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1375, line: 26, size: 32, elements: !1383)
!1383 = !{!1384}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1382, file: !1375, line: 27, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !80, line: 33, baseType: !1386)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !168, line: 50, baseType: !7)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !71, file: !72, line: 70, baseType: !1388, size: 64, offset: 384)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1390, line: 123, size: 1024, elements: !1391)
!1390 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1534, !1535, !1536, !1537, !1538}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1389, file: !1390, line: 124, baseType: !276, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1389, file: !1390, line: 125, baseType: !276, size: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1389, file: !1390, line: 135, baseType: !1388, size: 64, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !1390, line: 136, baseType: !75, size: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1389, file: !1390, line: 138, baseType: !233, size: 192, align: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1389, file: !1390, line: 140, baseType: !1353, size: 64, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1389, file: !1390, line: 141, baseType: !7, size: 32, offset: 448)
!1399 = !DIDerivedType(tag: DW_TAG_member, scope: !1389, file: !1390, line: 142, baseType: !1400, size: 256, offset: 512)
!1400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1389, file: !1390, line: 142, size: 256, elements: !1401)
!1401 = !{!1402, !1457, !1461}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1400, file: !1390, line: 143, baseType: !1403, size: 192)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1390, line: 91, size: 192, elements: !1404)
!1404 = !{!1405, !1406, !1407}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !1403, file: !1390, line: 92, baseType: !185, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1403, file: !1390, line: 94, baseType: !250, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1403, file: !1390, line: 100, baseType: !1408, size: 64, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1390, line: 180, size: 704, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1427, !1428, !1429, !1455, !1456}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1409, file: !1390, line: 182, baseType: !1388, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1409, file: !1390, line: 183, baseType: !7, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !1409, file: !1390, line: 186, baseType: !1414, size: 192, offset: 128)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1415, line: 19, size: 192, elements: !1416)
!1415 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1416 = !{!1417, !1425, !1426}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1414, file: !1415, line: 20, baseType: !1418, size: 128)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1419, line: 292, size: 128, elements: !1420)
!1419 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1420 = !{!1421, !1422, !1424}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1418, file: !1419, line: 293, baseType: !93)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1418, file: !1419, line: 295, baseType: !1423, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !80, line: 148, baseType: !7)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1418, file: !1419, line: 296, baseType: !56, size: 64, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1414, file: !1415, line: 21, baseType: !7, size: 32, offset: 128)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1414, file: !1415, line: 22, baseType: !7, size: 32, offset: 160)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !1409, file: !1390, line: 187, baseType: !392, size: 32, offset: 320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !1409, file: !1390, line: 188, baseType: !392, size: 32, offset: 352)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !1409, file: !1390, line: 189, baseType: !1430, size: 64, offset: 384)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1390, line: 168, size: 320, elements: !1432)
!1432 = !{!1433, !1439, !1443, !1447, !1451}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1431, file: !1390, line: 169, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!119, !1437, !1408}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !215, line: 539, flags: DIFlagFwdDecl)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1431, file: !1390, line: 171, baseType: !1440, size: 64, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DISubroutineType(types: !1442)
!1442 = !{!119, !1388, !75, !176}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1431, file: !1390, line: 173, baseType: !1444, size: 64, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!119, !1388}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1431, file: !1390, line: 174, baseType: !1448, size: 64, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!119, !1388, !1388, !75}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1431, file: !1390, line: 176, baseType: !1452, size: 64, offset: 256)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!119, !1437, !1388, !1408}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !1409, file: !1390, line: 192, baseType: !79, size: 128, offset: 448)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !1409, file: !1390, line: 194, baseType: !669, size: 128, offset: 576)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1390, line: 144, baseType: !1458, size: 64)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1390, line: 103, size: 64, elements: !1459)
!1459 = !{!1460}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !1458, file: !1390, line: 104, baseType: !1388, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1400, file: !1390, line: 145, baseType: !1462, size: 256)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1390, line: 107, size: 256, elements: !1463)
!1463 = !{!1464, !1529, !1532, !1533}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1462, file: !1390, line: 108, baseType: !1465, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1390, line: 217, size: 768, elements: !1468)
!1468 = !{!1469, !1489, !1493, !1497, !1502, !1506, !1510, !1514, !1515, !1516, !1517, !1525}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1467, file: !1390, line: 222, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!119, !1473}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1390, line: 197, size: 1088, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !1474, file: !1390, line: 199, baseType: !1388, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1474, file: !1390, line: 200, baseType: !213, size: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !1474, file: !1390, line: 201, baseType: !1437, size: 64, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1474, file: !1390, line: 202, baseType: !56, size: 64, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1474, file: !1390, line: 205, baseType: !353, size: 192, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !1474, file: !1390, line: 206, baseType: !353, size: 192, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1474, file: !1390, line: 207, baseType: !119, size: 32, offset: 640)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1474, file: !1390, line: 208, baseType: !79, size: 128, offset: 704)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !1474, file: !1390, line: 209, baseType: !135, size: 64, offset: 832)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1474, file: !1390, line: 211, baseType: !182, size: 64, offset: 896)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !1474, file: !1390, line: 212, baseType: !962, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !1474, file: !1390, line: 213, baseType: !962, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1474, file: !1390, line: 214, baseType: !1320, size: 64, offset: 1024)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1467, file: !1390, line: 223, baseType: !1490, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{null, !1473}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !1467, file: !1390, line: 236, baseType: !1494, size: 64, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!119, !1437, !56}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !1467, file: !1390, line: 238, baseType: !1498, size: 64, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!56, !1437, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !1467, file: !1390, line: 239, baseType: !1503, size: 64, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!56, !1437, !56, !1501}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !1467, file: !1390, line: 240, baseType: !1507, size: 64, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{null, !1437, !56}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1467, file: !1390, line: 242, baseType: !1511, size: 64, offset: 384)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!166, !1473, !135, !182, !216}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !1467, file: !1390, line: 252, baseType: !182, size: 64, offset: 448)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !1467, file: !1390, line: 259, baseType: !962, size: 8, offset: 512)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1467, file: !1390, line: 260, baseType: !1511, size: 64, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1467, file: !1390, line: 263, baseType: !1518, size: 64, offset: 640)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1473, !1523}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1522, line: 52, baseType: !7)
!1522 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1390, line: 27, flags: DIFlagFwdDecl)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1467, file: !1390, line: 266, baseType: !1526, size: 64, offset: 704)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!119, !1473, !224}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1462, file: !1390, line: 109, baseType: !1530, size: 64, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1390, line: 31, flags: DIFlagFwdDecl)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1462, file: !1390, line: 110, baseType: !216, size: 64, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !1462, file: !1390, line: 111, baseType: !1388, size: 64, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1389, file: !1390, line: 148, baseType: !56, size: 64, offset: 768)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1389, file: !1390, line: 154, baseType: !254, size: 64, offset: 832)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1389, file: !1390, line: 156, baseType: !177, size: 16, offset: 896)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1389, file: !1390, line: 157, baseType: !176, size: 16, offset: 912)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !1389, file: !1390, line: 158, baseType: !1539, size: 64, offset: 960)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1390, line: 32, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !71, file: !72, line: 71, baseType: !1542, size: 32, offset: 448)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1543, line: 19, size: 32, elements: !1544)
!1543 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1544 = !{!1545}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1542, file: !1543, line: 20, baseType: !398, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !71, file: !72, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !71, file: !72, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !71, file: !72, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !71, file: !72, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !71, file: !72, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !68, file: !30, line: 463, baseType: !67, size: 64, offset: 512)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !68, file: !30, line: 465, baseType: !1553, size: 64, offset: 576)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !30, line: 36, flags: DIFlagFwdDecl)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !68, file: !30, line: 467, baseType: !75, size: 64, offset: 640)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !68, file: !30, line: 468, baseType: !1557, size: 64, offset: 704)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !30, line: 87, size: 384, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1567, !1572, !1576}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1559, file: !30, line: 88, baseType: !75, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1559, file: !30, line: 89, baseType: !189, size: 64, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1559, file: !30, line: 90, baseType: !1564, size: 64, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!119, !67, !130}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1559, file: !30, line: 91, baseType: !1568, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!135, !67, !1571, !1373, !1380}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1559, file: !30, line: 93, baseType: !1573, size: 64, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !67}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1559, file: !30, line: 95, baseType: !1577, size: 64, offset: 320)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1579)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !37, line: 278, size: 1472, elements: !1580)
!1580 = !{!1581, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !1579, file: !37, line: 279, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DISubroutineType(types: !1584)
!1584 = !{!119, !67}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !1579, file: !37, line: 280, baseType: !1573, size: 64, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1579, file: !37, line: 281, baseType: !1582, size: 64, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1579, file: !37, line: 282, baseType: !1582, size: 64, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !1579, file: !37, line: 283, baseType: !1582, size: 64, offset: 256)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !1579, file: !37, line: 284, baseType: !1582, size: 64, offset: 320)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !1579, file: !37, line: 285, baseType: !1582, size: 64, offset: 384)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !1579, file: !37, line: 286, baseType: !1582, size: 64, offset: 448)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !1579, file: !37, line: 287, baseType: !1582, size: 64, offset: 512)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !1579, file: !37, line: 288, baseType: !1582, size: 64, offset: 576)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !1579, file: !37, line: 289, baseType: !1582, size: 64, offset: 640)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !1579, file: !37, line: 290, baseType: !1582, size: 64, offset: 704)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !1579, file: !37, line: 291, baseType: !1582, size: 64, offset: 768)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !1579, file: !37, line: 292, baseType: !1582, size: 64, offset: 832)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !1579, file: !37, line: 293, baseType: !1582, size: 64, offset: 896)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !1579, file: !37, line: 294, baseType: !1582, size: 64, offset: 960)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !1579, file: !37, line: 295, baseType: !1582, size: 64, offset: 1024)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !1579, file: !37, line: 296, baseType: !1582, size: 64, offset: 1088)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !1579, file: !37, line: 297, baseType: !1582, size: 64, offset: 1152)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !1579, file: !37, line: 298, baseType: !1582, size: 64, offset: 1216)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !1579, file: !37, line: 299, baseType: !1582, size: 64, offset: 1280)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !1579, file: !37, line: 300, baseType: !1582, size: 64, offset: 1344)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !1579, file: !37, line: 301, baseType: !1582, size: 64, offset: 1408)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !68, file: !30, line: 470, baseType: !1608, size: 64, offset: 768)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !1610, line: 82, size: 1408, elements: !1611)
!1610 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1617, !1618, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1697, !1700, !1703}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1609, file: !1610, line: 83, baseType: !75, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1609, file: !1610, line: 84, baseType: !75, size: 64, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !1609, file: !1610, line: 85, baseType: !67, size: 64, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !1609, file: !1610, line: 86, baseType: !189, size: 64, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1609, file: !1610, line: 87, baseType: !189, size: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !1609, file: !1610, line: 88, baseType: !189, size: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !1609, file: !1610, line: 90, baseType: !1619, size: 64, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{!119, !67, !1622}
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !24, line: 95, size: 1152, elements: !1624)
!1624 = !{!1625, !1626, !1627, !1631, !1632, !1633, !1634, !1648, !1661, !1662, !1663, !1664, !1665, !1673, !1674, !1675, !1676, !1677, !1678}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1623, file: !24, line: 96, baseType: !75, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1623, file: !24, line: 97, baseType: !1608, size: 64, offset: 64)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1623, file: !24, line: 99, baseType: !1628, size: 64, offset: 128)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !1630, line: 76, flags: DIFlagFwdDecl)
!1630 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !1623, file: !24, line: 100, baseType: !75, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !1623, file: !24, line: 102, baseType: !962, size: 8, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !1623, file: !24, line: 103, baseType: !23, size: 32, offset: 288)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !1623, file: !24, line: 105, baseType: !1635, size: 64, offset: 320)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !1638, line: 262, size: 1600, elements: !1639)
!1638 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!1639 = !{!1640, !1642, !1643, !1647}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1637, file: !1638, line: 263, baseType: !1641, size: 256)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 256, elements: !1183)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1637, file: !1638, line: 264, baseType: !1641, size: 256, offset: 256)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !1637, file: !1638, line: 265, baseType: !1644, size: 1024, offset: 512)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 1024, elements: !1645)
!1645 = !{!1646}
!1646 = !DISubrange(count: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1637, file: !1638, line: 266, baseType: !1353, size: 64, offset: 1536)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !1623, file: !24, line: 106, baseType: !1649, size: 64, offset: 384)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1651)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !1638, line: 210, size: 256, elements: !1652)
!1652 = !{!1653, !1657, !1659, !1660}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1651, file: !1638, line: 211, baseType: !1654, size: 72)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 72, elements: !1655)
!1655 = !{!1656}
!1656 = !DISubrange(count: 9)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1651, file: !1638, line: 212, baseType: !1658, size: 64, offset: 128)
!1658 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !1638, line: 14, baseType: !185)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !1651, file: !1638, line: 213, baseType: !393, size: 32, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !1651, file: !1638, line: 214, baseType: !393, size: 32, offset: 224)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1623, file: !24, line: 108, baseType: !1582, size: 64, offset: 448)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1623, file: !24, line: 109, baseType: !1573, size: 64, offset: 512)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1623, file: !24, line: 110, baseType: !1582, size: 64, offset: 576)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1623, file: !24, line: 111, baseType: !1573, size: 64, offset: 640)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1623, file: !24, line: 112, baseType: !1666, size: 64, offset: 704)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DISubroutineType(types: !1668)
!1668 = !{!119, !67, !1669}
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !37, line: 52, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !37, line: 50, size: 32, elements: !1671)
!1671 = !{!1672}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1670, file: !37, line: 51, baseType: !119, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1623, file: !24, line: 113, baseType: !1582, size: 64, offset: 768)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1623, file: !24, line: 114, baseType: !189, size: 64, offset: 832)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1623, file: !24, line: 115, baseType: !189, size: 64, offset: 896)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1623, file: !24, line: 117, baseType: !1577, size: 64, offset: 960)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !1623, file: !24, line: 118, baseType: !1573, size: 64, offset: 1024)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1623, file: !24, line: 120, baseType: !1679, size: 64, offset: 1088)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !24, line: 120, flags: DIFlagFwdDecl)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1609, file: !1610, line: 91, baseType: !1564, size: 64, offset: 448)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !1609, file: !1610, line: 92, baseType: !1582, size: 64, offset: 512)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !1609, file: !1610, line: 93, baseType: !1573, size: 64, offset: 576)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !1609, file: !1610, line: 94, baseType: !1582, size: 64, offset: 640)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !1609, file: !1610, line: 95, baseType: !1573, size: 64, offset: 704)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !1609, file: !1610, line: 97, baseType: !1582, size: 64, offset: 768)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1609, file: !1610, line: 98, baseType: !1582, size: 64, offset: 832)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !1609, file: !1610, line: 100, baseType: !1666, size: 64, offset: 896)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !1609, file: !1610, line: 101, baseType: !1582, size: 64, offset: 960)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !1609, file: !1610, line: 103, baseType: !1582, size: 64, offset: 1024)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !1609, file: !1610, line: 105, baseType: !1582, size: 64, offset: 1088)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1609, file: !1610, line: 107, baseType: !1577, size: 64, offset: 1152)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !1609, file: !1610, line: 109, baseType: !1694, size: 64, offset: 1216)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1696 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !1610, line: 109, flags: DIFlagFwdDecl)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1609, file: !1610, line: 111, baseType: !1698, size: 64, offset: 1280)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !1610, line: 111, flags: DIFlagFwdDecl)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !1609, file: !1610, line: 112, baseType: !1701, offset: 1344)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1702, line: 187, elements: !107)
!1702 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !1609, file: !1610, line: 114, baseType: !962, size: 8, offset: 1344)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !68, file: !30, line: 471, baseType: !1622, size: 64, offset: 832)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !68, file: !30, line: 473, baseType: !56, size: 64, offset: 896)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !68, file: !30, line: 475, baseType: !56, size: 64, offset: 960)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !68, file: !30, line: 480, baseType: !353, size: 192, offset: 1024)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !68, file: !30, line: 484, baseType: !1709, size: 576, offset: 1216)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !30, line: 361, size: 576, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714, !1715, !1716}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !1709, file: !30, line: 362, baseType: !79, size: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !1709, file: !30, line: 363, baseType: !79, size: 128, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !1709, file: !30, line: 364, baseType: !79, size: 128, offset: 256)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !1709, file: !30, line: 365, baseType: !79, size: 128, offset: 384)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !1709, file: !30, line: 366, baseType: !962, size: 8, offset: 512)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1709, file: !30, line: 367, baseType: !29, size: 32, offset: 544)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !68, file: !30, line: 485, baseType: !1718, size: 2304, offset: 1792)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !37, line: 565, size: 2304, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1815, !1819}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !1718, file: !37, line: 566, baseType: !1669, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !1718, file: !37, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !1718, file: !37, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !1718, file: !37, line: 569, baseType: !962, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !1718, file: !37, line: 570, baseType: !962, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !1718, file: !37, line: 571, baseType: !962, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !1718, file: !37, line: 572, baseType: !962, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !1718, file: !37, line: 573, baseType: !962, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !1718, file: !37, line: 574, baseType: !962, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !1718, file: !37, line: 575, baseType: !962, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !1718, file: !37, line: 576, baseType: !962, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !1718, file: !37, line: 577, baseType: !392, size: 32, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1718, file: !37, line: 578, baseType: !93, offset: 96)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1718, file: !37, line: 580, baseType: !79, size: 128, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !1718, file: !37, line: 581, baseType: !698, size: 192, offset: 256)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !1718, file: !37, line: 582, baseType: !1736, size: 64, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !1738, line: 43, size: 1472, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1742, !1743, !1744, !1747, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1737, file: !1738, line: 44, baseType: !75, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1737, file: !1738, line: 45, baseType: !119, size: 32, offset: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1737, file: !1738, line: 46, baseType: !79, size: 128, offset: 128)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1737, file: !1738, line: 47, baseType: !93, offset: 256)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1737, file: !1738, line: 48, baseType: !1745, size: 64, offset: 256)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !37, line: 533, flags: DIFlagFwdDecl)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1737, file: !1738, line: 49, baseType: !1748, size: 320, offset: 320)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1749, line: 11, size: 320, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1758}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1748, file: !1749, line: 16, baseType: !662, size: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1748, file: !1749, line: 17, baseType: !185, size: 64, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1748, file: !1749, line: 18, baseType: !1754, size: 64, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{null, !1757}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 19, baseType: !392, size: 32, offset: 256)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1737, file: !1738, line: 50, baseType: !185, size: 64, offset: 640)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !1737, file: !1738, line: 51, baseType: !468, size: 64, offset: 704)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !1737, file: !1738, line: 52, baseType: !468, size: 64, offset: 768)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !1737, file: !1738, line: 53, baseType: !468, size: 64, offset: 832)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !1737, file: !1738, line: 54, baseType: !468, size: 64, offset: 896)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !1737, file: !1738, line: 55, baseType: !468, size: 64, offset: 960)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !1737, file: !1738, line: 56, baseType: !185, size: 64, offset: 1024)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !1737, file: !1738, line: 57, baseType: !185, size: 64, offset: 1088)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !1737, file: !1738, line: 58, baseType: !185, size: 64, offset: 1152)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !1737, file: !1738, line: 59, baseType: !185, size: 64, offset: 1216)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !1737, file: !1738, line: 60, baseType: !185, size: 64, offset: 1280)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1737, file: !1738, line: 61, baseType: !67, size: 64, offset: 1344)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1737, file: !1738, line: 62, baseType: !962, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !1737, file: !1738, line: 63, baseType: !962, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !1718, file: !37, line: 583, baseType: !962, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !1718, file: !37, line: 584, baseType: !962, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !1718, file: !37, line: 585, baseType: !962, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !1718, file: !37, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !1718, file: !37, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !1718, file: !37, line: 592, baseType: !460, size: 512, offset: 576)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !1718, file: !37, line: 593, baseType: !254, size: 64, offset: 1088)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1718, file: !37, line: 594, baseType: !1287, size: 256, offset: 1152)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !1718, file: !37, line: 595, baseType: !669, size: 128, offset: 1408)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !1718, file: !37, line: 596, baseType: !1745, size: 64, offset: 1536)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !1718, file: !37, line: 597, baseType: !276, size: 32, offset: 1600)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !1718, file: !37, line: 598, baseType: !276, size: 32, offset: 1632)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !1718, file: !37, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !1718, file: !37, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !1718, file: !37, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !1718, file: !37, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !1718, file: !37, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !1718, file: !37, line: 604, baseType: !962, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !1718, file: !37, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !1718, file: !37, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !1718, file: !37, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !1718, file: !37, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !1718, file: !37, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !1718, file: !37, line: 610, baseType: !7, size: 32, offset: 1696)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1718, file: !37, line: 611, baseType: !36, size: 32, offset: 1728)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !1718, file: !37, line: 612, baseType: !44, size: 32, offset: 1760)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !1718, file: !37, line: 613, baseType: !119, size: 32, offset: 1792)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !1718, file: !37, line: 614, baseType: !119, size: 32, offset: 1824)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !1718, file: !37, line: 615, baseType: !254, size: 64, offset: 1856)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !1718, file: !37, line: 616, baseType: !254, size: 64, offset: 1920)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !1718, file: !37, line: 617, baseType: !254, size: 64, offset: 1984)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !1718, file: !37, line: 618, baseType: !254, size: 64, offset: 2048)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !1718, file: !37, line: 620, baseType: !1806, size: 64, offset: 2112)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !37, line: 536, size: 256, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1807, file: !37, line: 537, baseType: !93)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1807, file: !37, line: 538, baseType: !7, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !1807, file: !37, line: 540, baseType: !79, size: 128, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !1807, file: !37, line: 543, baseType: !1813, size: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !37, line: 534, flags: DIFlagFwdDecl)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !1718, file: !37, line: 621, baseType: !1816, size: 64, offset: 2176)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{null, !67, !622}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !1718, file: !37, line: 622, baseType: !1820, size: 64, offset: 2240)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !37, line: 622, flags: DIFlagFwdDecl)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !68, file: !30, line: 486, baseType: !1823, size: 64, offset: 4096)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !37, line: 642, size: 1792, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1832, !1833, !1834}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1824, file: !37, line: 643, baseType: !1579, size: 1472)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1824, file: !37, line: 644, baseType: !1582, size: 64, offset: 1472)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !1824, file: !37, line: 645, baseType: !1829, size: 64, offset: 1536)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{null, !67, !962}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !1824, file: !37, line: 646, baseType: !1582, size: 64, offset: 1600)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !1824, file: !37, line: 647, baseType: !1573, size: 64, offset: 1664)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !1824, file: !37, line: 648, baseType: !1573, size: 64, offset: 1728)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !68, file: !30, line: 493, baseType: !1836, size: 64, offset: 4160)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !30, line: 493, flags: DIFlagFwdDecl)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !68, file: !30, line: 499, baseType: !79, size: 128, offset: 4224)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !68, file: !30, line: 502, baseType: !1840, size: 64, offset: 4352)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1842)
!1842 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !30, line: 502, flags: DIFlagFwdDecl)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !68, file: !30, line: 504, baseType: !1844, size: 64, offset: 4416)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !68, file: !30, line: 505, baseType: !254, size: 64, offset: 4480)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !68, file: !30, line: 510, baseType: !254, size: 64, offset: 4544)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !68, file: !30, line: 511, baseType: !1848, size: 64, offset: 4608)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !30, line: 511, flags: DIFlagFwdDecl)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !68, file: !30, line: 513, baseType: !1852, size: 64, offset: 4672)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !30, line: 288, size: 128, elements: !1854)
!1854 = !{!1855, !1856}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1853, file: !30, line: 293, baseType: !7, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !1853, file: !30, line: 294, baseType: !185, size: 64, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !68, file: !30, line: 515, baseType: !79, size: 128, offset: 4736)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !68, file: !30, line: 526, baseType: !1859, offset: 4864)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !1860, line: 5, elements: !107)
!1860 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !68, file: !30, line: 528, baseType: !1862, size: 64, offset: 4864)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !1864, line: 51, size: 1344, elements: !1865)
!1864 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!1865 = !{!1866, !1867, !1869, !1870, !1960, !1969, !1970, !1971, !1972, !1973, !1974, !1975}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1863, file: !1864, line: 52, baseType: !75, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !1863, file: !1864, line: 53, baseType: !1868, size: 32, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !1864, line: 28, baseType: !392)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !1863, file: !1864, line: 54, baseType: !75, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1863, file: !1864, line: 55, baseType: !1871, size: 192, offset: 192)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !1872, line: 17, size: 192, elements: !1873)
!1872 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!1873 = !{!1874, !1876, !1959}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !1871, file: !1872, line: 18, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1871, file: !1872, line: 19, baseType: !1877, size: 64, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !1872, line: 110, size: 1152, elements: !1880)
!1880 = !{!1881, !1885, !1889, !1895, !1901, !1905, !1909, !1914, !1918, !1919, !1923, !1927, !1931, !1942, !1943, !1944, !1945, !1955}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1879, file: !1872, line: 111, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!1875, !1875}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !1879, file: !1872, line: 112, baseType: !1886, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{null, !1875}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !1879, file: !1872, line: 113, baseType: !1890, size: 64, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!1891 = !DISubroutineType(types: !1892)
!1892 = !{!962, !1893}
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !1879, file: !1872, line: 114, baseType: !1896, size: 64, offset: 192)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!1353, !1893, !1899}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !1879, file: !1872, line: 116, baseType: !1902, size: 64, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!962, !1893, !75}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !1879, file: !1872, line: 118, baseType: !1906, size: 64, offset: 320)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!119, !1893, !75, !7, !56, !182}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !1879, file: !1872, line: 123, baseType: !1910, size: 64, offset: 384)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!119, !1893, !75, !1913, !182}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !75, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !1879, file: !1872, line: 126, baseType: !1915, size: 64, offset: 448)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!75, !1893}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !1879, file: !1872, line: 127, baseType: !1915, size: 64, offset: 512)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !1879, file: !1872, line: 128, baseType: !1920, size: 64, offset: 576)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!1875, !1893}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !1879, file: !1872, line: 130, baseType: !1924, size: 64, offset: 640)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{!1875, !1893, !1875}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !1879, file: !1872, line: 133, baseType: !1928, size: 64, offset: 704)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!1875, !1893, !75}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !1879, file: !1872, line: 135, baseType: !1932, size: 64, offset: 768)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!119, !1893, !75, !75, !7, !7, !1935}
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !1872, line: 43, size: 640, elements: !1937)
!1937 = !{!1938, !1939, !1940}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1936, file: !1872, line: 44, baseType: !1875, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1936, file: !1872, line: 45, baseType: !7, size: 32, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1936, file: !1872, line: 46, baseType: !1941, size: 512, offset: 128)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !254, size: 512, elements: !498)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !1879, file: !1872, line: 140, baseType: !1924, size: 64, offset: 832)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !1879, file: !1872, line: 143, baseType: !1920, size: 64, offset: 896)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !1879, file: !1872, line: 145, baseType: !1882, size: 64, offset: 960)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !1879, file: !1872, line: 146, baseType: !1946, size: 64, offset: 1024)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!119, !1893, !1949}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !1872, line: 29, size: 128, elements: !1951)
!1951 = !{!1952, !1953, !1954}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1950, file: !1872, line: 30, baseType: !7, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1950, file: !1872, line: 31, baseType: !7, size: 32, offset: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !1950, file: !1872, line: 32, baseType: !1893, size: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !1879, file: !1872, line: 148, baseType: !1956, size: 64, offset: 1088)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!119, !1893, !67}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1871, file: !1872, line: 20, baseType: !67, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1863, file: !1864, line: 57, baseType: !1961, size: 64, offset: 384)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !1864, line: 31, size: 704, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1962, file: !1864, line: 32, baseType: !135, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1962, file: !1864, line: 33, baseType: !119, size: 32, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1962, file: !1864, line: 34, baseType: !56, size: 64, offset: 128)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1962, file: !1864, line: 35, baseType: !1961, size: 64, offset: 192)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1962, file: !1864, line: 43, baseType: !204, size: 448, offset: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !1863, file: !1864, line: 58, baseType: !1961, size: 64, offset: 448)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1863, file: !1864, line: 59, baseType: !1862, size: 64, offset: 512)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1863, file: !1864, line: 60, baseType: !1862, size: 64, offset: 576)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1863, file: !1864, line: 61, baseType: !1862, size: 64, offset: 640)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1863, file: !1864, line: 63, baseType: !71, size: 512, offset: 704)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1863, file: !1864, line: 65, baseType: !185, size: 64, offset: 1216)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1863, file: !1864, line: 66, baseType: !56, size: 64, offset: 1280)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !68, file: !30, line: 529, baseType: !1875, size: 64, offset: 4928)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !68, file: !30, line: 534, baseType: !1978, size: 32, offset: 4992)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !80, line: 16, baseType: !1979)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !80, line: 13, baseType: !392)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !68, file: !30, line: 535, baseType: !392, size: 32, offset: 5024)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !68, file: !30, line: 537, baseType: !93, offset: 5056)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !68, file: !30, line: 538, baseType: !79, size: 128, offset: 5056)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !68, file: !30, line: 540, baseType: !1984, size: 64, offset: 5184)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !1986, line: 54, size: 960, elements: !1987)
!1986 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!1987 = !{!1988, !1989, !1990, !1991, !1992, !1993, !1994, !1998, !2002, !2003, !2004, !2005, !2009, !2013, !2014}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1985, file: !1986, line: 55, baseType: !75, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1985, file: !1986, line: 56, baseType: !1628, size: 64, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !1985, file: !1986, line: 58, baseType: !189, size: 64, offset: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !1985, file: !1986, line: 59, baseType: !189, size: 64, offset: 192)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !1985, file: !1986, line: 60, baseType: !86, size: 64, offset: 256)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !1985, file: !1986, line: 62, baseType: !1564, size: 64, offset: 320)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1985, file: !1986, line: 63, baseType: !1995, size: 64, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{!135, !67, !1571}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !1985, file: !1986, line: 65, baseType: !1999, size: 64, offset: 448)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{null, !1984}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !1985, file: !1986, line: 66, baseType: !1573, size: 64, offset: 512)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !1985, file: !1986, line: 68, baseType: !1582, size: 64, offset: 576)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !1985, file: !1986, line: 70, baseType: !1336, size: 64, offset: 640)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1985, file: !1986, line: 71, baseType: !2006, size: 64, offset: 704)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!1353, !67}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1985, file: !1986, line: 73, baseType: !2010, size: 64, offset: 768)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{null, !67, !1373, !1380}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !1985, file: !1986, line: 75, baseType: !1577, size: 64, offset: 832)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1985, file: !1986, line: 77, baseType: !1698, size: 64, offset: 896)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !68, file: !30, line: 541, baseType: !189, size: 64, offset: 5248)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !68, file: !30, line: 543, baseType: !1573, size: 64, offset: 5312)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !68, file: !30, line: 544, baseType: !2018, size: 64, offset: 5376)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !30, line: 45, flags: DIFlagFwdDecl)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !68, file: !30, line: 545, baseType: !2021, size: 64, offset: 5440)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !30, line: 47, flags: DIFlagFwdDecl)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !68, file: !30, line: 547, baseType: !962, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !68, file: !30, line: 548, baseType: !962, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !68, file: !30, line: 549, baseType: !962, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !68, file: !30, line: 550, baseType: !962, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !63, file: !64, line: 277, baseType: !68, size: 5568, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !63, file: !64, line: 278, baseType: !119, size: 32, offset: 5632)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !63, file: !64, line: 279, baseType: !2030, size: 64, offset: 5696)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host_ops", file: !64, line: 82, size: 1408, elements: !2033)
!2033 = !{!2034, !2088, !2092, !2093, !2097, !2115, !2119, !2120, !2124, !2128, !2132, !2136, !2137, !2141, !2142, !2143, !2144, !2145, !2146, !2150, !2151, !2152}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "post_req", scope: !2032, file: !64, line: 91, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{null, !62, !2038, !119}
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_request", file: !2040, line: 144, size: 896, elements: !2041)
!2040 = !DIFile(filename: "./include/linux/mmc/core.h", directory: "/home/lizy2001/genbc/linux")
!2041 = !{!2042, !2075, !2076, !2077, !2078, !2079, !2080, !2084, !2085, !2086, !2087}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "sbc", scope: !2039, file: !2040, line: 145, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_command", file: !2040, line: 26, size: 448, elements: !2045)
!2045 = !{!2046, !2047, !2048, !2050, !2051, !2052, !2053, !2054, !2074}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !2044, file: !2040, line: 27, baseType: !392, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !2044, file: !2040, line: 28, baseType: !392, size: 32, offset: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "resp", scope: !2044, file: !2040, line: 32, baseType: !2049, size: 128, offset: 64)
!2049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 128, elements: !335)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2044, file: !2040, line: 33, baseType: !7, size: 32, offset: 192)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !2044, file: !2040, line: 92, baseType: !7, size: 32, offset: 224)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2044, file: !2040, line: 93, baseType: !119, size: 32, offset: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "busy_timeout", scope: !2044, file: !2040, line: 109, baseType: !7, size: 32, offset: 288)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2044, file: !2040, line: 110, baseType: !2055, size: 64, offset: 320)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_data", file: !2040, line: 114, size: 576, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2073}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_ns", scope: !2056, file: !2040, line: 115, baseType: !7, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_clks", scope: !2056, file: !2040, line: 116, baseType: !7, size: 32, offset: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "blksz", scope: !2056, file: !2040, line: 117, baseType: !7, size: 32, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2056, file: !2040, line: 118, baseType: !7, size: 32, offset: 96)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "blk_addr", scope: !2056, file: !2040, line: 119, baseType: !7, size: 32, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2056, file: !2040, line: 120, baseType: !119, size: 32, offset: 160)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2056, file: !2040, line: 121, baseType: !7, size: 32, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_xfered", scope: !2056, file: !2040, line: 132, baseType: !7, size: 32, offset: 224)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2056, file: !2040, line: 134, baseType: !2043, size: 64, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !2056, file: !2040, line: 135, baseType: !2038, size: 64, offset: 320)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !2056, file: !2040, line: 137, baseType: !7, size: 32, offset: 384)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !2056, file: !2040, line: 138, baseType: !119, size: 32, offset: 416)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !2056, file: !2040, line: 139, baseType: !2071, size: 64, offset: 448)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !2040, line: 139, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "host_cookie", scope: !2056, file: !2040, line: 140, baseType: !622, size: 32, offset: 512)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !2044, file: !2040, line: 111, baseType: !2038, size: 64, offset: 384)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !2039, file: !2040, line: 146, baseType: !2043, size: 64, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2039, file: !2040, line: 147, baseType: !2055, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2039, file: !2040, line: 148, baseType: !2043, size: 64, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2039, file: !2040, line: 150, baseType: !698, size: 192, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_completion", scope: !2039, file: !2040, line: 151, baseType: !698, size: 192, offset: 448)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2039, file: !2040, line: 152, baseType: !2081, size: 64, offset: 640)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2038}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_notifier", scope: !2039, file: !2040, line: 158, baseType: !2081, size: 64, offset: 704)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !2039, file: !2040, line: 159, baseType: !62, size: 64, offset: 768)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cap_cmd_during_tfr", scope: !2039, file: !2040, line: 162, baseType: !962, size: 8, offset: 832)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2039, file: !2040, line: 164, baseType: !119, size: 32, offset: 864)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "pre_req", scope: !2032, file: !64, line: 93, baseType: !2089, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DISubroutineType(types: !2091)
!2091 = !{null, !62, !2038}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2032, file: !64, line: 94, baseType: !2089, size: 64, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "request_atomic", scope: !2032, file: !64, line: 96, baseType: !2094, size: 64, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!119, !62, !2038}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "set_ios", scope: !2032, file: !64, line: 113, baseType: !2098, size: 64, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !62, !2101}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ios", file: !64, line: 19, size: 160, elements: !2103)
!2103 = !{!2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2102, file: !64, line: 20, baseType: !7, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vdd", scope: !2102, file: !64, line: 21, baseType: !177, size: 16, offset: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "power_delay_ms", scope: !2102, file: !64, line: 22, baseType: !7, size: 32, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mode", scope: !2102, file: !64, line: 26, baseType: !531, size: 8, offset: 96)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !2102, file: !64, line: 31, baseType: !531, size: 8, offset: 104)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "power_mode", scope: !2102, file: !64, line: 37, baseType: !531, size: 8, offset: 112)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !2102, file: !64, line: 44, baseType: !531, size: 8, offset: 120)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "timing", scope: !2102, file: !64, line: 50, baseType: !531, size: 8, offset: 128)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "signal_voltage", scope: !2102, file: !64, line: 64, baseType: !531, size: 8, offset: 136)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "drv_type", scope: !2102, file: !64, line: 70, baseType: !531, size: 8, offset: 144)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_strobe", scope: !2102, file: !64, line: 77, baseType: !962, size: 8, offset: 152)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "get_ro", scope: !2032, file: !64, line: 122, baseType: !2116, size: 64, offset: 320)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!119, !62}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "get_cd", scope: !2032, file: !64, line: 131, baseType: !2116, size: 64, offset: 384)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "enable_sdio_irq", scope: !2032, file: !64, line: 133, baseType: !2121, size: 64, offset: 448)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{null, !62, !119}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ack_sdio_irq", scope: !2032, file: !64, line: 135, baseType: !2125, size: 64, offset: 512)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DISubroutineType(types: !2127)
!2127 = !{null, !62}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "init_card", scope: !2032, file: !64, line: 138, baseType: !2129, size: 64, offset: 576)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null, !62, !57}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "start_signal_voltage_switch", scope: !2032, file: !64, line: 140, baseType: !2133, size: 64, offset: 640)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!119, !62, !2101}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "card_busy", scope: !2032, file: !64, line: 143, baseType: !2116, size: 64, offset: 704)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "execute_tuning", scope: !2032, file: !64, line: 146, baseType: !2138, size: 64, offset: 768)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!119, !62, !392}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_hs400_tuning", scope: !2032, file: !64, line: 149, baseType: !2133, size: 64, offset: 832)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_prepare_ddr", scope: !2032, file: !64, line: 152, baseType: !2116, size: 64, offset: 896)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_downgrade", scope: !2032, file: !64, line: 155, baseType: !2125, size: 64, offset: 960)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_complete", scope: !2032, file: !64, line: 158, baseType: !2125, size: 64, offset: 1024)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_enhanced_strobe", scope: !2032, file: !64, line: 161, baseType: !2098, size: 64, offset: 1088)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "select_drive_strength", scope: !2032, file: !64, line: 163, baseType: !2147, size: 64, offset: 1152)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!119, !57, !7, !119, !119, !709}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !2032, file: !64, line: 167, baseType: !2125, size: 64, offset: 1216)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "card_event", scope: !2032, file: !64, line: 168, baseType: !2125, size: 64, offset: 1280)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "multi_io_quirk", scope: !2032, file: !64, line: 174, baseType: !2153, size: 64, offset: 1344)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!119, !57, !7, !119}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq", scope: !63, file: !64, line: 280, baseType: !2157, size: 64, offset: 5760)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq", file: !2159, line: 23, size: 320, elements: !2160)
!2159 = !DIFile(filename: "drivers/mmc/core/pwrseq.h", directory: "/home/lizy2001/genbc/linux")
!2160 = !{!2161, !2170, !2171, !2172}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2158, file: !2159, line: 24, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2164)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq_ops", file: !2159, line: 16, size: 256, elements: !2165)
!2165 = !{!2166, !2167, !2168, !2169}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "pre_power_on", scope: !2164, file: !2159, line: 17, baseType: !2125, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "post_power_on", scope: !2164, file: !2159, line: 18, baseType: !2125, size: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "power_off", scope: !2164, file: !2159, line: 19, baseType: !2125, size: 64, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2164, file: !2159, line: 20, baseType: !2125, size: 64, offset: 192)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2158, file: !2159, line: 25, baseType: !67, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq_node", scope: !2158, file: !2159, line: 26, baseType: !79, size: 128, offset: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2158, file: !2159, line: 27, baseType: !1628, size: 64, offset: 256)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "f_min", scope: !63, file: !64, line: 281, baseType: !7, size: 32, offset: 5824)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "f_max", scope: !63, file: !64, line: 282, baseType: !7, size: 32, offset: 5856)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "f_init", scope: !63, file: !64, line: 283, baseType: !7, size: 32, offset: 5888)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail", scope: !63, file: !64, line: 284, baseType: !392, size: 32, offset: 5920)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sdio", scope: !63, file: !64, line: 285, baseType: !392, size: 32, offset: 5952)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sd", scope: !63, file: !64, line: 286, baseType: !392, size: 32, offset: 5984)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_mmc", scope: !63, file: !64, line: 287, baseType: !392, size: 32, offset: 6016)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "pm_notify", scope: !63, file: !64, line: 289, baseType: !2181, size: 192, offset: 6080)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2182, line: 54, size: 192, elements: !2183)
!2182 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2183 = !{!2184, !2190, !2191}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2181, file: !2182, line: 55, baseType: !2185, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2182, line: 51, baseType: !2186)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DISubroutineType(types: !2188)
!2188 = !{!119, !2189, !185, !56}
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2181, file: !2182, line: 56, baseType: !2189, size: 64, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2181, file: !2182, line: 57, baseType: !119, size: 32, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !63, file: !64, line: 291, baseType: !1736, size: 64, offset: 6272)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_330", scope: !63, file: !64, line: 292, baseType: !392, size: 32, offset: 6336)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_300", scope: !63, file: !64, line: 293, baseType: !392, size: 32, offset: 6368)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_180", scope: !63, file: !64, line: 294, baseType: !392, size: 32, offset: 6400)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !63, file: !64, line: 314, baseType: !392, size: 32, offset: 6432)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "caps2", scope: !63, file: !64, line: 352, baseType: !392, size: 32, offset: 6464)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_drv_type", scope: !63, file: !64, line: 381, baseType: !119, size: 32, offset: 6496)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pm_caps", scope: !63, file: !64, line: 383, baseType: !2200, size: 32, offset: 6528)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmc_pm_flag_t", file: !2201, line: 22, baseType: !7)
!2201 = !DIFile(filename: "./include/linux/mmc/pm.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "max_seg_size", scope: !63, file: !64, line: 386, baseType: !7, size: 32, offset: 6560)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "max_segs", scope: !63, file: !64, line: 387, baseType: !177, size: 16, offset: 6592)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !63, file: !64, line: 388, baseType: !177, size: 16, offset: 6608)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "max_req_size", scope: !63, file: !64, line: 389, baseType: !7, size: 32, offset: 6624)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_size", scope: !63, file: !64, line: 390, baseType: !7, size: 32, offset: 6656)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_count", scope: !63, file: !64, line: 391, baseType: !7, size: 32, offset: 6688)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "max_busy_timeout", scope: !63, file: !64, line: 392, baseType: !7, size: 32, offset: 6720)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !63, file: !64, line: 395, baseType: !93, offset: 6752)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "ios", scope: !63, file: !64, line: 397, baseType: !2102, size: 160, offset: 6752)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "use_spi_crc", scope: !63, file: !64, line: 400, baseType: !7, size: 1, offset: 6912, flags: DIFlagBitField, extraData: i64 6912)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !63, file: !64, line: 401, baseType: !7, size: 1, offset: 6913, flags: DIFlagBitField, extraData: i64 6912)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dead", scope: !63, file: !64, line: 402, baseType: !7, size: 1, offset: 6914, flags: DIFlagBitField, extraData: i64 6912)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "doing_init_tune", scope: !63, file: !64, line: 403, baseType: !7, size: 1, offset: 6915, flags: DIFlagBitField, extraData: i64 6912)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "can_retune", scope: !63, file: !64, line: 404, baseType: !7, size: 1, offset: 6916, flags: DIFlagBitField, extraData: i64 6912)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "doing_retune", scope: !63, file: !64, line: 405, baseType: !7, size: 1, offset: 6917, flags: DIFlagBitField, extraData: i64 6912)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "retune_now", scope: !63, file: !64, line: 406, baseType: !7, size: 1, offset: 6918, flags: DIFlagBitField, extraData: i64 6912)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "retune_paused", scope: !63, file: !64, line: 407, baseType: !7, size: 1, offset: 6919, flags: DIFlagBitField, extraData: i64 6912)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "use_blk_mq", scope: !63, file: !64, line: 408, baseType: !7, size: 1, offset: 6920, flags: DIFlagBitField, extraData: i64 6912)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "retune_crc_disable", scope: !63, file: !64, line: 409, baseType: !7, size: 1, offset: 6921, flags: DIFlagBitField, extraData: i64 6912)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma_map_merge", scope: !63, file: !64, line: 410, baseType: !7, size: 1, offset: 6922, flags: DIFlagBitField, extraData: i64 6912)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_disable", scope: !63, file: !64, line: 412, baseType: !119, size: 32, offset: 6944)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_entered", scope: !63, file: !64, line: 413, baseType: !119, size: 32, offset: 6976)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "need_retune", scope: !63, file: !64, line: 415, baseType: !119, size: 32, offset: 7008)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "hold_retune", scope: !63, file: !64, line: 416, baseType: !119, size: 32, offset: 7040)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "retune_period", scope: !63, file: !64, line: 417, baseType: !7, size: 32, offset: 7072)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "retune_timer", scope: !63, file: !64, line: 418, baseType: !1748, size: 320, offset: 7104)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_card_event", scope: !63, file: !64, line: 420, baseType: !962, size: 8, offset: 7424)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !63, file: !64, line: 422, baseType: !57, size: 64, offset: 7488)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !63, file: !64, line: 424, baseType: !669, size: 128, offset: 7552)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "claimer", scope: !63, file: !64, line: 425, baseType: !2232, size: 64, offset: 7680)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ctx", file: !64, line: 271, size: 64, elements: !2234)
!2234 = !{!2235}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2233, file: !64, line: 272, baseType: !382, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "claim_cnt", scope: !63, file: !64, line: 426, baseType: !119, size: 32, offset: 7744)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "default_ctx", scope: !63, file: !64, line: 427, baseType: !2233, size: 64, offset: 7808)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !63, file: !64, line: 429, baseType: !2239, size: 704, offset: 7872)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1288, line: 115, size: 704, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2246}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2239, file: !1288, line: 116, baseType: !1287, size: 256)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2239, file: !1288, line: 117, baseType: !1748, size: 320, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2239, file: !1288, line: 120, baseType: !2244, size: 64, offset: 576)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1288, line: 18, flags: DIFlagFwdDecl)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2239, file: !1288, line: 121, baseType: !119, size: 32, offset: 640)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "detect_change", scope: !63, file: !64, line: 430, baseType: !119, size: 32, offset: 8576)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !63, file: !64, line: 431, baseType: !2249, size: 128, offset: 8640)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_slot", file: !64, line: 243, size: 128, elements: !2250)
!2250 = !{!2251, !2252, !2253}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "cd_irq", scope: !2249, file: !64, line: 244, baseType: !119, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "cd_wake_enabled", scope: !2249, file: !64, line: 245, baseType: !962, size: 8, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "handler_priv", scope: !2249, file: !64, line: 246, baseType: !56, size: 64, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "bus_ops", scope: !63, file: !64, line: 433, baseType: !2255, size: 64, offset: 8768)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2257)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_bus_ops", file: !2258, line: 20, size: 704, elements: !2259)
!2258 = !DIFile(filename: "drivers/mmc/core/core.h", directory: "/home/lizy2001/genbc/linux")
!2259 = !{!2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2257, file: !2258, line: 21, baseType: !2125, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !2257, file: !2258, line: 22, baseType: !2125, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pre_suspend", scope: !2257, file: !2258, line: 23, baseType: !2116, size: 64, offset: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2257, file: !2258, line: 24, baseType: !2116, size: 64, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2257, file: !2258, line: 25, baseType: !2116, size: 64, offset: 256)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2257, file: !2258, line: 26, baseType: !2116, size: 64, offset: 320)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2257, file: !2258, line: 27, baseType: !2116, size: 64, offset: 384)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !2257, file: !2258, line: 28, baseType: !2116, size: 64, offset: 448)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2257, file: !2258, line: 29, baseType: !2116, size: 64, offset: 512)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !2257, file: !2258, line: 30, baseType: !2116, size: 64, offset: 576)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reset", scope: !2257, file: !2258, line: 31, baseType: !2116, size: 64, offset: 640)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "bus_refs", scope: !63, file: !64, line: 434, baseType: !7, size: 32, offset: 8832)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irqs", scope: !63, file: !64, line: 436, baseType: !7, size: 32, offset: 8864)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread", scope: !63, file: !64, line: 437, baseType: !382, size: 64, offset: 8896)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_work", scope: !63, file: !64, line: 438, baseType: !2239, size: 704, offset: 8960)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_pending", scope: !63, file: !64, line: 439, baseType: !962, size: 8, offset: 9664)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread_abort", scope: !63, file: !64, line: 440, baseType: !276, size: 32, offset: 9696)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "pm_flags", scope: !63, file: !64, line: 442, baseType: !2200, size: 32, offset: 9728)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !63, file: !64, line: 444, baseType: !2279, size: 64, offset: 9792)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DICompositeType(tag: DW_TAG_structure_type, name: "led_trigger", file: !64, line: 444, flags: DIFlagFwdDecl)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "supply", scope: !63, file: !64, line: 449, baseType: !2282, size: 128, offset: 9856)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_supply", file: !64, line: 266, size: 128, elements: !2283)
!2283 = !{!2284, !2287}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "vmmc", scope: !2282, file: !64, line: 267, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !64, line: 263, flags: DIFlagFwdDecl)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "vqmmc", scope: !2282, file: !64, line: 268, baseType: !2285, size: 64, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !63, file: !64, line: 451, baseType: !2289, size: 64, offset: 9984)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1390, line: 21, flags: DIFlagFwdDecl)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "ongoing_mrq", scope: !63, file: !64, line: 454, baseType: !2038, size: 64, offset: 10048)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "actual_clock", scope: !63, file: !64, line: 460, baseType: !7, size: 32, offset: 10112)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "slotno", scope: !63, file: !64, line: 462, baseType: !7, size: 32, offset: 10144)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_req", scope: !63, file: !64, line: 464, baseType: !119, size: 32, offset: 10176)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !63, file: !64, line: 465, baseType: !392, size: 32, offset: 10208)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_ops", scope: !63, file: !64, line: 468, baseType: !2297, size: 64, offset: 10240)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2299)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cqe_ops", file: !64, line: 178, size: 576, elements: !2300)
!2300 = !{!2301, !2305, !2306, !2307, !2308, !2309, !2310, !2315, !2316}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enable", scope: !2299, file: !64, line: 180, baseType: !2302, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DISubroutineType(types: !2304)
!2304 = !{!119, !62, !57}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_disable", scope: !2299, file: !64, line: 182, baseType: !2125, size: 64, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_request", scope: !2299, file: !64, line: 187, baseType: !2094, size: 64, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_post_req", scope: !2299, file: !64, line: 189, baseType: !2089, size: 64, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_off", scope: !2299, file: !64, line: 195, baseType: !2125, size: 64, offset: 256)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_wait_for_idle", scope: !2299, file: !64, line: 200, baseType: !2116, size: 64, offset: 320)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_timeout", scope: !2299, file: !64, line: 206, baseType: !2311, size: 64, offset: 384)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!962, !62, !2038, !2314}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_start", scope: !2299, file: !64, line: 212, baseType: !2125, size: 64, offset: 448)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_finish", scope: !2299, file: !64, line: 219, baseType: !2125, size: 64, offset: 512)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_private", scope: !63, file: !64, line: 469, baseType: !56, size: 64, offset: 10304)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_qdepth", scope: !63, file: !64, line: 470, baseType: !119, size: 32, offset: 10368)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enabled", scope: !63, file: !64, line: 471, baseType: !962, size: 8, offset: 10400)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_on", scope: !63, file: !64, line: 472, baseType: !962, size: 8, offset: 10408)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "hsq_enabled", scope: !63, file: !64, line: 475, baseType: !962, size: 8, offset: 10416)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !63, file: !64, line: 477, baseType: !1300, align: 512, offset: 10752)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !58, file: !59, line: 246, baseType: !68, size: 5568, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "ocr", scope: !58, file: !59, line: 247, baseType: !392, size: 32, offset: 5632)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "rca", scope: !58, file: !59, line: 248, baseType: !7, size: 32, offset: 5664)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !58, file: !59, line: 249, baseType: !7, size: 32, offset: 5696)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !58, file: !59, line: 254, baseType: !7, size: 32, offset: 5728)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !58, file: !59, line: 255, baseType: !7, size: 32, offset: 5760)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_max_rate", scope: !58, file: !59, line: 256, baseType: !7, size: 32, offset: 5792)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "reenable_cmdq", scope: !58, file: !59, line: 274, baseType: !962, size: 8, offset: 5824)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !58, file: !59, line: 276, baseType: !7, size: 32, offset: 5856)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "erase_shift", scope: !58, file: !59, line: 277, baseType: !7, size: 32, offset: 5888)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pref_erase", scope: !58, file: !59, line: 278, baseType: !7, size: 32, offset: 5920)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "eg_boundary", scope: !58, file: !59, line: 279, baseType: !7, size: 32, offset: 5952)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "erase_arg", scope: !58, file: !59, line: 280, baseType: !7, size: 32, offset: 5984)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "erased_byte", scope: !58, file: !59, line: 281, baseType: !529, size: 8, offset: 6016)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "raw_cid", scope: !58, file: !59, line: 283, baseType: !2049, size: 128, offset: 6048)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "raw_csd", scope: !58, file: !59, line: 284, baseType: !2049, size: 128, offset: 6176)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scr", scope: !58, file: !59, line: 285, baseType: !2340, size: 64, offset: 6304)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 64, elements: !934)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ssr", scope: !58, file: !59, line: 286, baseType: !2342, size: 512, offset: 6368)
!2342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !392, size: 512, elements: !754)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !58, file: !59, line: 287, baseType: !2344, size: 224, offset: 6880)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cid", file: !59, line: 13, size: 224, elements: !2345)
!2345 = !{!2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !2344, file: !59, line: 14, baseType: !7, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "prod_name", scope: !2344, file: !59, line: 15, baseType: !899, size: 64, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !2344, file: !59, line: 16, baseType: !531, size: 8, offset: 96)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2344, file: !59, line: 17, baseType: !7, size: 32, offset: 128)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !2344, file: !59, line: 18, baseType: !177, size: 16, offset: 160)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !2344, file: !59, line: 19, baseType: !177, size: 16, offset: 176)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "hwrev", scope: !2344, file: !59, line: 20, baseType: !531, size: 8, offset: 192)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !2344, file: !59, line: 21, baseType: !531, size: 8, offset: 200)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !2344, file: !59, line: 22, baseType: !531, size: 8, offset: 208)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !58, file: !59, line: 288, baseType: !2356, size: 352, offset: 7104)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_csd", file: !59, line: 25, size: 352, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "structure", scope: !2356, file: !59, line: 26, baseType: !531, size: 8)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "mmca_vsn", scope: !2356, file: !59, line: 27, baseType: !531, size: 8, offset: 8)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "cmdclass", scope: !2356, file: !59, line: 28, baseType: !177, size: 16, offset: 16)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "taac_clks", scope: !2356, file: !59, line: 29, baseType: !177, size: 16, offset: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "taac_ns", scope: !2356, file: !59, line: 30, baseType: !7, size: 32, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "c_size", scope: !2356, file: !59, line: 31, baseType: !7, size: 32, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "r2w_factor", scope: !2356, file: !59, line: 32, baseType: !7, size: 32, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !2356, file: !59, line: 33, baseType: !7, size: 32, offset: 160)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !2356, file: !59, line: 34, baseType: !7, size: 32, offset: 192)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "read_blkbits", scope: !2356, file: !59, line: 35, baseType: !7, size: 32, offset: 224)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "write_blkbits", scope: !2356, file: !59, line: 36, baseType: !7, size: 32, offset: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2356, file: !59, line: 37, baseType: !7, size: 32, offset: 288)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "read_partial", scope: !2356, file: !59, line: 38, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "read_misalign", scope: !2356, file: !59, line: 39, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "write_partial", scope: !2356, file: !59, line: 40, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "write_misalign", scope: !2356, file: !59, line: 41, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_imp", scope: !2356, file: !59, line: 42, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd", scope: !58, file: !59, line: 289, baseType: !2376, size: 1344, offset: 7488)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ext_csd", file: !59, line: 45, size: 1344, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2452, !2453, !2454, !2455}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !2376, file: !59, line: 46, baseType: !529, size: 8)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "erase_group_def", scope: !2376, file: !59, line: 47, baseType: !529, size: 8, offset: 8)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sec_feature_support", scope: !2376, file: !59, line: 48, baseType: !529, size: 8, offset: 16)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "rel_sectors", scope: !2376, file: !59, line: 49, baseType: !529, size: 8, offset: 24)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "rel_param", scope: !2376, file: !59, line: 50, baseType: !529, size: 8, offset: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_rpmb_supported", scope: !2376, file: !59, line: 51, baseType: !962, size: 8, offset: 40)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "part_config", scope: !2376, file: !59, line: 52, baseType: !529, size: 8, offset: 48)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ctrl", scope: !2376, file: !59, line: 53, baseType: !529, size: 8, offset: 56)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "rst_n_function", scope: !2376, file: !59, line: 54, baseType: !529, size: 8, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_writes", scope: !2376, file: !59, line: 55, baseType: !529, size: 8, offset: 72)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_reads", scope: !2376, file: !59, line: 56, baseType: !529, size: 8, offset: 80)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "packed_event_en", scope: !2376, file: !59, line: 57, baseType: !529, size: 8, offset: 88)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "part_time", scope: !2376, file: !59, line: 58, baseType: !7, size: 32, offset: 96)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sa_timeout", scope: !2376, file: !59, line: 59, baseType: !7, size: 32, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "generic_cmd6_time", scope: !2376, file: !59, line: 60, baseType: !7, size: 32, offset: 160)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_longtime", scope: !2376, file: !59, line: 61, baseType: !7, size: 32, offset: 192)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_notification", scope: !2376, file: !59, line: 62, baseType: !529, size: 8, offset: 224)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !2376, file: !59, line: 63, baseType: !7, size: 32, offset: 256)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "hs200_max_dtr", scope: !2376, file: !59, line: 64, baseType: !7, size: 32, offset: 288)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !2376, file: !59, line: 69, baseType: !7, size: 32, offset: 320)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_size", scope: !2376, file: !59, line: 70, baseType: !7, size: 32, offset: 352)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_timeout", scope: !2376, file: !59, line: 71, baseType: !7, size: 32, offset: 384)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sec_trim_mult", scope: !2376, file: !59, line: 72, baseType: !7, size: 32, offset: 416)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "sec_erase_mult", scope: !2376, file: !59, line: 73, baseType: !7, size: 32, offset: 448)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "trim_timeout", scope: !2376, file: !59, line: 74, baseType: !7, size: 32, offset: 480)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "partition_setting_completed", scope: !2376, file: !59, line: 75, baseType: !962, size: 8, offset: 512)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_offset", scope: !2376, file: !59, line: 76, baseType: !258, size: 64, offset: 576)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_size", scope: !2376, file: !59, line: 77, baseType: !7, size: 32, offset: 640)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !2376, file: !59, line: 78, baseType: !7, size: 32, offset: 672)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_en", scope: !2376, file: !59, line: 79, baseType: !962, size: 8, offset: 704)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "hpi", scope: !2376, file: !59, line: 80, baseType: !962, size: 8, offset: 712)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_cmd", scope: !2376, file: !59, line: 81, baseType: !7, size: 32, offset: 736)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "bkops", scope: !2376, file: !59, line: 82, baseType: !962, size: 8, offset: 768)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "man_bkops_en", scope: !2376, file: !59, line: 83, baseType: !962, size: 8, offset: 776)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bkops_en", scope: !2376, file: !59, line: 84, baseType: !962, size: 8, offset: 784)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "data_sector_size", scope: !2376, file: !59, line: 85, baseType: !7, size: 32, offset: 800)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "data_tag_unit_size", scope: !2376, file: !59, line: 86, baseType: !7, size: 32, offset: 832)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lock", scope: !2376, file: !59, line: 87, baseType: !7, size: 32, offset: 864)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lockable", scope: !2376, file: !59, line: 88, baseType: !962, size: 8, offset: 896)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ffu_capable", scope: !2376, file: !59, line: 89, baseType: !962, size: 8, offset: 904)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_en", scope: !2376, file: !59, line: 90, baseType: !962, size: 8, offset: 912)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_support", scope: !2376, file: !59, line: 91, baseType: !962, size: 8, offset: 920)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_depth", scope: !2376, file: !59, line: 92, baseType: !7, size: 32, offset: 928)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !2376, file: !59, line: 94, baseType: !2422, size: 64, offset: 960)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 64, elements: !498)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "raw_exception_status", scope: !2376, file: !59, line: 95, baseType: !529, size: 8, offset: 1024)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "raw_partition_support", scope: !2376, file: !59, line: 96, baseType: !529, size: 8, offset: 1032)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "raw_rpmb_size_mult", scope: !2376, file: !59, line: 97, baseType: !529, size: 8, offset: 1040)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erased_mem_count", scope: !2376, file: !59, line: 98, baseType: !529, size: 8, offset: 1048)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "strobe_support", scope: !2376, file: !59, line: 99, baseType: !529, size: 8, offset: 1056)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ext_csd_structure", scope: !2376, file: !59, line: 100, baseType: !529, size: 8, offset: 1064)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "raw_card_type", scope: !2376, file: !59, line: 101, baseType: !529, size: 8, offset: 1072)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "raw_driver_strength", scope: !2376, file: !59, line: 102, baseType: !529, size: 8, offset: 1080)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_int_time", scope: !2376, file: !59, line: 103, baseType: !529, size: 8, offset: 1088)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_195", scope: !2376, file: !59, line: 104, baseType: !529, size: 8, offset: 1096)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_195", scope: !2376, file: !59, line: 105, baseType: !529, size: 8, offset: 1104)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_360", scope: !2376, file: !59, line: 106, baseType: !529, size: 8, offset: 1112)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_360", scope: !2376, file: !59, line: 107, baseType: !529, size: 8, offset: 1120)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "raw_s_a_timeout", scope: !2376, file: !59, line: 108, baseType: !529, size: 8, offset: 1128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_gap_size", scope: !2376, file: !59, line: 109, baseType: !529, size: 8, offset: 1136)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erase_timeout_mult", scope: !2376, file: !59, line: 110, baseType: !529, size: 8, offset: 1144)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_grp_size", scope: !2376, file: !59, line: 111, baseType: !529, size: 8, offset: 1152)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_trim_mult", scope: !2376, file: !59, line: 112, baseType: !529, size: 8, offset: 1160)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_erase_mult", scope: !2376, file: !59, line: 113, baseType: !529, size: 8, offset: 1168)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_feature_support", scope: !2376, file: !59, line: 114, baseType: !529, size: 8, offset: 1176)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "raw_trim_mult", scope: !2376, file: !59, line: 115, baseType: !529, size: 8, offset: 1184)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_195", scope: !2376, file: !59, line: 116, baseType: !529, size: 8, offset: 1192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_360", scope: !2376, file: !59, line: 117, baseType: !529, size: 8, offset: 1200)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_195", scope: !2376, file: !59, line: 118, baseType: !529, size: 8, offset: 1208)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_360", scope: !2376, file: !59, line: 119, baseType: !529, size: 8, offset: 1216)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_200_360", scope: !2376, file: !59, line: 120, baseType: !529, size: 8, offset: 1224)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "raw_bkops_status", scope: !2376, file: !59, line: 121, baseType: !529, size: 8, offset: 1232)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sectors", scope: !2376, file: !59, line: 122, baseType: !2451, size: 32, offset: 1240)
!2451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 32, elements: !335)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "pre_eol_info", scope: !2376, file: !59, line: 123, baseType: !529, size: 8, offset: 1272)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_a", scope: !2376, file: !59, line: 124, baseType: !529, size: 8, offset: 1280)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_b", scope: !2376, file: !59, line: 125, baseType: !529, size: 8, offset: 1288)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "feature_support", scope: !2376, file: !59, line: 127, baseType: !7, size: 32, offset: 1312)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !58, file: !59, line: 290, baseType: !2457, size: 48, offset: 8832)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_scr", file: !59, line: 131, size: 48, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "sda_vsn", scope: !2457, file: !59, line: 132, baseType: !531, size: 8)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec3", scope: !2457, file: !59, line: 133, baseType: !531, size: 8, offset: 8)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec4", scope: !2457, file: !59, line: 134, baseType: !531, size: 8, offset: 16)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "sda_specx", scope: !2457, file: !59, line: 135, baseType: !531, size: 8, offset: 24)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "bus_widths", scope: !2457, file: !59, line: 136, baseType: !531, size: 8, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !2457, file: !59, line: 139, baseType: !531, size: 8, offset: 40)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "ssr", scope: !58, file: !59, line: 291, baseType: !2466, size: 96, offset: 8896)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_ssr", file: !59, line: 144, size: 96, elements: !2467)
!2467 = !{!2468, !2469, !2470}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "au", scope: !2466, file: !59, line: 145, baseType: !7, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "erase_timeout", scope: !2466, file: !59, line: 146, baseType: !7, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "erase_offset", scope: !2466, file: !59, line: 147, baseType: !7, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sw_caps", scope: !58, file: !59, line: 292, baseType: !2472, size: 160, offset: 8992)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_switch_caps", file: !59, line: 150, size: 160, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2477, !2478}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !2472, file: !59, line: 151, baseType: !7, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "uhs_max_dtr", scope: !2472, file: !59, line: 152, baseType: !7, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_bus_mode", scope: !2472, file: !59, line: 160, baseType: !7, size: 32, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_drv_type", scope: !2472, file: !59, line: 174, baseType: !7, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_curr_limit", scope: !2472, file: !59, line: 179, baseType: !7, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs", scope: !58, file: !59, line: 294, baseType: !7, size: 32, offset: 9152)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs_probed", scope: !58, file: !59, line: 295, baseType: !276, size: 32, offset: 9184)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !58, file: !59, line: 296, baseType: !2482, size: 96, offset: 9216)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cccr", file: !59, line: 192, size: 96, elements: !2483)
!2483 = !{!2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_vsn", scope: !2482, file: !59, line: 193, baseType: !7, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "sd_vsn", scope: !2482, file: !59, line: 194, baseType: !7, size: 32, offset: 32)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "multi_block", scope: !2482, file: !59, line: 195, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed", scope: !2482, file: !59, line: 196, baseType: !7, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "wide_bus", scope: !2482, file: !59, line: 197, baseType: !7, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "high_power", scope: !2482, file: !59, line: 198, baseType: !7, size: 1, offset: 67, flags: DIFlagBitField, extraData: i64 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "high_speed", scope: !2482, file: !59, line: 199, baseType: !7, size: 1, offset: 68, flags: DIFlagBitField, extraData: i64 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "disable_cd", scope: !2482, file: !59, line: 200, baseType: !7, size: 1, offset: 69, flags: DIFlagBitField, extraData: i64 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "cis", scope: !58, file: !59, line: 297, baseType: !2493, size: 96, offset: 9312)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cis", file: !59, line: 203, size: 96, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !2493, file: !59, line: 204, baseType: !177, size: 16)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !2493, file: !59, line: 205, baseType: !177, size: 16, offset: 16)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2493, file: !59, line: 206, baseType: !177, size: 16, offset: 32)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !2493, file: !59, line: 207, baseType: !7, size: 32, offset: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_func", scope: !58, file: !59, line: 298, baseType: !2500, size: 448, offset: 9408)
!2500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2501, size: 448, elements: !2503)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func", file: !59, line: 211, flags: DIFlagFwdDecl)
!2503 = !{!2504}
!2504 = !DISubrange(count: 7)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_single_irq", scope: !58, file: !59, line: 299, baseType: !2501, size: 64, offset: 9856)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "major_rev", scope: !58, file: !59, line: 300, baseType: !529, size: 8, offset: 9920)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "minor_rev", scope: !58, file: !59, line: 301, baseType: !529, size: 8, offset: 9928)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "num_info", scope: !58, file: !59, line: 302, baseType: !7, size: 32, offset: 9952)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !58, file: !59, line: 303, baseType: !1913, size: 64, offset: 9984)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "tuples", scope: !58, file: !59, line: 304, baseType: !2511, size: 64, offset: 10048)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func_tuple", file: !59, line: 212, flags: DIFlagFwdDecl)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "sd_bus_speed", scope: !58, file: !59, line: 306, baseType: !7, size: 32, offset: 10112)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "mmc_avail_type", scope: !58, file: !59, line: 307, baseType: !7, size: 32, offset: 10144)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !58, file: !59, line: 308, baseType: !7, size: 32, offset: 10176)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !58, file: !59, line: 310, baseType: !2289, size: 64, offset: 10240)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !58, file: !59, line: 311, baseType: !2518, size: 2240, offset: 10304)
!2518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2519, size: 2240, elements: !2503)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_part", file: !59, line: 229, size: 320, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2525, !2526}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2519, file: !59, line: 230, baseType: !254, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "part_cfg", scope: !2519, file: !59, line: 231, baseType: !7, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2519, file: !59, line: 232, baseType: !2524, size: 160, offset: 96)
!2524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !77, size: 160, elements: !1154)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "force_ro", scope: !2519, file: !59, line: 233, baseType: !962, size: 8, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "area_type", scope: !2519, file: !59, line: 234, baseType: !7, size: 32, offset: 288)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "nr_parts", scope: !58, file: !59, line: 312, baseType: !7, size: 32, offset: 12544)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "bouncesz", scope: !58, file: !59, line: 314, baseType: !7, size: 32, offset: 12576)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "complete_wq", scope: !58, file: !59, line: 315, baseType: !2244, size: 64, offset: 12608)
!2530 = !{!0, !2531, !2533, !2536, !2538, !2543, !2557, !2559, !2561, !2563, !2565, !2567, !2569, !2571, !2573, !2575, !2577, !2579, !2581, !2583, !2585, !2587, !2589, !2591, !2593, !2595, !2597, !2599, !2601, !2603, !2605, !2609, !2612, !2614, !2618, !2639, !2645}
!2531 = !DIGlobalVariableExpression(var: !2532, expr: !DIExpression())
!2532 = distinct !DIGlobalVariable(name: "mmc_type", scope: !2, file: !3, line: 861, type: !1559, isLocal: true, isDefinition: true)
!2533 = !DIGlobalVariableExpression(var: !2534, expr: !DIExpression())
!2534 = distinct !DIGlobalVariable(name: "mmc_std_groups", scope: !2, file: !3, line: 859, type: !2535, isLocal: true, isDefinition: true)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 128, elements: !934)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(name: "mmc_std_group", scope: !2, file: !3, line: 859, type: !191, isLocal: true, isDefinition: true)
!2538 = !DIGlobalVariableExpression(var: !2539, expr: !DIExpression())
!2539 = distinct !DIGlobalVariable(name: "mmc_std_attrs", scope: !2, file: !3, line: 831, type: !2540, isLocal: true, isDefinition: true)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 1664, elements: !2541)
!2541 = !{!2542}
!2542 = !DISubrange(count: 26)
!2543 = !DIGlobalVariableExpression(var: !2544, expr: !DIExpression())
!2544 = distinct !DIGlobalVariable(name: "dev_attr_cid", scope: !2, file: !3, line: 769, type: !2545, isLocal: true, isDefinition: true)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !30, line: 99, size: 256, elements: !2546)
!2546 = !{!2547, !2548, !2553}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2545, file: !30, line: 100, baseType: !172, size: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2545, file: !30, line: 101, baseType: !2549, size: 64, offset: 128)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!166, !67, !2552, !135}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2545, file: !30, line: 103, baseType: !2554, size: 64, offset: 192)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!166, !67, !2552, !75, !182}
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression())
!2558 = distinct !DIGlobalVariable(name: "dev_attr_csd", scope: !2, file: !3, line: 771, type: !2545, isLocal: true, isDefinition: true)
!2559 = !DIGlobalVariableExpression(var: !2560, expr: !DIExpression())
!2560 = distinct !DIGlobalVariable(name: "dev_attr_date", scope: !2, file: !3, line: 773, type: !2545, isLocal: true, isDefinition: true)
!2561 = !DIGlobalVariableExpression(var: !2562, expr: !DIExpression())
!2562 = distinct !DIGlobalVariable(name: "dev_attr_erase_size", scope: !2, file: !3, line: 774, type: !2545, isLocal: true, isDefinition: true)
!2563 = !DIGlobalVariableExpression(var: !2564, expr: !DIExpression())
!2564 = distinct !DIGlobalVariable(name: "dev_attr_preferred_erase_size", scope: !2, file: !3, line: 775, type: !2545, isLocal: true, isDefinition: true)
!2565 = !DIGlobalVariableExpression(var: !2566, expr: !DIExpression())
!2566 = distinct !DIGlobalVariable(name: "dev_attr_fwrev", scope: !2, file: !3, line: 813, type: !2545, isLocal: true, isDefinition: true)
!2567 = !DIGlobalVariableExpression(var: !2568, expr: !DIExpression())
!2568 = distinct !DIGlobalVariable(name: "dev_attr_ffu_capable", scope: !2, file: !3, line: 776, type: !2545, isLocal: true, isDefinition: true)
!2569 = !DIGlobalVariableExpression(var: !2570, expr: !DIExpression())
!2570 = distinct !DIGlobalVariable(name: "dev_attr_hwrev", scope: !2, file: !3, line: 777, type: !2545, isLocal: true, isDefinition: true)
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "dev_attr_manfid", scope: !2, file: !3, line: 778, type: !2545, isLocal: true, isDefinition: true)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "dev_attr_name", scope: !2, file: !3, line: 779, type: !2545, isLocal: true, isDefinition: true)
!2575 = !DIGlobalVariableExpression(var: !2576, expr: !DIExpression())
!2576 = distinct !DIGlobalVariable(name: "dev_attr_oemid", scope: !2, file: !3, line: 780, type: !2545, isLocal: true, isDefinition: true)
!2577 = !DIGlobalVariableExpression(var: !2578, expr: !DIExpression())
!2578 = distinct !DIGlobalVariable(name: "dev_attr_prv", scope: !2, file: !3, line: 781, type: !2545, isLocal: true, isDefinition: true)
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "dev_attr_rev", scope: !2, file: !3, line: 782, type: !2545, isLocal: true, isDefinition: true)
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "dev_attr_pre_eol_info", scope: !2, file: !3, line: 783, type: !2545, isLocal: true, isDefinition: true)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "dev_attr_life_time", scope: !2, file: !3, line: 784, type: !2545, isLocal: true, isDefinition: true)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "dev_attr_serial", scope: !2, file: !3, line: 787, type: !2545, isLocal: true, isDefinition: true)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "dev_attr_enhanced_area_offset", scope: !2, file: !3, line: 788, type: !2545, isLocal: true, isDefinition: true)
!2589 = !DIGlobalVariableExpression(var: !2590, expr: !DIExpression())
!2590 = distinct !DIGlobalVariable(name: "dev_attr_enhanced_area_size", scope: !2, file: !3, line: 790, type: !2545, isLocal: true, isDefinition: true)
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(name: "dev_attr_raw_rpmb_size_mult", scope: !2, file: !3, line: 791, type: !2545, isLocal: true, isDefinition: true)
!2593 = !DIGlobalVariableExpression(var: !2594, expr: !DIExpression())
!2594 = distinct !DIGlobalVariable(name: "dev_attr_enhanced_rpmb_supported", scope: !2, file: !3, line: 792, type: !2545, isLocal: true, isDefinition: true)
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(name: "dev_attr_rel_sectors", scope: !2, file: !3, line: 794, type: !2545, isLocal: true, isDefinition: true)
!2597 = !DIGlobalVariableExpression(var: !2598, expr: !DIExpression())
!2598 = distinct !DIGlobalVariable(name: "dev_attr_ocr", scope: !2, file: !3, line: 795, type: !2545, isLocal: true, isDefinition: true)
!2599 = !DIGlobalVariableExpression(var: !2600, expr: !DIExpression())
!2600 = distinct !DIGlobalVariable(name: "dev_attr_rca", scope: !2, file: !3, line: 796, type: !2545, isLocal: true, isDefinition: true)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(name: "dev_attr_dsr", scope: !2, file: !3, line: 829, type: !2545, isLocal: true, isDefinition: true)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "dev_attr_cmdq_en", scope: !2, file: !3, line: 797, type: !2545, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "taac_exp", scope: !2, file: !3, line: 42, type: !2607, isLocal: true, isDefinition: true)
!2607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2608, size: 256, elements: !498)
!2608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2609 = !DIGlobalVariableExpression(var: !2610, expr: !DIExpression())
!2610 = distinct !DIGlobalVariable(name: "taac_mant", scope: !2, file: !3, line: 46, type: !2611, isLocal: true, isDefinition: true)
!2611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2608, size: 512, elements: !754)
!2612 = !DIGlobalVariableExpression(var: !2613, expr: !DIExpression())
!2613 = distinct !DIGlobalVariable(name: "tran_exp", scope: !2, file: !3, line: 32, type: !2607, isLocal: true, isDefinition: true)
!2614 = !DIGlobalVariableExpression(var: !2615, expr: !DIExpression())
!2615 = distinct !DIGlobalVariable(name: "tran_mant", scope: !2, file: !3, line: 37, type: !2616, isLocal: true, isDefinition: true)
!2616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2617, size: 128, elements: !754)
!2617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!2618 = !DIGlobalVariableExpression(var: !2619, expr: !DIExpression())
!2619 = distinct !DIGlobalVariable(name: "mmc_ext_csd_fixups", scope: !2, file: !2620, line: 105, type: !2621, isLocal: true, isDefinition: true)
!2620 = !DIFile(filename: "drivers/mmc/core/quirks.h", directory: "/home/lizy2001/genbc/linux")
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2622, size: 1344, elements: !136)
!2622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2623)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_fixup", file: !2624, line: 46, size: 448, elements: !2625)
!2624 = !DIFile(filename: "drivers/mmc/core/card.h", directory: "/home/lizy2001/genbc/linux")
!2625 = !{!2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2638}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2623, file: !2624, line: 48, baseType: !75, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "rev_start", scope: !2623, file: !2624, line: 51, baseType: !254, size: 64, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "rev_end", scope: !2623, file: !2624, line: 51, baseType: !254, size: 64, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !2623, file: !2624, line: 53, baseType: !7, size: 32, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !2623, file: !2624, line: 54, baseType: !177, size: 16, offset: 224)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "cis_vendor", scope: !2623, file: !2624, line: 57, baseType: !366, size: 16, offset: 240)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "cis_device", scope: !2623, file: !2624, line: 57, baseType: !366, size: 16, offset: 256)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd_rev", scope: !2623, file: !2624, line: 60, baseType: !7, size: 32, offset: 288)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_fixup", scope: !2623, file: !2624, line: 62, baseType: !2635, size: 64, offset: 320)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{null, !57, !119}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2623, file: !2624, line: 63, baseType: !119, size: 32, offset: 384)
!2639 = !DIGlobalVariableExpression(var: !2640, expr: !DIExpression())
!2640 = distinct !DIGlobalVariable(name: "ext_csd_bits", scope: !2641, file: !3, line: 990, type: !2644, isLocal: true, isDefinition: true)
!2641 = distinct !DISubprogram(name: "mmc_select_bus_width", scope: !3, file: !3, line: 988, type: !2642, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!119, !57}
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !934)
!2645 = !DIGlobalVariableExpression(var: !2646, expr: !DIExpression())
!2646 = distinct !DIGlobalVariable(name: "bus_widths", scope: !2641, file: !3, line: 994, type: !2644, isLocal: true, isDefinition: true)
!2647 = !{i32 7, !"Dwarf Version", i32 4}
!2648 = !{i32 2, !"Debug Info Version", i32 3}
!2649 = !{i32 1, !"wchar_size", i32 2}
!2650 = !{i32 1, !"Code Model", i32 2}
!2651 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!2652 = distinct !DISubprogram(name: "mmc_hs200_to_hs400", scope: !3, file: !3, line: 1232, type: !2642, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2653 = !DILocalVariable(name: "card", arg: 1, scope: !2652, file: !3, line: 1232, type: !57)
!2654 = !DILocation(line: 1232, column: 41, scope: !2652)
!2655 = !DILocation(line: 1234, column: 26, scope: !2652)
!2656 = !DILocation(line: 1234, column: 9, scope: !2652)
!2657 = !DILocation(line: 1234, column: 2, scope: !2652)
!2658 = distinct !DISubprogram(name: "mmc_select_hs400", scope: !3, file: !3, line: 1145, type: !2642, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2659 = !DILocalVariable(name: "card", arg: 1, scope: !2658, file: !3, line: 1145, type: !57)
!2660 = !DILocation(line: 1145, column: 46, scope: !2658)
!2661 = !DILocalVariable(name: "host", scope: !2658, file: !3, line: 1147, type: !62)
!2662 = !DILocation(line: 1147, column: 19, scope: !2658)
!2663 = !DILocation(line: 1147, column: 26, scope: !2658)
!2664 = !DILocation(line: 1147, column: 32, scope: !2658)
!2665 = !DILocalVariable(name: "max_dtr", scope: !2658, file: !3, line: 1148, type: !7)
!2666 = !DILocation(line: 1148, column: 15, scope: !2658)
!2667 = !DILocalVariable(name: "err", scope: !2658, file: !3, line: 1149, type: !119)
!2668 = !DILocation(line: 1149, column: 6, scope: !2658)
!2669 = !DILocalVariable(name: "val", scope: !2658, file: !3, line: 1150, type: !529)
!2670 = !DILocation(line: 1150, column: 5, scope: !2658)
!2671 = !DILocation(line: 1155, column: 8, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1155, column: 6)
!2673 = !DILocation(line: 1155, column: 14, scope: !2672)
!2674 = !DILocation(line: 1155, column: 29, scope: !2672)
!2675 = !DILocation(line: 1155, column: 55, scope: !2672)
!2676 = !DILocation(line: 1156, column: 8, scope: !2672)
!2677 = !DILocation(line: 1156, column: 14, scope: !2672)
!2678 = !DILocation(line: 1156, column: 18, scope: !2672)
!2679 = !DILocation(line: 1156, column: 28, scope: !2672)
!2680 = !DILocation(line: 1155, column: 6, scope: !2658)
!2681 = !DILocation(line: 1157, column: 3, scope: !2672)
!2682 = !DILocation(line: 1160, column: 6, scope: !2658)
!2683 = !DILocation(line: 1161, column: 21, scope: !2658)
!2684 = !DILocation(line: 1162, column: 26, scope: !2658)
!2685 = !DILocation(line: 1163, column: 7, scope: !2658)
!2686 = !DILocation(line: 1163, column: 13, scope: !2658)
!2687 = !DILocation(line: 1163, column: 21, scope: !2658)
!2688 = !DILocation(line: 1161, column: 8, scope: !2658)
!2689 = !DILocation(line: 1161, column: 6, scope: !2658)
!2690 = !DILocation(line: 1165, column: 6, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1165, column: 6)
!2692 = !DILocation(line: 1165, column: 6, scope: !2658)
!2693 = !DILocation(line: 1166, column: 3, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1165, column: 11)
!2695 = !DILocation(line: 1168, column: 10, scope: !2694)
!2696 = !DILocation(line: 1168, column: 3, scope: !2694)
!2697 = !DILocation(line: 1172, column: 6, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1172, column: 6)
!2699 = !DILocation(line: 1172, column: 12, scope: !2698)
!2700 = !DILocation(line: 1172, column: 17, scope: !2698)
!2701 = !DILocation(line: 1172, column: 6, scope: !2658)
!2702 = !DILocation(line: 1173, column: 3, scope: !2698)
!2703 = !DILocation(line: 1173, column: 9, scope: !2698)
!2704 = !DILocation(line: 1173, column: 14, scope: !2698)
!2705 = !DILocation(line: 1173, column: 30, scope: !2698)
!2706 = !DILocation(line: 1176, column: 17, scope: !2658)
!2707 = !DILocation(line: 1176, column: 2, scope: !2658)
!2708 = !DILocation(line: 1179, column: 12, scope: !2658)
!2709 = !DILocation(line: 1179, column: 18, scope: !2658)
!2710 = !DILocation(line: 1179, column: 26, scope: !2658)
!2711 = !DILocation(line: 1179, column: 10, scope: !2658)
!2712 = !DILocation(line: 1180, column: 16, scope: !2658)
!2713 = !DILocation(line: 1180, column: 22, scope: !2658)
!2714 = !DILocation(line: 1180, column: 2, scope: !2658)
!2715 = !DILocation(line: 1182, column: 26, scope: !2658)
!2716 = !DILocation(line: 1182, column: 8, scope: !2658)
!2717 = !DILocation(line: 1182, column: 6, scope: !2658)
!2718 = !DILocation(line: 1183, column: 6, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1183, column: 6)
!2720 = !DILocation(line: 1183, column: 6, scope: !2658)
!2721 = !DILocation(line: 1184, column: 3, scope: !2719)
!2722 = !DILocation(line: 1186, column: 6, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1186, column: 6)
!2724 = !DILocation(line: 1186, column: 12, scope: !2723)
!2725 = !DILocation(line: 1186, column: 17, scope: !2723)
!2726 = !DILocation(line: 1186, column: 6, scope: !2658)
!2727 = !DILocation(line: 1187, column: 3, scope: !2723)
!2728 = !DILocation(line: 1187, column: 9, scope: !2723)
!2729 = !DILocation(line: 1187, column: 14, scope: !2723)
!2730 = !DILocation(line: 1187, column: 32, scope: !2723)
!2731 = !DILocation(line: 1190, column: 19, scope: !2658)
!2732 = !DILocation(line: 1193, column: 5, scope: !2658)
!2733 = !DILocation(line: 1193, column: 11, scope: !2658)
!2734 = !DILocation(line: 1193, column: 19, scope: !2658)
!2735 = !DILocation(line: 1190, column: 8, scope: !2658)
!2736 = !DILocation(line: 1190, column: 6, scope: !2658)
!2737 = !DILocation(line: 1194, column: 6, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1194, column: 6)
!2739 = !DILocation(line: 1194, column: 6, scope: !2658)
!2740 = !DILocation(line: 1195, column: 3, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2738, file: !3, line: 1194, column: 11)
!2742 = !DILocation(line: 1197, column: 10, scope: !2741)
!2743 = !DILocation(line: 1197, column: 3, scope: !2741)
!2744 = !DILocation(line: 1202, column: 8, scope: !2658)
!2745 = !DILocation(line: 1202, column: 14, scope: !2658)
!2746 = !DILocation(line: 1202, column: 29, scope: !2658)
!2747 = !DILocation(line: 1201, column: 29, scope: !2658)
!2748 = !DILocation(line: 1201, column: 8, scope: !2658)
!2749 = !DILocation(line: 1201, column: 6, scope: !2658)
!2750 = !DILocation(line: 1203, column: 21, scope: !2658)
!2751 = !DILocation(line: 1204, column: 26, scope: !2658)
!2752 = !DILocation(line: 1205, column: 7, scope: !2658)
!2753 = !DILocation(line: 1205, column: 13, scope: !2658)
!2754 = !DILocation(line: 1205, column: 21, scope: !2658)
!2755 = !DILocation(line: 1203, column: 8, scope: !2658)
!2756 = !DILocation(line: 1203, column: 6, scope: !2658)
!2757 = !DILocation(line: 1207, column: 6, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1207, column: 6)
!2759 = !DILocation(line: 1207, column: 6, scope: !2658)
!2760 = !DILocation(line: 1208, column: 3, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 1207, column: 11)
!2762 = !DILocation(line: 1210, column: 10, scope: !2761)
!2763 = !DILocation(line: 1210, column: 3, scope: !2761)
!2764 = !DILocation(line: 1214, column: 17, scope: !2658)
!2765 = !DILocation(line: 1214, column: 2, scope: !2658)
!2766 = !DILocation(line: 1215, column: 20, scope: !2658)
!2767 = !DILocation(line: 1215, column: 2, scope: !2658)
!2768 = !DILocation(line: 1217, column: 6, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1217, column: 6)
!2770 = !DILocation(line: 1217, column: 12, scope: !2769)
!2771 = !DILocation(line: 1217, column: 17, scope: !2769)
!2772 = !DILocation(line: 1217, column: 6, scope: !2658)
!2773 = !DILocation(line: 1218, column: 3, scope: !2769)
!2774 = !DILocation(line: 1218, column: 9, scope: !2769)
!2775 = !DILocation(line: 1218, column: 14, scope: !2769)
!2776 = !DILocation(line: 1218, column: 29, scope: !2769)
!2777 = !DILocation(line: 1220, column: 26, scope: !2658)
!2778 = !DILocation(line: 1220, column: 8, scope: !2658)
!2779 = !DILocation(line: 1220, column: 6, scope: !2658)
!2780 = !DILocation(line: 1221, column: 6, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 1221, column: 6)
!2782 = !DILocation(line: 1221, column: 6, scope: !2658)
!2783 = !DILocation(line: 1222, column: 3, scope: !2781)
!2784 = !DILocation(line: 1224, column: 2, scope: !2658)
!2785 = !DILabel(scope: !2658, name: "out_err", file: !3, line: 1226)
!2786 = !DILocation(line: 1226, column: 1, scope: !2658)
!2787 = !DILocation(line: 1227, column: 2, scope: !2658)
!2788 = !DILocation(line: 1229, column: 9, scope: !2658)
!2789 = !DILocation(line: 1229, column: 2, scope: !2658)
!2790 = !DILocation(line: 1230, column: 1, scope: !2658)
!2791 = distinct !DISubprogram(name: "mmc_hs400_to_hs200", scope: !3, file: !3, line: 1237, type: !2642, scopeLine: 1238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2792 = !DILocalVariable(name: "card", arg: 1, scope: !2791, file: !3, line: 1237, type: !57)
!2793 = !DILocation(line: 1237, column: 41, scope: !2791)
!2794 = !DILocalVariable(name: "host", scope: !2791, file: !3, line: 1239, type: !62)
!2795 = !DILocation(line: 1239, column: 19, scope: !2791)
!2796 = !DILocation(line: 1239, column: 26, scope: !2791)
!2797 = !DILocation(line: 1239, column: 32, scope: !2791)
!2798 = !DILocalVariable(name: "max_dtr", scope: !2791, file: !3, line: 1240, type: !7)
!2799 = !DILocation(line: 1240, column: 15, scope: !2791)
!2800 = !DILocalVariable(name: "err", scope: !2791, file: !3, line: 1241, type: !119)
!2801 = !DILocation(line: 1241, column: 6, scope: !2791)
!2802 = !DILocalVariable(name: "val", scope: !2791, file: !3, line: 1242, type: !529)
!2803 = !DILocation(line: 1242, column: 5, scope: !2791)
!2804 = !DILocation(line: 1245, column: 12, scope: !2791)
!2805 = !DILocation(line: 1245, column: 18, scope: !2791)
!2806 = !DILocation(line: 1245, column: 26, scope: !2791)
!2807 = !DILocation(line: 1245, column: 10, scope: !2791)
!2808 = !DILocation(line: 1246, column: 16, scope: !2791)
!2809 = !DILocation(line: 1246, column: 22, scope: !2791)
!2810 = !DILocation(line: 1246, column: 2, scope: !2791)
!2811 = !DILocation(line: 1249, column: 6, scope: !2791)
!2812 = !DILocation(line: 1250, column: 21, scope: !2791)
!2813 = !DILocation(line: 1251, column: 7, scope: !2791)
!2814 = !DILocation(line: 1251, column: 12, scope: !2791)
!2815 = !DILocation(line: 1251, column: 18, scope: !2791)
!2816 = !DILocation(line: 1251, column: 26, scope: !2791)
!2817 = !DILocation(line: 1250, column: 8, scope: !2791)
!2818 = !DILocation(line: 1250, column: 6, scope: !2791)
!2819 = !DILocation(line: 1253, column: 6, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1253, column: 6)
!2821 = !DILocation(line: 1253, column: 6, scope: !2791)
!2822 = !DILocation(line: 1254, column: 3, scope: !2820)
!2823 = !DILocation(line: 1256, column: 6, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1256, column: 6)
!2825 = !DILocation(line: 1256, column: 12, scope: !2824)
!2826 = !DILocation(line: 1256, column: 17, scope: !2824)
!2827 = !DILocation(line: 1256, column: 6, scope: !2791)
!2828 = !DILocation(line: 1257, column: 3, scope: !2824)
!2829 = !DILocation(line: 1257, column: 9, scope: !2824)
!2830 = !DILocation(line: 1257, column: 14, scope: !2824)
!2831 = !DILocation(line: 1257, column: 30, scope: !2824)
!2832 = !DILocation(line: 1259, column: 17, scope: !2791)
!2833 = !DILocation(line: 1259, column: 2, scope: !2791)
!2834 = !DILocation(line: 1261, column: 26, scope: !2791)
!2835 = !DILocation(line: 1261, column: 8, scope: !2791)
!2836 = !DILocation(line: 1261, column: 6, scope: !2791)
!2837 = !DILocation(line: 1262, column: 6, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1262, column: 6)
!2839 = !DILocation(line: 1262, column: 6, scope: !2791)
!2840 = !DILocation(line: 1263, column: 3, scope: !2838)
!2841 = !DILocation(line: 1266, column: 21, scope: !2791)
!2842 = !DILocation(line: 1267, column: 28, scope: !2791)
!2843 = !DILocation(line: 1267, column: 34, scope: !2791)
!2844 = !DILocation(line: 1267, column: 42, scope: !2791)
!2845 = !DILocation(line: 1266, column: 8, scope: !2791)
!2846 = !DILocation(line: 1266, column: 6, scope: !2791)
!2847 = !DILocation(line: 1269, column: 6, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1269, column: 6)
!2849 = !DILocation(line: 1269, column: 6, scope: !2791)
!2850 = !DILocation(line: 1270, column: 3, scope: !2848)
!2851 = !DILocation(line: 1272, column: 17, scope: !2791)
!2852 = !DILocation(line: 1272, column: 2, scope: !2791)
!2853 = !DILocation(line: 1274, column: 26, scope: !2791)
!2854 = !DILocation(line: 1274, column: 8, scope: !2791)
!2855 = !DILocation(line: 1274, column: 6, scope: !2791)
!2856 = !DILocation(line: 1275, column: 6, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1275, column: 6)
!2858 = !DILocation(line: 1275, column: 6, scope: !2791)
!2859 = !DILocation(line: 1276, column: 3, scope: !2857)
!2860 = !DILocation(line: 1280, column: 8, scope: !2791)
!2861 = !DILocation(line: 1280, column: 14, scope: !2791)
!2862 = !DILocation(line: 1280, column: 29, scope: !2791)
!2863 = !DILocation(line: 1279, column: 29, scope: !2791)
!2864 = !DILocation(line: 1279, column: 8, scope: !2791)
!2865 = !DILocation(line: 1279, column: 6, scope: !2791)
!2866 = !DILocation(line: 1281, column: 21, scope: !2791)
!2867 = !DILocation(line: 1282, column: 7, scope: !2791)
!2868 = !DILocation(line: 1282, column: 12, scope: !2791)
!2869 = !DILocation(line: 1282, column: 18, scope: !2791)
!2870 = !DILocation(line: 1282, column: 26, scope: !2791)
!2871 = !DILocation(line: 1281, column: 8, scope: !2791)
!2872 = !DILocation(line: 1281, column: 6, scope: !2791)
!2873 = !DILocation(line: 1284, column: 6, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1284, column: 6)
!2875 = !DILocation(line: 1284, column: 6, scope: !2791)
!2876 = !DILocation(line: 1285, column: 3, scope: !2874)
!2877 = !DILocation(line: 1287, column: 17, scope: !2791)
!2878 = !DILocation(line: 1287, column: 2, scope: !2791)
!2879 = !DILocation(line: 1294, column: 26, scope: !2791)
!2880 = !DILocation(line: 1294, column: 8, scope: !2791)
!2881 = !DILocation(line: 1294, column: 6, scope: !2791)
!2882 = !DILocation(line: 1295, column: 6, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1295, column: 6)
!2884 = !DILocation(line: 1295, column: 6, scope: !2791)
!2885 = !DILocation(line: 1296, column: 3, scope: !2883)
!2886 = !DILocation(line: 1298, column: 20, scope: !2791)
!2887 = !DILocation(line: 1298, column: 2, scope: !2791)
!2888 = !DILocation(line: 1301, column: 6, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1301, column: 6)
!2890 = !DILocation(line: 1301, column: 12, scope: !2889)
!2891 = !DILocation(line: 1301, column: 17, scope: !2889)
!2892 = !DILocation(line: 1301, column: 6, scope: !2791)
!2893 = !DILocation(line: 1302, column: 3, scope: !2889)
!2894 = !DILocation(line: 1302, column: 9, scope: !2889)
!2895 = !DILocation(line: 1302, column: 14, scope: !2889)
!2896 = !DILocation(line: 1302, column: 35, scope: !2889)
!2897 = !DILocation(line: 1302, column: 42, scope: !2889)
!2898 = !DILocation(line: 1302, column: 48, scope: !2889)
!2899 = !DILocation(line: 1304, column: 2, scope: !2791)
!2900 = !DILabel(scope: !2791, name: "out_err", file: !3, line: 1306)
!2901 = !DILocation(line: 1306, column: 1, scope: !2791)
!2902 = !DILocation(line: 1307, column: 2, scope: !2791)
!2903 = !DILocation(line: 1309, column: 9, scope: !2791)
!2904 = !DILocation(line: 1309, column: 2, scope: !2791)
!2905 = !DILocation(line: 1310, column: 1, scope: !2791)
!2906 = distinct !DISubprogram(name: "mmc_set_bus_speed", scope: !3, file: !3, line: 968, type: !2907, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{null, !57}
!2909 = !DILocalVariable(name: "card", arg: 1, scope: !2906, file: !3, line: 968, type: !57)
!2910 = !DILocation(line: 968, column: 48, scope: !2906)
!2911 = !DILocalVariable(name: "max_dtr", scope: !2906, file: !3, line: 970, type: !7)
!2912 = !DILocation(line: 970, column: 15, scope: !2906)
!2913 = !DILocation(line: 972, column: 22, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 972, column: 6)
!2915 = !DILocation(line: 972, column: 7, scope: !2914)
!2916 = !DILocation(line: 972, column: 28, scope: !2914)
!2917 = !DILocation(line: 972, column: 46, scope: !2914)
!2918 = !DILocation(line: 972, column: 31, scope: !2914)
!2919 = !DILocation(line: 972, column: 53, scope: !2914)
!2920 = !DILocation(line: 973, column: 7, scope: !2914)
!2921 = !DILocation(line: 973, column: 17, scope: !2914)
!2922 = !DILocation(line: 973, column: 23, scope: !2914)
!2923 = !DILocation(line: 973, column: 31, scope: !2914)
!2924 = !DILocation(line: 973, column: 15, scope: !2914)
!2925 = !DILocation(line: 972, column: 6, scope: !2906)
!2926 = !DILocation(line: 974, column: 13, scope: !2914)
!2927 = !DILocation(line: 974, column: 19, scope: !2914)
!2928 = !DILocation(line: 974, column: 27, scope: !2914)
!2929 = !DILocation(line: 974, column: 11, scope: !2914)
!2930 = !DILocation(line: 974, column: 3, scope: !2914)
!2931 = !DILocation(line: 975, column: 23, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 975, column: 11)
!2933 = !DILocation(line: 975, column: 11, scope: !2932)
!2934 = !DILocation(line: 975, column: 29, scope: !2932)
!2935 = !DILocation(line: 975, column: 32, scope: !2932)
!2936 = !DILocation(line: 975, column: 42, scope: !2932)
!2937 = !DILocation(line: 975, column: 48, scope: !2932)
!2938 = !DILocation(line: 975, column: 56, scope: !2932)
!2939 = !DILocation(line: 975, column: 40, scope: !2932)
!2940 = !DILocation(line: 975, column: 11, scope: !2914)
!2941 = !DILocation(line: 976, column: 13, scope: !2932)
!2942 = !DILocation(line: 976, column: 19, scope: !2932)
!2943 = !DILocation(line: 976, column: 27, scope: !2932)
!2944 = !DILocation(line: 976, column: 11, scope: !2932)
!2945 = !DILocation(line: 976, column: 3, scope: !2932)
!2946 = !DILocation(line: 977, column: 11, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 977, column: 11)
!2948 = !DILocation(line: 977, column: 21, scope: !2947)
!2949 = !DILocation(line: 977, column: 27, scope: !2947)
!2950 = !DILocation(line: 977, column: 31, scope: !2947)
!2951 = !DILocation(line: 977, column: 19, scope: !2947)
!2952 = !DILocation(line: 977, column: 11, scope: !2932)
!2953 = !DILocation(line: 978, column: 13, scope: !2947)
!2954 = !DILocation(line: 978, column: 19, scope: !2947)
!2955 = !DILocation(line: 978, column: 23, scope: !2947)
!2956 = !DILocation(line: 978, column: 11, scope: !2947)
!2957 = !DILocation(line: 978, column: 3, scope: !2947)
!2958 = !DILocation(line: 980, column: 16, scope: !2906)
!2959 = !DILocation(line: 980, column: 22, scope: !2906)
!2960 = !DILocation(line: 980, column: 28, scope: !2906)
!2961 = !DILocation(line: 980, column: 2, scope: !2906)
!2962 = !DILocation(line: 981, column: 1, scope: !2906)
!2963 = distinct !DISubprogram(name: "dev_name", scope: !30, file: !30, line: 609, type: !2964, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!75, !1899}
!2966 = !DILocalVariable(name: "dev", arg: 1, scope: !2963, file: !30, line: 609, type: !1899)
!2967 = !DILocation(line: 609, column: 57, scope: !2963)
!2968 = !DILocation(line: 612, column: 6, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2963, file: !30, line: 612, column: 6)
!2970 = !DILocation(line: 612, column: 11, scope: !2969)
!2971 = !DILocation(line: 612, column: 6, scope: !2963)
!2972 = !DILocation(line: 613, column: 10, scope: !2969)
!2973 = !DILocation(line: 613, column: 15, scope: !2969)
!2974 = !DILocation(line: 613, column: 3, scope: !2969)
!2975 = !DILocation(line: 615, column: 23, scope: !2963)
!2976 = !DILocation(line: 615, column: 28, scope: !2963)
!2977 = !DILocation(line: 615, column: 9, scope: !2963)
!2978 = !DILocation(line: 615, column: 2, scope: !2963)
!2979 = !DILocation(line: 616, column: 1, scope: !2963)
!2980 = distinct !DISubprogram(name: "mmc_attach_mmc", scope: !3, file: !3, line: 2213, type: !2117, scopeLine: 2214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !107)
!2981 = !DILocalVariable(name: "host", arg: 1, scope: !2980, file: !3, line: 2213, type: !62)
!2982 = !DILocation(line: 2213, column: 37, scope: !2980)
!2983 = !DILocalVariable(name: "err", scope: !2980, file: !3, line: 2215, type: !119)
!2984 = !DILocation(line: 2215, column: 6, scope: !2980)
!2985 = !DILocalVariable(name: "ocr", scope: !2980, file: !3, line: 2216, type: !392)
!2986 = !DILocation(line: 2216, column: 6, scope: !2980)
!2987 = !DILocalVariable(name: "rocr", scope: !2980, file: !3, line: 2216, type: !392)
!2988 = !DILocation(line: 2216, column: 11, scope: !2980)
!2989 = !DILocalVariable(name: "__ret_warn_on", scope: !2990, file: !3, line: 2218, type: !119)
!2990 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2218, column: 2)
!2991 = !DILocation(line: 2218, column: 2, scope: !2990)
!2992 = !DILocation(line: 2218, column: 2, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 2218, column: 2)
!2994 = !DILocation(line: 2218, column: 2, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 2218, column: 2)
!2996 = !DILocation(line: 2218, column: 2, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2218, column: 2)
!2998 = !DILocation(line: 2218, column: 2, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2218, column: 2)
!3000 = !{i32 -2143275949, i32 -2143275920, i32 -2143275874, i32 -2143275816, i32 -2143275762, i32 -2143275708, i32 -2143275653, i32 -2143275622}
!3001 = !DILocation(line: 2218, column: 2, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2218, column: 2)
!3003 = !{i32 -2143275217, i32 -2143275210, i32 -2143275158, i32 -2143275127, i32 -2143275097}
!3004 = !DILocation(line: 2218, column: 2, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 2218, column: 2)
!3006 = !DILocation(line: 2221, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2221, column: 6)
!3008 = !DILocation(line: 2221, column: 6, scope: !2980)
!3009 = !DILocation(line: 2222, column: 20, scope: !3007)
!3010 = !DILocation(line: 2222, column: 3, scope: !3007)
!3011 = !DILocation(line: 2224, column: 25, scope: !2980)
!3012 = !DILocation(line: 2224, column: 8, scope: !2980)
!3013 = !DILocation(line: 2224, column: 6, scope: !2980)
!3014 = !DILocation(line: 2225, column: 6, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2225, column: 6)
!3016 = !DILocation(line: 2225, column: 6, scope: !2980)
!3017 = !DILocation(line: 2226, column: 10, scope: !3015)
!3018 = !DILocation(line: 2226, column: 3, scope: !3015)
!3019 = !DILocation(line: 2228, column: 17, scope: !2980)
!3020 = !DILocation(line: 2228, column: 2, scope: !2980)
!3021 = !DILocation(line: 2229, column: 6, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2229, column: 6)
!3023 = !DILocation(line: 2229, column: 12, scope: !3022)
!3024 = !DILocation(line: 2229, column: 6, scope: !2980)
!3025 = !DILocation(line: 2230, column: 21, scope: !3022)
!3026 = !DILocation(line: 2230, column: 27, scope: !3022)
!3027 = !DILocation(line: 2230, column: 3, scope: !3022)
!3028 = !DILocation(line: 2230, column: 9, scope: !3022)
!3029 = !DILocation(line: 2230, column: 19, scope: !3022)
!3030 = !DILocation(line: 2235, column: 6, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2235, column: 6)
!3032 = !DILocation(line: 2235, column: 6, scope: !2980)
!3033 = !DILocation(line: 2236, column: 26, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 2235, column: 29)
!3035 = !DILocation(line: 2236, column: 9, scope: !3034)
!3036 = !DILocation(line: 2236, column: 7, scope: !3034)
!3037 = !DILocation(line: 2237, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 2237, column: 7)
!3039 = !DILocation(line: 2237, column: 7, scope: !3034)
!3040 = !DILocation(line: 2238, column: 4, scope: !3038)
!3041 = !DILocation(line: 2239, column: 2, scope: !3034)
!3042 = !DILocation(line: 2241, column: 28, scope: !2980)
!3043 = !DILocation(line: 2241, column: 34, scope: !2980)
!3044 = !DILocation(line: 2241, column: 9, scope: !2980)
!3045 = !DILocation(line: 2241, column: 7, scope: !2980)
!3046 = !DILocation(line: 2246, column: 7, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2246, column: 6)
!3048 = !DILocation(line: 2246, column: 6, scope: !2980)
!3049 = !DILocation(line: 2247, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 2246, column: 13)
!3051 = !DILocation(line: 2248, column: 3, scope: !3050)
!3052 = !DILocation(line: 2254, column: 22, scope: !2980)
!3053 = !DILocation(line: 2254, column: 28, scope: !2980)
!3054 = !DILocation(line: 2254, column: 8, scope: !2980)
!3055 = !DILocation(line: 2254, column: 6, scope: !2980)
!3056 = !DILocation(line: 2255, column: 6, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2255, column: 6)
!3058 = !DILocation(line: 2255, column: 6, scope: !2980)
!3059 = !DILocation(line: 2256, column: 3, scope: !3057)
!3060 = !DILocation(line: 2258, column: 19, scope: !2980)
!3061 = !DILocation(line: 2258, column: 2, scope: !2980)
!3062 = !DILocation(line: 2259, column: 21, scope: !2980)
!3063 = !DILocation(line: 2259, column: 27, scope: !2980)
!3064 = !DILocation(line: 2259, column: 8, scope: !2980)
!3065 = !DILocation(line: 2259, column: 6, scope: !2980)
!3066 = !DILocation(line: 2260, column: 6, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 2260, column: 6)
!3068 = !DILocation(line: 2260, column: 6, scope: !2980)
!3069 = !DILocation(line: 2261, column: 3, scope: !3067)
!3070 = !DILocation(line: 2263, column: 17, scope: !2980)
!3071 = !DILocation(line: 2263, column: 2, scope: !2980)
!3072 = !DILocation(line: 2264, column: 2, scope: !2980)
!3073 = !DILabel(scope: !2980, name: "remove_card", file: !3, line: 2266)
!3074 = !DILocation(line: 2266, column: 1, scope: !2980)
!3075 = !DILocation(line: 2267, column: 18, scope: !2980)
!3076 = !DILocation(line: 2267, column: 24, scope: !2980)
!3077 = !DILocation(line: 2267, column: 2, scope: !2980)
!3078 = !DILocation(line: 2268, column: 17, scope: !2980)
!3079 = !DILocation(line: 2268, column: 2, scope: !2980)
!3080 = !DILocation(line: 2269, column: 2, scope: !2980)
!3081 = !DILocation(line: 2269, column: 8, scope: !2980)
!3082 = !DILocation(line: 2269, column: 13, scope: !2980)
!3083 = !DILabel(scope: !2980, name: "err", file: !3, line: 2270)
!3084 = !DILocation(line: 2270, column: 1, scope: !2980)
!3085 = !DILocation(line: 2271, column: 17, scope: !2980)
!3086 = !DILocation(line: 2271, column: 2, scope: !2980)
!3087 = !DILocation(line: 2273, column: 2, scope: !2980)
!3088 = !DILocation(line: 2276, column: 9, scope: !2980)
!3089 = !DILocation(line: 2276, column: 2, scope: !2980)
!3090 = !DILocation(line: 2277, column: 1, scope: !2980)
!3091 = distinct !DISubprogram(name: "mmc_init_card", scope: !3, file: !3, line: 1553, type: !3092, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3092 = !DISubroutineType(types: !3093)
!3093 = !{!119, !62, !392, !57}
!3094 = !DILocalVariable(name: "host", arg: 1, scope: !3091, file: !3, line: 1553, type: !62)
!3095 = !DILocation(line: 1553, column: 43, scope: !3091)
!3096 = !DILocalVariable(name: "ocr", arg: 2, scope: !3091, file: !3, line: 1553, type: !392)
!3097 = !DILocation(line: 1553, column: 53, scope: !3091)
!3098 = !DILocalVariable(name: "oldcard", arg: 3, scope: !3091, file: !3, line: 1554, type: !57)
!3099 = !DILocation(line: 1554, column: 19, scope: !3091)
!3100 = !DILocalVariable(name: "card", scope: !3091, file: !3, line: 1556, type: !57)
!3101 = !DILocation(line: 1556, column: 19, scope: !3091)
!3102 = !DILocalVariable(name: "err", scope: !3091, file: !3, line: 1557, type: !119)
!3103 = !DILocation(line: 1557, column: 6, scope: !3091)
!3104 = !DILocalVariable(name: "cid", scope: !3091, file: !3, line: 1558, type: !2049)
!3105 = !DILocation(line: 1558, column: 6, scope: !3091)
!3106 = !DILocalVariable(name: "rocr", scope: !3091, file: !3, line: 1559, type: !392)
!3107 = !DILocation(line: 1559, column: 6, scope: !3091)
!3108 = !DILocalVariable(name: "__ret_warn_on", scope: !3109, file: !3, line: 1561, type: !119)
!3109 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1561, column: 2)
!3110 = !DILocation(line: 1561, column: 2, scope: !3109)
!3111 = !DILocation(line: 1561, column: 2, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 1561, column: 2)
!3113 = !DILocation(line: 1561, column: 2, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3112, file: !3, line: 1561, column: 2)
!3115 = !DILocation(line: 1561, column: 2, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1561, column: 2)
!3117 = !DILocation(line: 1561, column: 2, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1561, column: 2)
!3119 = !{i32 -2143282487, i32 -2143282458, i32 -2143282412, i32 -2143282354, i32 -2143282300, i32 -2143282246, i32 -2143282191, i32 -2143282160}
!3120 = !DILocation(line: 1561, column: 2, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1561, column: 2)
!3122 = !{i32 -2143281755, i32 -2143281748, i32 -2143281696, i32 -2143281665, i32 -2143281635}
!3123 = !DILocation(line: 1561, column: 2, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3114, file: !3, line: 1561, column: 2)
!3125 = !DILocation(line: 1564, column: 7, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1564, column: 6)
!3127 = !DILocation(line: 1564, column: 6, scope: !3091)
!3128 = !DILocation(line: 1565, column: 20, scope: !3126)
!3129 = !DILocation(line: 1565, column: 3, scope: !3126)
!3130 = !DILocation(line: 1574, column: 14, scope: !3091)
!3131 = !DILocation(line: 1574, column: 2, scope: !3091)
!3132 = !DILocation(line: 1577, column: 25, scope: !3091)
!3133 = !DILocation(line: 1577, column: 31, scope: !3091)
!3134 = !DILocation(line: 1577, column: 35, scope: !3091)
!3135 = !DILocation(line: 1577, column: 8, scope: !3091)
!3136 = !DILocation(line: 1577, column: 6, scope: !3091)
!3137 = !DILocation(line: 1578, column: 6, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1578, column: 6)
!3139 = !DILocation(line: 1578, column: 6, scope: !3091)
!3140 = !DILocation(line: 1579, column: 3, scope: !3138)
!3141 = !DILocation(line: 1584, column: 6, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1584, column: 6)
!3143 = !DILocation(line: 1584, column: 6, scope: !3091)
!3144 = !DILocation(line: 1585, column: 25, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3142, file: !3, line: 1584, column: 29)
!3146 = !DILocation(line: 1585, column: 31, scope: !3145)
!3147 = !DILocation(line: 1585, column: 9, scope: !3145)
!3148 = !DILocation(line: 1585, column: 7, scope: !3145)
!3149 = !DILocation(line: 1586, column: 7, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 1586, column: 7)
!3151 = !DILocation(line: 1586, column: 7, scope: !3145)
!3152 = !DILocation(line: 1587, column: 4, scope: !3150)
!3153 = !DILocation(line: 1588, column: 2, scope: !3145)
!3154 = !DILocation(line: 1593, column: 21, scope: !3091)
!3155 = !DILocation(line: 1593, column: 27, scope: !3091)
!3156 = !DILocation(line: 1593, column: 8, scope: !3091)
!3157 = !DILocation(line: 1593, column: 6, scope: !3091)
!3158 = !DILocation(line: 1594, column: 6, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1594, column: 6)
!3160 = !DILocation(line: 1594, column: 6, scope: !3091)
!3161 = !DILocation(line: 1595, column: 3, scope: !3159)
!3162 = !DILocation(line: 1597, column: 6, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1597, column: 6)
!3164 = !DILocation(line: 1597, column: 6, scope: !3091)
!3165 = !DILocation(line: 1598, column: 14, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3167, file: !3, line: 1598, column: 7)
!3167 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1597, column: 15)
!3168 = !DILocation(line: 1598, column: 19, scope: !3166)
!3169 = !DILocation(line: 1598, column: 28, scope: !3166)
!3170 = !DILocation(line: 1598, column: 7, scope: !3166)
!3171 = !DILocation(line: 1598, column: 50, scope: !3166)
!3172 = !DILocation(line: 1598, column: 7, scope: !3167)
!3173 = !DILocation(line: 1599, column: 4, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 1599, column: 4)
!3175 = distinct !DILexicalBlock(scope: !3176, file: !3, line: 1599, column: 4)
!3176 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 1598, column: 56)
!3177 = !DILocation(line: 1599, column: 4, scope: !3175)
!3178 = !DILocation(line: 1601, column: 8, scope: !3176)
!3179 = !DILocation(line: 1602, column: 4, scope: !3176)
!3180 = !DILocation(line: 1605, column: 10, scope: !3167)
!3181 = !DILocation(line: 1605, column: 8, scope: !3167)
!3182 = !DILocation(line: 1606, column: 2, scope: !3167)
!3183 = !DILocation(line: 1610, column: 25, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1606, column: 9)
!3185 = !DILocation(line: 1610, column: 10, scope: !3184)
!3186 = !DILocation(line: 1610, column: 8, scope: !3184)
!3187 = !DILocation(line: 1611, column: 14, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 1611, column: 7)
!3189 = !DILocation(line: 1611, column: 7, scope: !3188)
!3190 = !DILocation(line: 1611, column: 7, scope: !3184)
!3191 = !DILocation(line: 1612, column: 18, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 1611, column: 21)
!3193 = !DILocation(line: 1612, column: 10, scope: !3192)
!3194 = !DILocation(line: 1612, column: 8, scope: !3192)
!3195 = !DILocation(line: 1613, column: 4, scope: !3192)
!3196 = !DILocation(line: 1616, column: 15, scope: !3184)
!3197 = !DILocation(line: 1616, column: 3, scope: !3184)
!3198 = !DILocation(line: 1616, column: 9, scope: !3184)
!3199 = !DILocation(line: 1616, column: 13, scope: !3184)
!3200 = !DILocation(line: 1617, column: 3, scope: !3184)
!3201 = !DILocation(line: 1617, column: 9, scope: !3184)
!3202 = !DILocation(line: 1617, column: 14, scope: !3184)
!3203 = !DILocation(line: 1618, column: 3, scope: !3184)
!3204 = !DILocation(line: 1618, column: 9, scope: !3184)
!3205 = !DILocation(line: 1618, column: 13, scope: !3184)
!3206 = !DILocation(line: 1619, column: 10, scope: !3184)
!3207 = !DILocation(line: 1619, column: 16, scope: !3184)
!3208 = !DILocation(line: 1619, column: 3, scope: !3184)
!3209 = !DILocation(line: 1625, column: 6, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1625, column: 6)
!3211 = !DILocation(line: 1625, column: 12, scope: !3210)
!3212 = !DILocation(line: 1625, column: 17, scope: !3210)
!3213 = !DILocation(line: 1625, column: 6, scope: !3091)
!3214 = !DILocation(line: 1626, column: 3, scope: !3210)
!3215 = !DILocation(line: 1626, column: 9, scope: !3210)
!3216 = !DILocation(line: 1626, column: 14, scope: !3210)
!3217 = !DILocation(line: 1626, column: 24, scope: !3210)
!3218 = !DILocation(line: 1626, column: 30, scope: !3210)
!3219 = !DILocation(line: 1631, column: 7, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1631, column: 6)
!3221 = !DILocation(line: 1631, column: 6, scope: !3091)
!3222 = !DILocation(line: 1632, column: 31, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1631, column: 30)
!3224 = !DILocation(line: 1632, column: 9, scope: !3223)
!3225 = !DILocation(line: 1632, column: 7, scope: !3223)
!3226 = !DILocation(line: 1633, column: 7, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 1633, column: 7)
!3228 = !DILocation(line: 1633, column: 7, scope: !3223)
!3229 = !DILocation(line: 1634, column: 4, scope: !3227)
!3230 = !DILocation(line: 1636, column: 20, scope: !3223)
!3231 = !DILocation(line: 1636, column: 3, scope: !3223)
!3232 = !DILocation(line: 1637, column: 2, scope: !3223)
!3233 = !DILocation(line: 1639, column: 7, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1639, column: 6)
!3235 = !DILocation(line: 1639, column: 6, scope: !3091)
!3236 = !DILocation(line: 1643, column: 22, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 1639, column: 16)
!3238 = !DILocation(line: 1643, column: 28, scope: !3237)
!3239 = !DILocation(line: 1643, column: 34, scope: !3237)
!3240 = !DILocation(line: 1643, column: 9, scope: !3237)
!3241 = !DILocation(line: 1643, column: 7, scope: !3237)
!3242 = !DILocation(line: 1644, column: 7, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1644, column: 7)
!3244 = !DILocation(line: 1644, column: 7, scope: !3237)
!3245 = !DILocation(line: 1645, column: 4, scope: !3243)
!3246 = !DILocation(line: 1647, column: 24, scope: !3237)
!3247 = !DILocation(line: 1647, column: 9, scope: !3237)
!3248 = !DILocation(line: 1647, column: 7, scope: !3237)
!3249 = !DILocation(line: 1648, column: 7, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1648, column: 7)
!3251 = !DILocation(line: 1648, column: 7, scope: !3237)
!3252 = !DILocation(line: 1649, column: 4, scope: !3250)
!3253 = !DILocation(line: 1650, column: 24, scope: !3237)
!3254 = !DILocation(line: 1650, column: 9, scope: !3237)
!3255 = !DILocation(line: 1650, column: 7, scope: !3237)
!3256 = !DILocation(line: 1651, column: 7, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 1651, column: 7)
!3258 = !DILocation(line: 1651, column: 7, scope: !3237)
!3259 = !DILocation(line: 1652, column: 4, scope: !3257)
!3260 = !DILocation(line: 1653, column: 2, scope: !3237)
!3261 = !DILocation(line: 1659, column: 6, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1659, column: 6)
!3263 = !DILocation(line: 1659, column: 12, scope: !3262)
!3264 = !DILocation(line: 1659, column: 16, scope: !3262)
!3265 = !DILocation(line: 1659, column: 24, scope: !3262)
!3266 = !DILocation(line: 1659, column: 27, scope: !3262)
!3267 = !DILocation(line: 1659, column: 33, scope: !3262)
!3268 = !DILocation(line: 1659, column: 6, scope: !3091)
!3269 = !DILocation(line: 1660, column: 15, scope: !3262)
!3270 = !DILocation(line: 1660, column: 3, scope: !3262)
!3271 = !DILocation(line: 1665, column: 7, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1665, column: 6)
!3273 = !DILocation(line: 1665, column: 6, scope: !3091)
!3274 = !DILocation(line: 1666, column: 25, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1665, column: 30)
!3276 = !DILocation(line: 1666, column: 9, scope: !3275)
!3277 = !DILocation(line: 1666, column: 7, scope: !3275)
!3278 = !DILocation(line: 1667, column: 7, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1667, column: 7)
!3280 = !DILocation(line: 1667, column: 7, scope: !3275)
!3281 = !DILocation(line: 1668, column: 4, scope: !3279)
!3282 = !DILocation(line: 1669, column: 2, scope: !3275)
!3283 = !DILocation(line: 1671, column: 7, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1671, column: 6)
!3285 = !DILocation(line: 1671, column: 6, scope: !3091)
!3286 = !DILocation(line: 1673, column: 26, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 1671, column: 16)
!3288 = !DILocation(line: 1673, column: 9, scope: !3287)
!3289 = !DILocation(line: 1673, column: 7, scope: !3287)
!3290 = !DILocation(line: 1674, column: 7, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 1674, column: 7)
!3292 = !DILocation(line: 1674, column: 7, scope: !3287)
!3293 = !DILocation(line: 1675, column: 4, scope: !3291)
!3294 = !DILocation(line: 1683, column: 7, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3287, file: !3, line: 1683, column: 7)
!3296 = !DILocation(line: 1683, column: 12, scope: !3295)
!3297 = !DILocation(line: 1683, column: 7, scope: !3287)
!3298 = !DILocation(line: 1684, column: 4, scope: !3295)
!3299 = !DILocation(line: 1687, column: 22, scope: !3287)
!3300 = !DILocation(line: 1687, column: 3, scope: !3287)
!3301 = !DILocation(line: 1688, column: 2, scope: !3287)
!3302 = !DILocation(line: 1691, column: 6, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1691, column: 6)
!3304 = !DILocation(line: 1691, column: 12, scope: !3303)
!3305 = !DILocation(line: 1691, column: 20, scope: !3303)
!3306 = !DILocation(line: 1691, column: 24, scope: !3303)
!3307 = !DILocation(line: 1691, column: 6, scope: !3091)
!3308 = !DILocation(line: 1692, column: 20, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 1691, column: 30)
!3310 = !DILocation(line: 1694, column: 6, scope: !3309)
!3311 = !DILocation(line: 1694, column: 12, scope: !3309)
!3312 = !DILocation(line: 1694, column: 20, scope: !3309)
!3313 = !DILocation(line: 1692, column: 9, scope: !3309)
!3314 = !DILocation(line: 1692, column: 7, scope: !3309)
!3315 = !DILocation(line: 1696, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1696, column: 7)
!3317 = !DILocation(line: 1696, column: 11, scope: !3316)
!3318 = !DILocation(line: 1696, column: 14, scope: !3316)
!3319 = !DILocation(line: 1696, column: 18, scope: !3316)
!3320 = !DILocation(line: 1696, column: 7, scope: !3309)
!3321 = !DILocation(line: 1697, column: 4, scope: !3316)
!3322 = !DILocation(line: 1699, column: 7, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 1699, column: 7)
!3324 = !DILocation(line: 1699, column: 7, scope: !3309)
!3325 = !DILocation(line: 1700, column: 8, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1699, column: 12)
!3327 = !DILocation(line: 1706, column: 4, scope: !3326)
!3328 = !DILocation(line: 1706, column: 10, scope: !3326)
!3329 = !DILocation(line: 1706, column: 18, scope: !3326)
!3330 = !DILocation(line: 1706, column: 39, scope: !3326)
!3331 = !DILocation(line: 1707, column: 4, scope: !3326)
!3332 = !DILocation(line: 1707, column: 10, scope: !3326)
!3333 = !DILocation(line: 1707, column: 18, scope: !3326)
!3334 = !DILocation(line: 1707, column: 37, scope: !3326)
!3335 = !DILocation(line: 1708, column: 3, scope: !3326)
!3336 = !DILocation(line: 1709, column: 4, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1708, column: 10)
!3338 = !DILocation(line: 1709, column: 10, scope: !3337)
!3339 = !DILocation(line: 1709, column: 18, scope: !3337)
!3340 = !DILocation(line: 1709, column: 34, scope: !3337)
!3341 = !DILocation(line: 1715, column: 23, scope: !3337)
!3342 = !DILocation(line: 1715, column: 4, scope: !3337)
!3343 = !DILocation(line: 1717, column: 2, scope: !3309)
!3344 = !DILocation(line: 1722, column: 6, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1722, column: 6)
!3346 = !DILocation(line: 1722, column: 12, scope: !3345)
!3347 = !DILocation(line: 1722, column: 20, scope: !3345)
!3348 = !DILocation(line: 1722, column: 32, scope: !3345)
!3349 = !DILocation(line: 1722, column: 6, scope: !3091)
!3350 = !DILocation(line: 1723, column: 3, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1722, column: 64)
!3352 = !DILocation(line: 1723, column: 9, scope: !3351)
!3353 = !DILocation(line: 1723, column: 17, scope: !3351)
!3354 = !DILocation(line: 1723, column: 29, scope: !3351)
!3355 = !DILocation(line: 1724, column: 20, scope: !3351)
!3356 = !DILocation(line: 1725, column: 6, scope: !3351)
!3357 = !DILocation(line: 1725, column: 12, scope: !3351)
!3358 = !DILocation(line: 1725, column: 20, scope: !3351)
!3359 = !DILocation(line: 1726, column: 6, scope: !3351)
!3360 = !DILocation(line: 1726, column: 12, scope: !3351)
!3361 = !DILocation(line: 1726, column: 20, scope: !3351)
!3362 = !DILocation(line: 1724, column: 9, scope: !3351)
!3363 = !DILocation(line: 1724, column: 7, scope: !3351)
!3364 = !DILocation(line: 1727, column: 7, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3351, file: !3, line: 1727, column: 7)
!3366 = !DILocation(line: 1727, column: 11, scope: !3365)
!3367 = !DILocation(line: 1727, column: 14, scope: !3365)
!3368 = !DILocation(line: 1727, column: 18, scope: !3365)
!3369 = !DILocation(line: 1727, column: 7, scope: !3351)
!3370 = !DILocation(line: 1728, column: 4, scope: !3365)
!3371 = !DILocation(line: 1729, column: 2, scope: !3351)
!3372 = !DILocation(line: 1734, column: 6, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1734, column: 6)
!3374 = !DILocation(line: 1734, column: 12, scope: !3373)
!3375 = !DILocation(line: 1734, column: 20, scope: !3373)
!3376 = !DILocation(line: 1734, column: 24, scope: !3373)
!3377 = !DILocation(line: 1734, column: 6, scope: !3091)
!3378 = !DILocation(line: 1735, column: 20, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 1734, column: 30)
!3380 = !DILocation(line: 1738, column: 6, scope: !3379)
!3381 = !DILocation(line: 1738, column: 12, scope: !3379)
!3382 = !DILocation(line: 1738, column: 20, scope: !3379)
!3383 = !DILocation(line: 1735, column: 9, scope: !3379)
!3384 = !DILocation(line: 1735, column: 7, scope: !3379)
!3385 = !DILocation(line: 1739, column: 7, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 1739, column: 7)
!3387 = !DILocation(line: 1739, column: 11, scope: !3386)
!3388 = !DILocation(line: 1739, column: 14, scope: !3386)
!3389 = !DILocation(line: 1739, column: 18, scope: !3386)
!3390 = !DILocation(line: 1739, column: 7, scope: !3379)
!3391 = !DILocation(line: 1740, column: 4, scope: !3386)
!3392 = !DILocation(line: 1746, column: 8, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3379, file: !3, line: 1746, column: 7)
!3394 = !DILocation(line: 1746, column: 7, scope: !3379)
!3395 = !DILocation(line: 1747, column: 4, scope: !3393)
!3396 = !DILocation(line: 1747, column: 10, scope: !3393)
!3397 = !DILocation(line: 1747, column: 18, scope: !3393)
!3398 = !DILocation(line: 1747, column: 41, scope: !3393)
!3399 = !DILocation(line: 1748, column: 2, scope: !3379)
!3400 = !DILocation(line: 1751, column: 22, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1751, column: 6)
!3402 = !DILocation(line: 1751, column: 6, scope: !3401)
!3403 = !DILocation(line: 1751, column: 6, scope: !3091)
!3404 = !DILocation(line: 1752, column: 3, scope: !3401)
!3405 = !DILocation(line: 1752, column: 9, scope: !3401)
!3406 = !DILocation(line: 1752, column: 19, scope: !3401)
!3407 = !DILocation(line: 1753, column: 24, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 1753, column: 11)
!3409 = !DILocation(line: 1753, column: 11, scope: !3408)
!3410 = !DILocation(line: 1753, column: 11, scope: !3401)
!3411 = !DILocation(line: 1754, column: 3, scope: !3408)
!3412 = !DILocation(line: 1754, column: 9, scope: !3408)
!3413 = !DILocation(line: 1754, column: 19, scope: !3408)
!3414 = !DILocation(line: 1756, column: 3, scope: !3408)
!3415 = !DILocation(line: 1756, column: 9, scope: !3408)
!3416 = !DILocation(line: 1756, column: 19, scope: !3408)
!3417 = !DILocation(line: 1761, column: 26, scope: !3091)
!3418 = !DILocation(line: 1761, column: 8, scope: !3091)
!3419 = !DILocation(line: 1761, column: 6, scope: !3091)
!3420 = !DILocation(line: 1762, column: 6, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1762, column: 6)
!3422 = !DILocation(line: 1762, column: 6, scope: !3091)
!3423 = !DILocation(line: 1763, column: 3, scope: !3421)
!3424 = !DILocation(line: 1765, column: 21, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1765, column: 6)
!3426 = !DILocation(line: 1765, column: 6, scope: !3425)
!3427 = !DILocation(line: 1765, column: 6, scope: !3091)
!3428 = !DILocation(line: 1766, column: 3, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 1765, column: 28)
!3430 = !DILocation(line: 1766, column: 9, scope: !3429)
!3431 = !DILocation(line: 1766, column: 25, scope: !3429)
!3432 = !DILocation(line: 1768, column: 26, scope: !3429)
!3433 = !DILocation(line: 1768, column: 9, scope: !3429)
!3434 = !DILocation(line: 1768, column: 7, scope: !3429)
!3435 = !DILocation(line: 1769, column: 8, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1769, column: 7)
!3437 = !DILocation(line: 1769, column: 7, scope: !3429)
!3438 = !DILocation(line: 1770, column: 27, scope: !3436)
!3439 = !DILocation(line: 1770, column: 10, scope: !3436)
!3440 = !DILocation(line: 1770, column: 8, scope: !3436)
!3441 = !DILocation(line: 1770, column: 4, scope: !3436)
!3442 = !DILocation(line: 1772, column: 3, scope: !3429)
!3443 = !DILocation(line: 1772, column: 9, scope: !3429)
!3444 = !DILocation(line: 1772, column: 25, scope: !3429)
!3445 = !DILocation(line: 1774, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1774, column: 7)
!3447 = !DILocation(line: 1774, column: 7, scope: !3429)
!3448 = !DILocation(line: 1775, column: 4, scope: !3446)
!3449 = !DILocation(line: 1777, column: 2, scope: !3429)
!3450 = !DILocation(line: 1777, column: 31, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 1777, column: 13)
!3452 = !DILocation(line: 1777, column: 14, scope: !3451)
!3453 = !DILocation(line: 1777, column: 13, scope: !3425)
!3454 = !DILocation(line: 1779, column: 30, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 1777, column: 38)
!3456 = !DILocation(line: 1779, column: 9, scope: !3455)
!3457 = !DILocation(line: 1779, column: 7, scope: !3455)
!3458 = !DILocation(line: 1780, column: 7, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 1780, column: 7)
!3460 = !DILocation(line: 1780, column: 11, scope: !3459)
!3461 = !DILocation(line: 1780, column: 15, scope: !3459)
!3462 = !DILocation(line: 1780, column: 30, scope: !3459)
!3463 = !DILocation(line: 1780, column: 18, scope: !3459)
!3464 = !DILocation(line: 1780, column: 7, scope: !3455)
!3465 = !DILocation(line: 1781, column: 28, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 1780, column: 37)
!3467 = !DILocation(line: 1781, column: 10, scope: !3466)
!3468 = !DILocation(line: 1781, column: 8, scope: !3466)
!3469 = !DILocation(line: 1782, column: 8, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3466, file: !3, line: 1782, column: 8)
!3471 = !DILocation(line: 1782, column: 8, scope: !3466)
!3472 = !DILocation(line: 1783, column: 5, scope: !3470)
!3473 = !DILocation(line: 1784, column: 3, scope: !3466)
!3474 = !DILocation(line: 1785, column: 2, scope: !3455)
!3475 = !DILocation(line: 1790, column: 24, scope: !3091)
!3476 = !DILocation(line: 1790, column: 2, scope: !3091)
!3477 = !DILocation(line: 1795, column: 6, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1795, column: 6)
!3479 = !DILocation(line: 1795, column: 12, scope: !3478)
!3480 = !DILocation(line: 1795, column: 20, scope: !3478)
!3481 = !DILocation(line: 1795, column: 6, scope: !3091)
!3482 = !DILocation(line: 1796, column: 20, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3478, file: !3, line: 1795, column: 25)
!3484 = !DILocation(line: 1798, column: 5, scope: !3483)
!3485 = !DILocation(line: 1798, column: 11, scope: !3483)
!3486 = !DILocation(line: 1798, column: 19, scope: !3483)
!3487 = !DILocation(line: 1796, column: 9, scope: !3483)
!3488 = !DILocation(line: 1796, column: 7, scope: !3483)
!3489 = !DILocation(line: 1799, column: 7, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1799, column: 7)
!3491 = !DILocation(line: 1799, column: 11, scope: !3490)
!3492 = !DILocation(line: 1799, column: 14, scope: !3490)
!3493 = !DILocation(line: 1799, column: 18, scope: !3490)
!3494 = !DILocation(line: 1799, column: 7, scope: !3483)
!3495 = !DILocation(line: 1800, column: 4, scope: !3490)
!3496 = !DILocation(line: 1801, column: 7, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3483, file: !3, line: 1801, column: 7)
!3498 = !DILocation(line: 1801, column: 7, scope: !3483)
!3499 = !DILocation(line: 1802, column: 4, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 1801, column: 12)
!3501 = !DILocation(line: 1804, column: 4, scope: !3500)
!3502 = !DILocation(line: 1804, column: 10, scope: !3500)
!3503 = !DILocation(line: 1804, column: 18, scope: !3500)
!3504 = !DILocation(line: 1804, column: 25, scope: !3500)
!3505 = !DILocation(line: 1805, column: 8, scope: !3500)
!3506 = !DILocation(line: 1806, column: 3, scope: !3500)
!3507 = !DILocation(line: 1807, column: 4, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 1806, column: 10)
!3509 = !DILocation(line: 1807, column: 10, scope: !3508)
!3510 = !DILocation(line: 1807, column: 18, scope: !3508)
!3511 = !DILocation(line: 1807, column: 25, scope: !3508)
!3512 = !DILocation(line: 1809, column: 2, scope: !3483)
!3513 = !DILocation(line: 1818, column: 6, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1818, column: 6)
!3515 = !DILocation(line: 1818, column: 12, scope: !3514)
!3516 = !DILocation(line: 1818, column: 20, scope: !3514)
!3517 = !DILocation(line: 1818, column: 31, scope: !3514)
!3518 = !DILocation(line: 1818, column: 6, scope: !3091)
!3519 = !DILocalVariable(name: "timeout_ms", scope: !3520, file: !3, line: 1819, type: !7)
!3520 = distinct !DILexicalBlock(scope: !3514, file: !3, line: 1818, column: 36)
!3521 = !DILocation(line: 1819, column: 16, scope: !3520)
!3522 = !DILocalVariable(name: "__UNIQUE_ID___x185", scope: !3523, file: !3, line: 1821, type: !7)
!3523 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 1821, column: 16)
!3524 = !DILocation(line: 1821, column: 16, scope: !3523)
!3525 = !DILocalVariable(name: "__UNIQUE_ID___y186", scope: !3523, file: !3, line: 1821, type: !7)
!3526 = !DILocation(line: 1821, column: 14, scope: !3520)
!3527 = !DILocation(line: 1822, column: 20, scope: !3520)
!3528 = !DILocation(line: 1823, column: 28, scope: !3520)
!3529 = !DILocation(line: 1822, column: 9, scope: !3520)
!3530 = !DILocation(line: 1822, column: 7, scope: !3520)
!3531 = !DILocation(line: 1824, column: 7, scope: !3532)
!3532 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 1824, column: 7)
!3533 = !DILocation(line: 1824, column: 11, scope: !3532)
!3534 = !DILocation(line: 1824, column: 14, scope: !3532)
!3535 = !DILocation(line: 1824, column: 18, scope: !3532)
!3536 = !DILocation(line: 1824, column: 7, scope: !3520)
!3537 = !DILocation(line: 1825, column: 4, scope: !3532)
!3538 = !DILocation(line: 1830, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 1830, column: 7)
!3540 = !DILocation(line: 1830, column: 7, scope: !3520)
!3541 = !DILocation(line: 1831, column: 4, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1830, column: 12)
!3543 = !DILocation(line: 1833, column: 4, scope: !3542)
!3544 = !DILocation(line: 1833, column: 10, scope: !3542)
!3545 = !DILocation(line: 1833, column: 18, scope: !3542)
!3546 = !DILocation(line: 1833, column: 29, scope: !3542)
!3547 = !DILocation(line: 1834, column: 8, scope: !3542)
!3548 = !DILocation(line: 1835, column: 3, scope: !3542)
!3549 = !DILocation(line: 1836, column: 4, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1835, column: 10)
!3551 = !DILocation(line: 1836, column: 10, scope: !3550)
!3552 = !DILocation(line: 1836, column: 18, scope: !3550)
!3553 = !DILocation(line: 1836, column: 29, scope: !3550)
!3554 = !DILocation(line: 1838, column: 2, scope: !3520)
!3555 = !DILocation(line: 1844, column: 2, scope: !3091)
!3556 = !DILocation(line: 1844, column: 8, scope: !3091)
!3557 = !DILocation(line: 1844, column: 16, scope: !3091)
!3558 = !DILocation(line: 1844, column: 24, scope: !3091)
!3559 = !DILocation(line: 1845, column: 6, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1845, column: 6)
!3561 = !DILocation(line: 1845, column: 12, scope: !3560)
!3562 = !DILocation(line: 1845, column: 20, scope: !3560)
!3563 = !DILocation(line: 1845, column: 33, scope: !3560)
!3564 = !DILocation(line: 1845, column: 36, scope: !3560)
!3565 = !DILocation(line: 1845, column: 42, scope: !3560)
!3566 = !DILocation(line: 1845, column: 48, scope: !3560)
!3567 = !DILocation(line: 1845, column: 6, scope: !3091)
!3568 = !DILocation(line: 1846, column: 25, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 1845, column: 64)
!3570 = !DILocation(line: 1846, column: 9, scope: !3569)
!3571 = !DILocation(line: 1846, column: 7, scope: !3569)
!3572 = !DILocation(line: 1847, column: 7, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1847, column: 7)
!3574 = !DILocation(line: 1847, column: 11, scope: !3573)
!3575 = !DILocation(line: 1847, column: 14, scope: !3573)
!3576 = !DILocation(line: 1847, column: 18, scope: !3573)
!3577 = !DILocation(line: 1847, column: 7, scope: !3569)
!3578 = !DILocation(line: 1848, column: 4, scope: !3573)
!3579 = !DILocation(line: 1849, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 1849, column: 7)
!3581 = !DILocation(line: 1849, column: 7, scope: !3569)
!3582 = !DILocation(line: 1850, column: 4, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3580, file: !3, line: 1849, column: 12)
!3584 = !DILocation(line: 1852, column: 4, scope: !3583)
!3585 = !DILocation(line: 1852, column: 10, scope: !3583)
!3586 = !DILocation(line: 1852, column: 18, scope: !3583)
!3587 = !DILocation(line: 1852, column: 31, scope: !3583)
!3588 = !DILocation(line: 1853, column: 4, scope: !3583)
!3589 = !DILocation(line: 1853, column: 10, scope: !3583)
!3590 = !DILocation(line: 1853, column: 18, scope: !3583)
!3591 = !DILocation(line: 1853, column: 29, scope: !3583)
!3592 = !DILocation(line: 1854, column: 8, scope: !3583)
!3593 = !DILocation(line: 1855, column: 3, scope: !3583)
!3594 = !DILocation(line: 1856, column: 2, scope: !3569)
!3595 = !DILocation(line: 1862, column: 24, scope: !3091)
!3596 = !DILocation(line: 1862, column: 30, scope: !3091)
!3597 = !DILocation(line: 1862, column: 38, scope: !3091)
!3598 = !DILocation(line: 1862, column: 2, scope: !3091)
!3599 = !DILocation(line: 1862, column: 8, scope: !3091)
!3600 = !DILocation(line: 1862, column: 22, scope: !3091)
!3601 = !DILocation(line: 1864, column: 6, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1864, column: 6)
!3603 = !DILocation(line: 1864, column: 12, scope: !3602)
!3604 = !DILocation(line: 1864, column: 20, scope: !3602)
!3605 = !DILocation(line: 1864, column: 24, scope: !3602)
!3606 = !DILocation(line: 1864, column: 30, scope: !3602)
!3607 = !DILocation(line: 1864, column: 6, scope: !3091)
!3608 = !DILocation(line: 1865, column: 9, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1864, column: 43)
!3610 = !DILocation(line: 1865, column: 15, scope: !3609)
!3611 = !DILocation(line: 1865, column: 24, scope: !3609)
!3612 = !DILocation(line: 1865, column: 35, scope: !3609)
!3613 = !DILocation(line: 1865, column: 41, scope: !3609)
!3614 = !DILocation(line: 1865, column: 7, scope: !3609)
!3615 = !DILocation(line: 1866, column: 8, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1866, column: 7)
!3617 = !DILocation(line: 1866, column: 7, scope: !3609)
!3618 = !DILocation(line: 1867, column: 4, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 1866, column: 13)
!3620 = !DILocation(line: 1867, column: 10, scope: !3619)
!3621 = !DILocation(line: 1867, column: 22, scope: !3619)
!3622 = !DILocation(line: 1869, column: 8, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 1869, column: 8)
!3624 = !DILocation(line: 1869, column: 14, scope: !3623)
!3625 = !DILocation(line: 1869, column: 22, scope: !3623)
!3626 = !DILocation(line: 1869, column: 8, scope: !3619)
!3627 = !DILocation(line: 1870, column: 5, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1869, column: 31)
!3629 = !DILocation(line: 1872, column: 4, scope: !3628)
!3630 = !DILocation(line: 1873, column: 5, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1872, column: 11)
!3632 = !DILocation(line: 1873, column: 11, scope: !3631)
!3633 = !DILocation(line: 1873, column: 23, scope: !3631)
!3634 = !DILocation(line: 1874, column: 5, scope: !3631)
!3635 = !DILocation(line: 1877, column: 3, scope: !3619)
!3636 = !DILocation(line: 1878, column: 2, scope: !3609)
!3637 = !DILocation(line: 1880, column: 6, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1880, column: 6)
!3639 = !DILocation(line: 1880, column: 12, scope: !3638)
!3640 = !DILocation(line: 1880, column: 18, scope: !3638)
!3641 = !DILocation(line: 1880, column: 40, scope: !3638)
!3642 = !DILocation(line: 1881, column: 6, scope: !3638)
!3643 = !DILocation(line: 1881, column: 12, scope: !3638)
!3644 = !DILocation(line: 1881, column: 16, scope: !3638)
!3645 = !DILocation(line: 1881, column: 31, scope: !3638)
!3646 = !DILocation(line: 1880, column: 6, scope: !3091)
!3647 = !DILocation(line: 1882, column: 3, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 1881, column: 58)
!3649 = !DILocation(line: 1884, column: 7, scope: !3648)
!3650 = !DILocation(line: 1885, column: 3, scope: !3648)
!3651 = !DILocation(line: 1888, column: 7, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1888, column: 6)
!3653 = !DILocation(line: 1888, column: 6, scope: !3091)
!3654 = !DILocation(line: 1889, column: 16, scope: !3652)
!3655 = !DILocation(line: 1889, column: 3, scope: !3652)
!3656 = !DILocation(line: 1889, column: 9, scope: !3652)
!3657 = !DILocation(line: 1889, column: 14, scope: !3652)
!3658 = !DILocation(line: 1891, column: 2, scope: !3091)
!3659 = !DILabel(scope: !3091, name: "free_card", file: !3, line: 1893)
!3660 = !DILocation(line: 1893, column: 1, scope: !3091)
!3661 = !DILocation(line: 1894, column: 7, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1894, column: 6)
!3663 = !DILocation(line: 1894, column: 6, scope: !3091)
!3664 = !DILocation(line: 1895, column: 19, scope: !3662)
!3665 = !DILocation(line: 1895, column: 3, scope: !3662)
!3666 = !DILabel(scope: !3091, name: "err", file: !3, line: 1896)
!3667 = !DILocation(line: 1896, column: 1, scope: !3091)
!3668 = !DILocation(line: 1897, column: 9, scope: !3091)
!3669 = !DILocation(line: 1897, column: 2, scope: !3091)
!3670 = !DILocation(line: 1898, column: 1, scope: !3091)
!3671 = distinct !DISubprogram(name: "mmc_claim_host", scope: !2258, file: !2258, line: 134, type: !2126, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3672 = !DILocalVariable(name: "host", arg: 1, scope: !3671, file: !2258, line: 134, type: !62)
!3673 = !DILocation(line: 134, column: 52, scope: !3671)
!3674 = !DILocation(line: 136, column: 19, scope: !3671)
!3675 = !DILocation(line: 136, column: 2, scope: !3671)
!3676 = !DILocation(line: 137, column: 1, scope: !3671)
!3677 = distinct !DISubprogram(name: "mmc_card_hs200", scope: !3678, file: !3678, line: 60, type: !3679, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3678 = !DIFile(filename: "drivers/mmc/core/host.h", directory: "/home/lizy2001/genbc/linux")
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!962, !57}
!3681 = !DILocalVariable(name: "card", arg: 1, scope: !3677, file: !3678, line: 60, type: !57)
!3682 = !DILocation(line: 60, column: 52, scope: !3677)
!3683 = !DILocation(line: 62, column: 9, scope: !3677)
!3684 = !DILocation(line: 62, column: 15, scope: !3677)
!3685 = !DILocation(line: 62, column: 21, scope: !3677)
!3686 = !DILocation(line: 62, column: 25, scope: !3677)
!3687 = !DILocation(line: 62, column: 32, scope: !3677)
!3688 = !DILocation(line: 62, column: 2, scope: !3677)
!3689 = distinct !DISubprogram(name: "mmc_card_hs400", scope: !3678, file: !3678, line: 70, type: !3679, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3690 = !DILocalVariable(name: "card", arg: 1, scope: !3689, file: !3678, line: 70, type: !57)
!3691 = !DILocation(line: 70, column: 52, scope: !3689)
!3692 = !DILocation(line: 72, column: 9, scope: !3689)
!3693 = !DILocation(line: 72, column: 15, scope: !3689)
!3694 = !DILocation(line: 72, column: 21, scope: !3689)
!3695 = !DILocation(line: 72, column: 25, scope: !3689)
!3696 = !DILocation(line: 72, column: 32, scope: !3689)
!3697 = !DILocation(line: 72, column: 2, scope: !3689)
!3698 = distinct !DISubprogram(name: "mmc_card_hs", scope: !64, file: !64, line: 568, type: !2642, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3699 = !DILocalVariable(name: "card", arg: 1, scope: !3698, file: !64, line: 568, type: !57)
!3700 = !DILocation(line: 568, column: 48, scope: !3698)
!3701 = !DILocation(line: 570, column: 9, scope: !3698)
!3702 = !DILocation(line: 570, column: 15, scope: !3698)
!3703 = !DILocation(line: 570, column: 21, scope: !3698)
!3704 = !DILocation(line: 570, column: 25, scope: !3698)
!3705 = !DILocation(line: 570, column: 32, scope: !3698)
!3706 = !DILocation(line: 570, column: 52, scope: !3698)
!3707 = !DILocation(line: 571, column: 3, scope: !3698)
!3708 = !DILocation(line: 571, column: 9, scope: !3698)
!3709 = !DILocation(line: 571, column: 15, scope: !3698)
!3710 = !DILocation(line: 571, column: 19, scope: !3698)
!3711 = !DILocation(line: 571, column: 26, scope: !3698)
!3712 = !DILocation(line: 570, column: 2, scope: !3698)
!3713 = distinct !DISubprogram(name: "kobject_name", scope: !72, file: !72, line: 88, type: !3714, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{!75, !3716}
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !71)
!3718 = !DILocalVariable(name: "kobj", arg: 1, scope: !3713, file: !72, line: 88, type: !3716)
!3719 = !DILocation(line: 88, column: 62, scope: !3713)
!3720 = !DILocation(line: 90, column: 9, scope: !3713)
!3721 = !DILocation(line: 90, column: 15, scope: !3713)
!3722 = !DILocation(line: 90, column: 2, scope: !3713)
!3723 = distinct !DISubprogram(name: "mmc_remove", scope: !3, file: !3, line: 1989, type: !2126, scopeLine: 1990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3724 = !DILocalVariable(name: "host", arg: 1, scope: !3723, file: !3, line: 1989, type: !62)
!3725 = !DILocation(line: 1989, column: 41, scope: !3723)
!3726 = !DILocation(line: 1991, column: 18, scope: !3723)
!3727 = !DILocation(line: 1991, column: 24, scope: !3723)
!3728 = !DILocation(line: 1991, column: 2, scope: !3723)
!3729 = !DILocation(line: 1992, column: 2, scope: !3723)
!3730 = !DILocation(line: 1992, column: 8, scope: !3723)
!3731 = !DILocation(line: 1992, column: 13, scope: !3723)
!3732 = !DILocation(line: 1993, column: 1, scope: !3723)
!3733 = distinct !DISubprogram(name: "mmc_detect", scope: !3, file: !3, line: 2006, type: !2126, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3734 = !DILocalVariable(name: "host", arg: 1, scope: !3733, file: !3, line: 2006, type: !62)
!3735 = !DILocation(line: 2006, column: 41, scope: !3733)
!3736 = !DILocalVariable(name: "err", scope: !3733, file: !3, line: 2008, type: !119)
!3737 = !DILocation(line: 2008, column: 6, scope: !3733)
!3738 = !DILocation(line: 2010, column: 15, scope: !3733)
!3739 = !DILocation(line: 2010, column: 21, scope: !3733)
!3740 = !DILocation(line: 2010, column: 2, scope: !3733)
!3741 = !DILocation(line: 2015, column: 33, scope: !3733)
!3742 = !DILocation(line: 2015, column: 8, scope: !3733)
!3743 = !DILocation(line: 2015, column: 6, scope: !3733)
!3744 = !DILocation(line: 2017, column: 15, scope: !3733)
!3745 = !DILocation(line: 2017, column: 21, scope: !3733)
!3746 = !DILocation(line: 2017, column: 2, scope: !3733)
!3747 = !DILocation(line: 2019, column: 6, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 2019, column: 6)
!3749 = !DILocation(line: 2019, column: 6, scope: !3733)
!3750 = !DILocation(line: 2020, column: 14, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 2019, column: 11)
!3752 = !DILocation(line: 2020, column: 3, scope: !3751)
!3753 = !DILocation(line: 2022, column: 18, scope: !3751)
!3754 = !DILocation(line: 2022, column: 3, scope: !3751)
!3755 = !DILocation(line: 2023, column: 18, scope: !3751)
!3756 = !DILocation(line: 2023, column: 3, scope: !3751)
!3757 = !DILocation(line: 2024, column: 17, scope: !3751)
!3758 = !DILocation(line: 2024, column: 3, scope: !3751)
!3759 = !DILocation(line: 2025, column: 20, scope: !3751)
!3760 = !DILocation(line: 2025, column: 3, scope: !3751)
!3761 = !DILocation(line: 2026, column: 2, scope: !3751)
!3762 = !DILocation(line: 2027, column: 1, scope: !3733)
!3763 = distinct !DISubprogram(name: "mmc_suspend", scope: !3, file: !3, line: 2065, type: !2117, scopeLine: 2066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3764 = !DILocalVariable(name: "host", arg: 1, scope: !3763, file: !3, line: 2065, type: !62)
!3765 = !DILocation(line: 2065, column: 41, scope: !3763)
!3766 = !DILocalVariable(name: "err", scope: !3763, file: !3, line: 2067, type: !119)
!3767 = !DILocation(line: 2067, column: 6, scope: !3763)
!3768 = !DILocation(line: 2069, column: 21, scope: !3763)
!3769 = !DILocation(line: 2069, column: 8, scope: !3763)
!3770 = !DILocation(line: 2069, column: 6, scope: !3763)
!3771 = !DILocation(line: 2070, column: 7, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 2070, column: 6)
!3773 = !DILocation(line: 2070, column: 6, scope: !3763)
!3774 = !DILocation(line: 2071, column: 23, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3772, file: !3, line: 2070, column: 12)
!3776 = !DILocation(line: 2071, column: 29, scope: !3775)
!3777 = !DILocation(line: 2071, column: 35, scope: !3775)
!3778 = !DILocation(line: 2071, column: 3, scope: !3775)
!3779 = !DILocation(line: 2072, column: 29, scope: !3775)
!3780 = !DILocation(line: 2072, column: 35, scope: !3775)
!3781 = !DILocation(line: 2072, column: 41, scope: !3775)
!3782 = !DILocation(line: 2072, column: 3, scope: !3775)
!3783 = !DILocation(line: 2073, column: 2, scope: !3775)
!3784 = !DILocation(line: 2075, column: 9, scope: !3763)
!3785 = !DILocation(line: 2075, column: 2, scope: !3763)
!3786 = distinct !DISubprogram(name: "mmc_resume", scope: !3, file: !3, line: 2124, type: !2117, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3787 = !DILocalVariable(name: "host", arg: 1, scope: !3786, file: !3, line: 2124, type: !62)
!3788 = !DILocation(line: 2124, column: 40, scope: !3786)
!3789 = !DILocation(line: 2126, column: 21, scope: !3786)
!3790 = !DILocation(line: 2126, column: 27, scope: !3786)
!3791 = !DILocation(line: 2126, column: 33, scope: !3786)
!3792 = !DILocation(line: 2126, column: 2, scope: !3786)
!3793 = !DILocation(line: 2127, column: 2, scope: !3786)
!3794 = distinct !DISubprogram(name: "mmc_runtime_suspend", scope: !3, file: !3, line: 2133, type: !2117, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3795 = !DILocalVariable(name: "host", arg: 1, scope: !3794, file: !3, line: 2133, type: !62)
!3796 = !DILocation(line: 2133, column: 49, scope: !3794)
!3797 = !DILocalVariable(name: "err", scope: !3794, file: !3, line: 2135, type: !119)
!3798 = !DILocation(line: 2135, column: 6, scope: !3794)
!3799 = !DILocation(line: 2137, column: 8, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 2137, column: 6)
!3801 = !DILocation(line: 2137, column: 14, scope: !3800)
!3802 = !DILocation(line: 2137, column: 19, scope: !3800)
!3803 = !DILocation(line: 2137, column: 6, scope: !3794)
!3804 = !DILocation(line: 2138, column: 3, scope: !3800)
!3805 = !DILocation(line: 2140, column: 21, scope: !3794)
!3806 = !DILocation(line: 2140, column: 8, scope: !3794)
!3807 = !DILocation(line: 2140, column: 6, scope: !3794)
!3808 = !DILocation(line: 2141, column: 6, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3794, file: !3, line: 2141, column: 6)
!3810 = !DILocation(line: 2141, column: 6, scope: !3794)
!3811 = !DILocation(line: 2142, column: 3, scope: !3809)
!3812 = !DILocation(line: 2145, column: 9, scope: !3794)
!3813 = !DILocation(line: 2145, column: 2, scope: !3794)
!3814 = !DILocation(line: 2146, column: 1, scope: !3794)
!3815 = distinct !DISubprogram(name: "mmc_runtime_resume", scope: !3, file: !3, line: 2151, type: !2117, scopeLine: 2152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3816 = !DILocalVariable(name: "host", arg: 1, scope: !3815, file: !3, line: 2151, type: !62)
!3817 = !DILocation(line: 2151, column: 48, scope: !3815)
!3818 = !DILocalVariable(name: "err", scope: !3815, file: !3, line: 2153, type: !119)
!3819 = !DILocation(line: 2153, column: 6, scope: !3815)
!3820 = !DILocation(line: 2155, column: 20, scope: !3815)
!3821 = !DILocation(line: 2155, column: 8, scope: !3815)
!3822 = !DILocation(line: 2155, column: 6, scope: !3815)
!3823 = !DILocation(line: 2156, column: 6, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 2156, column: 6)
!3825 = !DILocation(line: 2156, column: 10, scope: !3824)
!3826 = !DILocation(line: 2156, column: 13, scope: !3824)
!3827 = !DILocation(line: 2156, column: 17, scope: !3824)
!3828 = !DILocation(line: 2156, column: 6, scope: !3815)
!3829 = !DILocation(line: 2157, column: 3, scope: !3824)
!3830 = !DILocation(line: 2160, column: 2, scope: !3815)
!3831 = distinct !DISubprogram(name: "mmc_alive", scope: !3, file: !3, line: 1998, type: !2117, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3832 = !DILocalVariable(name: "host", arg: 1, scope: !3831, file: !3, line: 1998, type: !62)
!3833 = !DILocation(line: 1998, column: 39, scope: !3831)
!3834 = !DILocation(line: 2000, column: 25, scope: !3831)
!3835 = !DILocation(line: 2000, column: 31, scope: !3831)
!3836 = !DILocation(line: 2000, column: 9, scope: !3831)
!3837 = !DILocation(line: 2000, column: 2, scope: !3831)
!3838 = distinct !DISubprogram(name: "mmc_shutdown", scope: !3, file: !3, line: 2103, type: !2117, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3839 = !DILocalVariable(name: "host", arg: 1, scope: !3838, file: !3, line: 2103, type: !62)
!3840 = !DILocation(line: 2103, column: 42, scope: !3838)
!3841 = !DILocalVariable(name: "err", scope: !3838, file: !3, line: 2105, type: !119)
!3842 = !DILocation(line: 2105, column: 6, scope: !3838)
!3843 = !DILocation(line: 2111, column: 30, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2111, column: 6)
!3845 = !DILocation(line: 2111, column: 36, scope: !3844)
!3846 = !DILocation(line: 2111, column: 6, scope: !3844)
!3847 = !DILocation(line: 2111, column: 42, scope: !3844)
!3848 = !DILocation(line: 2112, column: 5, scope: !3844)
!3849 = !DILocation(line: 2112, column: 11, scope: !3844)
!3850 = !DILocation(line: 2112, column: 17, scope: !3844)
!3851 = !DILocation(line: 2111, column: 6, scope: !3838)
!3852 = !DILocation(line: 2113, column: 21, scope: !3844)
!3853 = !DILocation(line: 2113, column: 9, scope: !3844)
!3854 = !DILocation(line: 2113, column: 7, scope: !3844)
!3855 = !DILocation(line: 2113, column: 3, scope: !3844)
!3856 = !DILocation(line: 2115, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3838, file: !3, line: 2115, column: 6)
!3858 = !DILocation(line: 2115, column: 6, scope: !3838)
!3859 = !DILocation(line: 2116, column: 22, scope: !3857)
!3860 = !DILocation(line: 2116, column: 9, scope: !3857)
!3861 = !DILocation(line: 2116, column: 7, scope: !3857)
!3862 = !DILocation(line: 2116, column: 3, scope: !3857)
!3863 = !DILocation(line: 2118, column: 9, scope: !3838)
!3864 = !DILocation(line: 2118, column: 2, scope: !3838)
!3865 = distinct !DISubprogram(name: "_mmc_hw_reset", scope: !3, file: !3, line: 2173, type: !2117, scopeLine: 2174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3866 = !DILocalVariable(name: "host", arg: 1, scope: !3865, file: !3, line: 2173, type: !62)
!3867 = !DILocation(line: 2173, column: 43, scope: !3865)
!3868 = !DILocalVariable(name: "card", scope: !3865, file: !3, line: 2175, type: !57)
!3869 = !DILocation(line: 2175, column: 19, scope: !3865)
!3870 = !DILocation(line: 2175, column: 26, scope: !3865)
!3871 = !DILocation(line: 2175, column: 32, scope: !3865)
!3872 = !DILocation(line: 2181, column: 18, scope: !3865)
!3873 = !DILocation(line: 2181, column: 24, scope: !3865)
!3874 = !DILocation(line: 2181, column: 2, scope: !3865)
!3875 = !DILocation(line: 2183, column: 7, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 2183, column: 6)
!3877 = !DILocation(line: 2183, column: 13, scope: !3876)
!3878 = !DILocation(line: 2183, column: 18, scope: !3876)
!3879 = !DILocation(line: 2183, column: 38, scope: !3876)
!3880 = !DILocation(line: 2183, column: 41, scope: !3876)
!3881 = !DILocation(line: 2183, column: 47, scope: !3876)
!3882 = !DILocation(line: 2183, column: 52, scope: !3876)
!3883 = !DILocation(line: 2183, column: 61, scope: !3876)
!3884 = !DILocation(line: 2184, column: 21, scope: !3876)
!3885 = !DILocation(line: 2184, column: 7, scope: !3876)
!3886 = !DILocation(line: 2183, column: 6, scope: !3865)
!3887 = !DILocation(line: 2186, column: 17, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 2184, column: 28)
!3889 = !DILocation(line: 2186, column: 23, scope: !3888)
!3890 = !DILocation(line: 2186, column: 29, scope: !3888)
!3891 = !DILocation(line: 2186, column: 3, scope: !3888)
!3892 = !DILocation(line: 2187, column: 3, scope: !3888)
!3893 = !DILocation(line: 2187, column: 9, scope: !3888)
!3894 = !DILocation(line: 2187, column: 14, scope: !3888)
!3895 = !DILocation(line: 2187, column: 23, scope: !3888)
!3896 = !DILocation(line: 2189, column: 25, scope: !3888)
!3897 = !DILocation(line: 2189, column: 3, scope: !3888)
!3898 = !DILocation(line: 2190, column: 2, scope: !3888)
!3899 = !DILocation(line: 2192, column: 19, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 2190, column: 9)
!3901 = !DILocation(line: 2192, column: 25, scope: !3900)
!3902 = !DILocation(line: 2192, column: 31, scope: !3900)
!3903 = !DILocation(line: 2192, column: 3, scope: !3900)
!3904 = !DILocation(line: 2193, column: 20, scope: !3900)
!3905 = !DILocation(line: 2193, column: 3, scope: !3900)
!3906 = !DILocation(line: 2195, column: 23, scope: !3865)
!3907 = !DILocation(line: 2195, column: 29, scope: !3865)
!3908 = !DILocation(line: 2195, column: 35, scope: !3865)
!3909 = !DILocation(line: 2195, column: 40, scope: !3865)
!3910 = !DILocation(line: 2195, column: 9, scope: !3865)
!3911 = !DILocation(line: 2195, column: 2, scope: !3865)
!3912 = distinct !DISubprogram(name: "_mmc_suspend", scope: !3, file: !3, line: 2029, type: !3913, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!119, !62, !962}
!3915 = !DILocalVariable(name: "host", arg: 1, scope: !3912, file: !3, line: 2029, type: !62)
!3916 = !DILocation(line: 2029, column: 42, scope: !3912)
!3917 = !DILocalVariable(name: "is_suspend", arg: 2, scope: !3912, file: !3, line: 2029, type: !962)
!3918 = !DILocation(line: 2029, column: 53, scope: !3912)
!3919 = !DILocalVariable(name: "err", scope: !3912, file: !3, line: 2031, type: !119)
!3920 = !DILocation(line: 2031, column: 6, scope: !3912)
!3921 = !DILocalVariable(name: "notify_type", scope: !3912, file: !3, line: 2032, type: !7)
!3922 = !DILocation(line: 2032, column: 15, scope: !3912)
!3923 = !DILocation(line: 2032, column: 29, scope: !3912)
!3924 = !DILocation(line: 2035, column: 17, scope: !3912)
!3925 = !DILocation(line: 2035, column: 2, scope: !3912)
!3926 = !DILocation(line: 2037, column: 6, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2037, column: 6)
!3928 = !DILocation(line: 2037, column: 6, scope: !3912)
!3929 = !DILocation(line: 2038, column: 3, scope: !3927)
!3930 = !DILocation(line: 2040, column: 24, scope: !3912)
!3931 = !DILocation(line: 2040, column: 30, scope: !3912)
!3932 = !DILocation(line: 2040, column: 8, scope: !3912)
!3933 = !DILocation(line: 2040, column: 6, scope: !3912)
!3934 = !DILocation(line: 2041, column: 6, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2041, column: 6)
!3936 = !DILocation(line: 2041, column: 6, scope: !3912)
!3937 = !DILocation(line: 2042, column: 3, scope: !3935)
!3938 = !DILocation(line: 2044, column: 30, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2044, column: 6)
!3940 = !DILocation(line: 2044, column: 36, scope: !3939)
!3941 = !DILocation(line: 2044, column: 6, scope: !3939)
!3942 = !DILocation(line: 2044, column: 42, scope: !3939)
!3943 = !DILocation(line: 2045, column: 8, scope: !3939)
!3944 = !DILocation(line: 2045, column: 14, scope: !3939)
!3945 = !DILocation(line: 2045, column: 20, scope: !3939)
!3946 = !DILocation(line: 2045, column: 47, scope: !3939)
!3947 = !DILocation(line: 2045, column: 51, scope: !3939)
!3948 = !DILocation(line: 2045, column: 62, scope: !3939)
!3949 = !DILocation(line: 2046, column: 8, scope: !3939)
!3950 = !DILocation(line: 2046, column: 14, scope: !3939)
!3951 = !DILocation(line: 2046, column: 20, scope: !3939)
!3952 = !DILocation(line: 2044, column: 6, scope: !3912)
!3953 = !DILocation(line: 2047, column: 29, scope: !3939)
!3954 = !DILocation(line: 2047, column: 35, scope: !3939)
!3955 = !DILocation(line: 2047, column: 41, scope: !3939)
!3956 = !DILocation(line: 2047, column: 9, scope: !3939)
!3957 = !DILocation(line: 2047, column: 7, scope: !3939)
!3958 = !DILocation(line: 2047, column: 3, scope: !3939)
!3959 = !DILocation(line: 2048, column: 25, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3939, file: !3, line: 2048, column: 11)
!3961 = !DILocation(line: 2048, column: 31, scope: !3960)
!3962 = !DILocation(line: 2048, column: 11, scope: !3960)
!3963 = !DILocation(line: 2048, column: 11, scope: !3939)
!3964 = !DILocation(line: 2049, column: 19, scope: !3960)
!3965 = !DILocation(line: 2049, column: 9, scope: !3960)
!3966 = !DILocation(line: 2049, column: 7, scope: !3960)
!3967 = !DILocation(line: 2049, column: 3, scope: !3960)
!3968 = !DILocation(line: 2050, column: 12, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 2050, column: 11)
!3970 = !DILocation(line: 2050, column: 11, scope: !3960)
!3971 = !DILocation(line: 2051, column: 28, scope: !3969)
!3972 = !DILocation(line: 2051, column: 9, scope: !3969)
!3973 = !DILocation(line: 2051, column: 7, scope: !3969)
!3974 = !DILocation(line: 2051, column: 3, scope: !3969)
!3975 = !DILocation(line: 2053, column: 7, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 2053, column: 6)
!3977 = !DILocation(line: 2053, column: 6, scope: !3912)
!3978 = !DILocation(line: 2054, column: 17, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 2053, column: 12)
!3980 = !DILocation(line: 2054, column: 3, scope: !3979)
!3981 = !DILocation(line: 2055, column: 3, scope: !3979)
!3982 = !DILocation(line: 2056, column: 2, scope: !3979)
!3983 = !DILabel(scope: !3912, name: "out", file: !3, line: 2057)
!3984 = !DILocation(line: 2057, column: 1, scope: !3912)
!3985 = !DILocation(line: 2058, column: 19, scope: !3912)
!3986 = !DILocation(line: 2058, column: 2, scope: !3912)
!3987 = !DILocation(line: 2059, column: 9, scope: !3912)
!3988 = !DILocation(line: 2059, column: 2, scope: !3912)
!3989 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !3990, file: !3990, line: 524, type: !1574, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3990 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!3991 = !DILocalVariable(name: "dev", arg: 1, scope: !3989, file: !3990, line: 524, type: !67)
!3992 = !DILocation(line: 524, column: 54, scope: !3989)
!3993 = !DILocation(line: 526, column: 23, scope: !3989)
!3994 = !DILocation(line: 526, column: 2, scope: !3989)
!3995 = !DILocation(line: 527, column: 1, scope: !3989)
!3996 = distinct !DISubprogram(name: "pm_runtime_set_suspended", scope: !3990, file: !3990, line: 509, type: !1583, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!3997 = !DILocalVariable(name: "dev", arg: 1, scope: !3996, file: !3990, line: 509, type: !67)
!3998 = !DILocation(line: 509, column: 59, scope: !3996)
!3999 = !DILocation(line: 511, column: 33, scope: !3996)
!4000 = !DILocation(line: 511, column: 9, scope: !3996)
!4001 = !DILocation(line: 511, column: 2, scope: !3996)
!4002 = distinct !DISubprogram(name: "mmc_can_poweroff_notify", scope: !3, file: !3, line: 1957, type: !4003, scopeLine: 1958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!119, !4005}
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!4007 = !DILocalVariable(name: "card", arg: 1, scope: !4002, file: !3, line: 1957, type: !4005)
!4008 = !DILocation(line: 1957, column: 59, scope: !4002)
!4009 = !DILocation(line: 1959, column: 9, scope: !4002)
!4010 = !DILocation(line: 1959, column: 14, scope: !4002)
!4011 = !DILocation(line: 1960, column: 3, scope: !4002)
!4012 = !DILocation(line: 1960, column: 22, scope: !4002)
!4013 = !DILocation(line: 1961, column: 4, scope: !4002)
!4014 = !DILocation(line: 1961, column: 10, scope: !4002)
!4015 = !DILocation(line: 1961, column: 18, scope: !4002)
!4016 = !DILocation(line: 1961, column: 41, scope: !4002)
!4017 = !DILocation(line: 0, scope: !4002)
!4018 = !DILocation(line: 1959, column: 2, scope: !4002)
!4019 = distinct !DISubprogram(name: "mmc_poweroff_notify", scope: !3, file: !3, line: 1964, type: !4020, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!119, !57, !7}
!4022 = !DILocalVariable(name: "card", arg: 1, scope: !4019, file: !3, line: 1964, type: !57)
!4023 = !DILocation(line: 1964, column: 49, scope: !4019)
!4024 = !DILocalVariable(name: "notify_type", arg: 2, scope: !4019, file: !3, line: 1964, type: !7)
!4025 = !DILocation(line: 1964, column: 68, scope: !4019)
!4026 = !DILocalVariable(name: "timeout", scope: !4019, file: !3, line: 1966, type: !7)
!4027 = !DILocation(line: 1966, column: 15, scope: !4019)
!4028 = !DILocation(line: 1966, column: 25, scope: !4019)
!4029 = !DILocation(line: 1966, column: 31, scope: !4019)
!4030 = !DILocation(line: 1966, column: 39, scope: !4019)
!4031 = !DILocalVariable(name: "err", scope: !4019, file: !3, line: 1967, type: !119)
!4032 = !DILocation(line: 1967, column: 6, scope: !4019)
!4033 = !DILocation(line: 1970, column: 6, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1970, column: 6)
!4035 = !DILocation(line: 1970, column: 18, scope: !4034)
!4036 = !DILocation(line: 1970, column: 6, scope: !4019)
!4037 = !DILocation(line: 1971, column: 13, scope: !4034)
!4038 = !DILocation(line: 1971, column: 19, scope: !4034)
!4039 = !DILocation(line: 1971, column: 27, scope: !4034)
!4040 = !DILocation(line: 1971, column: 11, scope: !4034)
!4041 = !DILocation(line: 1971, column: 3, scope: !4034)
!4042 = !DILocation(line: 1973, column: 21, scope: !4019)
!4043 = !DILocation(line: 1975, column: 4, scope: !4019)
!4044 = !DILocation(line: 1975, column: 17, scope: !4019)
!4045 = !DILocation(line: 1973, column: 8, scope: !4019)
!4046 = !DILocation(line: 1973, column: 6, scope: !4019)
!4047 = !DILocation(line: 1976, column: 6, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1976, column: 6)
!4049 = !DILocation(line: 1976, column: 6, scope: !4019)
!4050 = !DILocation(line: 1977, column: 3, scope: !4048)
!4051 = !DILocation(line: 1981, column: 2, scope: !4019)
!4052 = !DILocation(line: 1981, column: 8, scope: !4019)
!4053 = !DILocation(line: 1981, column: 16, scope: !4019)
!4054 = !DILocation(line: 1981, column: 39, scope: !4019)
!4055 = !DILocation(line: 1983, column: 9, scope: !4019)
!4056 = !DILocation(line: 1983, column: 2, scope: !4019)
!4057 = distinct !DISubprogram(name: "mmc_can_sleep", scope: !3, file: !3, line: 1900, type: !2642, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4058 = !DILocalVariable(name: "card", arg: 1, scope: !4057, file: !3, line: 1900, type: !57)
!4059 = !DILocation(line: 1900, column: 43, scope: !4057)
!4060 = !DILocation(line: 1902, column: 10, scope: !4057)
!4061 = !DILocation(line: 1902, column: 15, scope: !4057)
!4062 = !DILocation(line: 1902, column: 18, scope: !4057)
!4063 = !DILocation(line: 1902, column: 24, scope: !4057)
!4064 = !DILocation(line: 1902, column: 32, scope: !4057)
!4065 = !DILocation(line: 1902, column: 36, scope: !4057)
!4066 = !DILocation(line: 0, scope: !4057)
!4067 = !DILocation(line: 1902, column: 2, scope: !4057)
!4068 = distinct !DISubprogram(name: "mmc_sleep", scope: !3, file: !3, line: 1905, type: !2117, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4069 = !DILocalVariable(name: "host", arg: 1, scope: !4068, file: !3, line: 1905, type: !62)
!4070 = !DILocation(line: 1905, column: 39, scope: !4068)
!4071 = !DILocalVariable(name: "cmd", scope: !4068, file: !3, line: 1907, type: !2044)
!4072 = !DILocation(line: 1907, column: 21, scope: !4068)
!4073 = !DILocalVariable(name: "card", scope: !4068, file: !3, line: 1908, type: !57)
!4074 = !DILocation(line: 1908, column: 19, scope: !4068)
!4075 = !DILocation(line: 1908, column: 26, scope: !4068)
!4076 = !DILocation(line: 1908, column: 32, scope: !4068)
!4077 = !DILocalVariable(name: "timeout_ms", scope: !4068, file: !3, line: 1909, type: !7)
!4078 = !DILocation(line: 1909, column: 15, scope: !4068)
!4079 = !DILocation(line: 1909, column: 28, scope: !4068)
!4080 = !DILocalVariable(name: "err", scope: !4068, file: !3, line: 1910, type: !119)
!4081 = !DILocation(line: 1910, column: 6, scope: !4068)
!4082 = !DILocation(line: 1913, column: 18, scope: !4068)
!4083 = !DILocation(line: 1913, column: 2, scope: !4068)
!4084 = !DILocation(line: 1915, column: 27, scope: !4068)
!4085 = !DILocation(line: 1915, column: 8, scope: !4068)
!4086 = !DILocation(line: 1915, column: 6, scope: !4068)
!4087 = !DILocation(line: 1916, column: 6, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1916, column: 6)
!4089 = !DILocation(line: 1916, column: 6, scope: !4068)
!4090 = !DILocation(line: 1917, column: 3, scope: !4088)
!4091 = !DILocation(line: 1919, column: 6, scope: !4068)
!4092 = !DILocation(line: 1919, column: 13, scope: !4068)
!4093 = !DILocation(line: 1920, column: 12, scope: !4068)
!4094 = !DILocation(line: 1920, column: 18, scope: !4068)
!4095 = !DILocation(line: 1920, column: 22, scope: !4068)
!4096 = !DILocation(line: 1920, column: 6, scope: !4068)
!4097 = !DILocation(line: 1920, column: 10, scope: !4068)
!4098 = !DILocation(line: 1921, column: 6, scope: !4068)
!4099 = !DILocation(line: 1921, column: 10, scope: !4068)
!4100 = !DILocation(line: 1931, column: 8, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1931, column: 6)
!4102 = !DILocation(line: 1931, column: 14, scope: !4101)
!4103 = !DILocation(line: 1931, column: 19, scope: !4101)
!4104 = !DILocation(line: 1931, column: 44, scope: !4101)
!4105 = !DILocation(line: 1931, column: 47, scope: !4101)
!4106 = !DILocation(line: 1931, column: 53, scope: !4101)
!4107 = !DILocation(line: 1931, column: 70, scope: !4101)
!4108 = !DILocation(line: 1932, column: 7, scope: !4101)
!4109 = !DILocation(line: 1932, column: 20, scope: !4101)
!4110 = !DILocation(line: 1932, column: 26, scope: !4101)
!4111 = !DILocation(line: 1932, column: 18, scope: !4101)
!4112 = !DILocation(line: 1931, column: 6, scope: !4068)
!4113 = !DILocation(line: 1933, column: 7, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1932, column: 45)
!4115 = !DILocation(line: 1933, column: 13, scope: !4114)
!4116 = !DILocation(line: 1934, column: 2, scope: !4114)
!4117 = !DILocation(line: 1935, column: 7, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4101, file: !3, line: 1934, column: 9)
!4119 = !DILocation(line: 1935, column: 13, scope: !4118)
!4120 = !DILocation(line: 1936, column: 22, scope: !4118)
!4121 = !DILocation(line: 1936, column: 7, scope: !4118)
!4122 = !DILocation(line: 1936, column: 20, scope: !4118)
!4123 = !DILocation(line: 1939, column: 25, scope: !4068)
!4124 = !DILocation(line: 1939, column: 8, scope: !4068)
!4125 = !DILocation(line: 1939, column: 6, scope: !4068)
!4126 = !DILocation(line: 1940, column: 6, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1940, column: 6)
!4128 = !DILocation(line: 1940, column: 6, scope: !4068)
!4129 = !DILocation(line: 1941, column: 3, scope: !4127)
!4130 = !DILocation(line: 1949, column: 11, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1949, column: 6)
!4132 = !DILocation(line: 1949, column: 7, scope: !4131)
!4133 = !DILocation(line: 1949, column: 24, scope: !4131)
!4134 = !DILocation(line: 1949, column: 29, scope: !4131)
!4135 = !DILocation(line: 1949, column: 35, scope: !4131)
!4136 = !DILocation(line: 1949, column: 40, scope: !4131)
!4137 = !DILocation(line: 1949, column: 6, scope: !4068)
!4138 = !DILocation(line: 1950, column: 13, scope: !4131)
!4139 = !DILocation(line: 1950, column: 3, scope: !4131)
!4140 = !DILocation(line: 1949, column: 65, scope: !4131)
!4141 = !DILabel(scope: !4068, name: "out_release", file: !3, line: 1952)
!4142 = !DILocation(line: 1952, column: 1, scope: !4068)
!4143 = !DILocation(line: 1953, column: 21, scope: !4068)
!4144 = !DILocation(line: 1953, column: 2, scope: !4068)
!4145 = !DILocation(line: 1954, column: 9, scope: !4068)
!4146 = !DILocation(line: 1954, column: 2, scope: !4068)
!4147 = distinct !DISubprogram(name: "mmc_delay", scope: !2258, file: !2258, line: 61, type: !4148, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{null, !7}
!4150 = !DILocalVariable(name: "ms", arg: 1, scope: !4147, file: !2258, line: 61, type: !7)
!4151 = !DILocation(line: 61, column: 43, scope: !4147)
!4152 = !DILocation(line: 63, column: 6, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4147, file: !2258, line: 63, column: 6)
!4154 = !DILocation(line: 63, column: 9, scope: !4153)
!4155 = !DILocation(line: 63, column: 6, scope: !4147)
!4156 = !DILocation(line: 64, column: 16, scope: !4153)
!4157 = !DILocation(line: 64, column: 19, scope: !4153)
!4158 = !DILocation(line: 64, column: 27, scope: !4153)
!4159 = !DILocation(line: 64, column: 30, scope: !4153)
!4160 = !DILocation(line: 64, column: 3, scope: !4153)
!4161 = !DILocation(line: 66, column: 10, scope: !4153)
!4162 = !DILocation(line: 66, column: 3, scope: !4153)
!4163 = !DILocation(line: 67, column: 1, scope: !4147)
!4164 = distinct !DISubprogram(name: "_mmc_resume", scope: !3, file: !3, line: 2082, type: !2117, scopeLine: 2083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4165 = !DILocalVariable(name: "host", arg: 1, scope: !4164, file: !3, line: 2082, type: !62)
!4166 = !DILocation(line: 2082, column: 41, scope: !4164)
!4167 = !DILocalVariable(name: "err", scope: !4164, file: !3, line: 2084, type: !119)
!4168 = !DILocation(line: 2084, column: 6, scope: !4164)
!4169 = !DILocation(line: 2086, column: 17, scope: !4164)
!4170 = !DILocation(line: 2086, column: 2, scope: !4164)
!4171 = !DILocation(line: 2088, column: 7, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 2088, column: 6)
!4173 = !DILocation(line: 2088, column: 6, scope: !4164)
!4174 = !DILocation(line: 2089, column: 3, scope: !4172)
!4175 = !DILocation(line: 2091, column: 15, scope: !4164)
!4176 = !DILocation(line: 2091, column: 21, scope: !4164)
!4177 = !DILocation(line: 2091, column: 27, scope: !4164)
!4178 = !DILocation(line: 2091, column: 33, scope: !4164)
!4179 = !DILocation(line: 2091, column: 2, scope: !4164)
!4180 = !DILocation(line: 2092, column: 22, scope: !4164)
!4181 = !DILocation(line: 2092, column: 28, scope: !4164)
!4182 = !DILocation(line: 2092, column: 34, scope: !4164)
!4183 = !DILocation(line: 2092, column: 40, scope: !4164)
!4184 = !DILocation(line: 2092, column: 45, scope: !4164)
!4185 = !DILocation(line: 2092, column: 51, scope: !4164)
!4186 = !DILocation(line: 2092, column: 8, scope: !4164)
!4187 = !DILocation(line: 2092, column: 6, scope: !4164)
!4188 = !DILocation(line: 2093, column: 2, scope: !4164)
!4189 = !DILabel(scope: !4164, name: "out", file: !3, line: 2095)
!4190 = !DILocation(line: 2095, column: 1, scope: !4164)
!4191 = !DILocation(line: 2096, column: 19, scope: !4164)
!4192 = !DILocation(line: 2096, column: 2, scope: !4164)
!4193 = !DILocation(line: 2097, column: 9, scope: !4164)
!4194 = !DILocation(line: 2097, column: 2, scope: !4164)
!4195 = distinct !DISubprogram(name: "mmc_can_reset", scope: !3, file: !3, line: 2163, type: !2642, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4196 = !DILocalVariable(name: "card", arg: 1, scope: !4195, file: !3, line: 2163, type: !57)
!4197 = !DILocation(line: 2163, column: 43, scope: !4195)
!4198 = !DILocalVariable(name: "rst_n_function", scope: !4195, file: !3, line: 2165, type: !529)
!4199 = !DILocation(line: 2165, column: 5, scope: !4195)
!4200 = !DILocation(line: 2167, column: 19, scope: !4195)
!4201 = !DILocation(line: 2167, column: 25, scope: !4195)
!4202 = !DILocation(line: 2167, column: 33, scope: !4195)
!4203 = !DILocation(line: 2167, column: 17, scope: !4195)
!4204 = !DILocation(line: 2168, column: 7, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 2168, column: 6)
!4206 = !DILocation(line: 2168, column: 22, scope: !4205)
!4207 = !DILocation(line: 2168, column: 47, scope: !4205)
!4208 = !DILocation(line: 2168, column: 6, scope: !4195)
!4209 = !DILocation(line: 2169, column: 3, scope: !4205)
!4210 = !DILocation(line: 2170, column: 2, scope: !4195)
!4211 = !DILocation(line: 2171, column: 1, scope: !4195)
!4212 = distinct !DISubprogram(name: "IS_ERR", scope: !4213, file: !4213, line: 34, type: !4214, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4213 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!962, !1353}
!4216 = !DILocalVariable(name: "ptr", arg: 1, scope: !4212, file: !4213, line: 34, type: !1353)
!4217 = !DILocation(line: 34, column: 60, scope: !4212)
!4218 = !DILocation(line: 36, column: 9, scope: !4212)
!4219 = !DILocation(line: 36, column: 2, scope: !4212)
!4220 = distinct !DISubprogram(name: "PTR_ERR", scope: !4213, file: !4213, line: 29, type: !4221, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!170, !1353}
!4223 = !DILocalVariable(name: "ptr", arg: 1, scope: !4220, file: !4213, line: 29, type: !1353)
!4224 = !DILocation(line: 29, column: 61, scope: !4220)
!4225 = !DILocation(line: 31, column: 16, scope: !4220)
!4226 = !DILocation(line: 31, column: 9, scope: !4220)
!4227 = !DILocation(line: 31, column: 2, scope: !4220)
!4228 = distinct !DISubprogram(name: "mmc_decode_csd", scope: !3, file: !3, line: 133, type: !2642, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4229 = !DILocalVariable(name: "card", arg: 1, scope: !4228, file: !3, line: 133, type: !57)
!4230 = !DILocation(line: 133, column: 44, scope: !4228)
!4231 = !DILocalVariable(name: "csd", scope: !4228, file: !3, line: 135, type: !4232)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!4233 = !DILocation(line: 135, column: 18, scope: !4228)
!4234 = !DILocation(line: 135, column: 25, scope: !4228)
!4235 = !DILocation(line: 135, column: 31, scope: !4228)
!4236 = !DILocalVariable(name: "e", scope: !4228, file: !3, line: 136, type: !7)
!4237 = !DILocation(line: 136, column: 15, scope: !4228)
!4238 = !DILocalVariable(name: "m", scope: !4228, file: !3, line: 136, type: !7)
!4239 = !DILocation(line: 136, column: 18, scope: !4228)
!4240 = !DILocalVariable(name: "a", scope: !4228, file: !3, line: 136, type: !7)
!4241 = !DILocation(line: 136, column: 21, scope: !4228)
!4242 = !DILocalVariable(name: "b", scope: !4228, file: !3, line: 136, type: !7)
!4243 = !DILocation(line: 136, column: 24, scope: !4228)
!4244 = !DILocalVariable(name: "resp", scope: !4228, file: !3, line: 137, type: !593)
!4245 = !DILocation(line: 137, column: 7, scope: !4228)
!4246 = !DILocation(line: 137, column: 14, scope: !4228)
!4247 = !DILocation(line: 137, column: 20, scope: !4228)
!4248 = !DILocalVariable(name: "__size", scope: !4249, file: !3, line: 144, type: !4250)
!4249 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 144, column: 19)
!4250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!4251 = !DILocation(line: 144, column: 19, scope: !4249)
!4252 = !DILocalVariable(name: "__mask", scope: !4249, file: !3, line: 144, type: !4253)
!4253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!4254 = !DILocalVariable(name: "__off", scope: !4249, file: !3, line: 144, type: !4250)
!4255 = !DILocalVariable(name: "__shft", scope: !4249, file: !3, line: 144, type: !4250)
!4256 = !DILocalVariable(name: "__res", scope: !4249, file: !3, line: 144, type: !392)
!4257 = !DILocation(line: 144, column: 19, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 144, column: 19)
!4259 = !DILocation(line: 144, column: 19, scope: !4228)
!4260 = !DILocation(line: 144, column: 2, scope: !4228)
!4261 = !DILocation(line: 144, column: 7, scope: !4228)
!4262 = !DILocation(line: 144, column: 17, scope: !4228)
!4263 = !DILocation(line: 145, column: 6, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 145, column: 6)
!4265 = !DILocation(line: 145, column: 11, scope: !4264)
!4266 = !DILocation(line: 145, column: 21, scope: !4264)
!4267 = !DILocation(line: 145, column: 6, scope: !4228)
!4268 = !DILocation(line: 146, column: 3, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 145, column: 27)
!4270 = !DILocation(line: 148, column: 3, scope: !4269)
!4271 = !DILocalVariable(name: "__size", scope: !4272, file: !3, line: 151, type: !4250)
!4272 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 151, column: 19)
!4273 = !DILocation(line: 151, column: 19, scope: !4272)
!4274 = !DILocalVariable(name: "__mask", scope: !4272, file: !3, line: 151, type: !4253)
!4275 = !DILocalVariable(name: "__off", scope: !4272, file: !3, line: 151, type: !4250)
!4276 = !DILocalVariable(name: "__shft", scope: !4272, file: !3, line: 151, type: !4250)
!4277 = !DILocalVariable(name: "__res", scope: !4272, file: !3, line: 151, type: !392)
!4278 = !DILocation(line: 151, column: 19, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4272, file: !3, line: 151, column: 19)
!4280 = !DILocation(line: 151, column: 19, scope: !4228)
!4281 = !DILocation(line: 151, column: 2, scope: !4228)
!4282 = !DILocation(line: 151, column: 7, scope: !4228)
!4283 = !DILocation(line: 151, column: 17, scope: !4228)
!4284 = !DILocalVariable(name: "__size", scope: !4285, file: !3, line: 152, type: !4250)
!4285 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 152, column: 6)
!4286 = !DILocation(line: 152, column: 6, scope: !4285)
!4287 = !DILocalVariable(name: "__mask", scope: !4285, file: !3, line: 152, type: !4253)
!4288 = !DILocalVariable(name: "__off", scope: !4285, file: !3, line: 152, type: !4250)
!4289 = !DILocalVariable(name: "__shft", scope: !4285, file: !3, line: 152, type: !4250)
!4290 = !DILocalVariable(name: "__res", scope: !4285, file: !3, line: 152, type: !392)
!4291 = !DILocation(line: 152, column: 6, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 152, column: 6)
!4293 = !DILocation(line: 152, column: 4, scope: !4228)
!4294 = !DILocalVariable(name: "__size", scope: !4295, file: !3, line: 153, type: !4250)
!4295 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 153, column: 6)
!4296 = !DILocation(line: 153, column: 6, scope: !4295)
!4297 = !DILocalVariable(name: "__mask", scope: !4295, file: !3, line: 153, type: !4253)
!4298 = !DILocalVariable(name: "__off", scope: !4295, file: !3, line: 153, type: !4250)
!4299 = !DILocalVariable(name: "__shft", scope: !4295, file: !3, line: 153, type: !4250)
!4300 = !DILocalVariable(name: "__res", scope: !4295, file: !3, line: 153, type: !392)
!4301 = !DILocation(line: 153, column: 6, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 153, column: 6)
!4303 = !DILocation(line: 153, column: 4, scope: !4228)
!4304 = !DILocation(line: 154, column: 28, scope: !4228)
!4305 = !DILocation(line: 154, column: 19, scope: !4228)
!4306 = !DILocation(line: 154, column: 43, scope: !4228)
!4307 = !DILocation(line: 154, column: 33, scope: !4228)
!4308 = !DILocation(line: 154, column: 31, scope: !4228)
!4309 = !DILocation(line: 154, column: 46, scope: !4228)
!4310 = !DILocation(line: 154, column: 51, scope: !4228)
!4311 = !DILocation(line: 154, column: 2, scope: !4228)
!4312 = !DILocation(line: 154, column: 7, scope: !4228)
!4313 = !DILocation(line: 154, column: 16, scope: !4228)
!4314 = !DILocalVariable(name: "__size", scope: !4315, file: !3, line: 155, type: !4250)
!4315 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 155, column: 20)
!4316 = !DILocation(line: 155, column: 20, scope: !4315)
!4317 = !DILocalVariable(name: "__mask", scope: !4315, file: !3, line: 155, type: !4253)
!4318 = !DILocalVariable(name: "__off", scope: !4315, file: !3, line: 155, type: !4250)
!4319 = !DILocalVariable(name: "__shft", scope: !4315, file: !3, line: 155, type: !4250)
!4320 = !DILocalVariable(name: "__res", scope: !4315, file: !3, line: 155, type: !392)
!4321 = !DILocation(line: 155, column: 20, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 155, column: 20)
!4323 = !DILocation(line: 155, column: 47, scope: !4228)
!4324 = !DILocation(line: 155, column: 20, scope: !4228)
!4325 = !DILocation(line: 155, column: 2, scope: !4228)
!4326 = !DILocation(line: 155, column: 7, scope: !4228)
!4327 = !DILocation(line: 155, column: 18, scope: !4228)
!4328 = !DILocalVariable(name: "__size", scope: !4329, file: !3, line: 157, type: !4250)
!4329 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 157, column: 6)
!4330 = !DILocation(line: 157, column: 6, scope: !4329)
!4331 = !DILocalVariable(name: "__mask", scope: !4329, file: !3, line: 157, type: !4253)
!4332 = !DILocalVariable(name: "__off", scope: !4329, file: !3, line: 157, type: !4250)
!4333 = !DILocalVariable(name: "__shft", scope: !4329, file: !3, line: 157, type: !4250)
!4334 = !DILocalVariable(name: "__res", scope: !4329, file: !3, line: 157, type: !392)
!4335 = !DILocation(line: 157, column: 6, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 157, column: 6)
!4337 = !DILocation(line: 157, column: 4, scope: !4228)
!4338 = !DILocalVariable(name: "__size", scope: !4339, file: !3, line: 158, type: !4250)
!4339 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 158, column: 6)
!4340 = !DILocation(line: 158, column: 6, scope: !4339)
!4341 = !DILocalVariable(name: "__mask", scope: !4339, file: !3, line: 158, type: !4253)
!4342 = !DILocalVariable(name: "__off", scope: !4339, file: !3, line: 158, type: !4250)
!4343 = !DILocalVariable(name: "__shft", scope: !4339, file: !3, line: 158, type: !4250)
!4344 = !DILocalVariable(name: "__res", scope: !4339, file: !3, line: 158, type: !392)
!4345 = !DILocation(line: 158, column: 6, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 158, column: 6)
!4347 = !DILocation(line: 158, column: 4, scope: !4228)
!4348 = !DILocation(line: 159, column: 28, scope: !4228)
!4349 = !DILocation(line: 159, column: 19, scope: !4228)
!4350 = !DILocation(line: 159, column: 43, scope: !4228)
!4351 = !DILocation(line: 159, column: 33, scope: !4228)
!4352 = !DILocation(line: 159, column: 31, scope: !4228)
!4353 = !DILocation(line: 159, column: 2, scope: !4228)
!4354 = !DILocation(line: 159, column: 7, scope: !4228)
!4355 = !DILocation(line: 159, column: 17, scope: !4228)
!4356 = !DILocalVariable(name: "__size", scope: !4357, file: !3, line: 160, type: !4250)
!4357 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 160, column: 20)
!4358 = !DILocation(line: 160, column: 20, scope: !4357)
!4359 = !DILocalVariable(name: "__mask", scope: !4357, file: !3, line: 160, type: !4253)
!4360 = !DILocalVariable(name: "__off", scope: !4357, file: !3, line: 160, type: !4250)
!4361 = !DILocalVariable(name: "__shft", scope: !4357, file: !3, line: 160, type: !4250)
!4362 = !DILocalVariable(name: "__res", scope: !4357, file: !3, line: 160, type: !392)
!4363 = !DILocation(line: 160, column: 20, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 160, column: 20)
!4365 = !DILocation(line: 160, column: 20, scope: !4228)
!4366 = !DILocation(line: 160, column: 2, scope: !4228)
!4367 = !DILocation(line: 160, column: 7, scope: !4228)
!4368 = !DILocation(line: 160, column: 18, scope: !4228)
!4369 = !DILocalVariable(name: "__size", scope: !4370, file: !3, line: 162, type: !4250)
!4370 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 162, column: 6)
!4371 = !DILocation(line: 162, column: 6, scope: !4370)
!4372 = !DILocalVariable(name: "__mask", scope: !4370, file: !3, line: 162, type: !4253)
!4373 = !DILocalVariable(name: "__off", scope: !4370, file: !3, line: 162, type: !4250)
!4374 = !DILocalVariable(name: "__shft", scope: !4370, file: !3, line: 162, type: !4250)
!4375 = !DILocalVariable(name: "__res", scope: !4370, file: !3, line: 162, type: !392)
!4376 = !DILocation(line: 162, column: 6, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 162, column: 6)
!4378 = !DILocation(line: 162, column: 4, scope: !4228)
!4379 = !DILocalVariable(name: "__size", scope: !4380, file: !3, line: 163, type: !4250)
!4380 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 163, column: 6)
!4381 = !DILocation(line: 163, column: 6, scope: !4380)
!4382 = !DILocalVariable(name: "__mask", scope: !4380, file: !3, line: 163, type: !4253)
!4383 = !DILocalVariable(name: "__off", scope: !4380, file: !3, line: 163, type: !4250)
!4384 = !DILocalVariable(name: "__shft", scope: !4380, file: !3, line: 163, type: !4250)
!4385 = !DILocalVariable(name: "__res", scope: !4380, file: !3, line: 163, type: !392)
!4386 = !DILocation(line: 163, column: 6, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 163, column: 6)
!4388 = !DILocation(line: 163, column: 4, scope: !4228)
!4389 = !DILocation(line: 164, column: 25, scope: !4228)
!4390 = !DILocation(line: 164, column: 23, scope: !4228)
!4391 = !DILocation(line: 164, column: 32, scope: !4228)
!4392 = !DILocation(line: 164, column: 34, scope: !4228)
!4393 = !DILocation(line: 164, column: 28, scope: !4228)
!4394 = !DILocation(line: 164, column: 2, scope: !4228)
!4395 = !DILocation(line: 164, column: 7, scope: !4228)
!4396 = !DILocation(line: 164, column: 18, scope: !4228)
!4397 = !DILocalVariable(name: "__size", scope: !4398, file: !3, line: 166, type: !4250)
!4398 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 166, column: 22)
!4399 = !DILocation(line: 166, column: 22, scope: !4398)
!4400 = !DILocalVariable(name: "__mask", scope: !4398, file: !3, line: 166, type: !4253)
!4401 = !DILocalVariable(name: "__off", scope: !4398, file: !3, line: 166, type: !4250)
!4402 = !DILocalVariable(name: "__shft", scope: !4398, file: !3, line: 166, type: !4250)
!4403 = !DILocalVariable(name: "__res", scope: !4398, file: !3, line: 166, type: !392)
!4404 = !DILocation(line: 166, column: 22, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 166, column: 22)
!4406 = !DILocation(line: 166, column: 2, scope: !4228)
!4407 = !DILocation(line: 166, column: 7, scope: !4228)
!4408 = !DILocation(line: 166, column: 20, scope: !4228)
!4409 = !DILocalVariable(name: "__size", scope: !4410, file: !3, line: 167, type: !4250)
!4410 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 167, column: 22)
!4411 = !DILocation(line: 167, column: 22, scope: !4410)
!4412 = !DILocalVariable(name: "__mask", scope: !4410, file: !3, line: 167, type: !4253)
!4413 = !DILocalVariable(name: "__off", scope: !4410, file: !3, line: 167, type: !4250)
!4414 = !DILocalVariable(name: "__shft", scope: !4410, file: !3, line: 167, type: !4250)
!4415 = !DILocalVariable(name: "__res", scope: !4410, file: !3, line: 167, type: !392)
!4416 = !DILocation(line: 167, column: 22, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 167, column: 22)
!4418 = !DILocation(line: 167, column: 2, scope: !4228)
!4419 = !DILocation(line: 167, column: 7, scope: !4228)
!4420 = !DILocation(line: 167, column: 20, scope: !4228)
!4421 = !DILocalVariable(name: "__size", scope: !4422, file: !3, line: 168, type: !4250)
!4422 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 168, column: 24)
!4423 = !DILocation(line: 168, column: 24, scope: !4422)
!4424 = !DILocalVariable(name: "__mask", scope: !4422, file: !3, line: 168, type: !4253)
!4425 = !DILocalVariable(name: "__off", scope: !4422, file: !3, line: 168, type: !4250)
!4426 = !DILocalVariable(name: "__shft", scope: !4422, file: !3, line: 168, type: !4250)
!4427 = !DILocalVariable(name: "__res", scope: !4422, file: !3, line: 168, type: !392)
!4428 = !DILocation(line: 168, column: 24, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 168, column: 24)
!4430 = !DILocation(line: 168, column: 2, scope: !4228)
!4431 = !DILocation(line: 168, column: 7, scope: !4228)
!4432 = !DILocation(line: 168, column: 22, scope: !4228)
!4433 = !DILocalVariable(name: "__size", scope: !4434, file: !3, line: 169, type: !4250)
!4434 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 169, column: 23)
!4435 = !DILocation(line: 169, column: 23, scope: !4434)
!4436 = !DILocalVariable(name: "__mask", scope: !4434, file: !3, line: 169, type: !4253)
!4437 = !DILocalVariable(name: "__off", scope: !4434, file: !3, line: 169, type: !4250)
!4438 = !DILocalVariable(name: "__shft", scope: !4434, file: !3, line: 169, type: !4250)
!4439 = !DILocalVariable(name: "__res", scope: !4434, file: !3, line: 169, type: !392)
!4440 = !DILocation(line: 169, column: 23, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 169, column: 23)
!4442 = !DILocation(line: 169, column: 2, scope: !4228)
!4443 = !DILocation(line: 169, column: 7, scope: !4228)
!4444 = !DILocation(line: 169, column: 21, scope: !4228)
!4445 = !DILocalVariable(name: "__size", scope: !4446, file: !3, line: 170, type: !4250)
!4446 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 170, column: 17)
!4447 = !DILocation(line: 170, column: 17, scope: !4446)
!4448 = !DILocalVariable(name: "__mask", scope: !4446, file: !3, line: 170, type: !4253)
!4449 = !DILocalVariable(name: "__off", scope: !4446, file: !3, line: 170, type: !4250)
!4450 = !DILocalVariable(name: "__shft", scope: !4446, file: !3, line: 170, type: !4250)
!4451 = !DILocalVariable(name: "__res", scope: !4446, file: !3, line: 170, type: !392)
!4452 = !DILocation(line: 170, column: 17, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 170, column: 17)
!4454 = !DILocation(line: 170, column: 2, scope: !4228)
!4455 = !DILocation(line: 170, column: 7, scope: !4228)
!4456 = !DILocation(line: 170, column: 15, scope: !4228)
!4457 = !DILocalVariable(name: "__size", scope: !4458, file: !3, line: 171, type: !4250)
!4458 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 171, column: 20)
!4459 = !DILocation(line: 171, column: 20, scope: !4458)
!4460 = !DILocalVariable(name: "__mask", scope: !4458, file: !3, line: 171, type: !4253)
!4461 = !DILocalVariable(name: "__off", scope: !4458, file: !3, line: 171, type: !4250)
!4462 = !DILocalVariable(name: "__shft", scope: !4458, file: !3, line: 171, type: !4250)
!4463 = !DILocalVariable(name: "__res", scope: !4458, file: !3, line: 171, type: !392)
!4464 = !DILocation(line: 171, column: 20, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 171, column: 20)
!4466 = !DILocation(line: 171, column: 2, scope: !4228)
!4467 = !DILocation(line: 171, column: 7, scope: !4228)
!4468 = !DILocation(line: 171, column: 18, scope: !4228)
!4469 = !DILocalVariable(name: "__size", scope: !4470, file: !3, line: 172, type: !4250)
!4470 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 172, column: 23)
!4471 = !DILocation(line: 172, column: 23, scope: !4470)
!4472 = !DILocalVariable(name: "__mask", scope: !4470, file: !3, line: 172, type: !4253)
!4473 = !DILocalVariable(name: "__off", scope: !4470, file: !3, line: 172, type: !4250)
!4474 = !DILocalVariable(name: "__shft", scope: !4470, file: !3, line: 172, type: !4250)
!4475 = !DILocalVariable(name: "__res", scope: !4470, file: !3, line: 172, type: !392)
!4476 = !DILocation(line: 172, column: 23, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 172, column: 23)
!4478 = !DILocation(line: 172, column: 2, scope: !4228)
!4479 = !DILocation(line: 172, column: 7, scope: !4228)
!4480 = !DILocation(line: 172, column: 21, scope: !4228)
!4481 = !DILocalVariable(name: "__size", scope: !4482, file: !3, line: 173, type: !4250)
!4482 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 173, column: 23)
!4483 = !DILocation(line: 173, column: 23, scope: !4482)
!4484 = !DILocalVariable(name: "__mask", scope: !4482, file: !3, line: 173, type: !4253)
!4485 = !DILocalVariable(name: "__off", scope: !4482, file: !3, line: 173, type: !4250)
!4486 = !DILocalVariable(name: "__shft", scope: !4482, file: !3, line: 173, type: !4250)
!4487 = !DILocalVariable(name: "__res", scope: !4482, file: !3, line: 173, type: !392)
!4488 = !DILocation(line: 173, column: 23, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 173, column: 23)
!4490 = !DILocation(line: 173, column: 2, scope: !4228)
!4491 = !DILocation(line: 173, column: 7, scope: !4228)
!4492 = !DILocation(line: 173, column: 21, scope: !4228)
!4493 = !DILocation(line: 175, column: 6, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 175, column: 6)
!4495 = !DILocation(line: 175, column: 11, scope: !4494)
!4496 = !DILocation(line: 175, column: 25, scope: !4494)
!4497 = !DILocation(line: 175, column: 6, scope: !4228)
!4498 = !DILocalVariable(name: "__size", scope: !4499, file: !3, line: 176, type: !4250)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 176, column: 7)
!4500 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 175, column: 31)
!4501 = !DILocation(line: 176, column: 7, scope: !4499)
!4502 = !DILocalVariable(name: "__mask", scope: !4499, file: !3, line: 176, type: !4253)
!4503 = !DILocalVariable(name: "__off", scope: !4499, file: !3, line: 176, type: !4250)
!4504 = !DILocalVariable(name: "__shft", scope: !4499, file: !3, line: 176, type: !4250)
!4505 = !DILocalVariable(name: "__res", scope: !4499, file: !3, line: 176, type: !392)
!4506 = !DILocation(line: 176, column: 7, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 176, column: 7)
!4508 = !DILocation(line: 176, column: 5, scope: !4500)
!4509 = !DILocalVariable(name: "__size", scope: !4510, file: !3, line: 177, type: !4250)
!4510 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 177, column: 7)
!4511 = !DILocation(line: 177, column: 7, scope: !4510)
!4512 = !DILocalVariable(name: "__mask", scope: !4510, file: !3, line: 177, type: !4253)
!4513 = !DILocalVariable(name: "__off", scope: !4510, file: !3, line: 177, type: !4250)
!4514 = !DILocalVariable(name: "__shft", scope: !4510, file: !3, line: 177, type: !4250)
!4515 = !DILocalVariable(name: "__res", scope: !4510, file: !3, line: 177, type: !392)
!4516 = !DILocation(line: 177, column: 7, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4510, file: !3, line: 177, column: 7)
!4518 = !DILocation(line: 177, column: 5, scope: !4500)
!4519 = !DILocation(line: 178, column: 22, scope: !4500)
!4520 = !DILocation(line: 178, column: 24, scope: !4500)
!4521 = !DILocation(line: 178, column: 32, scope: !4500)
!4522 = !DILocation(line: 178, column: 34, scope: !4500)
!4523 = !DILocation(line: 178, column: 29, scope: !4500)
!4524 = !DILocation(line: 178, column: 3, scope: !4500)
!4525 = !DILocation(line: 178, column: 8, scope: !4500)
!4526 = !DILocation(line: 178, column: 19, scope: !4500)
!4527 = !DILocation(line: 179, column: 23, scope: !4500)
!4528 = !DILocation(line: 179, column: 28, scope: !4500)
!4529 = !DILocation(line: 179, column: 42, scope: !4500)
!4530 = !DILocation(line: 179, column: 3, scope: !4500)
!4531 = !DILocation(line: 179, column: 8, scope: !4500)
!4532 = !DILocation(line: 179, column: 19, scope: !4500)
!4533 = !DILocation(line: 180, column: 2, scope: !4500)
!4534 = !DILocation(line: 182, column: 2, scope: !4228)
!4535 = !DILocation(line: 183, column: 1, scope: !4228)
!4536 = distinct !DISubprogram(name: "mmc_decode_cid", scope: !3, file: !3, line: 68, type: !2642, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4537 = !DILocalVariable(name: "card", arg: 1, scope: !4536, file: !3, line: 68, type: !57)
!4538 = !DILocation(line: 68, column: 44, scope: !4536)
!4539 = !DILocalVariable(name: "resp", scope: !4536, file: !3, line: 70, type: !593)
!4540 = !DILocation(line: 70, column: 7, scope: !4536)
!4541 = !DILocation(line: 70, column: 14, scope: !4536)
!4542 = !DILocation(line: 70, column: 20, scope: !4536)
!4543 = !DILocation(line: 76, column: 10, scope: !4536)
!4544 = !DILocation(line: 76, column: 16, scope: !4536)
!4545 = !DILocation(line: 76, column: 20, scope: !4536)
!4546 = !DILocation(line: 76, column: 2, scope: !4536)
!4547 = !DILocalVariable(name: "__size", scope: !4548, file: !3, line: 79, type: !4250)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 79, column: 22)
!4549 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 76, column: 30)
!4550 = !DILocation(line: 79, column: 22, scope: !4548)
!4551 = !DILocalVariable(name: "__mask", scope: !4548, file: !3, line: 79, type: !4253)
!4552 = !DILocalVariable(name: "__off", scope: !4548, file: !3, line: 79, type: !4250)
!4553 = !DILocalVariable(name: "__shft", scope: !4548, file: !3, line: 79, type: !4250)
!4554 = !DILocalVariable(name: "__res", scope: !4548, file: !3, line: 79, type: !392)
!4555 = !DILocation(line: 79, column: 22, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 79, column: 22)
!4557 = !DILocation(line: 79, column: 3, scope: !4549)
!4558 = !DILocation(line: 79, column: 9, scope: !4549)
!4559 = !DILocation(line: 79, column: 13, scope: !4549)
!4560 = !DILocation(line: 79, column: 20, scope: !4549)
!4561 = !DILocalVariable(name: "__size", scope: !4562, file: !3, line: 80, type: !4250)
!4562 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 80, column: 28)
!4563 = !DILocation(line: 80, column: 28, scope: !4562)
!4564 = !DILocalVariable(name: "__mask", scope: !4562, file: !3, line: 80, type: !4253)
!4565 = !DILocalVariable(name: "__off", scope: !4562, file: !3, line: 80, type: !4250)
!4566 = !DILocalVariable(name: "__shft", scope: !4562, file: !3, line: 80, type: !4250)
!4567 = !DILocalVariable(name: "__res", scope: !4562, file: !3, line: 80, type: !392)
!4568 = !DILocation(line: 80, column: 28, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 80, column: 28)
!4570 = !DILocation(line: 80, column: 28, scope: !4549)
!4571 = !DILocation(line: 80, column: 3, scope: !4549)
!4572 = !DILocation(line: 80, column: 9, scope: !4549)
!4573 = !DILocation(line: 80, column: 13, scope: !4549)
!4574 = !DILocation(line: 80, column: 26, scope: !4549)
!4575 = !DILocalVariable(name: "__size", scope: !4576, file: !3, line: 81, type: !4250)
!4576 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 81, column: 28)
!4577 = !DILocation(line: 81, column: 28, scope: !4576)
!4578 = !DILocalVariable(name: "__mask", scope: !4576, file: !3, line: 81, type: !4253)
!4579 = !DILocalVariable(name: "__off", scope: !4576, file: !3, line: 81, type: !4250)
!4580 = !DILocalVariable(name: "__shft", scope: !4576, file: !3, line: 81, type: !4250)
!4581 = !DILocalVariable(name: "__res", scope: !4576, file: !3, line: 81, type: !392)
!4582 = !DILocation(line: 81, column: 28, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 81, column: 28)
!4584 = !DILocation(line: 81, column: 28, scope: !4549)
!4585 = !DILocation(line: 81, column: 3, scope: !4549)
!4586 = !DILocation(line: 81, column: 9, scope: !4549)
!4587 = !DILocation(line: 81, column: 13, scope: !4549)
!4588 = !DILocation(line: 81, column: 26, scope: !4549)
!4589 = !DILocalVariable(name: "__size", scope: !4590, file: !3, line: 82, type: !4250)
!4590 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 82, column: 28)
!4591 = !DILocation(line: 82, column: 28, scope: !4590)
!4592 = !DILocalVariable(name: "__mask", scope: !4590, file: !3, line: 82, type: !4253)
!4593 = !DILocalVariable(name: "__off", scope: !4590, file: !3, line: 82, type: !4250)
!4594 = !DILocalVariable(name: "__shft", scope: !4590, file: !3, line: 82, type: !4250)
!4595 = !DILocalVariable(name: "__res", scope: !4590, file: !3, line: 82, type: !392)
!4596 = !DILocation(line: 82, column: 28, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 82, column: 28)
!4598 = !DILocation(line: 82, column: 28, scope: !4549)
!4599 = !DILocation(line: 82, column: 3, scope: !4549)
!4600 = !DILocation(line: 82, column: 9, scope: !4549)
!4601 = !DILocation(line: 82, column: 13, scope: !4549)
!4602 = !DILocation(line: 82, column: 26, scope: !4549)
!4603 = !DILocalVariable(name: "__size", scope: !4604, file: !3, line: 83, type: !4250)
!4604 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 83, column: 28)
!4605 = !DILocation(line: 83, column: 28, scope: !4604)
!4606 = !DILocalVariable(name: "__mask", scope: !4604, file: !3, line: 83, type: !4253)
!4607 = !DILocalVariable(name: "__off", scope: !4604, file: !3, line: 83, type: !4250)
!4608 = !DILocalVariable(name: "__shft", scope: !4604, file: !3, line: 83, type: !4250)
!4609 = !DILocalVariable(name: "__res", scope: !4604, file: !3, line: 83, type: !392)
!4610 = !DILocation(line: 83, column: 28, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 83, column: 28)
!4612 = !DILocation(line: 83, column: 28, scope: !4549)
!4613 = !DILocation(line: 83, column: 3, scope: !4549)
!4614 = !DILocation(line: 83, column: 9, scope: !4549)
!4615 = !DILocation(line: 83, column: 13, scope: !4549)
!4616 = !DILocation(line: 83, column: 26, scope: !4549)
!4617 = !DILocalVariable(name: "__size", scope: !4618, file: !3, line: 84, type: !4250)
!4618 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 84, column: 28)
!4619 = !DILocation(line: 84, column: 28, scope: !4618)
!4620 = !DILocalVariable(name: "__mask", scope: !4618, file: !3, line: 84, type: !4253)
!4621 = !DILocalVariable(name: "__off", scope: !4618, file: !3, line: 84, type: !4250)
!4622 = !DILocalVariable(name: "__shft", scope: !4618, file: !3, line: 84, type: !4250)
!4623 = !DILocalVariable(name: "__res", scope: !4618, file: !3, line: 84, type: !392)
!4624 = !DILocation(line: 84, column: 28, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 84, column: 28)
!4626 = !DILocation(line: 84, column: 28, scope: !4549)
!4627 = !DILocation(line: 84, column: 3, scope: !4549)
!4628 = !DILocation(line: 84, column: 9, scope: !4549)
!4629 = !DILocation(line: 84, column: 13, scope: !4549)
!4630 = !DILocation(line: 84, column: 26, scope: !4549)
!4631 = !DILocalVariable(name: "__size", scope: !4632, file: !3, line: 85, type: !4250)
!4632 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 85, column: 28)
!4633 = !DILocation(line: 85, column: 28, scope: !4632)
!4634 = !DILocalVariable(name: "__mask", scope: !4632, file: !3, line: 85, type: !4253)
!4635 = !DILocalVariable(name: "__off", scope: !4632, file: !3, line: 85, type: !4250)
!4636 = !DILocalVariable(name: "__shft", scope: !4632, file: !3, line: 85, type: !4250)
!4637 = !DILocalVariable(name: "__res", scope: !4632, file: !3, line: 85, type: !392)
!4638 = !DILocation(line: 85, column: 28, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 85, column: 28)
!4640 = !DILocation(line: 85, column: 28, scope: !4549)
!4641 = !DILocation(line: 85, column: 3, scope: !4549)
!4642 = !DILocation(line: 85, column: 9, scope: !4549)
!4643 = !DILocation(line: 85, column: 13, scope: !4549)
!4644 = !DILocation(line: 85, column: 26, scope: !4549)
!4645 = !DILocalVariable(name: "__size", scope: !4646, file: !3, line: 86, type: !4250)
!4646 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 86, column: 28)
!4647 = !DILocation(line: 86, column: 28, scope: !4646)
!4648 = !DILocalVariable(name: "__mask", scope: !4646, file: !3, line: 86, type: !4253)
!4649 = !DILocalVariable(name: "__off", scope: !4646, file: !3, line: 86, type: !4250)
!4650 = !DILocalVariable(name: "__shft", scope: !4646, file: !3, line: 86, type: !4250)
!4651 = !DILocalVariable(name: "__res", scope: !4646, file: !3, line: 86, type: !392)
!4652 = !DILocation(line: 86, column: 28, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 86, column: 28)
!4654 = !DILocation(line: 86, column: 28, scope: !4549)
!4655 = !DILocation(line: 86, column: 3, scope: !4549)
!4656 = !DILocation(line: 86, column: 9, scope: !4549)
!4657 = !DILocation(line: 86, column: 13, scope: !4549)
!4658 = !DILocation(line: 86, column: 26, scope: !4549)
!4659 = !DILocalVariable(name: "__size", scope: !4660, file: !3, line: 87, type: !4250)
!4660 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 87, column: 22)
!4661 = !DILocation(line: 87, column: 22, scope: !4660)
!4662 = !DILocalVariable(name: "__mask", scope: !4660, file: !3, line: 87, type: !4253)
!4663 = !DILocalVariable(name: "__off", scope: !4660, file: !3, line: 87, type: !4250)
!4664 = !DILocalVariable(name: "__shft", scope: !4660, file: !3, line: 87, type: !4250)
!4665 = !DILocalVariable(name: "__res", scope: !4660, file: !3, line: 87, type: !392)
!4666 = !DILocation(line: 87, column: 22, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 87, column: 22)
!4668 = !DILocation(line: 87, column: 22, scope: !4549)
!4669 = !DILocation(line: 87, column: 3, scope: !4549)
!4670 = !DILocation(line: 87, column: 9, scope: !4549)
!4671 = !DILocation(line: 87, column: 13, scope: !4549)
!4672 = !DILocation(line: 87, column: 20, scope: !4549)
!4673 = !DILocalVariable(name: "__size", scope: !4674, file: !3, line: 88, type: !4250)
!4674 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 88, column: 22)
!4675 = !DILocation(line: 88, column: 22, scope: !4674)
!4676 = !DILocalVariable(name: "__mask", scope: !4674, file: !3, line: 88, type: !4253)
!4677 = !DILocalVariable(name: "__off", scope: !4674, file: !3, line: 88, type: !4250)
!4678 = !DILocalVariable(name: "__shft", scope: !4674, file: !3, line: 88, type: !4250)
!4679 = !DILocalVariable(name: "__res", scope: !4674, file: !3, line: 88, type: !392)
!4680 = !DILocation(line: 88, column: 22, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 88, column: 22)
!4682 = !DILocation(line: 88, column: 22, scope: !4549)
!4683 = !DILocation(line: 88, column: 3, scope: !4549)
!4684 = !DILocation(line: 88, column: 9, scope: !4549)
!4685 = !DILocation(line: 88, column: 13, scope: !4549)
!4686 = !DILocation(line: 88, column: 20, scope: !4549)
!4687 = !DILocalVariable(name: "__size", scope: !4688, file: !3, line: 89, type: !4250)
!4688 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 89, column: 22)
!4689 = !DILocation(line: 89, column: 22, scope: !4688)
!4690 = !DILocalVariable(name: "__mask", scope: !4688, file: !3, line: 89, type: !4253)
!4691 = !DILocalVariable(name: "__off", scope: !4688, file: !3, line: 89, type: !4250)
!4692 = !DILocalVariable(name: "__shft", scope: !4688, file: !3, line: 89, type: !4250)
!4693 = !DILocalVariable(name: "__res", scope: !4688, file: !3, line: 89, type: !392)
!4694 = !DILocation(line: 89, column: 22, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 89, column: 22)
!4696 = !DILocation(line: 89, column: 3, scope: !4549)
!4697 = !DILocation(line: 89, column: 9, scope: !4549)
!4698 = !DILocation(line: 89, column: 13, scope: !4549)
!4699 = !DILocation(line: 89, column: 20, scope: !4549)
!4700 = !DILocalVariable(name: "__size", scope: !4701, file: !3, line: 90, type: !4250)
!4701 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 90, column: 22)
!4702 = !DILocation(line: 90, column: 22, scope: !4701)
!4703 = !DILocalVariable(name: "__mask", scope: !4701, file: !3, line: 90, type: !4253)
!4704 = !DILocalVariable(name: "__off", scope: !4701, file: !3, line: 90, type: !4250)
!4705 = !DILocalVariable(name: "__shft", scope: !4701, file: !3, line: 90, type: !4250)
!4706 = !DILocalVariable(name: "__res", scope: !4701, file: !3, line: 90, type: !392)
!4707 = !DILocation(line: 90, column: 22, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 90, column: 22)
!4709 = !DILocation(line: 90, column: 22, scope: !4549)
!4710 = !DILocation(line: 90, column: 3, scope: !4549)
!4711 = !DILocation(line: 90, column: 9, scope: !4549)
!4712 = !DILocation(line: 90, column: 13, scope: !4549)
!4713 = !DILocation(line: 90, column: 20, scope: !4549)
!4714 = !DILocalVariable(name: "__size", scope: !4715, file: !3, line: 91, type: !4250)
!4715 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 91, column: 21)
!4716 = !DILocation(line: 91, column: 21, scope: !4715)
!4717 = !DILocalVariable(name: "__mask", scope: !4715, file: !3, line: 91, type: !4253)
!4718 = !DILocalVariable(name: "__off", scope: !4715, file: !3, line: 91, type: !4250)
!4719 = !DILocalVariable(name: "__shft", scope: !4715, file: !3, line: 91, type: !4250)
!4720 = !DILocalVariable(name: "__res", scope: !4715, file: !3, line: 91, type: !392)
!4721 = !DILocation(line: 91, column: 21, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 91, column: 21)
!4723 = !DILocation(line: 91, column: 46, scope: !4549)
!4724 = !DILocation(line: 91, column: 21, scope: !4549)
!4725 = !DILocation(line: 91, column: 3, scope: !4549)
!4726 = !DILocation(line: 91, column: 9, scope: !4549)
!4727 = !DILocation(line: 91, column: 13, scope: !4549)
!4728 = !DILocation(line: 91, column: 19, scope: !4549)
!4729 = !DILocation(line: 92, column: 3, scope: !4549)
!4730 = !DILocalVariable(name: "__size", scope: !4731, file: !3, line: 97, type: !4250)
!4731 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 97, column: 22)
!4732 = !DILocation(line: 97, column: 22, scope: !4731)
!4733 = !DILocalVariable(name: "__mask", scope: !4731, file: !3, line: 97, type: !4253)
!4734 = !DILocalVariable(name: "__off", scope: !4731, file: !3, line: 97, type: !4250)
!4735 = !DILocalVariable(name: "__shft", scope: !4731, file: !3, line: 97, type: !4250)
!4736 = !DILocalVariable(name: "__res", scope: !4731, file: !3, line: 97, type: !392)
!4737 = !DILocation(line: 97, column: 22, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 97, column: 22)
!4739 = !DILocation(line: 97, column: 3, scope: !4549)
!4740 = !DILocation(line: 97, column: 9, scope: !4549)
!4741 = !DILocation(line: 97, column: 13, scope: !4549)
!4742 = !DILocation(line: 97, column: 20, scope: !4549)
!4743 = !DILocalVariable(name: "__size", scope: !4744, file: !3, line: 98, type: !4250)
!4744 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 98, column: 22)
!4745 = !DILocation(line: 98, column: 22, scope: !4744)
!4746 = !DILocalVariable(name: "__mask", scope: !4744, file: !3, line: 98, type: !4253)
!4747 = !DILocalVariable(name: "__off", scope: !4744, file: !3, line: 98, type: !4250)
!4748 = !DILocalVariable(name: "__shft", scope: !4744, file: !3, line: 98, type: !4250)
!4749 = !DILocalVariable(name: "__res", scope: !4744, file: !3, line: 98, type: !392)
!4750 = !DILocation(line: 98, column: 22, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 98, column: 22)
!4752 = !DILocation(line: 98, column: 22, scope: !4549)
!4753 = !DILocation(line: 98, column: 3, scope: !4549)
!4754 = !DILocation(line: 98, column: 9, scope: !4549)
!4755 = !DILocation(line: 98, column: 13, scope: !4549)
!4756 = !DILocation(line: 98, column: 20, scope: !4549)
!4757 = !DILocalVariable(name: "__size", scope: !4758, file: !3, line: 99, type: !4250)
!4758 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 99, column: 28)
!4759 = !DILocation(line: 99, column: 28, scope: !4758)
!4760 = !DILocalVariable(name: "__mask", scope: !4758, file: !3, line: 99, type: !4253)
!4761 = !DILocalVariable(name: "__off", scope: !4758, file: !3, line: 99, type: !4250)
!4762 = !DILocalVariable(name: "__shft", scope: !4758, file: !3, line: 99, type: !4250)
!4763 = !DILocalVariable(name: "__res", scope: !4758, file: !3, line: 99, type: !392)
!4764 = !DILocation(line: 99, column: 28, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 99, column: 28)
!4766 = !DILocation(line: 99, column: 28, scope: !4549)
!4767 = !DILocation(line: 99, column: 3, scope: !4549)
!4768 = !DILocation(line: 99, column: 9, scope: !4549)
!4769 = !DILocation(line: 99, column: 13, scope: !4549)
!4770 = !DILocation(line: 99, column: 26, scope: !4549)
!4771 = !DILocalVariable(name: "__size", scope: !4772, file: !3, line: 100, type: !4250)
!4772 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 100, column: 28)
!4773 = !DILocation(line: 100, column: 28, scope: !4772)
!4774 = !DILocalVariable(name: "__mask", scope: !4772, file: !3, line: 100, type: !4253)
!4775 = !DILocalVariable(name: "__off", scope: !4772, file: !3, line: 100, type: !4250)
!4776 = !DILocalVariable(name: "__shft", scope: !4772, file: !3, line: 100, type: !4250)
!4777 = !DILocalVariable(name: "__res", scope: !4772, file: !3, line: 100, type: !392)
!4778 = !DILocation(line: 100, column: 28, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 100, column: 28)
!4780 = !DILocation(line: 100, column: 28, scope: !4549)
!4781 = !DILocation(line: 100, column: 3, scope: !4549)
!4782 = !DILocation(line: 100, column: 9, scope: !4549)
!4783 = !DILocation(line: 100, column: 13, scope: !4549)
!4784 = !DILocation(line: 100, column: 26, scope: !4549)
!4785 = !DILocalVariable(name: "__size", scope: !4786, file: !3, line: 101, type: !4250)
!4786 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 101, column: 28)
!4787 = !DILocation(line: 101, column: 28, scope: !4786)
!4788 = !DILocalVariable(name: "__mask", scope: !4786, file: !3, line: 101, type: !4253)
!4789 = !DILocalVariable(name: "__off", scope: !4786, file: !3, line: 101, type: !4250)
!4790 = !DILocalVariable(name: "__shft", scope: !4786, file: !3, line: 101, type: !4250)
!4791 = !DILocalVariable(name: "__res", scope: !4786, file: !3, line: 101, type: !392)
!4792 = !DILocation(line: 101, column: 28, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 101, column: 28)
!4794 = !DILocation(line: 101, column: 28, scope: !4549)
!4795 = !DILocation(line: 101, column: 3, scope: !4549)
!4796 = !DILocation(line: 101, column: 9, scope: !4549)
!4797 = !DILocation(line: 101, column: 13, scope: !4549)
!4798 = !DILocation(line: 101, column: 26, scope: !4549)
!4799 = !DILocalVariable(name: "__size", scope: !4800, file: !3, line: 102, type: !4250)
!4800 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 102, column: 28)
!4801 = !DILocation(line: 102, column: 28, scope: !4800)
!4802 = !DILocalVariable(name: "__mask", scope: !4800, file: !3, line: 102, type: !4253)
!4803 = !DILocalVariable(name: "__off", scope: !4800, file: !3, line: 102, type: !4250)
!4804 = !DILocalVariable(name: "__shft", scope: !4800, file: !3, line: 102, type: !4250)
!4805 = !DILocalVariable(name: "__res", scope: !4800, file: !3, line: 102, type: !392)
!4806 = !DILocation(line: 102, column: 28, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 102, column: 28)
!4808 = !DILocation(line: 102, column: 28, scope: !4549)
!4809 = !DILocation(line: 102, column: 3, scope: !4549)
!4810 = !DILocation(line: 102, column: 9, scope: !4549)
!4811 = !DILocation(line: 102, column: 13, scope: !4549)
!4812 = !DILocation(line: 102, column: 26, scope: !4549)
!4813 = !DILocalVariable(name: "__size", scope: !4814, file: !3, line: 103, type: !4250)
!4814 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 103, column: 28)
!4815 = !DILocation(line: 103, column: 28, scope: !4814)
!4816 = !DILocalVariable(name: "__mask", scope: !4814, file: !3, line: 103, type: !4253)
!4817 = !DILocalVariable(name: "__off", scope: !4814, file: !3, line: 103, type: !4250)
!4818 = !DILocalVariable(name: "__shft", scope: !4814, file: !3, line: 103, type: !4250)
!4819 = !DILocalVariable(name: "__res", scope: !4814, file: !3, line: 103, type: !392)
!4820 = !DILocation(line: 103, column: 28, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 103, column: 28)
!4822 = !DILocation(line: 103, column: 28, scope: !4549)
!4823 = !DILocation(line: 103, column: 3, scope: !4549)
!4824 = !DILocation(line: 103, column: 9, scope: !4549)
!4825 = !DILocation(line: 103, column: 13, scope: !4549)
!4826 = !DILocation(line: 103, column: 26, scope: !4549)
!4827 = !DILocalVariable(name: "__size", scope: !4828, file: !3, line: 104, type: !4250)
!4828 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 104, column: 28)
!4829 = !DILocation(line: 104, column: 28, scope: !4828)
!4830 = !DILocalVariable(name: "__mask", scope: !4828, file: !3, line: 104, type: !4253)
!4831 = !DILocalVariable(name: "__off", scope: !4828, file: !3, line: 104, type: !4250)
!4832 = !DILocalVariable(name: "__shft", scope: !4828, file: !3, line: 104, type: !4250)
!4833 = !DILocalVariable(name: "__res", scope: !4828, file: !3, line: 104, type: !392)
!4834 = !DILocation(line: 104, column: 28, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 104, column: 28)
!4836 = !DILocation(line: 104, column: 28, scope: !4549)
!4837 = !DILocation(line: 104, column: 3, scope: !4549)
!4838 = !DILocation(line: 104, column: 9, scope: !4549)
!4839 = !DILocation(line: 104, column: 13, scope: !4549)
!4840 = !DILocation(line: 104, column: 26, scope: !4549)
!4841 = !DILocalVariable(name: "__size", scope: !4842, file: !3, line: 105, type: !4250)
!4842 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 105, column: 20)
!4843 = !DILocation(line: 105, column: 20, scope: !4842)
!4844 = !DILocalVariable(name: "__mask", scope: !4842, file: !3, line: 105, type: !4253)
!4845 = !DILocalVariable(name: "__off", scope: !4842, file: !3, line: 105, type: !4250)
!4846 = !DILocalVariable(name: "__shft", scope: !4842, file: !3, line: 105, type: !4250)
!4847 = !DILocalVariable(name: "__res", scope: !4842, file: !3, line: 105, type: !392)
!4848 = !DILocation(line: 105, column: 20, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 105, column: 20)
!4850 = !DILocation(line: 105, column: 20, scope: !4549)
!4851 = !DILocation(line: 105, column: 3, scope: !4549)
!4852 = !DILocation(line: 105, column: 9, scope: !4549)
!4853 = !DILocation(line: 105, column: 13, scope: !4549)
!4854 = !DILocation(line: 105, column: 18, scope: !4549)
!4855 = !DILocalVariable(name: "__size", scope: !4856, file: !3, line: 106, type: !4250)
!4856 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 106, column: 22)
!4857 = !DILocation(line: 106, column: 22, scope: !4856)
!4858 = !DILocalVariable(name: "__mask", scope: !4856, file: !3, line: 106, type: !4253)
!4859 = !DILocalVariable(name: "__off", scope: !4856, file: !3, line: 106, type: !4250)
!4860 = !DILocalVariable(name: "__shft", scope: !4856, file: !3, line: 106, type: !4250)
!4861 = !DILocalVariable(name: "__res", scope: !4856, file: !3, line: 106, type: !392)
!4862 = !DILocation(line: 106, column: 22, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 106, column: 22)
!4864 = !DILocation(line: 106, column: 3, scope: !4549)
!4865 = !DILocation(line: 106, column: 9, scope: !4549)
!4866 = !DILocation(line: 106, column: 13, scope: !4549)
!4867 = !DILocation(line: 106, column: 20, scope: !4549)
!4868 = !DILocalVariable(name: "__size", scope: !4869, file: !3, line: 107, type: !4250)
!4869 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 107, column: 22)
!4870 = !DILocation(line: 107, column: 22, scope: !4869)
!4871 = !DILocalVariable(name: "__mask", scope: !4869, file: !3, line: 107, type: !4253)
!4872 = !DILocalVariable(name: "__off", scope: !4869, file: !3, line: 107, type: !4250)
!4873 = !DILocalVariable(name: "__shft", scope: !4869, file: !3, line: 107, type: !4250)
!4874 = !DILocalVariable(name: "__res", scope: !4869, file: !3, line: 107, type: !392)
!4875 = !DILocation(line: 107, column: 22, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 107, column: 22)
!4877 = !DILocation(line: 107, column: 22, scope: !4549)
!4878 = !DILocation(line: 107, column: 3, scope: !4549)
!4879 = !DILocation(line: 107, column: 9, scope: !4549)
!4880 = !DILocation(line: 107, column: 13, scope: !4549)
!4881 = !DILocation(line: 107, column: 20, scope: !4549)
!4882 = !DILocalVariable(name: "__size", scope: !4883, file: !3, line: 108, type: !4250)
!4883 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 108, column: 21)
!4884 = !DILocation(line: 108, column: 21, scope: !4883)
!4885 = !DILocalVariable(name: "__mask", scope: !4883, file: !3, line: 108, type: !4253)
!4886 = !DILocalVariable(name: "__off", scope: !4883, file: !3, line: 108, type: !4250)
!4887 = !DILocalVariable(name: "__shft", scope: !4883, file: !3, line: 108, type: !4250)
!4888 = !DILocalVariable(name: "__res", scope: !4883, file: !3, line: 108, type: !392)
!4889 = !DILocation(line: 108, column: 21, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 108, column: 21)
!4891 = !DILocation(line: 108, column: 46, scope: !4549)
!4892 = !DILocation(line: 108, column: 21, scope: !4549)
!4893 = !DILocation(line: 108, column: 3, scope: !4549)
!4894 = !DILocation(line: 108, column: 9, scope: !4549)
!4895 = !DILocation(line: 108, column: 13, scope: !4549)
!4896 = !DILocation(line: 108, column: 19, scope: !4549)
!4897 = !DILocation(line: 109, column: 3, scope: !4549)
!4898 = !DILocation(line: 112, column: 3, scope: !4549)
!4899 = !DILocation(line: 114, column: 3, scope: !4549)
!4900 = !DILocation(line: 117, column: 2, scope: !4536)
!4901 = !DILocation(line: 118, column: 1, scope: !4536)
!4902 = distinct !DISubprogram(name: "mmc_read_ext_csd", scope: !3, file: !3, line: 658, type: !2642, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4903 = !DILocalVariable(name: "card", arg: 1, scope: !4902, file: !3, line: 658, type: !57)
!4904 = !DILocation(line: 658, column: 46, scope: !4902)
!4905 = !DILocalVariable(name: "ext_csd", scope: !4902, file: !3, line: 660, type: !4906)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!4907 = !DILocation(line: 660, column: 6, scope: !4902)
!4908 = !DILocalVariable(name: "err", scope: !4902, file: !3, line: 661, type: !119)
!4909 = !DILocation(line: 661, column: 6, scope: !4902)
!4910 = !DILocation(line: 663, column: 23, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 663, column: 6)
!4912 = !DILocation(line: 663, column: 7, scope: !4911)
!4913 = !DILocation(line: 663, column: 6, scope: !4902)
!4914 = !DILocation(line: 664, column: 3, scope: !4911)
!4915 = !DILocation(line: 666, column: 24, scope: !4902)
!4916 = !DILocation(line: 666, column: 8, scope: !4902)
!4917 = !DILocation(line: 666, column: 6, scope: !4902)
!4918 = !DILocation(line: 667, column: 6, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 667, column: 6)
!4920 = !DILocation(line: 667, column: 6, scope: !4902)
!4921 = !DILocation(line: 670, column: 8, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 670, column: 7)
!4923 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 667, column: 11)
!4924 = !DILocation(line: 670, column: 12, scope: !4922)
!4925 = !DILocation(line: 671, column: 4, scope: !4922)
!4926 = !DILocation(line: 671, column: 8, scope: !4922)
!4927 = !DILocation(line: 671, column: 12, scope: !4922)
!4928 = !DILocation(line: 672, column: 4, scope: !4922)
!4929 = !DILocation(line: 672, column: 8, scope: !4922)
!4930 = !DILocation(line: 672, column: 12, scope: !4922)
!4931 = !DILocation(line: 670, column: 7, scope: !4923)
!4932 = !DILocation(line: 673, column: 11, scope: !4922)
!4933 = !DILocation(line: 673, column: 4, scope: !4922)
!4934 = !DILocation(line: 679, column: 7, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 679, column: 7)
!4936 = !DILocation(line: 679, column: 13, scope: !4935)
!4937 = !DILocation(line: 679, column: 17, scope: !4935)
!4938 = !DILocation(line: 679, column: 26, scope: !4935)
!4939 = !DILocation(line: 679, column: 7, scope: !4923)
!4940 = !DILocation(line: 680, column: 4, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 679, column: 43)
!4942 = !DILocation(line: 682, column: 3, scope: !4941)
!4943 = !DILocation(line: 683, column: 4, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 682, column: 10)
!4945 = !DILocation(line: 685, column: 8, scope: !4944)
!4946 = !DILocation(line: 688, column: 10, scope: !4923)
!4947 = !DILocation(line: 688, column: 3, scope: !4923)
!4948 = !DILocation(line: 691, column: 27, scope: !4902)
!4949 = !DILocation(line: 691, column: 33, scope: !4902)
!4950 = !DILocation(line: 691, column: 8, scope: !4902)
!4951 = !DILocation(line: 691, column: 6, scope: !4902)
!4952 = !DILocation(line: 692, column: 8, scope: !4902)
!4953 = !DILocation(line: 692, column: 2, scope: !4902)
!4954 = !DILocation(line: 693, column: 9, scope: !4902)
!4955 = !DILocation(line: 693, column: 2, scope: !4902)
!4956 = !DILocation(line: 694, column: 1, scope: !4902)
!4957 = distinct !DISubprogram(name: "mmc_set_erase_size", scope: !3, file: !3, line: 120, type: !2907, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4958 = !DILocalVariable(name: "card", arg: 1, scope: !4957, file: !3, line: 120, type: !57)
!4959 = !DILocation(line: 120, column: 49, scope: !4957)
!4960 = !DILocation(line: 122, column: 6, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 122, column: 6)
!4962 = !DILocation(line: 122, column: 12, scope: !4961)
!4963 = !DILocation(line: 122, column: 20, scope: !4961)
!4964 = !DILocation(line: 122, column: 36, scope: !4961)
!4965 = !DILocation(line: 122, column: 6, scope: !4957)
!4966 = !DILocation(line: 123, column: 22, scope: !4961)
!4967 = !DILocation(line: 123, column: 28, scope: !4961)
!4968 = !DILocation(line: 123, column: 36, scope: !4961)
!4969 = !DILocation(line: 123, column: 3, scope: !4961)
!4970 = !DILocation(line: 123, column: 9, scope: !4961)
!4971 = !DILocation(line: 123, column: 20, scope: !4961)
!4972 = !DILocation(line: 125, column: 22, scope: !4961)
!4973 = !DILocation(line: 125, column: 28, scope: !4961)
!4974 = !DILocation(line: 125, column: 32, scope: !4961)
!4975 = !DILocation(line: 125, column: 3, scope: !4961)
!4976 = !DILocation(line: 125, column: 9, scope: !4961)
!4977 = !DILocation(line: 125, column: 20, scope: !4961)
!4978 = !DILocation(line: 127, column: 17, scope: !4957)
!4979 = !DILocation(line: 127, column: 2, scope: !4957)
!4980 = !DILocation(line: 128, column: 1, scope: !4957)
!4981 = distinct !DISubprogram(name: "mmc_select_timing", scope: !3, file: !3, line: 1501, type: !2642, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!4982 = !DILocalVariable(name: "card", arg: 1, scope: !4981, file: !3, line: 1501, type: !57)
!4983 = !DILocation(line: 1501, column: 47, scope: !4981)
!4984 = !DILocalVariable(name: "err", scope: !4981, file: !3, line: 1503, type: !119)
!4985 = !DILocation(line: 1503, column: 6, scope: !4981)
!4986 = !DILocation(line: 1505, column: 23, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 1505, column: 6)
!4988 = !DILocation(line: 1505, column: 7, scope: !4987)
!4989 = !DILocation(line: 1505, column: 6, scope: !4981)
!4990 = !DILocation(line: 1506, column: 3, scope: !4987)
!4991 = !DILocation(line: 1508, column: 6, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 1508, column: 6)
!4993 = !DILocation(line: 1508, column: 12, scope: !4992)
!4994 = !DILocation(line: 1508, column: 27, scope: !4992)
!4995 = !DILocation(line: 1508, column: 6, scope: !4981)
!4996 = !DILocation(line: 1509, column: 28, scope: !4992)
!4997 = !DILocation(line: 1509, column: 9, scope: !4992)
!4998 = !DILocation(line: 1509, column: 7, scope: !4992)
!4999 = !DILocation(line: 1509, column: 3, scope: !4992)
!5000 = !DILocation(line: 1510, column: 11, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 1510, column: 11)
!5002 = !DILocation(line: 1510, column: 17, scope: !5001)
!5003 = !DILocation(line: 1510, column: 32, scope: !5001)
!5004 = !DILocation(line: 1510, column: 11, scope: !4992)
!5005 = !DILocation(line: 1511, column: 26, scope: !5001)
!5006 = !DILocation(line: 1511, column: 9, scope: !5001)
!5007 = !DILocation(line: 1511, column: 7, scope: !5001)
!5008 = !DILocation(line: 1511, column: 3, scope: !5001)
!5009 = !DILocation(line: 1512, column: 11, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 1512, column: 11)
!5011 = !DILocation(line: 1512, column: 17, scope: !5010)
!5012 = !DILocation(line: 1512, column: 32, scope: !5010)
!5013 = !DILocation(line: 1512, column: 11, scope: !5001)
!5014 = !DILocation(line: 1513, column: 23, scope: !5010)
!5015 = !DILocation(line: 1513, column: 9, scope: !5010)
!5016 = !DILocation(line: 1513, column: 7, scope: !5010)
!5017 = !DILocation(line: 1513, column: 3, scope: !5010)
!5018 = !DILocation(line: 1515, column: 6, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 1515, column: 6)
!5020 = !DILocation(line: 1515, column: 10, scope: !5019)
!5021 = !DILocation(line: 1515, column: 13, scope: !5019)
!5022 = !DILocation(line: 1515, column: 17, scope: !5019)
!5023 = !DILocation(line: 1515, column: 6, scope: !4981)
!5024 = !DILocation(line: 1516, column: 10, scope: !5019)
!5025 = !DILocation(line: 1516, column: 3, scope: !5019)
!5026 = !DILocation(line: 1515, column: 21, scope: !5019)
!5027 = !DILabel(scope: !4981, name: "bus_speed", file: !3, line: 1518)
!5028 = !DILocation(line: 1518, column: 1, scope: !4981)
!5029 = !DILocation(line: 1523, column: 20, scope: !4981)
!5030 = !DILocation(line: 1523, column: 2, scope: !4981)
!5031 = !DILocation(line: 1524, column: 2, scope: !4981)
!5032 = !DILocation(line: 1525, column: 1, scope: !4981)
!5033 = distinct !DISubprogram(name: "mmc_hs200_tuning", scope: !3, file: !3, line: 1531, type: !2642, scopeLine: 1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5034 = !DILocalVariable(name: "card", arg: 1, scope: !5033, file: !3, line: 1531, type: !57)
!5035 = !DILocation(line: 1531, column: 46, scope: !5033)
!5036 = !DILocalVariable(name: "host", scope: !5033, file: !3, line: 1533, type: !62)
!5037 = !DILocation(line: 1533, column: 19, scope: !5033)
!5038 = !DILocation(line: 1533, column: 26, scope: !5033)
!5039 = !DILocation(line: 1533, column: 32, scope: !5033)
!5040 = !DILocation(line: 1539, column: 6, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 1539, column: 6)
!5042 = !DILocation(line: 1539, column: 12, scope: !5041)
!5043 = !DILocation(line: 1539, column: 27, scope: !5041)
!5044 = !DILocation(line: 1539, column: 53, scope: !5041)
!5045 = !DILocation(line: 1540, column: 6, scope: !5041)
!5046 = !DILocation(line: 1540, column: 12, scope: !5041)
!5047 = !DILocation(line: 1540, column: 16, scope: !5041)
!5048 = !DILocation(line: 1540, column: 26, scope: !5041)
!5049 = !DILocation(line: 1539, column: 6, scope: !5033)
!5050 = !DILocation(line: 1541, column: 7, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 1541, column: 7)
!5052 = !DILocation(line: 1541, column: 13, scope: !5051)
!5053 = !DILocation(line: 1541, column: 18, scope: !5051)
!5054 = !DILocation(line: 1541, column: 7, scope: !5041)
!5055 = !DILocation(line: 1542, column: 4, scope: !5051)
!5056 = !DILocation(line: 1542, column: 10, scope: !5051)
!5057 = !DILocation(line: 1542, column: 15, scope: !5051)
!5058 = !DILocation(line: 1542, column: 36, scope: !5051)
!5059 = !DILocation(line: 1542, column: 43, scope: !5051)
!5060 = !DILocation(line: 1542, column: 49, scope: !5051)
!5061 = !DILocation(line: 1544, column: 28, scope: !5033)
!5062 = !DILocation(line: 1544, column: 9, scope: !5033)
!5063 = !DILocation(line: 1544, column: 2, scope: !5033)
!5064 = distinct !DISubprogram(name: "mmc_card_hs400es", scope: !3678, file: !3678, line: 75, type: !3679, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5065 = !DILocalVariable(name: "card", arg: 1, scope: !5064, file: !3678, line: 75, type: !57)
!5066 = !DILocation(line: 75, column: 54, scope: !5064)
!5067 = !DILocation(line: 77, column: 9, scope: !5064)
!5068 = !DILocation(line: 77, column: 15, scope: !5064)
!5069 = !DILocation(line: 77, column: 21, scope: !5064)
!5070 = !DILocation(line: 77, column: 25, scope: !5064)
!5071 = !DILocation(line: 77, column: 2, scope: !5064)
!5072 = !DILocalVariable(name: "card", arg: 1, scope: !2641, file: !3, line: 988, type: !57)
!5073 = !DILocation(line: 988, column: 50, scope: !2641)
!5074 = !DILocalVariable(name: "host", scope: !2641, file: !3, line: 998, type: !62)
!5075 = !DILocation(line: 998, column: 19, scope: !2641)
!5076 = !DILocation(line: 998, column: 26, scope: !2641)
!5077 = !DILocation(line: 998, column: 32, scope: !2641)
!5078 = !DILocalVariable(name: "idx", scope: !2641, file: !3, line: 999, type: !7)
!5079 = !DILocation(line: 999, column: 11, scope: !2641)
!5080 = !DILocalVariable(name: "bus_width", scope: !2641, file: !3, line: 999, type: !7)
!5081 = !DILocation(line: 999, column: 16, scope: !2641)
!5082 = !DILocalVariable(name: "err", scope: !2641, file: !3, line: 1000, type: !119)
!5083 = !DILocation(line: 1000, column: 6, scope: !2641)
!5084 = !DILocation(line: 1002, column: 23, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 1002, column: 6)
!5086 = !DILocation(line: 1002, column: 7, scope: !5085)
!5087 = !DILocation(line: 1002, column: 29, scope: !5085)
!5088 = !DILocation(line: 1003, column: 8, scope: !5085)
!5089 = !DILocation(line: 1003, column: 14, scope: !5085)
!5090 = !DILocation(line: 1003, column: 19, scope: !5085)
!5091 = !DILocation(line: 1002, column: 6, scope: !2641)
!5092 = !DILocation(line: 1004, column: 3, scope: !5085)
!5093 = !DILocation(line: 1006, column: 9, scope: !2641)
!5094 = !DILocation(line: 1006, column: 15, scope: !2641)
!5095 = !DILocation(line: 1006, column: 20, scope: !2641)
!5096 = !DILocation(line: 1006, column: 8, scope: !2641)
!5097 = !DILocation(line: 1006, column: 6, scope: !2641)
!5098 = !DILocation(line: 1014, column: 2, scope: !2641)
!5099 = !DILocation(line: 1014, column: 9, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1014, column: 2)
!5101 = distinct !DILexicalBlock(scope: !2641, file: !3, line: 1014, column: 2)
!5102 = !DILocation(line: 1014, column: 13, scope: !5100)
!5103 = !DILocation(line: 1014, column: 2, scope: !5101)
!5104 = !DILocation(line: 1022, column: 20, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1014, column: 46)
!5106 = !DILocation(line: 1024, column: 19, scope: !5105)
!5107 = !DILocation(line: 1024, column: 6, scope: !5105)
!5108 = !DILocation(line: 1025, column: 6, scope: !5105)
!5109 = !DILocation(line: 1025, column: 12, scope: !5105)
!5110 = !DILocation(line: 1025, column: 20, scope: !5105)
!5111 = !DILocation(line: 1022, column: 9, scope: !5105)
!5112 = !DILocation(line: 1022, column: 7, scope: !5105)
!5113 = !DILocation(line: 1026, column: 7, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1026, column: 7)
!5115 = !DILocation(line: 1026, column: 7, scope: !5105)
!5116 = !DILocation(line: 1027, column: 4, scope: !5114)
!5117 = !DILocation(line: 1029, column: 26, scope: !5105)
!5118 = !DILocation(line: 1029, column: 15, scope: !5105)
!5119 = !DILocation(line: 1029, column: 13, scope: !5105)
!5120 = !DILocation(line: 1030, column: 21, scope: !5105)
!5121 = !DILocation(line: 1030, column: 27, scope: !5105)
!5122 = !DILocation(line: 1030, column: 3, scope: !5105)
!5123 = !DILocation(line: 1037, column: 9, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1037, column: 7)
!5125 = !DILocation(line: 1037, column: 15, scope: !5124)
!5126 = !DILocation(line: 1037, column: 20, scope: !5124)
!5127 = !DILocation(line: 1037, column: 7, scope: !5105)
!5128 = !DILocation(line: 1038, column: 31, scope: !5124)
!5129 = !DILocation(line: 1038, column: 37, scope: !5124)
!5130 = !DILocation(line: 1038, column: 10, scope: !5124)
!5131 = !DILocation(line: 1038, column: 8, scope: !5124)
!5132 = !DILocation(line: 1038, column: 4, scope: !5124)
!5133 = !DILocation(line: 1040, column: 23, scope: !5124)
!5134 = !DILocation(line: 1040, column: 29, scope: !5124)
!5135 = !DILocation(line: 1040, column: 10, scope: !5124)
!5136 = !DILocation(line: 1040, column: 8, scope: !5124)
!5137 = !DILocation(line: 1042, column: 8, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1042, column: 7)
!5139 = !DILocation(line: 1042, column: 7, scope: !5105)
!5140 = !DILocation(line: 1043, column: 10, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1042, column: 13)
!5142 = !DILocation(line: 1043, column: 8, scope: !5141)
!5143 = !DILocation(line: 1044, column: 4, scope: !5141)
!5144 = !DILocation(line: 1046, column: 4, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1045, column: 10)
!5146 = !DILocation(line: 1049, column: 2, scope: !5105)
!5147 = !DILocation(line: 1014, column: 42, scope: !5100)
!5148 = !DILocation(line: 1014, column: 2, scope: !5100)
!5149 = distinct !{!5149, !5103, !5150}
!5150 = !DILocation(line: 1049, column: 2, scope: !5101)
!5151 = !DILocation(line: 1051, column: 9, scope: !2641)
!5152 = !DILocation(line: 1051, column: 2, scope: !2641)
!5153 = !DILocation(line: 1052, column: 1, scope: !2641)
!5154 = distinct !DISubprogram(name: "mmc_select_hs_ddr", scope: !3, file: !3, line: 1075, type: !2642, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5155 = !DILocalVariable(name: "card", arg: 1, scope: !5154, file: !3, line: 1075, type: !57)
!5156 = !DILocation(line: 1075, column: 47, scope: !5154)
!5157 = !DILocalVariable(name: "host", scope: !5154, file: !3, line: 1077, type: !62)
!5158 = !DILocation(line: 1077, column: 19, scope: !5154)
!5159 = !DILocation(line: 1077, column: 26, scope: !5154)
!5160 = !DILocation(line: 1077, column: 32, scope: !5154)
!5161 = !DILocalVariable(name: "bus_width", scope: !5154, file: !3, line: 1078, type: !392)
!5162 = !DILocation(line: 1078, column: 6, scope: !5154)
!5163 = !DILocalVariable(name: "ext_csd_bits", scope: !5154, file: !3, line: 1078, type: !392)
!5164 = !DILocation(line: 1078, column: 17, scope: !5154)
!5165 = !DILocalVariable(name: "err", scope: !5154, file: !3, line: 1079, type: !119)
!5166 = !DILocation(line: 1079, column: 6, scope: !5154)
!5167 = !DILocation(line: 1081, column: 8, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1081, column: 6)
!5169 = !DILocation(line: 1081, column: 14, scope: !5168)
!5170 = !DILocation(line: 1081, column: 29, scope: !5168)
!5171 = !DILocation(line: 1081, column: 6, scope: !5154)
!5172 = !DILocation(line: 1082, column: 3, scope: !5168)
!5173 = !DILocation(line: 1084, column: 14, scope: !5154)
!5174 = !DILocation(line: 1084, column: 20, scope: !5154)
!5175 = !DILocation(line: 1084, column: 24, scope: !5154)
!5176 = !DILocation(line: 1084, column: 12, scope: !5154)
!5177 = !DILocation(line: 1085, column: 6, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1085, column: 6)
!5179 = !DILocation(line: 1085, column: 16, scope: !5178)
!5180 = !DILocation(line: 1085, column: 6, scope: !5154)
!5181 = !DILocation(line: 1086, column: 3, scope: !5178)
!5182 = !DILocation(line: 1088, column: 18, scope: !5154)
!5183 = !DILocation(line: 1088, column: 28, scope: !5154)
!5184 = !DILocation(line: 1088, column: 17, scope: !5154)
!5185 = !DILocation(line: 1088, column: 15, scope: !5154)
!5186 = !DILocation(line: 1091, column: 21, scope: !5154)
!5187 = !DILocation(line: 1093, column: 7, scope: !5154)
!5188 = !DILocation(line: 1094, column: 7, scope: !5154)
!5189 = !DILocation(line: 1094, column: 13, scope: !5154)
!5190 = !DILocation(line: 1094, column: 21, scope: !5154)
!5191 = !DILocation(line: 1091, column: 8, scope: !5154)
!5192 = !DILocation(line: 1091, column: 6, scope: !5154)
!5193 = !DILocation(line: 1097, column: 6, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1097, column: 6)
!5195 = !DILocation(line: 1097, column: 6, scope: !5154)
!5196 = !DILocation(line: 1098, column: 3, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 1097, column: 11)
!5198 = !DILocation(line: 1100, column: 10, scope: !5197)
!5199 = !DILocation(line: 1100, column: 3, scope: !5197)
!5200 = !DILocation(line: 1128, column: 6, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1128, column: 6)
!5202 = !DILocation(line: 1128, column: 12, scope: !5201)
!5203 = !DILocation(line: 1128, column: 27, scope: !5201)
!5204 = !DILocation(line: 1128, column: 6, scope: !5154)
!5205 = !DILocation(line: 1129, column: 32, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1128, column: 57)
!5207 = !DILocation(line: 1129, column: 9, scope: !5206)
!5208 = !DILocation(line: 1129, column: 7, scope: !5206)
!5209 = !DILocation(line: 1130, column: 8, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 1130, column: 7)
!5211 = !DILocation(line: 1130, column: 7, scope: !5206)
!5212 = !DILocation(line: 1131, column: 4, scope: !5210)
!5213 = !DILocation(line: 1132, column: 2, scope: !5206)
!5214 = !DILocation(line: 1134, column: 6, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1134, column: 6)
!5216 = !DILocation(line: 1134, column: 12, scope: !5215)
!5217 = !DILocation(line: 1134, column: 27, scope: !5215)
!5218 = !DILocation(line: 1134, column: 56, scope: !5215)
!5219 = !DILocation(line: 1135, column: 6, scope: !5215)
!5220 = !DILocation(line: 1135, column: 12, scope: !5215)
!5221 = !DILocation(line: 1135, column: 17, scope: !5215)
!5222 = !DILocation(line: 1134, column: 6, scope: !5154)
!5223 = !DILocation(line: 1136, column: 32, scope: !5215)
!5224 = !DILocation(line: 1136, column: 9, scope: !5215)
!5225 = !DILocation(line: 1136, column: 7, scope: !5215)
!5226 = !DILocation(line: 1136, column: 3, scope: !5215)
!5227 = !DILocation(line: 1139, column: 6, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 1139, column: 6)
!5229 = !DILocation(line: 1139, column: 6, scope: !5154)
!5230 = !DILocation(line: 1140, column: 32, scope: !5228)
!5231 = !DILocation(line: 1140, column: 9, scope: !5228)
!5232 = !DILocation(line: 1140, column: 7, scope: !5228)
!5233 = !DILocation(line: 1140, column: 3, scope: !5228)
!5234 = !DILocation(line: 1142, column: 9, scope: !5154)
!5235 = !DILocation(line: 1142, column: 2, scope: !5154)
!5236 = !DILocation(line: 1143, column: 1, scope: !5154)
!5237 = distinct !DISubprogram(name: "mmc_select_powerclass", scope: !3, file: !3, line: 934, type: !2642, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5238 = !DILocalVariable(name: "card", arg: 1, scope: !5237, file: !3, line: 934, type: !57)
!5239 = !DILocation(line: 934, column: 51, scope: !5237)
!5240 = !DILocalVariable(name: "host", scope: !5237, file: !3, line: 936, type: !62)
!5241 = !DILocation(line: 936, column: 19, scope: !5237)
!5242 = !DILocation(line: 936, column: 26, scope: !5237)
!5243 = !DILocation(line: 936, column: 32, scope: !5237)
!5244 = !DILocalVariable(name: "bus_width", scope: !5237, file: !3, line: 937, type: !392)
!5245 = !DILocation(line: 937, column: 6, scope: !5237)
!5246 = !DILocalVariable(name: "ext_csd_bits", scope: !5237, file: !3, line: 937, type: !392)
!5247 = !DILocation(line: 937, column: 17, scope: !5237)
!5248 = !DILocalVariable(name: "err", scope: !5237, file: !3, line: 938, type: !119)
!5249 = !DILocation(line: 938, column: 6, scope: !5237)
!5250 = !DILocalVariable(name: "ddr", scope: !5237, file: !3, line: 938, type: !119)
!5251 = !DILocation(line: 938, column: 11, scope: !5237)
!5252 = !DILocation(line: 941, column: 23, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 941, column: 6)
!5254 = !DILocation(line: 941, column: 7, scope: !5253)
!5255 = !DILocation(line: 941, column: 6, scope: !5237)
!5256 = !DILocation(line: 942, column: 3, scope: !5253)
!5257 = !DILocation(line: 944, column: 14, scope: !5237)
!5258 = !DILocation(line: 944, column: 20, scope: !5237)
!5259 = !DILocation(line: 944, column: 24, scope: !5237)
!5260 = !DILocation(line: 944, column: 12, scope: !5237)
!5261 = !DILocation(line: 946, column: 6, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 946, column: 6)
!5263 = !DILocation(line: 946, column: 16, scope: !5262)
!5264 = !DILocation(line: 946, column: 6, scope: !5237)
!5265 = !DILocation(line: 947, column: 3, scope: !5262)
!5266 = !DILocation(line: 949, column: 8, scope: !5237)
!5267 = !DILocation(line: 949, column: 14, scope: !5237)
!5268 = !DILocation(line: 949, column: 29, scope: !5237)
!5269 = !DILocation(line: 949, column: 6, scope: !5237)
!5270 = !DILocation(line: 950, column: 6, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 950, column: 6)
!5272 = !DILocation(line: 950, column: 6, scope: !5237)
!5273 = !DILocation(line: 951, column: 19, scope: !5271)
!5274 = !DILocation(line: 951, column: 29, scope: !5271)
!5275 = !DILocation(line: 951, column: 18, scope: !5271)
!5276 = !DILocation(line: 951, column: 16, scope: !5271)
!5277 = !DILocation(line: 951, column: 3, scope: !5271)
!5278 = !DILocation(line: 954, column: 19, scope: !5271)
!5279 = !DILocation(line: 954, column: 29, scope: !5271)
!5280 = !DILocation(line: 954, column: 18, scope: !5271)
!5281 = !DILocation(line: 954, column: 16, scope: !5271)
!5282 = !DILocation(line: 957, column: 32, scope: !5237)
!5283 = !DILocation(line: 957, column: 38, scope: !5237)
!5284 = !DILocation(line: 957, column: 8, scope: !5237)
!5285 = !DILocation(line: 957, column: 6, scope: !5237)
!5286 = !DILocation(line: 958, column: 6, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 958, column: 6)
!5288 = !DILocation(line: 958, column: 6, scope: !5237)
!5289 = !DILocation(line: 959, column: 3, scope: !5287)
!5290 = !DILocation(line: 962, column: 9, scope: !5237)
!5291 = !DILocation(line: 962, column: 2, scope: !5237)
!5292 = !DILocation(line: 963, column: 1, scope: !5237)
!5293 = distinct !DISubprogram(name: "mmc_cid_show", scope: !3, file: !3, line: 769, type: !2550, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5294 = !DILocalVariable(name: "dev", arg: 1, scope: !5293, file: !3, line: 769, type: !67)
!5295 = !DILocation(line: 769, column: 1, scope: !5293)
!5296 = !DILocalVariable(name: "attr", arg: 2, scope: !5293, file: !3, line: 769, type: !2552)
!5297 = !DILocalVariable(name: "buf", arg: 3, scope: !5293, file: !3, line: 769, type: !135)
!5298 = !DILocalVariable(name: "card", scope: !5293, file: !3, line: 769, type: !57)
!5299 = !DILocalVariable(name: "__mptr", scope: !5300, file: !3, line: 769, type: !56)
!5300 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 769, column: 1)
!5301 = !DILocation(line: 769, column: 1, scope: !5300)
!5302 = !DILocation(line: 769, column: 1, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 769, column: 1)
!5304 = distinct !DISubprogram(name: "mmc_csd_show", scope: !3, file: !3, line: 771, type: !2550, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5305 = !DILocalVariable(name: "dev", arg: 1, scope: !5304, file: !3, line: 771, type: !67)
!5306 = !DILocation(line: 771, column: 1, scope: !5304)
!5307 = !DILocalVariable(name: "attr", arg: 2, scope: !5304, file: !3, line: 771, type: !2552)
!5308 = !DILocalVariable(name: "buf", arg: 3, scope: !5304, file: !3, line: 771, type: !135)
!5309 = !DILocalVariable(name: "card", scope: !5304, file: !3, line: 771, type: !57)
!5310 = !DILocalVariable(name: "__mptr", scope: !5311, file: !3, line: 771, type: !56)
!5311 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 771, column: 1)
!5312 = !DILocation(line: 771, column: 1, scope: !5311)
!5313 = !DILocation(line: 771, column: 1, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 771, column: 1)
!5315 = distinct !DISubprogram(name: "mmc_date_show", scope: !3, file: !3, line: 773, type: !2550, scopeLine: 773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5316 = !DILocalVariable(name: "dev", arg: 1, scope: !5315, file: !3, line: 773, type: !67)
!5317 = !DILocation(line: 773, column: 1, scope: !5315)
!5318 = !DILocalVariable(name: "attr", arg: 2, scope: !5315, file: !3, line: 773, type: !2552)
!5319 = !DILocalVariable(name: "buf", arg: 3, scope: !5315, file: !3, line: 773, type: !135)
!5320 = !DILocalVariable(name: "card", scope: !5315, file: !3, line: 773, type: !57)
!5321 = !DILocalVariable(name: "__mptr", scope: !5322, file: !3, line: 773, type: !56)
!5322 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 773, column: 1)
!5323 = !DILocation(line: 773, column: 1, scope: !5322)
!5324 = !DILocation(line: 773, column: 1, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 773, column: 1)
!5326 = distinct !DISubprogram(name: "mmc_erase_size_show", scope: !3, file: !3, line: 774, type: !2550, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5327 = !DILocalVariable(name: "dev", arg: 1, scope: !5326, file: !3, line: 774, type: !67)
!5328 = !DILocation(line: 774, column: 1, scope: !5326)
!5329 = !DILocalVariable(name: "attr", arg: 2, scope: !5326, file: !3, line: 774, type: !2552)
!5330 = !DILocalVariable(name: "buf", arg: 3, scope: !5326, file: !3, line: 774, type: !135)
!5331 = !DILocalVariable(name: "card", scope: !5326, file: !3, line: 774, type: !57)
!5332 = !DILocalVariable(name: "__mptr", scope: !5333, file: !3, line: 774, type: !56)
!5333 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 774, column: 1)
!5334 = !DILocation(line: 774, column: 1, scope: !5333)
!5335 = !DILocation(line: 774, column: 1, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5333, file: !3, line: 774, column: 1)
!5337 = distinct !DISubprogram(name: "mmc_preferred_erase_size_show", scope: !3, file: !3, line: 775, type: !2550, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5338 = !DILocalVariable(name: "dev", arg: 1, scope: !5337, file: !3, line: 775, type: !67)
!5339 = !DILocation(line: 775, column: 1, scope: !5337)
!5340 = !DILocalVariable(name: "attr", arg: 2, scope: !5337, file: !3, line: 775, type: !2552)
!5341 = !DILocalVariable(name: "buf", arg: 3, scope: !5337, file: !3, line: 775, type: !135)
!5342 = !DILocalVariable(name: "card", scope: !5337, file: !3, line: 775, type: !57)
!5343 = !DILocalVariable(name: "__mptr", scope: !5344, file: !3, line: 775, type: !56)
!5344 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 775, column: 1)
!5345 = !DILocation(line: 775, column: 1, scope: !5344)
!5346 = !DILocation(line: 775, column: 1, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 775, column: 1)
!5348 = distinct !DISubprogram(name: "mmc_fwrev_show", scope: !3, file: !3, line: 799, type: !2550, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5349 = !DILocalVariable(name: "dev", arg: 1, scope: !5348, file: !3, line: 799, type: !67)
!5350 = !DILocation(line: 799, column: 46, scope: !5348)
!5351 = !DILocalVariable(name: "attr", arg: 2, scope: !5348, file: !3, line: 800, type: !2552)
!5352 = !DILocation(line: 800, column: 35, scope: !5348)
!5353 = !DILocalVariable(name: "buf", arg: 3, scope: !5348, file: !3, line: 801, type: !135)
!5354 = !DILocation(line: 801, column: 16, scope: !5348)
!5355 = !DILocalVariable(name: "card", scope: !5348, file: !3, line: 803, type: !57)
!5356 = !DILocation(line: 803, column: 19, scope: !5348)
!5357 = !DILocalVariable(name: "__mptr", scope: !5358, file: !3, line: 803, type: !56)
!5358 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 803, column: 26)
!5359 = !DILocation(line: 803, column: 26, scope: !5358)
!5360 = !DILocation(line: 803, column: 26, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 803, column: 26)
!5362 = !DILocation(line: 805, column: 6, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5348, file: !3, line: 805, column: 6)
!5364 = !DILocation(line: 805, column: 12, scope: !5363)
!5365 = !DILocation(line: 805, column: 20, scope: !5363)
!5366 = !DILocation(line: 805, column: 24, scope: !5363)
!5367 = !DILocation(line: 805, column: 6, scope: !5348)
!5368 = !DILocation(line: 806, column: 18, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 805, column: 29)
!5370 = !DILocation(line: 806, column: 33, scope: !5369)
!5371 = !DILocation(line: 806, column: 39, scope: !5369)
!5372 = !DILocation(line: 806, column: 43, scope: !5369)
!5373 = !DILocation(line: 806, column: 10, scope: !5369)
!5374 = !DILocation(line: 806, column: 3, scope: !5369)
!5375 = !DILocation(line: 808, column: 18, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5363, file: !3, line: 807, column: 9)
!5377 = !DILocation(line: 809, column: 11, scope: !5376)
!5378 = !DILocation(line: 809, column: 17, scope: !5376)
!5379 = !DILocation(line: 809, column: 25, scope: !5376)
!5380 = !DILocation(line: 808, column: 10, scope: !5376)
!5381 = !DILocation(line: 808, column: 3, scope: !5376)
!5382 = !DILocation(line: 811, column: 1, scope: !5348)
!5383 = distinct !DISubprogram(name: "mmc_ffu_capable_show", scope: !3, file: !3, line: 776, type: !2550, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5384 = !DILocalVariable(name: "dev", arg: 1, scope: !5383, file: !3, line: 776, type: !67)
!5385 = !DILocation(line: 776, column: 1, scope: !5383)
!5386 = !DILocalVariable(name: "attr", arg: 2, scope: !5383, file: !3, line: 776, type: !2552)
!5387 = !DILocalVariable(name: "buf", arg: 3, scope: !5383, file: !3, line: 776, type: !135)
!5388 = !DILocalVariable(name: "card", scope: !5383, file: !3, line: 776, type: !57)
!5389 = !DILocalVariable(name: "__mptr", scope: !5390, file: !3, line: 776, type: !56)
!5390 = distinct !DILexicalBlock(scope: !5383, file: !3, line: 776, column: 1)
!5391 = !DILocation(line: 776, column: 1, scope: !5390)
!5392 = !DILocation(line: 776, column: 1, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 776, column: 1)
!5394 = distinct !DISubprogram(name: "mmc_hwrev_show", scope: !3, file: !3, line: 777, type: !2550, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5395 = !DILocalVariable(name: "dev", arg: 1, scope: !5394, file: !3, line: 777, type: !67)
!5396 = !DILocation(line: 777, column: 1, scope: !5394)
!5397 = !DILocalVariable(name: "attr", arg: 2, scope: !5394, file: !3, line: 777, type: !2552)
!5398 = !DILocalVariable(name: "buf", arg: 3, scope: !5394, file: !3, line: 777, type: !135)
!5399 = !DILocalVariable(name: "card", scope: !5394, file: !3, line: 777, type: !57)
!5400 = !DILocalVariable(name: "__mptr", scope: !5401, file: !3, line: 777, type: !56)
!5401 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 777, column: 1)
!5402 = !DILocation(line: 777, column: 1, scope: !5401)
!5403 = !DILocation(line: 777, column: 1, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 777, column: 1)
!5405 = distinct !DISubprogram(name: "mmc_manfid_show", scope: !3, file: !3, line: 778, type: !2550, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5406 = !DILocalVariable(name: "dev", arg: 1, scope: !5405, file: !3, line: 778, type: !67)
!5407 = !DILocation(line: 778, column: 1, scope: !5405)
!5408 = !DILocalVariable(name: "attr", arg: 2, scope: !5405, file: !3, line: 778, type: !2552)
!5409 = !DILocalVariable(name: "buf", arg: 3, scope: !5405, file: !3, line: 778, type: !135)
!5410 = !DILocalVariable(name: "card", scope: !5405, file: !3, line: 778, type: !57)
!5411 = !DILocalVariable(name: "__mptr", scope: !5412, file: !3, line: 778, type: !56)
!5412 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 778, column: 1)
!5413 = !DILocation(line: 778, column: 1, scope: !5412)
!5414 = !DILocation(line: 778, column: 1, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 778, column: 1)
!5416 = distinct !DISubprogram(name: "mmc_name_show", scope: !3, file: !3, line: 779, type: !2550, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5417 = !DILocalVariable(name: "dev", arg: 1, scope: !5416, file: !3, line: 779, type: !67)
!5418 = !DILocation(line: 779, column: 1, scope: !5416)
!5419 = !DILocalVariable(name: "attr", arg: 2, scope: !5416, file: !3, line: 779, type: !2552)
!5420 = !DILocalVariable(name: "buf", arg: 3, scope: !5416, file: !3, line: 779, type: !135)
!5421 = !DILocalVariable(name: "card", scope: !5416, file: !3, line: 779, type: !57)
!5422 = !DILocalVariable(name: "__mptr", scope: !5423, file: !3, line: 779, type: !56)
!5423 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 779, column: 1)
!5424 = !DILocation(line: 779, column: 1, scope: !5423)
!5425 = !DILocation(line: 779, column: 1, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 779, column: 1)
!5427 = distinct !DISubprogram(name: "mmc_oemid_show", scope: !3, file: !3, line: 780, type: !2550, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5428 = !DILocalVariable(name: "dev", arg: 1, scope: !5427, file: !3, line: 780, type: !67)
!5429 = !DILocation(line: 780, column: 1, scope: !5427)
!5430 = !DILocalVariable(name: "attr", arg: 2, scope: !5427, file: !3, line: 780, type: !2552)
!5431 = !DILocalVariable(name: "buf", arg: 3, scope: !5427, file: !3, line: 780, type: !135)
!5432 = !DILocalVariable(name: "card", scope: !5427, file: !3, line: 780, type: !57)
!5433 = !DILocalVariable(name: "__mptr", scope: !5434, file: !3, line: 780, type: !56)
!5434 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 780, column: 1)
!5435 = !DILocation(line: 780, column: 1, scope: !5434)
!5436 = !DILocation(line: 780, column: 1, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 780, column: 1)
!5438 = distinct !DISubprogram(name: "mmc_prv_show", scope: !3, file: !3, line: 781, type: !2550, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5439 = !DILocalVariable(name: "dev", arg: 1, scope: !5438, file: !3, line: 781, type: !67)
!5440 = !DILocation(line: 781, column: 1, scope: !5438)
!5441 = !DILocalVariable(name: "attr", arg: 2, scope: !5438, file: !3, line: 781, type: !2552)
!5442 = !DILocalVariable(name: "buf", arg: 3, scope: !5438, file: !3, line: 781, type: !135)
!5443 = !DILocalVariable(name: "card", scope: !5438, file: !3, line: 781, type: !57)
!5444 = !DILocalVariable(name: "__mptr", scope: !5445, file: !3, line: 781, type: !56)
!5445 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 781, column: 1)
!5446 = !DILocation(line: 781, column: 1, scope: !5445)
!5447 = !DILocation(line: 781, column: 1, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 781, column: 1)
!5449 = distinct !DISubprogram(name: "mmc_rev_show", scope: !3, file: !3, line: 782, type: !2550, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5450 = !DILocalVariable(name: "dev", arg: 1, scope: !5449, file: !3, line: 782, type: !67)
!5451 = !DILocation(line: 782, column: 1, scope: !5449)
!5452 = !DILocalVariable(name: "attr", arg: 2, scope: !5449, file: !3, line: 782, type: !2552)
!5453 = !DILocalVariable(name: "buf", arg: 3, scope: !5449, file: !3, line: 782, type: !135)
!5454 = !DILocalVariable(name: "card", scope: !5449, file: !3, line: 782, type: !57)
!5455 = !DILocalVariable(name: "__mptr", scope: !5456, file: !3, line: 782, type: !56)
!5456 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 782, column: 1)
!5457 = !DILocation(line: 782, column: 1, scope: !5456)
!5458 = !DILocation(line: 782, column: 1, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5456, file: !3, line: 782, column: 1)
!5460 = distinct !DISubprogram(name: "mmc_pre_eol_info_show", scope: !3, file: !3, line: 783, type: !2550, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5461 = !DILocalVariable(name: "dev", arg: 1, scope: !5460, file: !3, line: 783, type: !67)
!5462 = !DILocation(line: 783, column: 1, scope: !5460)
!5463 = !DILocalVariable(name: "attr", arg: 2, scope: !5460, file: !3, line: 783, type: !2552)
!5464 = !DILocalVariable(name: "buf", arg: 3, scope: !5460, file: !3, line: 783, type: !135)
!5465 = !DILocalVariable(name: "card", scope: !5460, file: !3, line: 783, type: !57)
!5466 = !DILocalVariable(name: "__mptr", scope: !5467, file: !3, line: 783, type: !56)
!5467 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 783, column: 1)
!5468 = !DILocation(line: 783, column: 1, scope: !5467)
!5469 = !DILocation(line: 783, column: 1, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5467, file: !3, line: 783, column: 1)
!5471 = distinct !DISubprogram(name: "mmc_life_time_show", scope: !3, file: !3, line: 784, type: !2550, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5472 = !DILocalVariable(name: "dev", arg: 1, scope: !5471, file: !3, line: 784, type: !67)
!5473 = !DILocation(line: 784, column: 1, scope: !5471)
!5474 = !DILocalVariable(name: "attr", arg: 2, scope: !5471, file: !3, line: 784, type: !2552)
!5475 = !DILocalVariable(name: "buf", arg: 3, scope: !5471, file: !3, line: 784, type: !135)
!5476 = !DILocalVariable(name: "card", scope: !5471, file: !3, line: 784, type: !57)
!5477 = !DILocalVariable(name: "__mptr", scope: !5478, file: !3, line: 784, type: !56)
!5478 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 784, column: 1)
!5479 = !DILocation(line: 784, column: 1, scope: !5478)
!5480 = !DILocation(line: 784, column: 1, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 784, column: 1)
!5482 = distinct !DISubprogram(name: "mmc_serial_show", scope: !3, file: !3, line: 787, type: !2550, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5483 = !DILocalVariable(name: "dev", arg: 1, scope: !5482, file: !3, line: 787, type: !67)
!5484 = !DILocation(line: 787, column: 1, scope: !5482)
!5485 = !DILocalVariable(name: "attr", arg: 2, scope: !5482, file: !3, line: 787, type: !2552)
!5486 = !DILocalVariable(name: "buf", arg: 3, scope: !5482, file: !3, line: 787, type: !135)
!5487 = !DILocalVariable(name: "card", scope: !5482, file: !3, line: 787, type: !57)
!5488 = !DILocalVariable(name: "__mptr", scope: !5489, file: !3, line: 787, type: !56)
!5489 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 787, column: 1)
!5490 = !DILocation(line: 787, column: 1, scope: !5489)
!5491 = !DILocation(line: 787, column: 1, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 787, column: 1)
!5493 = distinct !DISubprogram(name: "mmc_enhanced_area_offset_show", scope: !3, file: !3, line: 788, type: !2550, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5494 = !DILocalVariable(name: "dev", arg: 1, scope: !5493, file: !3, line: 788, type: !67)
!5495 = !DILocation(line: 788, column: 1, scope: !5493)
!5496 = !DILocalVariable(name: "attr", arg: 2, scope: !5493, file: !3, line: 788, type: !2552)
!5497 = !DILocalVariable(name: "buf", arg: 3, scope: !5493, file: !3, line: 788, type: !135)
!5498 = !DILocalVariable(name: "card", scope: !5493, file: !3, line: 788, type: !57)
!5499 = !DILocalVariable(name: "__mptr", scope: !5500, file: !3, line: 788, type: !56)
!5500 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 788, column: 1)
!5501 = !DILocation(line: 788, column: 1, scope: !5500)
!5502 = !DILocation(line: 788, column: 1, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 788, column: 1)
!5504 = distinct !DISubprogram(name: "mmc_enhanced_area_size_show", scope: !3, file: !3, line: 790, type: !2550, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5505 = !DILocalVariable(name: "dev", arg: 1, scope: !5504, file: !3, line: 790, type: !67)
!5506 = !DILocation(line: 790, column: 1, scope: !5504)
!5507 = !DILocalVariable(name: "attr", arg: 2, scope: !5504, file: !3, line: 790, type: !2552)
!5508 = !DILocalVariable(name: "buf", arg: 3, scope: !5504, file: !3, line: 790, type: !135)
!5509 = !DILocalVariable(name: "card", scope: !5504, file: !3, line: 790, type: !57)
!5510 = !DILocalVariable(name: "__mptr", scope: !5511, file: !3, line: 790, type: !56)
!5511 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 790, column: 1)
!5512 = !DILocation(line: 790, column: 1, scope: !5511)
!5513 = !DILocation(line: 790, column: 1, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 790, column: 1)
!5515 = distinct !DISubprogram(name: "mmc_raw_rpmb_size_mult_show", scope: !3, file: !3, line: 791, type: !2550, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5516 = !DILocalVariable(name: "dev", arg: 1, scope: !5515, file: !3, line: 791, type: !67)
!5517 = !DILocation(line: 791, column: 1, scope: !5515)
!5518 = !DILocalVariable(name: "attr", arg: 2, scope: !5515, file: !3, line: 791, type: !2552)
!5519 = !DILocalVariable(name: "buf", arg: 3, scope: !5515, file: !3, line: 791, type: !135)
!5520 = !DILocalVariable(name: "card", scope: !5515, file: !3, line: 791, type: !57)
!5521 = !DILocalVariable(name: "__mptr", scope: !5522, file: !3, line: 791, type: !56)
!5522 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 791, column: 1)
!5523 = !DILocation(line: 791, column: 1, scope: !5522)
!5524 = !DILocation(line: 791, column: 1, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 791, column: 1)
!5526 = distinct !DISubprogram(name: "mmc_enhanced_rpmb_supported_show", scope: !3, file: !3, line: 792, type: !2550, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5527 = !DILocalVariable(name: "dev", arg: 1, scope: !5526, file: !3, line: 792, type: !67)
!5528 = !DILocation(line: 792, column: 1, scope: !5526)
!5529 = !DILocalVariable(name: "attr", arg: 2, scope: !5526, file: !3, line: 792, type: !2552)
!5530 = !DILocalVariable(name: "buf", arg: 3, scope: !5526, file: !3, line: 792, type: !135)
!5531 = !DILocalVariable(name: "card", scope: !5526, file: !3, line: 792, type: !57)
!5532 = !DILocalVariable(name: "__mptr", scope: !5533, file: !3, line: 792, type: !56)
!5533 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 792, column: 1)
!5534 = !DILocation(line: 792, column: 1, scope: !5533)
!5535 = !DILocation(line: 792, column: 1, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 792, column: 1)
!5537 = distinct !DISubprogram(name: "mmc_rel_sectors_show", scope: !3, file: !3, line: 794, type: !2550, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5538 = !DILocalVariable(name: "dev", arg: 1, scope: !5537, file: !3, line: 794, type: !67)
!5539 = !DILocation(line: 794, column: 1, scope: !5537)
!5540 = !DILocalVariable(name: "attr", arg: 2, scope: !5537, file: !3, line: 794, type: !2552)
!5541 = !DILocalVariable(name: "buf", arg: 3, scope: !5537, file: !3, line: 794, type: !135)
!5542 = !DILocalVariable(name: "card", scope: !5537, file: !3, line: 794, type: !57)
!5543 = !DILocalVariable(name: "__mptr", scope: !5544, file: !3, line: 794, type: !56)
!5544 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 794, column: 1)
!5545 = !DILocation(line: 794, column: 1, scope: !5544)
!5546 = !DILocation(line: 794, column: 1, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 794, column: 1)
!5548 = distinct !DISubprogram(name: "mmc_ocr_show", scope: !3, file: !3, line: 795, type: !2550, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5549 = !DILocalVariable(name: "dev", arg: 1, scope: !5548, file: !3, line: 795, type: !67)
!5550 = !DILocation(line: 795, column: 1, scope: !5548)
!5551 = !DILocalVariable(name: "attr", arg: 2, scope: !5548, file: !3, line: 795, type: !2552)
!5552 = !DILocalVariable(name: "buf", arg: 3, scope: !5548, file: !3, line: 795, type: !135)
!5553 = !DILocalVariable(name: "card", scope: !5548, file: !3, line: 795, type: !57)
!5554 = !DILocalVariable(name: "__mptr", scope: !5555, file: !3, line: 795, type: !56)
!5555 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 795, column: 1)
!5556 = !DILocation(line: 795, column: 1, scope: !5555)
!5557 = !DILocation(line: 795, column: 1, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 795, column: 1)
!5559 = distinct !DISubprogram(name: "mmc_rca_show", scope: !3, file: !3, line: 796, type: !2550, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5560 = !DILocalVariable(name: "dev", arg: 1, scope: !5559, file: !3, line: 796, type: !67)
!5561 = !DILocation(line: 796, column: 1, scope: !5559)
!5562 = !DILocalVariable(name: "attr", arg: 2, scope: !5559, file: !3, line: 796, type: !2552)
!5563 = !DILocalVariable(name: "buf", arg: 3, scope: !5559, file: !3, line: 796, type: !135)
!5564 = !DILocalVariable(name: "card", scope: !5559, file: !3, line: 796, type: !57)
!5565 = !DILocalVariable(name: "__mptr", scope: !5566, file: !3, line: 796, type: !56)
!5566 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 796, column: 1)
!5567 = !DILocation(line: 796, column: 1, scope: !5566)
!5568 = !DILocation(line: 796, column: 1, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 796, column: 1)
!5570 = distinct !DISubprogram(name: "mmc_dsr_show", scope: !3, file: !3, line: 815, type: !2550, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5571 = !DILocalVariable(name: "dev", arg: 1, scope: !5570, file: !3, line: 815, type: !67)
!5572 = !DILocation(line: 815, column: 44, scope: !5570)
!5573 = !DILocalVariable(name: "attr", arg: 2, scope: !5570, file: !3, line: 816, type: !2552)
!5574 = !DILocation(line: 816, column: 33, scope: !5570)
!5575 = !DILocalVariable(name: "buf", arg: 3, scope: !5570, file: !3, line: 817, type: !135)
!5576 = !DILocation(line: 817, column: 14, scope: !5570)
!5577 = !DILocalVariable(name: "card", scope: !5570, file: !3, line: 819, type: !57)
!5578 = !DILocation(line: 819, column: 19, scope: !5570)
!5579 = !DILocalVariable(name: "__mptr", scope: !5580, file: !3, line: 819, type: !56)
!5580 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 819, column: 26)
!5581 = !DILocation(line: 819, column: 26, scope: !5580)
!5582 = !DILocation(line: 819, column: 26, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 819, column: 26)
!5584 = !DILocalVariable(name: "host", scope: !5570, file: !3, line: 820, type: !62)
!5585 = !DILocation(line: 820, column: 19, scope: !5570)
!5586 = !DILocation(line: 820, column: 26, scope: !5570)
!5587 = !DILocation(line: 820, column: 32, scope: !5570)
!5588 = !DILocation(line: 822, column: 6, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 822, column: 6)
!5590 = !DILocation(line: 822, column: 12, scope: !5589)
!5591 = !DILocation(line: 822, column: 16, scope: !5589)
!5592 = !DILocation(line: 822, column: 24, scope: !5589)
!5593 = !DILocation(line: 822, column: 27, scope: !5589)
!5594 = !DILocation(line: 822, column: 33, scope: !5589)
!5595 = !DILocation(line: 822, column: 6, scope: !5570)
!5596 = !DILocation(line: 823, column: 18, scope: !5589)
!5597 = !DILocation(line: 823, column: 33, scope: !5589)
!5598 = !DILocation(line: 823, column: 39, scope: !5589)
!5599 = !DILocation(line: 823, column: 10, scope: !5589)
!5600 = !DILocation(line: 823, column: 3, scope: !5589)
!5601 = !DILocation(line: 826, column: 18, scope: !5589)
!5602 = !DILocation(line: 826, column: 10, scope: !5589)
!5603 = !DILocation(line: 826, column: 3, scope: !5589)
!5604 = !DILocation(line: 827, column: 1, scope: !5570)
!5605 = distinct !DISubprogram(name: "mmc_cmdq_en_show", scope: !3, file: !3, line: 797, type: !2550, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5606 = !DILocalVariable(name: "dev", arg: 1, scope: !5605, file: !3, line: 797, type: !67)
!5607 = !DILocation(line: 797, column: 1, scope: !5605)
!5608 = !DILocalVariable(name: "attr", arg: 2, scope: !5605, file: !3, line: 797, type: !2552)
!5609 = !DILocalVariable(name: "buf", arg: 3, scope: !5605, file: !3, line: 797, type: !135)
!5610 = !DILocalVariable(name: "card", scope: !5605, file: !3, line: 797, type: !57)
!5611 = !DILocalVariable(name: "__mptr", scope: !5612, file: !3, line: 797, type: !56)
!5612 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 797, column: 1)
!5613 = !DILocation(line: 797, column: 1, scope: !5612)
!5614 = !DILocation(line: 797, column: 1, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 797, column: 1)
!5616 = distinct !DISubprogram(name: "mmc_decode_ext_csd", scope: !3, file: !3, line: 361, type: !5617, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!5617 = !DISubroutineType(types: !5618)
!5618 = !{!119, !57, !4906}
!5619 = !DILocalVariable(name: "card", arg: 1, scope: !5616, file: !3, line: 361, type: !57)
!5620 = !DILocation(line: 361, column: 48, scope: !5616)
!5621 = !DILocalVariable(name: "ext_csd", arg: 2, scope: !5616, file: !3, line: 361, type: !4906)
!5622 = !DILocation(line: 361, column: 58, scope: !5616)
!5623 = !DILocalVariable(name: "err", scope: !5616, file: !3, line: 363, type: !119)
!5624 = !DILocation(line: 363, column: 6, scope: !5616)
!5625 = !DILocalVariable(name: "idx", scope: !5616, file: !3, line: 363, type: !119)
!5626 = !DILocation(line: 363, column: 15, scope: !5616)
!5627 = !DILocalVariable(name: "part_size", scope: !5616, file: !3, line: 364, type: !254)
!5628 = !DILocation(line: 364, column: 6, scope: !5616)
!5629 = !DILocalVariable(name: "np", scope: !5616, file: !3, line: 365, type: !1862)
!5630 = !DILocation(line: 365, column: 22, scope: !5616)
!5631 = !DILocalVariable(name: "broken_hpi", scope: !5616, file: !3, line: 366, type: !962)
!5632 = !DILocation(line: 366, column: 7, scope: !5616)
!5633 = !DILocation(line: 369, column: 40, scope: !5616)
!5634 = !DILocation(line: 369, column: 2, scope: !5616)
!5635 = !DILocation(line: 369, column: 8, scope: !5616)
!5636 = !DILocation(line: 369, column: 16, scope: !5616)
!5637 = !DILocation(line: 369, column: 38, scope: !5616)
!5638 = !DILocation(line: 370, column: 6, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 370, column: 6)
!5640 = !DILocation(line: 370, column: 12, scope: !5639)
!5641 = !DILocation(line: 370, column: 16, scope: !5639)
!5642 = !DILocation(line: 370, column: 26, scope: !5639)
!5643 = !DILocation(line: 370, column: 6, scope: !5616)
!5644 = !DILocation(line: 371, column: 7, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 371, column: 7)
!5646 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 370, column: 32)
!5647 = !DILocation(line: 371, column: 13, scope: !5645)
!5648 = !DILocation(line: 371, column: 21, scope: !5645)
!5649 = !DILocation(line: 371, column: 43, scope: !5645)
!5650 = !DILocation(line: 371, column: 7, scope: !5646)
!5651 = !DILocation(line: 372, column: 4, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 371, column: 48)
!5653 = !DILocation(line: 375, column: 8, scope: !5652)
!5654 = !DILocation(line: 376, column: 4, scope: !5652)
!5655 = !DILocation(line: 378, column: 2, scope: !5646)
!5656 = !DILocation(line: 380, column: 32, scope: !5616)
!5657 = !DILocation(line: 380, column: 38, scope: !5616)
!5658 = !DILocation(line: 380, column: 7, scope: !5616)
!5659 = !DILocation(line: 380, column: 5, scope: !5616)
!5660 = !DILocation(line: 381, column: 6, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 381, column: 6)
!5662 = !DILocation(line: 381, column: 9, scope: !5661)
!5663 = !DILocation(line: 381, column: 36, scope: !5661)
!5664 = !DILocation(line: 381, column: 12, scope: !5661)
!5665 = !DILocation(line: 381, column: 6, scope: !5616)
!5666 = !DILocation(line: 382, column: 38, scope: !5661)
!5667 = !DILocation(line: 382, column: 16, scope: !5661)
!5668 = !DILocation(line: 382, column: 14, scope: !5661)
!5669 = !DILocation(line: 382, column: 3, scope: !5661)
!5670 = !DILocation(line: 383, column: 14, scope: !5616)
!5671 = !DILocation(line: 383, column: 2, scope: !5616)
!5672 = !DILocation(line: 390, column: 22, scope: !5616)
!5673 = !DILocation(line: 390, column: 2, scope: !5616)
!5674 = !DILocation(line: 390, column: 8, scope: !5616)
!5675 = !DILocation(line: 390, column: 16, scope: !5616)
!5676 = !DILocation(line: 390, column: 20, scope: !5616)
!5677 = !DILocation(line: 393, column: 19, scope: !5616)
!5678 = !DILocation(line: 393, column: 2, scope: !5616)
!5679 = !DILocation(line: 395, column: 33, scope: !5616)
!5680 = !DILocation(line: 395, column: 2, scope: !5616)
!5681 = !DILocation(line: 395, column: 8, scope: !5616)
!5682 = !DILocation(line: 395, column: 16, scope: !5616)
!5683 = !DILocation(line: 395, column: 31, scope: !5616)
!5684 = !DILocation(line: 396, column: 33, scope: !5616)
!5685 = !DILocation(line: 396, column: 2, scope: !5616)
!5686 = !DILocation(line: 396, column: 8, scope: !5616)
!5687 = !DILocation(line: 396, column: 16, scope: !5616)
!5688 = !DILocation(line: 396, column: 31, scope: !5616)
!5689 = !DILocation(line: 397, column: 33, scope: !5616)
!5690 = !DILocation(line: 397, column: 2, scope: !5616)
!5691 = !DILocation(line: 397, column: 8, scope: !5616)
!5692 = !DILocation(line: 397, column: 16, scope: !5616)
!5693 = !DILocation(line: 397, column: 31, scope: !5616)
!5694 = !DILocation(line: 398, column: 33, scope: !5616)
!5695 = !DILocation(line: 398, column: 2, scope: !5616)
!5696 = !DILocation(line: 398, column: 8, scope: !5616)
!5697 = !DILocation(line: 398, column: 16, scope: !5616)
!5698 = !DILocation(line: 398, column: 31, scope: !5616)
!5699 = !DILocation(line: 399, column: 6, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 399, column: 6)
!5701 = !DILocation(line: 399, column: 12, scope: !5700)
!5702 = !DILocation(line: 399, column: 20, scope: !5700)
!5703 = !DILocation(line: 399, column: 24, scope: !5700)
!5704 = !DILocation(line: 399, column: 6, scope: !5616)
!5705 = !DILocation(line: 401, column: 4, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 399, column: 30)
!5707 = !DILocation(line: 401, column: 33, scope: !5706)
!5708 = !DILocation(line: 402, column: 4, scope: !5706)
!5709 = !DILocation(line: 402, column: 33, scope: !5706)
!5710 = !DILocation(line: 401, column: 38, scope: !5706)
!5711 = !DILocation(line: 403, column: 4, scope: !5706)
!5712 = !DILocation(line: 403, column: 33, scope: !5706)
!5713 = !DILocation(line: 402, column: 38, scope: !5706)
!5714 = !DILocation(line: 404, column: 4, scope: !5706)
!5715 = !DILocation(line: 404, column: 33, scope: !5706)
!5716 = !DILocation(line: 403, column: 39, scope: !5706)
!5717 = !DILocation(line: 400, column: 3, scope: !5706)
!5718 = !DILocation(line: 400, column: 9, scope: !5706)
!5719 = !DILocation(line: 400, column: 17, scope: !5706)
!5720 = !DILocation(line: 400, column: 25, scope: !5706)
!5721 = !DILocation(line: 407, column: 7, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 407, column: 7)
!5723 = !DILocation(line: 407, column: 13, scope: !5722)
!5724 = !DILocation(line: 407, column: 21, scope: !5722)
!5725 = !DILocation(line: 407, column: 29, scope: !5722)
!5726 = !DILocation(line: 407, column: 7, scope: !5706)
!5727 = !DILocation(line: 408, column: 4, scope: !5722)
!5728 = !DILocation(line: 409, column: 2, scope: !5706)
!5729 = !DILocation(line: 411, column: 33, scope: !5616)
!5730 = !DILocation(line: 411, column: 2, scope: !5616)
!5731 = !DILocation(line: 411, column: 8, scope: !5616)
!5732 = !DILocation(line: 411, column: 16, scope: !5616)
!5733 = !DILocation(line: 411, column: 31, scope: !5616)
!5734 = !DILocation(line: 412, column: 32, scope: !5616)
!5735 = !DILocation(line: 412, column: 2, scope: !5616)
!5736 = !DILocation(line: 412, column: 8, scope: !5616)
!5737 = !DILocation(line: 412, column: 16, scope: !5616)
!5738 = !DILocation(line: 412, column: 30, scope: !5616)
!5739 = !DILocation(line: 413, column: 23, scope: !5616)
!5740 = !DILocation(line: 413, column: 2, scope: !5616)
!5741 = !DILocation(line: 415, column: 34, scope: !5616)
!5742 = !DILocation(line: 415, column: 2, scope: !5616)
!5743 = !DILocation(line: 415, column: 8, scope: !5616)
!5744 = !DILocation(line: 415, column: 16, scope: !5616)
!5745 = !DILocation(line: 415, column: 32, scope: !5616)
!5746 = !DILocation(line: 417, column: 3, scope: !5616)
!5747 = !DILocation(line: 416, column: 2, scope: !5616)
!5748 = !DILocation(line: 416, column: 8, scope: !5616)
!5749 = !DILocation(line: 416, column: 16, scope: !5616)
!5750 = !DILocation(line: 416, column: 39, scope: !5616)
!5751 = !DILocation(line: 419, column: 3, scope: !5616)
!5752 = !DILocation(line: 418, column: 2, scope: !5616)
!5753 = !DILocation(line: 418, column: 8, scope: !5616)
!5754 = !DILocation(line: 418, column: 16, scope: !5616)
!5755 = !DILocation(line: 418, column: 38, scope: !5616)
!5756 = !DILocation(line: 420, column: 6, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 420, column: 6)
!5758 = !DILocation(line: 420, column: 12, scope: !5757)
!5759 = !DILocation(line: 420, column: 20, scope: !5757)
!5760 = !DILocation(line: 420, column: 24, scope: !5757)
!5761 = !DILocation(line: 420, column: 6, scope: !5616)
!5762 = !DILocalVariable(name: "sa_shift", scope: !5763, file: !3, line: 421, type: !529)
!5763 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 420, column: 30)
!5764 = !DILocation(line: 421, column: 6, scope: !5763)
!5765 = !DILocation(line: 421, column: 17, scope: !5763)
!5766 = !DILocation(line: 422, column: 31, scope: !5763)
!5767 = !DILocation(line: 422, column: 3, scope: !5763)
!5768 = !DILocation(line: 422, column: 9, scope: !5763)
!5769 = !DILocation(line: 422, column: 17, scope: !5763)
!5770 = !DILocation(line: 422, column: 29, scope: !5763)
!5771 = !DILocation(line: 425, column: 34, scope: !5763)
!5772 = !DILocation(line: 425, column: 32, scope: !5763)
!5773 = !DILocation(line: 425, column: 3, scope: !5763)
!5774 = !DILocation(line: 425, column: 9, scope: !5763)
!5775 = !DILocation(line: 425, column: 17, scope: !5763)
!5776 = !DILocation(line: 425, column: 27, scope: !5763)
!5777 = !DILocation(line: 427, column: 7, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 427, column: 7)
!5779 = !DILocation(line: 427, column: 13, scope: !5778)
!5780 = !DILocation(line: 427, column: 21, scope: !5778)
!5781 = !DILocation(line: 427, column: 31, scope: !5778)
!5782 = !DILocation(line: 428, column: 7, scope: !5778)
!5783 = !DILocation(line: 428, column: 13, scope: !5778)
!5784 = !DILocation(line: 428, column: 21, scope: !5778)
!5785 = !DILocation(line: 428, column: 31, scope: !5778)
!5786 = !DILocation(line: 427, column: 7, scope: !5763)
!5787 = !DILocation(line: 429, column: 4, scope: !5778)
!5788 = !DILocation(line: 429, column: 10, scope: !5778)
!5789 = !DILocation(line: 429, column: 18, scope: !5778)
!5790 = !DILocation(line: 429, column: 28, scope: !5778)
!5791 = !DILocation(line: 432, column: 7, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 432, column: 7)
!5793 = !DILocation(line: 432, column: 16, scope: !5792)
!5794 = !DILocation(line: 432, column: 20, scope: !5792)
!5795 = !DILocation(line: 432, column: 23, scope: !5792)
!5796 = !DILocation(line: 432, column: 32, scope: !5792)
!5797 = !DILocation(line: 432, column: 7, scope: !5763)
!5798 = !DILocation(line: 434, column: 11, scope: !5792)
!5799 = !DILocation(line: 434, column: 8, scope: !5792)
!5800 = !DILocation(line: 433, column: 4, scope: !5792)
!5801 = !DILocation(line: 433, column: 10, scope: !5792)
!5802 = !DILocation(line: 433, column: 18, scope: !5792)
!5803 = !DILocation(line: 433, column: 29, scope: !5792)
!5804 = !DILocation(line: 436, column: 4, scope: !5763)
!5805 = !DILocation(line: 435, column: 3, scope: !5763)
!5806 = !DILocation(line: 435, column: 9, scope: !5763)
!5807 = !DILocation(line: 435, column: 17, scope: !5763)
!5808 = !DILocation(line: 435, column: 33, scope: !5763)
!5809 = !DILocation(line: 438, column: 4, scope: !5763)
!5810 = !DILocation(line: 437, column: 40, scope: !5763)
!5811 = !DILocation(line: 437, column: 3, scope: !5763)
!5812 = !DILocation(line: 437, column: 9, scope: !5763)
!5813 = !DILocation(line: 437, column: 17, scope: !5763)
!5814 = !DILocation(line: 437, column: 34, scope: !5763)
!5815 = !DILocation(line: 440, column: 4, scope: !5763)
!5816 = !DILocation(line: 440, column: 39, scope: !5763)
!5817 = !DILocation(line: 439, column: 3, scope: !5763)
!5818 = !DILocation(line: 439, column: 9, scope: !5763)
!5819 = !DILocation(line: 439, column: 17, scope: !5763)
!5820 = !DILocation(line: 439, column: 31, scope: !5763)
!5821 = !DILocation(line: 442, column: 31, scope: !5763)
!5822 = !DILocation(line: 442, column: 3, scope: !5763)
!5823 = !DILocation(line: 442, column: 9, scope: !5763)
!5824 = !DILocation(line: 442, column: 17, scope: !5763)
!5825 = !DILocation(line: 442, column: 29, scope: !5763)
!5826 = !DILocation(line: 448, column: 7, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 448, column: 7)
!5828 = !DILocation(line: 448, column: 34, scope: !5827)
!5829 = !DILocation(line: 448, column: 63, scope: !5827)
!5830 = !DILocation(line: 448, column: 69, scope: !5827)
!5831 = !DILocation(line: 448, column: 37, scope: !5827)
!5832 = !DILocation(line: 448, column: 7, scope: !5763)
!5833 = !DILocation(line: 449, column: 13, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 449, column: 4)
!5835 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 448, column: 76)
!5836 = !DILocation(line: 449, column: 9, scope: !5834)
!5837 = !DILocation(line: 449, column: 18, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 449, column: 4)
!5839 = !DILocation(line: 449, column: 22, scope: !5838)
!5840 = !DILocation(line: 449, column: 4, scope: !5834)
!5841 = !DILocation(line: 450, column: 17, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 449, column: 55)
!5843 = !DILocation(line: 450, column: 44, scope: !5842)
!5844 = !DILocation(line: 450, column: 15, scope: !5842)
!5845 = !DILocation(line: 451, column: 18, scope: !5842)
!5846 = !DILocation(line: 451, column: 24, scope: !5842)
!5847 = !DILocation(line: 452, column: 38, scope: !5842)
!5848 = !DILocation(line: 452, column: 36, scope: !5842)
!5849 = !DILocation(line: 453, column: 16, scope: !5842)
!5850 = !DILocation(line: 451, column: 5, scope: !5842)
!5851 = !DILocation(line: 455, column: 4, scope: !5842)
!5852 = !DILocation(line: 449, column: 51, scope: !5838)
!5853 = !DILocation(line: 449, column: 4, scope: !5838)
!5854 = distinct !{!5854, !5840, !5855}
!5855 = !DILocation(line: 455, column: 4, scope: !5834)
!5856 = !DILocation(line: 456, column: 3, scope: !5835)
!5857 = !DILocation(line: 457, column: 2, scope: !5763)
!5858 = !DILocation(line: 460, column: 3, scope: !5616)
!5859 = !DILocation(line: 459, column: 2, scope: !5616)
!5860 = !DILocation(line: 459, column: 8, scope: !5616)
!5861 = !DILocation(line: 459, column: 16, scope: !5616)
!5862 = !DILocation(line: 459, column: 38, scope: !5616)
!5863 = !DILocation(line: 462, column: 3, scope: !5616)
!5864 = !DILocation(line: 461, column: 2, scope: !5616)
!5865 = !DILocation(line: 461, column: 8, scope: !5616)
!5866 = !DILocation(line: 461, column: 16, scope: !5616)
!5867 = !DILocation(line: 461, column: 34, scope: !5616)
!5868 = !DILocation(line: 464, column: 3, scope: !5616)
!5869 = !DILocation(line: 463, column: 2, scope: !5616)
!5870 = !DILocation(line: 463, column: 8, scope: !5616)
!5871 = !DILocation(line: 463, column: 16, scope: !5616)
!5872 = !DILocation(line: 463, column: 35, scope: !5616)
!5873 = !DILocation(line: 466, column: 3, scope: !5616)
!5874 = !DILocation(line: 465, column: 2, scope: !5616)
!5875 = !DILocation(line: 465, column: 8, scope: !5616)
!5876 = !DILocation(line: 465, column: 16, scope: !5616)
!5877 = !DILocation(line: 465, column: 40, scope: !5616)
!5878 = !DILocation(line: 468, column: 3, scope: !5616)
!5879 = !DILocation(line: 467, column: 2, scope: !5616)
!5880 = !DILocation(line: 467, column: 8, scope: !5616)
!5881 = !DILocation(line: 467, column: 16, scope: !5616)
!5882 = !DILocation(line: 467, column: 30, scope: !5616)
!5883 = !DILocation(line: 469, column: 40, scope: !5616)
!5884 = !DILocation(line: 469, column: 2, scope: !5616)
!5885 = !DILocation(line: 469, column: 8, scope: !5616)
!5886 = !DILocation(line: 469, column: 16, scope: !5616)
!5887 = !DILocation(line: 469, column: 38, scope: !5616)
!5888 = !DILocation(line: 470, column: 38, scope: !5616)
!5889 = !DILocation(line: 470, column: 2, scope: !5616)
!5890 = !DILocation(line: 470, column: 8, scope: !5616)
!5891 = !DILocation(line: 470, column: 16, scope: !5616)
!5892 = !DILocation(line: 470, column: 36, scope: !5616)
!5893 = !DILocation(line: 471, column: 6, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 471, column: 6)
!5895 = !DILocation(line: 471, column: 12, scope: !5894)
!5896 = !DILocation(line: 471, column: 20, scope: !5894)
!5897 = !DILocation(line: 471, column: 24, scope: !5894)
!5898 = !DILocation(line: 471, column: 6, scope: !5616)
!5899 = !DILocation(line: 472, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 472, column: 7)
!5901 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 471, column: 30)
!5902 = !DILocation(line: 472, column: 52, scope: !5900)
!5903 = !DILocation(line: 472, column: 7, scope: !5901)
!5904 = !DILocation(line: 474, column: 4, scope: !5900)
!5905 = !DILocation(line: 474, column: 10, scope: !5900)
!5906 = !DILocation(line: 474, column: 18, scope: !5900)
!5907 = !DILocation(line: 474, column: 46, scope: !5900)
!5908 = !DILocation(line: 476, column: 4, scope: !5900)
!5909 = !DILocation(line: 476, column: 10, scope: !5900)
!5910 = !DILocation(line: 476, column: 18, scope: !5900)
!5911 = !DILocation(line: 476, column: 46, scope: !5900)
!5912 = !DILocation(line: 478, column: 28, scope: !5901)
!5913 = !DILocation(line: 478, column: 34, scope: !5901)
!5914 = !DILocation(line: 478, column: 3, scope: !5901)
!5915 = !DILocation(line: 480, column: 28, scope: !5901)
!5916 = !DILocation(line: 480, column: 34, scope: !5901)
!5917 = !DILocation(line: 480, column: 3, scope: !5901)
!5918 = !DILocation(line: 483, column: 4, scope: !5901)
!5919 = !DILocation(line: 482, column: 3, scope: !5901)
!5920 = !DILocation(line: 482, column: 9, scope: !5901)
!5921 = !DILocation(line: 482, column: 17, scope: !5901)
!5922 = !DILocation(line: 482, column: 31, scope: !5901)
!5923 = !DILocation(line: 485, column: 4, scope: !5901)
!5924 = !DILocation(line: 484, column: 3, scope: !5901)
!5925 = !DILocation(line: 484, column: 9, scope: !5901)
!5926 = !DILocation(line: 484, column: 17, scope: !5901)
!5927 = !DILocation(line: 484, column: 32, scope: !5901)
!5928 = !DILocation(line: 487, column: 4, scope: !5901)
!5929 = !DILocation(line: 486, column: 3, scope: !5901)
!5930 = !DILocation(line: 486, column: 9, scope: !5901)
!5931 = !DILocation(line: 486, column: 17, scope: !5901)
!5932 = !DILocation(line: 486, column: 37, scope: !5901)
!5933 = !DILocation(line: 489, column: 4, scope: !5901)
!5934 = !DILocation(line: 488, column: 36, scope: !5901)
!5935 = !DILocation(line: 488, column: 3, scope: !5901)
!5936 = !DILocation(line: 488, column: 9, scope: !5901)
!5937 = !DILocation(line: 488, column: 17, scope: !5901)
!5938 = !DILocation(line: 488, column: 30, scope: !5901)
!5939 = !DILocation(line: 496, column: 32, scope: !5901)
!5940 = !DILocation(line: 496, column: 3, scope: !5901)
!5941 = !DILocation(line: 496, column: 9, scope: !5901)
!5942 = !DILocation(line: 496, column: 17, scope: !5901)
!5943 = !DILocation(line: 496, column: 30, scope: !5901)
!5944 = !DILocation(line: 497, column: 3, scope: !5901)
!5945 = !DILocation(line: 497, column: 9, scope: !5901)
!5946 = !DILocation(line: 497, column: 17, scope: !5901)
!5947 = !DILocation(line: 497, column: 34, scope: !5901)
!5948 = !DILocation(line: 501, column: 4, scope: !5901)
!5949 = !DILocation(line: 500, column: 3, scope: !5901)
!5950 = !DILocation(line: 500, column: 9, scope: !5901)
!5951 = !DILocation(line: 500, column: 17, scope: !5901)
!5952 = !DILocation(line: 500, column: 35, scope: !5901)
!5953 = !DILocation(line: 503, column: 4, scope: !5901)
!5954 = !DILocation(line: 502, column: 3, scope: !5901)
!5955 = !DILocation(line: 502, column: 9, scope: !5901)
!5956 = !DILocation(line: 502, column: 17, scope: !5901)
!5957 = !DILocation(line: 502, column: 35, scope: !5901)
!5958 = !DILocation(line: 505, column: 4, scope: !5901)
!5959 = !DILocation(line: 504, column: 3, scope: !5901)
!5960 = !DILocation(line: 504, column: 9, scope: !5901)
!5961 = !DILocation(line: 504, column: 17, scope: !5901)
!5962 = !DILocation(line: 504, column: 35, scope: !5901)
!5963 = !DILocation(line: 507, column: 4, scope: !5901)
!5964 = !DILocation(line: 506, column: 3, scope: !5901)
!5965 = !DILocation(line: 506, column: 9, scope: !5901)
!5966 = !DILocation(line: 506, column: 17, scope: !5901)
!5967 = !DILocation(line: 506, column: 35, scope: !5901)
!5968 = !DILocation(line: 509, column: 4, scope: !5901)
!5969 = !DILocation(line: 508, column: 3, scope: !5901)
!5970 = !DILocation(line: 508, column: 9, scope: !5901)
!5971 = !DILocation(line: 508, column: 17, scope: !5901)
!5972 = !DILocation(line: 508, column: 36, scope: !5901)
!5973 = !DILocation(line: 511, column: 4, scope: !5901)
!5974 = !DILocation(line: 510, column: 3, scope: !5901)
!5975 = !DILocation(line: 510, column: 9, scope: !5901)
!5976 = !DILocation(line: 510, column: 17, scope: !5901)
!5977 = !DILocation(line: 510, column: 36, scope: !5901)
!5978 = !DILocation(line: 513, column: 4, scope: !5901)
!5979 = !DILocation(line: 512, column: 3, scope: !5901)
!5980 = !DILocation(line: 512, column: 9, scope: !5901)
!5981 = !DILocation(line: 512, column: 17, scope: !5901)
!5982 = !DILocation(line: 512, column: 39, scope: !5901)
!5983 = !DILocation(line: 515, column: 4, scope: !5901)
!5984 = !DILocation(line: 514, column: 3, scope: !5901)
!5985 = !DILocation(line: 514, column: 9, scope: !5901)
!5986 = !DILocation(line: 514, column: 17, scope: !5901)
!5987 = !DILocation(line: 514, column: 39, scope: !5901)
!5988 = !DILocation(line: 517, column: 4, scope: !5901)
!5989 = !DILocation(line: 516, column: 3, scope: !5901)
!5990 = !DILocation(line: 516, column: 9, scope: !5901)
!5991 = !DILocation(line: 516, column: 17, scope: !5901)
!5992 = !DILocation(line: 516, column: 40, scope: !5901)
!5993 = !DILocation(line: 518, column: 2, scope: !5901)
!5994 = !DILocation(line: 520, column: 6, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 520, column: 6)
!5996 = !DILocation(line: 520, column: 12, scope: !5995)
!5997 = !DILocation(line: 520, column: 20, scope: !5995)
!5998 = !DILocation(line: 520, column: 24, scope: !5995)
!5999 = !DILocation(line: 520, column: 6, scope: !5616)
!6000 = !DILocation(line: 522, column: 7, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 522, column: 7)
!6002 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 520, column: 30)
!6003 = !DILocation(line: 522, column: 13, scope: !6001)
!6004 = !DILocation(line: 522, column: 17, scope: !6001)
!6005 = !DILocation(line: 522, column: 22, scope: !6001)
!6006 = !DILocation(line: 522, column: 7, scope: !6002)
!6007 = !DILocation(line: 523, column: 4, scope: !6001)
!6008 = !DILocation(line: 523, column: 10, scope: !6001)
!6009 = !DILocation(line: 523, column: 14, scope: !6001)
!6010 = !DILocation(line: 523, column: 19, scope: !6001)
!6011 = !DILocation(line: 526, column: 7, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 526, column: 7)
!6013 = !DILocation(line: 526, column: 38, scope: !6012)
!6014 = !DILocation(line: 526, column: 7, scope: !6002)
!6015 = !DILocation(line: 527, column: 4, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 526, column: 45)
!6017 = !DILocation(line: 527, column: 10, scope: !6016)
!6018 = !DILocation(line: 527, column: 18, scope: !6016)
!6019 = !DILocation(line: 527, column: 24, scope: !6016)
!6020 = !DILocation(line: 529, column: 7, scope: !6016)
!6021 = !DILocation(line: 529, column: 33, scope: !6016)
!6022 = !DILocation(line: 529, column: 6, scope: !6016)
!6023 = !DILocation(line: 528, column: 4, scope: !6016)
!6024 = !DILocation(line: 528, column: 10, scope: !6016)
!6025 = !DILocation(line: 528, column: 18, scope: !6016)
!6026 = !DILocation(line: 528, column: 31, scope: !6016)
!6027 = !DILocation(line: 532, column: 5, scope: !6016)
!6028 = !DILocation(line: 531, column: 4, scope: !6016)
!6029 = !DILocation(line: 531, column: 10, scope: !6016)
!6030 = !DILocation(line: 531, column: 18, scope: !6016)
!6031 = !DILocation(line: 531, column: 35, scope: !6016)
!6032 = !DILocation(line: 533, column: 8, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 533, column: 8)
!6034 = !DILocation(line: 533, column: 14, scope: !6033)
!6035 = !DILocation(line: 533, column: 22, scope: !6033)
!6036 = !DILocation(line: 533, column: 8, scope: !6016)
!6037 = !DILocation(line: 534, column: 5, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 534, column: 5)
!6039 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 534, column: 5)
!6040 = !DILocation(line: 534, column: 5, scope: !6039)
!6041 = !DILocation(line: 534, column: 5, scope: !6033)
!6042 = !DILocation(line: 537, column: 7, scope: !6016)
!6043 = !DILocation(line: 537, column: 33, scope: !6016)
!6044 = !DILocation(line: 537, column: 6, scope: !6016)
!6045 = !DILocation(line: 536, column: 4, scope: !6016)
!6046 = !DILocation(line: 536, column: 10, scope: !6016)
!6047 = !DILocation(line: 536, column: 18, scope: !6016)
!6048 = !DILocation(line: 536, column: 32, scope: !6016)
!6049 = !DILocation(line: 539, column: 8, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 539, column: 8)
!6051 = !DILocation(line: 539, column: 14, scope: !6050)
!6052 = !DILocation(line: 539, column: 22, scope: !6050)
!6053 = !DILocation(line: 539, column: 8, scope: !6016)
!6054 = !DILocation(line: 540, column: 5, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 540, column: 5)
!6056 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 540, column: 5)
!6057 = !DILocation(line: 540, column: 5, scope: !6056)
!6058 = !DILocation(line: 540, column: 5, scope: !6050)
!6059 = !DILocation(line: 542, column: 3, scope: !6016)
!6060 = !DILocation(line: 545, column: 28, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 545, column: 7)
!6062 = !DILocation(line: 545, column: 8, scope: !6061)
!6063 = !DILocation(line: 545, column: 34, scope: !6061)
!6064 = !DILocation(line: 546, column: 8, scope: !6061)
!6065 = !DILocation(line: 546, column: 19, scope: !6061)
!6066 = !DILocation(line: 546, column: 23, scope: !6061)
!6067 = !DILocation(line: 546, column: 53, scope: !6061)
!6068 = !DILocation(line: 545, column: 7, scope: !6002)
!6069 = !DILocation(line: 547, column: 4, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 546, column: 61)
!6071 = !DILocation(line: 547, column: 10, scope: !6070)
!6072 = !DILocation(line: 547, column: 18, scope: !6070)
!6073 = !DILocation(line: 547, column: 22, scope: !6070)
!6074 = !DILocation(line: 548, column: 8, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 548, column: 8)
!6076 = !DILocation(line: 548, column: 38, scope: !6075)
!6077 = !DILocation(line: 548, column: 8, scope: !6070)
!6078 = !DILocation(line: 549, column: 5, scope: !6075)
!6079 = !DILocation(line: 549, column: 11, scope: !6075)
!6080 = !DILocation(line: 549, column: 19, scope: !6075)
!6081 = !DILocation(line: 549, column: 27, scope: !6075)
!6082 = !DILocation(line: 551, column: 5, scope: !6075)
!6083 = !DILocation(line: 551, column: 11, scope: !6075)
!6084 = !DILocation(line: 551, column: 19, scope: !6075)
!6085 = !DILocation(line: 551, column: 27, scope: !6075)
!6086 = !DILocation(line: 557, column: 5, scope: !6070)
!6087 = !DILocation(line: 557, column: 44, scope: !6070)
!6088 = !DILocation(line: 556, column: 4, scope: !6070)
!6089 = !DILocation(line: 556, column: 10, scope: !6070)
!6090 = !DILocation(line: 556, column: 18, scope: !6070)
!6091 = !DILocation(line: 556, column: 34, scope: !6070)
!6092 = !DILocation(line: 558, column: 3, scope: !6070)
!6093 = !DILocation(line: 560, column: 29, scope: !6002)
!6094 = !DILocation(line: 560, column: 3, scope: !6002)
!6095 = !DILocation(line: 560, column: 9, scope: !6002)
!6096 = !DILocation(line: 560, column: 17, scope: !6002)
!6097 = !DILocation(line: 560, column: 27, scope: !6002)
!6098 = !DILocation(line: 561, column: 34, scope: !6002)
!6099 = !DILocation(line: 561, column: 3, scope: !6002)
!6100 = !DILocation(line: 561, column: 9, scope: !6002)
!6101 = !DILocation(line: 561, column: 17, scope: !6002)
!6102 = !DILocation(line: 561, column: 32, scope: !6002)
!6103 = !DILocation(line: 566, column: 38, scope: !6002)
!6104 = !DILocation(line: 566, column: 3, scope: !6002)
!6105 = !DILocation(line: 566, column: 9, scope: !6002)
!6106 = !DILocation(line: 566, column: 17, scope: !6002)
!6107 = !DILocation(line: 566, column: 36, scope: !6002)
!6108 = !DILocation(line: 567, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 567, column: 7)
!6110 = !DILocation(line: 567, column: 34, scope: !6109)
!6111 = !DILocation(line: 567, column: 52, scope: !6109)
!6112 = !DILocation(line: 567, column: 58, scope: !6109)
!6113 = !DILocation(line: 567, column: 37, scope: !6109)
!6114 = !DILocation(line: 567, column: 7, scope: !6002)
!6115 = !DILocation(line: 568, column: 17, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 567, column: 65)
!6117 = !DILocation(line: 568, column: 23, scope: !6116)
!6118 = !DILocation(line: 568, column: 50, scope: !6116)
!6119 = !DILocation(line: 568, column: 4, scope: !6116)
!6120 = !DILocation(line: 572, column: 3, scope: !6116)
!6121 = !DILocation(line: 573, column: 2, scope: !6002)
!6122 = !DILocation(line: 575, column: 39, scope: !5616)
!6123 = !DILocation(line: 575, column: 2, scope: !5616)
!6124 = !DILocation(line: 575, column: 8, scope: !5616)
!6125 = !DILocation(line: 575, column: 16, scope: !5616)
!6126 = !DILocation(line: 575, column: 37, scope: !5616)
!6127 = !DILocation(line: 576, column: 6, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 576, column: 6)
!6129 = !DILocation(line: 576, column: 6, scope: !5616)
!6130 = !DILocation(line: 577, column: 3, scope: !6128)
!6131 = !DILocation(line: 577, column: 9, scope: !6128)
!6132 = !DILocation(line: 577, column: 21, scope: !6128)
!6133 = !DILocation(line: 579, column: 3, scope: !6128)
!6134 = !DILocation(line: 579, column: 9, scope: !6128)
!6135 = !DILocation(line: 579, column: 21, scope: !6128)
!6136 = !DILocation(line: 582, column: 2, scope: !5616)
!6137 = !DILocation(line: 582, column: 8, scope: !5616)
!6138 = !DILocation(line: 582, column: 16, scope: !5616)
!6139 = !DILocation(line: 582, column: 34, scope: !5616)
!6140 = !DILocation(line: 583, column: 6, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 583, column: 6)
!6142 = !DILocation(line: 583, column: 12, scope: !6141)
!6143 = !DILocation(line: 583, column: 20, scope: !6141)
!6144 = !DILocation(line: 583, column: 24, scope: !6141)
!6145 = !DILocation(line: 583, column: 6, scope: !5616)
!6146 = !DILocation(line: 584, column: 3, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 583, column: 30)
!6148 = !DILocation(line: 584, column: 9, scope: !6147)
!6149 = !DILocation(line: 584, column: 17, scope: !6147)
!6150 = !DILocation(line: 584, column: 33, scope: !6147)
!6151 = !DILocation(line: 587, column: 4, scope: !6147)
!6152 = !DILocation(line: 586, column: 40, scope: !6147)
!6153 = !DILocation(line: 586, column: 3, scope: !6147)
!6154 = !DILocation(line: 586, column: 9, scope: !6147)
!6155 = !DILocation(line: 586, column: 17, scope: !6147)
!6156 = !DILocation(line: 586, column: 35, scope: !6147)
!6157 = !DILocation(line: 589, column: 4, scope: !6147)
!6158 = !DILocation(line: 588, column: 41, scope: !6147)
!6159 = !DILocation(line: 588, column: 3, scope: !6147)
!6160 = !DILocation(line: 588, column: 9, scope: !6147)
!6161 = !DILocation(line: 588, column: 17, scope: !6147)
!6162 = !DILocation(line: 588, column: 36, scope: !6147)
!6163 = !DILocation(line: 592, column: 4, scope: !6147)
!6164 = !DILocation(line: 592, column: 36, scope: !6147)
!6165 = !DILocation(line: 593, column: 4, scope: !6147)
!6166 = !DILocation(line: 593, column: 36, scope: !6147)
!6167 = !DILocation(line: 592, column: 41, scope: !6147)
!6168 = !DILocation(line: 594, column: 4, scope: !6147)
!6169 = !DILocation(line: 594, column: 36, scope: !6147)
!6170 = !DILocation(line: 593, column: 41, scope: !6147)
!6171 = !DILocation(line: 595, column: 4, scope: !6147)
!6172 = !DILocation(line: 595, column: 36, scope: !6147)
!6173 = !DILocation(line: 594, column: 42, scope: !6147)
!6174 = !DILocation(line: 591, column: 3, scope: !6147)
!6175 = !DILocation(line: 591, column: 9, scope: !6147)
!6176 = !DILocation(line: 591, column: 17, scope: !6147)
!6177 = !DILocation(line: 591, column: 28, scope: !6147)
!6178 = !DILocation(line: 597, column: 7, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 597, column: 7)
!6180 = !DILocation(line: 597, column: 41, scope: !6179)
!6181 = !DILocation(line: 597, column: 7, scope: !6147)
!6182 = !DILocation(line: 598, column: 4, scope: !6179)
!6183 = !DILocation(line: 598, column: 10, scope: !6179)
!6184 = !DILocation(line: 598, column: 18, scope: !6179)
!6185 = !DILocation(line: 598, column: 35, scope: !6179)
!6186 = !DILocation(line: 600, column: 4, scope: !6179)
!6187 = !DILocation(line: 600, column: 10, scope: !6179)
!6188 = !DILocation(line: 600, column: 18, scope: !6179)
!6189 = !DILocation(line: 600, column: 35, scope: !6179)
!6190 = !DILocation(line: 602, column: 8, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 602, column: 7)
!6192 = !DILocation(line: 602, column: 42, scope: !6191)
!6193 = !DILocation(line: 602, column: 47, scope: !6191)
!6194 = !DILocation(line: 603, column: 8, scope: !6191)
!6195 = !DILocation(line: 603, column: 39, scope: !6191)
!6196 = !DILocation(line: 602, column: 7, scope: !6147)
!6197 = !DILocation(line: 605, column: 25, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 603, column: 46)
!6199 = !DILocation(line: 605, column: 22, scope: !6198)
!6200 = !DILocation(line: 606, column: 5, scope: !6198)
!6201 = !DILocation(line: 606, column: 11, scope: !6198)
!6202 = !DILocation(line: 606, column: 19, scope: !6198)
!6203 = !DILocation(line: 605, column: 57, scope: !6198)
!6204 = !DILocation(line: 604, column: 4, scope: !6198)
!6205 = !DILocation(line: 604, column: 10, scope: !6198)
!6206 = !DILocation(line: 604, column: 18, scope: !6198)
!6207 = !DILocation(line: 604, column: 37, scope: !6198)
!6208 = !DILocation(line: 607, column: 3, scope: !6198)
!6209 = !DILocation(line: 608, column: 4, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 607, column: 10)
!6211 = !DILocation(line: 608, column: 10, scope: !6210)
!6212 = !DILocation(line: 608, column: 18, scope: !6210)
!6213 = !DILocation(line: 608, column: 37, scope: !6210)
!6214 = !DILocation(line: 612, column: 4, scope: !6147)
!6215 = !DILocation(line: 611, column: 3, scope: !6147)
!6216 = !DILocation(line: 611, column: 9, scope: !6147)
!6217 = !DILocation(line: 611, column: 17, scope: !6147)
!6218 = !DILocation(line: 611, column: 35, scope: !6147)
!6219 = !DILocation(line: 614, column: 4, scope: !6147)
!6220 = !DILocation(line: 613, column: 3, scope: !6147)
!6221 = !DILocation(line: 613, column: 9, scope: !6147)
!6222 = !DILocation(line: 613, column: 17, scope: !6147)
!6223 = !DILocation(line: 613, column: 34, scope: !6147)
!6224 = !DILocation(line: 615, column: 2, scope: !6147)
!6225 = !DILocation(line: 616, column: 3, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 615, column: 9)
!6227 = !DILocation(line: 616, column: 9, scope: !6226)
!6228 = !DILocation(line: 616, column: 17, scope: !6226)
!6229 = !DILocation(line: 616, column: 34, scope: !6226)
!6230 = !DILocation(line: 620, column: 6, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 620, column: 6)
!6232 = !DILocation(line: 620, column: 12, scope: !6231)
!6233 = !DILocation(line: 620, column: 20, scope: !6231)
!6234 = !DILocation(line: 620, column: 24, scope: !6231)
!6235 = !DILocation(line: 620, column: 6, scope: !5616)
!6236 = !DILocation(line: 621, column: 10, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 620, column: 30)
!6238 = !DILocation(line: 621, column: 16, scope: !6237)
!6239 = !DILocation(line: 621, column: 24, scope: !6237)
!6240 = !DILocation(line: 621, column: 3, scope: !6237)
!6241 = !DILocation(line: 621, column: 32, scope: !6237)
!6242 = !DILocation(line: 624, column: 5, scope: !6237)
!6243 = !DILocation(line: 624, column: 37, scope: !6237)
!6244 = !DILocation(line: 624, column: 44, scope: !6237)
!6245 = !DILocation(line: 625, column: 6, scope: !6237)
!6246 = !DILocation(line: 625, column: 33, scope: !6237)
!6247 = !DILocation(line: 625, column: 4, scope: !6237)
!6248 = !DILocation(line: 0, scope: !6237)
!6249 = !DILocation(line: 623, column: 3, scope: !6237)
!6250 = !DILocation(line: 623, column: 9, scope: !6237)
!6251 = !DILocation(line: 623, column: 17, scope: !6237)
!6252 = !DILocation(line: 623, column: 29, scope: !6237)
!6253 = !DILocation(line: 627, column: 32, scope: !6237)
!6254 = !DILocation(line: 627, column: 3, scope: !6237)
!6255 = !DILocation(line: 627, column: 9, scope: !6237)
!6256 = !DILocation(line: 627, column: 17, scope: !6237)
!6257 = !DILocation(line: 627, column: 30, scope: !6237)
!6258 = !DILocation(line: 629, column: 4, scope: !6237)
!6259 = !DILocation(line: 628, column: 3, scope: !6237)
!6260 = !DILocation(line: 628, column: 9, scope: !6237)
!6261 = !DILocation(line: 628, column: 17, scope: !6237)
!6262 = !DILocation(line: 628, column: 44, scope: !6237)
!6263 = !DILocation(line: 631, column: 4, scope: !6237)
!6264 = !DILocation(line: 630, column: 3, scope: !6237)
!6265 = !DILocation(line: 630, column: 9, scope: !6237)
!6266 = !DILocation(line: 630, column: 17, scope: !6237)
!6267 = !DILocation(line: 630, column: 44, scope: !6237)
!6268 = !DILocation(line: 632, column: 2, scope: !6237)
!6269 = !DILocation(line: 635, column: 6, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !5616, file: !3, line: 635, column: 6)
!6271 = !DILocation(line: 635, column: 12, scope: !6270)
!6272 = !DILocation(line: 635, column: 20, scope: !6270)
!6273 = !DILocation(line: 635, column: 24, scope: !6270)
!6274 = !DILocation(line: 635, column: 6, scope: !5616)
!6275 = !DILocation(line: 636, column: 32, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 635, column: 30)
!6277 = !DILocation(line: 636, column: 62, scope: !6276)
!6278 = !DILocation(line: 636, column: 3, scope: !6276)
!6279 = !DILocation(line: 636, column: 9, scope: !6276)
!6280 = !DILocation(line: 636, column: 17, scope: !6276)
!6281 = !DILocation(line: 636, column: 30, scope: !6276)
!6282 = !DILocation(line: 638, column: 31, scope: !6276)
!6283 = !DILocation(line: 638, column: 59, scope: !6276)
!6284 = !DILocation(line: 639, column: 35, scope: !6276)
!6285 = !DILocation(line: 638, column: 30, scope: !6276)
!6286 = !DILocation(line: 638, column: 3, scope: !6276)
!6287 = !DILocation(line: 638, column: 9, scope: !6276)
!6288 = !DILocation(line: 638, column: 17, scope: !6276)
!6289 = !DILocation(line: 638, column: 28, scope: !6276)
!6290 = !DILocation(line: 641, column: 7, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 641, column: 7)
!6292 = !DILocation(line: 641, column: 13, scope: !6291)
!6293 = !DILocation(line: 641, column: 21, scope: !6291)
!6294 = !DILocation(line: 641, column: 32, scope: !6291)
!6295 = !DILocation(line: 641, column: 7, scope: !6276)
!6296 = !DILocation(line: 642, column: 4, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 641, column: 38)
!6298 = !DILocation(line: 642, column: 10, scope: !6297)
!6299 = !DILocation(line: 642, column: 18, scope: !6297)
!6300 = !DILocation(line: 642, column: 31, scope: !6297)
!6301 = !DILocation(line: 643, column: 4, scope: !6297)
!6302 = !DILocation(line: 643, column: 10, scope: !6297)
!6303 = !DILocation(line: 643, column: 18, scope: !6297)
!6304 = !DILocation(line: 643, column: 29, scope: !6297)
!6305 = !DILocation(line: 644, column: 3, scope: !6297)
!6306 = !DILocation(line: 645, column: 7, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 645, column: 7)
!6308 = !DILocation(line: 645, column: 13, scope: !6307)
!6309 = !DILocation(line: 645, column: 21, scope: !6307)
!6310 = !DILocation(line: 645, column: 7, scope: !6276)
!6311 = !DILocation(line: 646, column: 4, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 646, column: 4)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 646, column: 4)
!6314 = distinct !DILexicalBlock(scope: !6307, file: !3, line: 645, column: 35)
!6315 = !DILocation(line: 646, column: 4, scope: !6313)
!6316 = !DILocation(line: 649, column: 3, scope: !6314)
!6317 = !DILocation(line: 651, column: 7, scope: !6276)
!6318 = !DILocation(line: 651, column: 13, scope: !6276)
!6319 = !DILocation(line: 651, column: 21, scope: !6276)
!6320 = !DILocation(line: 651, column: 31, scope: !6276)
!6321 = !DILocation(line: 651, column: 6, scope: !6276)
!6322 = !DILocation(line: 650, column: 3, scope: !6276)
!6323 = !DILocation(line: 650, column: 9, scope: !6276)
!6324 = !DILocation(line: 650, column: 17, scope: !6276)
!6325 = !DILocation(line: 650, column: 41, scope: !6276)
!6326 = !DILocation(line: 653, column: 2, scope: !6276)
!6327 = !DILocation(line: 635, column: 27, scope: !6270)
!6328 = !DILabel(scope: !5616, name: "out", file: !3, line: 654)
!6329 = !DILocation(line: 654, column: 1, scope: !5616)
!6330 = !DILocation(line: 655, column: 9, scope: !5616)
!6331 = !DILocation(line: 655, column: 2, scope: !5616)
!6332 = distinct !DISubprogram(name: "of_property_read_bool", scope: !1864, file: !1864, line: 1192, type: !6333, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!962, !6335, !75}
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1863)
!6337 = !DILocalVariable(name: "np", arg: 1, scope: !6332, file: !1864, line: 1192, type: !6335)
!6338 = !DILocation(line: 1192, column: 68, scope: !6332)
!6339 = !DILocalVariable(name: "propname", arg: 2, scope: !6332, file: !1864, line: 1193, type: !75)
!6340 = !DILocation(line: 1193, column: 19, scope: !6332)
!6341 = !DILocalVariable(name: "prop", scope: !6332, file: !1864, line: 1195, type: !1961)
!6342 = !DILocation(line: 1195, column: 19, scope: !6332)
!6343 = !DILocation(line: 1195, column: 43, scope: !6332)
!6344 = !DILocation(line: 1195, column: 47, scope: !6332)
!6345 = !DILocation(line: 1195, column: 26, scope: !6332)
!6346 = !DILocation(line: 1197, column: 9, scope: !6332)
!6347 = !DILocation(line: 1197, column: 2, scope: !6332)
!6348 = distinct !DISubprogram(name: "of_node_put", scope: !1864, file: !1864, line: 129, type: !6349, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6349 = !DISubroutineType(types: !6350)
!6350 = !{null, !1862}
!6351 = !DILocalVariable(name: "node", arg: 1, scope: !6348, file: !1864, line: 129, type: !1862)
!6352 = !DILocation(line: 129, column: 52, scope: !6348)
!6353 = !DILocation(line: 129, column: 60, scope: !6348)
!6354 = distinct !DISubprogram(name: "mmc_fixup_device", scope: !2620, file: !2620, line: 148, type: !6355, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{null, !57, !6357}
!6357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!6358 = !DILocalVariable(name: "card", arg: 1, scope: !6354, file: !2620, line: 148, type: !57)
!6359 = !DILocation(line: 148, column: 54, scope: !6354)
!6360 = !DILocalVariable(name: "table", arg: 2, scope: !6354, file: !2620, line: 149, type: !6357)
!6361 = !DILocation(line: 149, column: 33, scope: !6354)
!6362 = !DILocalVariable(name: "f", scope: !6354, file: !2620, line: 151, type: !6357)
!6363 = !DILocation(line: 151, column: 26, scope: !6354)
!6364 = !DILocalVariable(name: "rev", scope: !6354, file: !2620, line: 152, type: !254)
!6365 = !DILocation(line: 152, column: 6, scope: !6354)
!6366 = !DILocation(line: 152, column: 12, scope: !6354)
!6367 = !DILocation(line: 154, column: 11, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6354, file: !2620, line: 154, column: 2)
!6369 = !DILocation(line: 154, column: 9, scope: !6368)
!6370 = !DILocation(line: 154, column: 7, scope: !6368)
!6371 = !DILocation(line: 154, column: 18, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !2620, line: 154, column: 2)
!6373 = !DILocation(line: 154, column: 21, scope: !6372)
!6374 = !DILocation(line: 154, column: 2, scope: !6368)
!6375 = !DILocation(line: 155, column: 8, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6377, file: !2620, line: 155, column: 7)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !2620, line: 154, column: 40)
!6378 = !DILocation(line: 155, column: 11, scope: !6376)
!6379 = !DILocation(line: 155, column: 18, scope: !6376)
!6380 = !DILocation(line: 155, column: 36, scope: !6376)
!6381 = !DILocation(line: 156, column: 8, scope: !6376)
!6382 = !DILocation(line: 156, column: 11, scope: !6376)
!6383 = !DILocation(line: 156, column: 21, scope: !6376)
!6384 = !DILocation(line: 156, column: 27, scope: !6376)
!6385 = !DILocation(line: 156, column: 31, scope: !6376)
!6386 = !DILocation(line: 156, column: 18, scope: !6376)
!6387 = !DILocation(line: 156, column: 39, scope: !6376)
!6388 = !DILocation(line: 157, column: 8, scope: !6376)
!6389 = !DILocation(line: 157, column: 11, scope: !6376)
!6390 = !DILocation(line: 157, column: 17, scope: !6376)
!6391 = !DILocation(line: 157, column: 34, scope: !6376)
!6392 = !DILocation(line: 158, column: 8, scope: !6376)
!6393 = !DILocation(line: 158, column: 11, scope: !6376)
!6394 = !DILocation(line: 158, column: 20, scope: !6376)
!6395 = !DILocation(line: 158, column: 26, scope: !6376)
!6396 = !DILocation(line: 158, column: 30, scope: !6376)
!6397 = !DILocation(line: 158, column: 17, scope: !6376)
!6398 = !DILocation(line: 158, column: 37, scope: !6376)
!6399 = !DILocation(line: 159, column: 8, scope: !6376)
!6400 = !DILocation(line: 159, column: 11, scope: !6376)
!6401 = !DILocation(line: 159, column: 16, scope: !6376)
!6402 = !DILocation(line: 159, column: 32, scope: !6376)
!6403 = !DILocation(line: 160, column: 17, scope: !6376)
!6404 = !DILocation(line: 160, column: 20, scope: !6376)
!6405 = !DILocation(line: 160, column: 26, scope: !6376)
!6406 = !DILocation(line: 160, column: 32, scope: !6376)
!6407 = !DILocation(line: 160, column: 36, scope: !6376)
!6408 = !DILocation(line: 160, column: 9, scope: !6376)
!6409 = !DILocation(line: 161, column: 40, scope: !6376)
!6410 = !DILocation(line: 162, column: 8, scope: !6376)
!6411 = !DILocation(line: 162, column: 11, scope: !6376)
!6412 = !DILocation(line: 162, column: 25, scope: !6376)
!6413 = !DILocation(line: 162, column: 31, scope: !6376)
!6414 = !DILocation(line: 162, column: 35, scope: !6376)
!6415 = !DILocation(line: 162, column: 22, scope: !6376)
!6416 = !DILocation(line: 162, column: 42, scope: !6376)
!6417 = !DILocation(line: 163, column: 8, scope: !6376)
!6418 = !DILocation(line: 163, column: 11, scope: !6376)
!6419 = !DILocation(line: 163, column: 22, scope: !6376)
!6420 = !DILocation(line: 163, column: 44, scope: !6376)
!6421 = !DILocation(line: 164, column: 8, scope: !6376)
!6422 = !DILocation(line: 164, column: 11, scope: !6376)
!6423 = !DILocation(line: 164, column: 25, scope: !6376)
!6424 = !DILocation(line: 164, column: 31, scope: !6376)
!6425 = !DILocation(line: 164, column: 35, scope: !6376)
!6426 = !DILocation(line: 164, column: 22, scope: !6376)
!6427 = !DILocation(line: 164, column: 42, scope: !6376)
!6428 = !DILocation(line: 165, column: 8, scope: !6376)
!6429 = !DILocation(line: 165, column: 11, scope: !6376)
!6430 = !DILocation(line: 165, column: 22, scope: !6376)
!6431 = !DILocation(line: 165, column: 44, scope: !6376)
!6432 = !DILocation(line: 166, column: 8, scope: !6376)
!6433 = !DILocation(line: 166, column: 11, scope: !6376)
!6434 = !DILocation(line: 166, column: 23, scope: !6376)
!6435 = !DILocation(line: 166, column: 42, scope: !6376)
!6436 = !DILocation(line: 167, column: 8, scope: !6376)
!6437 = !DILocation(line: 167, column: 11, scope: !6376)
!6438 = !DILocation(line: 167, column: 26, scope: !6376)
!6439 = !DILocation(line: 167, column: 32, scope: !6376)
!6440 = !DILocation(line: 167, column: 40, scope: !6376)
!6441 = !DILocation(line: 167, column: 23, scope: !6376)
!6442 = !DILocation(line: 167, column: 45, scope: !6376)
!6443 = !DILocation(line: 168, column: 7, scope: !6376)
!6444 = !DILocation(line: 168, column: 14, scope: !6376)
!6445 = !DILocation(line: 168, column: 17, scope: !6376)
!6446 = !DILocation(line: 168, column: 11, scope: !6376)
!6447 = !DILocation(line: 168, column: 27, scope: !6376)
!6448 = !DILocation(line: 168, column: 30, scope: !6376)
!6449 = !DILocation(line: 168, column: 37, scope: !6376)
!6450 = !DILocation(line: 168, column: 40, scope: !6376)
!6451 = !DILocation(line: 168, column: 34, scope: !6376)
!6452 = !DILocation(line: 155, column: 7, scope: !6377)
!6453 = !DILocation(line: 170, column: 4, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6376, file: !2620, line: 168, column: 49)
!6455 = !DILocation(line: 170, column: 7, scope: !6454)
!6456 = !DILocation(line: 170, column: 20, scope: !6454)
!6457 = !DILocation(line: 170, column: 26, scope: !6454)
!6458 = !DILocation(line: 170, column: 29, scope: !6454)
!6459 = !DILocation(line: 171, column: 3, scope: !6454)
!6460 = !DILocation(line: 172, column: 2, scope: !6377)
!6461 = !DILocation(line: 154, column: 36, scope: !6372)
!6462 = !DILocation(line: 154, column: 2, scope: !6372)
!6463 = distinct !{!6463, !6374, !6464}
!6464 = !DILocation(line: 172, column: 2, scope: !6368)
!6465 = !DILocation(line: 173, column: 1, scope: !6354)
!6466 = distinct !DISubprogram(name: "mmc_select_card_type", scope: !3, file: !3, line: 185, type: !2907, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6467 = !DILocalVariable(name: "card", arg: 1, scope: !6466, file: !3, line: 185, type: !57)
!6468 = !DILocation(line: 185, column: 51, scope: !6466)
!6469 = !DILocalVariable(name: "host", scope: !6466, file: !3, line: 187, type: !62)
!6470 = !DILocation(line: 187, column: 19, scope: !6466)
!6471 = !DILocation(line: 187, column: 26, scope: !6466)
!6472 = !DILocation(line: 187, column: 32, scope: !6466)
!6473 = !DILocalVariable(name: "card_type", scope: !6466, file: !3, line: 188, type: !529)
!6474 = !DILocation(line: 188, column: 5, scope: !6466)
!6475 = !DILocation(line: 188, column: 17, scope: !6466)
!6476 = !DILocation(line: 188, column: 23, scope: !6466)
!6477 = !DILocation(line: 188, column: 31, scope: !6466)
!6478 = !DILocalVariable(name: "caps", scope: !6466, file: !3, line: 189, type: !392)
!6479 = !DILocation(line: 189, column: 6, scope: !6466)
!6480 = !DILocation(line: 189, column: 13, scope: !6466)
!6481 = !DILocation(line: 189, column: 19, scope: !6466)
!6482 = !DILocalVariable(name: "caps2", scope: !6466, file: !3, line: 189, type: !392)
!6483 = !DILocation(line: 189, column: 25, scope: !6466)
!6484 = !DILocation(line: 189, column: 33, scope: !6466)
!6485 = !DILocation(line: 189, column: 39, scope: !6466)
!6486 = !DILocalVariable(name: "hs_max_dtr", scope: !6466, file: !3, line: 190, type: !7)
!6487 = !DILocation(line: 190, column: 15, scope: !6466)
!6488 = !DILocalVariable(name: "hs200_max_dtr", scope: !6466, file: !3, line: 190, type: !7)
!6489 = !DILocation(line: 190, column: 31, scope: !6466)
!6490 = !DILocalVariable(name: "avail_type", scope: !6466, file: !3, line: 191, type: !7)
!6491 = !DILocation(line: 191, column: 15, scope: !6466)
!6492 = !DILocation(line: 193, column: 6, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 193, column: 6)
!6494 = !DILocation(line: 193, column: 11, scope: !6493)
!6495 = !DILocation(line: 193, column: 35, scope: !6493)
!6496 = !DILocation(line: 194, column: 6, scope: !6493)
!6497 = !DILocation(line: 194, column: 16, scope: !6493)
!6498 = !DILocation(line: 193, column: 6, scope: !6466)
!6499 = !DILocation(line: 195, column: 14, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 194, column: 43)
!6501 = !DILocation(line: 196, column: 14, scope: !6500)
!6502 = !DILocation(line: 197, column: 2, scope: !6500)
!6503 = !DILocation(line: 199, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 199, column: 6)
!6505 = !DILocation(line: 199, column: 11, scope: !6504)
!6506 = !DILocation(line: 199, column: 35, scope: !6504)
!6507 = !DILocation(line: 200, column: 6, scope: !6504)
!6508 = !DILocation(line: 200, column: 16, scope: !6504)
!6509 = !DILocation(line: 199, column: 6, scope: !6466)
!6510 = !DILocation(line: 201, column: 14, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 200, column: 43)
!6512 = !DILocation(line: 202, column: 14, scope: !6511)
!6513 = !DILocation(line: 203, column: 2, scope: !6511)
!6514 = !DILocation(line: 205, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 205, column: 6)
!6516 = !DILocation(line: 205, column: 11, scope: !6515)
!6517 = !DILocation(line: 205, column: 51, scope: !6515)
!6518 = !DILocation(line: 206, column: 6, scope: !6515)
!6519 = !DILocation(line: 206, column: 16, scope: !6515)
!6520 = !DILocation(line: 205, column: 6, scope: !6466)
!6521 = !DILocation(line: 207, column: 14, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 206, column: 46)
!6523 = !DILocation(line: 208, column: 14, scope: !6522)
!6524 = !DILocation(line: 209, column: 2, scope: !6522)
!6525 = !DILocation(line: 211, column: 6, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 211, column: 6)
!6527 = !DILocation(line: 211, column: 11, scope: !6526)
!6528 = !DILocation(line: 211, column: 30, scope: !6526)
!6529 = !DILocation(line: 212, column: 6, scope: !6526)
!6530 = !DILocation(line: 212, column: 16, scope: !6526)
!6531 = !DILocation(line: 211, column: 6, scope: !6466)
!6532 = !DILocation(line: 213, column: 14, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 212, column: 46)
!6534 = !DILocation(line: 214, column: 14, scope: !6533)
!6535 = !DILocation(line: 215, column: 2, scope: !6533)
!6536 = !DILocation(line: 217, column: 6, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 217, column: 6)
!6538 = !DILocation(line: 217, column: 12, scope: !6537)
!6539 = !DILocation(line: 217, column: 38, scope: !6537)
!6540 = !DILocation(line: 218, column: 6, scope: !6537)
!6541 = !DILocation(line: 218, column: 16, scope: !6537)
!6542 = !DILocation(line: 217, column: 6, scope: !6466)
!6543 = !DILocation(line: 219, column: 17, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 218, column: 48)
!6545 = !DILocation(line: 220, column: 14, scope: !6544)
!6546 = !DILocation(line: 221, column: 2, scope: !6544)
!6547 = !DILocation(line: 223, column: 6, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 223, column: 6)
!6549 = !DILocation(line: 223, column: 12, scope: !6548)
!6550 = !DILocation(line: 223, column: 38, scope: !6548)
!6551 = !DILocation(line: 224, column: 6, scope: !6548)
!6552 = !DILocation(line: 224, column: 16, scope: !6548)
!6553 = !DILocation(line: 223, column: 6, scope: !6466)
!6554 = !DILocation(line: 225, column: 17, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 224, column: 48)
!6556 = !DILocation(line: 226, column: 14, scope: !6555)
!6557 = !DILocation(line: 227, column: 2, scope: !6555)
!6558 = !DILocation(line: 229, column: 6, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 229, column: 6)
!6560 = !DILocation(line: 229, column: 12, scope: !6559)
!6561 = !DILocation(line: 229, column: 34, scope: !6559)
!6562 = !DILocation(line: 230, column: 6, scope: !6559)
!6563 = !DILocation(line: 230, column: 16, scope: !6559)
!6564 = !DILocation(line: 229, column: 6, scope: !6466)
!6565 = !DILocation(line: 231, column: 17, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 230, column: 48)
!6567 = !DILocation(line: 232, column: 14, scope: !6566)
!6568 = !DILocation(line: 233, column: 2, scope: !6566)
!6569 = !DILocation(line: 235, column: 6, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 235, column: 6)
!6571 = !DILocation(line: 235, column: 12, scope: !6570)
!6572 = !DILocation(line: 235, column: 34, scope: !6570)
!6573 = !DILocation(line: 236, column: 6, scope: !6570)
!6574 = !DILocation(line: 236, column: 16, scope: !6570)
!6575 = !DILocation(line: 235, column: 6, scope: !6466)
!6576 = !DILocation(line: 237, column: 17, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 236, column: 48)
!6578 = !DILocation(line: 238, column: 14, scope: !6577)
!6579 = !DILocation(line: 239, column: 2, scope: !6577)
!6580 = !DILocation(line: 241, column: 7, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 241, column: 6)
!6582 = !DILocation(line: 241, column: 13, scope: !6581)
!6583 = !DILocation(line: 241, column: 34, scope: !6581)
!6584 = !DILocation(line: 242, column: 6, scope: !6581)
!6585 = !DILocation(line: 242, column: 12, scope: !6581)
!6586 = !DILocation(line: 242, column: 20, scope: !6581)
!6587 = !DILocation(line: 242, column: 35, scope: !6581)
!6588 = !DILocation(line: 243, column: 7, scope: !6581)
!6589 = !DILocation(line: 243, column: 18, scope: !6581)
!6590 = !DILocation(line: 241, column: 6, scope: !6466)
!6591 = !DILocation(line: 244, column: 14, scope: !6581)
!6592 = !DILocation(line: 244, column: 3, scope: !6581)
!6593 = !DILocation(line: 246, column: 29, scope: !6466)
!6594 = !DILocation(line: 246, column: 2, scope: !6466)
!6595 = !DILocation(line: 246, column: 8, scope: !6466)
!6596 = !DILocation(line: 246, column: 16, scope: !6466)
!6597 = !DILocation(line: 246, column: 27, scope: !6466)
!6598 = !DILocation(line: 247, column: 32, scope: !6466)
!6599 = !DILocation(line: 247, column: 2, scope: !6466)
!6600 = !DILocation(line: 247, column: 8, scope: !6466)
!6601 = !DILocation(line: 247, column: 16, scope: !6466)
!6602 = !DILocation(line: 247, column: 30, scope: !6466)
!6603 = !DILocation(line: 248, column: 25, scope: !6466)
!6604 = !DILocation(line: 248, column: 2, scope: !6466)
!6605 = !DILocation(line: 248, column: 8, scope: !6466)
!6606 = !DILocation(line: 248, column: 23, scope: !6466)
!6607 = !DILocation(line: 249, column: 1, scope: !6466)
!6608 = distinct !DISubprogram(name: "mmc_boot_partition_access", scope: !3678, file: !3678, line: 46, type: !2117, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6609 = !DILocalVariable(name: "host", arg: 1, scope: !6608, file: !3678, line: 46, type: !62)
!6610 = !DILocation(line: 46, column: 62, scope: !6608)
!6611 = !DILocation(line: 48, column: 11, scope: !6608)
!6612 = !DILocation(line: 48, column: 17, scope: !6608)
!6613 = !DILocation(line: 48, column: 23, scope: !6608)
!6614 = !DILocation(line: 48, column: 9, scope: !6608)
!6615 = !DILocation(line: 48, column: 2, scope: !6608)
!6616 = distinct !DISubprogram(name: "mmc_part_add", scope: !3, file: !3, line: 300, type: !6617, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6617 = !DISubroutineType(types: !6618)
!6618 = !{null, !57, !254, !7, !135, !119, !962, !119}
!6619 = !DILocalVariable(name: "card", arg: 1, scope: !6616, file: !3, line: 300, type: !57)
!6620 = !DILocation(line: 300, column: 43, scope: !6616)
!6621 = !DILocalVariable(name: "size", arg: 2, scope: !6616, file: !3, line: 300, type: !254)
!6622 = !DILocation(line: 300, column: 53, scope: !6616)
!6623 = !DILocalVariable(name: "part_cfg", arg: 3, scope: !6616, file: !3, line: 301, type: !7)
!6624 = !DILocation(line: 301, column: 18, scope: !6616)
!6625 = !DILocalVariable(name: "name", arg: 4, scope: !6616, file: !3, line: 301, type: !135)
!6626 = !DILocation(line: 301, column: 34, scope: !6616)
!6627 = !DILocalVariable(name: "idx", arg: 5, scope: !6616, file: !3, line: 301, type: !119)
!6628 = !DILocation(line: 301, column: 44, scope: !6616)
!6629 = !DILocalVariable(name: "ro", arg: 6, scope: !6616, file: !3, line: 301, type: !962)
!6630 = !DILocation(line: 301, column: 54, scope: !6616)
!6631 = !DILocalVariable(name: "area_type", arg: 7, scope: !6616, file: !3, line: 302, type: !119)
!6632 = !DILocation(line: 302, column: 9, scope: !6616)
!6633 = !DILocation(line: 304, column: 36, scope: !6616)
!6634 = !DILocation(line: 304, column: 2, scope: !6616)
!6635 = !DILocation(line: 304, column: 8, scope: !6616)
!6636 = !DILocation(line: 304, column: 13, scope: !6616)
!6637 = !DILocation(line: 304, column: 19, scope: !6616)
!6638 = !DILocation(line: 304, column: 29, scope: !6616)
!6639 = !DILocation(line: 304, column: 34, scope: !6616)
!6640 = !DILocation(line: 305, column: 40, scope: !6616)
!6641 = !DILocation(line: 305, column: 2, scope: !6616)
!6642 = !DILocation(line: 305, column: 8, scope: !6616)
!6643 = !DILocation(line: 305, column: 13, scope: !6616)
!6644 = !DILocation(line: 305, column: 19, scope: !6616)
!6645 = !DILocation(line: 305, column: 29, scope: !6616)
!6646 = !DILocation(line: 305, column: 38, scope: !6616)
!6647 = !DILocation(line: 306, column: 10, scope: !6616)
!6648 = !DILocation(line: 306, column: 16, scope: !6616)
!6649 = !DILocation(line: 306, column: 21, scope: !6616)
!6650 = !DILocation(line: 306, column: 27, scope: !6616)
!6651 = !DILocation(line: 306, column: 37, scope: !6616)
!6652 = !DILocation(line: 306, column: 43, scope: !6616)
!6653 = !DILocation(line: 306, column: 49, scope: !6616)
!6654 = !DILocation(line: 306, column: 2, scope: !6616)
!6655 = !DILocation(line: 307, column: 40, scope: !6616)
!6656 = !DILocation(line: 307, column: 2, scope: !6616)
!6657 = !DILocation(line: 307, column: 8, scope: !6616)
!6658 = !DILocation(line: 307, column: 13, scope: !6616)
!6659 = !DILocation(line: 307, column: 19, scope: !6616)
!6660 = !DILocation(line: 307, column: 29, scope: !6616)
!6661 = !DILocation(line: 307, column: 38, scope: !6616)
!6662 = !DILocation(line: 308, column: 41, scope: !6616)
!6663 = !DILocation(line: 308, column: 2, scope: !6616)
!6664 = !DILocation(line: 308, column: 8, scope: !6616)
!6665 = !DILocation(line: 308, column: 13, scope: !6616)
!6666 = !DILocation(line: 308, column: 19, scope: !6616)
!6667 = !DILocation(line: 308, column: 29, scope: !6616)
!6668 = !DILocation(line: 308, column: 39, scope: !6616)
!6669 = !DILocation(line: 309, column: 2, scope: !6616)
!6670 = !DILocation(line: 309, column: 8, scope: !6616)
!6671 = !DILocation(line: 309, column: 16, scope: !6616)
!6672 = !DILocation(line: 310, column: 1, scope: !6616)
!6673 = distinct !DISubprogram(name: "mmc_manage_enhanced_area", scope: !3, file: !3, line: 251, type: !6674, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{null, !57, !4906}
!6676 = !DILocalVariable(name: "card", arg: 1, scope: !6673, file: !3, line: 251, type: !57)
!6677 = !DILocation(line: 251, column: 55, scope: !6673)
!6678 = !DILocalVariable(name: "ext_csd", arg: 2, scope: !6673, file: !3, line: 251, type: !4906)
!6679 = !DILocation(line: 251, column: 65, scope: !6673)
!6680 = !DILocalVariable(name: "hc_erase_grp_sz", scope: !6673, file: !3, line: 253, type: !529)
!6681 = !DILocation(line: 253, column: 5, scope: !6673)
!6682 = !DILocalVariable(name: "hc_wp_grp_sz", scope: !6673, file: !3, line: 253, type: !529)
!6683 = !DILocation(line: 253, column: 22, scope: !6673)
!6684 = !DILocation(line: 258, column: 2, scope: !6673)
!6685 = !DILocation(line: 258, column: 8, scope: !6673)
!6686 = !DILocation(line: 258, column: 16, scope: !6673)
!6687 = !DILocation(line: 258, column: 37, scope: !6673)
!6688 = !DILocation(line: 259, column: 2, scope: !6673)
!6689 = !DILocation(line: 259, column: 8, scope: !6673)
!6690 = !DILocation(line: 259, column: 16, scope: !6673)
!6691 = !DILocation(line: 259, column: 35, scope: !6673)
!6692 = !DILocation(line: 266, column: 7, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 266, column: 6)
!6694 = !DILocation(line: 266, column: 42, scope: !6693)
!6695 = !DILocation(line: 266, column: 49, scope: !6693)
!6696 = !DILocation(line: 267, column: 7, scope: !6693)
!6697 = !DILocation(line: 267, column: 44, scope: !6693)
!6698 = !DILocation(line: 266, column: 6, scope: !6673)
!6699 = !DILocation(line: 268, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 268, column: 7)
!6701 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 267, column: 52)
!6702 = !DILocation(line: 268, column: 13, scope: !6700)
!6703 = !DILocation(line: 268, column: 21, scope: !6700)
!6704 = !DILocation(line: 268, column: 7, scope: !6701)
!6705 = !DILocation(line: 270, column: 5, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 268, column: 50)
!6707 = !DILocation(line: 269, column: 20, scope: !6706)
!6708 = !DILocation(line: 272, column: 5, scope: !6706)
!6709 = !DILocation(line: 271, column: 17, scope: !6706)
!6710 = !DILocation(line: 278, column: 27, scope: !6706)
!6711 = !DILocation(line: 278, column: 7, scope: !6706)
!6712 = !DILocation(line: 278, column: 41, scope: !6706)
!6713 = !DILocation(line: 279, column: 27, scope: !6706)
!6714 = !DILocation(line: 279, column: 7, scope: !6706)
!6715 = !DILocation(line: 279, column: 41, scope: !6706)
!6716 = !DILocation(line: 278, column: 48, scope: !6706)
!6717 = !DILocation(line: 280, column: 27, scope: !6706)
!6718 = !DILocation(line: 280, column: 7, scope: !6706)
!6719 = !DILocation(line: 280, column: 41, scope: !6706)
!6720 = !DILocation(line: 279, column: 48, scope: !6706)
!6721 = !DILocation(line: 281, column: 27, scope: !6706)
!6722 = !DILocation(line: 281, column: 7, scope: !6706)
!6723 = !DILocation(line: 280, column: 47, scope: !6706)
!6724 = !DILocation(line: 277, column: 4, scope: !6706)
!6725 = !DILocation(line: 277, column: 10, scope: !6706)
!6726 = !DILocation(line: 277, column: 18, scope: !6706)
!6727 = !DILocation(line: 277, column: 39, scope: !6706)
!6728 = !DILocation(line: 282, column: 8, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 282, column: 8)
!6730 = !DILocation(line: 282, column: 8, scope: !6706)
!6731 = !DILocation(line: 283, column: 5, scope: !6729)
!6732 = !DILocation(line: 283, column: 11, scope: !6729)
!6733 = !DILocation(line: 283, column: 19, scope: !6729)
!6734 = !DILocation(line: 283, column: 40, scope: !6729)
!6735 = !DILocation(line: 288, column: 6, scope: !6706)
!6736 = !DILocation(line: 288, column: 19, scope: !6706)
!6737 = !DILocation(line: 288, column: 29, scope: !6706)
!6738 = !DILocation(line: 288, column: 42, scope: !6706)
!6739 = !DILocation(line: 288, column: 26, scope: !6706)
!6740 = !DILocation(line: 289, column: 5, scope: !6706)
!6741 = !DILocation(line: 288, column: 48, scope: !6706)
!6742 = !DILocation(line: 287, column: 4, scope: !6706)
!6743 = !DILocation(line: 287, column: 10, scope: !6706)
!6744 = !DILocation(line: 287, column: 18, scope: !6706)
!6745 = !DILocation(line: 287, column: 37, scope: !6706)
!6746 = !DILocation(line: 291, column: 14, scope: !6706)
!6747 = !DILocation(line: 291, column: 32, scope: !6706)
!6748 = !DILocation(line: 291, column: 30, scope: !6706)
!6749 = !DILocation(line: 291, column: 5, scope: !6706)
!6750 = !DILocation(line: 290, column: 4, scope: !6706)
!6751 = !DILocation(line: 290, column: 10, scope: !6706)
!6752 = !DILocation(line: 290, column: 18, scope: !6706)
!6753 = !DILocation(line: 290, column: 37, scope: !6706)
!6754 = !DILocation(line: 292, column: 4, scope: !6706)
!6755 = !DILocation(line: 292, column: 10, scope: !6706)
!6756 = !DILocation(line: 292, column: 18, scope: !6706)
!6757 = !DILocation(line: 292, column: 37, scope: !6706)
!6758 = !DILocation(line: 293, column: 3, scope: !6706)
!6759 = !DILocation(line: 294, column: 4, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 293, column: 10)
!6761 = !DILocation(line: 297, column: 2, scope: !6701)
!6762 = !DILocation(line: 298, column: 1, scope: !6673)
!6763 = distinct !DISubprogram(name: "mmc_manage_gp_partitions", scope: !3, file: !3, line: 312, type: !6674, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6764 = !DILocalVariable(name: "card", arg: 1, scope: !6763, file: !3, line: 312, type: !57)
!6765 = !DILocation(line: 312, column: 55, scope: !6763)
!6766 = !DILocalVariable(name: "ext_csd", arg: 2, scope: !6763, file: !3, line: 312, type: !4906)
!6767 = !DILocation(line: 312, column: 65, scope: !6763)
!6768 = !DILocalVariable(name: "idx", scope: !6763, file: !3, line: 314, type: !119)
!6769 = !DILocation(line: 314, column: 6, scope: !6763)
!6770 = !DILocalVariable(name: "hc_erase_grp_sz", scope: !6763, file: !3, line: 315, type: !529)
!6771 = !DILocation(line: 315, column: 5, scope: !6763)
!6772 = !DILocalVariable(name: "hc_wp_grp_sz", scope: !6763, file: !3, line: 315, type: !529)
!6773 = !DILocation(line: 315, column: 22, scope: !6763)
!6774 = !DILocalVariable(name: "part_size", scope: !6763, file: !3, line: 316, type: !254)
!6775 = !DILocation(line: 316, column: 6, scope: !6763)
!6776 = !DILocation(line: 323, column: 6, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 323, column: 6)
!6778 = !DILocation(line: 323, column: 41, scope: !6777)
!6779 = !DILocation(line: 323, column: 6, scope: !6763)
!6780 = !DILocation(line: 326, column: 4, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 324, column: 36)
!6782 = !DILocation(line: 325, column: 19, scope: !6781)
!6783 = !DILocation(line: 328, column: 4, scope: !6781)
!6784 = !DILocation(line: 327, column: 16, scope: !6781)
!6785 = !DILocation(line: 330, column: 12, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 330, column: 3)
!6787 = !DILocation(line: 330, column: 8, scope: !6786)
!6788 = !DILocation(line: 330, column: 17, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 330, column: 3)
!6790 = !DILocation(line: 330, column: 21, scope: !6789)
!6791 = !DILocation(line: 330, column: 3, scope: !6786)
!6792 = !DILocation(line: 331, column: 9, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 331, column: 8)
!6794 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 330, column: 52)
!6795 = !DILocation(line: 331, column: 40, scope: !6793)
!6796 = !DILocation(line: 331, column: 44, scope: !6793)
!6797 = !DILocation(line: 331, column: 38, scope: !6793)
!6798 = !DILocation(line: 331, column: 49, scope: !6793)
!6799 = !DILocation(line: 332, column: 9, scope: !6793)
!6800 = !DILocation(line: 332, column: 40, scope: !6793)
!6801 = !DILocation(line: 332, column: 44, scope: !6793)
!6802 = !DILocation(line: 332, column: 38, scope: !6793)
!6803 = !DILocation(line: 332, column: 48, scope: !6793)
!6804 = !DILocation(line: 332, column: 53, scope: !6793)
!6805 = !DILocation(line: 333, column: 9, scope: !6793)
!6806 = !DILocation(line: 333, column: 40, scope: !6793)
!6807 = !DILocation(line: 333, column: 44, scope: !6793)
!6808 = !DILocation(line: 333, column: 38, scope: !6793)
!6809 = !DILocation(line: 333, column: 48, scope: !6793)
!6810 = !DILocation(line: 331, column: 8, scope: !6794)
!6811 = !DILocation(line: 334, column: 5, scope: !6793)
!6812 = !DILocation(line: 335, column: 8, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 335, column: 8)
!6814 = !DILocation(line: 335, column: 14, scope: !6813)
!6815 = !DILocation(line: 335, column: 22, scope: !6813)
!6816 = !DILocation(line: 335, column: 50, scope: !6813)
!6817 = !DILocation(line: 335, column: 8, scope: !6794)
!6818 = !DILocation(line: 336, column: 5, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 335, column: 56)
!6820 = !DILocation(line: 338, column: 5, scope: !6819)
!6821 = !DILocation(line: 341, column: 6, scope: !6794)
!6822 = !DILocation(line: 341, column: 37, scope: !6794)
!6823 = !DILocation(line: 341, column: 41, scope: !6794)
!6824 = !DILocation(line: 341, column: 35, scope: !6794)
!6825 = !DILocation(line: 341, column: 45, scope: !6794)
!6826 = !DILocation(line: 342, column: 5, scope: !6794)
!6827 = !DILocation(line: 343, column: 6, scope: !6794)
!6828 = !DILocation(line: 343, column: 37, scope: !6794)
!6829 = !DILocation(line: 343, column: 41, scope: !6794)
!6830 = !DILocation(line: 343, column: 35, scope: !6794)
!6831 = !DILocation(line: 343, column: 45, scope: !6794)
!6832 = !DILocation(line: 344, column: 5, scope: !6794)
!6833 = !DILocation(line: 342, column: 12, scope: !6794)
!6834 = !DILocation(line: 345, column: 5, scope: !6794)
!6835 = !DILocation(line: 345, column: 36, scope: !6794)
!6836 = !DILocation(line: 345, column: 40, scope: !6794)
!6837 = !DILocation(line: 345, column: 34, scope: !6794)
!6838 = !DILocation(line: 344, column: 11, scope: !6794)
!6839 = !DILocation(line: 341, column: 5, scope: !6794)
!6840 = !DILocation(line: 340, column: 14, scope: !6794)
!6841 = !DILocation(line: 346, column: 18, scope: !6794)
!6842 = !DILocation(line: 346, column: 36, scope: !6794)
!6843 = !DILocation(line: 346, column: 34, scope: !6794)
!6844 = !DILocation(line: 346, column: 17, scope: !6794)
!6845 = !DILocation(line: 346, column: 14, scope: !6794)
!6846 = !DILocation(line: 347, column: 17, scope: !6794)
!6847 = !DILocation(line: 347, column: 23, scope: !6794)
!6848 = !DILocation(line: 347, column: 33, scope: !6794)
!6849 = !DILocation(line: 348, column: 35, scope: !6794)
!6850 = !DILocation(line: 348, column: 33, scope: !6794)
!6851 = !DILocation(line: 349, column: 13, scope: !6794)
!6852 = !DILocation(line: 347, column: 4, scope: !6794)
!6853 = !DILocation(line: 351, column: 3, scope: !6794)
!6854 = !DILocation(line: 330, column: 48, scope: !6789)
!6855 = !DILocation(line: 330, column: 3, scope: !6789)
!6856 = distinct !{!6856, !6791, !6857}
!6857 = !DILocation(line: 351, column: 3, scope: !6786)
!6858 = !DILocation(line: 352, column: 2, scope: !6781)
!6859 = !DILocation(line: 353, column: 1, scope: !6763)
!6860 = distinct !DISubprogram(name: "mmc_card_broken_hpi", scope: !2624, file: !2624, line: 220, type: !4003, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6861 = !DILocalVariable(name: "c", arg: 1, scope: !6860, file: !2624, line: 220, type: !4005)
!6862 = !DILocation(line: 220, column: 62, scope: !6860)
!6863 = !DILocation(line: 222, column: 9, scope: !6860)
!6864 = !DILocation(line: 222, column: 12, scope: !6860)
!6865 = !DILocation(line: 222, column: 19, scope: !6860)
!6866 = !DILocation(line: 222, column: 2, scope: !6860)
!6867 = distinct !DISubprogram(name: "mmc_host_cmd23", scope: !3678, file: !3678, line: 36, type: !2117, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6868 = !DILocalVariable(name: "host", arg: 1, scope: !6867, file: !3678, line: 36, type: !62)
!6869 = !DILocation(line: 36, column: 51, scope: !6867)
!6870 = !DILocation(line: 38, column: 9, scope: !6867)
!6871 = !DILocation(line: 38, column: 15, scope: !6867)
!6872 = !DILocation(line: 38, column: 20, scope: !6867)
!6873 = !DILocation(line: 38, column: 2, scope: !6867)
!6874 = distinct !DISubprogram(name: "add_quirk", scope: !2624, file: !2624, line: 137, type: !2636, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6875 = !DILocalVariable(name: "card", arg: 1, scope: !6874, file: !2624, line: 137, type: !57)
!6876 = !DILocation(line: 137, column: 62, scope: !6874)
!6877 = !DILocalVariable(name: "data", arg: 2, scope: !6874, file: !2624, line: 137, type: !119)
!6878 = !DILocation(line: 137, column: 72, scope: !6874)
!6879 = !DILocation(line: 139, column: 18, scope: !6874)
!6880 = !DILocation(line: 139, column: 2, scope: !6874)
!6881 = !DILocation(line: 139, column: 8, scope: !6874)
!6882 = !DILocation(line: 139, column: 15, scope: !6874)
!6883 = !DILocation(line: 140, column: 1, scope: !6874)
!6884 = distinct !DISubprogram(name: "mmc_select_hs400es", scope: !3, file: !3, line: 1334, type: !2642, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!6885 = !DILocalVariable(name: "card", arg: 1, scope: !6884, file: !3, line: 1334, type: !57)
!6886 = !DILocation(line: 1334, column: 48, scope: !6884)
!6887 = !DILocalVariable(name: "host", scope: !6884, file: !3, line: 1336, type: !62)
!6888 = !DILocation(line: 1336, column: 19, scope: !6884)
!6889 = !DILocation(line: 1336, column: 26, scope: !6884)
!6890 = !DILocation(line: 1336, column: 32, scope: !6884)
!6891 = !DILocalVariable(name: "err", scope: !6884, file: !3, line: 1337, type: !119)
!6892 = !DILocation(line: 1337, column: 6, scope: !6884)
!6893 = !DILocalVariable(name: "val", scope: !6884, file: !3, line: 1338, type: !529)
!6894 = !DILocation(line: 1338, column: 5, scope: !6884)
!6895 = !DILocation(line: 1340, column: 8, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1340, column: 6)
!6897 = !DILocation(line: 1340, column: 14, scope: !6896)
!6898 = !DILocation(line: 1340, column: 19, scope: !6896)
!6899 = !DILocation(line: 1340, column: 6, scope: !6884)
!6900 = !DILocation(line: 1341, column: 7, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 1340, column: 42)
!6902 = !DILocation(line: 1342, column: 3, scope: !6901)
!6903 = !DILocation(line: 1345, column: 6, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1345, column: 6)
!6905 = !DILocation(line: 1345, column: 12, scope: !6904)
!6906 = !DILocation(line: 1345, column: 27, scope: !6904)
!6907 = !DILocation(line: 1345, column: 6, scope: !6884)
!6908 = !DILocation(line: 1346, column: 32, scope: !6904)
!6909 = !DILocation(line: 1346, column: 9, scope: !6904)
!6910 = !DILocation(line: 1346, column: 7, scope: !6904)
!6911 = !DILocation(line: 1346, column: 3, scope: !6904)
!6912 = !DILocation(line: 1348, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1348, column: 6)
!6914 = !DILocation(line: 1348, column: 10, scope: !6913)
!6915 = !DILocation(line: 1348, column: 13, scope: !6913)
!6916 = !DILocation(line: 1348, column: 19, scope: !6913)
!6917 = !DILocation(line: 1348, column: 34, scope: !6913)
!6918 = !DILocation(line: 1348, column: 6, scope: !6884)
!6919 = !DILocation(line: 1349, column: 32, scope: !6913)
!6920 = !DILocation(line: 1349, column: 9, scope: !6913)
!6921 = !DILocation(line: 1349, column: 7, scope: !6913)
!6922 = !DILocation(line: 1349, column: 3, scope: !6913)
!6923 = !DILocation(line: 1352, column: 6, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1352, column: 6)
!6925 = !DILocation(line: 1352, column: 6, scope: !6884)
!6926 = !DILocation(line: 1353, column: 3, scope: !6924)
!6927 = !DILocation(line: 1355, column: 29, scope: !6884)
!6928 = !DILocation(line: 1355, column: 8, scope: !6884)
!6929 = !DILocation(line: 1355, column: 6, scope: !6884)
!6930 = !DILocation(line: 1356, column: 6, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1356, column: 6)
!6932 = !DILocation(line: 1356, column: 10, scope: !6931)
!6933 = !DILocation(line: 1356, column: 6, scope: !6884)
!6934 = !DILocation(line: 1357, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 1356, column: 30)
!6936 = !DILocation(line: 1359, column: 9, scope: !6935)
!6937 = !DILocation(line: 1359, column: 13, scope: !6935)
!6938 = !DILocation(line: 1359, column: 19, scope: !6935)
!6939 = !DILocation(line: 1359, column: 7, scope: !6935)
!6940 = !DILocation(line: 1360, column: 3, scope: !6935)
!6941 = !DILocation(line: 1364, column: 21, scope: !6884)
!6942 = !DILocation(line: 1366, column: 7, scope: !6884)
!6943 = !DILocation(line: 1366, column: 13, scope: !6884)
!6944 = !DILocation(line: 1366, column: 21, scope: !6884)
!6945 = !DILocation(line: 1364, column: 8, scope: !6884)
!6946 = !DILocation(line: 1364, column: 6, scope: !6884)
!6947 = !DILocation(line: 1368, column: 6, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1368, column: 6)
!6949 = !DILocation(line: 1368, column: 6, scope: !6884)
!6950 = !DILocation(line: 1369, column: 3, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 1368, column: 11)
!6952 = !DILocation(line: 1371, column: 3, scope: !6951)
!6953 = !DILocation(line: 1374, column: 17, scope: !6884)
!6954 = !DILocation(line: 1374, column: 2, scope: !6884)
!6955 = !DILocation(line: 1375, column: 26, scope: !6884)
!6956 = !DILocation(line: 1375, column: 8, scope: !6884)
!6957 = !DILocation(line: 1375, column: 6, scope: !6884)
!6958 = !DILocation(line: 1376, column: 6, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1376, column: 6)
!6960 = !DILocation(line: 1376, column: 6, scope: !6884)
!6961 = !DILocation(line: 1377, column: 3, scope: !6959)
!6962 = !DILocation(line: 1379, column: 16, scope: !6884)
!6963 = !DILocation(line: 1379, column: 22, scope: !6884)
!6964 = !DILocation(line: 1379, column: 28, scope: !6884)
!6965 = !DILocation(line: 1379, column: 36, scope: !6884)
!6966 = !DILocation(line: 1379, column: 2, scope: !6884)
!6967 = !DILocation(line: 1382, column: 6, scope: !6884)
!6968 = !DILocation(line: 1383, column: 19, scope: !6884)
!6969 = !DILocation(line: 1385, column: 5, scope: !6884)
!6970 = !DILocation(line: 1386, column: 5, scope: !6884)
!6971 = !DILocation(line: 1386, column: 11, scope: !6884)
!6972 = !DILocation(line: 1386, column: 19, scope: !6884)
!6973 = !DILocation(line: 1383, column: 8, scope: !6884)
!6974 = !DILocation(line: 1383, column: 6, scope: !6884)
!6975 = !DILocation(line: 1387, column: 6, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1387, column: 6)
!6977 = !DILocation(line: 1387, column: 6, scope: !6884)
!6978 = !DILocation(line: 1388, column: 3, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 1387, column: 11)
!6980 = !DILocation(line: 1390, column: 3, scope: !6979)
!6981 = !DILocation(line: 1393, column: 25, scope: !6884)
!6982 = !DILocation(line: 1393, column: 2, scope: !6884)
!6983 = !DILocation(line: 1397, column: 8, scope: !6884)
!6984 = !DILocation(line: 1397, column: 14, scope: !6884)
!6985 = !DILocation(line: 1397, column: 29, scope: !6884)
!6986 = !DILocation(line: 1396, column: 29, scope: !6884)
!6987 = !DILocation(line: 1396, column: 8, scope: !6884)
!6988 = !DILocation(line: 1396, column: 6, scope: !6884)
!6989 = !DILocation(line: 1398, column: 21, scope: !6884)
!6990 = !DILocation(line: 1399, column: 26, scope: !6884)
!6991 = !DILocation(line: 1400, column: 7, scope: !6884)
!6992 = !DILocation(line: 1400, column: 13, scope: !6884)
!6993 = !DILocation(line: 1400, column: 21, scope: !6884)
!6994 = !DILocation(line: 1398, column: 8, scope: !6884)
!6995 = !DILocation(line: 1398, column: 6, scope: !6884)
!6996 = !DILocation(line: 1402, column: 6, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1402, column: 6)
!6998 = !DILocation(line: 1402, column: 6, scope: !6884)
!6999 = !DILocation(line: 1403, column: 3, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 1402, column: 11)
!7001 = !DILocation(line: 1405, column: 3, scope: !7000)
!7002 = !DILocation(line: 1409, column: 17, scope: !6884)
!7003 = !DILocation(line: 1409, column: 2, scope: !6884)
!7004 = !DILocation(line: 1412, column: 2, scope: !6884)
!7005 = !DILocation(line: 1412, column: 8, scope: !6884)
!7006 = !DILocation(line: 1412, column: 12, scope: !6884)
!7007 = !DILocation(line: 1412, column: 28, scope: !6884)
!7008 = !DILocation(line: 1413, column: 6, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1413, column: 6)
!7010 = !DILocation(line: 1413, column: 12, scope: !7009)
!7011 = !DILocation(line: 1413, column: 17, scope: !7009)
!7012 = !DILocation(line: 1413, column: 6, scope: !6884)
!7013 = !DILocation(line: 1414, column: 3, scope: !7009)
!7014 = !DILocation(line: 1414, column: 9, scope: !7009)
!7015 = !DILocation(line: 1414, column: 14, scope: !7009)
!7016 = !DILocation(line: 1414, column: 36, scope: !7009)
!7017 = !DILocation(line: 1414, column: 43, scope: !7009)
!7018 = !DILocation(line: 1414, column: 49, scope: !7009)
!7019 = !DILocation(line: 1416, column: 26, scope: !6884)
!7020 = !DILocation(line: 1416, column: 8, scope: !6884)
!7021 = !DILocation(line: 1416, column: 6, scope: !6884)
!7022 = !DILocation(line: 1417, column: 6, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1417, column: 6)
!7024 = !DILocation(line: 1417, column: 6, scope: !6884)
!7025 = !DILocation(line: 1418, column: 3, scope: !7023)
!7026 = !DILocation(line: 1420, column: 2, scope: !6884)
!7027 = !DILabel(scope: !6884, name: "out_err", file: !3, line: 1422)
!7028 = !DILocation(line: 1422, column: 1, scope: !6884)
!7029 = !DILocation(line: 1423, column: 2, scope: !6884)
!7030 = !DILocation(line: 1425, column: 9, scope: !6884)
!7031 = !DILocation(line: 1425, column: 2, scope: !6884)
!7032 = !DILocation(line: 1426, column: 1, scope: !6884)
!7033 = distinct !DISubprogram(name: "mmc_select_hs200", scope: !3, file: !3, line: 1435, type: !2642, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!7034 = !DILocalVariable(name: "card", arg: 1, scope: !7033, file: !3, line: 1435, type: !57)
!7035 = !DILocation(line: 1435, column: 46, scope: !7033)
!7036 = !DILocalVariable(name: "host", scope: !7033, file: !3, line: 1437, type: !62)
!7037 = !DILocation(line: 1437, column: 19, scope: !7033)
!7038 = !DILocation(line: 1437, column: 26, scope: !7033)
!7039 = !DILocation(line: 1437, column: 32, scope: !7033)
!7040 = !DILocalVariable(name: "old_timing", scope: !7033, file: !3, line: 1438, type: !7)
!7041 = !DILocation(line: 1438, column: 15, scope: !7033)
!7042 = !DILocalVariable(name: "old_signal_voltage", scope: !7033, file: !3, line: 1438, type: !7)
!7043 = !DILocation(line: 1438, column: 27, scope: !7033)
!7044 = !DILocalVariable(name: "err", scope: !7033, file: !3, line: 1439, type: !119)
!7045 = !DILocation(line: 1439, column: 6, scope: !7033)
!7046 = !DILocalVariable(name: "val", scope: !7033, file: !3, line: 1440, type: !529)
!7047 = !DILocation(line: 1440, column: 5, scope: !7033)
!7048 = !DILocation(line: 1442, column: 23, scope: !7033)
!7049 = !DILocation(line: 1442, column: 29, scope: !7033)
!7050 = !DILocation(line: 1442, column: 33, scope: !7033)
!7051 = !DILocation(line: 1442, column: 21, scope: !7033)
!7052 = !DILocation(line: 1443, column: 6, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1443, column: 6)
!7054 = !DILocation(line: 1443, column: 12, scope: !7053)
!7055 = !DILocation(line: 1443, column: 27, scope: !7053)
!7056 = !DILocation(line: 1443, column: 6, scope: !7033)
!7057 = !DILocation(line: 1444, column: 32, scope: !7053)
!7058 = !DILocation(line: 1444, column: 9, scope: !7053)
!7059 = !DILocation(line: 1444, column: 7, scope: !7053)
!7060 = !DILocation(line: 1444, column: 3, scope: !7053)
!7061 = !DILocation(line: 1446, column: 6, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1446, column: 6)
!7063 = !DILocation(line: 1446, column: 10, scope: !7062)
!7064 = !DILocation(line: 1446, column: 13, scope: !7062)
!7065 = !DILocation(line: 1446, column: 19, scope: !7062)
!7066 = !DILocation(line: 1446, column: 34, scope: !7062)
!7067 = !DILocation(line: 1446, column: 6, scope: !7033)
!7068 = !DILocation(line: 1447, column: 32, scope: !7062)
!7069 = !DILocation(line: 1447, column: 9, scope: !7062)
!7070 = !DILocation(line: 1447, column: 7, scope: !7062)
!7071 = !DILocation(line: 1447, column: 3, scope: !7062)
!7072 = !DILocation(line: 1450, column: 6, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1450, column: 6)
!7074 = !DILocation(line: 1450, column: 6, scope: !7033)
!7075 = !DILocation(line: 1451, column: 10, scope: !7073)
!7076 = !DILocation(line: 1451, column: 3, scope: !7073)
!7077 = !DILocation(line: 1453, column: 25, scope: !7033)
!7078 = !DILocation(line: 1453, column: 2, scope: !7033)
!7079 = !DILocation(line: 1459, column: 29, scope: !7033)
!7080 = !DILocation(line: 1459, column: 8, scope: !7033)
!7081 = !DILocation(line: 1459, column: 6, scope: !7033)
!7082 = !DILocation(line: 1460, column: 6, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1460, column: 6)
!7084 = !DILocation(line: 1460, column: 10, scope: !7083)
!7085 = !DILocation(line: 1460, column: 6, scope: !7033)
!7086 = !DILocation(line: 1462, column: 9, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1460, column: 15)
!7088 = !DILocation(line: 1462, column: 15, scope: !7087)
!7089 = !DILocation(line: 1462, column: 30, scope: !7087)
!7090 = !DILocation(line: 1461, column: 30, scope: !7087)
!7091 = !DILocation(line: 1461, column: 9, scope: !7087)
!7092 = !DILocation(line: 1461, column: 7, scope: !7087)
!7093 = !DILocation(line: 1463, column: 22, scope: !7087)
!7094 = !DILocation(line: 1464, column: 27, scope: !7087)
!7095 = !DILocation(line: 1465, column: 8, scope: !7087)
!7096 = !DILocation(line: 1465, column: 14, scope: !7087)
!7097 = !DILocation(line: 1465, column: 22, scope: !7087)
!7098 = !DILocation(line: 1463, column: 9, scope: !7087)
!7099 = !DILocation(line: 1463, column: 7, scope: !7087)
!7100 = !DILocation(line: 1467, column: 7, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 1467, column: 7)
!7102 = !DILocation(line: 1467, column: 7, scope: !7087)
!7103 = !DILocation(line: 1468, column: 4, scope: !7101)
!7104 = !DILocation(line: 1469, column: 16, scope: !7087)
!7105 = !DILocation(line: 1469, column: 22, scope: !7087)
!7106 = !DILocation(line: 1469, column: 26, scope: !7087)
!7107 = !DILocation(line: 1469, column: 14, scope: !7087)
!7108 = !DILocation(line: 1470, column: 18, scope: !7087)
!7109 = !DILocation(line: 1470, column: 3, scope: !7087)
!7110 = !DILocation(line: 1477, column: 27, scope: !7087)
!7111 = !DILocation(line: 1477, column: 9, scope: !7087)
!7112 = !DILocation(line: 1477, column: 7, scope: !7087)
!7113 = !DILocation(line: 1483, column: 7, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 1483, column: 7)
!7115 = !DILocation(line: 1483, column: 11, scope: !7114)
!7116 = !DILocation(line: 1483, column: 7, scope: !7087)
!7117 = !DILocation(line: 1484, column: 19, scope: !7114)
!7118 = !DILocation(line: 1484, column: 25, scope: !7114)
!7119 = !DILocation(line: 1484, column: 4, scope: !7114)
!7120 = !DILocation(line: 1485, column: 2, scope: !7087)
!7121 = !DILocation(line: 1460, column: 12, scope: !7083)
!7122 = !DILabel(scope: !7033, name: "err", file: !3, line: 1486)
!7123 = !DILocation(line: 1486, column: 1, scope: !7033)
!7124 = !DILocation(line: 1487, column: 6, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1487, column: 6)
!7126 = !DILocation(line: 1487, column: 6, scope: !7033)
!7127 = !DILocation(line: 1489, column: 30, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1489, column: 7)
!7129 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 1487, column: 11)
!7130 = !DILocation(line: 1489, column: 36, scope: !7128)
!7131 = !DILocation(line: 1489, column: 7, scope: !7128)
!7132 = !DILocation(line: 1489, column: 7, scope: !7129)
!7133 = !DILocation(line: 1490, column: 8, scope: !7128)
!7134 = !DILocation(line: 1490, column: 4, scope: !7128)
!7135 = !DILocation(line: 1492, column: 3, scope: !7129)
!7136 = !DILocation(line: 1494, column: 2, scope: !7129)
!7137 = !DILocation(line: 1495, column: 9, scope: !7033)
!7138 = !DILocation(line: 1495, column: 2, scope: !7033)
!7139 = !DILocation(line: 1496, column: 1, scope: !7033)
!7140 = distinct !DISubprogram(name: "mmc_select_hs", scope: !3, file: !3, line: 1057, type: !2642, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!7141 = !DILocalVariable(name: "card", arg: 1, scope: !7140, file: !3, line: 1057, type: !57)
!7142 = !DILocation(line: 1057, column: 43, scope: !7140)
!7143 = !DILocalVariable(name: "err", scope: !7140, file: !3, line: 1059, type: !119)
!7144 = !DILocation(line: 1059, column: 6, scope: !7140)
!7145 = !DILocation(line: 1061, column: 21, scope: !7140)
!7146 = !DILocation(line: 1063, column: 7, scope: !7140)
!7147 = !DILocation(line: 1063, column: 13, scope: !7140)
!7148 = !DILocation(line: 1063, column: 21, scope: !7140)
!7149 = !DILocation(line: 1061, column: 8, scope: !7140)
!7150 = !DILocation(line: 1061, column: 6, scope: !7140)
!7151 = !DILocation(line: 1065, column: 6, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 1065, column: 6)
!7153 = !DILocation(line: 1065, column: 6, scope: !7140)
!7154 = !DILocation(line: 1066, column: 3, scope: !7152)
!7155 = !DILocation(line: 1069, column: 9, scope: !7140)
!7156 = !DILocation(line: 1069, column: 2, scope: !7140)
!7157 = distinct !DISubprogram(name: "mmc_select_driver_type", scope: !3, file: !3, line: 1312, type: !2907, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!7158 = !DILocalVariable(name: "card", arg: 1, scope: !7157, file: !3, line: 1312, type: !57)
!7159 = !DILocation(line: 1312, column: 53, scope: !7157)
!7160 = !DILocalVariable(name: "card_drv_type", scope: !7157, file: !3, line: 1314, type: !119)
!7161 = !DILocation(line: 1314, column: 6, scope: !7157)
!7162 = !DILocalVariable(name: "drive_strength", scope: !7157, file: !3, line: 1314, type: !119)
!7163 = !DILocation(line: 1314, column: 21, scope: !7157)
!7164 = !DILocalVariable(name: "drv_type", scope: !7157, file: !3, line: 1314, type: !119)
!7165 = !DILocation(line: 1314, column: 37, scope: !7157)
!7166 = !DILocalVariable(name: "fixed_drv_type", scope: !7157, file: !3, line: 1315, type: !119)
!7167 = !DILocation(line: 1315, column: 6, scope: !7157)
!7168 = !DILocation(line: 1315, column: 23, scope: !7157)
!7169 = !DILocation(line: 1315, column: 29, scope: !7157)
!7170 = !DILocation(line: 1315, column: 35, scope: !7157)
!7171 = !DILocation(line: 1317, column: 18, scope: !7157)
!7172 = !DILocation(line: 1317, column: 24, scope: !7157)
!7173 = !DILocation(line: 1317, column: 32, scope: !7157)
!7174 = !DILocation(line: 1317, column: 52, scope: !7157)
!7175 = !DILocation(line: 1317, column: 16, scope: !7157)
!7176 = !DILocation(line: 1320, column: 6, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1320, column: 6)
!7178 = !DILocation(line: 1320, column: 21, scope: !7177)
!7179 = !DILocation(line: 1320, column: 6, scope: !7157)
!7180 = !DILocation(line: 1321, column: 20, scope: !7177)
!7181 = !DILocation(line: 1321, column: 36, scope: !7177)
!7182 = !DILocation(line: 1321, column: 34, scope: !7177)
!7183 = !DILocation(line: 1322, column: 8, scope: !7177)
!7184 = !DILocation(line: 1321, column: 18, scope: !7177)
!7185 = !DILocation(line: 1321, column: 3, scope: !7177)
!7186 = !DILocation(line: 1324, column: 46, scope: !7177)
!7187 = !DILocation(line: 1325, column: 11, scope: !7177)
!7188 = !DILocation(line: 1325, column: 17, scope: !7177)
!7189 = !DILocation(line: 1325, column: 25, scope: !7177)
!7190 = !DILocation(line: 1326, column: 11, scope: !7177)
!7191 = !DILocation(line: 1324, column: 20, scope: !7177)
!7192 = !DILocation(line: 1324, column: 18, scope: !7177)
!7193 = !DILocation(line: 1328, column: 25, scope: !7157)
!7194 = !DILocation(line: 1328, column: 2, scope: !7157)
!7195 = !DILocation(line: 1328, column: 8, scope: !7157)
!7196 = !DILocation(line: 1328, column: 23, scope: !7157)
!7197 = !DILocation(line: 1330, column: 6, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 1330, column: 6)
!7199 = !DILocation(line: 1330, column: 6, scope: !7157)
!7200 = !DILocation(line: 1331, column: 23, scope: !7198)
!7201 = !DILocation(line: 1331, column: 29, scope: !7198)
!7202 = !DILocation(line: 1331, column: 35, scope: !7198)
!7203 = !DILocation(line: 1331, column: 3, scope: !7198)
!7204 = !DILocation(line: 1332, column: 1, scope: !7157)
!7205 = distinct !DISubprogram(name: "mmc_compare_ext_csds", scope: !3, file: !3, line: 696, type: !4020, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!7206 = !DILocalVariable(name: "card", arg: 1, scope: !7205, file: !3, line: 696, type: !57)
!7207 = !DILocation(line: 696, column: 50, scope: !7205)
!7208 = !DILocalVariable(name: "bus_width", arg: 2, scope: !7205, file: !3, line: 696, type: !7)
!7209 = !DILocation(line: 696, column: 65, scope: !7205)
!7210 = !DILocalVariable(name: "bw_ext_csd", scope: !7205, file: !3, line: 698, type: !4906)
!7211 = !DILocation(line: 698, column: 6, scope: !7205)
!7212 = !DILocalVariable(name: "err", scope: !7205, file: !3, line: 699, type: !119)
!7213 = !DILocation(line: 699, column: 6, scope: !7205)
!7214 = !DILocation(line: 701, column: 6, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 701, column: 6)
!7216 = !DILocation(line: 701, column: 16, scope: !7215)
!7217 = !DILocation(line: 701, column: 6, scope: !7205)
!7218 = !DILocation(line: 702, column: 3, scope: !7215)
!7219 = !DILocation(line: 704, column: 24, scope: !7205)
!7220 = !DILocation(line: 704, column: 8, scope: !7205)
!7221 = !DILocation(line: 704, column: 6, scope: !7205)
!7222 = !DILocation(line: 705, column: 6, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 705, column: 6)
!7224 = !DILocation(line: 705, column: 6, scope: !7205)
!7225 = !DILocation(line: 706, column: 10, scope: !7223)
!7226 = !DILocation(line: 706, column: 3, scope: !7223)
!7227 = !DILocation(line: 709, column: 11, scope: !7205)
!7228 = !DILocation(line: 709, column: 17, scope: !7205)
!7229 = !DILocation(line: 709, column: 25, scope: !7205)
!7230 = !DILocation(line: 710, column: 4, scope: !7205)
!7231 = !DILocation(line: 709, column: 47, scope: !7205)
!7232 = !DILocation(line: 710, column: 43, scope: !7205)
!7233 = !DILocation(line: 711, column: 4, scope: !7205)
!7234 = !DILocation(line: 711, column: 10, scope: !7205)
!7235 = !DILocation(line: 711, column: 18, scope: !7205)
!7236 = !DILocation(line: 712, column: 4, scope: !7205)
!7237 = !DILocation(line: 711, column: 39, scope: !7205)
!7238 = !DILocation(line: 712, column: 41, scope: !7205)
!7239 = !DILocation(line: 713, column: 4, scope: !7205)
!7240 = !DILocation(line: 713, column: 10, scope: !7205)
!7241 = !DILocation(line: 713, column: 18, scope: !7205)
!7242 = !DILocation(line: 714, column: 4, scope: !7205)
!7243 = !DILocation(line: 713, column: 22, scope: !7205)
!7244 = !DILocation(line: 714, column: 29, scope: !7205)
!7245 = !DILocation(line: 715, column: 4, scope: !7205)
!7246 = !DILocation(line: 715, column: 10, scope: !7205)
!7247 = !DILocation(line: 715, column: 18, scope: !7205)
!7248 = !DILocation(line: 716, column: 4, scope: !7205)
!7249 = !DILocation(line: 715, column: 40, scope: !7205)
!7250 = !DILocation(line: 716, column: 35, scope: !7205)
!7251 = !DILocation(line: 717, column: 4, scope: !7205)
!7252 = !DILocation(line: 717, column: 10, scope: !7205)
!7253 = !DILocation(line: 717, column: 18, scope: !7205)
!7254 = !DILocation(line: 718, column: 4, scope: !7205)
!7255 = !DILocation(line: 717, column: 32, scope: !7205)
!7256 = !DILocation(line: 718, column: 35, scope: !7205)
!7257 = !DILocation(line: 719, column: 4, scope: !7205)
!7258 = !DILocation(line: 719, column: 10, scope: !7205)
!7259 = !DILocation(line: 719, column: 18, scope: !7205)
!7260 = !DILocation(line: 720, column: 4, scope: !7205)
!7261 = !DILocation(line: 719, column: 34, scope: !7205)
!7262 = !DILocation(line: 720, column: 37, scope: !7205)
!7263 = !DILocation(line: 721, column: 4, scope: !7205)
!7264 = !DILocation(line: 721, column: 10, scope: !7205)
!7265 = !DILocation(line: 721, column: 18, scope: !7205)
!7266 = !DILocation(line: 722, column: 4, scope: !7205)
!7267 = !DILocation(line: 721, column: 40, scope: !7205)
!7268 = !DILocation(line: 722, column: 40, scope: !7205)
!7269 = !DILocation(line: 723, column: 4, scope: !7205)
!7270 = !DILocation(line: 723, column: 10, scope: !7205)
!7271 = !DILocation(line: 723, column: 18, scope: !7205)
!7272 = !DILocation(line: 724, column: 4, scope: !7205)
!7273 = !DILocation(line: 723, column: 41, scope: !7205)
!7274 = !DILocation(line: 724, column: 44, scope: !7205)
!7275 = !DILocation(line: 725, column: 4, scope: !7205)
!7276 = !DILocation(line: 725, column: 10, scope: !7205)
!7277 = !DILocation(line: 725, column: 18, scope: !7205)
!7278 = !DILocation(line: 726, column: 4, scope: !7205)
!7279 = !DILocation(line: 725, column: 40, scope: !7205)
!7280 = !DILocation(line: 726, column: 43, scope: !7205)
!7281 = !DILocation(line: 727, column: 4, scope: !7205)
!7282 = !DILocation(line: 727, column: 10, scope: !7205)
!7283 = !DILocation(line: 727, column: 18, scope: !7205)
!7284 = !DILocation(line: 728, column: 4, scope: !7205)
!7285 = !DILocation(line: 727, column: 36, scope: !7205)
!7286 = !DILocation(line: 728, column: 39, scope: !7205)
!7287 = !DILocation(line: 729, column: 4, scope: !7205)
!7288 = !DILocation(line: 729, column: 10, scope: !7205)
!7289 = !DILocation(line: 729, column: 18, scope: !7205)
!7290 = !DILocation(line: 730, column: 4, scope: !7205)
!7291 = !DILocation(line: 729, column: 37, scope: !7205)
!7292 = !DILocation(line: 730, column: 40, scope: !7205)
!7293 = !DILocation(line: 731, column: 4, scope: !7205)
!7294 = !DILocation(line: 731, column: 10, scope: !7205)
!7295 = !DILocation(line: 731, column: 18, scope: !7205)
!7296 = !DILocation(line: 732, column: 4, scope: !7205)
!7297 = !DILocation(line: 731, column: 42, scope: !7205)
!7298 = !DILocation(line: 732, column: 45, scope: !7205)
!7299 = !DILocation(line: 733, column: 4, scope: !7205)
!7300 = !DILocation(line: 733, column: 10, scope: !7205)
!7301 = !DILocation(line: 733, column: 18, scope: !7205)
!7302 = !DILocation(line: 734, column: 4, scope: !7205)
!7303 = !DILocation(line: 733, column: 32, scope: !7205)
!7304 = !DILocation(line: 734, column: 35, scope: !7205)
!7305 = !DILocation(line: 735, column: 4, scope: !7205)
!7306 = !DILocation(line: 735, column: 10, scope: !7205)
!7307 = !DILocation(line: 735, column: 18, scope: !7205)
!7308 = !DILocation(line: 736, column: 4, scope: !7205)
!7309 = !DILocation(line: 735, column: 33, scope: !7205)
!7310 = !DILocation(line: 736, column: 37, scope: !7205)
!7311 = !DILocation(line: 737, column: 4, scope: !7205)
!7312 = !DILocation(line: 737, column: 10, scope: !7205)
!7313 = !DILocation(line: 737, column: 18, scope: !7205)
!7314 = !DILocation(line: 738, column: 4, scope: !7205)
!7315 = !DILocation(line: 737, column: 33, scope: !7205)
!7316 = !DILocation(line: 738, column: 37, scope: !7205)
!7317 = !DILocation(line: 739, column: 4, scope: !7205)
!7318 = !DILocation(line: 739, column: 10, scope: !7205)
!7319 = !DILocation(line: 739, column: 18, scope: !7205)
!7320 = !DILocation(line: 740, column: 4, scope: !7205)
!7321 = !DILocation(line: 739, column: 33, scope: !7205)
!7322 = !DILocation(line: 740, column: 37, scope: !7205)
!7323 = !DILocation(line: 741, column: 4, scope: !7205)
!7324 = !DILocation(line: 741, column: 10, scope: !7205)
!7325 = !DILocation(line: 741, column: 18, scope: !7205)
!7326 = !DILocation(line: 742, column: 4, scope: !7205)
!7327 = !DILocation(line: 741, column: 33, scope: !7205)
!7328 = !DILocation(line: 742, column: 37, scope: !7205)
!7329 = !DILocation(line: 743, column: 4, scope: !7205)
!7330 = !DILocation(line: 743, column: 10, scope: !7205)
!7331 = !DILocation(line: 743, column: 18, scope: !7205)
!7332 = !DILocation(line: 744, column: 4, scope: !7205)
!7333 = !DILocation(line: 743, column: 36, scope: !7205)
!7334 = !DILocation(line: 744, column: 39, scope: !7205)
!7335 = !DILocation(line: 745, column: 4, scope: !7205)
!7336 = !DILocation(line: 745, column: 10, scope: !7205)
!7337 = !DILocation(line: 745, column: 18, scope: !7205)
!7338 = !DILocation(line: 746, column: 4, scope: !7205)
!7339 = !DILocation(line: 745, column: 36, scope: !7205)
!7340 = !DILocation(line: 746, column: 39, scope: !7205)
!7341 = !DILocation(line: 747, column: 4, scope: !7205)
!7342 = !DILocation(line: 747, column: 10, scope: !7205)
!7343 = !DILocation(line: 747, column: 18, scope: !7205)
!7344 = !DILocation(line: 748, column: 4, scope: !7205)
!7345 = !DILocation(line: 747, column: 36, scope: !7205)
!7346 = !DILocation(line: 748, column: 39, scope: !7205)
!7347 = !DILocation(line: 749, column: 4, scope: !7205)
!7348 = !DILocation(line: 749, column: 10, scope: !7205)
!7349 = !DILocation(line: 749, column: 18, scope: !7205)
!7350 = !DILocation(line: 750, column: 4, scope: !7205)
!7351 = !DILocation(line: 749, column: 36, scope: !7205)
!7352 = !DILocation(line: 750, column: 39, scope: !7205)
!7353 = !DILocation(line: 751, column: 4, scope: !7205)
!7354 = !DILocation(line: 751, column: 10, scope: !7205)
!7355 = !DILocation(line: 751, column: 18, scope: !7205)
!7356 = !DILocation(line: 752, column: 4, scope: !7205)
!7357 = !DILocation(line: 751, column: 37, scope: !7205)
!7358 = !DILocation(line: 752, column: 40, scope: !7205)
!7359 = !DILocation(line: 753, column: 4, scope: !7205)
!7360 = !DILocation(line: 753, column: 10, scope: !7205)
!7361 = !DILocation(line: 753, column: 18, scope: !7205)
!7362 = !DILocation(line: 754, column: 4, scope: !7205)
!7363 = !DILocation(line: 753, column: 37, scope: !7205)
!7364 = !DILocation(line: 754, column: 40, scope: !7205)
!7365 = !DILocation(line: 755, column: 4, scope: !7205)
!7366 = !DILocation(line: 755, column: 10, scope: !7205)
!7367 = !DILocation(line: 755, column: 18, scope: !7205)
!7368 = !DILocation(line: 756, column: 4, scope: !7205)
!7369 = !DILocation(line: 755, column: 40, scope: !7205)
!7370 = !DILocation(line: 756, column: 43, scope: !7205)
!7371 = !DILocation(line: 757, column: 4, scope: !7205)
!7372 = !DILocation(line: 757, column: 10, scope: !7205)
!7373 = !DILocation(line: 757, column: 18, scope: !7205)
!7374 = !DILocation(line: 758, column: 4, scope: !7205)
!7375 = !DILocation(line: 757, column: 40, scope: !7205)
!7376 = !DILocation(line: 758, column: 43, scope: !7205)
!7377 = !DILocation(line: 759, column: 4, scope: !7205)
!7378 = !DILocation(line: 759, column: 10, scope: !7205)
!7379 = !DILocation(line: 759, column: 18, scope: !7205)
!7380 = !DILocation(line: 760, column: 4, scope: !7205)
!7381 = !DILocation(line: 759, column: 41, scope: !7205)
!7382 = !DILocation(line: 0, scope: !7205)
!7383 = !DILocation(line: 709, column: 8, scope: !7205)
!7384 = !DILocation(line: 709, column: 6, scope: !7205)
!7385 = !DILocation(line: 762, column: 6, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 762, column: 6)
!7387 = !DILocation(line: 762, column: 6, scope: !7205)
!7388 = !DILocation(line: 763, column: 7, scope: !7386)
!7389 = !DILocation(line: 763, column: 3, scope: !7386)
!7390 = !DILocation(line: 765, column: 8, scope: !7205)
!7391 = !DILocation(line: 765, column: 2, scope: !7205)
!7392 = !DILocation(line: 766, column: 9, scope: !7205)
!7393 = !DILocation(line: 766, column: 2, scope: !7205)
!7394 = !DILocation(line: 767, column: 1, scope: !7205)
!7395 = distinct !DISubprogram(name: "__mmc_select_powerclass", scope: !3, file: !3, line: 871, type: !4020, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !107)
!7396 = !DILocalVariable(name: "card", arg: 1, scope: !7395, file: !3, line: 871, type: !57)
!7397 = !DILocation(line: 871, column: 53, scope: !7395)
!7398 = !DILocalVariable(name: "bus_width", arg: 2, scope: !7395, file: !3, line: 872, type: !7)
!7399 = !DILocation(line: 872, column: 21, scope: !7395)
!7400 = !DILocalVariable(name: "host", scope: !7395, file: !3, line: 874, type: !62)
!7401 = !DILocation(line: 874, column: 19, scope: !7395)
!7402 = !DILocation(line: 874, column: 26, scope: !7395)
!7403 = !DILocation(line: 874, column: 32, scope: !7395)
!7404 = !DILocalVariable(name: "ext_csd", scope: !7395, file: !3, line: 875, type: !7405)
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!7406 = !DILocation(line: 875, column: 22, scope: !7395)
!7407 = !DILocation(line: 875, column: 33, scope: !7395)
!7408 = !DILocation(line: 875, column: 39, scope: !7395)
!7409 = !DILocalVariable(name: "pwrclass_val", scope: !7395, file: !3, line: 876, type: !7)
!7410 = !DILocation(line: 876, column: 15, scope: !7395)
!7411 = !DILocalVariable(name: "err", scope: !7395, file: !3, line: 877, type: !119)
!7412 = !DILocation(line: 877, column: 6, scope: !7395)
!7413 = !DILocation(line: 879, column: 15, scope: !7395)
!7414 = !DILocation(line: 879, column: 21, scope: !7395)
!7415 = !DILocation(line: 879, column: 25, scope: !7395)
!7416 = !DILocation(line: 879, column: 12, scope: !7395)
!7417 = !DILocation(line: 879, column: 2, scope: !7395)
!7418 = !DILocation(line: 881, column: 7, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 881, column: 7)
!7420 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 879, column: 30)
!7421 = !DILocation(line: 881, column: 13, scope: !7419)
!7422 = !DILocation(line: 881, column: 17, scope: !7419)
!7423 = !DILocation(line: 881, column: 23, scope: !7419)
!7424 = !DILocation(line: 881, column: 7, scope: !7420)
!7425 = !DILocation(line: 882, column: 19, scope: !7419)
!7426 = !DILocation(line: 882, column: 28, scope: !7419)
!7427 = !DILocation(line: 882, column: 17, scope: !7419)
!7428 = !DILocation(line: 882, column: 4, scope: !7419)
!7429 = !DILocation(line: 883, column: 12, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 883, column: 12)
!7431 = !DILocation(line: 883, column: 18, scope: !7430)
!7432 = !DILocation(line: 883, column: 22, scope: !7430)
!7433 = !DILocation(line: 883, column: 28, scope: !7430)
!7434 = !DILocation(line: 883, column: 12, scope: !7419)
!7435 = !DILocation(line: 884, column: 20, scope: !7430)
!7436 = !DILocation(line: 884, column: 30, scope: !7430)
!7437 = !DILocation(line: 884, column: 19, scope: !7430)
!7438 = !DILocation(line: 885, column: 5, scope: !7430)
!7439 = !DILocation(line: 885, column: 14, scope: !7430)
!7440 = !DILocation(line: 886, column: 5, scope: !7430)
!7441 = !DILocation(line: 886, column: 14, scope: !7430)
!7442 = !DILocation(line: 884, column: 17, scope: !7430)
!7443 = !DILocation(line: 884, column: 4, scope: !7430)
!7444 = !DILocation(line: 887, column: 12, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 887, column: 12)
!7446 = !DILocation(line: 887, column: 18, scope: !7445)
!7447 = !DILocation(line: 887, column: 22, scope: !7445)
!7448 = !DILocation(line: 887, column: 28, scope: !7445)
!7449 = !DILocation(line: 887, column: 12, scope: !7430)
!7450 = !DILocation(line: 888, column: 19, scope: !7445)
!7451 = !DILocation(line: 888, column: 28, scope: !7445)
!7452 = !DILocation(line: 888, column: 17, scope: !7445)
!7453 = !DILocation(line: 888, column: 4, scope: !7445)
!7454 = !DILocation(line: 889, column: 3, scope: !7420)
!7455 = !DILocation(line: 899, column: 7, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 899, column: 7)
!7457 = !DILocation(line: 899, column: 13, scope: !7456)
!7458 = !DILocation(line: 899, column: 17, scope: !7456)
!7459 = !DILocation(line: 899, column: 23, scope: !7456)
!7460 = !DILocation(line: 899, column: 7, scope: !7420)
!7461 = !DILocation(line: 900, column: 19, scope: !7456)
!7462 = !DILocation(line: 900, column: 28, scope: !7456)
!7463 = !DILocation(line: 900, column: 17, scope: !7456)
!7464 = !DILocation(line: 900, column: 4, scope: !7456)
!7465 = !DILocation(line: 901, column: 12, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 901, column: 12)
!7467 = !DILocation(line: 901, column: 18, scope: !7466)
!7468 = !DILocation(line: 901, column: 22, scope: !7466)
!7469 = !DILocation(line: 901, column: 28, scope: !7466)
!7470 = !DILocation(line: 901, column: 12, scope: !7456)
!7471 = !DILocation(line: 902, column: 20, scope: !7466)
!7472 = !DILocation(line: 902, column: 30, scope: !7466)
!7473 = !DILocation(line: 902, column: 19, scope: !7466)
!7474 = !DILocation(line: 903, column: 5, scope: !7466)
!7475 = !DILocation(line: 903, column: 14, scope: !7466)
!7476 = !DILocation(line: 904, column: 5, scope: !7466)
!7477 = !DILocation(line: 904, column: 14, scope: !7466)
!7478 = !DILocation(line: 902, column: 17, scope: !7466)
!7479 = !DILocation(line: 902, column: 4, scope: !7466)
!7480 = !DILocation(line: 905, column: 12, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 905, column: 12)
!7482 = !DILocation(line: 905, column: 18, scope: !7481)
!7483 = !DILocation(line: 905, column: 22, scope: !7481)
!7484 = !DILocation(line: 905, column: 28, scope: !7481)
!7485 = !DILocation(line: 905, column: 12, scope: !7466)
!7486 = !DILocation(line: 906, column: 20, scope: !7481)
!7487 = !DILocation(line: 906, column: 30, scope: !7481)
!7488 = !DILocation(line: 906, column: 19, scope: !7481)
!7489 = !DILocation(line: 907, column: 5, scope: !7481)
!7490 = !DILocation(line: 907, column: 14, scope: !7481)
!7491 = !DILocation(line: 908, column: 5, scope: !7481)
!7492 = !DILocation(line: 908, column: 14, scope: !7481)
!7493 = !DILocation(line: 906, column: 17, scope: !7481)
!7494 = !DILocation(line: 906, column: 4, scope: !7481)
!7495 = !DILocation(line: 909, column: 3, scope: !7420)
!7496 = !DILocation(line: 911, column: 3, scope: !7420)
!7497 = !DILocation(line: 913, column: 3, scope: !7420)
!7498 = !DILocation(line: 916, column: 6, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 916, column: 6)
!7500 = !DILocation(line: 916, column: 16, scope: !7499)
!7501 = !DILocation(line: 916, column: 6, scope: !7395)
!7502 = !DILocation(line: 917, column: 19, scope: !7499)
!7503 = !DILocation(line: 917, column: 32, scope: !7499)
!7504 = !DILocation(line: 917, column: 60, scope: !7499)
!7505 = !DILocation(line: 917, column: 16, scope: !7499)
!7506 = !DILocation(line: 917, column: 3, scope: !7499)
!7507 = !DILocation(line: 920, column: 19, scope: !7499)
!7508 = !DILocation(line: 920, column: 32, scope: !7499)
!7509 = !DILocation(line: 920, column: 60, scope: !7499)
!7510 = !DILocation(line: 920, column: 16, scope: !7499)
!7511 = !DILocation(line: 924, column: 6, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 924, column: 6)
!7513 = !DILocation(line: 924, column: 19, scope: !7512)
!7514 = !DILocation(line: 924, column: 6, scope: !7395)
!7515 = !DILocation(line: 925, column: 20, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 924, column: 24)
!7517 = !DILocation(line: 927, column: 6, scope: !7516)
!7518 = !DILocation(line: 928, column: 6, scope: !7516)
!7519 = !DILocation(line: 928, column: 12, scope: !7516)
!7520 = !DILocation(line: 928, column: 20, scope: !7516)
!7521 = !DILocation(line: 925, column: 9, scope: !7516)
!7522 = !DILocation(line: 925, column: 7, scope: !7516)
!7523 = !DILocation(line: 929, column: 2, scope: !7516)
!7524 = !DILocation(line: 931, column: 9, scope: !7395)
!7525 = !DILocation(line: 931, column: 2, scope: !7395)
!7526 = !DILocation(line: 932, column: 1, scope: !7395)
