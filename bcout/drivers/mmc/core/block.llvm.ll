; ModuleID = '../bcout/drivers/mmc/core/block.llvm.bc'
source_filename = "drivers/mmc/core/block.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mmc_blk_init6:\09\09\09"
module asm ".long\09mmc_blk_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.mmc_driver = type { %struct.device_driver, i32 (%struct.mmc_card*)*, void (%struct.mmc_card*)*, void (%struct.mmc_card*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.69, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.69 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.67, %struct.list_head, %struct.list_head, %union.anon.68 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.65 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.57, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.57 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.58, i32 }
%union.anon.58 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.35, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.35 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type { i8, i8, i16, i64 }
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.71, %union.anon.72, %union.anon.73, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.76, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type { %struct.anon.70, %struct.delayed_work, [1 x %struct.cpumask], i32, i32, i64, i8*, %struct.request_queue*, %struct.blk_flush_queue*, i8*, %struct.sbitmap, %struct.blk_mq_ctx*, i32, i16, i16, %struct.blk_mq_ctx**, %struct.spinlock, %struct.wait_queue_entry, %struct.atomic_t, %struct.blk_mq_tags*, %struct.blk_mq_tags*, i64, i64, [7 x i64], i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.hlist_node, %struct.hlist_node, %struct.kobject, i64, i64, i64, %struct.list_head, [0 x %struct.srcu_struct] }
%struct.anon.70 = type { %struct.spinlock, %struct.list_head, i64 }
%struct.cpumask = type { [1 x i64] }
%struct.sbitmap = type { i32, i32, i32, %struct.sbitmap_word* }
%struct.sbitmap_word = type { i64, i64, i64, %struct.spinlock }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.blk_mq_tags = type opaque
%struct.srcu_struct = type { [2 x i16], i16, i8, i8, %struct.swait_queue_head, %struct.callback_head*, %struct.callback_head**, %struct.work_struct }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%union.anon.71 = type { %struct.hlist_node }
%union.anon.72 = type { %struct.rb_node }
%union.anon.73 = type { %struct.anon.75 }
%struct.anon.75 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.76 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.77, void (i8*)*, i8* }
%union.anon.77 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.78, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.78 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.36, %union.anon.37, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.36 = type { %struct.list_head }
%union.anon.37 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type { i8 (%struct.blk_mq_hw_ctx*, %struct.blk_mq_queue_data*)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*)*, void (%struct.request_queue*)*, i32 (%struct.request*, i1)*, i32 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*)*, i32 (%struct.blk_mq_hw_ctx*, i8*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, i32 (%struct.blk_mq_tag_set*, %struct.request*, i32, i32)*, void (%struct.blk_mq_tag_set*, %struct.request*, i32)*, void (%struct.request*)*, void (%struct.request*)*, i1 (%struct.request_queue*)*, i32 (%struct.blk_mq_tag_set*)* }
%struct.blk_mq_queue_data = type { %struct.request*, i8 }
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type { [3 x %struct.blk_mq_queue_map], i32, %struct.blk_mq_ops*, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.atomic_t, %struct.sbitmap_queue, %struct.sbitmap_queue, %struct.blk_mq_tags**, %struct.mutex, %struct.list_head }
%struct.blk_mq_queue_map = type { i32*, i32, i32 }
%struct.sbitmap_queue = type { %struct.sbitmap, i32*, i32, %struct.atomic_t, %struct.sbq_wait_state*, %struct.atomic_t, i8, i32 }
%struct.sbq_wait_state = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.50, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.42 }
%struct.anon.42 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.49, i32, [12 x i8] }
%union.anon.49 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.50 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.51, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.54 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, i64 }
%union.anon.54 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.67 = type { %struct.list_head }
%union.anon.68 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.59, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.60, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.61, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.64, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.59 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.60 = type { %struct.callback_head }
%union.anon.61 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.64 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.62 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.62 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.34 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.34 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.driver_private = type opaque
%struct.mmc_card = type { %struct.mmc_host*, %struct.device, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i8, [4 x i32], [4 x i32], [2 x i32], [16 x i32], %struct.mmc_cid, %struct.mmc_csd, %struct.mmc_ext_csd, %struct.sd_scr, %struct.sd_ssr, %struct.sd_switch_caps, i32, %struct.atomic_t, %struct.sdio_cccr, %struct.sdio_cis, [7 x %struct.sdio_func*], %struct.sdio_func*, i8, i8, i32, i8**, %struct.sdio_func_tuple*, i32, i32, i32, %struct.dentry*, [7 x %struct.mmc_part], i32, i32, %struct.workqueue_struct* }
%struct.mmc_host = type { %struct.device*, %struct.device, i32, %struct.mmc_host_ops*, %struct.mmc_pwrseq*, i32, i32, i32, i32, i32, i32, i32, %struct.notifier_block, %struct.wakeup_source*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, %struct.spinlock, %struct.mmc_ios, i16, i32, i32, i32, i32, i32, %struct.timer_list, i8, %struct.mmc_card*, %struct.wait_queue_head, %struct.mmc_ctx*, i32, %struct.mmc_ctx, %struct.delayed_work, i32, %struct.mmc_slot, %struct.mmc_bus_ops*, i32, i32, %struct.task_struct*, %struct.delayed_work, i8, %struct.atomic_t, i32, %struct.led_trigger*, %struct.mmc_supply, %struct.dentry*, %struct.mmc_request*, i32, i32, i32, i32, %struct.mmc_cqe_ops*, i8*, i32, i8, i8, i8, [41 x i8], [0 x i64] }
%struct.mmc_host_ops = type { void (%struct.mmc_host*, %struct.mmc_request*, i32)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*, i32)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_card*, i32, i32)* }
%struct.mmc_pwrseq = type opaque
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.mmc_ios = type { i32, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mmc_ctx = type { %struct.task_struct* }
%struct.mmc_slot = type { i32, i8, i8* }
%struct.mmc_bus_ops = type { void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)* }
%struct.led_trigger = type opaque
%struct.mmc_supply = type { %struct.regulator*, %struct.regulator* }
%struct.regulator = type opaque
%struct.mmc_request = type { %struct.mmc_command*, %struct.mmc_command*, %struct.mmc_data*, %struct.mmc_command*, %struct.completion, %struct.completion, void (%struct.mmc_request*)*, void (%struct.mmc_request*)*, %struct.mmc_host*, i8, i32 }
%struct.mmc_data = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.mmc_command*, %struct.mmc_request*, i32, i32, %struct.scatterlist*, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.mmc_command = type { i32, i32, [4 x i32], i32, i32, i32, i32, %struct.mmc_data*, %struct.mmc_request* }
%struct.mmc_cqe_ops = type { i32 (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i1 (%struct.mmc_host*, %struct.mmc_request*, i8*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.mmc_cid = type { i32, [8 x i8], i8, i32, i16, i16, i8, i8, i8 }
%struct.mmc_csd = type { i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.mmc_ext_csd = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, i64, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, [8 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i32 }
%struct.sd_scr = type { i8, i8, i8, i8, i8, i8 }
%struct.sd_ssr = type { i32, i32, i32 }
%struct.sd_switch_caps = type { i32, i32, i32, i32, i32 }
%struct.sdio_cccr = type { i32, i32, i8 }
%struct.sdio_cis = type { i16, i16, i16, i32 }
%struct.sdio_func = type opaque
%struct.sdio_func_tuple = type opaque
%struct.mmc_part = type { i64, i32, [20 x i8], i8, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.mmc_fixup = type { i8*, i64, i64, i32, i16, i16, i16, i32, void (%struct.mmc_card*, i32)*, i32 }
%struct.ida = type { %struct.xarray }
%struct.mmc_queue = type { %struct.mmc_card*, %struct.mmc_ctx, %struct.blk_mq_tag_set, %struct.mmc_blk_data*, %struct.request_queue*, %struct.spinlock, [3 x i32], i32, i8, i8, i8, i8, i8, i8, %struct.work_struct, %struct.wait_queue_head, %struct.request*, %struct.request*, %struct.mutex, %struct.work_struct }
%struct.mmc_blk_data = type { %struct.device*, %struct.gendisk*, %struct.mmc_queue, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, %struct.device_attribute, %struct.device_attribute, i32, %struct.dentry*, %struct.dentry* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.mmc_queue_req = type { %struct.mmc_blk_request, %struct.scatterlist*, i32, i32, i8*, i32, i32 }
%struct.mmc_blk_request = type { %struct.mmc_request, %struct.mmc_command, %struct.mmc_command, %struct.mmc_command, %struct.mmc_data }
%struct.mmc_blk_ioc_data = type { %struct.mmc_ioc_cmd, i8*, i64, %struct.mmc_rpmb_data* }
%struct.mmc_ioc_cmd = type { i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.mmc_rpmb_data = type { %struct.device, %struct.cdev, i32, i32, %struct.mmc_blk_data*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.mmc_ioc_multi_cmd = type { i64, [0 x %struct.mmc_ioc_cmd] }

@__UNIQUE_ID_alias291 = internal constant [26 x i8] c"mmc_block.alias=mmc:block\00", section ".modinfo", align 1, !dbg !0
@__param_str_perdev_minors = internal constant [21 x i8] c"mmcblk.perdev_minors\00", align 16, !dbg !5597
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@perdev_minors = internal global i32 8, align 4, !dbg !5602
@__param_perdev_minors = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_perdev_minors, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @perdev_minors to i8*) } }, section "__param", align 8, !dbg !5517
@__UNIQUE_ID_perdev_minorstype292 = internal constant [37 x i8] c"mmc_block.parmtype=perdev_minors:int\00", section ".modinfo", align 1, !dbg !5569
@__UNIQUE_ID_perdev_minors293 = internal constant [67 x i8] c"mmc_block.parm=perdev_minors:Minors numbers to allocate per device\00", section ".modinfo", align 1, !dbg !5572
@.str = private unnamed_addr constant [25 x i8] c"drivers/mmc/core/block.c\00", align 1
@mmc_driver = internal global %struct.mmc_driver { %struct.device_driver { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @mmc_blk_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, i32 (%struct.mmc_card*)* @mmc_blk_probe, void (%struct.mmc_card*)* @mmc_blk_remove, void (%struct.mmc_card*)* @mmc_blk_shutdown }, align 8, !dbg !5604
@.str.1 = private unnamed_addr constant [4 x i8] c"mmc\00", align 1
@mmc_rpmb_devt = internal global i32 0, align 4, !dbg !5595
@mmc_rpmb_bus_type = internal global %struct.bus_type { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), i8* null, %struct.device* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.attribute_group** null, i32 (%struct.device*, %struct.device_driver*)* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, %struct.dev_pm_ops* null, %struct.iommu_ops* null, %struct.subsys_private* null, %struct.lock_class_key zeroinitializer, i8 0 }, align 8, !dbg !5666
@__UNIQUE_ID___addressable_mmc_blk_init323 = internal global i8* bitcast (i32 ()* @mmc_blk_init to i8*), section ".discard.addressable", align 8, !dbg !5577
@__exitcall_mmc_blk_exit = internal global void ()* @mmc_blk_exit, section ".exitcall.exit", align 8, !dbg !5579
@__UNIQUE_ID_file324 = internal constant [42 x i8] c"mmc_block.file=drivers/mmc/core/mmc_block\00", section ".modinfo", align 1, !dbg !5584
@__UNIQUE_ID_license325 = internal constant [22 x i8] c"mmc_block.license=GPL\00", section ".modinfo", align 1, !dbg !5589
@__UNIQUE_ID_description326 = internal constant [64 x i8] c"mmc_block.description=Multimedia Card (MMC) block device driver\00", section ".modinfo", align 1, !dbg !5592
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"\013%s: recovery failed!\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.3 = private unnamed_addr constant [28 x i8] c"error %d requesting status\0A\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"Card stuck in wrong state! %s status: %#x\0A\00", align 1
@__func__.card_busy_detect = private unnamed_addr constant [17 x i8] c"card_busy_detect\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.5 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.6 = private unnamed_addr constant [64 x i8] c"\013%s: Locking boot partition ro until next power on failed: %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"\013%s: unknown driver specific operation\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"%s: cmd error %d\0A\00", align 1
@__func__.__mmc_blk_ioctl_cmd = private unnamed_addr constant [20 x i8] c"__mmc_blk_ioctl_cmd\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"%s: data error %d\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.10 = private unnamed_addr constant [7 x i8] c"mmcblk\00", align 1
@mmc_blk_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @mmc_blk_suspend, i32 (%struct.device*)* @mmc_blk_resume, i32 (%struct.device*)* @mmc_blk_suspend, i32 (%struct.device*)* @mmc_blk_resume, i32 (%struct.device*)* @mmc_blk_suspend, i32 (%struct.device*)* @mmc_blk_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !5619
@mmc_blk_fixups = internal constant [25 x %struct.mmc_fixup] [%struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 256, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk, i32 64 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 256, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk, i32 64 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 256, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk, i32 64 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 256, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk, i32 64 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 256, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk, i32 64 }, %struct.mmc_fixup { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 128 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i64 0, i64 -1, i32 2, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 128 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i64 0, i64 -1, i32 17, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 128 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0), i64 0, i64 -1, i32 17, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 128 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i64 0, i64 -1, i32 17, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 128 }, %struct.mmc_fixup { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i64 0, i64 -1, i32 9, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_sd, i32 128 }, %struct.mmc_fixup { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i64 0, i64 -1, i32 39, i16 20552, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_sd, i32 128 }, %struct.mmc_fixup { i8* null, i64 0, i64 -1, i32 19, i16 512, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 512 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), i64 0, i64 -1, i32 17, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 512 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.36, i32 0, i32 0), i64 0, i64 -1, i32 21, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 1024 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), i64 0, i64 -1, i32 112, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 4096 }, %struct.mmc_fixup { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i64 0, i64 -1, i32 112, i16 -1, i16 -1, i16 -1, i32 -1, void (%struct.mmc_card*, i32)* @add_quirk_mmc, i32 4096 }, %struct.mmc_fixup zeroinitializer], align 16, !dbg !5621
@.str.11 = private unnamed_addr constant [13 x i8] c"mmc_complete\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"\013Failed to create mmc completion workqueue\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"\016%s: %s %s %s %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"(ro)\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"SEM02G\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"SEM04G\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"SEM08G\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"SEM16G\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"SEM32G\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"SDMB-32\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"SDM032\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"MMC08G\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"MMC16G\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"MMC32G\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"AF SD\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"APUSD\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"008GE0\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"M8G2FA\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"MAG4FA\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"MBG8FA\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"MCGAFA\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"VAL00M\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"VYL00M\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"KYL00M\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"VZL00M\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"V10008\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"V10016\00", align 1
@mmc_blk_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !5649
@max_devices = internal global i32 0, align 4, !dbg !5654
@.str.39 = private unnamed_addr constant [30 x i8] c"no more device IDs available\0A\00", align 1
@mmc_blk_alloc_req.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5644
@.str.40 = private unnamed_addr constant [48 x i8] c"(gendisk_completion)perdev_minors(NUMA_NO_NODE)\00", align 1
@mmc_bdops = internal constant %struct.block_device_operations { i32 (%struct.bio*)* null, i32 (%struct.block_device*, i32)* @mmc_blk_open, void (%struct.gendisk*, i32)* @mmc_blk_release, i32 (%struct.block_device*, i64, %struct.page*, i32)* null, i32 (%struct.block_device*, i32, i32, i64)* @mmc_blk_ioctl, i32 (%struct.block_device*, i32, i32, i64)* null, i32 (%struct.gendisk*, i32)* null, void (%struct.gendisk*)* null, i32 (%struct.gendisk*)* null, i32 (%struct.block_device*, %struct.hd_geometry*)* @mmc_blk_getgeo, void (%struct.block_device*, i64)* null, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)* null, i8* (%struct.gendisk*, i16*)* null, %struct.module* null, %struct.pr_ops* null }, align 8, !dbg !5656
@.str.41 = private unnamed_addr constant [11 x i8] c"mmcblk%u%s\00", align 1
@block_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @block_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @block_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5660
@open_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @open_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @open_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5658
@.str.42 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.43 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@mmc_rpmb_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !5662
@mmc_rpmb_fileops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* @mmc_rpmb_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* @mmc_rpmb_chrdev_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @mmc_rpmb_chrdev_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !5664
@.str.44 = private unnamed_addr constant [38 x i8] c"\013%s: could not add character device\0A\00", align 1
@.str.45 = private unnamed_addr constant [46 x i8] c"\016%s: %s %s partition %u %s, chardev (%d:%d)\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"\016%s: %s %s partition %u %s\0A\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"force_ro\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"ro_lock_until_next_power_on\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.50 = private unnamed_addr constant [53 x i8] c"\016%s: Locking boot partition ro until next power on\0A\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"mmc_rpmb\00", align 1
@.str.52 = private unnamed_addr constant [44 x i8] c"\013mmcblk: could not register RPMB bus type\0A\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"rpmb\00", align 1
@.str.54 = private unnamed_addr constant [49 x i8] c"\013mmcblk: failed to allocate rpmb chrdev region\0A\00", align 1
@.str.55 = private unnamed_addr constant [38 x i8] c"\016mmcblk: using %d minors per device\0A\00", align 1
@llvm.used = appending global [10 x i8*] [i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_alias291, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_perdev_minors to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_perdev_minorstype292, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_perdev_minors293, i32 0, i32 0), i8* bitcast (void ()* @mmc_blk_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mmc_blk_init323 to i8*), i8* bitcast (void ()** @__exitcall_mmc_blk_exit to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_file324, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license325, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_description326, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_blk_cqe_recovery(%struct.mmc_queue* %mq) #0 !dbg !5677 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !5682, metadata !DIExpression()), !dbg !5683
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5684
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 0, !dbg !5685
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !5685
  store %struct.mmc_card* %1, %struct.mmc_card** %card, align 8, !dbg !5683
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5686, metadata !DIExpression()), !dbg !5687
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5688
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !5689
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !5689
  store %struct.mmc_host* %3, %struct.mmc_host** %host, align 8, !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5690, metadata !DIExpression()), !dbg !5691
  store i32 0, i32* %tmp, align 4, !dbg !5692
  %4 = load i32, i32* %tmp, align 4, !dbg !5695
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5696
  %call = call i32 @mmc_cqe_recovery(%struct.mmc_host* %5) #11, !dbg !5697
  store i32 %call, i32* %err, align 4, !dbg !5698
  %6 = load i32, i32* %err, align 4, !dbg !5699
  %tobool = icmp ne i32 %6, 0, !dbg !5699
  br i1 %tobool, label %if.then, label %if.else, !dbg !5701

if.then:                                          ; preds = %entry
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5702
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %7, i32 0, i32 3, !dbg !5703
  %8 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !5703
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5704
  %call3 = call i32 @mmc_blk_reset(%struct.mmc_blk_data* %8, %struct.mmc_host* %9, i32 16) #11, !dbg !5705
  br label %if.end, !dbg !5705

if.else:                                          ; preds = %entry
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5706
  %blkdata4 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %10, i32 0, i32 3, !dbg !5707
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata4, align 8, !dbg !5707
  call void @mmc_blk_reset_success(%struct.mmc_blk_data* %11, i32 16) #11, !dbg !5708
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %tmp5, align 4, !dbg !5709
  %12 = load i32, i32* %tmp5, align 4, !dbg !5712
  ret void, !dbg !5713
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @mmc_cqe_recovery(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_reset(%struct.mmc_blk_data* %md, %struct.mmc_host* %host, i32 %type) #0 !dbg !5714 {
entry:
  %retval = alloca i32, align 4
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %host.addr = alloca %struct.mmc_host*, align 8
  %type.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %main_md = alloca %struct.mmc_blk_data*, align 8
  %part_err = alloca i32, align 4
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !5717, metadata !DIExpression()), !dbg !5718
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5719, metadata !DIExpression()), !dbg !5720
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5723, metadata !DIExpression()), !dbg !5724
  %0 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !5725
  %reset_done = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %0, i32 0, i32 9, !dbg !5727
  %1 = load i32, i32* %reset_done, align 8, !dbg !5727
  %2 = load i32, i32* %type.addr, align 4, !dbg !5728
  %and = and i32 %1, %2, !dbg !5729
  %tobool = icmp ne i32 %and, 0, !dbg !5729
  br i1 %tobool, label %if.then, label %if.end, !dbg !5730

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval, align 4, !dbg !5731
  br label %return, !dbg !5731

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %type.addr, align 4, !dbg !5732
  %4 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !5733
  %reset_done1 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %4, i32 0, i32 9, !dbg !5734
  %5 = load i32, i32* %reset_done1, align 8, !dbg !5735
  %or = or i32 %5, %3, !dbg !5735
  store i32 %or, i32* %reset_done1, align 8, !dbg !5735
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5736
  %call = call i32 @mmc_hw_reset(%struct.mmc_host* %6) #11, !dbg !5737
  store i32 %call, i32* %err, align 4, !dbg !5738
  %7 = load i32, i32* %err, align 4, !dbg !5739
  %cmp = icmp ne i32 %7, -95, !dbg !5741
  br i1 %cmp, label %if.then2, label %if.end10, !dbg !5742

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %main_md, metadata !5743, metadata !DIExpression()), !dbg !5745
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5746
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 38, !dbg !5747
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5747
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 1, !dbg !5748
  %call3 = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !5749
  %10 = bitcast i8* %call3 to %struct.mmc_blk_data*, !dbg !5749
  store %struct.mmc_blk_data* %10, %struct.mmc_blk_data** %main_md, align 8, !dbg !5745
  call void @llvm.dbg.declare(metadata i32* %part_err, metadata !5750, metadata !DIExpression()), !dbg !5751
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %main_md, align 8, !dbg !5752
  %part_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %11, i32 0, i32 8, !dbg !5753
  %12 = load i32, i32* %part_type, align 4, !dbg !5753
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %main_md, align 8, !dbg !5754
  %part_curr = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 10, !dbg !5755
  store i32 %12, i32* %part_curr, align 4, !dbg !5756
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5757
  %card4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 38, !dbg !5758
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card4, align 8, !dbg !5758
  %16 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !5759
  %part_type5 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %16, i32 0, i32 8, !dbg !5760
  %17 = load i32, i32* %part_type5, align 4, !dbg !5760
  %call6 = call i32 @mmc_blk_part_switch(%struct.mmc_card* %15, i32 %17) #11, !dbg !5761
  store i32 %call6, i32* %part_err, align 4, !dbg !5762
  %18 = load i32, i32* %part_err, align 4, !dbg !5763
  %tobool7 = icmp ne i32 %18, 0, !dbg !5763
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5765

if.then8:                                         ; preds = %if.then2
  store i32 -19, i32* %retval, align 4, !dbg !5766
  br label %return, !dbg !5766

if.end9:                                          ; preds = %if.then2
  br label %if.end10, !dbg !5768

if.end10:                                         ; preds = %if.end9, %if.end
  %19 = load i32, i32* %err, align 4, !dbg !5769
  store i32 %19, i32* %retval, align 4, !dbg !5770
  br label %return, !dbg !5770

return:                                           ; preds = %if.end10, %if.then8, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !5771
  ret i32 %20, !dbg !5771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_reset_success(%struct.mmc_blk_data* %md, i32 %type) #0 !dbg !5772 {
entry:
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %type.addr = alloca i32, align 4
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !5775, metadata !DIExpression()), !dbg !5776
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5777, metadata !DIExpression()), !dbg !5778
  %0 = load i32, i32* %type.addr, align 4, !dbg !5779
  %neg = xor i32 %0, -1, !dbg !5780
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !5781
  %reset_done = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %1, i32 0, i32 9, !dbg !5782
  %2 = load i32, i32* %reset_done, align 8, !dbg !5783
  %and = and i32 %2, %neg, !dbg !5783
  store i32 %and, i32* %reset_done, align 8, !dbg !5783
  ret void, !dbg !5784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_blk_mq_complete(%struct.request* %req) #0 !dbg !5785 {
entry:
  %req.addr = alloca %struct.request*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !5786, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !5788, metadata !DIExpression()), !dbg !5789
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5790
  %q = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 0, !dbg !5791
  %1 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !5791
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %1, i32 0, i32 11, !dbg !5792
  %2 = load i8*, i8** %queuedata, align 8, !dbg !5792
  %3 = bitcast i8* %2 to %struct.mmc_queue*, !dbg !5790
  store %struct.mmc_queue* %3, %struct.mmc_queue** %mq, align 8, !dbg !5789
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !5793
  %use_cqe = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %4, i32 0, i32 9, !dbg !5795
  %5 = load i8, i8* %use_cqe, align 1, !dbg !5795
  %tobool = trunc i8 %5 to i1, !dbg !5795
  br i1 %tobool, label %if.then, label %if.else, !dbg !5796

if.then:                                          ; preds = %entry
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !5797
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5798
  call void @mmc_blk_cqe_complete_rq(%struct.mmc_queue* %6, %struct.request* %7) #11, !dbg !5799
  br label %if.end6, !dbg !5799

if.else:                                          ; preds = %entry
  %8 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5800
  %q1 = getelementptr inbounds %struct.request, %struct.request* %8, i32 0, i32 0, !dbg !5800
  %9 = load %struct.request_queue*, %struct.request_queue** %q1, align 8, !dbg !5800
  %call = call zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %9) #11, !dbg !5800
  %lnot = xor i1 %call, true, !dbg !5800
  %lnot2 = xor i1 %lnot, true, !dbg !5800
  %lnot3 = xor i1 %lnot2, true, !dbg !5800
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5800
  %conv = sext i32 %lnot.ext to i64, !dbg !5800
  %tobool4 = icmp ne i64 %conv, 0, !dbg !5800
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5802

if.then5:                                         ; preds = %if.else
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !5803
  %11 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5804
  call void @mmc_blk_mq_complete_rq(%struct.mmc_queue* %10, %struct.request* %11) #11, !dbg !5805
  br label %if.end, !dbg !5805

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !5806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_cqe_complete_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !5807 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !5810, metadata !DIExpression()), !dbg !5815
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5817, metadata !DIExpression()), !dbg !5818
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5819, metadata !DIExpression()), !dbg !5824
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  %q = alloca %struct.request_queue*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %issue_type = alloca i32, align 4
  %flags = alloca i64, align 8
  %put_card = alloca i8, align 1
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy41 = alloca i64, align 8
  %__dummy242 = alloca i64, align 8
  %tmp45 = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !5835, metadata !DIExpression()), !dbg !5836
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5837
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !5838
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !5836
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !5839, metadata !DIExpression()), !dbg !5840
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !5841
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %1, i32 0, i32 0, !dbg !5842
  %mrq1 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 0, !dbg !5843
  store %struct.mmc_request* %mrq1, %struct.mmc_request** %mrq, align 8, !dbg !5840
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !5844, metadata !DIExpression()), !dbg !5845
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5846
  %q2 = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 0, !dbg !5847
  %3 = load %struct.request_queue*, %struct.request_queue** %q2, align 8, !dbg !5847
  store %struct.request_queue* %3, %struct.request_queue** %q, align 8, !dbg !5845
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !5848, metadata !DIExpression()), !dbg !5849
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5850
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %4, i32 0, i32 0, !dbg !5851
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5851
  %host3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 0, !dbg !5852
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host3, align 8, !dbg !5852
  store %struct.mmc_host* %6, %struct.mmc_host** %host, align 8, !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %issue_type, metadata !5853, metadata !DIExpression()), !dbg !5854
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5855
  %8 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5856
  %call4 = call i32 @mmc_issue_type(%struct.mmc_queue* %7, %struct.request* %8) #11, !dbg !5857
  store i32 %call4, i32* %issue_type, align 4, !dbg !5854
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5858, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata i8* %put_card, metadata !5860, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5862, metadata !DIExpression()), !dbg !5863
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !5864
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5865
  call void @mmc_cqe_post_req(%struct.mmc_host* %9, %struct.mmc_request* %10) #11, !dbg !5866
  %11 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5867
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %11, i32 0, i32 1, !dbg !5869
  %12 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5869
  %tobool = icmp ne %struct.mmc_command* %12, null, !dbg !5867
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5870

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5871
  %cmd5 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %13, i32 0, i32 1, !dbg !5872
  %14 = load %struct.mmc_command*, %struct.mmc_command** %cmd5, align 8, !dbg !5872
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %14, i32 0, i32 5, !dbg !5873
  %15 = load i32, i32* %error, align 8, !dbg !5873
  %tobool6 = icmp ne i32 %15, 0, !dbg !5871
  br i1 %tobool6, label %if.then, label %if.else, !dbg !5874

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5875
  %cmd7 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %16, i32 0, i32 1, !dbg !5876
  %17 = load %struct.mmc_command*, %struct.mmc_command** %cmd7, align 8, !dbg !5876
  %error8 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %17, i32 0, i32 5, !dbg !5877
  %18 = load i32, i32* %error8, align 8, !dbg !5877
  store i32 %18, i32* %err, align 4, !dbg !5878
  br label %if.end18, !dbg !5879

if.else:                                          ; preds = %land.lhs.true, %entry
  %19 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5880
  %data = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %19, i32 0, i32 2, !dbg !5882
  %20 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !5882
  %tobool9 = icmp ne %struct.mmc_data* %20, null, !dbg !5880
  br i1 %tobool9, label %land.lhs.true10, label %if.else17, !dbg !5883

land.lhs.true10:                                  ; preds = %if.else
  %21 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5884
  %data11 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %21, i32 0, i32 2, !dbg !5885
  %22 = load %struct.mmc_data*, %struct.mmc_data** %data11, align 8, !dbg !5885
  %error12 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %22, i32 0, i32 5, !dbg !5886
  %23 = load i32, i32* %error12, align 4, !dbg !5886
  %tobool13 = icmp ne i32 %23, 0, !dbg !5884
  br i1 %tobool13, label %if.then14, label %if.else17, !dbg !5887

if.then14:                                        ; preds = %land.lhs.true10
  %24 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5888
  %data15 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %24, i32 0, i32 2, !dbg !5889
  %25 = load %struct.mmc_data*, %struct.mmc_data** %data15, align 8, !dbg !5889
  %error16 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %25, i32 0, i32 5, !dbg !5890
  %26 = load i32, i32* %error16, align 4, !dbg !5890
  store i32 %26, i32* %err, align 4, !dbg !5891
  br label %if.end, !dbg !5892

if.else17:                                        ; preds = %land.lhs.true10, %if.else
  store i32 0, i32* %err, align 4, !dbg !5893
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then
  %27 = load i32, i32* %err, align 4, !dbg !5894
  %tobool19 = icmp ne i32 %27, 0, !dbg !5894
  br i1 %tobool19, label %if.then20, label %if.else24, !dbg !5896

if.then20:                                        ; preds = %if.end18
  %28 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !5897
  %retries = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %28, i32 0, i32 6, !dbg !5900
  %29 = load i32, i32* %retries, align 4, !dbg !5901
  %inc = add i32 %29, 1, !dbg !5901
  store i32 %inc, i32* %retries, align 4, !dbg !5901
  %cmp = icmp slt i32 %29, 2, !dbg !5902
  br i1 %cmp, label %if.then21, label %if.else22, !dbg !5903

if.then21:                                        ; preds = %if.then20
  %30 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5904
  call void @blk_mq_requeue_request(%struct.request* %30, i1 zeroext true) #11, !dbg !5905
  br label %if.end23, !dbg !5905

if.else22:                                        ; preds = %if.then20
  %31 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5906
  call void @blk_mq_end_request(%struct.request* %31, i8 zeroext 10) #11, !dbg !5907
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  br label %if.end35, !dbg !5908

if.else24:                                        ; preds = %if.end18
  %32 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5909
  %data25 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %32, i32 0, i32 2, !dbg !5911
  %33 = load %struct.mmc_data*, %struct.mmc_data** %data25, align 8, !dbg !5911
  %tobool26 = icmp ne %struct.mmc_data* %33, null, !dbg !5909
  br i1 %tobool26, label %if.then27, label %if.else33, !dbg !5912

if.then27:                                        ; preds = %if.else24
  %34 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5913
  %35 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !5916
  %data28 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %35, i32 0, i32 2, !dbg !5917
  %36 = load %struct.mmc_data*, %struct.mmc_data** %data28, align 8, !dbg !5917
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %36, i32 0, i32 7, !dbg !5918
  %37 = load i32, i32* %bytes_xfered, align 4, !dbg !5918
  %call29 = call zeroext i1 @blk_update_request(%struct.request* %34, i8 zeroext 0, i32 %37) #11, !dbg !5919
  br i1 %call29, label %if.then30, label %if.else31, !dbg !5920

if.then30:                                        ; preds = %if.then27
  %38 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5921
  call void @blk_mq_requeue_request(%struct.request* %38, i1 zeroext true) #11, !dbg !5922
  br label %if.end32, !dbg !5922

if.else31:                                        ; preds = %if.then27
  %39 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5923
  call void @__blk_mq_end_request(%struct.request* %39, i8 zeroext 0) #11, !dbg !5924
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  br label %if.end34, !dbg !5925

if.else33:                                        ; preds = %if.else24
  %40 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !5926
  call void @blk_mq_end_request(%struct.request* %40, i8 zeroext 0) #11, !dbg !5928
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.end32
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end23
  br label %do.body, !dbg !5929

do.body:                                          ; preds = %if.end35
  br label %do.body36, !dbg !5930

do.body36:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5931, metadata !DIExpression()), !dbg !5933
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5934, metadata !DIExpression()), !dbg !5933
  %cmp37 = icmp eq i64* %__dummy, %__dummy2, !dbg !5933
  %conv = zext i1 %cmp37 to i32, !dbg !5933
  store i32 1, i32* %tmp, align 4, !dbg !5933
  %41 = load i32, i32* %tmp, align 4, !dbg !5933
  br label %do.body38, !dbg !5935

do.body38:                                        ; preds = %do.body36
  br label %do.body39, !dbg !5936

do.body39:                                        ; preds = %do.body38
  br label %do.body40, !dbg !5937

do.body40:                                        ; preds = %do.body39
  call void @llvm.dbg.declare(metadata i64* %__dummy41, metadata !5939, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.declare(metadata i64* %__dummy242, metadata !5943, metadata !DIExpression()), !dbg !5942
  %cmp43 = icmp eq i64* %__dummy41, %__dummy242, !dbg !5942
  %conv44 = zext i1 %cmp43 to i32, !dbg !5942
  store i32 1, i32* %tmp45, align 4, !dbg !5942
  %42 = load i32, i32* %tmp45, align 4, !dbg !5942
  %call46 = call i64 @arch_local_irq_save() #11, !dbg !5944
  store i64 %call46, i64* %flags, align 8, !dbg !5944
  br label %do.end, !dbg !5944

do.end:                                           ; preds = %do.body40
  br label %do.end47, !dbg !5937

do.end47:                                         ; preds = %do.end
  br label %do.body48, !dbg !5936

do.body48:                                        ; preds = %do.end47
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5945, !srcloc !5946
  br label %do.body49, !dbg !5945

do.body49:                                        ; preds = %do.body48
  %43 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5947
  %lock = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %43, i32 0, i32 5, !dbg !5947
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5948
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !5949
  %rlock.i = bitcast %union.anon.2* %45 to %struct.raw_spinlock*, !dbg !5949
  br label %do.end51, !dbg !5947

do.end51:                                         ; preds = %do.body49
  br label %do.end52, !dbg !5945

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !5936

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !5935

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !5930

do.end55:                                         ; preds = %do.end54
  %46 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5950
  %in_flight = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %46, i32 0, i32 6, !dbg !5951
  %47 = load i32, i32* %issue_type, align 4, !dbg !5952
  %idxprom = zext i32 %47 to i64, !dbg !5950
  %arrayidx = getelementptr [3 x i32], [3 x i32]* %in_flight, i64 0, i64 %idxprom, !dbg !5950
  %48 = load i32, i32* %arrayidx, align 4, !dbg !5953
  %sub = sub i32 %48, 1, !dbg !5953
  store i32 %sub, i32* %arrayidx, align 4, !dbg !5953
  %49 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5954
  %call56 = call i32 @mmc_tot_in_flight(%struct.mmc_queue* %49) #11, !dbg !5955
  %cmp57 = icmp eq i32 %call56, 0, !dbg !5956
  %frombool = zext i1 %cmp57 to i8, !dbg !5957
  store i8 %frombool, i8* %put_card, align 1, !dbg !5957
  %50 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5958
  call void @mmc_cqe_check_busy(%struct.mmc_queue* %50) #11, !dbg !5959
  %51 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5960
  %lock59 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %51, i32 0, i32 5, !dbg !5961
  %52 = load i64, i64* %flags, align 8, !dbg !5962
  store %struct.spinlock* %lock59, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %52, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !312, metadata !5963, metadata !DIExpression()) #5, !dbg !5966
  call void @llvm.dbg.declare(metadata !312, metadata !5967, metadata !DIExpression()) #5, !dbg !5966
  store i32 1, i32* %tmp.i, align 4, !dbg !5966
  %53 = load i32, i32* %tmp.i, align 4, !dbg !5966
  call void @llvm.dbg.declare(metadata !312, metadata !5968, metadata !DIExpression()) #5, !dbg !5973
  call void @llvm.dbg.declare(metadata !312, metadata !5974, metadata !DIExpression()) #5, !dbg !5973
  store i32 1, i32* %tmp8.i, align 4, !dbg !5973
  %54 = load i32, i32* %tmp8.i, align 4, !dbg !5973
  %55 = load i64, i64* %flags.addr.i, align 8, !dbg !5975
  call void @arch_local_irq_restore(i64 %55) #12, !dbg !5975
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !5976, !srcloc !5978
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !5979
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !5979
  %rlock.i68 = bitcast %union.anon.2* %57 to %struct.raw_spinlock*, !dbg !5979
  %58 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5981
  %cqe_busy = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %58, i32 0, i32 7, !dbg !5983
  %59 = load i32, i32* %cqe_busy, align 4, !dbg !5983
  %tobool60 = icmp ne i32 %59, 0, !dbg !5981
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !5984

if.then61:                                        ; preds = %do.end55
  %60 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !5985
  call void @blk_mq_run_hw_queues(%struct.request_queue* %60, i1 zeroext true) #11, !dbg !5986
  br label %if.end62, !dbg !5986

if.end62:                                         ; preds = %if.then61, %do.end55
  %61 = load i8, i8* %put_card, align 1, !dbg !5987
  %tobool63 = trunc i8 %61 to i1, !dbg !5987
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !5989

if.then64:                                        ; preds = %if.end62
  %62 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5990
  %card65 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %62, i32 0, i32 0, !dbg !5991
  %63 = load %struct.mmc_card*, %struct.mmc_card** %card65, align 8, !dbg !5991
  %64 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !5992
  %ctx = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %64, i32 0, i32 1, !dbg !5993
  call void @mmc_put_card(%struct.mmc_card* %63, %struct.mmc_ctx* %ctx) #11, !dbg !5994
  br label %if.end66, !dbg !5994

if.end66:                                         ; preds = %if.then64, %if.end62
  ret void, !dbg !5995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %q) #0 !dbg !5996 {
entry:
  %q.addr = alloca %struct.request_queue*, align 8
  store %struct.request_queue* %q, %struct.request_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q.addr, metadata !5997, metadata !DIExpression()), !dbg !5998
  ret i1 false, !dbg !5999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_complete_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6000 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %nr_bytes = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6001, metadata !DIExpression()), !dbg !6002
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6003, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !6005, metadata !DIExpression()), !dbg !6006
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6007
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !6008
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6006
  call void @llvm.dbg.declare(metadata i32* %nr_bytes, metadata !6009, metadata !DIExpression()), !dbg !6010
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6011
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %1, i32 0, i32 0, !dbg !6012
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 4, !dbg !6013
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 7, !dbg !6014
  %2 = load i32, i32* %bytes_xfered, align 4, !dbg !6014
  store i32 %2, i32* %nr_bytes, align 4, !dbg !6010
  %3 = load i32, i32* %nr_bytes, align 4, !dbg !6015
  %tobool = icmp ne i32 %3, 0, !dbg !6015
  br i1 %tobool, label %if.then, label %if.else3, !dbg !6017

if.then:                                          ; preds = %entry
  %4 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6018
  %5 = load i32, i32* %nr_bytes, align 4, !dbg !6021
  %call1 = call zeroext i1 @blk_update_request(%struct.request* %4, i8 zeroext 0, i32 %5) #11, !dbg !6022
  br i1 %call1, label %if.then2, label %if.else, !dbg !6023

if.then2:                                         ; preds = %if.then
  %6 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6024
  call void @blk_mq_requeue_request(%struct.request* %6, i1 zeroext true) #11, !dbg !6025
  br label %if.end, !dbg !6025

if.else:                                          ; preds = %if.then
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6026
  call void @__blk_mq_end_request(%struct.request* %7, i8 zeroext 0) #11, !dbg !6027
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end17, !dbg !6028

if.else3:                                         ; preds = %entry
  %8 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6029
  %call4 = call i32 @blk_rq_bytes(%struct.request* %8) #11, !dbg !6031
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6031
  br i1 %tobool5, label %if.else7, label %if.then6, !dbg !6032

if.then6:                                         ; preds = %if.else3
  %9 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6033
  call void @__blk_mq_end_request(%struct.request* %9, i8 zeroext 10) #11, !dbg !6035
  br label %if.end16, !dbg !6036

if.else7:                                         ; preds = %if.else3
  %10 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6037
  %retries = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %10, i32 0, i32 6, !dbg !6039
  %11 = load i32, i32* %retries, align 4, !dbg !6040
  %inc = add i32 %11, 1, !dbg !6040
  store i32 %inc, i32* %retries, align 4, !dbg !6040
  %cmp = icmp slt i32 %11, 5, !dbg !6041
  br i1 %cmp, label %if.then8, label %if.else9, !dbg !6042

if.then8:                                         ; preds = %if.else7
  %12 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6043
  call void @blk_mq_requeue_request(%struct.request* %12, i1 zeroext true) #11, !dbg !6045
  br label %if.end15, !dbg !6046

if.else9:                                         ; preds = %if.else7
  %13 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6047
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %13, i32 0, i32 0, !dbg !6047
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6047
  %tobool10 = icmp ne %struct.mmc_card* %14, null, !dbg !6047
  br i1 %tobool10, label %land.lhs.true, label %if.end14, !dbg !6047

land.lhs.true:                                    ; preds = %if.else9
  %15 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6047
  %card11 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %15, i32 0, i32 0, !dbg !6047
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card11, align 8, !dbg !6047
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 5, !dbg !6047
  %17 = load i32, i32* %state, align 4, !dbg !6047
  %and = and i32 %17, 16, !dbg !6047
  %tobool12 = icmp ne i32 %and, 0, !dbg !6047
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6050

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6051
  %rq_flags = getelementptr inbounds %struct.request, %struct.request* %18, i32 0, i32 4, !dbg !6052
  %19 = load i32, i32* %rq_flags, align 4, !dbg !6053
  %or = or i32 %19, 2048, !dbg !6053
  store i32 %or, i32* %rq_flags, align 4, !dbg !6053
  br label %if.end14, !dbg !6051

if.end14:                                         ; preds = %if.then13, %land.lhs.true, %if.else9
  %20 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6054
  call void @blk_mq_end_request(%struct.request* %20, i8 zeroext 10) #11, !dbg !6055
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then8
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then6
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end
  ret void, !dbg !6056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_blk_mq_recovery(%struct.mmc_queue* %mq) #0 !dbg !6057 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req = alloca %struct.request*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6058, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !6060, metadata !DIExpression()), !dbg !6061
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6062
  %recovery_req = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 16, !dbg !6063
  %1 = load %struct.request*, %struct.request** %recovery_req, align 8, !dbg !6063
  store %struct.request* %1, %struct.request** %req, align 8, !dbg !6061
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !6064, metadata !DIExpression()), !dbg !6065
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6066
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 0, !dbg !6067
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6067
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !6068
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !6068
  store %struct.mmc_host* %4, %struct.mmc_host** %host, align 8, !dbg !6065
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !6069, metadata !DIExpression()), !dbg !6070
  %5 = load %struct.request*, %struct.request** %req, align 8, !dbg !6071
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %5) #11, !dbg !6072
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6070
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6073
  %recovery_req2 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %6, i32 0, i32 16, !dbg !6074
  store %struct.request* null, %struct.request** %recovery_req2, align 8, !dbg !6075
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6076
  %rw_wait = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %7, i32 0, i32 12, !dbg !6077
  store i8 0, i8* %rw_wait, align 4, !dbg !6078
  %8 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6079
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %8, i32 0, i32 0, !dbg !6081
  %call3 = call zeroext i1 @mmc_blk_rq_error(%struct.mmc_blk_request* %brq) #11, !dbg !6082
  br i1 %call3, label %if.then, label %if.end, !dbg !6083

if.then:                                          ; preds = %entry
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6084
  call void @mmc_retune_hold_now(%struct.mmc_host* %9) #11, !dbg !6086
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6087
  %11 = load %struct.request*, %struct.request** %req, align 8, !dbg !6088
  call void @mmc_blk_mq_rw_recovery(%struct.mmc_queue* %10, %struct.request* %11) #11, !dbg !6089
  br label %if.end, !dbg !6090

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6091
  %13 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6092
  call void @mmc_blk_urgent_bkops(%struct.mmc_queue* %12, %struct.mmc_queue_req* %13) #11, !dbg !6093
  %14 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6094
  %15 = load %struct.request*, %struct.request** %req, align 8, !dbg !6095
  call void @mmc_blk_mq_post_req(%struct.mmc_queue* %14, %struct.request* %15) #11, !dbg !6096
  ret void, !dbg !6097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %rq) #0 !dbg !6098 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !6103
  %call = call i8* @blk_mq_rq_to_pdu(%struct.request* %0) #11, !dbg !6104
  %1 = bitcast i8* %call to %struct.mmc_queue_req*, !dbg !6104
  ret %struct.mmc_queue_req* %1, !dbg !6105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_blk_rq_error(%struct.mmc_blk_request* %brq) #0 !dbg !6106 {
entry:
  %brq.addr = alloca %struct.mmc_blk_request*, align 8
  store %struct.mmc_blk_request* %brq, %struct.mmc_blk_request** %brq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq.addr, metadata !6110, metadata !DIExpression()), !dbg !6111
  %0 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !6112
  call void @mmc_blk_eval_resp_error(%struct.mmc_blk_request* %0) #11, !dbg !6113
  %1 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !6114
  %sbc = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %1, i32 0, i32 1, !dbg !6115
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 5, !dbg !6116
  %2 = load i32, i32* %error, align 8, !dbg !6116
  %tobool = icmp ne i32 %2, 0, !dbg !6114
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !6117

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !6118
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %3, i32 0, i32 2, !dbg !6119
  %error1 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !6120
  %4 = load i32, i32* %error1, align 8, !dbg !6120
  %tobool2 = icmp ne i32 %4, 0, !dbg !6118
  br i1 %tobool2, label %lor.end, label %lor.lhs.false3, !dbg !6121

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %5 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !6122
  %stop = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %5, i32 0, i32 3, !dbg !6123
  %error4 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop, i32 0, i32 5, !dbg !6124
  %6 = load i32, i32* %error4, align 8, !dbg !6124
  %tobool5 = icmp ne i32 %6, 0, !dbg !6122
  br i1 %tobool5, label %lor.end, label %lor.lhs.false6, !dbg !6125

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %7 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !6126
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %7, i32 0, i32 4, !dbg !6127
  %error7 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 5, !dbg !6128
  %8 = load i32, i32* %error7, align 4, !dbg !6128
  %tobool8 = icmp ne i32 %8, 0, !dbg !6126
  br i1 %tobool8, label %lor.end, label %lor.rhs, !dbg !6129

lor.rhs:                                          ; preds = %lor.lhs.false6
  %9 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !6130
  %cmd9 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %9, i32 0, i32 2, !dbg !6131
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd9, i32 0, i32 2, !dbg !6132
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !6130
  %10 = load i32, i32* %arrayidx, align 8, !dbg !6130
  %and = and i32 %10, -466092032, !dbg !6133
  %tobool10 = icmp ne i32 %and, 0, !dbg !6129
  br label %lor.end, !dbg !6129

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  %11 = phi i1 [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false3 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %11, !dbg !6134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_retune_hold_now(%struct.mmc_host* %host) #0 !dbg !6135 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6137, metadata !DIExpression()), !dbg !6138
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6139
  %retune_now = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !6140
  %bf.load = load i16, i16* %retune_now, align 32, !dbg !6141
  %bf.clear = and i16 %bf.load, -65, !dbg !6141
  store i16 %bf.clear, i16* %retune_now, align 32, !dbg !6141
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6142
  %hold_retune = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 34, !dbg !6143
  %2 = load i32, i32* %hold_retune, align 16, !dbg !6144
  %add = add i32 %2, 1, !dbg !6144
  store i32 %add, i32* %hold_retune, align 16, !dbg !6144
  ret void, !dbg !6145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_rw_recovery(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6146 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %type = alloca i32, align 4
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %brq = alloca %struct.mmc_blk_request*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %status = alloca i32, align 4
  %blocks = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6147, metadata !DIExpression()), !dbg !6148
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6149, metadata !DIExpression()), !dbg !6150
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6151, metadata !DIExpression()), !dbg !6152
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6153
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !6153
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !6153
  %and = and i32 %1, 255, !dbg !6153
  %call = call zeroext i1 @op_is_write(i32 %and) #11, !dbg !6153
  %2 = zext i1 %call to i64, !dbg !6153
  %cond = select i1 %call, i32 1, i32 0, !dbg !6153
  %cmp = icmp eq i32 %cond, 0, !dbg !6154
  %3 = zext i1 %cmp to i64, !dbg !6153
  %cond1 = select i1 %cmp, i64 1, i64 2, !dbg !6153
  %conv = trunc i64 %cond1 to i32, !dbg !6153
  store i32 %conv, i32* %type, align 4, !dbg !6152
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !6155, metadata !DIExpression()), !dbg !6156
  %4 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6157
  %call2 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %4) #11, !dbg !6158
  store %struct.mmc_queue_req* %call2, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6156
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq, metadata !6159, metadata !DIExpression()), !dbg !6160
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6161
  %brq3 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %5, i32 0, i32 0, !dbg !6162
  store %struct.mmc_blk_request* %brq3, %struct.mmc_blk_request** %brq, align 8, !dbg !6160
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !6163, metadata !DIExpression()), !dbg !6164
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6165
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %6, i32 0, i32 3, !dbg !6166
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !6166
  store %struct.mmc_blk_data* %7, %struct.mmc_blk_data** %md, align 8, !dbg !6164
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !6167, metadata !DIExpression()), !dbg !6168
  %8 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6169
  %card4 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %8, i32 0, i32 0, !dbg !6170
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card4, align 8, !dbg !6170
  store %struct.mmc_card* %9, %struct.mmc_card** %card, align 8, !dbg !6168
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata i32* %blocks, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6175, metadata !DIExpression()), !dbg !6176
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6177
  %call5 = call i32 @__mmc_send_status(%struct.mmc_card* %10, i32* %status, i32 0) #11, !dbg !6178
  store i32 %call5, i32* %err, align 4, !dbg !6179
  %11 = load i32, i32* %err, align 4, !dbg !6180
  %tobool = icmp ne i32 %11, 0, !dbg !6180
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6182

lor.lhs.false:                                    ; preds = %entry
  %12 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6183
  %13 = load i32, i32* %status, align 4, !dbg !6184
  %call6 = call zeroext i1 @mmc_blk_status_error(%struct.request* %12, i32 %13) #11, !dbg !6185
  br i1 %call6, label %if.then, label %if.end, !dbg !6186

if.then:                                          ; preds = %lor.lhs.false, %entry
  %14 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6187
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %14, i32 0, i32 4, !dbg !6188
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 7, !dbg !6189
  store i32 0, i32* %bytes_xfered, align 4, !dbg !6190
  br label %if.end, !dbg !6187

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6191
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 0, !dbg !6192
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6192
  call void @mmc_retune_release(%struct.mmc_host* %16) #11, !dbg !6193
  %17 = load i32, i32* %err, align 4, !dbg !6194
  %tobool8 = icmp ne i32 %17, 0, !dbg !6194
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !6196

if.then9:                                         ; preds = %if.end
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6197
  %call10 = call i32 @__mmc_send_status(%struct.mmc_card* %18, i32* %status, i32 0) #11, !dbg !6198
  store i32 %call10, i32* %err, align 4, !dbg !6199
  br label %if.end11, !dbg !6200

if.end11:                                         ; preds = %if.then9, %if.end
  %19 = load i32, i32* %err, align 4, !dbg !6201
  %tobool12 = icmp ne i32 %19, 0, !dbg !6201
  br i1 %tobool12, label %land.lhs.true, label %if.end17, !dbg !6203

land.lhs.true:                                    ; preds = %if.end11
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6204
  %host13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 0, !dbg !6205
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host13, align 8, !dbg !6205
  %call14 = call i32 @mmc_detect_card_removed(%struct.mmc_host* %21) #11, !dbg !6206
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6206
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6207

if.then16:                                        ; preds = %land.lhs.true
  br label %if.end109, !dbg !6208

if.end17:                                         ; preds = %land.lhs.true, %if.end11
  %22 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6209
  %card18 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %22, i32 0, i32 0, !dbg !6209
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card18, align 8, !dbg !6209
  %host19 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 0, !dbg !6209
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host19, align 8, !dbg !6209
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %24, i32 0, i32 17, !dbg !6209
  %25 = load i32, i32* %caps, align 4, !dbg !6209
  %and20 = and i32 %25, 16, !dbg !6209
  %tobool21 = icmp ne i32 %and20, 0, !dbg !6209
  br i1 %tobool21, label %if.end29, label %land.lhs.true22, !dbg !6211

land.lhs.true22:                                  ; preds = %if.end17
  %26 = load i32, i32* %err, align 4, !dbg !6212
  %tobool23 = icmp ne i32 %26, 0, !dbg !6212
  br i1 %tobool23, label %if.then26, label %lor.lhs.false24, !dbg !6213

lor.lhs.false24:                                  ; preds = %land.lhs.true22
  %27 = load i32, i32* %status, align 4, !dbg !6214
  %call25 = call zeroext i1 @mmc_ready_for_data(i32 %27) #11, !dbg !6215
  br i1 %call25, label %if.end29, label %if.then26, !dbg !6216

if.then26:                                        ; preds = %lor.lhs.false24, %land.lhs.true22
  %28 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6217
  %card27 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %28, i32 0, i32 0, !dbg !6218
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card27, align 8, !dbg !6218
  %30 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6219
  %call28 = call i32 @mmc_blk_fix_state(%struct.mmc_card* %29, %struct.request* %30) #11, !dbg !6220
  store i32 %call28, i32* %err, align 4, !dbg !6221
  br label %if.end29, !dbg !6222

if.end29:                                         ; preds = %if.then26, %lor.lhs.false24, %if.end17
  %31 = load i32, i32* %err, align 4, !dbg !6223
  %tobool30 = icmp ne i32 %31, 0, !dbg !6223
  br i1 %tobool30, label %if.end55, label %land.lhs.true31, !dbg !6225

land.lhs.true31:                                  ; preds = %if.end29
  %32 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6226
  %call32 = call zeroext i1 @mmc_blk_cmd_started(%struct.mmc_blk_request* %32) #11, !dbg !6227
  br i1 %call32, label %land.lhs.true34, label %if.end55, !dbg !6228

land.lhs.true34:                                  ; preds = %land.lhs.true31
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6229
  %type35 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 4, !dbg !6229
  %34 = load i32, i32* %type35, align 8, !dbg !6229
  %cmp36 = icmp eq i32 %34, 1, !dbg !6229
  br i1 %cmp36, label %land.lhs.true38, label %if.end55, !dbg !6230

land.lhs.true38:                                  ; preds = %land.lhs.true34
  %35 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6231
  %cmd_flags39 = getelementptr inbounds %struct.request, %struct.request* %35, i32 0, i32 3, !dbg !6231
  %36 = load i32, i32* %cmd_flags39, align 8, !dbg !6231
  %and40 = and i32 %36, 255, !dbg !6231
  %call41 = call zeroext i1 @op_is_write(i32 %and40) #11, !dbg !6231
  %37 = zext i1 %call41 to i64, !dbg !6231
  %cond43 = select i1 %call41, i32 1, i32 0, !dbg !6231
  %cmp44 = icmp eq i32 %cond43, 1, !dbg !6232
  br i1 %cmp44, label %if.then46, label %if.end55, !dbg !6233

if.then46:                                        ; preds = %land.lhs.true38
  %38 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6234
  %call47 = call i32 @mmc_sd_num_wr_blocks(%struct.mmc_card* %38, i32* %blocks) #11, !dbg !6237
  %tobool48 = icmp ne i32 %call47, 0, !dbg !6237
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !6238

if.then49:                                        ; preds = %if.then46
  %39 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6239
  %data50 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %39, i32 0, i32 4, !dbg !6240
  %bytes_xfered51 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data50, i32 0, i32 7, !dbg !6241
  store i32 0, i32* %bytes_xfered51, align 4, !dbg !6242
  br label %if.end54, !dbg !6239

if.else:                                          ; preds = %if.then46
  %40 = load i32, i32* %blocks, align 4, !dbg !6243
  %shl = shl i32 %40, 9, !dbg !6244
  %41 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6245
  %data52 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %41, i32 0, i32 4, !dbg !6246
  %bytes_xfered53 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data52, i32 0, i32 7, !dbg !6247
  store i32 %shl, i32* %bytes_xfered53, align 4, !dbg !6248
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then49
  br label %if.end55, !dbg !6249

if.end55:                                         ; preds = %if.end54, %land.lhs.true38, %land.lhs.true34, %land.lhs.true31, %if.end29
  %42 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6250
  %card56 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %42, i32 0, i32 0, !dbg !6250
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card56, align 8, !dbg !6250
  %host57 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %43, i32 0, i32 0, !dbg !6250
  %44 = load %struct.mmc_host*, %struct.mmc_host** %host57, align 8, !dbg !6250
  %caps58 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %44, i32 0, i32 17, !dbg !6250
  %45 = load i32, i32* %caps58, align 4, !dbg !6250
  %and59 = and i32 %45, 16, !dbg !6250
  %tobool60 = icmp ne i32 %and59, 0, !dbg !6250
  br i1 %tobool60, label %if.end69, label %land.lhs.true61, !dbg !6252

land.lhs.true61:                                  ; preds = %if.end55
  %46 = load i32, i32* %err, align 4, !dbg !6253
  %tobool62 = icmp ne i32 %46, 0, !dbg !6253
  br i1 %tobool62, label %land.lhs.true63, label %if.end69, !dbg !6254

land.lhs.true63:                                  ; preds = %land.lhs.true61
  %47 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6255
  %48 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6256
  %host64 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %48, i32 0, i32 0, !dbg !6257
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host64, align 8, !dbg !6257
  %50 = load i32, i32* %type, align 4, !dbg !6258
  %call65 = call i32 @mmc_blk_reset(%struct.mmc_blk_data* %47, %struct.mmc_host* %49, i32 %50) #11, !dbg !6259
  %tobool66 = icmp ne i32 %call65, 0, !dbg !6259
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !6260

if.then67:                                        ; preds = %land.lhs.true63
  %51 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6261
  %rq_disk = getelementptr inbounds %struct.request, %struct.request* %51, i32 0, i32 15, !dbg !6261
  %52 = load %struct.gendisk*, %struct.gendisk** %rq_disk, align 8, !dbg !6261
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %52, i32 0, i32 3, !dbg !6261
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !6261
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay) #13, !dbg !6261
  %53 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6263
  %retries = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %53, i32 0, i32 6, !dbg !6264
  store i32 6, i32* %retries, align 4, !dbg !6265
  br label %if.end109, !dbg !6266

if.end69:                                         ; preds = %land.lhs.true63, %land.lhs.true61, %if.end55
  %54 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6267
  %data70 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %54, i32 0, i32 4, !dbg !6269
  %bytes_xfered71 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data70, i32 0, i32 7, !dbg !6270
  %55 = load i32, i32* %bytes_xfered71, align 4, !dbg !6270
  %tobool72 = icmp ne i32 %55, 0, !dbg !6267
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !6271

if.then73:                                        ; preds = %if.end69
  br label %if.end109, !dbg !6272

if.end74:                                         ; preds = %if.end69
  %56 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6273
  %retries75 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %56, i32 0, i32 6, !dbg !6275
  %57 = load i32, i32* %retries75, align 4, !dbg !6275
  %add = add i32 %57, 1, !dbg !6276
  %cmp76 = icmp eq i32 %add, 5, !dbg !6277
  br i1 %cmp76, label %if.then78, label %if.end81, !dbg !6278

if.then78:                                        ; preds = %if.end74
  %58 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6279
  %59 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6280
  %host79 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %59, i32 0, i32 0, !dbg !6281
  %60 = load %struct.mmc_host*, %struct.mmc_host** %host79, align 8, !dbg !6281
  %61 = load i32, i32* %type, align 4, !dbg !6282
  %call80 = call i32 @mmc_blk_reset(%struct.mmc_blk_data* %58, %struct.mmc_host* %60, i32 %61) #11, !dbg !6283
  br label %if.end81, !dbg !6283

if.end81:                                         ; preds = %if.then78, %if.end74
  %62 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6284
  %sbc = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %62, i32 0, i32 1, !dbg !6286
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 5, !dbg !6287
  %63 = load i32, i32* %error, align 8, !dbg !6287
  %tobool82 = icmp ne i32 %63, 0, !dbg !6284
  br i1 %tobool82, label %if.then86, label %lor.lhs.false83, !dbg !6288

lor.lhs.false83:                                  ; preds = %if.end81
  %64 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6289
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %64, i32 0, i32 2, !dbg !6290
  %error84 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !6291
  %65 = load i32, i32* %error84, align 8, !dbg !6291
  %tobool85 = icmp ne i32 %65, 0, !dbg !6289
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !6292

if.then86:                                        ; preds = %lor.lhs.false83, %if.end81
  br label %if.end109, !dbg !6293

if.end87:                                         ; preds = %lor.lhs.false83
  %66 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6294
  %retries88 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %66, i32 0, i32 6, !dbg !6296
  %67 = load i32, i32* %retries88, align 4, !dbg !6296
  %cmp89 = icmp slt i32 %67, 3, !dbg !6297
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !6298

if.then91:                                        ; preds = %if.end87
  %68 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6299
  %retries92 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %68, i32 0, i32 6, !dbg !6301
  store i32 3, i32* %retries92, align 4, !dbg !6302
  br label %if.end109, !dbg !6303

if.end93:                                         ; preds = %if.end87
  %69 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6304
  %call94 = call zeroext i1 @mmc_large_sector(%struct.mmc_card* %69) #11, !dbg !6306
  br i1 %call94, label %if.end109, label %land.lhs.true95, !dbg !6307

land.lhs.true95:                                  ; preds = %if.end93
  %70 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6308
  %cmd_flags96 = getelementptr inbounds %struct.request, %struct.request* %70, i32 0, i32 3, !dbg !6308
  %71 = load i32, i32* %cmd_flags96, align 8, !dbg !6308
  %and97 = and i32 %71, 255, !dbg !6308
  %call98 = call zeroext i1 @op_is_write(i32 %and97) #11, !dbg !6308
  %72 = zext i1 %call98 to i64, !dbg !6308
  %cond100 = select i1 %call98, i32 1, i32 0, !dbg !6308
  %cmp101 = icmp eq i32 %cond100, 0, !dbg !6309
  br i1 %cmp101, label %land.lhs.true103, label %if.end109, !dbg !6310

land.lhs.true103:                                 ; preds = %land.lhs.true95
  %73 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !6311
  %data104 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %73, i32 0, i32 4, !dbg !6312
  %blocks105 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data104, i32 0, i32 3, !dbg !6313
  %74 = load i32, i32* %blocks105, align 4, !dbg !6313
  %cmp106 = icmp ugt i32 %74, 1, !dbg !6314
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !6315

if.then108:                                       ; preds = %land.lhs.true103
  %75 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6316
  %76 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6318
  call void @mmc_blk_read_single(%struct.mmc_queue* %75, %struct.request* %76) #11, !dbg !6319
  br label %if.end109, !dbg !6320

if.end109:                                        ; preds = %if.then16, %if.then67, %if.then73, %if.then86, %if.then91, %if.then108, %land.lhs.true103, %land.lhs.true95, %if.end93
  ret void, !dbg !6321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_urgent_bkops(%struct.mmc_queue* %mq, %struct.mmc_queue_req* %mqrq) #0 !dbg !6322 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %mqrq.addr = alloca %struct.mmc_queue_req*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  store %struct.mmc_queue_req* %mqrq, %struct.mmc_queue_req** %mqrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq.addr, metadata !6327, metadata !DIExpression()), !dbg !6328
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6329
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !6331
  %call = call zeroext i1 @mmc_blk_urgent_bkops_needed(%struct.mmc_queue* %0, %struct.mmc_queue_req* %1) #11, !dbg !6332
  br i1 %call, label %if.then, label %if.end, !dbg !6333

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6334
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 0, !dbg !6335
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6335
  call void @mmc_run_bkops(%struct.mmc_card* %3) #11, !dbg !6336
  br label %if.end, !dbg !6336

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_post_req(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6338 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  %host = alloca %struct.mmc_host*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !6343, metadata !DIExpression()), !dbg !6344
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6345
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !6346
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6344
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !6347, metadata !DIExpression()), !dbg !6348
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !6349
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %1, i32 0, i32 0, !dbg !6350
  %mrq1 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 0, !dbg !6351
  store %struct.mmc_request* %mrq1, %struct.mmc_request** %mrq, align 8, !dbg !6348
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !6352, metadata !DIExpression()), !dbg !6353
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6354
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 0, !dbg !6355
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6355
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !6356
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !6356
  store %struct.mmc_host* %4, %struct.mmc_host** %host, align 8, !dbg !6353
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6357
  %6 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !6358
  call void @mmc_post_req(%struct.mmc_host* %5, %struct.mmc_request* %6, i32 0) #11, !dbg !6359
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6360
  %in_recovery = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %7, i32 0, i32 11, !dbg !6362
  %8 = load i8, i8* %in_recovery, align 1, !dbg !6362
  %tobool = trunc i8 %8 to i1, !dbg !6362
  br i1 %tobool, label %if.then, label %if.else, !dbg !6363

if.then:                                          ; preds = %entry
  %9 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6364
  %10 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6365
  call void @mmc_blk_mq_complete_rq(%struct.mmc_queue* %9, %struct.request* %10) #11, !dbg !6366
  br label %if.end8, !dbg !6366

if.else:                                          ; preds = %entry
  %11 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6367
  %q = getelementptr inbounds %struct.request, %struct.request* %11, i32 0, i32 0, !dbg !6367
  %12 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !6367
  %call3 = call zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %12) #11, !dbg !6367
  %lnot = xor i1 %call3, true, !dbg !6367
  %lnot4 = xor i1 %lnot, true, !dbg !6367
  %lnot5 = xor i1 %lnot4, true, !dbg !6367
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !6367
  %conv = sext i32 %lnot.ext to i64, !dbg !6367
  %tobool6 = icmp ne i64 %conv, 0, !dbg !6367
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !6369

if.then7:                                         ; preds = %if.else
  %13 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6370
  call void @blk_mq_complete_request(%struct.request* %13) #11, !dbg !6371
  br label %if.end, !dbg !6371

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %14 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6372
  %15 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6373
  call void @mmc_blk_mq_dec_in_flight(%struct.mmc_queue* %14, %struct.request* %15) #11, !dbg !6374
  ret void, !dbg !6375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_blk_mq_complete_work(%struct.work_struct* %work) #0 !dbg !6376 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_queue*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !6377, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !6379, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6381, metadata !DIExpression()), !dbg !6383
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !6383
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !6383
  store i8* %1, i8** %__mptr, align 8, !dbg !6383
  br label %do.body, !dbg !6383

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6384

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6383
  %add.ptr = getelementptr i8, i8* %2, i64 -432, !dbg !6383
  %3 = bitcast i8* %add.ptr to %struct.mmc_queue*, !dbg !6383
  store %struct.mmc_queue* %3, %struct.mmc_queue** %tmp, align 8, !dbg !6384
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %tmp, align 8, !dbg !6383
  store %struct.mmc_queue* %4, %struct.mmc_queue** %mq, align 8, !dbg !6380
  %5 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !6386
  call void @mmc_blk_mq_complete_prev_req(%struct.mmc_queue* %5, %struct.request** null) #11, !dbg !6387
  ret void, !dbg !6388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_complete_prev_req(%struct.mmc_queue* %mq, %struct.request** %prev_req) #0 !dbg !6389 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %prev_req.addr = alloca %struct.request**, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6392, metadata !DIExpression()), !dbg !6393
  store %struct.request** %prev_req, %struct.request*** %prev_req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request*** %prev_req.addr, metadata !6394, metadata !DIExpression()), !dbg !6395
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6396
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 0, !dbg !6398
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6398
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 0, !dbg !6399
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6399
  %call = call zeroext i1 @mmc_host_done_complete(%struct.mmc_host* %2) #11, !dbg !6400
  br i1 %call, label %if.then, label %if.end, !dbg !6401

if.then:                                          ; preds = %entry
  br label %return, !dbg !6402

if.end:                                           ; preds = %entry
  %3 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6403
  %complete_lock = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %3, i32 0, i32 18, !dbg !6404
  call void @mutex_lock(%struct.mutex* %complete_lock) #11, !dbg !6405
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6406
  %complete_req = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %4, i32 0, i32 17, !dbg !6408
  %5 = load %struct.request*, %struct.request** %complete_req, align 8, !dbg !6408
  %tobool = icmp ne %struct.request* %5, null, !dbg !6406
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !6409

if.then1:                                         ; preds = %if.end
  br label %out_unlock, !dbg !6410

if.end2:                                          ; preds = %if.end
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6411
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6412
  %complete_req3 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %7, i32 0, i32 17, !dbg !6413
  %8 = load %struct.request*, %struct.request** %complete_req3, align 8, !dbg !6413
  call void @mmc_blk_mq_poll_completion(%struct.mmc_queue* %6, %struct.request* %8) #11, !dbg !6414
  %9 = load %struct.request**, %struct.request*** %prev_req.addr, align 8, !dbg !6415
  %tobool4 = icmp ne %struct.request** %9, null, !dbg !6415
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !6417

if.then5:                                         ; preds = %if.end2
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6418
  %complete_req6 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %10, i32 0, i32 17, !dbg !6419
  %11 = load %struct.request*, %struct.request** %complete_req6, align 8, !dbg !6419
  %12 = load %struct.request**, %struct.request*** %prev_req.addr, align 8, !dbg !6420
  store %struct.request* %11, %struct.request** %12, align 8, !dbg !6421
  br label %if.end8, !dbg !6422

if.else:                                          ; preds = %if.end2
  %13 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6423
  %14 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6424
  %complete_req7 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %14, i32 0, i32 17, !dbg !6425
  %15 = load %struct.request*, %struct.request** %complete_req7, align 8, !dbg !6425
  call void @mmc_blk_mq_post_req(%struct.mmc_queue* %13, %struct.request* %15) #11, !dbg !6426
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5
  %16 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6427
  %complete_req9 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %16, i32 0, i32 17, !dbg !6428
  store %struct.request* null, %struct.request** %complete_req9, align 8, !dbg !6429
  br label %out_unlock, !dbg !6427

out_unlock:                                       ; preds = %if.end8, %if.then1
  call void @llvm.dbg.label(metadata !6430), !dbg !6431
  %17 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6432
  %complete_lock10 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %17, i32 0, i32 18, !dbg !6433
  call void @mutex_unlock(%struct.mutex* %complete_lock10) #11, !dbg !6434
  br label %return, !dbg !6435

return:                                           ; preds = %out_unlock, %if.then
  ret void, !dbg !6435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_blk_mq_issue_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6436 {
entry:
  %retval = alloca i32, align 4
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on41 = alloca i32, align 4
  %tmp59 = alloca i64, align 8
  %__ret_warn_on72 = alloca i32, align 4
  %tmp90 = alloca i64, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6445
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 3, !dbg !6446
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !6446
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !6444
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !6447, metadata !DIExpression()), !dbg !6448
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6449
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 2, !dbg !6450
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !6451
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !6451
  store %struct.mmc_card* %3, %struct.mmc_card** %card, align 8, !dbg !6448
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !6452, metadata !DIExpression()), !dbg !6453
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6454
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 0, !dbg !6455
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !6455
  store %struct.mmc_host* %5, %struct.mmc_host** %host, align 8, !dbg !6453
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6456, metadata !DIExpression()), !dbg !6457
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6458
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6459
  %part_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %7, i32 0, i32 8, !dbg !6460
  %8 = load i32, i32* %part_type, align 4, !dbg !6460
  %call = call i32 @mmc_blk_part_switch(%struct.mmc_card* %6, i32 %8) #11, !dbg !6461
  store i32 %call, i32* %ret, align 4, !dbg !6462
  %9 = load i32, i32* %ret, align 4, !dbg !6463
  %tobool = icmp ne i32 %9, 0, !dbg !6463
  br i1 %tobool, label %if.then, label %if.end, !dbg !6465

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !6466
  br label %return, !dbg !6466

if.end:                                           ; preds = %entry
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6467
  %11 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6468
  %call3 = call i32 @mmc_issue_type(%struct.mmc_queue* %10, %struct.request* %11) #11, !dbg !6469
  switch i32 %call3, label %sw.default71 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb29
    i32 2, label %sw.bb29
  ], !dbg !6470

sw.bb:                                            ; preds = %if.end
  %12 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6471
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6473
  %call4 = call i32 @mmc_blk_wait_for_idle(%struct.mmc_queue* %12, %struct.mmc_host* %13) #11, !dbg !6474
  store i32 %call4, i32* %ret, align 4, !dbg !6475
  %14 = load i32, i32* %ret, align 4, !dbg !6476
  %tobool5 = icmp ne i32 %14, 0, !dbg !6476
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !6478

if.then6:                                         ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !6479
  br label %return, !dbg !6479

if.end7:                                          ; preds = %sw.bb
  %15 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6480
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %15, i32 0, i32 3, !dbg !6480
  %16 = load i32, i32* %cmd_flags, align 8, !dbg !6480
  %and = and i32 %16, 255, !dbg !6480
  switch i32 %and, label %sw.default [
    i32 34, label %sw.bb8
    i32 35, label %sw.bb8
    i32 3, label %sw.bb9
    i32 5, label %sw.bb10
    i32 2, label %sw.bb11
  ], !dbg !6481

sw.bb8:                                           ; preds = %if.end7, %if.end7
  %17 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6482
  %18 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6484
  call void @mmc_blk_issue_drv_op(%struct.mmc_queue* %17, %struct.request* %18) #11, !dbg !6485
  br label %sw.epilog, !dbg !6486

sw.bb9:                                           ; preds = %if.end7
  %19 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6487
  %20 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6488
  call void @mmc_blk_issue_discard_rq(%struct.mmc_queue* %19, %struct.request* %20) #11, !dbg !6489
  br label %sw.epilog, !dbg !6490

sw.bb10:                                          ; preds = %if.end7
  %21 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6491
  %22 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6492
  call void @mmc_blk_issue_secdiscard_rq(%struct.mmc_queue* %21, %struct.request* %22) #11, !dbg !6493
  br label %sw.epilog, !dbg !6494

sw.bb11:                                          ; preds = %if.end7
  %23 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6495
  %24 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6496
  call void @mmc_blk_issue_flush(%struct.mmc_queue* %23, %struct.request* %24) #11, !dbg !6497
  br label %sw.epilog, !dbg !6498

sw.default:                                       ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6499, metadata !DIExpression()), !dbg !6501
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6501
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !6502
  %tobool12 = icmp ne i32 %25, 0, !dbg !6502
  %lnot = xor i1 %tobool12, true, !dbg !6502
  %lnot13 = xor i1 %lnot, true, !dbg !6502
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !6502
  %conv = sext i32 %lnot.ext to i64, !dbg !6502
  %tobool14 = icmp ne i64 %conv, 0, !dbg !6502
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !6501

if.then15:                                        ; preds = %sw.default
  br label %do.body, !dbg !6502

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !6504

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !6506

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !6504

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 2216, i32 2307, i64 12) #5, !dbg !6508, !srcloc !6510
  br label %do.end18, !dbg !6508

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #5, !dbg !6511, !srcloc !6513
  br label %do.body19, !dbg !6504

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !6514

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !6504

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !6504

if.end22:                                         ; preds = %do.end21, %sw.default
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !6501
  %tobool23 = icmp ne i32 %26, 0, !dbg !6501
  %lnot24 = xor i1 %tobool23, true, !dbg !6501
  %lnot26 = xor i1 %lnot24, true, !dbg !6501
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !6501
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !6501
  store i64 %conv28, i64* %tmp, align 8, !dbg !6502
  %27 = load i64, i64* %tmp, align 8, !dbg !6501
  store i32 2, i32* %retval, align 4, !dbg !6516
  br label %return, !dbg !6516

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8
  store i32 3, i32* %retval, align 4, !dbg !6517
  br label %return, !dbg !6517

sw.bb29:                                          ; preds = %if.end, %if.end
  %28 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6518
  %cmd_flags30 = getelementptr inbounds %struct.request, %struct.request* %28, i32 0, i32 3, !dbg !6518
  %29 = load i32, i32* %cmd_flags30, align 8, !dbg !6518
  %and31 = and i32 %29, 255, !dbg !6518
  switch i32 %and31, label %sw.default40 [
    i32 2, label %sw.bb32
    i32 0, label %sw.bb34
    i32 1, label %sw.bb34
  ], !dbg !6519

sw.bb32:                                          ; preds = %sw.bb29
  %30 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6520
  %31 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6522
  %call33 = call i32 @mmc_blk_cqe_issue_flush(%struct.mmc_queue* %30, %struct.request* %31) #11, !dbg !6523
  store i32 %call33, i32* %ret, align 4, !dbg !6524
  br label %sw.epilog66, !dbg !6525

sw.bb34:                                          ; preds = %sw.bb29, %sw.bb29
  %32 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6526
  %use_cqe = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %32, i32 0, i32 9, !dbg !6528
  %33 = load i8, i8* %use_cqe, align 1, !dbg !6528
  %tobool35 = trunc i8 %33 to i1, !dbg !6528
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !6529

if.then36:                                        ; preds = %sw.bb34
  %34 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6530
  %35 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6531
  %call37 = call i32 @mmc_blk_cqe_issue_rw_rq(%struct.mmc_queue* %34, %struct.request* %35) #11, !dbg !6532
  store i32 %call37, i32* %ret, align 4, !dbg !6533
  br label %if.end39, !dbg !6534

if.else:                                          ; preds = %sw.bb34
  %36 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6535
  %37 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6536
  %call38 = call i32 @mmc_blk_mq_issue_rw_rq(%struct.mmc_queue* %36, %struct.request* %37) #11, !dbg !6537
  store i32 %call38, i32* %ret, align 4, !dbg !6538
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then36
  br label %sw.epilog66, !dbg !6539

sw.default40:                                     ; preds = %sw.bb29
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on41, metadata !6540, metadata !DIExpression()), !dbg !6542
  store i32 1, i32* %__ret_warn_on41, align 4, !dbg !6542
  %38 = load i32, i32* %__ret_warn_on41, align 4, !dbg !6543
  %tobool42 = icmp ne i32 %38, 0, !dbg !6543
  %lnot43 = xor i1 %tobool42, true, !dbg !6543
  %lnot45 = xor i1 %lnot43, true, !dbg !6543
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !6543
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !6543
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !6543
  br i1 %tobool48, label %if.then49, label %if.end58, !dbg !6542

if.then49:                                        ; preds = %sw.default40
  br label %do.body50, !dbg !6543

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !6545

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !6547

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !6545

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 2234, i32 2307, i64 12) #5, !dbg !6549, !srcloc !6551
  br label %do.end54, !dbg !6549

do.end54:                                         ; preds = %do.body53
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 308) #5, !dbg !6552, !srcloc !6554
  br label %do.body55, !dbg !6545

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !6555

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !6545

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !6545

if.end58:                                         ; preds = %do.end57, %sw.default40
  %39 = load i32, i32* %__ret_warn_on41, align 4, !dbg !6542
  %tobool60 = icmp ne i32 %39, 0, !dbg !6542
  %lnot61 = xor i1 %tobool60, true, !dbg !6542
  %lnot63 = xor i1 %lnot61, true, !dbg !6542
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !6542
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !6542
  store i64 %conv65, i64* %tmp59, align 8, !dbg !6543
  %40 = load i64, i64* %tmp59, align 8, !dbg !6542
  store i32 -22, i32* %ret, align 4, !dbg !6557
  br label %sw.epilog66, !dbg !6558

sw.epilog66:                                      ; preds = %if.end58, %if.end39, %sw.bb32
  %41 = load i32, i32* %ret, align 4, !dbg !6559
  %tobool67 = icmp ne i32 %41, 0, !dbg !6559
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !6561

if.then68:                                        ; preds = %sw.epilog66
  store i32 0, i32* %retval, align 4, !dbg !6562
  br label %return, !dbg !6562

if.end69:                                         ; preds = %sw.epilog66
  %42 = load i32, i32* %ret, align 4, !dbg !6563
  %cmp = icmp eq i32 %42, -16, !dbg !6564
  %43 = zext i1 %cmp to i64, !dbg !6563
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !6563
  store i32 %cond, i32* %retval, align 4, !dbg !6565
  br label %return, !dbg !6565

sw.default71:                                     ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on72, metadata !6566, metadata !DIExpression()), !dbg !6568
  store i32 1, i32* %__ret_warn_on72, align 4, !dbg !6568
  %44 = load i32, i32* %__ret_warn_on72, align 4, !dbg !6569
  %tobool73 = icmp ne i32 %44, 0, !dbg !6569
  %lnot74 = xor i1 %tobool73, true, !dbg !6569
  %lnot76 = xor i1 %lnot74, true, !dbg !6569
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !6569
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !6569
  %tobool79 = icmp ne i64 %conv78, 0, !dbg !6569
  br i1 %tobool79, label %if.then80, label %if.end89, !dbg !6568

if.then80:                                        ; preds = %sw.default71
  br label %do.body81, !dbg !6569

do.body81:                                        ; preds = %if.then80
  br label %do.body82, !dbg !6571

do.body82:                                        ; preds = %do.body81
  br label %do.end83, !dbg !6573

do.end83:                                         ; preds = %do.body82
  br label %do.body84, !dbg !6571

do.body84:                                        ; preds = %do.end83
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 2241, i32 2307, i64 12) #5, !dbg !6575, !srcloc !6577
  br label %do.end85, !dbg !6575

do.end85:                                         ; preds = %do.body84
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 309) #5, !dbg !6578, !srcloc !6580
  br label %do.body86, !dbg !6571

do.body86:                                        ; preds = %do.end85
  br label %do.end87, !dbg !6581

do.end87:                                         ; preds = %do.body86
  br label %do.end88, !dbg !6571

do.end88:                                         ; preds = %do.end87
  br label %if.end89, !dbg !6571

if.end89:                                         ; preds = %do.end88, %sw.default71
  %45 = load i32, i32* %__ret_warn_on72, align 4, !dbg !6568
  %tobool91 = icmp ne i32 %45, 0, !dbg !6568
  %lnot92 = xor i1 %tobool91, true, !dbg !6568
  %lnot94 = xor i1 %lnot92, true, !dbg !6568
  %lnot.ext95 = zext i1 %lnot94 to i32, !dbg !6568
  %conv96 = sext i32 %lnot.ext95 to i64, !dbg !6568
  store i64 %conv96, i64* %tmp90, align 8, !dbg !6569
  %46 = load i64, i64* %tmp90, align 8, !dbg !6568
  store i32 2, i32* %retval, align 4, !dbg !6583
  br label %return, !dbg !6583

return:                                           ; preds = %if.end89, %if.end69, %if.then68, %sw.epilog, %if.end22, %if.then6, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !6584
  ret i32 %47, !dbg !6584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_part_switch(%struct.mmc_card* %card, i32 %part_type) #0 !dbg !6585 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %part_type.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %main_md = alloca %struct.mmc_blk_data*, align 8
  %part_config = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i32 %part_type, i32* %part_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %part_type.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6592, metadata !DIExpression()), !dbg !6593
  store i32 0, i32* %ret, align 4, !dbg !6593
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %main_md, metadata !6594, metadata !DIExpression()), !dbg !6595
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6596
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 1, !dbg !6597
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !6598
  %1 = bitcast i8* %call to %struct.mmc_blk_data*, !dbg !6598
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %main_md, align 8, !dbg !6595
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %main_md, align 8, !dbg !6599
  %part_curr = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 10, !dbg !6601
  %3 = load i32, i32* %part_curr, align 4, !dbg !6601
  %4 = load i32, i32* %part_type.addr, align 4, !dbg !6602
  %cmp = icmp eq i32 %3, %4, !dbg !6603
  br i1 %cmp, label %if.then, label %if.end, !dbg !6604

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6605
  br label %return, !dbg !6605

if.end:                                           ; preds = %entry
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6606
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 4, !dbg !6606
  %6 = load i32, i32* %type, align 8, !dbg !6606
  %cmp1 = icmp eq i32 %6, 0, !dbg !6606
  br i1 %cmp1, label %if.then2, label %if.end20, !dbg !6608

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %part_config, metadata !6609, metadata !DIExpression()), !dbg !6611
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6612
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 21, !dbg !6613
  %part_config3 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 6, !dbg !6614
  %8 = load i8, i8* %part_config3, align 2, !dbg !6614
  store i8 %8, i8* %part_config, align 1, !dbg !6611
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6615
  %10 = load i32, i32* %part_type.addr, align 4, !dbg !6616
  %call4 = call i32 @mmc_blk_part_switch_pre(%struct.mmc_card* %9, i32 %10) #11, !dbg !6617
  store i32 %call4, i32* %ret, align 4, !dbg !6618
  %11 = load i32, i32* %ret, align 4, !dbg !6619
  %tobool = icmp ne i32 %11, 0, !dbg !6619
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !6621

if.then5:                                         ; preds = %if.then2
  %12 = load i32, i32* %ret, align 4, !dbg !6622
  store i32 %12, i32* %retval, align 4, !dbg !6623
  br label %return, !dbg !6623

if.end6:                                          ; preds = %if.then2
  %13 = load i8, i8* %part_config, align 1, !dbg !6624
  %conv = zext i8 %13 to i32, !dbg !6624
  %and = and i32 %conv, -8, !dbg !6624
  %conv7 = trunc i32 %and to i8, !dbg !6624
  store i8 %conv7, i8* %part_config, align 1, !dbg !6624
  %14 = load i32, i32* %part_type.addr, align 4, !dbg !6625
  %15 = load i8, i8* %part_config, align 1, !dbg !6626
  %conv8 = zext i8 %15 to i32, !dbg !6626
  %or = or i32 %conv8, %14, !dbg !6626
  %conv9 = trunc i32 %or to i8, !dbg !6626
  store i8 %conv9, i8* %part_config, align 1, !dbg !6626
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6627
  %17 = load i8, i8* %part_config, align 1, !dbg !6628
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6629
  %ext_csd10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 21, !dbg !6630
  %part_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd10, i32 0, i32 12, !dbg !6631
  %19 = load i32, i32* %part_time, align 4, !dbg !6631
  %call11 = call i32 @mmc_switch(%struct.mmc_card* %16, i8 zeroext 1, i8 zeroext -77, i8 zeroext %17, i32 %19) #11, !dbg !6632
  store i32 %call11, i32* %ret, align 4, !dbg !6633
  %20 = load i32, i32* %ret, align 4, !dbg !6634
  %tobool12 = icmp ne i32 %20, 0, !dbg !6634
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6636

if.then13:                                        ; preds = %if.end6
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6637
  %22 = load i32, i32* %part_type.addr, align 4, !dbg !6639
  %call14 = call i32 @mmc_blk_part_switch_post(%struct.mmc_card* %21, i32 %22) #11, !dbg !6640
  %23 = load i32, i32* %ret, align 4, !dbg !6641
  store i32 %23, i32* %retval, align 4, !dbg !6642
  br label %return, !dbg !6642

if.end15:                                         ; preds = %if.end6
  %24 = load i8, i8* %part_config, align 1, !dbg !6643
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6644
  %ext_csd16 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %25, i32 0, i32 21, !dbg !6645
  %part_config17 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd16, i32 0, i32 6, !dbg !6646
  store i8 %24, i8* %part_config17, align 2, !dbg !6647
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6648
  %27 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %main_md, align 8, !dbg !6649
  %part_curr18 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %27, i32 0, i32 10, !dbg !6650
  %28 = load i32, i32* %part_curr18, align 4, !dbg !6650
  %call19 = call i32 @mmc_blk_part_switch_post(%struct.mmc_card* %26, i32 %28) #11, !dbg !6651
  store i32 %call19, i32* %ret, align 4, !dbg !6652
  br label %if.end20, !dbg !6653

if.end20:                                         ; preds = %if.end15, %if.end
  %29 = load i32, i32* %part_type.addr, align 4, !dbg !6654
  %30 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %main_md, align 8, !dbg !6655
  %part_curr21 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %30, i32 0, i32 10, !dbg !6656
  store i32 %29, i32* %part_curr21, align 4, !dbg !6657
  %31 = load i32, i32* %ret, align 4, !dbg !6658
  store i32 %31, i32* %retval, align 4, !dbg !6659
  br label %return, !dbg !6659

return:                                           ; preds = %if.end20, %if.then13, %if.then5, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !6660
  ret i32 %32, !dbg !6660
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_issue_type(%struct.mmc_queue*, %struct.request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_wait_for_idle(%struct.mmc_queue* %mq, %struct.mmc_host* %host) #0 !dbg !6661 {
entry:
  %retval = alloca i32, align 4
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6664, metadata !DIExpression()), !dbg !6665
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6666, metadata !DIExpression()), !dbg !6667
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6668
  %use_cqe = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 9, !dbg !6670
  %1 = load i8, i8* %use_cqe, align 1, !dbg !6670
  %tobool = trunc i8 %1 to i1, !dbg !6670
  br i1 %tobool, label %if.then, label %if.end, !dbg !6671

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6672
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 62, !dbg !6673
  %3 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !6673
  %cqe_wait_for_idle = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %3, i32 0, i32 5, !dbg !6674
  %4 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %cqe_wait_for_idle, align 8, !dbg !6674
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6675
  %call = call i32 %4(%struct.mmc_host* %5) #11, !dbg !6672
  store i32 %call, i32* %retval, align 4, !dbg !6676
  br label %return, !dbg !6676

if.end:                                           ; preds = %entry
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6677
  %call1 = call i32 @mmc_blk_rw_wait(%struct.mmc_queue* %6, %struct.request** null) #11, !dbg !6678
  store i32 %call1, i32* %retval, align 4, !dbg !6679
  br label %return, !dbg !6679

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !6680
  ret i32 %7, !dbg !6680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_issue_drv_op(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6681 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mq_rq = alloca %struct.mmc_queue_req*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %idata = alloca %struct.mmc_blk_ioc_data**, align 8
  %rpmb_ioctl = alloca i8, align 1
  %ext_csd = alloca i8**, align 8
  %status = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6682, metadata !DIExpression()), !dbg !6683
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6684, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mq_rq, metadata !6686, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !6688, metadata !DIExpression()), !dbg !6689
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6690
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 0, !dbg !6691
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !6691
  store %struct.mmc_card* %1, %struct.mmc_card** %card, align 8, !dbg !6689
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !6692, metadata !DIExpression()), !dbg !6693
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6694
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 3, !dbg !6695
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !6695
  store %struct.mmc_blk_data* %3, %struct.mmc_blk_data** %md, align 8, !dbg !6693
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_ioc_data*** %idata, metadata !6696, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.declare(metadata i8* %rpmb_ioctl, metadata !6707, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.declare(metadata i8*** %ext_csd, metadata !6709, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6713, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6715, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6717, metadata !DIExpression()), !dbg !6718
  %4 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6719
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %4) #11, !dbg !6720
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6721
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6722
  %drv_op = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %5, i32 0, i32 2, !dbg !6723
  %6 = load i32, i32* %drv_op, align 8, !dbg !6723
  %cmp = icmp eq i32 %6, 1, !dbg !6724
  %frombool = zext i1 %cmp to i8, !dbg !6725
  store i8 %frombool, i8* %rpmb_ioctl, align 1, !dbg !6725
  %7 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6726
  %drv_op2 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %7, i32 0, i32 2, !dbg !6727
  %8 = load i32, i32* %drv_op2, align 8, !dbg !6727
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb9
    i32 3, label %sw.bb20
    i32 4, label %sw.bb25
  ], !dbg !6728

sw.bb:                                            ; preds = %entry, %entry
  %9 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6729
  %drv_op_data = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %9, i32 0, i32 4, !dbg !6731
  %10 = load i8*, i8** %drv_op_data, align 8, !dbg !6731
  %11 = bitcast i8* %10 to %struct.mmc_blk_ioc_data**, !dbg !6729
  store %struct.mmc_blk_ioc_data** %11, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !6732
  store i32 0, i32* %i, align 4, !dbg !6733
  store i32 0, i32* %ret, align 4, !dbg !6735
  br label %for.cond, !dbg !6736

for.cond:                                         ; preds = %for.inc, %sw.bb
  %12 = load i32, i32* %i, align 4, !dbg !6737
  %13 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6739
  %ioc_count = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %13, i32 0, i32 5, !dbg !6740
  %14 = load i32, i32* %ioc_count, align 8, !dbg !6740
  %cmp3 = icmp ult i32 %12, %14, !dbg !6741
  br i1 %cmp3, label %for.body, label %for.end, !dbg !6742

for.body:                                         ; preds = %for.cond
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6743
  %16 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6745
  %17 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !6746
  %18 = load i32, i32* %i, align 4, !dbg !6747
  %idxprom = sext i32 %18 to i64, !dbg !6746
  %arrayidx = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %17, i64 %idxprom, !dbg !6746
  %19 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx, align 8, !dbg !6746
  %call4 = call i32 @__mmc_blk_ioctl_cmd(%struct.mmc_card* %15, %struct.mmc_blk_data* %16, %struct.mmc_blk_ioc_data* %19) #11, !dbg !6748
  store i32 %call4, i32* %ret, align 4, !dbg !6749
  %20 = load i32, i32* %ret, align 4, !dbg !6750
  %tobool = icmp ne i32 %20, 0, !dbg !6750
  br i1 %tobool, label %if.then, label %if.end, !dbg !6752

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6753

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6754

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !dbg !6755
  %inc = add i32 %21, 1, !dbg !6755
  store i32 %inc, i32* %i, align 4, !dbg !6755
  br label %for.cond, !dbg !6756, !llvm.loop !6757

for.end:                                          ; preds = %if.then, %for.cond
  %22 = load i8, i8* %rpmb_ioctl, align 1, !dbg !6759
  %tobool5 = trunc i8 %22 to i1, !dbg !6759
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !6761

if.then6:                                         ; preds = %for.end
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6762
  %call7 = call i32 @mmc_blk_part_switch(%struct.mmc_card* %23, i32 0) #11, !dbg !6763
  br label %if.end8, !dbg !6763

if.end8:                                          ; preds = %if.then6, %for.end
  br label %sw.epilog, !dbg !6764

sw.bb9:                                           ; preds = %entry
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6765
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6766
  %ext_csd10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %25, i32 0, i32 21, !dbg !6767
  %boot_ro_lock = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd10, i32 0, i32 37, !dbg !6768
  %26 = load i32, i32* %boot_ro_lock, align 4, !dbg !6768
  %or = or i32 %26, 1, !dbg !6769
  %conv = trunc i32 %or to i8, !dbg !6766
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6770
  %ext_csd11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %27, i32 0, i32 21, !dbg !6771
  %part_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd11, i32 0, i32 12, !dbg !6772
  %28 = load i32, i32* %part_time, align 4, !dbg !6772
  %call12 = call i32 @mmc_switch(%struct.mmc_card* %24, i8 zeroext 1, i8 zeroext -83, i8 zeroext %conv, i32 %28) #11, !dbg !6773
  store i32 %call12, i32* %ret, align 4, !dbg !6774
  %29 = load i32, i32* %ret, align 4, !dbg !6775
  %tobool13 = icmp ne i32 %29, 0, !dbg !6775
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !6777

if.then14:                                        ; preds = %sw.bb9
  %30 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6778
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %30, i32 0, i32 1, !dbg !6778
  %31 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !6778
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %31, i32 0, i32 3, !dbg !6778
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !6778
  %32 = load i32, i32* %ret, align 4, !dbg !6778
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay, i32 %32) #13, !dbg !6778
  br label %if.end19, !dbg !6778

if.else:                                          ; preds = %sw.bb9
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6779
  %ext_csd16 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 21, !dbg !6780
  %boot_ro_lock17 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd16, i32 0, i32 37, !dbg !6781
  %34 = load i32, i32* %boot_ro_lock17, align 4, !dbg !6782
  %or18 = or i32 %34, 1, !dbg !6782
  store i32 %or18, i32* %boot_ro_lock17, align 4, !dbg !6782
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then14
  br label %sw.epilog, !dbg !6783

sw.bb20:                                          ; preds = %entry
  %35 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6784
  %call21 = call i32 @mmc_send_status(%struct.mmc_card* %35, i32* %status) #11, !dbg !6785
  store i32 %call21, i32* %ret, align 4, !dbg !6786
  %36 = load i32, i32* %ret, align 4, !dbg !6787
  %tobool22 = icmp ne i32 %36, 0, !dbg !6787
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !6789

if.then23:                                        ; preds = %sw.bb20
  %37 = load i32, i32* %status, align 4, !dbg !6790
  store i32 %37, i32* %ret, align 4, !dbg !6791
  br label %if.end24, !dbg !6792

if.end24:                                         ; preds = %if.then23, %sw.bb20
  br label %sw.epilog, !dbg !6793

sw.bb25:                                          ; preds = %entry
  %38 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6794
  %drv_op_data26 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %38, i32 0, i32 4, !dbg !6795
  %39 = load i8*, i8** %drv_op_data26, align 8, !dbg !6795
  %40 = bitcast i8* %39 to i8**, !dbg !6794
  store i8** %40, i8*** %ext_csd, align 8, !dbg !6796
  %41 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6797
  %42 = load i8**, i8*** %ext_csd, align 8, !dbg !6798
  %call27 = call i32 @mmc_get_ext_csd(%struct.mmc_card* %41, i8** %42) #11, !dbg !6799
  store i32 %call27, i32* %ret, align 4, !dbg !6800
  br label %sw.epilog, !dbg !6801

sw.default:                                       ; preds = %entry
  %43 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6802
  %disk28 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %43, i32 0, i32 1, !dbg !6802
  %44 = load %struct.gendisk*, %struct.gendisk** %disk28, align 8, !dbg !6802
  %disk_name29 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %44, i32 0, i32 3, !dbg !6802
  %arraydecay30 = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name29, i64 0, i64 0, !dbg !6802
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay30) #13, !dbg !6802
  store i32 -22, i32* %ret, align 4, !dbg !6803
  br label %sw.epilog, !dbg !6804

sw.epilog:                                        ; preds = %sw.default, %sw.bb25, %if.end24, %if.end19, %if.end8
  %45 = load i32, i32* %ret, align 4, !dbg !6805
  %46 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mq_rq, align 8, !dbg !6806
  %drv_op_result = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %46, i32 0, i32 3, !dbg !6807
  store i32 %45, i32* %drv_op_result, align 4, !dbg !6808
  %47 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6809
  %48 = load i32, i32* %ret, align 4, !dbg !6810
  %tobool32 = icmp ne i32 %48, 0, !dbg !6810
  %49 = zext i1 %tobool32 to i64, !dbg !6810
  %cond = select i1 %tobool32, i32 10, i32 0, !dbg !6810
  %conv33 = trunc i32 %cond to i8, !dbg !6810
  call void @blk_mq_end_request(%struct.request* %47, i8 zeroext %conv33) #11, !dbg !6811
  ret void, !dbg !6812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_issue_discard_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6813 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %from = alloca i32, align 4
  %nr = alloca i32, align 4
  %err = alloca i32, align 4
  %type = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6814, metadata !DIExpression()), !dbg !6815
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6816, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !6818, metadata !DIExpression()), !dbg !6819
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6820
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 3, !dbg !6821
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !6821
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !6819
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !6822, metadata !DIExpression()), !dbg !6823
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6824
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 2, !dbg !6825
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !6826
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !6826
  store %struct.mmc_card* %3, %struct.mmc_card** %card, align 8, !dbg !6823
  call void @llvm.dbg.declare(metadata i32* %from, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !6829, metadata !DIExpression()), !dbg !6830
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6831, metadata !DIExpression()), !dbg !6832
  store i32 0, i32* %err, align 4, !dbg !6832
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6833, metadata !DIExpression()), !dbg !6834
  store i32 4, i32* %type, align 4, !dbg !6834
  call void @llvm.dbg.declare(metadata i8* %status, metadata !6835, metadata !DIExpression()), !dbg !6836
  store i8 0, i8* %status, align 1, !dbg !6836
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6837
  %call = call i32 @mmc_can_erase(%struct.mmc_card* %4) #11, !dbg !6839
  %tobool = icmp ne i32 %call, 0, !dbg !6839
  br i1 %tobool, label %if.end, label %if.then, !dbg !6840

if.then:                                          ; preds = %entry
  store i8 1, i8* %status, align 1, !dbg !6841
  br label %fail, !dbg !6843

if.end:                                           ; preds = %entry
  %5 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6844
  %call2 = call i64 @blk_rq_pos(%struct.request* %5) #11, !dbg !6845
  %conv = trunc i64 %call2 to i32, !dbg !6845
  store i32 %conv, i32* %from, align 4, !dbg !6846
  %6 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6847
  %call3 = call i32 @blk_rq_sectors(%struct.request* %6) #11, !dbg !6848
  store i32 %call3, i32* %nr, align 4, !dbg !6849
  br label %do.body, !dbg !6850

do.body:                                          ; preds = %land.end, %if.end
  store i32 0, i32* %err, align 4, !dbg !6851
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6853
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 6, !dbg !6855
  %8 = load i32, i32* %quirks, align 8, !dbg !6855
  %and = and i32 %8, 64, !dbg !6856
  %tobool4 = icmp ne i32 %and, 0, !dbg !6856
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !6857

if.then5:                                         ; preds = %do.body
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6858
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6860
  %erase_arg = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 13, !dbg !6861
  %11 = load i32, i32* %erase_arg, align 4, !dbg !6861
  %cmp = icmp eq i32 %11, 1, !dbg !6862
  %12 = zext i1 %cmp to i64, !dbg !6860
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !6860
  %conv7 = trunc i32 %cond to i8, !dbg !6860
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6863
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 21, !dbg !6864
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !6865
  %14 = load i32, i32* %generic_cmd6_time, align 4, !dbg !6865
  %call8 = call i32 @mmc_switch(%struct.mmc_card* %9, i8 zeroext 1, i8 zeroext 113, i8 zeroext %conv7, i32 %14) #11, !dbg !6866
  store i32 %call8, i32* %err, align 4, !dbg !6867
  br label %if.end9, !dbg !6868

if.end9:                                          ; preds = %if.then5, %do.body
  %15 = load i32, i32* %err, align 4, !dbg !6869
  %tobool10 = icmp ne i32 %15, 0, !dbg !6869
  br i1 %tobool10, label %if.end14, label %if.then11, !dbg !6871

if.then11:                                        ; preds = %if.end9
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6872
  %17 = load i32, i32* %from, align 4, !dbg !6873
  %18 = load i32, i32* %nr, align 4, !dbg !6874
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6875
  %erase_arg12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 13, !dbg !6876
  %20 = load i32, i32* %erase_arg12, align 4, !dbg !6876
  %call13 = call i32 @mmc_erase(%struct.mmc_card* %16, i32 %17, i32 %18, i32 %20) #11, !dbg !6877
  store i32 %call13, i32* %err, align 4, !dbg !6878
  br label %if.end14, !dbg !6879

if.end14:                                         ; preds = %if.then11, %if.end9
  br label %do.cond, !dbg !6880

do.cond:                                          ; preds = %if.end14
  %21 = load i32, i32* %err, align 4, !dbg !6881
  %cmp15 = icmp eq i32 %21, -5, !dbg !6882
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !6883

land.rhs:                                         ; preds = %do.cond
  %22 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6884
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6885
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 0, !dbg !6886
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6886
  %25 = load i32, i32* %type, align 4, !dbg !6887
  %call17 = call i32 @mmc_blk_reset(%struct.mmc_blk_data* %22, %struct.mmc_host* %24, i32 %25) #11, !dbg !6888
  %tobool18 = icmp ne i32 %call17, 0, !dbg !6889
  %lnot = xor i1 %tobool18, true, !dbg !6889
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %26 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !6890
  br i1 %26, label %do.body, label %do.end, !dbg !6880, !llvm.loop !6891

do.end:                                           ; preds = %land.end
  %27 = load i32, i32* %err, align 4, !dbg !6893
  %tobool19 = icmp ne i32 %27, 0, !dbg !6893
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !6895

if.then20:                                        ; preds = %do.end
  store i8 10, i8* %status, align 1, !dbg !6896
  br label %if.end21, !dbg !6897

if.else:                                          ; preds = %do.end
  %28 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6898
  %29 = load i32, i32* %type, align 4, !dbg !6899
  call void @mmc_blk_reset_success(%struct.mmc_blk_data* %28, i32 %29) #11, !dbg !6900
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then20
  br label %fail, !dbg !6893

fail:                                             ; preds = %if.end21, %if.then
  call void @llvm.dbg.label(metadata !6901), !dbg !6902
  %30 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6903
  %31 = load i8, i8* %status, align 1, !dbg !6904
  call void @blk_mq_end_request(%struct.request* %30, i8 zeroext %31) #11, !dbg !6905
  ret void, !dbg !6906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_issue_secdiscard_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !6907 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %from = alloca i32, align 4
  %nr = alloca i32, align 4
  %arg = alloca i32, align 4
  %err = alloca i32, align 4
  %type = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !6912, metadata !DIExpression()), !dbg !6913
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !6914
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 3, !dbg !6915
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !6915
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !6913
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !6916, metadata !DIExpression()), !dbg !6917
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !6918
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 2, !dbg !6919
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !6920
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !6920
  store %struct.mmc_card* %3, %struct.mmc_card** %card, align 8, !dbg !6917
  call void @llvm.dbg.declare(metadata i32* %from, metadata !6921, metadata !DIExpression()), !dbg !6922
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !6923, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.declare(metadata i32* %arg, metadata !6925, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6927, metadata !DIExpression()), !dbg !6928
  store i32 0, i32* %err, align 4, !dbg !6928
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6929, metadata !DIExpression()), !dbg !6930
  store i32 8, i32* %type, align 4, !dbg !6930
  call void @llvm.dbg.declare(metadata i8* %status, metadata !6931, metadata !DIExpression()), !dbg !6932
  store i8 0, i8* %status, align 1, !dbg !6932
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6933
  %call = call i32 @mmc_can_secure_erase_trim(%struct.mmc_card* %4) #11, !dbg !6935
  %tobool = icmp ne i32 %call, 0, !dbg !6935
  br i1 %tobool, label %if.end, label %if.then, !dbg !6936

if.then:                                          ; preds = %entry
  store i8 1, i8* %status, align 1, !dbg !6937
  br label %out, !dbg !6939

if.end:                                           ; preds = %entry
  %5 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6940
  %call2 = call i64 @blk_rq_pos(%struct.request* %5) #11, !dbg !6941
  %conv = trunc i64 %call2 to i32, !dbg !6941
  store i32 %conv, i32* %from, align 4, !dbg !6942
  %6 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !6943
  %call3 = call i32 @blk_rq_sectors(%struct.request* %6) #11, !dbg !6944
  store i32 %call3, i32* %nr, align 4, !dbg !6945
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6946
  %call4 = call i32 @mmc_can_trim(%struct.mmc_card* %7) #11, !dbg !6948
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6948
  br i1 %tobool5, label %land.lhs.true, label %if.else, !dbg !6949

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6950
  %9 = load i32, i32* %from, align 4, !dbg !6951
  %10 = load i32, i32* %nr, align 4, !dbg !6952
  %call6 = call i32 @mmc_erase_group_aligned(%struct.mmc_card* %8, i32 %9, i32 %10) #11, !dbg !6953
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6953
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !6954

if.then8:                                         ; preds = %land.lhs.true
  store i32 -2147483647, i32* %arg, align 4, !dbg !6955
  br label %if.end9, !dbg !6956

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i32 -2147483648, i32* %arg, align 4, !dbg !6957
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  br label %retry, !dbg !6958

retry:                                            ; preds = %if.then54, %if.end9
  call void @llvm.dbg.label(metadata !6959), !dbg !6960
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6961
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 6, !dbg !6963
  %12 = load i32, i32* %quirks, align 8, !dbg !6963
  %and = and i32 %12, 64, !dbg !6964
  %tobool10 = icmp ne i32 %and, 0, !dbg !6964
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !6965

if.then11:                                        ; preds = %retry
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6966
  %14 = load i32, i32* %arg, align 4, !dbg !6968
  %cmp = icmp eq i32 %14, -2147483647, !dbg !6969
  %15 = zext i1 %cmp to i64, !dbg !6968
  %cond = select i1 %cmp, i32 129, i32 128, !dbg !6968
  %conv13 = trunc i32 %cond to i8, !dbg !6968
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6970
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 21, !dbg !6971
  %generic_cmd6_time = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 14, !dbg !6972
  %17 = load i32, i32* %generic_cmd6_time, align 4, !dbg !6972
  %call14 = call i32 @mmc_switch(%struct.mmc_card* %13, i8 zeroext 1, i8 zeroext 113, i8 zeroext %conv13, i32 %17) #11, !dbg !6973
  store i32 %call14, i32* %err, align 4, !dbg !6974
  %18 = load i32, i32* %err, align 4, !dbg !6975
  %tobool15 = icmp ne i32 %18, 0, !dbg !6975
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6977

if.then16:                                        ; preds = %if.then11
  br label %out_retry, !dbg !6978

if.end17:                                         ; preds = %if.then11
  br label %if.end18, !dbg !6979

if.end18:                                         ; preds = %if.end17, %retry
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6980
  %20 = load i32, i32* %from, align 4, !dbg !6981
  %21 = load i32, i32* %nr, align 4, !dbg !6982
  %22 = load i32, i32* %arg, align 4, !dbg !6983
  %call19 = call i32 @mmc_erase(%struct.mmc_card* %19, i32 %20, i32 %21, i32 %22) #11, !dbg !6984
  store i32 %call19, i32* %err, align 4, !dbg !6985
  %23 = load i32, i32* %err, align 4, !dbg !6986
  %cmp20 = icmp eq i32 %23, -5, !dbg !6988
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !6989

if.then22:                                        ; preds = %if.end18
  br label %out_retry, !dbg !6990

if.end23:                                         ; preds = %if.end18
  %24 = load i32, i32* %err, align 4, !dbg !6991
  %tobool24 = icmp ne i32 %24, 0, !dbg !6991
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !6993

if.then25:                                        ; preds = %if.end23
  store i8 10, i8* %status, align 1, !dbg !6994
  br label %out, !dbg !6996

if.end26:                                         ; preds = %if.end23
  %25 = load i32, i32* %arg, align 4, !dbg !6997
  %cmp27 = icmp eq i32 %25, -2147483647, !dbg !6999
  br i1 %cmp27, label %if.then29, label %if.end49, !dbg !7000

if.then29:                                        ; preds = %if.end26
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7001
  %quirks30 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %26, i32 0, i32 6, !dbg !7004
  %27 = load i32, i32* %quirks30, align 8, !dbg !7004
  %and31 = and i32 %27, 64, !dbg !7005
  %tobool32 = icmp ne i32 %and31, 0, !dbg !7005
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !7006

if.then33:                                        ; preds = %if.then29
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7007
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7009
  %ext_csd34 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %29, i32 0, i32 21, !dbg !7010
  %generic_cmd6_time35 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd34, i32 0, i32 14, !dbg !7011
  %30 = load i32, i32* %generic_cmd6_time35, align 4, !dbg !7011
  %call36 = call i32 @mmc_switch(%struct.mmc_card* %28, i8 zeroext 1, i8 zeroext 113, i8 zeroext -120, i32 %30) #11, !dbg !7012
  store i32 %call36, i32* %err, align 4, !dbg !7013
  %31 = load i32, i32* %err, align 4, !dbg !7014
  %tobool37 = icmp ne i32 %31, 0, !dbg !7014
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !7016

if.then38:                                        ; preds = %if.then33
  br label %out_retry, !dbg !7017

if.end39:                                         ; preds = %if.then33
  br label %if.end40, !dbg !7018

if.end40:                                         ; preds = %if.end39, %if.then29
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7019
  %33 = load i32, i32* %from, align 4, !dbg !7020
  %34 = load i32, i32* %nr, align 4, !dbg !7021
  %call41 = call i32 @mmc_erase(%struct.mmc_card* %32, i32 %33, i32 %34, i32 -2147450880) #11, !dbg !7022
  store i32 %call41, i32* %err, align 4, !dbg !7023
  %35 = load i32, i32* %err, align 4, !dbg !7024
  %cmp42 = icmp eq i32 %35, -5, !dbg !7026
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7027

if.then44:                                        ; preds = %if.end40
  br label %out_retry, !dbg !7028

if.end45:                                         ; preds = %if.end40
  %36 = load i32, i32* %err, align 4, !dbg !7029
  %tobool46 = icmp ne i32 %36, 0, !dbg !7029
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !7031

if.then47:                                        ; preds = %if.end45
  store i8 10, i8* %status, align 1, !dbg !7032
  br label %out, !dbg !7034

if.end48:                                         ; preds = %if.end45
  br label %if.end49, !dbg !7035

if.end49:                                         ; preds = %if.end48, %if.end26
  br label %out_retry, !dbg !7036

out_retry:                                        ; preds = %if.end49, %if.then44, %if.then38, %if.then22, %if.then16
  call void @llvm.dbg.label(metadata !7037), !dbg !7038
  %37 = load i32, i32* %err, align 4, !dbg !7039
  %tobool50 = icmp ne i32 %37, 0, !dbg !7039
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !7041

land.lhs.true51:                                  ; preds = %out_retry
  %38 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !7042
  %39 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7043
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %39, i32 0, i32 0, !dbg !7044
  %40 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7044
  %41 = load i32, i32* %type, align 4, !dbg !7045
  %call52 = call i32 @mmc_blk_reset(%struct.mmc_blk_data* %38, %struct.mmc_host* %40, i32 %41) #11, !dbg !7046
  %tobool53 = icmp ne i32 %call52, 0, !dbg !7046
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !7047

if.then54:                                        ; preds = %land.lhs.true51
  br label %retry, !dbg !7048

if.end55:                                         ; preds = %land.lhs.true51, %out_retry
  %42 = load i32, i32* %err, align 4, !dbg !7049
  %tobool56 = icmp ne i32 %42, 0, !dbg !7049
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !7051

if.then57:                                        ; preds = %if.end55
  %43 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !7052
  %44 = load i32, i32* %type, align 4, !dbg !7053
  call void @mmc_blk_reset_success(%struct.mmc_blk_data* %43, i32 %44) #11, !dbg !7054
  br label %if.end58, !dbg !7054

if.end58:                                         ; preds = %if.then57, %if.end55
  br label %out, !dbg !7049

out:                                              ; preds = %if.end58, %if.then47, %if.then25, %if.then
  call void @llvm.dbg.label(metadata !7055), !dbg !7056
  %45 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7057
  %46 = load i8, i8* %status, align 1, !dbg !7058
  call void @blk_mq_end_request(%struct.request* %45, i8 zeroext %46) #11, !dbg !7059
  ret void, !dbg !7060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_issue_flush(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !7061 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %ret = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !7062, metadata !DIExpression()), !dbg !7063
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !7066, metadata !DIExpression()), !dbg !7067
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7068
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 3, !dbg !7069
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !7069
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !7067
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !7070, metadata !DIExpression()), !dbg !7071
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !7072
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 2, !dbg !7073
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !7074
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !7074
  store %struct.mmc_card* %3, %struct.mmc_card** %card, align 8, !dbg !7071
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7075, metadata !DIExpression()), !dbg !7076
  store i32 0, i32* %ret, align 4, !dbg !7076
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7077
  %call = call i32 @mmc_flush_cache(%struct.mmc_card* %4) #11, !dbg !7078
  store i32 %call, i32* %ret, align 4, !dbg !7079
  %5 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7080
  %6 = load i32, i32* %ret, align 4, !dbg !7081
  %tobool = icmp ne i32 %6, 0, !dbg !7081
  %7 = zext i1 %tobool to i64, !dbg !7081
  %cond = select i1 %tobool, i32 10, i32 0, !dbg !7081
  %conv = trunc i32 %cond to i8, !dbg !7081
  call void @blk_mq_end_request(%struct.request* %5, i8 zeroext %conv) #11, !dbg !7082
  ret void, !dbg !7083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_cqe_issue_flush(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !7084 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !7087, metadata !DIExpression()), !dbg !7088
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !7091, metadata !DIExpression()), !dbg !7092
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7093
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !7094
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7092
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !7095, metadata !DIExpression()), !dbg !7096
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7097
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7098
  %call1 = call %struct.mmc_request* @mmc_blk_cqe_prep_dcmd(%struct.mmc_queue_req* %1, %struct.request* %2) #11, !dbg !7099
  store %struct.mmc_request* %call1, %struct.mmc_request** %mrq, align 8, !dbg !7096
  %3 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7100
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %3, i32 0, i32 1, !dbg !7101
  %4 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !7101
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %4, i32 0, i32 0, !dbg !7102
  store i32 6, i32* %opcode, align 8, !dbg !7103
  %5 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7104
  %cmd2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %5, i32 0, i32 1, !dbg !7105
  %6 = load %struct.mmc_command*, %struct.mmc_command** %cmd2, align 8, !dbg !7105
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %6, i32 0, i32 1, !dbg !7106
  store i32 52429057, i32* %arg, align 4, !dbg !7107
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7108
  %cmd3 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %7, i32 0, i32 1, !dbg !7109
  %8 = load %struct.mmc_command*, %struct.mmc_command** %cmd3, align 8, !dbg !7109
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %8, i32 0, i32 3, !dbg !7110
  store i32 29, i32* %flags, align 8, !dbg !7111
  %9 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7112
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %9, i32 0, i32 0, !dbg !7113
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7113
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 0, !dbg !7114
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7114
  %12 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7115
  %call4 = call i32 @mmc_blk_cqe_start_req(%struct.mmc_host* %11, %struct.mmc_request* %12) #11, !dbg !7116
  ret i32 %call4, !dbg !7117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_cqe_issue_rw_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !7118 {
entry:
  %retval = alloca i32, align 4
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %host = alloca %struct.mmc_host*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !7119, metadata !DIExpression()), !dbg !7120
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !7123, metadata !DIExpression()), !dbg !7124
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7125
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !7126
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7124
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7127, metadata !DIExpression()), !dbg !7128
  %1 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7129
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %1, i32 0, i32 0, !dbg !7130
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7130
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !7131
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7131
  store %struct.mmc_host* %3, %struct.mmc_host** %host, align 8, !dbg !7128
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7132
  %hsq_enabled = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 67, !dbg !7134
  %5 = load i8, i8* %hsq_enabled, align 2, !dbg !7134
  %tobool = trunc i8 %5 to i1, !dbg !7134
  br i1 %tobool, label %if.then, label %if.end, !dbg !7135

if.then:                                          ; preds = %entry
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7136
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7137
  %call2 = call i32 @mmc_blk_hsq_issue_rw_rq(%struct.mmc_queue* %6, %struct.request* %7) #11, !dbg !7138
  store i32 %call2, i32* %retval, align 4, !dbg !7139
  br label %return, !dbg !7139

if.end:                                           ; preds = %entry
  %8 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7140
  %9 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7141
  call void @mmc_blk_data_prep(%struct.mmc_queue* %8, %struct.mmc_queue_req* %9, i32 0, i8* null, i8* null) #11, !dbg !7142
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7143
  %card3 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %10, i32 0, i32 0, !dbg !7144
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card3, align 8, !dbg !7144
  %host4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 0, !dbg !7145
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host4, align 8, !dbg !7145
  %13 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7146
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %13, i32 0, i32 0, !dbg !7147
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 0, !dbg !7148
  %call5 = call i32 @mmc_blk_cqe_start_req(%struct.mmc_host* %12, %struct.mmc_request* %mrq) #11, !dbg !7149
  store i32 %call5, i32* %retval, align 4, !dbg !7150
  br label %return, !dbg !7150

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !7151
  ret i32 %14, !dbg !7151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_mq_issue_rw_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !7152 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %prev_req = alloca %struct.request*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !7157, metadata !DIExpression()), !dbg !7158
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7159
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !7160
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7158
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7161, metadata !DIExpression()), !dbg !7162
  %1 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7163
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %1, i32 0, i32 0, !dbg !7164
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7164
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !7165
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7165
  store %struct.mmc_host* %3, %struct.mmc_host** %host, align 8, !dbg !7162
  call void @llvm.dbg.declare(metadata %struct.request** %prev_req, metadata !7166, metadata !DIExpression()), !dbg !7167
  store %struct.request* null, %struct.request** %prev_req, align 8, !dbg !7167
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7168, metadata !DIExpression()), !dbg !7169
  store i32 0, i32* %err, align 4, !dbg !7169
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7170
  %5 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7171
  %card2 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %5, i32 0, i32 0, !dbg !7172
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !7172
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7173
  call void @mmc_blk_rw_rq_prep(%struct.mmc_queue_req* %4, %struct.mmc_card* %6, i32 0, %struct.mmc_queue* %7) #11, !dbg !7174
  %8 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7175
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %8, i32 0, i32 0, !dbg !7176
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 0, !dbg !7177
  %done = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 6, !dbg !7178
  store void (%struct.mmc_request*)* @mmc_blk_mq_req_done, void (%struct.mmc_request*)** %done, align 8, !dbg !7179
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7180
  %10 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7181
  %brq3 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %10, i32 0, i32 0, !dbg !7182
  %mrq4 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq3, i32 0, i32 0, !dbg !7183
  call void @mmc_pre_req(%struct.mmc_host* %9, %struct.mmc_request* %mrq4) #11, !dbg !7184
  %11 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7185
  %call5 = call i32 @mmc_blk_rw_wait(%struct.mmc_queue* %11, %struct.request** %prev_req) #11, !dbg !7186
  store i32 %call5, i32* %err, align 4, !dbg !7187
  %12 = load i32, i32* %err, align 4, !dbg !7188
  %tobool = icmp ne i32 %12, 0, !dbg !7188
  br i1 %tobool, label %if.then, label %if.end, !dbg !7190

if.then:                                          ; preds = %entry
  br label %out_post_req, !dbg !7191

if.end:                                           ; preds = %entry
  %13 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7192
  %rw_wait = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %13, i32 0, i32 12, !dbg !7193
  store i8 1, i8* %rw_wait, align 4, !dbg !7194
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7195
  %15 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7196
  %brq6 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %15, i32 0, i32 0, !dbg !7197
  %mrq7 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq6, i32 0, i32 0, !dbg !7198
  %call8 = call i32 @mmc_start_request(%struct.mmc_host* %14, %struct.mmc_request* %mrq7) #11, !dbg !7199
  store i32 %call8, i32* %err, align 4, !dbg !7200
  %16 = load %struct.request*, %struct.request** %prev_req, align 8, !dbg !7201
  %tobool9 = icmp ne %struct.request* %16, null, !dbg !7201
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7203

if.then10:                                        ; preds = %if.end
  %17 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7204
  %18 = load %struct.request*, %struct.request** %prev_req, align 8, !dbg !7205
  call void @mmc_blk_mq_post_req(%struct.mmc_queue* %17, %struct.request* %18) #11, !dbg !7206
  br label %if.end11, !dbg !7206

if.end11:                                         ; preds = %if.then10, %if.end
  %19 = load i32, i32* %err, align 4, !dbg !7207
  %tobool12 = icmp ne i32 %19, 0, !dbg !7207
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !7209

if.then13:                                        ; preds = %if.end11
  %20 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7210
  %rw_wait14 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %20, i32 0, i32 12, !dbg !7211
  store i8 0, i8* %rw_wait14, align 4, !dbg !7212
  br label %if.end15, !dbg !7210

if.end15:                                         ; preds = %if.then13, %if.end11
  %21 = load i32, i32* %err, align 4, !dbg !7213
  %tobool16 = icmp ne i32 %21, 0, !dbg !7213
  br i1 %tobool16, label %if.then18, label %lor.lhs.false, !dbg !7215

lor.lhs.false:                                    ; preds = %if.end15
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7216
  %call17 = call zeroext i1 @mmc_host_done_complete(%struct.mmc_host* %22) #11, !dbg !7217
  br i1 %call17, label %if.then18, label %if.end19, !dbg !7218

if.then18:                                        ; preds = %lor.lhs.false, %if.end15
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7219
  call void @mmc_retune_release(%struct.mmc_host* %23) #11, !dbg !7220
  br label %if.end19, !dbg !7220

if.end19:                                         ; preds = %if.then18, %lor.lhs.false
  br label %out_post_req, !dbg !7221

out_post_req:                                     ; preds = %if.end19, %if.then
  call void @llvm.dbg.label(metadata !7222), !dbg !7223
  %24 = load i32, i32* %err, align 4, !dbg !7224
  %tobool20 = icmp ne i32 %24, 0, !dbg !7224
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !7226

if.then21:                                        ; preds = %out_post_req
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7227
  %26 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7228
  %brq22 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %26, i32 0, i32 0, !dbg !7229
  %mrq23 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq22, i32 0, i32 0, !dbg !7230
  %27 = load i32, i32* %err, align 4, !dbg !7231
  call void @mmc_post_req(%struct.mmc_host* %25, %struct.mmc_request* %mrq23, i32 %27) #11, !dbg !7232
  br label %if.end24, !dbg !7232

if.end24:                                         ; preds = %if.then21, %out_post_req
  %28 = load i32, i32* %err, align 4, !dbg !7233
  ret i32 %28, !dbg !7234
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_exit() #3 section ".exit.text" !dbg !7235 {
entry:
  call void @mmc_unregister_driver(%struct.mmc_driver* @mmc_driver) #11, !dbg !7236
  call void @unregister_blkdev(i32 179, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !7237
  %0 = load i32, i32* @mmc_rpmb_devt, align 4, !dbg !7238
  call void @unregister_chrdev_region(i32 %0, i32 256) #11, !dbg !7239
  call void @bus_unregister(%struct.bus_type* @mmc_rpmb_bus_type) #11, !dbg !7240
  ret void, !dbg !7241
}

; Function Attrs: noredzone
declare dso_local void @mmc_unregister_driver(%struct.mmc_driver*) #2

; Function Attrs: noredzone
declare dso_local void @unregister_blkdev(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @unregister_chrdev_region(i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @bus_unregister(%struct.bus_type*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_init() #3 section ".init.text" !dbg !7242 {
entry:
  %retval = alloca i32, align 4
  %res = alloca i32, align 4
  %__UNIQUE_ID___x321 = alloca i32, align 4
  %__UNIQUE_ID___y322 = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7245, metadata !DIExpression()), !dbg !7246
  %call = call i32 @bus_register(%struct.bus_type* @mmc_rpmb_bus_type) #11, !dbg !7247
  store i32 %call, i32* %res, align 4, !dbg !7248
  %0 = load i32, i32* %res, align 4, !dbg !7249
  %cmp = icmp slt i32 %0, 0, !dbg !7251
  br i1 %cmp, label %if.then, label %if.end, !dbg !7252

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !7253
  %1 = load i32, i32* %res, align 4, !dbg !7255
  store i32 %1, i32* %retval, align 4, !dbg !7256
  br label %return, !dbg !7256

if.end:                                           ; preds = %entry
  %call2 = call i32 @alloc_chrdev_region(i32* @mmc_rpmb_devt, i32 0, i32 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !7257
  store i32 %call2, i32* %res, align 4, !dbg !7258
  %2 = load i32, i32* %res, align 4, !dbg !7259
  %cmp3 = icmp slt i32 %2, 0, !dbg !7261
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7262

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.54, i64 0, i64 0)) #13, !dbg !7263
  br label %out_bus_unreg, !dbg !7265

if.end6:                                          ; preds = %if.end
  %3 = load i32, i32* @perdev_minors, align 4, !dbg !7266
  %cmp7 = icmp ne i32 %3, 8, !dbg !7268
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !7269

if.then8:                                         ; preds = %if.end6
  %4 = load i32, i32* @perdev_minors, align 4, !dbg !7270
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.55, i64 0, i64 0), i32 %4) #13, !dbg !7270
  br label %if.end10, !dbg !7270

if.end10:                                         ; preds = %if.then8, %if.end6
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x321, metadata !7271, metadata !DIExpression()), !dbg !7273
  store i32 256, i32* %__UNIQUE_ID___x321, align 4, !dbg !7273
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y322, metadata !7274, metadata !DIExpression()), !dbg !7273
  %5 = load i32, i32* @perdev_minors, align 4, !dbg !7273
  %div = sdiv i32 1048576, %5, !dbg !7273
  store i32 %div, i32* %__UNIQUE_ID___y322, align 4, !dbg !7273
  %6 = load i32, i32* %__UNIQUE_ID___x321, align 4, !dbg !7273
  %7 = load i32, i32* %__UNIQUE_ID___y322, align 4, !dbg !7273
  %cmp11 = icmp slt i32 %6, %7, !dbg !7273
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !7273

cond.true:                                        ; preds = %if.end10
  %8 = load i32, i32* %__UNIQUE_ID___x321, align 4, !dbg !7273
  br label %cond.end, !dbg !7273

cond.false:                                       ; preds = %if.end10
  %9 = load i32, i32* %__UNIQUE_ID___y322, align 4, !dbg !7273
  br label %cond.end, !dbg !7273

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %9, %cond.false ], !dbg !7273
  store i32 %cond, i32* %tmp, align 4, !dbg !7273
  %10 = load i32, i32* %tmp, align 4, !dbg !7273
  store i32 %10, i32* @max_devices, align 4, !dbg !7275
  %call12 = call i32 @register_blkdev(i32 179, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !7276
  store i32 %call12, i32* %res, align 4, !dbg !7277
  %11 = load i32, i32* %res, align 4, !dbg !7278
  %tobool = icmp ne i32 %11, 0, !dbg !7278
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !7280

if.then13:                                        ; preds = %cond.end
  br label %out_chrdev_unreg, !dbg !7281

if.end14:                                         ; preds = %cond.end
  %call15 = call i32 @mmc_register_driver(%struct.mmc_driver* @mmc_driver) #11, !dbg !7282
  store i32 %call15, i32* %res, align 4, !dbg !7283
  %12 = load i32, i32* %res, align 4, !dbg !7284
  %tobool16 = icmp ne i32 %12, 0, !dbg !7284
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !7286

if.then17:                                        ; preds = %if.end14
  br label %out_blkdev_unreg, !dbg !7287

if.end18:                                         ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !7288
  br label %return, !dbg !7288

out_blkdev_unreg:                                 ; preds = %if.then17
  call void @llvm.dbg.label(metadata !7289), !dbg !7290
  call void @unregister_blkdev(i32 179, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !7291
  br label %out_chrdev_unreg, !dbg !7291

out_chrdev_unreg:                                 ; preds = %out_blkdev_unreg, %if.then13
  call void @llvm.dbg.label(metadata !7292), !dbg !7293
  %13 = load i32, i32* @mmc_rpmb_devt, align 4, !dbg !7294
  call void @unregister_chrdev_region(i32 %13, i32 256) #11, !dbg !7295
  br label %out_bus_unreg, !dbg !7295

out_bus_unreg:                                    ; preds = %out_chrdev_unreg, %if.then4
  call void @llvm.dbg.label(metadata !7296), !dbg !7297
  call void @bus_unregister(%struct.bus_type* @mmc_rpmb_bus_type) #11, !dbg !7298
  %14 = load i32, i32* %res, align 4, !dbg !7299
  store i32 %14, i32* %retval, align 4, !dbg !7300
  br label %return, !dbg !7300

return:                                           ; preds = %out_bus_unreg, %if.end18, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7301
  ret i32 %15, !dbg !7301
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_hw_reset(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !7302 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7305, metadata !DIExpression()), !dbg !7306
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7307
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !7308
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7308
  ret i8* %1, !dbg !7309
}

; Function Attrs: noredzone
declare dso_local void @mmc_cqe_post_req(%struct.mmc_host*, %struct.mmc_request*) #2

; Function Attrs: noredzone
declare dso_local void @blk_mq_requeue_request(%struct.request*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @blk_mq_end_request(%struct.request*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @blk_update_request(%struct.request*, i8 zeroext, i32) #2

; Function Attrs: noredzone
declare dso_local void @__blk_mq_end_request(%struct.request*, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7310 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7314, metadata !DIExpression()), !dbg !7315
  %call = call i64 @arch_local_save_flags() #11, !dbg !7316
  store i64 %call, i64* %f, align 8, !dbg !7317
  call void @arch_local_irq_disable() #11, !dbg !7318
  %0 = load i64, i64* %f, align 8, !dbg !7319
  ret i64 %0, !dbg !7320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_tot_in_flight(%struct.mmc_queue* %mq) #0 !dbg !7321 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !7324, metadata !DIExpression()), !dbg !7325
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7326
  %in_flight = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 6, !dbg !7327
  %arrayidx = getelementptr [3 x i32], [3 x i32]* %in_flight, i64 0, i64 0, !dbg !7326
  %1 = load i32, i32* %arrayidx, align 8, !dbg !7326
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7328
  %in_flight1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 6, !dbg !7329
  %arrayidx2 = getelementptr [3 x i32], [3 x i32]* %in_flight1, i64 0, i64 1, !dbg !7328
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !7328
  %add = add i32 %1, %3, !dbg !7330
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7331
  %in_flight3 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %4, i32 0, i32 6, !dbg !7332
  %arrayidx4 = getelementptr [3 x i32], [3 x i32]* %in_flight3, i64 0, i64 2, !dbg !7331
  %5 = load i32, i32* %arrayidx4, align 8, !dbg !7331
  %add5 = add i32 %add, %5, !dbg !7333
  ret i32 %add5, !dbg !7334
}

; Function Attrs: noredzone
declare dso_local void @mmc_cqe_check_busy(%struct.mmc_queue*) #2

; Function Attrs: noredzone
declare dso_local void @blk_mq_run_hw_queues(%struct.request_queue*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @mmc_put_card(%struct.mmc_card*, %struct.mmc_ctx*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7335 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7336, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7339, metadata !DIExpression()), !dbg !7338
  %0 = load i64, i64* %__edi, align 8, !dbg !7338
  store i64 %0, i64* %__edi, align 8, !dbg !7338
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7340, metadata !DIExpression()), !dbg !7338
  %1 = load i64, i64* %__esi, align 8, !dbg !7338
  store i64 %1, i64* %__esi, align 8, !dbg !7338
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7341, metadata !DIExpression()), !dbg !7338
  %2 = load i64, i64* %__edx, align 8, !dbg !7338
  store i64 %2, i64* %__edx, align 8, !dbg !7338
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7342, metadata !DIExpression()), !dbg !7338
  %3 = load i64, i64* %__ecx, align 8, !dbg !7338
  store i64 %3, i64* %__ecx, align 8, !dbg !7338
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7343, metadata !DIExpression()), !dbg !7338
  %4 = load i64, i64* %__eax, align 8, !dbg !7338
  store i64 %4, i64* %__eax, align 8, !dbg !7338
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7338
  %6 = call i64 @llvm.read_register.i64(metadata !5671), !dbg !7344
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #5, !dbg !7344, !srcloc !7347
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7344
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7344
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7344
  call void @llvm.write_register.i64(metadata !5671, i64 %asmresult1), !dbg !7344
  %8 = load i64, i64* %__eax, align 8, !dbg !7344
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7348, metadata !DIExpression()), !dbg !7350
  store i64 -1, i64* %__mask, align 8, !dbg !7350
  %9 = load i64, i64* %__mask, align 8, !dbg !7350
  store i64 %9, i64* %tmp, align 8, !dbg !7350
  %10 = load i64, i64* %tmp, align 8, !dbg !7350
  %and = and i64 %8, %10, !dbg !7344
  store i64 %and, i64* %__ret, align 8, !dbg !7344
  %11 = load i64, i64* %__ret, align 8, !dbg !7338
  store i64 %11, i64* %tmp2, align 8, !dbg !7351
  %12 = load i64, i64* %tmp2, align 8, !dbg !7338
  ret i64 %12, !dbg !7352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7353 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7354, metadata !DIExpression()), !dbg !7356
  %0 = load i64, i64* %__edi, align 8, !dbg !7356
  store i64 %0, i64* %__edi, align 8, !dbg !7356
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7357, metadata !DIExpression()), !dbg !7356
  %1 = load i64, i64* %__esi, align 8, !dbg !7356
  store i64 %1, i64* %__esi, align 8, !dbg !7356
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7358, metadata !DIExpression()), !dbg !7356
  %2 = load i64, i64* %__edx, align 8, !dbg !7356
  store i64 %2, i64* %__edx, align 8, !dbg !7356
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7359, metadata !DIExpression()), !dbg !7356
  %3 = load i64, i64* %__ecx, align 8, !dbg !7356
  store i64 %3, i64* %__ecx, align 8, !dbg !7356
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7360, metadata !DIExpression()), !dbg !7356
  %4 = load i64, i64* %__eax, align 8, !dbg !7356
  store i64 %4, i64* %__eax, align 8, !dbg !7356
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7356
  %6 = call i64 @llvm.read_register.i64(metadata !5671), !dbg !7356
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #5, !dbg !7356, !srcloc !7361
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7356
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7356
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7356
  call void @llvm.write_register.i64(metadata !5671, i64 %asmresult1), !dbg !7356
  ret void, !dbg !7362
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #4

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7363 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7368, metadata !DIExpression()), !dbg !7370
  %0 = load i64, i64* %__edi, align 8, !dbg !7370
  store i64 %0, i64* %__edi, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7371, metadata !DIExpression()), !dbg !7370
  %1 = load i64, i64* %__esi, align 8, !dbg !7370
  store i64 %1, i64* %__esi, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7372, metadata !DIExpression()), !dbg !7370
  %2 = load i64, i64* %__edx, align 8, !dbg !7370
  store i64 %2, i64* %__edx, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7373, metadata !DIExpression()), !dbg !7370
  %3 = load i64, i64* %__ecx, align 8, !dbg !7370
  store i64 %3, i64* %__ecx, align 8, !dbg !7370
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7374, metadata !DIExpression()), !dbg !7370
  %4 = load i64, i64* %__eax, align 8, !dbg !7370
  store i64 %4, i64* %__eax, align 8, !dbg !7370
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7370
  %6 = call i64 @llvm.read_register.i64(metadata !5671), !dbg !7370
  %7 = load i64, i64* %f.addr, align 8, !dbg !7370
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #5, !dbg !7370, !srcloc !7375
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7370
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7370
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7370
  call void @llvm.write_register.i64(metadata !5671, i64 %asmresult1), !dbg !7370
  ret void, !dbg !7376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_bytes(%struct.request* %rq) #0 !dbg !7377 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !7384
  %__data_len = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 7, !dbg !7385
  %1 = load i32, i32* %__data_len, align 8, !dbg !7385
  ret i32 %1, !dbg !7386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @blk_mq_rq_to_pdu(%struct.request* %rq) #0 !dbg !7387 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !7392
  %add.ptr = getelementptr %struct.request, %struct.request* %0, i64 1, !dbg !7393
  %1 = bitcast %struct.request* %add.ptr to i8*, !dbg !7392
  ret i8* %1, !dbg !7394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_eval_resp_error(%struct.mmc_blk_request* %brq) #0 !dbg !7395 {
entry:
  %brq.addr = alloca %struct.mmc_blk_request*, align 8
  %val = alloca i32, align 4
  %oor_with_open_end = alloca i8, align 1
  store %struct.mmc_blk_request* %brq, %struct.mmc_blk_request** %brq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7400, metadata !DIExpression()), !dbg !7401
  %0 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7402
  %stop = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %0, i32 0, i32 3, !dbg !7404
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop, i32 0, i32 5, !dbg !7405
  %1 = load i32, i32* %error, align 8, !dbg !7405
  %tobool = icmp ne i32 %1, 0, !dbg !7402
  br i1 %tobool, label %if.end10, label %if.then, !dbg !7406

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oor_with_open_end, metadata !7407, metadata !DIExpression()), !dbg !7409
  %2 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7410
  %stop1 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %2, i32 0, i32 3, !dbg !7411
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop1, i32 0, i32 2, !dbg !7412
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !7410
  %3 = load i32, i32* %arrayidx, align 8, !dbg !7410
  %and = and i32 %3, -466092032, !dbg !7413
  store i32 %and, i32* %val, align 4, !dbg !7414
  %4 = load i32, i32* %val, align 4, !dbg !7415
  %and2 = and i32 %4, -2147483648, !dbg !7416
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7416
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !7417

land.rhs:                                         ; preds = %if.then
  %5 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7418
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %5, i32 0, i32 0, !dbg !7419
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 0, !dbg !7420
  %6 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !7420
  %tobool4 = icmp ne %struct.mmc_command* %6, null, !dbg !7421
  %lnot = xor i1 %tobool4, true, !dbg !7421
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %lnot, %land.rhs ], !dbg !7422
  %frombool = zext i1 %7 to i8, !dbg !7423
  store i8 %frombool, i8* %oor_with_open_end, align 1, !dbg !7423
  %8 = load i32, i32* %val, align 4, !dbg !7424
  %tobool5 = icmp ne i32 %8, 0, !dbg !7424
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !7426

land.lhs.true:                                    ; preds = %land.end
  %9 = load i8, i8* %oor_with_open_end, align 1, !dbg !7427
  %tobool6 = trunc i8 %9 to i1, !dbg !7427
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !7428

if.then7:                                         ; preds = %land.lhs.true
  %10 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7429
  %stop8 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %10, i32 0, i32 3, !dbg !7430
  %error9 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop8, i32 0, i32 5, !dbg !7431
  store i32 -5, i32* %error9, align 8, !dbg !7432
  br label %if.end, !dbg !7429

if.end:                                           ; preds = %if.then7, %land.lhs.true, %land.end
  br label %if.end10, !dbg !7433

if.end10:                                         ; preds = %if.end, %entry
  ret void, !dbg !7434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @op_is_write(i32 %op) #0 !dbg !7435 {
entry:
  %op.addr = alloca i32, align 4
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  %0 = load i32, i32* %op.addr, align 4, !dbg !7440
  %and = and i32 %0, 1, !dbg !7441
  %tobool = icmp ne i32 %and, 0, !dbg !7442
  ret i1 %tobool, !dbg !7443
}

; Function Attrs: noredzone
declare dso_local i32 @__mmc_send_status(%struct.mmc_card*, i32*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_blk_status_error(%struct.request* %req, i32 %status) #0 !dbg !7444 {
entry:
  %retval = alloca i1, align 1
  %req.addr = alloca %struct.request*, align 8
  %status.addr = alloca i32, align 4
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %brq = alloca %struct.mmc_blk_request*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %stop_err_bits = alloca i32, align 4
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !7449, metadata !DIExpression()), !dbg !7450
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !7451, metadata !DIExpression()), !dbg !7452
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7453
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !7454
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7452
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq, metadata !7455, metadata !DIExpression()), !dbg !7456
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7457
  %brq1 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %1, i32 0, i32 0, !dbg !7458
  store %struct.mmc_blk_request* %brq1, %struct.mmc_blk_request** %brq, align 8, !dbg !7456
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !7459, metadata !DIExpression()), !dbg !7460
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7461
  %q = getelementptr inbounds %struct.request, %struct.request* %2, i32 0, i32 0, !dbg !7462
  %3 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !7462
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %3, i32 0, i32 11, !dbg !7463
  %4 = load i8*, i8** %queuedata, align 8, !dbg !7463
  %5 = bitcast i8* %4 to %struct.mmc_queue*, !dbg !7461
  store %struct.mmc_queue* %5, %struct.mmc_queue** %mq, align 8, !dbg !7460
  call void @llvm.dbg.declare(metadata i32* %stop_err_bits, metadata !7464, metadata !DIExpression()), !dbg !7465
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !7466
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %6, i32 0, i32 0, !dbg !7466
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7466
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 0, !dbg !7466
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7466
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 17, !dbg !7466
  %9 = load i32, i32* %caps, align 4, !dbg !7466
  %and = and i32 %9, 16, !dbg !7466
  %tobool = icmp ne i32 %and, 0, !dbg !7466
  br i1 %tobool, label %if.then, label %if.end, !dbg !7468

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7469
  br label %return, !dbg !7469

if.end:                                           ; preds = %entry
  %10 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !7470
  %call2 = call i32 @mmc_blk_stop_err_bits(%struct.mmc_blk_request* %10) #11, !dbg !7471
  store i32 %call2, i32* %stop_err_bits, align 4, !dbg !7472
  %11 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !7473
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %11, i32 0, i32 2, !dbg !7474
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !7475
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !7473
  %12 = load i32, i32* %arrayidx, align 8, !dbg !7473
  %and3 = and i32 %12, -466092032, !dbg !7476
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7476
  br i1 %tobool4, label %lor.end, label %lor.lhs.false, !dbg !7477

lor.lhs.false:                                    ; preds = %if.end
  %13 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !7478
  %stop = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %13, i32 0, i32 3, !dbg !7479
  %resp5 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop, i32 0, i32 2, !dbg !7480
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %resp5, i64 0, i64 0, !dbg !7478
  %14 = load i32, i32* %arrayidx6, align 8, !dbg !7478
  %15 = load i32, i32* %stop_err_bits, align 4, !dbg !7481
  %and7 = and i32 %14, %15, !dbg !7482
  %tobool8 = icmp ne i32 %and7, 0, !dbg !7482
  br i1 %tobool8, label %lor.end, label %lor.lhs.false9, !dbg !7483

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %16 = load i32, i32* %status.addr, align 4, !dbg !7484
  %17 = load i32, i32* %stop_err_bits, align 4, !dbg !7485
  %and10 = and i32 %16, %17, !dbg !7486
  %tobool11 = icmp ne i32 %and10, 0, !dbg !7486
  br i1 %tobool11, label %lor.end, label %lor.rhs, !dbg !7487

lor.rhs:                                          ; preds = %lor.lhs.false9
  %18 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7488
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %18, i32 0, i32 3, !dbg !7488
  %19 = load i32, i32* %cmd_flags, align 8, !dbg !7488
  %and12 = and i32 %19, 255, !dbg !7488
  %call13 = call zeroext i1 @op_is_write(i32 %and12) #11, !dbg !7488
  %20 = zext i1 %call13 to i64, !dbg !7488
  %cond = select i1 %call13, i32 1, i32 0, !dbg !7488
  %cmp = icmp eq i32 %cond, 1, !dbg !7489
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7490

land.rhs:                                         ; preds = %lor.rhs
  %21 = load i32, i32* %status.addr, align 4, !dbg !7491
  %call14 = call zeroext i1 @mmc_ready_for_data(i32 %21) #11, !dbg !7492
  %lnot = xor i1 %call14, true, !dbg !7493
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %22 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ], !dbg !7494
  br label %lor.end, !dbg !7487

lor.end:                                          ; preds = %land.end, %lor.lhs.false9, %lor.lhs.false, %if.end
  %23 = phi i1 [ true, %lor.lhs.false9 ], [ true, %lor.lhs.false ], [ true, %if.end ], [ %22, %land.end ]
  store i1 %23, i1* %retval, align 1, !dbg !7495
  br label %return, !dbg !7495

return:                                           ; preds = %lor.end, %if.then
  %24 = load i1, i1* %retval, align 1, !dbg !7496
  ret i1 %24, !dbg !7496
}

; Function Attrs: noredzone
declare dso_local void @mmc_retune_release(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_detect_card_removed(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_ready_for_data(i32 %status) #0 !dbg !7497 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  %0 = load i32, i32* %status.addr, align 4, !dbg !7503
  %and = and i32 %0, 256, !dbg !7504
  %tobool = icmp ne i32 %and, 0, !dbg !7504
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7505

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !7506
  %and1 = and i32 %1, 7680, !dbg !7506
  %shr = lshr i32 %and1, 9, !dbg !7506
  %cmp = icmp eq i32 %shr, 4, !dbg !7507
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7508
  ret i1 %2, !dbg !7509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_fix_state(%struct.mmc_card* %card, %struct.request* %req) #0 !dbg !7510 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %brq = alloca %struct.mmc_blk_request*, align 8
  %timeout = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7513, metadata !DIExpression()), !dbg !7514
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !7517, metadata !DIExpression()), !dbg !7518
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7519
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !7520
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7518
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq, metadata !7521, metadata !DIExpression()), !dbg !7522
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7523
  %brq1 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %1, i32 0, i32 0, !dbg !7524
  store %struct.mmc_blk_request* %brq1, %struct.mmc_blk_request** %brq, align 8, !dbg !7522
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !7525, metadata !DIExpression()), !dbg !7526
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7527
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !7528
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7528
  %4 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !7529
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %4, i32 0, i32 4, !dbg !7530
  %call2 = call i32 @mmc_blk_data_timeout_ms(%struct.mmc_host* %3, %struct.mmc_data* %data) #11, !dbg !7531
  store i32 %call2, i32* %timeout, align 4, !dbg !7526
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7532, metadata !DIExpression()), !dbg !7533
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7534
  %host3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 0, !dbg !7535
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host3, align 8, !dbg !7535
  call void @mmc_retune_hold_now(%struct.mmc_host* %6) #11, !dbg !7536
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7537
  %8 = load i32, i32* %timeout, align 4, !dbg !7538
  %call4 = call i32 @mmc_blk_send_stop(%struct.mmc_card* %7, i32 %8) #11, !dbg !7539
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7540
  %10 = load i32, i32* %timeout, align 4, !dbg !7541
  %call5 = call i32 @card_busy_detect(%struct.mmc_card* %9, i32 %10, i32* null) #11, !dbg !7542
  store i32 %call5, i32* %err, align 4, !dbg !7543
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7544
  %host6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 0, !dbg !7545
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host6, align 8, !dbg !7545
  call void @mmc_retune_release(%struct.mmc_host* %12) #11, !dbg !7546
  %13 = load i32, i32* %err, align 4, !dbg !7547
  ret i32 %13, !dbg !7548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_blk_cmd_started(%struct.mmc_blk_request* %brq) #0 !dbg !7549 {
entry:
  %brq.addr = alloca %struct.mmc_blk_request*, align 8
  store %struct.mmc_blk_request* %brq, %struct.mmc_blk_request** %brq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  %0 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7552
  %sbc = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %0, i32 0, i32 1, !dbg !7553
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 5, !dbg !7554
  %1 = load i32, i32* %error, align 8, !dbg !7554
  %tobool = icmp ne i32 %1, 0, !dbg !7552
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !7555

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7556
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %2, i32 0, i32 2, !dbg !7557
  %error1 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !7558
  %3 = load i32, i32* %error1, align 8, !dbg !7558
  %tobool2 = icmp ne i32 %3, 0, !dbg !7556
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7559

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !7560
  %cmd3 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %4, i32 0, i32 2, !dbg !7561
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd3, i32 0, i32 2, !dbg !7562
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !7560
  %5 = load i32, i32* %arrayidx, align 8, !dbg !7560
  %and = and i32 %5, -466092032, !dbg !7563
  %tobool4 = icmp ne i32 %and, 0, !dbg !7564
  %lnot = xor i1 %tobool4, true, !dbg !7564
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !7565
  ret i1 %6, !dbg !7566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_num_wr_blocks(%struct.mmc_card* %card, i32* %written_blocks) #0 !dbg !7567 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7570, metadata !DIExpression()), !dbg !7574
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7582, metadata !DIExpression()), !dbg !7583
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7584, metadata !DIExpression()), !dbg !7585
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7586, metadata !DIExpression()), !dbg !7587
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7588, metadata !DIExpression()), !dbg !7592
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7594, metadata !DIExpression()), !dbg !7598
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7600, metadata !DIExpression()), !dbg !7604
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7609, metadata !DIExpression()), !dbg !7610
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7611, metadata !DIExpression()), !dbg !7612
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7613, metadata !DIExpression()), !dbg !7614
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7615, metadata !DIExpression()), !dbg !7616
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7617, metadata !DIExpression()), !dbg !7618
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7619, metadata !DIExpression()), !dbg !7620
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7621, metadata !DIExpression()), !dbg !7622
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7623, metadata !DIExpression()), !dbg !7624
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %written_blocks.addr = alloca i32*, align 8
  %err = alloca i32, align 4
  %result = alloca i32, align 4
  %blocks = alloca i32*, align 8
  %mrq = alloca %struct.mmc_request, align 8
  %cmd = alloca %struct.mmc_command, align 8
  %data = alloca %struct.mmc_data, align 8
  %sg = alloca %struct.scatterlist, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  store i32* %written_blocks, i32** %written_blocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %written_blocks.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7629, metadata !DIExpression()), !dbg !7630
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7631, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.declare(metadata i32** %blocks, metadata !7633, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata %struct.mmc_request* %mrq, metadata !7636, metadata !DIExpression()), !dbg !7637
  %0 = bitcast %struct.mmc_request* %mrq to i8*, !dbg !7637
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 112, i1 false), !dbg !7637
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !7638, metadata !DIExpression()), !dbg !7639
  %1 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !7639
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false), !dbg !7639
  call void @llvm.dbg.declare(metadata %struct.mmc_data* %data, metadata !7640, metadata !DIExpression()), !dbg !7641
  %2 = bitcast %struct.mmc_data* %data to i8*, !dbg !7641
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false), !dbg !7641
  call void @llvm.dbg.declare(metadata %struct.scatterlist* %sg, metadata !7642, metadata !DIExpression()), !dbg !7643
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !7644
  store i32 55, i32* %opcode, align 8, !dbg !7645
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7646
  %rca = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 3, !dbg !7647
  %4 = load i32, i32* %rca, align 4, !dbg !7647
  %shl = shl i32 %4, 16, !dbg !7648
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !7649
  store i32 %shl, i32* %arg, align 4, !dbg !7650
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !7651
  store i32 149, i32* %flags, align 8, !dbg !7652
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7653
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 0, !dbg !7654
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7654
  %call = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %6, %struct.mmc_command* %cmd, i32 0) #11, !dbg !7655
  store i32 %call, i32* %err, align 4, !dbg !7656
  %7 = load i32, i32* %err, align 4, !dbg !7657
  %tobool = icmp ne i32 %7, 0, !dbg !7657
  br i1 %tobool, label %if.then, label %if.end, !dbg !7659

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %err, align 4, !dbg !7660
  store i32 %8, i32* %retval, align 4, !dbg !7661
  br label %return, !dbg !7661

if.end:                                           ; preds = %entry
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7662
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 0, !dbg !7662
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7662
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 17, !dbg !7662
  %11 = load i32, i32* %caps, align 4, !dbg !7662
  %and = and i32 %11, 16, !dbg !7662
  %tobool2 = icmp ne i32 %and, 0, !dbg !7662
  br i1 %tobool2, label %if.end6, label %land.lhs.true, !dbg !7664

land.lhs.true:                                    ; preds = %if.end
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !7665
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !7666
  %12 = load i32, i32* %arrayidx, align 8, !dbg !7666
  %and3 = and i32 %12, 32, !dbg !7667
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7667
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !7668

if.then5:                                         ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !7669
  br label %return, !dbg !7669

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %13 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !7670
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 56, i1 false), !dbg !7670
  %opcode7 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !7671
  store i32 22, i32* %opcode7, align 8, !dbg !7672
  %arg8 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !7673
  store i32 0, i32* %arg8, align 4, !dbg !7674
  %flags9 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !7675
  store i32 181, i32* %flags9, align 8, !dbg !7676
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 2, !dbg !7677
  store i32 4, i32* %blksz, align 8, !dbg !7678
  %blocks10 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 3, !dbg !7679
  store i32 1, i32* %blocks10, align 4, !dbg !7680
  %flags11 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 6, !dbg !7681
  store i32 512, i32* %flags11, align 8, !dbg !7682
  %sg12 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 12, !dbg !7683
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg12, align 8, !dbg !7684
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 10, !dbg !7685
  store i32 1, i32* %sg_len, align 8, !dbg !7686
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7687
  call void @mmc_set_data_timeout(%struct.mmc_data* %data, %struct.mmc_card* %14) #11, !dbg !7688
  %cmd13 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 1, !dbg !7689
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd13, align 8, !dbg !7690
  %data14 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 2, !dbg !7691
  store %struct.mmc_data* %data, %struct.mmc_data** %data14, align 8, !dbg !7692
  store i64 4, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !7693
  %16 = call i1 @llvm.is.constant.i64(i64 %15) #5, !dbg !7694
  br i1 %16, label %if.then.i, label %if.end9.i, !dbg !7695

if.then.i:                                        ; preds = %if.end6
  %17 = load i64, i64* %size.addr.i, align 8, !dbg !7696
  %cmp.i = icmp ugt i64 %17, 8192, !dbg !7697
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7698

if.then1.i:                                       ; preds = %if.then.i
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !7699
  %19 = load i32, i32* %flags.addr.i, align 4, !dbg !7700
  store i64 %18, i64* %size.addr.i.i, align 8
  store i32 %19, i32* %flags.addr.i.i, align 4
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !7701
  %call.i.i = call i32 @get_order(i64 %20) #14, !dbg !7702
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7618
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7703
  %22 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7704
  %23 = load i32, i32* %order.i.i, align 4, !dbg !7705
  store i64 %21, i64* %size.addr.i.i.i, align 8
  store i32 %22, i32* %flags.addr.i.i.i, align 4
  store i32 %23, i32* %order.addr.i.i.i, align 4
  %24 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7706
  %25 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7707
  %26 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7708
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %24, i32 %25, i32 %26) #12, !dbg !7709
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7709
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7709
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7709
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !7709
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7710
  br label %kmalloc.exit, !dbg !7710

if.end.i:                                         ; preds = %if.then.i
  %27 = load i64, i64* %size.addr.i, align 8, !dbg !7711
  store i64 %27, i64* %size.addr.i11.i, align 8
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7712
  %tobool.i.i = icmp ne i64 %28, 0, !dbg !7712
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7714

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7715
  br label %kmalloc_index.exit.i, !dbg !7715

if.end.i.i:                                       ; preds = %if.end.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7716
  %cmp.i.i = icmp ule i64 %29, 8, !dbg !7718
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7719

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7720
  br label %kmalloc_index.exit.i, !dbg !7720

if.end2.i.i:                                      ; preds = %if.end.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7721
  %cmp3.i.i = icmp ugt i64 %30, 64, !dbg !7723
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7724

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7725
  %cmp4.i.i = icmp ule i64 %31, 96, !dbg !7726
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7727

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7728
  br label %kmalloc_index.exit.i, !dbg !7728

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7729
  %cmp7.i.i = icmp ugt i64 %32, 128, !dbg !7731
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7732

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7733
  %cmp9.i.i = icmp ule i64 %33, 192, !dbg !7734
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7735

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7736
  br label %kmalloc_index.exit.i, !dbg !7736

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7737
  %cmp12.i.i = icmp ule i64 %34, 8, !dbg !7739
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7740

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7741
  br label %kmalloc_index.exit.i, !dbg !7741

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7742
  %cmp15.i.i = icmp ule i64 %35, 16, !dbg !7744
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7745

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7746
  br label %kmalloc_index.exit.i, !dbg !7746

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7747
  %cmp18.i.i = icmp ule i64 %36, 32, !dbg !7749
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7750

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7751
  br label %kmalloc_index.exit.i, !dbg !7751

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7752
  %cmp21.i.i = icmp ule i64 %37, 64, !dbg !7754
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7755

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7756
  br label %kmalloc_index.exit.i, !dbg !7756

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7757
  %cmp24.i.i = icmp ule i64 %38, 128, !dbg !7759
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7760

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7761
  br label %kmalloc_index.exit.i, !dbg !7761

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7762
  %cmp27.i.i = icmp ule i64 %39, 256, !dbg !7764
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7765

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7766
  br label %kmalloc_index.exit.i, !dbg !7766

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7767
  %cmp30.i.i = icmp ule i64 %40, 512, !dbg !7769
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7770

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7771
  br label %kmalloc_index.exit.i, !dbg !7771

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7772
  %cmp33.i.i = icmp ule i64 %41, 1024, !dbg !7774
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7775

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7776
  br label %kmalloc_index.exit.i, !dbg !7776

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7777
  %cmp36.i.i = icmp ule i64 %42, 2048, !dbg !7779
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7780

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7781
  br label %kmalloc_index.exit.i, !dbg !7781

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7782
  %cmp39.i.i = icmp ule i64 %43, 4096, !dbg !7784
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7785

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7786
  br label %kmalloc_index.exit.i, !dbg !7786

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7787
  %cmp42.i.i = icmp ule i64 %44, 8192, !dbg !7789
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7790

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7791
  br label %kmalloc_index.exit.i, !dbg !7791

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7792
  %cmp45.i.i = icmp ule i64 %45, 16384, !dbg !7794
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7795

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7796
  br label %kmalloc_index.exit.i, !dbg !7796

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7797
  %cmp48.i.i = icmp ule i64 %46, 32768, !dbg !7799
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7800

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7801
  br label %kmalloc_index.exit.i, !dbg !7801

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7802
  %cmp51.i.i = icmp ule i64 %47, 65536, !dbg !7804
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7805

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7806
  br label %kmalloc_index.exit.i, !dbg !7806

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7807
  %cmp54.i.i = icmp ule i64 %48, 131072, !dbg !7809
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7810

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7811
  br label %kmalloc_index.exit.i, !dbg !7811

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7812
  %cmp57.i.i = icmp ule i64 %49, 262144, !dbg !7814
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7815

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7816
  br label %kmalloc_index.exit.i, !dbg !7816

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7817
  %cmp60.i.i = icmp ule i64 %50, 524288, !dbg !7819
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7820

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7821
  br label %kmalloc_index.exit.i, !dbg !7821

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7822
  %cmp63.i.i = icmp ule i64 %51, 1048576, !dbg !7824
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7825

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7826
  br label %kmalloc_index.exit.i, !dbg !7826

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7827
  %cmp66.i.i = icmp ule i64 %52, 2097152, !dbg !7829
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7830

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7831
  br label %kmalloc_index.exit.i, !dbg !7831

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7832
  %cmp69.i.i = icmp ule i64 %53, 4194304, !dbg !7834
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7835

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7836
  br label %kmalloc_index.exit.i, !dbg !7836

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7837
  %cmp72.i.i = icmp ule i64 %54, 8388608, !dbg !7839
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7840

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7841
  br label %kmalloc_index.exit.i, !dbg !7841

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7842
  %cmp75.i.i = icmp ule i64 %55, 16777216, !dbg !7844
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7845

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7846
  br label %kmalloc_index.exit.i, !dbg !7846

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7847
  %cmp78.i.i = icmp ule i64 %56, 33554432, !dbg !7849
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7850

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7851
  br label %kmalloc_index.exit.i, !dbg !7851

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7852
  %cmp81.i.i = icmp ule i64 %57, 67108864, !dbg !7854
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7855

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7856
  br label %kmalloc_index.exit.i, !dbg !7856

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !7857, !srcloc !7860
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #5, !dbg !7861, !srcloc !7864
  unreachable, !dbg !7865

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %58 = load i32, i32* %retval.i.i, align 4, !dbg !7866
  store i32 %58, i32* %index.i, align 4, !dbg !7867
  %59 = load i32, i32* %index.i, align 4, !dbg !7868
  %tobool.i = icmp ne i32 %59, 0, !dbg !7868
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7870

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7871
  br label %kmalloc.exit, !dbg !7871

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %60 = load i32, i32* %flags.addr.i, align 4, !dbg !7872
  store i32 %60, i32* %flags.addr.i13.i, align 4
  %61 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7873
  %and.i.i = and i32 %61, 17, !dbg !7873
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7873
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7873
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7873
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7873
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7875

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7876
  br label %kmalloc_type.exit.i, !dbg !7876

if.end.i16.i:                                     ; preds = %if.end4.i
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7877
  %and2.i.i = and i32 %62, 1, !dbg !7878
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7877
  %63 = zext i1 %tobool3.i.i to i64, !dbg !7877
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7877
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7879
  br label %kmalloc_type.exit.i, !dbg !7879

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %64 = load i32, i32* %retval.i12.i, align 4, !dbg !7880
  %idxprom.i = zext i32 %64 to i64, !dbg !7881
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7881
  %65 = load i32, i32* %index.i, align 4, !dbg !7882
  %idxprom6.i = zext i32 %65 to i64, !dbg !7881
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7881
  %66 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7881
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !7883
  %68 = load i64, i64* %size.addr.i, align 8, !dbg !7884
  store %struct.kmem_cache* %66, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %67, i32* %flags.addr.i17.i, align 4
  store i64 %68, i64* %size.addr.i18.i, align 8
  %69 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7885
  %70 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7886
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %69, i32 %70) #12, !dbg !7887
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7887
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7887
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7887
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !7887
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7587
  %71 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7888
  %72 = load i8*, i8** %ret.i.i, align 8, !dbg !7889
  %73 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7890
  %74 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7891
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %71, i8* %72, i64 %73, i32 %74) #12, !dbg !7892
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7893
  %75 = load i8*, i8** %ret.i.i, align 8, !dbg !7894
  store i8* %75, i8** %retval.i, align 8, !dbg !7895
  br label %kmalloc.exit, !dbg !7895

if.end9.i:                                        ; preds = %if.end6
  %76 = load i64, i64* %size.addr.i, align 8, !dbg !7896
  %77 = load i32, i32* %flags.addr.i, align 4, !dbg !7897
  %call10.i = call noalias i8* @__kmalloc(i64 %76, i32 %77) #12, !dbg !7898
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7898
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7898
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7898
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !7898
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7899
  br label %kmalloc.exit, !dbg !7899

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %78 = load i8*, i8** %retval.i, align 8, !dbg !7900
  %79 = bitcast i8* %78 to i32*, !dbg !7901
  store i32* %79, i32** %blocks, align 8, !dbg !7902
  %80 = load i32*, i32** %blocks, align 8, !dbg !7903
  %tobool16 = icmp ne i32* %80, null, !dbg !7903
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !7905

if.then17:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !7906
  br label %return, !dbg !7906

if.end18:                                         ; preds = %kmalloc.exit
  %81 = load i32*, i32** %blocks, align 8, !dbg !7907
  %82 = bitcast i32* %81 to i8*, !dbg !7907
  call void @sg_init_one(%struct.scatterlist* %sg, i8* %82, i32 4) #11, !dbg !7908
  %83 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7909
  %host19 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %83, i32 0, i32 0, !dbg !7910
  %84 = load %struct.mmc_host*, %struct.mmc_host** %host19, align 8, !dbg !7910
  call void @mmc_wait_for_req(%struct.mmc_host* %84, %struct.mmc_request* %mrq) #11, !dbg !7911
  %85 = load i32*, i32** %blocks, align 8, !dbg !7912
  %86 = load i32, i32* %85, align 4, !dbg !7912
  %87 = call i1 @llvm.is.constant.i32(i32 %86), !dbg !7912
  br i1 %87, label %cond.true, label %cond.false, !dbg !7912

cond.true:                                        ; preds = %if.end18
  %88 = load i32*, i32** %blocks, align 8, !dbg !7912
  %89 = load i32, i32* %88, align 4, !dbg !7912
  %and20 = and i32 %89, 255, !dbg !7912
  %shl21 = shl i32 %and20, 24, !dbg !7912
  %90 = load i32*, i32** %blocks, align 8, !dbg !7912
  %91 = load i32, i32* %90, align 4, !dbg !7912
  %and22 = and i32 %91, 65280, !dbg !7912
  %shl23 = shl i32 %and22, 8, !dbg !7912
  %or = or i32 %shl21, %shl23, !dbg !7912
  %92 = load i32*, i32** %blocks, align 8, !dbg !7912
  %93 = load i32, i32* %92, align 4, !dbg !7912
  %and24 = and i32 %93, 16711680, !dbg !7912
  %shr = lshr i32 %and24, 8, !dbg !7912
  %or25 = or i32 %or, %shr, !dbg !7912
  %94 = load i32*, i32** %blocks, align 8, !dbg !7912
  %95 = load i32, i32* %94, align 4, !dbg !7912
  %and26 = and i32 %95, -16777216, !dbg !7912
  %shr27 = lshr i32 %and26, 24, !dbg !7912
  %or28 = or i32 %or25, %shr27, !dbg !7912
  br label %cond.end, !dbg !7912

cond.false:                                       ; preds = %if.end18
  %96 = load i32*, i32** %blocks, align 8, !dbg !7912
  %97 = load i32, i32* %96, align 4, !dbg !7912
  %call29 = call i32 @__fswab32(i32 %97) #14, !dbg !7912
  br label %cond.end, !dbg !7912

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call29, %cond.false ], !dbg !7912
  store i32 %cond, i32* %result, align 4, !dbg !7913
  %98 = load i32*, i32** %blocks, align 8, !dbg !7914
  %99 = bitcast i32* %98 to i8*, !dbg !7914
  call void @kfree(i8* %99) #11, !dbg !7915
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !7916
  %100 = load i32, i32* %error, align 8, !dbg !7916
  %tobool30 = icmp ne i32 %100, 0, !dbg !7918
  br i1 %tobool30, label %if.then33, label %lor.lhs.false, !dbg !7919

lor.lhs.false:                                    ; preds = %cond.end
  %error31 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 5, !dbg !7920
  %101 = load i32, i32* %error31, align 4, !dbg !7920
  %tobool32 = icmp ne i32 %101, 0, !dbg !7921
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !7922

if.then33:                                        ; preds = %lor.lhs.false, %cond.end
  store i32 -5, i32* %retval, align 4, !dbg !7923
  br label %return, !dbg !7923

if.end34:                                         ; preds = %lor.lhs.false
  %102 = load i32, i32* %result, align 4, !dbg !7924
  %103 = load i32*, i32** %written_blocks.addr, align 8, !dbg !7925
  store i32 %102, i32* %103, align 4, !dbg !7926
  store i32 0, i32* %retval, align 4, !dbg !7927
  br label %return, !dbg !7927

return:                                           ; preds = %if.end34, %if.then33, %if.then17, %if.then5, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !7928
  ret i32 %104, !dbg !7928
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_large_sector(%struct.mmc_card* %card) #0 !dbg !7929 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7934
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !7935
  %data_sector_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 35, !dbg !7936
  %1 = load i32, i32* %data_sector_size, align 4, !dbg !7936
  %cmp = icmp eq i32 %1, 4096, !dbg !7937
  ret i1 %cmp, !dbg !7938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_read_single(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !7939 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %mrq = alloca %struct.mmc_request*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %error = alloca i8, align 1
  %retries = alloca i32, align 4
  %status = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !7944, metadata !DIExpression()), !dbg !7945
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7946
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !7947
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7945
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq, metadata !7948, metadata !DIExpression()), !dbg !7949
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7950
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %1, i32 0, i32 0, !dbg !7951
  %mrq1 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 0, !dbg !7952
  store %struct.mmc_request* %mrq1, %struct.mmc_request** %mrq, align 8, !dbg !7949
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !7953, metadata !DIExpression()), !dbg !7954
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7955
  %card2 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 0, !dbg !7956
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !7956
  store %struct.mmc_card* %3, %struct.mmc_card** %card, align 8, !dbg !7954
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7957, metadata !DIExpression()), !dbg !7958
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7959
  %host3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 0, !dbg !7960
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host3, align 8, !dbg !7960
  store %struct.mmc_host* %5, %struct.mmc_host** %host, align 8, !dbg !7958
  call void @llvm.dbg.declare(metadata i8* %error, metadata !7961, metadata !DIExpression()), !dbg !7962
  store i8 0, i8* %error, align 1, !dbg !7962
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !7963, metadata !DIExpression()), !dbg !7964
  store i32 0, i32* %retries, align 4, !dbg !7964
  br label %do.body, !dbg !7965

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7966, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7969, metadata !DIExpression()), !dbg !7970
  %6 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !7971
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7972
  %8 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !7973
  call void @mmc_blk_rw_rq_prep(%struct.mmc_queue_req* %6, %struct.mmc_card* %7, i32 1, %struct.mmc_queue* %8) #11, !dbg !7974
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7975
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !7976
  call void @mmc_wait_for_req(%struct.mmc_host* %9, %struct.mmc_request* %10) #11, !dbg !7977
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7978
  %call4 = call i32 @mmc_send_status(%struct.mmc_card* %11, i32* %status) #11, !dbg !7979
  store i32 %call4, i32* %err, align 4, !dbg !7980
  %12 = load i32, i32* %err, align 4, !dbg !7981
  %tobool = icmp ne i32 %12, 0, !dbg !7981
  br i1 %tobool, label %if.then, label %if.end, !dbg !7983

if.then:                                          ; preds = %do.body
  br label %error_exit, !dbg !7984

if.end:                                           ; preds = %do.body
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7985
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 17, !dbg !7985
  %14 = load i32, i32* %caps, align 4, !dbg !7985
  %and = and i32 %14, 16, !dbg !7985
  %tobool5 = icmp ne i32 %and, 0, !dbg !7985
  br i1 %tobool5, label %if.end12, label %land.lhs.true, !dbg !7987

land.lhs.true:                                    ; preds = %if.end
  %15 = load i32, i32* %status, align 4, !dbg !7988
  %call6 = call zeroext i1 @mmc_ready_for_data(i32 %15) #11, !dbg !7989
  br i1 %call6, label %if.end12, label %if.then7, !dbg !7990

if.then7:                                         ; preds = %land.lhs.true
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !7991
  %17 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !7993
  %call8 = call i32 @mmc_blk_fix_state(%struct.mmc_card* %16, %struct.request* %17) #11, !dbg !7994
  store i32 %call8, i32* %err, align 4, !dbg !7995
  %18 = load i32, i32* %err, align 4, !dbg !7996
  %tobool9 = icmp ne i32 %18, 0, !dbg !7996
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7998

if.then10:                                        ; preds = %if.then7
  br label %error_exit, !dbg !7999

if.end11:                                         ; preds = %if.then7
  br label %if.end12, !dbg !8000

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.end
  %19 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8001
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %19, i32 0, i32 1, !dbg !8003
  %20 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !8003
  %error13 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %20, i32 0, i32 5, !dbg !8004
  %21 = load i32, i32* %error13, align 8, !dbg !8004
  %tobool14 = icmp ne i32 %21, 0, !dbg !8001
  br i1 %tobool14, label %land.lhs.true15, label %if.end17, !dbg !8005

land.lhs.true15:                                  ; preds = %if.end12
  %22 = load i32, i32* %retries, align 4, !dbg !8006
  %inc = add i32 %22, 1, !dbg !8006
  store i32 %inc, i32* %retries, align 4, !dbg !8006
  %cmp = icmp slt i32 %22, 2, !dbg !8007
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !8008

if.then16:                                        ; preds = %land.lhs.true15
  br label %do.cond, !dbg !8009

if.end17:                                         ; preds = %land.lhs.true15, %if.end12
  store i32 0, i32* %retries, align 4, !dbg !8010
  %23 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8011
  %cmd18 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %23, i32 0, i32 1, !dbg !8013
  %24 = load %struct.mmc_command*, %struct.mmc_command** %cmd18, align 8, !dbg !8013
  %error19 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %24, i32 0, i32 5, !dbg !8014
  %25 = load i32, i32* %error19, align 8, !dbg !8014
  %tobool20 = icmp ne i32 %25, 0, !dbg !8011
  br i1 %tobool20, label %if.then34, label %lor.lhs.false, !dbg !8015

lor.lhs.false:                                    ; preds = %if.end17
  %26 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8016
  %data = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %26, i32 0, i32 2, !dbg !8017
  %27 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !8017
  %error21 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %27, i32 0, i32 5, !dbg !8018
  %28 = load i32, i32* %error21, align 4, !dbg !8018
  %tobool22 = icmp ne i32 %28, 0, !dbg !8016
  br i1 %tobool22, label %if.then34, label %lor.lhs.false23, !dbg !8019

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %29 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8020
  %caps24 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %29, i32 0, i32 17, !dbg !8020
  %30 = load i32, i32* %caps24, align 4, !dbg !8020
  %and25 = and i32 %30, 16, !dbg !8020
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8020
  br i1 %tobool26, label %if.else, label %land.lhs.true27, !dbg !8021

land.lhs.true27:                                  ; preds = %lor.lhs.false23
  %31 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8022
  %cmd28 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %31, i32 0, i32 1, !dbg !8023
  %32 = load %struct.mmc_command*, %struct.mmc_command** %cmd28, align 8, !dbg !8023
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %32, i32 0, i32 2, !dbg !8024
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !8022
  %33 = load i32, i32* %arrayidx, align 8, !dbg !8022
  %and29 = and i32 %33, -466092032, !dbg !8025
  %tobool30 = icmp ne i32 %and29, 0, !dbg !8025
  br i1 %tobool30, label %if.then34, label %lor.lhs.false31, !dbg !8026

lor.lhs.false31:                                  ; preds = %land.lhs.true27
  %34 = load i32, i32* %status, align 4, !dbg !8027
  %and32 = and i32 %34, -466092032, !dbg !8028
  %tobool33 = icmp ne i32 %and32, 0, !dbg !8028
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !8029

if.then34:                                        ; preds = %lor.lhs.false31, %land.lhs.true27, %lor.lhs.false, %if.end17
  store i8 10, i8* %error, align 1, !dbg !8030
  br label %if.end35, !dbg !8031

if.else:                                          ; preds = %lor.lhs.false31, %lor.lhs.false23
  store i8 0, i8* %error, align 1, !dbg !8032
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then34
  br label %do.cond, !dbg !8033

do.cond:                                          ; preds = %if.end35, %if.then16
  %35 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !8034
  %36 = load i8, i8* %error, align 1, !dbg !8035
  %call36 = call zeroext i1 @blk_update_request(%struct.request* %35, i8 zeroext %36, i32 512) #11, !dbg !8036
  br i1 %call36, label %do.body, label %do.end, !dbg !8033, !llvm.loop !8037

do.end:                                           ; preds = %do.cond
  br label %if.end43, !dbg !8039

error_exit:                                       ; preds = %if.then10, %if.then
  call void @llvm.dbg.label(metadata !8040), !dbg !8041
  %37 = load %struct.mmc_request*, %struct.mmc_request** %mrq, align 8, !dbg !8042
  %data37 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %37, i32 0, i32 2, !dbg !8043
  %38 = load %struct.mmc_data*, %struct.mmc_data** %data37, align 8, !dbg !8043
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %38, i32 0, i32 7, !dbg !8044
  store i32 0, i32* %bytes_xfered, align 4, !dbg !8045
  %39 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !8046
  %call38 = call zeroext i1 @blk_update_request(%struct.request* %39, i8 zeroext 10, i32 512) #11, !dbg !8047
  %40 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !8048
  %retries39 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %40, i32 0, i32 6, !dbg !8050
  %41 = load i32, i32* %retries39, align 4, !dbg !8050
  %cmp40 = icmp sgt i32 %41, 4, !dbg !8051
  br i1 %cmp40, label %if.then41, label %if.end43, !dbg !8052

if.then41:                                        ; preds = %error_exit
  %42 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !8053
  %retries42 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %42, i32 0, i32 6, !dbg !8054
  store i32 4, i32* %retries42, align 4, !dbg !8055
  br label %if.end43, !dbg !8053

if.end43:                                         ; preds = %do.end, %if.then41, %error_exit
  ret void, !dbg !8056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_stop_err_bits(%struct.mmc_blk_request* %brq) #0 !dbg !8057 {
entry:
  %brq.addr = alloca %struct.mmc_blk_request*, align 8
  store %struct.mmc_blk_request* %brq, %struct.mmc_blk_request** %brq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq.addr, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8062
  %call = call zeroext i1 @mmc_blk_oor_valid(%struct.mmc_blk_request* %0) #11, !dbg !8063
  %1 = zext i1 %call to i64, !dbg !8063
  %cond = select i1 %call, i32 -466092032, i32 1681391616, !dbg !8063
  ret i32 %cond, !dbg !8064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_blk_oor_valid(%struct.mmc_blk_request* %brq) #0 !dbg !8065 {
entry:
  %brq.addr = alloca %struct.mmc_blk_request*, align 8
  store %struct.mmc_blk_request* %brq, %struct.mmc_blk_request** %brq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq.addr, metadata !8066, metadata !DIExpression()), !dbg !8067
  %0 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8068
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %0, i32 0, i32 0, !dbg !8069
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 0, !dbg !8070
  %1 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !8070
  %tobool = icmp ne %struct.mmc_command* %1, null, !dbg !8071
  %lnot = xor i1 %tobool, true, !dbg !8071
  %lnot1 = xor i1 %lnot, true, !dbg !8072
  ret i1 %lnot1, !dbg !8073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_data_timeout_ms(%struct.mmc_host* %host, %struct.mmc_data* %data) #0 !dbg !8074 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %data.addr = alloca %struct.mmc_data*, align 8
  %ms = alloca i32, align 4
  %khz = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8077, metadata !DIExpression()), !dbg !8078
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !8079, metadata !DIExpression()), !dbg !8080
  call void @llvm.dbg.declare(metadata i32* %ms, metadata !8081, metadata !DIExpression()), !dbg !8082
  %0 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !8083
  %timeout_ns = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %0, i32 0, i32 0, !dbg !8083
  %1 = load i32, i32* %timeout_ns, align 8, !dbg !8083
  %add = add i32 %1, 1000000, !dbg !8083
  %sub = sub i32 %add, 1, !dbg !8083
  %div = udiv i32 %sub, 1000000, !dbg !8083
  store i32 %div, i32* %ms, align 4, !dbg !8082
  call void @llvm.dbg.declare(metadata i32* %khz, metadata !8084, metadata !DIExpression()), !dbg !8085
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !8086
  %timeout_clks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %2, i32 0, i32 1, !dbg !8088
  %3 = load i32, i32* %timeout_clks, align 4, !dbg !8088
  %tobool = icmp ne i32 %3, 0, !dbg !8086
  br i1 %tobool, label %if.then, label %if.end, !dbg !8089

if.then:                                          ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8090
  %call = call i32 @mmc_blk_clock_khz(%struct.mmc_host* %4) #11, !dbg !8092
  store i32 %call, i32* %khz, align 4, !dbg !8093
  %5 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !8094
  %timeout_clks1 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %5, i32 0, i32 1, !dbg !8094
  %6 = load i32, i32* %timeout_clks1, align 4, !dbg !8094
  %7 = load i32, i32* %khz, align 4, !dbg !8094
  %add2 = add i32 %6, %7, !dbg !8094
  %sub3 = sub i32 %add2, 1, !dbg !8094
  %8 = load i32, i32* %khz, align 4, !dbg !8094
  %div4 = udiv i32 %sub3, %8, !dbg !8094
  %9 = load i32, i32* %ms, align 4, !dbg !8095
  %add5 = add i32 %9, %div4, !dbg !8095
  store i32 %add5, i32* %ms, align 4, !dbg !8095
  br label %if.end, !dbg !8096

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %ms, align 4, !dbg !8097
  ret i32 %10, !dbg !8098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_send_stop(%struct.mmc_card* %card, i32 %timeout) #0 !dbg !8099 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %timeout.addr = alloca i32, align 4
  %cmd = alloca %struct.mmc_command, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !8104, metadata !DIExpression()), !dbg !8105
  %0 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !8105
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !8105
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !8106
  store i32 12, i32* %opcode, align 8, !dbg !8106
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !8106
  store i32 149, i32* %flags, align 8, !dbg !8106
  %busy_timeout = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 6, !dbg !8106
  %1 = load i32, i32* %timeout.addr, align 4, !dbg !8107
  store i32 %1, i32* %busy_timeout, align 4, !dbg !8106
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8108
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !8109
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8109
  %call = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %3, %struct.mmc_command* %cmd, i32 5) #11, !dbg !8110
  ret i32 %call, !dbg !8111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @card_busy_detect(%struct.mmc_card* %card, i32 %timeout_ms, i32* %resp_errs) #0 !dbg !8112 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8115, metadata !DIExpression()), !dbg !8120
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %timeout_ms.addr = alloca i32, align 4
  %resp_errs.addr = alloca i32*, align 8
  %timeout = alloca i64, align 8
  %err = alloca i32, align 4
  %status = alloca i32, align 4
  %done = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8122, metadata !DIExpression()), !dbg !8123
  store i32 %timeout_ms, i32* %timeout_ms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout_ms.addr, metadata !8124, metadata !DIExpression()), !dbg !8125
  store i32* %resp_errs, i32** %resp_errs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %resp_errs.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !8128, metadata !DIExpression()), !dbg !8129
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !8130
  %1 = load i32, i32* %timeout_ms.addr, align 4, !dbg !8131
  store i32 %1, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !8132
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #5, !dbg !8134
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !8135

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !8136
  %cmp.i = icmp slt i32 %4, 0, !dbg !8139
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8140

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8141
  br label %msecs_to_jiffies.exit, !dbg !8141

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !8142
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #12, !dbg !8143
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8144
  br label %msecs_to_jiffies.exit, !dbg !8144

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !8145
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #12, !dbg !8147
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8148
  br label %msecs_to_jiffies.exit, !dbg !8148

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !8149
  %add = add i64 %0, %7, !dbg !8150
  store i64 %add, i64* %timeout, align 8, !dbg !8129
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8151, metadata !DIExpression()), !dbg !8152
  store i32 0, i32* %err, align 4, !dbg !8152
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8153, metadata !DIExpression()), !dbg !8154
  br label %do.body, !dbg !8155

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  call void @llvm.dbg.declare(metadata i8* %done, metadata !8156, metadata !DIExpression()), !dbg !8158
  %8 = load i64, i64* %timeout, align 8, !dbg !8159
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !8159
  %sub = sub i64 %8, %9, !dbg !8159
  %cmp = icmp slt i64 %sub, 0, !dbg !8159
  %frombool = zext i1 %cmp to i8, !dbg !8158
  store i8 %frombool, i8* %done, align 1, !dbg !8158
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8160
  %call1 = call i32 @__mmc_send_status(%struct.mmc_card* %10, i32* %status, i32 5) #11, !dbg !8161
  store i32 %call1, i32* %err, align 4, !dbg !8162
  %11 = load i32, i32* %err, align 4, !dbg !8163
  %tobool = icmp ne i32 %11, 0, !dbg !8163
  br i1 %tobool, label %if.then, label %if.end, !dbg !8165

if.then:                                          ; preds = %do.body
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8166
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 0, !dbg !8166
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8166
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 0, !dbg !8166
  %14 = load %struct.device*, %struct.device** %parent, align 64, !dbg !8166
  %15 = load i32, i32* %err, align 4, !dbg !8166
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i32 %15) #13, !dbg !8166
  %16 = load i32, i32* %err, align 4, !dbg !8168
  store i32 %16, i32* %retval, align 4, !dbg !8169
  br label %return, !dbg !8169

if.end:                                           ; preds = %do.body
  %17 = load i32*, i32** %resp_errs.addr, align 8, !dbg !8170
  %tobool2 = icmp ne i32* %17, null, !dbg !8170
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8172

if.then3:                                         ; preds = %if.end
  %18 = load i32, i32* %status, align 4, !dbg !8173
  %19 = load i32*, i32** %resp_errs.addr, align 8, !dbg !8174
  %20 = load i32, i32* %19, align 4, !dbg !8175
  %or = or i32 %20, %18, !dbg !8175
  store i32 %or, i32* %19, align 4, !dbg !8175
  br label %if.end4, !dbg !8176

if.end4:                                          ; preds = %if.then3, %if.end
  %21 = load i8, i8* %done, align 1, !dbg !8177
  %tobool5 = trunc i8 %21 to i1, !dbg !8177
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !8179

if.then6:                                         ; preds = %if.end4
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8180
  %host7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 0, !dbg !8180
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host7, align 8, !dbg !8180
  %parent8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 0, !dbg !8180
  %24 = load %struct.device*, %struct.device** %parent8, align 64, !dbg !8180
  %25 = load i32, i32* %status, align 4, !dbg !8180
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %24, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.card_busy_detect, i64 0, i64 0), i32 %25) #13, !dbg !8180
  store i32 -110, i32* %retval, align 4, !dbg !8182
  br label %return, !dbg !8182

if.end9:                                          ; preds = %if.end4
  br label %do.cond, !dbg !8183

do.cond:                                          ; preds = %if.end9
  %26 = load i32, i32* %status, align 4, !dbg !8184
  %call10 = call zeroext i1 @mmc_ready_for_data(i32 %26) #11, !dbg !8185
  %lnot = xor i1 %call10, true, !dbg !8186
  br i1 %lnot, label %do.body, label %do.end, !dbg !8183, !llvm.loop !8187

do.end:                                           ; preds = %do.cond
  %27 = load i32, i32* %err, align 4, !dbg !8189
  store i32 %27, i32* %retval, align 4, !dbg !8190
  br label %return, !dbg !8190

return:                                           ; preds = %do.end, %if.then6, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !8191
  ret i32 %28, !dbg !8191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_clock_khz(%struct.mmc_host* %host) #0 !dbg !8192 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8195, metadata !DIExpression()), !dbg !8196
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8197
  %actual_clock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 58, !dbg !8199
  %1 = load i32, i32* %actual_clock, align 16, !dbg !8199
  %tobool = icmp ne i32 %1, 0, !dbg !8197
  br i1 %tobool, label %if.then, label %if.end, !dbg !8200

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8201
  %actual_clock1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 58, !dbg !8202
  %3 = load i32, i32* %actual_clock1, align 16, !dbg !8202
  %div = udiv i32 %3, 1000, !dbg !8203
  store i32 %div, i32* %retval, align 4, !dbg !8204
  br label %return, !dbg !8204

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8205
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !8207
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 0, !dbg !8208
  %5 = load i32, i32* %clock, align 4, !dbg !8208
  %tobool2 = icmp ne i32 %5, 0, !dbg !8205
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !8209

if.then3:                                         ; preds = %if.end
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8210
  %ios4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 29, !dbg !8211
  %clock5 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios4, i32 0, i32 0, !dbg !8212
  %7 = load i32, i32* %clock5, align 4, !dbg !8212
  %div6 = udiv i32 %7, 2000, !dbg !8213
  store i32 %div6, i32* %retval, align 4, !dbg !8214
  br label %return, !dbg !8214

if.end7:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8215, metadata !DIExpression()), !dbg !8217
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8217
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !8218
  %tobool8 = icmp ne i32 %8, 0, !dbg !8218
  %lnot = xor i1 %tobool8, true, !dbg !8218
  %lnot9 = xor i1 %lnot, true, !dbg !8218
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !8218
  %conv = sext i32 %lnot.ext to i64, !dbg !8218
  %tobool10 = icmp ne i64 %conv, 0, !dbg !8218
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8217

if.then11:                                        ; preds = %if.end7
  br label %do.body, !dbg !8218

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !8220

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8222

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8220

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i32 920, i32 2307, i64 12) #5, !dbg !8224, !srcloc !8226
  br label %do.end14, !dbg !8224

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 302) #5, !dbg !8227, !srcloc !8229
  br label %do.body15, !dbg !8220

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8230

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8220

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !8220

if.end18:                                         ; preds = %do.end17, %if.end7
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !8217
  %tobool19 = icmp ne i32 %9, 0, !dbg !8217
  %lnot20 = xor i1 %tobool19, true, !dbg !8217
  %lnot22 = xor i1 %lnot20, true, !dbg !8217
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8217
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !8217
  store i64 %conv24, i64* %tmp, align 8, !dbg !8218
  %10 = load i64, i64* %tmp, align 8, !dbg !8217
  store i32 100, i32* %retval, align 4, !dbg !8232
  br label %return, !dbg !8232

return:                                           ; preds = %if.end18, %if.then3, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8233
  ret i32 %11, !dbg !8233
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: noredzone
declare dso_local i32 @mmc_wait_for_cmd(%struct.mmc_host*, %struct.mmc_command*, i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #6

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !8234 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !8235, metadata !DIExpression()), !dbg !8236
  %0 = load i32, i32* %m.addr, align 4, !dbg !8237
  %conv = zext i32 %0 to i64, !dbg !8237
  %add = add i64 %conv, 4, !dbg !8238
  %sub = sub i64 %add, 1, !dbg !8239
  %div = sdiv i64 %sub, 4, !dbg !8240
  ret i64 %div, !dbg !8241
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noredzone
declare dso_local void @mmc_set_data_timeout(%struct.mmc_data*, %struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local void @sg_init_one(%struct.scatterlist*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mmc_wait_for_req(%struct.mmc_host*, %struct.mmc_request*) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #9 !dbg !8242 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = load i32, i32* %val.addr, align 4, !dbg !8248
  %call = call i32 @__arch_swab32(i32 %0) #14, !dbg !8249
  ret i32 %call, !dbg !8250
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #10

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !8251 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8255, metadata !DIExpression()), !dbg !8260
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8262, metadata !DIExpression()), !dbg !8263
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8264, metadata !DIExpression()), !dbg !8265
  %0 = load i64, i64* %size.addr, align 8, !dbg !8266
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8268
  br i1 %1, label %if.then, label %if.end447, !dbg !8269

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8270
  %tobool = icmp ne i64 %2, 0, !dbg !8270
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8273

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8274
  br label %return, !dbg !8274

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8275
  %cmp = icmp ult i64 %3, 4096, !dbg !8277
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8278

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8279
  br label %return, !dbg !8279

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub = sub i64 %4, 1, !dbg !8280
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8280
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8280

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub4 = sub i64 %6, 1, !dbg !8280
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8280
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8280

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub6 = sub i64 %8, 1, !dbg !8280
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8280
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8280

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8280

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub9 = sub i64 %9, 1, !dbg !8280
  %and = and i64 %sub9, -9223372036854775808, !dbg !8280
  %tobool10 = icmp ne i64 %and, 0, !dbg !8280
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8280

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8280

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub13 = sub i64 %10, 1, !dbg !8280
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8280
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8280
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8280

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8280

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub18 = sub i64 %11, 1, !dbg !8280
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8280
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8280
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8280

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8280

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub23 = sub i64 %12, 1, !dbg !8280
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8280
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8280
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8280

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8280

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub28 = sub i64 %13, 1, !dbg !8280
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8280
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8280
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8280

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8280

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub33 = sub i64 %14, 1, !dbg !8280
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8280
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8280
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8280

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8280

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub38 = sub i64 %15, 1, !dbg !8280
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8280
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8280
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8280

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8280

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub43 = sub i64 %16, 1, !dbg !8280
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8280
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8280
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8280

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8280

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub48 = sub i64 %17, 1, !dbg !8280
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8280
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8280
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8280

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8280

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub53 = sub i64 %18, 1, !dbg !8280
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8280
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8280
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8280

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8280

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub58 = sub i64 %19, 1, !dbg !8280
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8280
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8280
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8280

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8280

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub63 = sub i64 %20, 1, !dbg !8280
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8280
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8280
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8280

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8280

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub68 = sub i64 %21, 1, !dbg !8280
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8280
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8280
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8280

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8280

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub73 = sub i64 %22, 1, !dbg !8280
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8280
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8280
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8280

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8280

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub78 = sub i64 %23, 1, !dbg !8280
  %and79 = and i64 %sub78, 562949953421312, !dbg !8280
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8280
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8280

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8280

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub83 = sub i64 %24, 1, !dbg !8280
  %and84 = and i64 %sub83, 281474976710656, !dbg !8280
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8280
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8280

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8280

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub88 = sub i64 %25, 1, !dbg !8280
  %and89 = and i64 %sub88, 140737488355328, !dbg !8280
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8280
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8280

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8280

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub93 = sub i64 %26, 1, !dbg !8280
  %and94 = and i64 %sub93, 70368744177664, !dbg !8280
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8280
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8280

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8280

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub98 = sub i64 %27, 1, !dbg !8280
  %and99 = and i64 %sub98, 35184372088832, !dbg !8280
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8280
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8280

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8280

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub103 = sub i64 %28, 1, !dbg !8280
  %and104 = and i64 %sub103, 17592186044416, !dbg !8280
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8280
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8280

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8280

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub108 = sub i64 %29, 1, !dbg !8280
  %and109 = and i64 %sub108, 8796093022208, !dbg !8280
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8280
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8280

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8280

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub113 = sub i64 %30, 1, !dbg !8280
  %and114 = and i64 %sub113, 4398046511104, !dbg !8280
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8280
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8280

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8280

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub118 = sub i64 %31, 1, !dbg !8280
  %and119 = and i64 %sub118, 2199023255552, !dbg !8280
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8280
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8280

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8280

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub123 = sub i64 %32, 1, !dbg !8280
  %and124 = and i64 %sub123, 1099511627776, !dbg !8280
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8280
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8280

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8280

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub128 = sub i64 %33, 1, !dbg !8280
  %and129 = and i64 %sub128, 549755813888, !dbg !8280
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8280
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8280

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8280

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub133 = sub i64 %34, 1, !dbg !8280
  %and134 = and i64 %sub133, 274877906944, !dbg !8280
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8280
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8280

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8280

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub138 = sub i64 %35, 1, !dbg !8280
  %and139 = and i64 %sub138, 137438953472, !dbg !8280
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8280
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8280

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8280

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub143 = sub i64 %36, 1, !dbg !8280
  %and144 = and i64 %sub143, 68719476736, !dbg !8280
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8280
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8280

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8280

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub148 = sub i64 %37, 1, !dbg !8280
  %and149 = and i64 %sub148, 34359738368, !dbg !8280
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8280
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8280

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8280

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub153 = sub i64 %38, 1, !dbg !8280
  %and154 = and i64 %sub153, 17179869184, !dbg !8280
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8280
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8280

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8280

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub158 = sub i64 %39, 1, !dbg !8280
  %and159 = and i64 %sub158, 8589934592, !dbg !8280
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8280
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8280

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8280

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub163 = sub i64 %40, 1, !dbg !8280
  %and164 = and i64 %sub163, 4294967296, !dbg !8280
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8280
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8280

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8280

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub168 = sub i64 %41, 1, !dbg !8280
  %and169 = and i64 %sub168, 2147483648, !dbg !8280
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8280
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8280

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8280

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub173 = sub i64 %42, 1, !dbg !8280
  %and174 = and i64 %sub173, 1073741824, !dbg !8280
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8280
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8280

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8280

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub178 = sub i64 %43, 1, !dbg !8280
  %and179 = and i64 %sub178, 536870912, !dbg !8280
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8280
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8280

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8280

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub183 = sub i64 %44, 1, !dbg !8280
  %and184 = and i64 %sub183, 268435456, !dbg !8280
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8280
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8280

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8280

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub188 = sub i64 %45, 1, !dbg !8280
  %and189 = and i64 %sub188, 134217728, !dbg !8280
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8280
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8280

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8280

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub193 = sub i64 %46, 1, !dbg !8280
  %and194 = and i64 %sub193, 67108864, !dbg !8280
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8280
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8280

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8280

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub198 = sub i64 %47, 1, !dbg !8280
  %and199 = and i64 %sub198, 33554432, !dbg !8280
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8280
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8280

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8280

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub203 = sub i64 %48, 1, !dbg !8280
  %and204 = and i64 %sub203, 16777216, !dbg !8280
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8280
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8280

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8280

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub208 = sub i64 %49, 1, !dbg !8280
  %and209 = and i64 %sub208, 8388608, !dbg !8280
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8280
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8280

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8280

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub213 = sub i64 %50, 1, !dbg !8280
  %and214 = and i64 %sub213, 4194304, !dbg !8280
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8280
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8280

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8280

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub218 = sub i64 %51, 1, !dbg !8280
  %and219 = and i64 %sub218, 2097152, !dbg !8280
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8280
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8280

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8280

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub223 = sub i64 %52, 1, !dbg !8280
  %and224 = and i64 %sub223, 1048576, !dbg !8280
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8280
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8280

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8280

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub228 = sub i64 %53, 1, !dbg !8280
  %and229 = and i64 %sub228, 524288, !dbg !8280
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8280
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8280

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8280

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub233 = sub i64 %54, 1, !dbg !8280
  %and234 = and i64 %sub233, 262144, !dbg !8280
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8280
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8280

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8280

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub238 = sub i64 %55, 1, !dbg !8280
  %and239 = and i64 %sub238, 131072, !dbg !8280
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8280
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8280

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8280

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub243 = sub i64 %56, 1, !dbg !8280
  %and244 = and i64 %sub243, 65536, !dbg !8280
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8280
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8280

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8280

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub248 = sub i64 %57, 1, !dbg !8280
  %and249 = and i64 %sub248, 32768, !dbg !8280
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8280
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8280

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8280

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub253 = sub i64 %58, 1, !dbg !8280
  %and254 = and i64 %sub253, 16384, !dbg !8280
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8280
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8280

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8280

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub258 = sub i64 %59, 1, !dbg !8280
  %and259 = and i64 %sub258, 8192, !dbg !8280
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8280
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8280

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8280

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub263 = sub i64 %60, 1, !dbg !8280
  %and264 = and i64 %sub263, 4096, !dbg !8280
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8280
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8280

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8280

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub268 = sub i64 %61, 1, !dbg !8280
  %and269 = and i64 %sub268, 2048, !dbg !8280
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8280
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8280

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8280

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub273 = sub i64 %62, 1, !dbg !8280
  %and274 = and i64 %sub273, 1024, !dbg !8280
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8280
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8280

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8280

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub278 = sub i64 %63, 1, !dbg !8280
  %and279 = and i64 %sub278, 512, !dbg !8280
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8280
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8280

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8280

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub283 = sub i64 %64, 1, !dbg !8280
  %and284 = and i64 %sub283, 256, !dbg !8280
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8280
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8280

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8280

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub288 = sub i64 %65, 1, !dbg !8280
  %and289 = and i64 %sub288, 128, !dbg !8280
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8280
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8280

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8280

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub293 = sub i64 %66, 1, !dbg !8280
  %and294 = and i64 %sub293, 64, !dbg !8280
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8280
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8280

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8280

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub298 = sub i64 %67, 1, !dbg !8280
  %and299 = and i64 %sub298, 32, !dbg !8280
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8280
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8280

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8280

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub303 = sub i64 %68, 1, !dbg !8280
  %and304 = and i64 %sub303, 16, !dbg !8280
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8280
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8280

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8280

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub308 = sub i64 %69, 1, !dbg !8280
  %and309 = and i64 %sub308, 8, !dbg !8280
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8280
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8280

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8280

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub313 = sub i64 %70, 1, !dbg !8280
  %and314 = and i64 %sub313, 4, !dbg !8280
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8280
  %71 = zext i1 %tobool315 to i64, !dbg !8280
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8280
  br label %cond.end, !dbg !8280

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8280
  br label %cond.end317, !dbg !8280

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8280
  br label %cond.end319, !dbg !8280

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8280
  br label %cond.end321, !dbg !8280

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8280
  br label %cond.end323, !dbg !8280

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8280
  br label %cond.end325, !dbg !8280

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8280
  br label %cond.end327, !dbg !8280

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8280
  br label %cond.end329, !dbg !8280

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8280
  br label %cond.end331, !dbg !8280

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8280
  br label %cond.end333, !dbg !8280

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8280
  br label %cond.end335, !dbg !8280

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8280
  br label %cond.end337, !dbg !8280

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8280
  br label %cond.end339, !dbg !8280

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8280
  br label %cond.end341, !dbg !8280

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8280
  br label %cond.end343, !dbg !8280

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8280
  br label %cond.end345, !dbg !8280

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8280
  br label %cond.end347, !dbg !8280

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8280
  br label %cond.end349, !dbg !8280

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8280
  br label %cond.end351, !dbg !8280

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8280
  br label %cond.end353, !dbg !8280

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8280
  br label %cond.end355, !dbg !8280

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8280
  br label %cond.end357, !dbg !8280

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8280
  br label %cond.end359, !dbg !8280

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8280
  br label %cond.end361, !dbg !8280

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8280
  br label %cond.end363, !dbg !8280

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8280
  br label %cond.end365, !dbg !8280

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8280
  br label %cond.end367, !dbg !8280

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8280
  br label %cond.end369, !dbg !8280

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8280
  br label %cond.end371, !dbg !8280

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8280
  br label %cond.end373, !dbg !8280

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8280
  br label %cond.end375, !dbg !8280

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8280
  br label %cond.end377, !dbg !8280

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8280
  br label %cond.end379, !dbg !8280

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8280
  br label %cond.end381, !dbg !8280

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8280
  br label %cond.end383, !dbg !8280

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8280
  br label %cond.end385, !dbg !8280

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8280
  br label %cond.end387, !dbg !8280

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8280
  br label %cond.end389, !dbg !8280

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8280
  br label %cond.end391, !dbg !8280

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8280
  br label %cond.end393, !dbg !8280

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8280
  br label %cond.end395, !dbg !8280

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8280
  br label %cond.end397, !dbg !8280

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8280
  br label %cond.end399, !dbg !8280

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8280
  br label %cond.end401, !dbg !8280

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8280
  br label %cond.end403, !dbg !8280

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8280
  br label %cond.end405, !dbg !8280

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8280
  br label %cond.end407, !dbg !8280

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8280
  br label %cond.end409, !dbg !8280

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8280
  br label %cond.end411, !dbg !8280

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8280
  br label %cond.end413, !dbg !8280

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8280
  br label %cond.end415, !dbg !8280

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8280
  br label %cond.end417, !dbg !8280

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8280
  br label %cond.end419, !dbg !8280

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8280
  br label %cond.end421, !dbg !8280

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8280
  br label %cond.end423, !dbg !8280

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8280
  br label %cond.end425, !dbg !8280

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8280
  br label %cond.end427, !dbg !8280

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8280
  br label %cond.end429, !dbg !8280

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8280
  br label %cond.end431, !dbg !8280

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8280
  br label %cond.end433, !dbg !8280

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8280
  br label %cond.end435, !dbg !8280

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8280
  br label %cond.end437, !dbg !8280

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8280
  br label %cond.end440, !dbg !8280

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8280

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8280
  br label %cond.end444, !dbg !8280

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8280
  %sub443 = sub i64 %72, 1, !dbg !8280
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !8280
  br label %cond.end444, !dbg !8280

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8280
  %sub446 = sub i32 %cond445, 12, !dbg !8281
  %add = add i32 %sub446, 1, !dbg !8282
  store i32 %add, i32* %retval, align 4, !dbg !8283
  br label %return, !dbg !8283

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8284
  %dec = add i64 %73, -1, !dbg !8284
  store i64 %dec, i64* %size.addr, align 8, !dbg !8284
  %74 = load i64, i64* %size.addr, align 8, !dbg !8285
  %shr = lshr i64 %74, 12, !dbg !8285
  store i64 %shr, i64* %size.addr, align 8, !dbg !8285
  %75 = load i64, i64* %size.addr, align 8, !dbg !8286
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8263
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8287
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8288
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #4, !dbg !8287, !srcloc !8289
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8287
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8290
  %add.i = add i32 %79, 1, !dbg !8291
  store i32 %add.i, i32* %retval, align 4, !dbg !8292
  br label %return, !dbg !8292

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8293
  ret i32 %80, !dbg !8293
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !8294 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8255, metadata !DIExpression()), !dbg !8298
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8262, metadata !DIExpression()), !dbg !8300
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  %0 = load i64, i64* %n.addr, align 8, !dbg !8303
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8300
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8304
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8305
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #4, !dbg !8304, !srcloc !8289
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8304
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8306
  %add.i = add i32 %4, 1, !dbg !8307
  %sub = sub i32 %add.i, 1, !dbg !8308
  ret i32 %sub, !dbg !8309
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8310 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8320, metadata !DIExpression()), !dbg !8321
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8322
  ret i8* %0, !dbg !8323
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #9 !dbg !8324 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  %0 = load i32, i32* %val.addr, align 4, !dbg !8328
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #15, !dbg !8329, !srcloc !8330
  store i32 %1, i32* %val.addr, align 4, !dbg !8329
  %2 = load i32, i32* %val.addr, align 4, !dbg !8331
  ret i32 %2, !dbg !8332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_rw_rq_prep(%struct.mmc_queue_req* %mqrq, %struct.mmc_card* %card, i32 %disable_multi, %struct.mmc_queue* %mq) #0 !dbg !8333 {
entry:
  %mqrq.addr = alloca %struct.mmc_queue_req*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %disable_multi.addr = alloca i32, align 4
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %readcmd = alloca i32, align 4
  %writecmd = alloca i32, align 4
  %brq = alloca %struct.mmc_blk_request*, align 8
  %req = alloca %struct.request*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %do_rel_wr = alloca i8, align 1
  %do_data_tag = alloca i8, align 1
  store %struct.mmc_queue_req* %mqrq, %struct.mmc_queue_req** %mqrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq.addr, metadata !8336, metadata !DIExpression()), !dbg !8337
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8338, metadata !DIExpression()), !dbg !8339
  store i32 %disable_multi, i32* %disable_multi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %disable_multi.addr, metadata !8340, metadata !DIExpression()), !dbg !8341
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !8342, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.declare(metadata i32* %readcmd, metadata !8344, metadata !DIExpression()), !dbg !8345
  call void @llvm.dbg.declare(metadata i32* %writecmd, metadata !8346, metadata !DIExpression()), !dbg !8347
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq, metadata !8348, metadata !DIExpression()), !dbg !8349
  %0 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8350
  %brq1 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %0, i32 0, i32 0, !dbg !8351
  store %struct.mmc_blk_request* %brq1, %struct.mmc_blk_request** %brq, align 8, !dbg !8349
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !8352, metadata !DIExpression()), !dbg !8353
  %1 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8354
  %call = call %struct.request* @mmc_queue_req_to_req(%struct.mmc_queue_req* %1) #11, !dbg !8355
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !8353
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !8356, metadata !DIExpression()), !dbg !8357
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8358
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 3, !dbg !8359
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !8359
  store %struct.mmc_blk_data* %3, %struct.mmc_blk_data** %md, align 8, !dbg !8357
  call void @llvm.dbg.declare(metadata i8* %do_rel_wr, metadata !8360, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata i8* %do_data_tag, metadata !8362, metadata !DIExpression()), !dbg !8363
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8364
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8365
  %6 = load i32, i32* %disable_multi.addr, align 4, !dbg !8366
  call void @mmc_blk_data_prep(%struct.mmc_queue* %4, %struct.mmc_queue_req* %5, i32 %6, i8* %do_rel_wr, i8* %do_data_tag) #11, !dbg !8367
  %7 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8368
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %7, i32 0, i32 2, !dbg !8369
  %8 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8370
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %8, i32 0, i32 0, !dbg !8371
  %cmd2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 1, !dbg !8372
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd2, align 8, !dbg !8373
  %9 = load %struct.request*, %struct.request** %req, align 8, !dbg !8374
  %call3 = call i64 @blk_rq_pos(%struct.request* %9) #11, !dbg !8375
  %conv = trunc i64 %call3 to i32, !dbg !8375
  %10 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8376
  %cmd4 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %10, i32 0, i32 2, !dbg !8377
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd4, i32 0, i32 1, !dbg !8378
  store i32 %conv, i32* %arg, align 4, !dbg !8379
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8380
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 5, !dbg !8380
  %12 = load i32, i32* %state, align 4, !dbg !8380
  %and = and i32 %12, 4, !dbg !8380
  %tobool = icmp ne i32 %and, 0, !dbg !8380
  br i1 %tobool, label %if.end, label %if.then, !dbg !8382

if.then:                                          ; preds = %entry
  %13 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8383
  %cmd5 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %13, i32 0, i32 2, !dbg !8384
  %arg6 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd5, i32 0, i32 1, !dbg !8385
  %14 = load i32, i32* %arg6, align 4, !dbg !8386
  %shl = shl i32 %14, 9, !dbg !8386
  store i32 %shl, i32* %arg6, align 4, !dbg !8386
  br label %if.end, !dbg !8383

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8387
  %cmd7 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %15, i32 0, i32 2, !dbg !8388
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd7, i32 0, i32 3, !dbg !8389
  store i32 181, i32* %flags, align 8, !dbg !8390
  %16 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8391
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %16, i32 0, i32 4, !dbg !8393
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 3, !dbg !8394
  %17 = load i32, i32* %blocks, align 4, !dbg !8394
  %cmp = icmp ugt i32 %17, 1, !dbg !8395
  br i1 %cmp, label %if.then11, label %lor.lhs.false, !dbg !8396

lor.lhs.false:                                    ; preds = %if.end
  %18 = load i8, i8* %do_rel_wr, align 1, !dbg !8397
  %tobool9 = trunc i8 %18 to i1, !dbg !8397
  br i1 %tobool9, label %if.then11, label %if.else, !dbg !8398

if.then11:                                        ; preds = %lor.lhs.false, %if.end
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8399
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 0, !dbg !8399
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8399
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %20, i32 0, i32 17, !dbg !8399
  %21 = load i32, i32* %caps, align 4, !dbg !8399
  %and12 = and i32 %21, 16, !dbg !8399
  %tobool13 = icmp ne i32 %and12, 0, !dbg !8399
  br i1 %tobool13, label %lor.lhs.false14, label %if.then20, !dbg !8402

lor.lhs.false14:                                  ; preds = %if.then11
  %22 = load %struct.request*, %struct.request** %req, align 8, !dbg !8403
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %22, i32 0, i32 3, !dbg !8403
  %23 = load i32, i32* %cmd_flags, align 8, !dbg !8403
  %and15 = and i32 %23, 255, !dbg !8403
  %call16 = call zeroext i1 @op_is_write(i32 %and15) #11, !dbg !8403
  %24 = zext i1 %call16 to i64, !dbg !8403
  %cond = select i1 %call16, i32 1, i32 0, !dbg !8403
  %cmp18 = icmp eq i32 %cond, 0, !dbg !8404
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !8405

if.then20:                                        ; preds = %lor.lhs.false14, %if.then11
  %25 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8406
  %stop = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %25, i32 0, i32 3, !dbg !8407
  %26 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8408
  %mrq21 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %26, i32 0, i32 0, !dbg !8409
  %stop22 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq21, i32 0, i32 3, !dbg !8410
  store %struct.mmc_command* %stop, %struct.mmc_command** %stop22, align 8, !dbg !8411
  br label %if.end23, !dbg !8408

if.end23:                                         ; preds = %if.then20, %lor.lhs.false14
  store i32 18, i32* %readcmd, align 4, !dbg !8412
  store i32 25, i32* %writecmd, align 4, !dbg !8413
  br label %if.end26, !dbg !8414

if.else:                                          ; preds = %lor.lhs.false
  %27 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8415
  %mrq24 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %27, i32 0, i32 0, !dbg !8417
  %stop25 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq24, i32 0, i32 3, !dbg !8418
  store %struct.mmc_command* null, %struct.mmc_command** %stop25, align 8, !dbg !8419
  store i32 17, i32* %readcmd, align 4, !dbg !8420
  store i32 24, i32* %writecmd, align 4, !dbg !8421
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end23
  %28 = load %struct.request*, %struct.request** %req, align 8, !dbg !8422
  %cmd_flags27 = getelementptr inbounds %struct.request, %struct.request* %28, i32 0, i32 3, !dbg !8422
  %29 = load i32, i32* %cmd_flags27, align 8, !dbg !8422
  %and28 = and i32 %29, 255, !dbg !8422
  %call29 = call zeroext i1 @op_is_write(i32 %and28) #11, !dbg !8422
  %30 = zext i1 %call29 to i64, !dbg !8422
  %cond31 = select i1 %call29, i32 1, i32 0, !dbg !8422
  %cmp32 = icmp eq i32 %cond31, 0, !dbg !8423
  br i1 %cmp32, label %cond.true, label %cond.false, !dbg !8422

cond.true:                                        ; preds = %if.end26
  %31 = load i32, i32* %readcmd, align 4, !dbg !8424
  br label %cond.end, !dbg !8422

cond.false:                                       ; preds = %if.end26
  %32 = load i32, i32* %writecmd, align 4, !dbg !8425
  br label %cond.end, !dbg !8422

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond34 = phi i32 [ %31, %cond.true ], [ %32, %cond.false ], !dbg !8422
  %33 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8426
  %cmd35 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %33, i32 0, i32 2, !dbg !8427
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd35, i32 0, i32 0, !dbg !8428
  store i32 %cond34, i32* %opcode, align 8, !dbg !8429
  %34 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !8430
  %flags36 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %34, i32 0, i32 5, !dbg !8432
  %35 = load i32, i32* %flags36, align 8, !dbg !8432
  %and37 = and i32 %35, 1, !dbg !8433
  %tobool38 = icmp ne i32 %and37, 0, !dbg !8433
  br i1 %tobool38, label %land.lhs.true, label %if.end70, !dbg !8434

land.lhs.true:                                    ; preds = %cond.end
  %36 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8435
  %cmd39 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %36, i32 0, i32 2, !dbg !8436
  %opcode40 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd39, i32 0, i32 0, !dbg !8437
  %37 = load i32, i32* %opcode40, align 8, !dbg !8437
  %call41 = call zeroext i1 @mmc_op_multi(i32 %37) #11, !dbg !8438
  br i1 %call41, label %land.lhs.true43, label %if.end70, !dbg !8439

land.lhs.true43:                                  ; preds = %land.lhs.true
  %38 = load i8, i8* %do_rel_wr, align 1, !dbg !8440
  %tobool44 = trunc i8 %38 to i1, !dbg !8440
  br i1 %tobool44, label %if.then52, label %lor.lhs.false46, !dbg !8441

lor.lhs.false46:                                  ; preds = %land.lhs.true43
  %39 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8442
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %39, i32 0, i32 6, !dbg !8443
  %40 = load i32, i32* %quirks, align 8, !dbg !8443
  %and47 = and i32 %40, 128, !dbg !8444
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8444
  br i1 %tobool48, label %lor.lhs.false49, label %if.then52, !dbg !8445

lor.lhs.false49:                                  ; preds = %lor.lhs.false46
  %41 = load i8, i8* %do_data_tag, align 1, !dbg !8446
  %tobool50 = trunc i8 %41 to i1, !dbg !8446
  br i1 %tobool50, label %if.then52, label %if.end70, !dbg !8447

if.then52:                                        ; preds = %lor.lhs.false49, %lor.lhs.false46, %land.lhs.true43
  %42 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8448
  %sbc = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %42, i32 0, i32 1, !dbg !8450
  %opcode53 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 0, !dbg !8451
  store i32 23, i32* %opcode53, align 8, !dbg !8452
  %43 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8453
  %data54 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %43, i32 0, i32 4, !dbg !8454
  %blocks55 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data54, i32 0, i32 3, !dbg !8455
  %44 = load i32, i32* %blocks55, align 4, !dbg !8455
  %45 = load i8, i8* %do_rel_wr, align 1, !dbg !8456
  %tobool56 = trunc i8 %45 to i1, !dbg !8456
  %46 = zext i1 %tobool56 to i64, !dbg !8456
  %cond58 = select i1 %tobool56, i32 -2147483648, i32 0, !dbg !8456
  %or = or i32 %44, %cond58, !dbg !8457
  %47 = load i8, i8* %do_data_tag, align 1, !dbg !8458
  %tobool59 = trunc i8 %47 to i1, !dbg !8458
  %48 = zext i1 %tobool59 to i64, !dbg !8458
  %cond61 = select i1 %tobool59, i32 536870912, i32 0, !dbg !8458
  %or62 = or i32 %or, %cond61, !dbg !8459
  %49 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8460
  %sbc63 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %49, i32 0, i32 1, !dbg !8461
  %arg64 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc63, i32 0, i32 1, !dbg !8462
  store i32 %or62, i32* %arg64, align 4, !dbg !8463
  %50 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8464
  %sbc65 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %50, i32 0, i32 1, !dbg !8465
  %flags66 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc65, i32 0, i32 3, !dbg !8466
  store i32 21, i32* %flags66, align 8, !dbg !8467
  %51 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8468
  %sbc67 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %51, i32 0, i32 1, !dbg !8469
  %52 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8470
  %mrq68 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %52, i32 0, i32 0, !dbg !8471
  %sbc69 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq68, i32 0, i32 0, !dbg !8472
  store %struct.mmc_command* %sbc67, %struct.mmc_command** %sbc69, align 8, !dbg !8473
  br label %if.end70, !dbg !8474

if.end70:                                         ; preds = %if.then52, %lor.lhs.false49, %land.lhs.true, %cond.end
  ret void, !dbg !8475
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_status(%struct.mmc_card*, i32*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.request* @mmc_queue_req_to_req(%struct.mmc_queue_req* %mqr) #0 !dbg !8476 {
entry:
  %mqr.addr = alloca %struct.mmc_queue_req*, align 8
  store %struct.mmc_queue_req* %mqr, %struct.mmc_queue_req** %mqr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqr.addr, metadata !8479, metadata !DIExpression()), !dbg !8480
  %0 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqr.addr, align 8, !dbg !8481
  %1 = bitcast %struct.mmc_queue_req* %0 to i8*, !dbg !8481
  %call = call %struct.request* @blk_mq_rq_from_pdu(i8* %1) #11, !dbg !8482
  ret %struct.request* %call, !dbg !8483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_data_prep(%struct.mmc_queue* %mq, %struct.mmc_queue_req* %mqrq, i32 %disable_multi, i8* %do_rel_wr_p, i8* %do_data_tag_p) #0 !dbg !8484 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %mqrq.addr = alloca %struct.mmc_queue_req*, align 8
  %disable_multi.addr = alloca i32, align 4
  %do_rel_wr_p.addr = alloca i8*, align 8
  %do_data_tag_p.addr = alloca i8*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %brq = alloca %struct.mmc_blk_request*, align 8
  %req = alloca %struct.request*, align 8
  %do_rel_wr = alloca i8, align 1
  %do_data_tag = alloca i8, align 1
  %i = alloca i32, align 4
  %data_size = alloca i32, align 4
  %sg152 = alloca %struct.scatterlist*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  store %struct.mmc_queue_req* %mqrq, %struct.mmc_queue_req** %mqrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq.addr, metadata !8489, metadata !DIExpression()), !dbg !8490
  store i32 %disable_multi, i32* %disable_multi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %disable_multi.addr, metadata !8491, metadata !DIExpression()), !dbg !8492
  store i8* %do_rel_wr_p, i8** %do_rel_wr_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %do_rel_wr_p.addr, metadata !8493, metadata !DIExpression()), !dbg !8494
  store i8* %do_data_tag_p, i8** %do_data_tag_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %do_data_tag_p.addr, metadata !8495, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !8497, metadata !DIExpression()), !dbg !8498
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8499
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 3, !dbg !8500
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !8500
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !8498
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !8501, metadata !DIExpression()), !dbg !8502
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !8503
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 2, !dbg !8504
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !8505
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !8505
  store %struct.mmc_card* %3, %struct.mmc_card** %card, align 8, !dbg !8502
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq, metadata !8506, metadata !DIExpression()), !dbg !8507
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8508
  %brq2 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %4, i32 0, i32 0, !dbg !8509
  store %struct.mmc_blk_request* %brq2, %struct.mmc_blk_request** %brq, align 8, !dbg !8507
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !8510, metadata !DIExpression()), !dbg !8511
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8512
  %call = call %struct.request* @mmc_queue_req_to_req(%struct.mmc_queue_req* %5) #11, !dbg !8513
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !8511
  call void @llvm.dbg.declare(metadata i8* %do_rel_wr, metadata !8514, metadata !DIExpression()), !dbg !8515
  call void @llvm.dbg.declare(metadata i8* %do_data_tag, metadata !8516, metadata !DIExpression()), !dbg !8517
  %6 = load %struct.request*, %struct.request** %req, align 8, !dbg !8518
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %6, i32 0, i32 3, !dbg !8519
  %7 = load i32, i32* %cmd_flags, align 8, !dbg !8519
  %conv = zext i32 %7 to i64, !dbg !8518
  %and = and i64 %conv, 131072, !dbg !8520
  %tobool = icmp ne i64 %and, 0, !dbg !8520
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !8521

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.request*, %struct.request** %req, align 8, !dbg !8522
  %cmd_flags3 = getelementptr inbounds %struct.request, %struct.request* %8, i32 0, i32 3, !dbg !8522
  %9 = load i32, i32* %cmd_flags3, align 8, !dbg !8522
  %and4 = and i32 %9, 255, !dbg !8522
  %call5 = call zeroext i1 @op_is_write(i32 %and4) #11, !dbg !8522
  %10 = zext i1 %call5 to i64, !dbg !8522
  %cond = select i1 %call5, i32 1, i32 0, !dbg !8522
  %cmp = icmp eq i32 %cond, 1, !dbg !8523
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8524

land.rhs:                                         ; preds = %land.lhs.true
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !8525
  %flags = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %11, i32 0, i32 5, !dbg !8526
  %12 = load i32, i32* %flags, align 8, !dbg !8526
  %and8 = and i32 %12, 2, !dbg !8527
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8524
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool9, %land.rhs ], !dbg !8528
  %frombool = zext i1 %13 to i8, !dbg !8529
  store i8 %frombool, i8* %do_rel_wr, align 1, !dbg !8529
  %14 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8530
  %15 = bitcast %struct.mmc_blk_request* %14 to i8*, !dbg !8531
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 352, i1 false), !dbg !8531
  %16 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8532
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %16, i32 0, i32 4, !dbg !8533
  %17 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8534
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %17, i32 0, i32 0, !dbg !8535
  %data10 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 2, !dbg !8536
  store %struct.mmc_data* %data, %struct.mmc_data** %data10, align 8, !dbg !8537
  %18 = load %struct.request*, %struct.request** %req, align 8, !dbg !8538
  %tag = getelementptr inbounds %struct.request, %struct.request* %18, i32 0, i32 5, !dbg !8539
  %19 = load i32, i32* %tag, align 8, !dbg !8539
  %20 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8540
  %mrq11 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %20, i32 0, i32 0, !dbg !8541
  %tag12 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq11, i32 0, i32 10, !dbg !8542
  store i32 %19, i32* %tag12, align 4, !dbg !8543
  %21 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8544
  %stop = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %21, i32 0, i32 3, !dbg !8545
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop, i32 0, i32 0, !dbg !8546
  store i32 12, i32* %opcode, align 8, !dbg !8547
  %22 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8548
  %stop13 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %22, i32 0, i32 3, !dbg !8549
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop13, i32 0, i32 1, !dbg !8550
  store i32 0, i32* %arg, align 4, !dbg !8551
  %23 = load %struct.request*, %struct.request** %req, align 8, !dbg !8552
  %cmd_flags14 = getelementptr inbounds %struct.request, %struct.request* %23, i32 0, i32 3, !dbg !8552
  %24 = load i32, i32* %cmd_flags14, align 8, !dbg !8552
  %and15 = and i32 %24, 255, !dbg !8552
  %call16 = call zeroext i1 @op_is_write(i32 %and15) #11, !dbg !8552
  %25 = zext i1 %call16 to i64, !dbg !8552
  %cond18 = select i1 %call16, i32 1, i32 0, !dbg !8552
  %cmp19 = icmp eq i32 %cond18, 0, !dbg !8554
  br i1 %cmp19, label %if.then, label %if.else, !dbg !8555

if.then:                                          ; preds = %land.end
  %26 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8556
  %data21 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %26, i32 0, i32 4, !dbg !8558
  %flags22 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data21, i32 0, i32 6, !dbg !8559
  store i32 512, i32* %flags22, align 8, !dbg !8560
  %27 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8561
  %stop23 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %27, i32 0, i32 3, !dbg !8562
  %flags24 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop23, i32 0, i32 3, !dbg !8563
  store i32 149, i32* %flags24, align 8, !dbg !8564
  br label %if.end, !dbg !8565

if.else:                                          ; preds = %land.end
  %28 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8566
  %data25 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %28, i32 0, i32 4, !dbg !8568
  %flags26 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data25, i32 0, i32 6, !dbg !8569
  store i32 256, i32* %flags26, align 8, !dbg !8570
  %29 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8571
  %stop27 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %29, i32 0, i32 3, !dbg !8572
  %flags28 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop27, i32 0, i32 3, !dbg !8573
  store i32 1181, i32* %flags28, align 8, !dbg !8574
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8575
  %data29 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %30, i32 0, i32 4, !dbg !8576
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data29, i32 0, i32 2, !dbg !8577
  store i32 512, i32* %blksz, align 8, !dbg !8578
  %31 = load %struct.request*, %struct.request** %req, align 8, !dbg !8579
  %call30 = call i32 @blk_rq_sectors(%struct.request* %31) #11, !dbg !8580
  %32 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8581
  %data31 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %32, i32 0, i32 4, !dbg !8582
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data31, i32 0, i32 3, !dbg !8583
  store i32 %call30, i32* %blocks, align 4, !dbg !8584
  %33 = load %struct.request*, %struct.request** %req, align 8, !dbg !8585
  %call32 = call i64 @blk_rq_pos(%struct.request* %33) #11, !dbg !8586
  %conv33 = trunc i64 %call32 to i32, !dbg !8586
  %34 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8587
  %data34 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %34, i32 0, i32 4, !dbg !8588
  %blk_addr = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data34, i32 0, i32 4, !dbg !8589
  store i32 %conv33, i32* %blk_addr, align 8, !dbg !8590
  %35 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8591
  %data35 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %35, i32 0, i32 4, !dbg !8593
  %blocks36 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data35, i32 0, i32 3, !dbg !8594
  %36 = load i32, i32* %blocks36, align 4, !dbg !8594
  %37 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8595
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %37, i32 0, i32 0, !dbg !8596
  %38 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8596
  %max_blk_count = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %38, i32 0, i32 26, !dbg !8597
  %39 = load i32, i32* %max_blk_count, align 4, !dbg !8597
  %cmp37 = icmp ugt i32 %36, %39, !dbg !8598
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !8599

if.then39:                                        ; preds = %if.end
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8600
  %host40 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 0, !dbg !8601
  %41 = load %struct.mmc_host*, %struct.mmc_host** %host40, align 8, !dbg !8601
  %max_blk_count41 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %41, i32 0, i32 26, !dbg !8602
  %42 = load i32, i32* %max_blk_count41, align 4, !dbg !8602
  %43 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8603
  %data42 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %43, i32 0, i32 4, !dbg !8604
  %blocks43 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data42, i32 0, i32 3, !dbg !8605
  store i32 %42, i32* %blocks43, align 4, !dbg !8606
  br label %if.end44, !dbg !8603

if.end44:                                         ; preds = %if.then39, %if.end
  %44 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8607
  %data45 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %44, i32 0, i32 4, !dbg !8609
  %blocks46 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data45, i32 0, i32 3, !dbg !8610
  %45 = load i32, i32* %blocks46, align 4, !dbg !8610
  %cmp47 = icmp ugt i32 %45, 1, !dbg !8611
  br i1 %cmp47, label %if.then49, label %if.end98, !dbg !8612

if.then49:                                        ; preds = %if.end44
  %46 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8613
  %host50 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %46, i32 0, i32 0, !dbg !8613
  %47 = load %struct.mmc_host*, %struct.mmc_host** %host50, align 8, !dbg !8613
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %47, i32 0, i32 17, !dbg !8613
  %48 = load i32, i32* %caps, align 4, !dbg !8613
  %and51 = and i32 %48, 16, !dbg !8613
  %tobool52 = icmp ne i32 %and51, 0, !dbg !8613
  br i1 %tobool52, label %land.lhs.true53, label %if.end71, !dbg !8616

land.lhs.true53:                                  ; preds = %if.then49
  %49 = load %struct.request*, %struct.request** %req, align 8, !dbg !8617
  %cmd_flags54 = getelementptr inbounds %struct.request, %struct.request* %49, i32 0, i32 3, !dbg !8617
  %50 = load i32, i32* %cmd_flags54, align 8, !dbg !8617
  %and55 = and i32 %50, 255, !dbg !8617
  %call56 = call zeroext i1 @op_is_write(i32 %and55) #11, !dbg !8617
  %51 = zext i1 %call56 to i64, !dbg !8617
  %cond58 = select i1 %call56, i32 1, i32 0, !dbg !8617
  %cmp59 = icmp eq i32 %cond58, 0, !dbg !8618
  br i1 %cmp59, label %land.lhs.true61, label %if.end71, !dbg !8619

land.lhs.true61:                                  ; preds = %land.lhs.true53
  %52 = load %struct.request*, %struct.request** %req, align 8, !dbg !8620
  %call62 = call i64 @blk_rq_pos(%struct.request* %52) #11, !dbg !8621
  %53 = load %struct.request*, %struct.request** %req, align 8, !dbg !8622
  %call63 = call i32 @blk_rq_sectors(%struct.request* %53) #11, !dbg !8623
  %conv64 = zext i32 %call63 to i64, !dbg !8623
  %add = add i64 %call62, %conv64, !dbg !8624
  %54 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !8625
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %54, i32 0, i32 1, !dbg !8626
  %55 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !8626
  %call65 = call i64 @get_capacity(%struct.gendisk* %55) #11, !dbg !8627
  %cmp66 = icmp eq i64 %add, %call65, !dbg !8628
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !8629

if.then68:                                        ; preds = %land.lhs.true61
  %56 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8630
  %data69 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %56, i32 0, i32 4, !dbg !8631
  %blocks70 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data69, i32 0, i32 3, !dbg !8632
  %57 = load i32, i32* %blocks70, align 4, !dbg !8633
  %dec = add i32 %57, -1, !dbg !8633
  store i32 %dec, i32* %blocks70, align 4, !dbg !8633
  br label %if.end71, !dbg !8630

if.end71:                                         ; preds = %if.then68, %land.lhs.true61, %land.lhs.true53, %if.then49
  %58 = load i32, i32* %disable_multi.addr, align 4, !dbg !8634
  %tobool72 = icmp ne i32 %58, 0, !dbg !8634
  br i1 %tobool72, label %if.then73, label %if.end76, !dbg !8636

if.then73:                                        ; preds = %if.end71
  %59 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8637
  %data74 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %59, i32 0, i32 4, !dbg !8638
  %blocks75 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data74, i32 0, i32 3, !dbg !8639
  store i32 1, i32* %blocks75, align 4, !dbg !8640
  br label %if.end76, !dbg !8637

if.end76:                                         ; preds = %if.then73, %if.end71
  %60 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8641
  %host77 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %60, i32 0, i32 0, !dbg !8643
  %61 = load %struct.mmc_host*, %struct.mmc_host** %host77, align 8, !dbg !8643
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %61, i32 0, i32 3, !dbg !8644
  %62 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !8644
  %multi_io_quirk = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %62, i32 0, i32 21, !dbg !8645
  %63 = load i32 (%struct.mmc_card*, i32, i32)*, i32 (%struct.mmc_card*, i32, i32)** %multi_io_quirk, align 8, !dbg !8645
  %tobool78 = icmp ne i32 (%struct.mmc_card*, i32, i32)* %63, null, !dbg !8641
  br i1 %tobool78, label %if.then79, label %if.end97, !dbg !8646

if.then79:                                        ; preds = %if.end76
  %64 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8647
  %host80 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %64, i32 0, i32 0, !dbg !8648
  %65 = load %struct.mmc_host*, %struct.mmc_host** %host80, align 8, !dbg !8648
  %ops81 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %65, i32 0, i32 3, !dbg !8649
  %66 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops81, align 8, !dbg !8649
  %multi_io_quirk82 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %66, i32 0, i32 21, !dbg !8650
  %67 = load i32 (%struct.mmc_card*, i32, i32)*, i32 (%struct.mmc_card*, i32, i32)** %multi_io_quirk82, align 8, !dbg !8650
  %68 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8651
  %69 = load %struct.request*, %struct.request** %req, align 8, !dbg !8652
  %cmd_flags83 = getelementptr inbounds %struct.request, %struct.request* %69, i32 0, i32 3, !dbg !8652
  %70 = load i32, i32* %cmd_flags83, align 8, !dbg !8652
  %and84 = and i32 %70, 255, !dbg !8652
  %call85 = call zeroext i1 @op_is_write(i32 %and84) #11, !dbg !8652
  %71 = zext i1 %call85 to i64, !dbg !8652
  %cond87 = select i1 %call85, i32 1, i32 0, !dbg !8652
  %cmp88 = icmp eq i32 %cond87, 0, !dbg !8653
  %72 = zext i1 %cmp88 to i64, !dbg !8654
  %cond90 = select i1 %cmp88, i64 512, i64 256, !dbg !8654
  %conv91 = trunc i64 %cond90 to i32, !dbg !8654
  %73 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8655
  %data92 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %73, i32 0, i32 4, !dbg !8656
  %blocks93 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data92, i32 0, i32 3, !dbg !8657
  %74 = load i32, i32* %blocks93, align 4, !dbg !8657
  %call94 = call i32 %67(%struct.mmc_card* %68, i32 %conv91, i32 %74) #11, !dbg !8647
  %75 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8658
  %data95 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %75, i32 0, i32 4, !dbg !8659
  %blocks96 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data95, i32 0, i32 3, !dbg !8660
  store i32 %call94, i32* %blocks96, align 4, !dbg !8661
  br label %if.end97, !dbg !8658

if.end97:                                         ; preds = %if.then79, %if.end76
  br label %if.end98, !dbg !8662

if.end98:                                         ; preds = %if.end97, %if.end44
  %76 = load i8, i8* %do_rel_wr, align 1, !dbg !8663
  %tobool99 = trunc i8 %76 to i1, !dbg !8663
  br i1 %tobool99, label %if.then100, label %if.end105, !dbg !8665

if.then100:                                       ; preds = %if.end98
  %77 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8666
  %78 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8668
  %79 = load %struct.request*, %struct.request** %req, align 8, !dbg !8669
  call void @mmc_apply_rel_rw(%struct.mmc_blk_request* %77, %struct.mmc_card* %78, %struct.request* %79) #11, !dbg !8670
  %80 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8671
  %data101 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %80, i32 0, i32 4, !dbg !8672
  %flags102 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data101, i32 0, i32 6, !dbg !8673
  %81 = load i32, i32* %flags102, align 8, !dbg !8674
  %conv103 = zext i32 %81 to i64, !dbg !8674
  %or = or i64 %conv103, 4096, !dbg !8674
  %conv104 = trunc i64 %or to i32, !dbg !8674
  store i32 %conv104, i32* %flags102, align 8, !dbg !8674
  br label %if.end105, !dbg !8675

if.end105:                                        ; preds = %if.then100, %if.end98
  %82 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8676
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %82, i32 0, i32 21, !dbg !8677
  %data_tag_unit_size = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 36, !dbg !8678
  %83 = load i32, i32* %data_tag_unit_size, align 8, !dbg !8678
  %tobool106 = icmp ne i32 %83, 0, !dbg !8676
  br i1 %tobool106, label %land.lhs.true107, label %land.end129, !dbg !8679

land.lhs.true107:                                 ; preds = %if.end105
  %84 = load %struct.request*, %struct.request** %req, align 8, !dbg !8680
  %cmd_flags108 = getelementptr inbounds %struct.request, %struct.request* %84, i32 0, i32 3, !dbg !8681
  %85 = load i32, i32* %cmd_flags108, align 8, !dbg !8681
  %conv109 = zext i32 %85 to i64, !dbg !8680
  %and110 = and i64 %conv109, 4096, !dbg !8682
  %tobool111 = icmp ne i64 %and110, 0, !dbg !8682
  br i1 %tobool111, label %land.lhs.true112, label %land.end129, !dbg !8683

land.lhs.true112:                                 ; preds = %land.lhs.true107
  %86 = load %struct.request*, %struct.request** %req, align 8, !dbg !8684
  %cmd_flags113 = getelementptr inbounds %struct.request, %struct.request* %86, i32 0, i32 3, !dbg !8684
  %87 = load i32, i32* %cmd_flags113, align 8, !dbg !8684
  %and114 = and i32 %87, 255, !dbg !8684
  %call115 = call zeroext i1 @op_is_write(i32 %and114) #11, !dbg !8684
  %88 = zext i1 %call115 to i64, !dbg !8684
  %cond117 = select i1 %call115, i32 1, i32 0, !dbg !8684
  %cmp118 = icmp eq i32 %cond117, 1, !dbg !8685
  br i1 %cmp118, label %land.rhs120, label %land.end129, !dbg !8686

land.rhs120:                                      ; preds = %land.lhs.true112
  %89 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8687
  %data121 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %89, i32 0, i32 4, !dbg !8688
  %blocks122 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data121, i32 0, i32 3, !dbg !8689
  %90 = load i32, i32* %blocks122, align 4, !dbg !8689
  %91 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8690
  %data123 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %91, i32 0, i32 4, !dbg !8691
  %blksz124 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data123, i32 0, i32 2, !dbg !8692
  %92 = load i32, i32* %blksz124, align 8, !dbg !8692
  %mul = mul i32 %90, %92, !dbg !8693
  %93 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8694
  %ext_csd125 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %93, i32 0, i32 21, !dbg !8695
  %data_tag_unit_size126 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd125, i32 0, i32 36, !dbg !8696
  %94 = load i32, i32* %data_tag_unit_size126, align 8, !dbg !8696
  %cmp127 = icmp uge i32 %mul, %94, !dbg !8697
  br label %land.end129

land.end129:                                      ; preds = %land.rhs120, %land.lhs.true112, %land.lhs.true107, %if.end105
  %95 = phi i1 [ false, %land.lhs.true112 ], [ false, %land.lhs.true107 ], [ false, %if.end105 ], [ %cmp127, %land.rhs120 ], !dbg !8528
  %frombool130 = zext i1 %95 to i8, !dbg !8698
  store i8 %frombool130, i8* %do_data_tag, align 1, !dbg !8698
  %96 = load i8, i8* %do_data_tag, align 1, !dbg !8699
  %tobool131 = trunc i8 %96 to i1, !dbg !8699
  br i1 %tobool131, label %if.then132, label %if.end138, !dbg !8701

if.then132:                                       ; preds = %land.end129
  %97 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8702
  %data133 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %97, i32 0, i32 4, !dbg !8703
  %flags134 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data133, i32 0, i32 6, !dbg !8704
  %98 = load i32, i32* %flags134, align 8, !dbg !8705
  %conv135 = zext i32 %98 to i64, !dbg !8705
  %or136 = or i64 %conv135, 8192, !dbg !8705
  %conv137 = trunc i64 %or136 to i32, !dbg !8705
  store i32 %conv137, i32* %flags134, align 8, !dbg !8705
  br label %if.end138, !dbg !8702

if.end138:                                        ; preds = %if.then132, %land.end129
  %99 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8706
  %data139 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %99, i32 0, i32 4, !dbg !8707
  %100 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8708
  call void @mmc_set_data_timeout(%struct.mmc_data* %data139, %struct.mmc_card* %100) #11, !dbg !8709
  %101 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8710
  %sg = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %101, i32 0, i32 1, !dbg !8711
  %102 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !8711
  %103 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8712
  %data140 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %103, i32 0, i32 4, !dbg !8713
  %sg141 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data140, i32 0, i32 12, !dbg !8714
  store %struct.scatterlist* %102, %struct.scatterlist** %sg141, align 8, !dbg !8715
  %104 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8716
  %105 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8717
  %call142 = call i32 @mmc_queue_map_sg(%struct.mmc_queue* %104, %struct.mmc_queue_req* %105) #11, !dbg !8718
  %106 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8719
  %data143 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %106, i32 0, i32 4, !dbg !8720
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data143, i32 0, i32 10, !dbg !8721
  store i32 %call142, i32* %sg_len, align 8, !dbg !8722
  %107 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8723
  %data144 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %107, i32 0, i32 4, !dbg !8725
  %blocks145 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data144, i32 0, i32 3, !dbg !8726
  %108 = load i32, i32* %blocks145, align 4, !dbg !8726
  %109 = load %struct.request*, %struct.request** %req, align 8, !dbg !8727
  %call146 = call i32 @blk_rq_sectors(%struct.request* %109) #11, !dbg !8728
  %cmp147 = icmp ne i32 %108, %call146, !dbg !8729
  br i1 %cmp147, label %if.then149, label %if.end169, !dbg !8730

if.then149:                                       ; preds = %if.end138
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8731, metadata !DIExpression()), !dbg !8733
  call void @llvm.dbg.declare(metadata i32* %data_size, metadata !8734, metadata !DIExpression()), !dbg !8735
  %110 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8736
  %data150 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %110, i32 0, i32 4, !dbg !8737
  %blocks151 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data150, i32 0, i32 3, !dbg !8738
  %111 = load i32, i32* %blocks151, align 4, !dbg !8738
  %shl = shl i32 %111, 9, !dbg !8739
  store i32 %shl, i32* %data_size, align 4, !dbg !8735
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg152, metadata !8740, metadata !DIExpression()), !dbg !8741
  store i32 0, i32* %i, align 4, !dbg !8742
  %112 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8742
  %data153 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %112, i32 0, i32 4, !dbg !8742
  %sg154 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data153, i32 0, i32 12, !dbg !8742
  %113 = load %struct.scatterlist*, %struct.scatterlist** %sg154, align 8, !dbg !8742
  store %struct.scatterlist* %113, %struct.scatterlist** %sg152, align 8, !dbg !8742
  br label %for.cond, !dbg !8742

for.cond:                                         ; preds = %for.inc, %if.then149
  %114 = load i32, i32* %i, align 4, !dbg !8744
  %115 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8744
  %data155 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %115, i32 0, i32 4, !dbg !8744
  %sg_len156 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data155, i32 0, i32 10, !dbg !8744
  %116 = load i32, i32* %sg_len156, align 8, !dbg !8744
  %cmp157 = icmp ult i32 %114, %116, !dbg !8744
  br i1 %cmp157, label %for.body, label %for.end, !dbg !8742

for.body:                                         ; preds = %for.cond
  %117 = load %struct.scatterlist*, %struct.scatterlist** %sg152, align 8, !dbg !8746
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %117, i32 0, i32 2, !dbg !8748
  %118 = load i32, i32* %length, align 4, !dbg !8748
  %119 = load i32, i32* %data_size, align 4, !dbg !8749
  %sub = sub i32 %119, %118, !dbg !8749
  store i32 %sub, i32* %data_size, align 4, !dbg !8749
  %120 = load i32, i32* %data_size, align 4, !dbg !8750
  %cmp159 = icmp sle i32 %120, 0, !dbg !8752
  br i1 %cmp159, label %if.then161, label %if.end164, !dbg !8753

if.then161:                                       ; preds = %for.body
  %121 = load i32, i32* %data_size, align 4, !dbg !8754
  %122 = load %struct.scatterlist*, %struct.scatterlist** %sg152, align 8, !dbg !8756
  %length162 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %122, i32 0, i32 2, !dbg !8757
  %123 = load i32, i32* %length162, align 4, !dbg !8758
  %add163 = add i32 %123, %121, !dbg !8758
  store i32 %add163, i32* %length162, align 4, !dbg !8758
  %124 = load i32, i32* %i, align 4, !dbg !8759
  %inc = add i32 %124, 1, !dbg !8759
  store i32 %inc, i32* %i, align 4, !dbg !8759
  br label %for.end, !dbg !8760

if.end164:                                        ; preds = %for.body
  br label %for.inc, !dbg !8761

for.inc:                                          ; preds = %if.end164
  %125 = load i32, i32* %i, align 4, !dbg !8744
  %inc165 = add i32 %125, 1, !dbg !8744
  store i32 %inc165, i32* %i, align 4, !dbg !8744
  %126 = load %struct.scatterlist*, %struct.scatterlist** %sg152, align 8, !dbg !8744
  %call166 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %126) #11, !dbg !8744
  store %struct.scatterlist* %call166, %struct.scatterlist** %sg152, align 8, !dbg !8744
  br label %for.cond, !dbg !8744, !llvm.loop !8762

for.end:                                          ; preds = %if.then161, %for.cond
  %127 = load i32, i32* %i, align 4, !dbg !8764
  %128 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !8765
  %data167 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %128, i32 0, i32 4, !dbg !8766
  %sg_len168 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data167, i32 0, i32 10, !dbg !8767
  store i32 %127, i32* %sg_len168, align 8, !dbg !8768
  br label %if.end169, !dbg !8769

if.end169:                                        ; preds = %for.end, %if.end138
  %129 = load i8*, i8** %do_rel_wr_p.addr, align 8, !dbg !8770
  %tobool170 = icmp ne i8* %129, null, !dbg !8770
  br i1 %tobool170, label %if.then171, label %if.end174, !dbg !8772

if.then171:                                       ; preds = %if.end169
  %130 = load i8, i8* %do_rel_wr, align 1, !dbg !8773
  %tobool172 = trunc i8 %130 to i1, !dbg !8773
  %131 = load i8*, i8** %do_rel_wr_p.addr, align 8, !dbg !8774
  %frombool173 = zext i1 %tobool172 to i8, !dbg !8775
  store i8 %frombool173, i8* %131, align 1, !dbg !8775
  br label %if.end174, !dbg !8776

if.end174:                                        ; preds = %if.then171, %if.end169
  %132 = load i8*, i8** %do_data_tag_p.addr, align 8, !dbg !8777
  %tobool175 = icmp ne i8* %132, null, !dbg !8777
  br i1 %tobool175, label %if.then176, label %if.end179, !dbg !8779

if.then176:                                       ; preds = %if.end174
  %133 = load i8, i8* %do_data_tag, align 1, !dbg !8780
  %tobool177 = trunc i8 %133 to i1, !dbg !8780
  %134 = load i8*, i8** %do_data_tag_p.addr, align 8, !dbg !8781
  %frombool178 = zext i1 %tobool177 to i8, !dbg !8782
  store i8 %frombool178, i8* %134, align 1, !dbg !8782
  br label %if.end179, !dbg !8783

if.end179:                                        ; preds = %if.then176, %if.end174
  ret void, !dbg !8784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @blk_rq_pos(%struct.request* %rq) #0 !dbg !8785 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8790
  %__sector = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 8, !dbg !8791
  %1 = load i64, i64* %__sector, align 8, !dbg !8791
  ret i64 %1, !dbg !8792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_op_multi(i32 %opcode) #0 !dbg !8793 {
entry:
  %opcode.addr = alloca i32, align 4
  store i32 %opcode, i32* %opcode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcode.addr, metadata !8794, metadata !DIExpression()), !dbg !8795
  %0 = load i32, i32* %opcode.addr, align 4, !dbg !8796
  %cmp = icmp eq i32 %0, 25, !dbg !8797
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8798

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %opcode.addr, align 4, !dbg !8799
  %cmp1 = icmp eq i32 %1, 18, !dbg !8800
  br label %lor.end, !dbg !8798

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !8801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.request* @blk_mq_rq_from_pdu(i8* %pdu) #0 !dbg !8802 {
entry:
  %pdu.addr = alloca i8*, align 8
  store i8* %pdu, i8** %pdu.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pdu.addr, metadata !8805, metadata !DIExpression()), !dbg !8806
  %0 = load i8*, i8** %pdu.addr, align 8, !dbg !8807
  %add.ptr = getelementptr i8, i8* %0, i64 -272, !dbg !8808
  %1 = bitcast i8* %add.ptr to %struct.request*, !dbg !8807
  ret %struct.request* %1, !dbg !8809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @blk_rq_sectors(%struct.request* %rq) #0 !dbg !8810 {
entry:
  %rq.addr = alloca %struct.request*, align 8
  store %struct.request* %rq, %struct.request** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %rq.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  %0 = load %struct.request*, %struct.request** %rq.addr, align 8, !dbg !8813
  %call = call i32 @blk_rq_bytes(%struct.request* %0) #11, !dbg !8814
  %shr = lshr i32 %call, 9, !dbg !8815
  ret i32 %shr, !dbg !8816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_capacity(%struct.gendisk* %disk) #0 !dbg !8817 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !8822
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %0, i32 0, i32 7, !dbg !8823
  %nr_sects = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 1, !dbg !8824
  %1 = load i64, i64* %nr_sects, align 8, !dbg !8824
  ret i64 %1, !dbg !8825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_apply_rel_rw(%struct.mmc_blk_request* %brq, %struct.mmc_card* %card, %struct.request* %req) #0 !dbg !8826 {
entry:
  %brq.addr = alloca %struct.mmc_blk_request*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %req.addr = alloca %struct.request*, align 8
  store %struct.mmc_blk_request* %brq, %struct.mmc_blk_request** %brq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq.addr, metadata !8829, metadata !DIExpression()), !dbg !8830
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8831, metadata !DIExpression()), !dbg !8832
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8835
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !8837
  %rel_param = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 4, !dbg !8838
  %1 = load i8, i8* %rel_param, align 4, !dbg !8838
  %conv = zext i8 %1 to i32, !dbg !8835
  %and = and i32 %conv, 4, !dbg !8839
  %tobool = icmp ne i32 %and, 0, !dbg !8839
  br i1 %tobool, label %if.end31, label %if.then, !dbg !8840

if.then:                                          ; preds = %entry
  %2 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !8841
  %call = call i64 @blk_rq_pos(%struct.request* %2) #11, !dbg !8841
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8841
  %ext_csd1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 21, !dbg !8841
  %rel_sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd1, i32 0, i32 3, !dbg !8841
  %4 = load i8, i8* %rel_sectors, align 1, !dbg !8841
  %conv2 = zext i8 %4 to i64, !dbg !8841
  %sub = sub i64 %conv2, 1, !dbg !8841
  %and3 = and i64 %call, %sub, !dbg !8841
  %cmp = icmp eq i64 %and3, 0, !dbg !8841
  br i1 %cmp, label %if.end, label %if.then5, !dbg !8844

if.then5:                                         ; preds = %if.then
  %5 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8845
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %5, i32 0, i32 4, !dbg !8846
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 3, !dbg !8847
  store i32 1, i32* %blocks, align 4, !dbg !8848
  br label %if.end, !dbg !8845

if.end:                                           ; preds = %if.then5, %if.then
  %6 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8849
  %data6 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %6, i32 0, i32 4, !dbg !8851
  %blocks7 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data6, i32 0, i32 3, !dbg !8852
  %7 = load i32, i32* %blocks7, align 4, !dbg !8852
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8853
  %ext_csd8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 21, !dbg !8854
  %rel_sectors9 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd8, i32 0, i32 3, !dbg !8855
  %9 = load i8, i8* %rel_sectors9, align 1, !dbg !8855
  %conv10 = zext i8 %9 to i32, !dbg !8853
  %cmp11 = icmp ugt i32 %7, %conv10, !dbg !8856
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !8857

if.then13:                                        ; preds = %if.end
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8858
  %ext_csd14 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 21, !dbg !8859
  %rel_sectors15 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd14, i32 0, i32 3, !dbg !8860
  %11 = load i8, i8* %rel_sectors15, align 1, !dbg !8860
  %conv16 = zext i8 %11 to i32, !dbg !8858
  %12 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8861
  %data17 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %12, i32 0, i32 4, !dbg !8862
  %blocks18 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data17, i32 0, i32 3, !dbg !8863
  store i32 %conv16, i32* %blocks18, align 4, !dbg !8864
  br label %if.end30, !dbg !8861

if.else:                                          ; preds = %if.end
  %13 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8865
  %data19 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %13, i32 0, i32 4, !dbg !8867
  %blocks20 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data19, i32 0, i32 3, !dbg !8868
  %14 = load i32, i32* %blocks20, align 4, !dbg !8868
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8869
  %ext_csd21 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 21, !dbg !8870
  %rel_sectors22 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd21, i32 0, i32 3, !dbg !8871
  %16 = load i8, i8* %rel_sectors22, align 1, !dbg !8871
  %conv23 = zext i8 %16 to i32, !dbg !8869
  %cmp24 = icmp ult i32 %14, %conv23, !dbg !8872
  br i1 %cmp24, label %if.then26, label %if.end29, !dbg !8873

if.then26:                                        ; preds = %if.else
  %17 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq.addr, align 8, !dbg !8874
  %data27 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %17, i32 0, i32 4, !dbg !8875
  %blocks28 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data27, i32 0, i32 3, !dbg !8876
  store i32 1, i32* %blocks28, align 4, !dbg !8877
  br label %if.end29, !dbg !8874

if.end29:                                         ; preds = %if.then26, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then13
  br label %if.end31, !dbg !8878

if.end31:                                         ; preds = %if.end30, %entry
  ret void, !dbg !8879
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_queue_map_sg(%struct.mmc_queue*, %struct.mmc_queue_req*) #2

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_blk_urgent_bkops_needed(%struct.mmc_queue* %mq, %struct.mmc_queue_req* %mqrq) #0 !dbg !8880 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %mqrq.addr = alloca %struct.mmc_queue_req*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !8883, metadata !DIExpression()), !dbg !8884
  store %struct.mmc_queue_req* %mqrq, %struct.mmc_queue_req** %mqrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq.addr, metadata !8885, metadata !DIExpression()), !dbg !8886
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8887
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %0, i32 0, i32 0, !dbg !8887
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8887
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 4, !dbg !8887
  %2 = load i32, i32* %type, align 8, !dbg !8887
  %cmp = icmp eq i32 %2, 0, !dbg !8887
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8888

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8889
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %3, i32 0, i32 0, !dbg !8889
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !8889
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 0, !dbg !8889
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8889
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 17, !dbg !8889
  %6 = load i32, i32* %caps, align 4, !dbg !8889
  %and = and i32 %6, 16, !dbg !8889
  %tobool = icmp ne i32 %and, 0, !dbg !8889
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !8890

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8891
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %7, i32 0, i32 0, !dbg !8892
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 2, !dbg !8893
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !8894
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !8891
  %8 = load i32, i32* %arrayidx, align 8, !dbg !8891
  %and2 = and i32 %8, 64, !dbg !8895
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8895
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !8896

lor.rhs:                                          ; preds = %land.rhs
  %9 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !8897
  %brq4 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %9, i32 0, i32 0, !dbg !8898
  %stop = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq4, i32 0, i32 3, !dbg !8899
  %resp5 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %stop, i32 0, i32 2, !dbg !8900
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %resp5, i64 0, i64 0, !dbg !8897
  %10 = load i32, i32* %arrayidx6, align 8, !dbg !8897
  %and7 = and i32 %10, 64, !dbg !8901
  %tobool8 = icmp ne i32 %and7, 0, !dbg !8896
  br label %lor.end, !dbg !8896

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %tobool8, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %11, %lor.end ], !dbg !8902
  ret i1 %12, !dbg !8903
}

; Function Attrs: noredzone
declare dso_local void @mmc_run_bkops(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_post_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq, i32 %err) #0 !dbg !8904 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %err.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8905, metadata !DIExpression()), !dbg !8906
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8911
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 3, !dbg !8913
  %1 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !8913
  %post_req = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %1, i32 0, i32 0, !dbg !8914
  %2 = load void (%struct.mmc_host*, %struct.mmc_request*, i32)*, void (%struct.mmc_host*, %struct.mmc_request*, i32)** %post_req, align 8, !dbg !8914
  %tobool = icmp ne void (%struct.mmc_host*, %struct.mmc_request*, i32)* %2, null, !dbg !8911
  br i1 %tobool, label %if.then, label %if.end, !dbg !8915

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8916
  %ops1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 3, !dbg !8917
  %4 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops1, align 8, !dbg !8917
  %post_req2 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %4, i32 0, i32 0, !dbg !8918
  %5 = load void (%struct.mmc_host*, %struct.mmc_request*, i32)*, void (%struct.mmc_host*, %struct.mmc_request*, i32)** %post_req2, align 8, !dbg !8918
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8919
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !8920
  %8 = load i32, i32* %err.addr, align 4, !dbg !8921
  call void %5(%struct.mmc_host* %6, %struct.mmc_request* %7, i32 %8) #11, !dbg !8916
  br label %if.end, !dbg !8916

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8922
}

; Function Attrs: noredzone
declare dso_local void @blk_mq_complete_request(%struct.request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_dec_in_flight(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !8923 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !5810, metadata !DIExpression()), !dbg !8924
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5817, metadata !DIExpression()), !dbg !8926
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5819, metadata !DIExpression()), !dbg !8927
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %flags = alloca i64, align 8
  %put_card = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !8934, metadata !DIExpression()), !dbg !8935
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !8936, metadata !DIExpression()), !dbg !8937
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8938, metadata !DIExpression()), !dbg !8939
  call void @llvm.dbg.declare(metadata i8* %put_card, metadata !8940, metadata !DIExpression()), !dbg !8941
  br label %do.body, !dbg !8942

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8943

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8944, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8947, metadata !DIExpression()), !dbg !8946
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8946
  %conv = zext i1 %cmp to i32, !dbg !8946
  store i32 1, i32* %tmp, align 4, !dbg !8946
  %0 = load i32, i32* %tmp, align 4, !dbg !8946
  br label %do.body2, !dbg !8948

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8949

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8950

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8952, metadata !DIExpression()), !dbg !8955
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8956, metadata !DIExpression()), !dbg !8955
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8955
  %conv8 = zext i1 %cmp7 to i32, !dbg !8955
  store i32 1, i32* %tmp9, align 4, !dbg !8955
  %1 = load i32, i32* %tmp9, align 4, !dbg !8955
  %call = call i64 @arch_local_irq_save() #11, !dbg !8957
  store i64 %call, i64* %flags, align 8, !dbg !8957
  br label %do.end, !dbg !8957

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8950

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8949

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8958, !srcloc !8959
  br label %do.body12, !dbg !8958

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8960
  %lock = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 5, !dbg !8960
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8961
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8962
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !8962
  br label %do.end14, !dbg !8960

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8958

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8949

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8948

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8943

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8963
  %in_flight = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %5, i32 0, i32 6, !dbg !8964
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8965
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !8966
  %call19 = call i32 @mmc_issue_type(%struct.mmc_queue* %6, %struct.request* %7) #11, !dbg !8967
  %idxprom = zext i32 %call19 to i64, !dbg !8963
  %arrayidx = getelementptr [3 x i32], [3 x i32]* %in_flight, i64 0, i64 %idxprom, !dbg !8963
  %8 = load i32, i32* %arrayidx, align 4, !dbg !8968
  %sub = sub i32 %8, 1, !dbg !8968
  store i32 %sub, i32* %arrayidx, align 4, !dbg !8968
  %9 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8969
  %call20 = call i32 @mmc_tot_in_flight(%struct.mmc_queue* %9) #11, !dbg !8970
  %cmp21 = icmp eq i32 %call20, 0, !dbg !8971
  %frombool = zext i1 %cmp21 to i8, !dbg !8972
  store i8 %frombool, i8* %put_card, align 1, !dbg !8972
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8973
  %lock23 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %10, i32 0, i32 5, !dbg !8974
  %11 = load i64, i64* %flags, align 8, !dbg !8975
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !312, metadata !5963, metadata !DIExpression()) #5, !dbg !8976
  call void @llvm.dbg.declare(metadata !312, metadata !5967, metadata !DIExpression()) #5, !dbg !8976
  store i32 1, i32* %tmp.i, align 4, !dbg !8976
  %12 = load i32, i32* %tmp.i, align 4, !dbg !8976
  call void @llvm.dbg.declare(metadata !312, metadata !5968, metadata !DIExpression()) #5, !dbg !8977
  call void @llvm.dbg.declare(metadata !312, metadata !5974, metadata !DIExpression()) #5, !dbg !8977
  store i32 1, i32* %tmp8.i, align 4, !dbg !8977
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !8977
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !8978
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !8978
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !8979, !srcloc !5978
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !8980
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8980
  %rlock.i25 = bitcast %union.anon.2* %16 to %struct.raw_spinlock*, !dbg !8980
  %17 = load i8, i8* %put_card, align 1, !dbg !8981
  %tobool = trunc i8 %17 to i1, !dbg !8981
  br i1 %tobool, label %if.then, label %if.end, !dbg !8983

if.then:                                          ; preds = %do.end18
  %18 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8984
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %18, i32 0, i32 0, !dbg !8985
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !8985
  %20 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !8986
  %ctx = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %20, i32 0, i32 1, !dbg !8987
  call void @mmc_put_card(%struct.mmc_card* %19, %struct.mmc_ctx* %ctx) #11, !dbg !8988
  br label %if.end, !dbg !8988

if.end:                                           ; preds = %if.then, %do.end18
  ret void, !dbg !8989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_host_done_complete(%struct.mmc_host* %host) #0 !dbg !8990 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8993, metadata !DIExpression()), !dbg !8994
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8995
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !8996
  %1 = load i32, i32* %caps, align 4, !dbg !8996
  %and = and i32 %1, 134217728, !dbg !8997
  %tobool = icmp ne i32 %and, 0, !dbg !8995
  ret i1 %tobool, !dbg !8998
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_poll_completion(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !8999 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %host = alloca %struct.mmc_host*, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !9004, metadata !DIExpression()), !dbg !9005
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9006
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !9007
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9005
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9008, metadata !DIExpression()), !dbg !9009
  %1 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9010
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %1, i32 0, i32 0, !dbg !9011
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9011
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !9012
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !9012
  store %struct.mmc_host* %3, %struct.mmc_host** %host, align 8, !dbg !9009
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9013
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %4, i32 0, i32 0, !dbg !9015
  %call2 = call zeroext i1 @mmc_blk_rq_error(%struct.mmc_blk_request* %brq) #11, !dbg !9016
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !9017

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9018
  %card3 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %5, i32 0, i32 0, !dbg !9019
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card3, align 8, !dbg !9019
  %7 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9020
  %call4 = call i32 @mmc_blk_card_busy(%struct.mmc_card* %6, %struct.request* %7) #11, !dbg !9021
  %tobool = icmp ne i32 %call4, 0, !dbg !9021
  br i1 %tobool, label %if.then, label %if.else, !dbg !9022

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9023
  %9 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9025
  call void @mmc_blk_mq_rw_recovery(%struct.mmc_queue* %8, %struct.request* %9) #11, !dbg !9026
  br label %if.end, !dbg !9027

if.else:                                          ; preds = %lor.lhs.false
  %10 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9028
  %11 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9030
  call void @mmc_blk_rw_reset_success(%struct.mmc_queue* %10, %struct.request* %11) #11, !dbg !9031
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9032
  call void @mmc_retune_release(%struct.mmc_host* %12) #11, !dbg !9033
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9034
  %14 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9035
  call void @mmc_blk_urgent_bkops(%struct.mmc_queue* %13, %struct.mmc_queue_req* %14) #11, !dbg !9036
  ret void, !dbg !9037
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_card_busy(%struct.mmc_card* %card, %struct.request* %req) #0 !dbg !9038 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %status = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9039, metadata !DIExpression()), !dbg !9040
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !9041, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !9043, metadata !DIExpression()), !dbg !9044
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9045
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !9046
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i32 0, i32* %status, align 4, !dbg !9048
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9049, metadata !DIExpression()), !dbg !9050
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9051
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 0, !dbg !9051
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9051
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 17, !dbg !9051
  %3 = load i32, i32* %caps, align 4, !dbg !9051
  %and = and i32 %3, 16, !dbg !9051
  %tobool = icmp ne i32 %and, 0, !dbg !9051
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9053

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9054
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %4, i32 0, i32 3, !dbg !9054
  %5 = load i32, i32* %cmd_flags, align 8, !dbg !9054
  %and1 = and i32 %5, 255, !dbg !9054
  %call2 = call zeroext i1 @op_is_write(i32 %and1) #11, !dbg !9054
  %6 = zext i1 %call2 to i64, !dbg !9054
  %cond = select i1 %call2, i32 1, i32 0, !dbg !9054
  %cmp = icmp eq i32 %cond, 0, !dbg !9055
  br i1 %cmp, label %if.then, label %if.end, !dbg !9056

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9057
  br label %return, !dbg !9057

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9058
  %call3 = call i32 @card_busy_detect(%struct.mmc_card* %7, i32 10000, i32* %status) #11, !dbg !9059
  store i32 %call3, i32* %err, align 4, !dbg !9060
  %8 = load i32, i32* %status, align 4, !dbg !9061
  %9 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9063
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %9, i32 0, i32 0, !dbg !9064
  %call4 = call i32 @mmc_blk_stop_err_bits(%struct.mmc_blk_request* %brq) #11, !dbg !9065
  %and5 = and i32 %8, %call4, !dbg !9066
  %tobool6 = icmp ne i32 %and5, 0, !dbg !9066
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !9067

if.then7:                                         ; preds = %if.end
  %10 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9068
  %brq8 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %10, i32 0, i32 0, !dbg !9070
  %data = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq8, i32 0, i32 4, !dbg !9071
  %bytes_xfered = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 7, !dbg !9072
  store i32 0, i32* %bytes_xfered, align 4, !dbg !9073
  %11 = load i32, i32* %err, align 4, !dbg !9074
  %tobool9 = icmp ne i32 %11, 0, !dbg !9074
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !9074

cond.true:                                        ; preds = %if.then7
  %12 = load i32, i32* %err, align 4, !dbg !9075
  br label %cond.end, !dbg !9074

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !9074

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond10 = phi i32 [ %12, %cond.true ], [ -5, %cond.false ], !dbg !9074
  store i32 %cond10, i32* %err, align 4, !dbg !9076
  br label %if.end11, !dbg !9077

if.end11:                                         ; preds = %cond.end, %if.end
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9078
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 4, !dbg !9078
  %14 = load i32, i32* %type, align 8, !dbg !9078
  %cmp12 = icmp eq i32 %14, 0, !dbg !9078
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !9080

land.lhs.true:                                    ; preds = %if.end11
  %15 = load i32, i32* %status, align 4, !dbg !9081
  %and13 = and i32 %15, 64, !dbg !9082
  %tobool14 = icmp ne i32 %and13, 0, !dbg !9082
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !9083

if.then15:                                        ; preds = %land.lhs.true
  %16 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9084
  %brq16 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %16, i32 0, i32 0, !dbg !9085
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq16, i32 0, i32 2, !dbg !9086
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !9087
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !9084
  %17 = load i32, i32* %arrayidx, align 8, !dbg !9088
  %or = or i32 %17, 64, !dbg !9088
  store i32 %or, i32* %arrayidx, align 8, !dbg !9088
  br label %if.end17, !dbg !9084

if.end17:                                         ; preds = %if.then15, %land.lhs.true, %if.end11
  %18 = load i32, i32* %err, align 4, !dbg !9089
  store i32 %18, i32* %retval, align 4, !dbg !9090
  br label %return, !dbg !9090

return:                                           ; preds = %if.end17, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9091
  ret i32 %19, !dbg !9091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_rw_reset_success(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !9092 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %type = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9097, metadata !DIExpression()), !dbg !9098
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9099
  %cmd_flags = getelementptr inbounds %struct.request, %struct.request* %0, i32 0, i32 3, !dbg !9099
  %1 = load i32, i32* %cmd_flags, align 8, !dbg !9099
  %and = and i32 %1, 255, !dbg !9099
  %call = call zeroext i1 @op_is_write(i32 %and) #11, !dbg !9099
  %2 = zext i1 %call to i64, !dbg !9099
  %cond = select i1 %call, i32 1, i32 0, !dbg !9099
  %cmp = icmp eq i32 %cond, 0, !dbg !9100
  %3 = zext i1 %cmp to i64, !dbg !9099
  %cond1 = select i1 %cmp, i64 1, i64 2, !dbg !9099
  %conv = trunc i64 %cond1 to i32, !dbg !9099
  store i32 %conv, i32* %type, align 4, !dbg !9098
  %4 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9101
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %4, i32 0, i32 3, !dbg !9102
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %blkdata, align 8, !dbg !9102
  %6 = load i32, i32* %type, align 4, !dbg !9103
  call void @mmc_blk_reset_success(%struct.mmc_blk_data* %5, i32 %6) #11, !dbg !9104
  ret void, !dbg !9105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_part_switch_pre(%struct.mmc_card* %card, i32 %part_type) #0 !dbg !9106 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %part_type.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i32 %part_type, i32* %part_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %part_type.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9111, metadata !DIExpression()), !dbg !9112
  store i32 0, i32* %ret, align 4, !dbg !9112
  %0 = load i32, i32* %part_type.addr, align 4, !dbg !9113
  %cmp = icmp eq i32 %0, 3, !dbg !9115
  br i1 %cmp, label %if.then, label %if.end5, !dbg !9116

if.then:                                          ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9117
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 21, !dbg !9120
  %cmdq_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 40, !dbg !9121
  %2 = load i8, i8* %cmdq_en, align 2, !dbg !9121
  %tobool = trunc i8 %2 to i1, !dbg !9121
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !9122

if.then1:                                         ; preds = %if.then
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9123
  %call = call i32 @mmc_cmdq_disable(%struct.mmc_card* %3) #11, !dbg !9125
  store i32 %call, i32* %ret, align 4, !dbg !9126
  %4 = load i32, i32* %ret, align 4, !dbg !9127
  %tobool2 = icmp ne i32 %4, 0, !dbg !9127
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !9129

if.then3:                                         ; preds = %if.then1
  %5 = load i32, i32* %ret, align 4, !dbg !9130
  store i32 %5, i32* %retval, align 4, !dbg !9131
  br label %return, !dbg !9131

if.end:                                           ; preds = %if.then1
  br label %if.end4, !dbg !9132

if.end4:                                          ; preds = %if.end, %if.then
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9133
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 0, !dbg !9134
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9134
  call void @mmc_retune_pause(%struct.mmc_host* %7) #11, !dbg !9135
  br label %if.end5, !dbg !9136

if.end5:                                          ; preds = %if.end4, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !9137
  store i32 %8, i32* %retval, align 4, !dbg !9138
  br label %return, !dbg !9138

return:                                           ; preds = %if.end5, %if.then3
  %9 = load i32, i32* %retval, align 4, !dbg !9139
  ret i32 %9, !dbg !9139
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_switch(%struct.mmc_card*, i8 zeroext, i8 zeroext, i8 zeroext, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_part_switch_post(%struct.mmc_card* %card, i32 %part_type) #0 !dbg !9140 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %part_type.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9141, metadata !DIExpression()), !dbg !9142
  store i32 %part_type, i32* %part_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %part_type.addr, metadata !9143, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9145, metadata !DIExpression()), !dbg !9146
  store i32 0, i32* %ret, align 4, !dbg !9146
  %0 = load i32, i32* %part_type.addr, align 4, !dbg !9147
  %cmp = icmp eq i32 %0, 3, !dbg !9149
  br i1 %cmp, label %if.then, label %if.end3, !dbg !9150

if.then:                                          ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9151
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 0, !dbg !9153
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9153
  call void @mmc_retune_unpause(%struct.mmc_host* %2) #11, !dbg !9154
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9155
  %reenable_cmdq = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 8, !dbg !9157
  %4 = load i8, i8* %reenable_cmdq, align 8, !dbg !9157
  %tobool = trunc i8 %4 to i1, !dbg !9157
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9158

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9159
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 21, !dbg !9160
  %cmdq_en = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 40, !dbg !9161
  %6 = load i8, i8* %cmdq_en, align 2, !dbg !9161
  %tobool1 = trunc i8 %6 to i1, !dbg !9161
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !9162

if.then2:                                         ; preds = %land.lhs.true
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9163
  %call = call i32 @mmc_cmdq_enable(%struct.mmc_card* %7) #11, !dbg !9164
  store i32 %call, i32* %ret, align 4, !dbg !9165
  br label %if.end, !dbg !9166

if.end:                                           ; preds = %if.then2, %land.lhs.true, %if.then
  br label %if.end3, !dbg !9167

if.end3:                                          ; preds = %if.end, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !9168
  ret i32 %8, !dbg !9169
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_cmdq_disable(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_retune_pause(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_retune_unpause(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_cmdq_enable(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_rw_wait(%struct.mmc_queue* %mq, %struct.request** %prev_req) #0 !dbg !9170 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %prev_req.addr = alloca %struct.request**, align 8
  %err = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !9173, metadata !DIExpression()), !dbg !9174
  store %struct.request** %prev_req, %struct.request*** %prev_req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request*** %prev_req.addr, metadata !9175, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9177, metadata !DIExpression()), !dbg !9178
  store i32 0, i32* %err, align 4, !dbg !9178
  br label %do.body, !dbg !9179

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9180

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !9182

do.body2:                                         ; preds = %do.body1
  br label %do.end, !dbg !9184

do.end:                                           ; preds = %do.body2
  br label %do.end3, !dbg !9182

do.end3:                                          ; preds = %do.end
  %0 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9186
  %call = call zeroext i1 @mmc_blk_rw_wait_cond(%struct.mmc_queue* %0, i32* %err) #11, !dbg !9186
  br i1 %call, label %if.then, label %if.end, !dbg !9180

if.then:                                          ; preds = %do.end3
  br label %do.end9, !dbg !9186

if.end:                                           ; preds = %do.end3
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !9188, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9191, metadata !DIExpression()), !dbg !9190
  store i64 0, i64* %__ret, align 8, !dbg !9190
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #11, !dbg !9190
  br label %for.cond, !dbg !9190

for.cond:                                         ; preds = %if.end7, %if.end
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !9192, metadata !DIExpression()), !dbg !9196
  %1 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9196
  %wait = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %1, i32 0, i32 15, !dbg !9196
  %call4 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %wait, %struct.wait_queue_entry* %__wq_entry, i32 2) #11, !dbg !9196
  store i64 %call4, i64* %__int, align 8, !dbg !9196
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9197
  %call5 = call zeroext i1 @mmc_blk_rw_wait_cond(%struct.mmc_queue* %2, i32* %err) #11, !dbg !9197
  br i1 %call5, label %if.then6, label %if.end7, !dbg !9196

if.then6:                                         ; preds = %for.cond
  br label %for.end, !dbg !9197

if.end7:                                          ; preds = %for.cond
  call void @schedule() #11, !dbg !9196
  br label %for.cond, !dbg !9199, !llvm.loop !9200

for.end:                                          ; preds = %if.then6
  %3 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9190
  %wait8 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %3, i32 0, i32 15, !dbg !9190
  call void @finish_wait(%struct.wait_queue_head* %wait8, %struct.wait_queue_entry* %__wq_entry) #11, !dbg !9190
  br label %__out, !dbg !9190

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !9202), !dbg !9190
  %4 = load i64, i64* %__ret, align 8, !dbg !9190
  store i64 %4, i64* %tmp, align 8, !dbg !9190
  %5 = load i64, i64* %tmp, align 8, !dbg !9190
  br label %do.end9, !dbg !9180

do.end9:                                          ; preds = %__out, %if.then
  %6 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9203
  %7 = load %struct.request**, %struct.request*** %prev_req.addr, align 8, !dbg !9204
  call void @mmc_blk_mq_complete_prev_req(%struct.mmc_queue* %6, %struct.request** %7) #11, !dbg !9205
  %8 = load i32, i32* %err, align 4, !dbg !9206
  ret i32 %8, !dbg !9207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_blk_rw_wait_cond(%struct.mmc_queue* %mq, i32* %err) #0 !dbg !9208 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5810, metadata !DIExpression()), !dbg !9211
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5817, metadata !DIExpression()), !dbg !9213
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5819, metadata !DIExpression()), !dbg !9214
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %err.addr = alloca i32*, align 8
  %flags = alloca i64, align 8
  %done = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !9221, metadata !DIExpression()), !dbg !9222
  store i32* %err, i32** %err.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %err.addr, metadata !9223, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9225, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.declare(metadata i8* %done, metadata !9227, metadata !DIExpression()), !dbg !9228
  br label %do.body, !dbg !9229

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9230

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9231, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9234, metadata !DIExpression()), !dbg !9233
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9233
  %conv = zext i1 %cmp to i32, !dbg !9233
  store i32 1, i32* %tmp, align 4, !dbg !9233
  %0 = load i32, i32* %tmp, align 4, !dbg !9233
  br label %do.body2, !dbg !9235

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9236

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9237

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9239, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9243, metadata !DIExpression()), !dbg !9242
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9242
  %conv8 = zext i1 %cmp7 to i32, !dbg !9242
  store i32 1, i32* %tmp9, align 4, !dbg !9242
  %1 = load i32, i32* %tmp9, align 4, !dbg !9242
  %call = call i64 @arch_local_irq_save() #11, !dbg !9244
  store i64 %call, i64* %flags, align 8, !dbg !9244
  br label %do.end, !dbg !9244

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9237

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9236

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9245, !srcloc !9246
  br label %do.body12, !dbg !9245

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9247
  %lock = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %2, i32 0, i32 5, !dbg !9247
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9248
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9249
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !9249
  br label %do.end14, !dbg !9247

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9245

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9236

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9235

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9230

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9250
  %recovery_needed = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %5, i32 0, i32 10, !dbg !9252
  %6 = load i8, i8* %recovery_needed, align 2, !dbg !9252
  %tobool = trunc i8 %6 to i1, !dbg !9252
  br i1 %tobool, label %if.then, label %if.else, !dbg !9253

if.then:                                          ; preds = %do.end18
  %7 = load i32*, i32** %err.addr, align 8, !dbg !9254
  store i32 -16, i32* %7, align 4, !dbg !9256
  store i8 1, i8* %done, align 1, !dbg !9257
  br label %if.end, !dbg !9258

if.else:                                          ; preds = %do.end18
  %8 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9259
  %rw_wait = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %8, i32 0, i32 12, !dbg !9261
  %9 = load i8, i8* %rw_wait, align 4, !dbg !9261
  %tobool19 = trunc i8 %9 to i1, !dbg !9261
  %lnot = xor i1 %tobool19, true, !dbg !9262
  %frombool = zext i1 %lnot to i8, !dbg !9263
  store i8 %frombool, i8* %done, align 1, !dbg !9263
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i8, i8* %done, align 1, !dbg !9264
  %tobool20 = trunc i8 %10 to i1, !dbg !9264
  %lnot21 = xor i1 %tobool20, true, !dbg !9265
  %11 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9266
  %waiting = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %11, i32 0, i32 13, !dbg !9267
  %frombool22 = zext i1 %lnot21 to i8, !dbg !9268
  store i8 %frombool22, i8* %waiting, align 1, !dbg !9268
  %12 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9269
  %lock23 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %12, i32 0, i32 5, !dbg !9270
  %13 = load i64, i64* %flags, align 8, !dbg !9271
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !312, metadata !5963, metadata !DIExpression()) #5, !dbg !9272
  call void @llvm.dbg.declare(metadata !312, metadata !5967, metadata !DIExpression()) #5, !dbg !9272
  store i32 1, i32* %tmp.i, align 4, !dbg !9272
  %14 = load i32, i32* %tmp.i, align 4, !dbg !9272
  call void @llvm.dbg.declare(metadata !312, metadata !5968, metadata !DIExpression()) #5, !dbg !9273
  call void @llvm.dbg.declare(metadata !312, metadata !5974, metadata !DIExpression()) #5, !dbg !9273
  store i32 1, i32* %tmp8.i, align 4, !dbg !9273
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !9273
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !9274
  call void @arch_local_irq_restore(i64 %16) #12, !dbg !9274
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9275, !srcloc !5978
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !9276
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !9276
  %rlock.i26 = bitcast %union.anon.2* %18 to %struct.raw_spinlock*, !dbg !9276
  %19 = load i8, i8* %done, align 1, !dbg !9277
  %tobool24 = trunc i8 %19 to i1, !dbg !9277
  ret i1 %tobool24, !dbg !9278
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mmc_blk_ioctl_cmd(%struct.mmc_card* %card, %struct.mmc_blk_data* %md, %struct.mmc_blk_ioc_data* %idata) #0 !dbg !9279 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %idata.addr = alloca %struct.mmc_blk_ioc_data*, align 8
  %cmd = alloca %struct.mmc_command, align 8
  %sbc = alloca %struct.mmc_command, align 8
  %data = alloca %struct.mmc_data, align 8
  %mrq = alloca %struct.mmc_request, align 8
  %sg = alloca %struct.scatterlist, align 8
  %err = alloca i32, align 4
  %target_part = alloca i32, align 4
  %main_md = alloca %struct.mmc_blk_data*, align 8
  %value = alloca i8, align 1
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9282, metadata !DIExpression()), !dbg !9283
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !9284, metadata !DIExpression()), !dbg !9285
  store %struct.mmc_blk_ioc_data* %idata, %struct.mmc_blk_ioc_data** %idata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_ioc_data** %idata.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !9288, metadata !DIExpression()), !dbg !9289
  %0 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !9289
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !9289
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %sbc, metadata !9290, metadata !DIExpression()), !dbg !9291
  %1 = bitcast %struct.mmc_command* %sbc to i8*, !dbg !9291
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false), !dbg !9291
  call void @llvm.dbg.declare(metadata %struct.mmc_data* %data, metadata !9292, metadata !DIExpression()), !dbg !9293
  %2 = bitcast %struct.mmc_data* %data to i8*, !dbg !9293
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false), !dbg !9293
  call void @llvm.dbg.declare(metadata %struct.mmc_request* %mrq, metadata !9294, metadata !DIExpression()), !dbg !9295
  %3 = bitcast %struct.mmc_request* %mrq to i8*, !dbg !9295
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 112, i1 false), !dbg !9295
  call void @llvm.dbg.declare(metadata %struct.scatterlist* %sg, metadata !9296, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9298, metadata !DIExpression()), !dbg !9299
  call void @llvm.dbg.declare(metadata i32* %target_part, metadata !9300, metadata !DIExpression()), !dbg !9301
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9302
  %tobool = icmp ne %struct.mmc_card* %4, null, !dbg !9302
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9304

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !9305
  %tobool1 = icmp ne %struct.mmc_blk_data* %5, null, !dbg !9305
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !9306

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9307
  %tobool3 = icmp ne %struct.mmc_blk_ioc_data* %6, null, !dbg !9307
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9308

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9309
  br label %return, !dbg !9309

if.end:                                           ; preds = %lor.lhs.false2
  %7 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9310
  %rpmb = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %7, i32 0, i32 3, !dbg !9312
  %8 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !9312
  %tobool4 = icmp ne %struct.mmc_rpmb_data* %8, null, !dbg !9310
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9313

if.then5:                                         ; preds = %if.end
  %9 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9314
  %rpmb6 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %9, i32 0, i32 3, !dbg !9316
  %10 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb6, align 8, !dbg !9316
  %part_index = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %10, i32 0, i32 3, !dbg !9317
  %11 = load i32, i32* %part_index, align 4, !dbg !9317
  store i32 %11, i32* %target_part, align 4, !dbg !9318
  %12 = load i32, i32* %target_part, align 4, !dbg !9319
  %or = or i32 %12, 3, !dbg !9319
  store i32 %or, i32* %target_part, align 4, !dbg !9319
  br label %if.end7, !dbg !9320

if.else:                                          ; preds = %if.end
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !9321
  %part_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 8, !dbg !9323
  %14 = load i32, i32* %part_type, align 4, !dbg !9323
  store i32 %14, i32* %target_part, align 4, !dbg !9324
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %15 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9325
  %ic = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %15, i32 0, i32 0, !dbg !9326
  %opcode = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic, i32 0, i32 2, !dbg !9327
  %16 = load i32, i32* %opcode, align 8, !dbg !9327
  %opcode8 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !9328
  store i32 %16, i32* %opcode8, align 8, !dbg !9329
  %17 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9330
  %ic9 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %17, i32 0, i32 0, !dbg !9331
  %arg = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic9, i32 0, i32 3, !dbg !9332
  %18 = load i32, i32* %arg, align 4, !dbg !9332
  %arg10 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !9333
  store i32 %18, i32* %arg10, align 4, !dbg !9334
  %19 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9335
  %ic11 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %19, i32 0, i32 0, !dbg !9336
  %flags = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic11, i32 0, i32 5, !dbg !9337
  %20 = load i32, i32* %flags, align 8, !dbg !9337
  %flags12 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !9338
  store i32 %20, i32* %flags12, align 8, !dbg !9339
  %21 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9340
  %buf_bytes = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %21, i32 0, i32 2, !dbg !9342
  %22 = load i64, i64* %buf_bytes, align 8, !dbg !9342
  %tobool13 = icmp ne i64 %22, 0, !dbg !9340
  br i1 %tobool13, label %if.then14, label %if.end42, !dbg !9343

if.then14:                                        ; preds = %if.end7
  %sg15 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 12, !dbg !9344
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg15, align 8, !dbg !9346
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 10, !dbg !9347
  store i32 1, i32* %sg_len, align 8, !dbg !9348
  %23 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9349
  %ic16 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %23, i32 0, i32 0, !dbg !9350
  %blksz = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic16, i32 0, i32 6, !dbg !9351
  %24 = load i32, i32* %blksz, align 4, !dbg !9351
  %blksz17 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 2, !dbg !9352
  store i32 %24, i32* %blksz17, align 8, !dbg !9353
  %25 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9354
  %ic18 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %25, i32 0, i32 0, !dbg !9355
  %blocks = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic18, i32 0, i32 7, !dbg !9356
  %26 = load i32, i32* %blocks, align 8, !dbg !9356
  %blocks19 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 3, !dbg !9357
  store i32 %26, i32* %blocks19, align 4, !dbg !9358
  %sg20 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 12, !dbg !9359
  %27 = load %struct.scatterlist*, %struct.scatterlist** %sg20, align 8, !dbg !9359
  %28 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9360
  %buf = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %28, i32 0, i32 1, !dbg !9361
  %29 = load i8*, i8** %buf, align 8, !dbg !9361
  %30 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9362
  %buf_bytes21 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %30, i32 0, i32 2, !dbg !9363
  %31 = load i64, i64* %buf_bytes21, align 8, !dbg !9363
  %conv = trunc i64 %31 to i32, !dbg !9362
  call void @sg_init_one(%struct.scatterlist* %27, i8* %29, i32 %conv) #11, !dbg !9364
  %32 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9365
  %ic22 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %32, i32 0, i32 0, !dbg !9367
  %write_flag = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic22, i32 0, i32 0, !dbg !9368
  %33 = load i32, i32* %write_flag, align 8, !dbg !9368
  %tobool23 = icmp ne i32 %33, 0, !dbg !9365
  br i1 %tobool23, label %if.then24, label %if.else26, !dbg !9369

if.then24:                                        ; preds = %if.then14
  %flags25 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 6, !dbg !9370
  store i32 256, i32* %flags25, align 8, !dbg !9371
  br label %if.end28, !dbg !9372

if.else26:                                        ; preds = %if.then14
  %flags27 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 6, !dbg !9373
  store i32 512, i32* %flags27, align 8, !dbg !9374
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  %34 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9375
  call void @mmc_set_data_timeout(%struct.mmc_data* %data, %struct.mmc_card* %34) #11, !dbg !9376
  %35 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9377
  %ic29 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %35, i32 0, i32 0, !dbg !9379
  %data_timeout_ns = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic29, i32 0, i32 10, !dbg !9380
  %36 = load i32, i32* %data_timeout_ns, align 4, !dbg !9380
  %tobool30 = icmp ne i32 %36, 0, !dbg !9377
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !9381

if.then31:                                        ; preds = %if.end28
  %37 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9382
  %ic32 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %37, i32 0, i32 0, !dbg !9383
  %data_timeout_ns33 = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic32, i32 0, i32 10, !dbg !9384
  %38 = load i32, i32* %data_timeout_ns33, align 4, !dbg !9384
  %timeout_ns = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 0, !dbg !9385
  store i32 %38, i32* %timeout_ns, align 8, !dbg !9386
  br label %if.end34, !dbg !9387

if.end34:                                         ; preds = %if.then31, %if.end28
  %flags35 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !9388
  %39 = load i32, i32* %flags35, align 8, !dbg !9388
  %and = and i32 %39, 29, !dbg !9390
  %cmp = icmp eq i32 %and, 29, !dbg !9391
  br i1 %cmp, label %if.then37, label %if.end40, !dbg !9392

if.then37:                                        ; preds = %if.end34
  %40 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9393
  %ic38 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %40, i32 0, i32 0, !dbg !9395
  %cmd_timeout_ms = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic38, i32 0, i32 11, !dbg !9396
  %41 = load i32, i32* %cmd_timeout_ms, align 8, !dbg !9396
  %mul = mul i32 %41, 1000000, !dbg !9397
  %timeout_ns39 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 0, !dbg !9398
  store i32 %mul, i32* %timeout_ns39, align 8, !dbg !9399
  br label %if.end40, !dbg !9400

if.end40:                                         ; preds = %if.then37, %if.end34
  %data41 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 2, !dbg !9401
  store %struct.mmc_data* %data, %struct.mmc_data** %data41, align 8, !dbg !9402
  br label %if.end42, !dbg !9403

if.end42:                                         ; preds = %if.end40, %if.end7
  %cmd43 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 1, !dbg !9404
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd43, align 8, !dbg !9405
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9406
  %43 = load i32, i32* %target_part, align 4, !dbg !9407
  %call = call i32 @mmc_blk_part_switch(%struct.mmc_card* %42, i32 %43) #11, !dbg !9408
  store i32 %call, i32* %err, align 4, !dbg !9409
  %44 = load i32, i32* %err, align 4, !dbg !9410
  %tobool44 = icmp ne i32 %44, 0, !dbg !9410
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !9412

if.then45:                                        ; preds = %if.end42
  %45 = load i32, i32* %err, align 4, !dbg !9413
  store i32 %45, i32* %retval, align 4, !dbg !9414
  br label %return, !dbg !9414

if.end46:                                         ; preds = %if.end42
  %46 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9415
  %ic47 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %46, i32 0, i32 0, !dbg !9417
  %is_acmd = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic47, i32 0, i32 1, !dbg !9418
  %47 = load i32, i32* %is_acmd, align 4, !dbg !9418
  %tobool48 = icmp ne i32 %47, 0, !dbg !9415
  br i1 %tobool48, label %if.then49, label %if.end54, !dbg !9419

if.then49:                                        ; preds = %if.end46
  %48 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9420
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %48, i32 0, i32 0, !dbg !9422
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9422
  %50 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9423
  %call50 = call i32 @mmc_app_cmd(%struct.mmc_host* %49, %struct.mmc_card* %50) #11, !dbg !9424
  store i32 %call50, i32* %err, align 4, !dbg !9425
  %51 = load i32, i32* %err, align 4, !dbg !9426
  %tobool51 = icmp ne i32 %51, 0, !dbg !9426
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !9428

if.then52:                                        ; preds = %if.then49
  %52 = load i32, i32* %err, align 4, !dbg !9429
  store i32 %52, i32* %retval, align 4, !dbg !9430
  br label %return, !dbg !9430

if.end53:                                         ; preds = %if.then49
  br label %if.end54, !dbg !9431

if.end54:                                         ; preds = %if.end53, %if.end46
  %53 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9432
  %rpmb55 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %53, i32 0, i32 3, !dbg !9434
  %54 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb55, align 8, !dbg !9434
  %tobool56 = icmp ne %struct.mmc_rpmb_data* %54, null, !dbg !9432
  br i1 %tobool56, label %if.then57, label %if.end70, !dbg !9435

if.then57:                                        ; preds = %if.end54
  %opcode58 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 0, !dbg !9436
  store i32 23, i32* %opcode58, align 8, !dbg !9438
  %blocks59 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 3, !dbg !9439
  %55 = load i32, i32* %blocks59, align 4, !dbg !9439
  %conv60 = zext i32 %55 to i64, !dbg !9440
  %56 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9441
  %ic61 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %56, i32 0, i32 0, !dbg !9442
  %write_flag62 = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic61, i32 0, i32 0, !dbg !9443
  %57 = load i32, i32* %write_flag62, align 8, !dbg !9443
  %conv63 = sext i32 %57 to i64, !dbg !9441
  %and64 = and i64 %conv63, 2147483648, !dbg !9444
  %or65 = or i64 %conv60, %and64, !dbg !9445
  %conv66 = trunc i64 %or65 to i32, !dbg !9440
  %arg67 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 1, !dbg !9446
  store i32 %conv66, i32* %arg67, align 4, !dbg !9447
  %flags68 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %sbc, i32 0, i32 3, !dbg !9448
  store i32 21, i32* %flags68, align 8, !dbg !9449
  %sbc69 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 0, !dbg !9450
  store %struct.mmc_command* %sbc, %struct.mmc_command** %sbc69, align 8, !dbg !9451
  br label %if.end70, !dbg !9452

if.end70:                                         ; preds = %if.then57, %if.end54
  %arg71 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !9453
  %58 = load i32, i32* %arg71, align 4, !dbg !9453
  %and72 = and i32 %58, 16711680, !dbg !9453
  %shr = lshr i32 %and72, 16, !dbg !9453
  %cmp73 = icmp eq i32 %shr, 165, !dbg !9455
  br i1 %cmp73, label %land.lhs.true, label %if.end80, !dbg !9456

land.lhs.true:                                    ; preds = %if.end70
  %opcode75 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !9457
  %59 = load i32, i32* %opcode75, align 8, !dbg !9457
  %cmp76 = icmp eq i32 %59, 6, !dbg !9458
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !9459

if.then78:                                        ; preds = %land.lhs.true
  %60 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9460
  %call79 = call i32 @mmc_sanitize(%struct.mmc_card* %60) #11, !dbg !9461
  store i32 %call79, i32* %retval, align 4, !dbg !9462
  br label %return, !dbg !9462

if.end80:                                         ; preds = %land.lhs.true, %if.end70
  %61 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9463
  %host81 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %61, i32 0, i32 0, !dbg !9464
  %62 = load %struct.mmc_host*, %struct.mmc_host** %host81, align 8, !dbg !9464
  call void @mmc_wait_for_req(%struct.mmc_host* %62, %struct.mmc_request* %mrq) #11, !dbg !9465
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !9466
  %63 = load i32, i32* %error, align 8, !dbg !9466
  %tobool82 = icmp ne i32 %63, 0, !dbg !9468
  br i1 %tobool82, label %if.then83, label %if.end87, !dbg !9469

if.then83:                                        ; preds = %if.end80
  %64 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9470
  %host84 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %64, i32 0, i32 0, !dbg !9470
  %65 = load %struct.mmc_host*, %struct.mmc_host** %host84, align 8, !dbg !9470
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %65, i32 0, i32 0, !dbg !9470
  %66 = load %struct.device*, %struct.device** %parent, align 64, !dbg !9470
  %error85 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !9470
  %67 = load i32, i32* %error85, align 8, !dbg !9470
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %66, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.__mmc_blk_ioctl_cmd, i64 0, i64 0), i32 %67) #13, !dbg !9470
  %error86 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 5, !dbg !9472
  %68 = load i32, i32* %error86, align 8, !dbg !9472
  store i32 %68, i32* %retval, align 4, !dbg !9473
  br label %return, !dbg !9473

if.end87:                                         ; preds = %if.end80
  %error88 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 5, !dbg !9474
  %69 = load i32, i32* %error88, align 4, !dbg !9474
  %tobool89 = icmp ne i32 %69, 0, !dbg !9476
  br i1 %tobool89, label %if.then90, label %if.end95, !dbg !9477

if.then90:                                        ; preds = %if.end87
  %70 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9478
  %host91 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %70, i32 0, i32 0, !dbg !9478
  %71 = load %struct.mmc_host*, %struct.mmc_host** %host91, align 8, !dbg !9478
  %parent92 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %71, i32 0, i32 0, !dbg !9478
  %72 = load %struct.device*, %struct.device** %parent92, align 64, !dbg !9478
  %error93 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 5, !dbg !9478
  %73 = load i32, i32* %error93, align 4, !dbg !9478
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %72, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.__mmc_blk_ioctl_cmd, i64 0, i64 0), i32 %73) #13, !dbg !9478
  %error94 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %data, i32 0, i32 5, !dbg !9480
  %74 = load i32, i32* %error94, align 4, !dbg !9480
  store i32 %74, i32* %retval, align 4, !dbg !9481
  br label %return, !dbg !9481

if.end95:                                         ; preds = %if.end87
  %arg96 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !9482
  %75 = load i32, i32* %arg96, align 4, !dbg !9482
  %and97 = and i32 %75, 16711680, !dbg !9482
  %shr98 = lshr i32 %and97, 16, !dbg !9482
  %cmp99 = icmp eq i32 %shr98, 179, !dbg !9484
  br i1 %cmp99, label %land.lhs.true101, label %if.end113, !dbg !9485

land.lhs.true101:                                 ; preds = %if.end95
  %opcode102 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !9486
  %76 = load i32, i32* %opcode102, align 8, !dbg !9486
  %cmp103 = icmp eq i32 %76, 6, !dbg !9487
  br i1 %cmp103, label %if.then105, label %if.end113, !dbg !9488

if.then105:                                       ; preds = %land.lhs.true101
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %main_md, metadata !9489, metadata !DIExpression()), !dbg !9491
  %77 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9492
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %77, i32 0, i32 1, !dbg !9493
  %call106 = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !9494
  %78 = bitcast i8* %call106 to %struct.mmc_blk_data*, !dbg !9494
  store %struct.mmc_blk_data* %78, %struct.mmc_blk_data** %main_md, align 8, !dbg !9491
  call void @llvm.dbg.declare(metadata i8* %value, metadata !9495, metadata !DIExpression()), !dbg !9496
  %arg107 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !9497
  %79 = load i32, i32* %arg107, align 4, !dbg !9497
  %and108 = and i32 %79, 65280, !dbg !9497
  %shr109 = lshr i32 %and108, 8, !dbg !9497
  %conv110 = trunc i32 %shr109 to i8, !dbg !9497
  store i8 %conv110, i8* %value, align 1, !dbg !9496
  %80 = load i8, i8* %value, align 1, !dbg !9498
  %81 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9499
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %81, i32 0, i32 21, !dbg !9500
  %part_config = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 6, !dbg !9501
  store i8 %80, i8* %part_config, align 2, !dbg !9502
  %82 = load i8, i8* %value, align 1, !dbg !9503
  %conv111 = zext i8 %82 to i32, !dbg !9503
  %and112 = and i32 %conv111, 7, !dbg !9504
  %83 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %main_md, align 8, !dbg !9505
  %part_curr = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %83, i32 0, i32 10, !dbg !9506
  store i32 %and112, i32* %part_curr, align 4, !dbg !9507
  br label %if.end113, !dbg !9508

if.end113:                                        ; preds = %if.then105, %land.lhs.true101, %if.end95
  %84 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9509
  %ic114 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %84, i32 0, i32 0, !dbg !9511
  %postsleep_min_us = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic114, i32 0, i32 8, !dbg !9512
  %85 = load i32, i32* %postsleep_min_us, align 4, !dbg !9512
  %tobool115 = icmp ne i32 %85, 0, !dbg !9509
  br i1 %tobool115, label %if.then116, label %if.end122, !dbg !9513

if.then116:                                       ; preds = %if.end113
  %86 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9514
  %ic117 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %86, i32 0, i32 0, !dbg !9515
  %postsleep_min_us118 = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic117, i32 0, i32 8, !dbg !9516
  %87 = load i32, i32* %postsleep_min_us118, align 4, !dbg !9516
  %conv119 = zext i32 %87 to i64, !dbg !9514
  %88 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9517
  %ic120 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %88, i32 0, i32 0, !dbg !9518
  %postsleep_max_us = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic120, i32 0, i32 9, !dbg !9519
  %89 = load i32, i32* %postsleep_max_us, align 8, !dbg !9519
  %conv121 = zext i32 %89 to i64, !dbg !9517
  call void @usleep_range(i64 %conv119, i64 %conv121) #11, !dbg !9520
  br label %if.end122, !dbg !9520

if.end122:                                        ; preds = %if.then116, %if.end113
  %90 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9521
  %ic123 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %90, i32 0, i32 0, !dbg !9522
  %response = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic123, i32 0, i32 4, !dbg !9523
  %91 = bitcast [4 x i32]* %response to i8*, !dbg !9524
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !9525
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !9524
  %92 = bitcast i32* %arraydecay to i8*, !dbg !9524
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 16, i1 false), !dbg !9524
  %93 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !9526
  %rpmb124 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %93, i32 0, i32 3, !dbg !9528
  %94 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb124, align 8, !dbg !9528
  %tobool125 = icmp ne %struct.mmc_rpmb_data* %94, null, !dbg !9526
  br i1 %tobool125, label %if.then131, label %lor.lhs.false126, !dbg !9529

lor.lhs.false126:                                 ; preds = %if.end122
  %flags127 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !9530
  %95 = load i32, i32* %flags127, align 8, !dbg !9530
  %and128 = and i32 %95, 29, !dbg !9531
  %cmp129 = icmp eq i32 %and128, 29, !dbg !9532
  br i1 %cmp129, label %if.then131, label %if.end133, !dbg !9533

if.then131:                                       ; preds = %lor.lhs.false126, %if.end122
  %96 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9534
  %call132 = call i32 @card_busy_detect(%struct.mmc_card* %96, i32 10000, i32* null) #11, !dbg !9536
  store i32 %call132, i32* %err, align 4, !dbg !9537
  br label %if.end133, !dbg !9538

if.end133:                                        ; preds = %if.then131, %lor.lhs.false126
  %97 = load i32, i32* %err, align 4, !dbg !9539
  store i32 %97, i32* %retval, align 4, !dbg !9540
  br label %return, !dbg !9540

return:                                           ; preds = %if.end133, %if.then90, %if.then83, %if.then78, %if.then52, %if.then45, %if.then
  %98 = load i32, i32* %retval, align 4, !dbg !9541
  ret i32 %98, !dbg !9541
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_get_ext_csd(%struct.mmc_card*, i8**) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_app_cmd(%struct.mmc_host*, %struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_sanitize(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noredzone
declare dso_local i32 @mmc_can_erase(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_erase(%struct.mmc_card*, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_can_secure_erase_trim(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_can_trim(%struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_erase_group_aligned(%struct.mmc_card*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_flush_cache(%struct.mmc_card*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mmc_request* @mmc_blk_cqe_prep_dcmd(%struct.mmc_queue_req* %mqrq, %struct.request* %req) #0 !dbg !9542 {
entry:
  %mqrq.addr = alloca %struct.mmc_queue_req*, align 8
  %req.addr = alloca %struct.request*, align 8
  %brq = alloca %struct.mmc_blk_request*, align 8
  store %struct.mmc_queue_req* %mqrq, %struct.mmc_queue_req** %mqrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !9547, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_request** %brq, metadata !9549, metadata !DIExpression()), !dbg !9550
  %0 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq.addr, align 8, !dbg !9551
  %brq1 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %0, i32 0, i32 0, !dbg !9552
  store %struct.mmc_blk_request* %brq1, %struct.mmc_blk_request** %brq, align 8, !dbg !9550
  %1 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !9553
  %2 = bitcast %struct.mmc_blk_request* %1 to i8*, !dbg !9554
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 352, i1 false), !dbg !9554
  %3 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !9555
  %cmd = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %3, i32 0, i32 2, !dbg !9556
  %4 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !9557
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %4, i32 0, i32 0, !dbg !9558
  %cmd2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 1, !dbg !9559
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd2, align 8, !dbg !9560
  %5 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9561
  %tag = getelementptr inbounds %struct.request, %struct.request* %5, i32 0, i32 5, !dbg !9562
  %6 = load i32, i32* %tag, align 8, !dbg !9562
  %7 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !9563
  %mrq3 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %7, i32 0, i32 0, !dbg !9564
  %tag4 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq3, i32 0, i32 10, !dbg !9565
  store i32 %6, i32* %tag4, align 4, !dbg !9566
  %8 = load %struct.mmc_blk_request*, %struct.mmc_blk_request** %brq, align 8, !dbg !9567
  %mrq5 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %8, i32 0, i32 0, !dbg !9568
  ret %struct.mmc_request* %mrq5, !dbg !9569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_cqe_start_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !9570 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9571, metadata !DIExpression()), !dbg !9572
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !9573, metadata !DIExpression()), !dbg !9574
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9575
  %done = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 6, !dbg !9576
  store void (%struct.mmc_request*)* @mmc_blk_cqe_req_done, void (%struct.mmc_request*)** %done, align 8, !dbg !9577
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9578
  %recovery_notifier = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %1, i32 0, i32 7, !dbg !9579
  store void (%struct.mmc_request*)* @mmc_cqe_recovery_notifier, void (%struct.mmc_request*)** %recovery_notifier, align 8, !dbg !9580
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9581
  %3 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9582
  %call = call i32 @mmc_cqe_start_req(%struct.mmc_host* %2, %struct.mmc_request* %3) #11, !dbg !9583
  ret i32 %call, !dbg !9584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_cqe_req_done(%struct.mmc_request* %mrq) #0 !dbg !9585 {
entry:
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_queue_req*, align 8
  %req = alloca %struct.request*, align 8
  %q = alloca %struct.request_queue*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !9586, metadata !DIExpression()), !dbg !9587
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !9588, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9590, metadata !DIExpression()), !dbg !9592
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9592
  %1 = bitcast %struct.mmc_request* %0 to i8*, !dbg !9592
  store i8* %1, i8** %__mptr, align 8, !dbg !9592
  br label %do.body, !dbg !9592

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9593

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9592
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9592
  %3 = bitcast i8* %add.ptr to %struct.mmc_queue_req*, !dbg !9592
  store %struct.mmc_queue_req* %3, %struct.mmc_queue_req** %tmp, align 8, !dbg !9593
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %tmp, align 8, !dbg !9592
  store %struct.mmc_queue_req* %4, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9589
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !9595, metadata !DIExpression()), !dbg !9596
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9597
  %call = call %struct.request* @mmc_queue_req_to_req(%struct.mmc_queue_req* %5) #11, !dbg !9598
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !9596
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !9599, metadata !DIExpression()), !dbg !9600
  %6 = load %struct.request*, %struct.request** %req, align 8, !dbg !9601
  %q1 = getelementptr inbounds %struct.request, %struct.request* %6, i32 0, i32 0, !dbg !9602
  %7 = load %struct.request_queue*, %struct.request_queue** %q1, align 8, !dbg !9602
  store %struct.request_queue* %7, %struct.request_queue** %q, align 8, !dbg !9600
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !9603, metadata !DIExpression()), !dbg !9604
  %8 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9605
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %8, i32 0, i32 11, !dbg !9606
  %9 = load i8*, i8** %queuedata, align 8, !dbg !9606
  %10 = bitcast i8* %9 to %struct.mmc_queue*, !dbg !9605
  store %struct.mmc_queue* %10, %struct.mmc_queue** %mq, align 8, !dbg !9604
  %11 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9607
  %in_recovery = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %11, i32 0, i32 11, !dbg !9609
  %12 = load i8, i8* %in_recovery, align 1, !dbg !9609
  %tobool = trunc i8 %12 to i1, !dbg !9609
  br i1 %tobool, label %if.then, label %if.else, !dbg !9610

if.then:                                          ; preds = %do.end
  %13 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9611
  %14 = load %struct.request*, %struct.request** %req, align 8, !dbg !9612
  call void @mmc_blk_cqe_complete_rq(%struct.mmc_queue* %13, %struct.request* %14) #11, !dbg !9613
  br label %if.end8, !dbg !9613

if.else:                                          ; preds = %do.end
  %15 = load %struct.request*, %struct.request** %req, align 8, !dbg !9614
  %q2 = getelementptr inbounds %struct.request, %struct.request* %15, i32 0, i32 0, !dbg !9614
  %16 = load %struct.request_queue*, %struct.request_queue** %q2, align 8, !dbg !9614
  %call3 = call zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %16) #11, !dbg !9614
  %lnot = xor i1 %call3, true, !dbg !9614
  %lnot4 = xor i1 %lnot, true, !dbg !9614
  %lnot5 = xor i1 %lnot4, true, !dbg !9614
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9614
  %conv = sext i32 %lnot.ext to i64, !dbg !9614
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9614
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9616

if.then7:                                         ; preds = %if.else
  %17 = load %struct.request*, %struct.request** %req, align 8, !dbg !9617
  call void @blk_mq_complete_request(%struct.request* %17) #11, !dbg !9618
  br label %if.end, !dbg !9618

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !9619
}

; Function Attrs: noredzone
declare dso_local void @mmc_cqe_recovery_notifier(%struct.mmc_request*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_cqe_start_req(%struct.mmc_host*, %struct.mmc_request*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_hsq_issue_rw_rq(%struct.mmc_queue* %mq, %struct.request* %req) #0 !dbg !9620 {
entry:
  %mq.addr = alloca %struct.mmc_queue*, align 8
  %req.addr = alloca %struct.request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_queue* %mq, %struct.mmc_queue** %mq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq.addr, metadata !9621, metadata !DIExpression()), !dbg !9622
  store %struct.request* %req, %struct.request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.request** %req.addr, metadata !9623, metadata !DIExpression()), !dbg !9624
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !9625, metadata !DIExpression()), !dbg !9626
  %0 = load %struct.request*, %struct.request** %req.addr, align 8, !dbg !9627
  %call = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %0) #11, !dbg !9628
  store %struct.mmc_queue_req* %call, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9626
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9629, metadata !DIExpression()), !dbg !9630
  %1 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9631
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %1, i32 0, i32 0, !dbg !9632
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9632
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 0, !dbg !9633
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !9633
  store %struct.mmc_host* %3, %struct.mmc_host** %host, align 8, !dbg !9630
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9634, metadata !DIExpression()), !dbg !9635
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9636
  %5 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9637
  %card2 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %5, i32 0, i32 0, !dbg !9638
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card2, align 8, !dbg !9638
  %7 = load %struct.mmc_queue*, %struct.mmc_queue** %mq.addr, align 8, !dbg !9639
  call void @mmc_blk_rw_rq_prep(%struct.mmc_queue_req* %4, %struct.mmc_card* %6, i32 0, %struct.mmc_queue* %7) #11, !dbg !9640
  %8 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9641
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %8, i32 0, i32 0, !dbg !9642
  %mrq = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq, i32 0, i32 0, !dbg !9643
  %done = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 6, !dbg !9644
  store void (%struct.mmc_request*)* @mmc_blk_hsq_req_done, void (%struct.mmc_request*)** %done, align 8, !dbg !9645
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9646
  %10 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9647
  %brq3 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %10, i32 0, i32 0, !dbg !9648
  %mrq4 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq3, i32 0, i32 0, !dbg !9649
  call void @mmc_pre_req(%struct.mmc_host* %9, %struct.mmc_request* %mrq4) #11, !dbg !9650
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9651
  %12 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9652
  %brq5 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %12, i32 0, i32 0, !dbg !9653
  %mrq6 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq5, i32 0, i32 0, !dbg !9654
  %call7 = call i32 @mmc_cqe_start_req(%struct.mmc_host* %11, %struct.mmc_request* %mrq6) #11, !dbg !9655
  store i32 %call7, i32* %err, align 4, !dbg !9656
  %13 = load i32, i32* %err, align 4, !dbg !9657
  %tobool = icmp ne i32 %13, 0, !dbg !9657
  br i1 %tobool, label %if.then, label %if.end, !dbg !9659

if.then:                                          ; preds = %entry
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9660
  %15 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9661
  %brq8 = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %15, i32 0, i32 0, !dbg !9662
  %mrq9 = getelementptr inbounds %struct.mmc_blk_request, %struct.mmc_blk_request* %brq8, i32 0, i32 0, !dbg !9663
  %16 = load i32, i32* %err, align 4, !dbg !9664
  call void @mmc_post_req(%struct.mmc_host* %14, %struct.mmc_request* %mrq9, i32 %16) #11, !dbg !9665
  br label %if.end, !dbg !9665

if.end:                                           ; preds = %if.then, %entry
  %17 = load i32, i32* %err, align 4, !dbg !9666
  ret i32 %17, !dbg !9667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_hsq_req_done(%struct.mmc_request* %mrq) #0 !dbg !9668 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !5810, metadata !DIExpression()), !dbg !9669
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5817, metadata !DIExpression()), !dbg !9673
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5819, metadata !DIExpression()), !dbg !9674
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_queue_req*, align 8
  %req = alloca %struct.request*, align 8
  %q = alloca %struct.request_queue*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp7 = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !9681, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !9683, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9685, metadata !DIExpression()), !dbg !9687
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9687
  %1 = bitcast %struct.mmc_request* %0 to i8*, !dbg !9687
  store i8* %1, i8** %__mptr, align 8, !dbg !9687
  br label %do.body, !dbg !9687

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9688

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9687
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9687
  %3 = bitcast i8* %add.ptr to %struct.mmc_queue_req*, !dbg !9687
  store %struct.mmc_queue_req* %3, %struct.mmc_queue_req** %tmp, align 8, !dbg !9688
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %tmp, align 8, !dbg !9687
  store %struct.mmc_queue_req* %4, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9684
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !9690, metadata !DIExpression()), !dbg !9691
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9692
  %call = call %struct.request* @mmc_queue_req_to_req(%struct.mmc_queue_req* %5) #11, !dbg !9693
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !9691
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !9694, metadata !DIExpression()), !dbg !9695
  %6 = load %struct.request*, %struct.request** %req, align 8, !dbg !9696
  %q1 = getelementptr inbounds %struct.request, %struct.request* %6, i32 0, i32 0, !dbg !9697
  %7 = load %struct.request_queue*, %struct.request_queue** %q1, align 8, !dbg !9697
  store %struct.request_queue* %7, %struct.request_queue** %q, align 8, !dbg !9695
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !9698, metadata !DIExpression()), !dbg !9699
  %8 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9700
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %8, i32 0, i32 11, !dbg !9701
  %9 = load i8*, i8** %queuedata, align 8, !dbg !9701
  %10 = bitcast i8* %9 to %struct.mmc_queue*, !dbg !9700
  store %struct.mmc_queue* %10, %struct.mmc_queue** %mq, align 8, !dbg !9699
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9702, metadata !DIExpression()), !dbg !9703
  %11 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9704
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %11, i32 0, i32 0, !dbg !9705
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9705
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 0, !dbg !9706
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !9706
  store %struct.mmc_host* %13, %struct.mmc_host** %host, align 8, !dbg !9703
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9707, metadata !DIExpression()), !dbg !9708
  %14 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9709
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %14, i32 0, i32 0, !dbg !9710
  %call3 = call zeroext i1 @mmc_blk_rq_error(%struct.mmc_blk_request* %brq) #11, !dbg !9711
  br i1 %call3, label %if.then, label %lor.lhs.false, !dbg !9712

lor.lhs.false:                                    ; preds = %do.end
  %15 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9713
  %16 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9714
  %call4 = call zeroext i1 @mmc_blk_urgent_bkops_needed(%struct.mmc_queue* %15, %struct.mmc_queue_req* %16) #11, !dbg !9715
  br i1 %call4, label %if.then, label %if.end, !dbg !9716

if.then:                                          ; preds = %lor.lhs.false, %do.end
  br label %do.body5, !dbg !9717

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !9718

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9719, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9722, metadata !DIExpression()), !dbg !9721
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9721
  %conv = zext i1 %cmp to i32, !dbg !9721
  store i32 1, i32* %tmp7, align 4, !dbg !9721
  %17 = load i32, i32* %tmp7, align 4, !dbg !9721
  br label %do.body8, !dbg !9723

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !9724

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !9725

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !9727, metadata !DIExpression()), !dbg !9730
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !9731, metadata !DIExpression()), !dbg !9730
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !9730
  %conv14 = zext i1 %cmp13 to i32, !dbg !9730
  store i32 1, i32* %tmp15, align 4, !dbg !9730
  %18 = load i32, i32* %tmp15, align 4, !dbg !9730
  %call16 = call i64 @arch_local_irq_save() #11, !dbg !9732
  store i64 %call16, i64* %flags, align 8, !dbg !9732
  br label %do.end17, !dbg !9732

do.end17:                                         ; preds = %do.body10
  br label %do.end18, !dbg !9725

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !9724

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9733, !srcloc !9734
  br label %do.body20, !dbg !9733

do.body20:                                        ; preds = %do.body19
  %19 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9735
  %lock = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %19, i32 0, i32 5, !dbg !9735
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9736
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9737
  %rlock.i = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !9737
  br label %do.end22, !dbg !9735

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !9733

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9724

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9723

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9718

do.end26:                                         ; preds = %do.end25
  %22 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9738
  %recovery_needed = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %22, i32 0, i32 10, !dbg !9739
  store i8 1, i8* %recovery_needed, align 2, !dbg !9740
  %23 = load %struct.request*, %struct.request** %req, align 8, !dbg !9741
  %24 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9742
  %recovery_req = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %24, i32 0, i32 16, !dbg !9743
  store %struct.request* %23, %struct.request** %recovery_req, align 8, !dbg !9744
  %25 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9745
  %lock27 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %25, i32 0, i32 5, !dbg !9746
  %26 = load i64, i64* %flags, align 8, !dbg !9747
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !312, metadata !5963, metadata !DIExpression()) #5, !dbg !9748
  call void @llvm.dbg.declare(metadata !312, metadata !5967, metadata !DIExpression()) #5, !dbg !9748
  store i32 1, i32* %tmp.i, align 4, !dbg !9748
  %27 = load i32, i32* %tmp.i, align 4, !dbg !9748
  call void @llvm.dbg.declare(metadata !312, metadata !5968, metadata !DIExpression()) #5, !dbg !9749
  call void @llvm.dbg.declare(metadata !312, metadata !5974, metadata !DIExpression()) #5, !dbg !9749
  store i32 1, i32* %tmp8.i, align 4, !dbg !9749
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !9749
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !9750
  call void @arch_local_irq_restore(i64 %29) #12, !dbg !9750
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9751, !srcloc !5978
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !9752
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9752
  %rlock.i40 = bitcast %union.anon.2* %31 to %struct.raw_spinlock*, !dbg !9752
  %32 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9753
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %32, i32 0, i32 62, !dbg !9754
  %33 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !9754
  %cqe_recovery_start = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %33, i32 0, i32 7, !dbg !9755
  %34 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %cqe_recovery_start, align 8, !dbg !9755
  %35 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9756
  call void %34(%struct.mmc_host* %35) #11, !dbg !9753
  %36 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9757
  %recovery_work = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %36, i32 0, i32 14, !dbg !9758
  %call28 = call zeroext i1 @schedule_work(%struct.work_struct* %recovery_work) #11, !dbg !9759
  br label %if.end38, !dbg !9760

if.end:                                           ; preds = %lor.lhs.false
  %37 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9761
  %38 = load %struct.request*, %struct.request** %req, align 8, !dbg !9762
  call void @mmc_blk_rw_reset_success(%struct.mmc_queue* %37, %struct.request* %38) #11, !dbg !9763
  %39 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9764
  %in_recovery = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %39, i32 0, i32 11, !dbg !9766
  %40 = load i8, i8* %in_recovery, align 1, !dbg !9766
  %tobool = trunc i8 %40 to i1, !dbg !9766
  br i1 %tobool, label %if.then29, label %if.else, !dbg !9767

if.then29:                                        ; preds = %if.end
  %41 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9768
  %42 = load %struct.request*, %struct.request** %req, align 8, !dbg !9769
  call void @mmc_blk_cqe_complete_rq(%struct.mmc_queue* %41, %struct.request* %42) #11, !dbg !9770
  br label %if.end38, !dbg !9770

if.else:                                          ; preds = %if.end
  %43 = load %struct.request*, %struct.request** %req, align 8, !dbg !9771
  %q30 = getelementptr inbounds %struct.request, %struct.request* %43, i32 0, i32 0, !dbg !9771
  %44 = load %struct.request_queue*, %struct.request_queue** %q30, align 8, !dbg !9771
  %call31 = call zeroext i1 @blk_should_fake_timeout(%struct.request_queue* %44) #11, !dbg !9771
  %lnot = xor i1 %call31, true, !dbg !9771
  %lnot32 = xor i1 %lnot, true, !dbg !9771
  %lnot33 = xor i1 %lnot32, true, !dbg !9771
  %lnot.ext = zext i1 %lnot33 to i32, !dbg !9771
  %conv34 = sext i32 %lnot.ext to i64, !dbg !9771
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !9771
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !9773

if.then36:                                        ; preds = %if.else
  %45 = load %struct.request*, %struct.request** %req, align 8, !dbg !9774
  call void @blk_mq_complete_request(%struct.request* %45) #11, !dbg !9775
  br label %if.end37, !dbg !9775

if.end37:                                         ; preds = %if.then36, %if.else
  br label %if.end38

if.end38:                                         ; preds = %do.end26, %if.end37, %if.then29
  ret void, !dbg !9776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_pre_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !9777 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9778, metadata !DIExpression()), !dbg !9779
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9782
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 3, !dbg !9784
  %1 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !9784
  %pre_req = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %1, i32 0, i32 1, !dbg !9785
  %2 = load void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)** %pre_req, align 8, !dbg !9785
  %tobool = icmp ne void (%struct.mmc_host*, %struct.mmc_request*)* %2, null, !dbg !9782
  br i1 %tobool, label %if.then, label %if.end, !dbg !9786

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9787
  %ops1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 3, !dbg !9788
  %4 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops1, align 8, !dbg !9788
  %pre_req2 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %4, i32 0, i32 1, !dbg !9789
  %5 = load void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)** %pre_req2, align 8, !dbg !9789
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9790
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9791
  call void %5(%struct.mmc_host* %6, %struct.mmc_request* %7) #11, !dbg !9787
  br label %if.end, !dbg !9787

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #0 !dbg !9793 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !9798
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9799
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !9800
  ret i1 %call, !dbg !9801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !9802 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !9805, metadata !DIExpression()), !dbg !9806
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9807, metadata !DIExpression()), !dbg !9808
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !9809
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9810
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !9811
  ret i1 %call, !dbg !9812
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_mq_req_done(%struct.mmc_request* %mrq) #0 !dbg !9813 {
entry:
  %lock.addr.i75 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i75, metadata !5810, metadata !DIExpression()), !dbg !9814
  %flags.addr.i76 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i76, metadata !5817, metadata !DIExpression()), !dbg !9818
  %tmp.i77 = alloca i32, align 4
  %tmp8.i78 = alloca i32, align 4
  %lock.addr.i73 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i73, metadata !5819, metadata !DIExpression()), !dbg !9819
  %lock.addr.i71 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i71, metadata !5810, metadata !DIExpression()), !dbg !9826
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5817, metadata !DIExpression()), !dbg !9830
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5819, metadata !DIExpression()), !dbg !9831
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %mqrq = alloca %struct.mmc_queue_req*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_queue_req*, align 8
  %req = alloca %struct.request*, align 8
  %q = alloca %struct.request_queue*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %waiting = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp6 = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__dummy40 = alloca i64, align 8
  %__dummy241 = alloca i64, align 8
  %tmp44 = alloca i32, align 4
  %__dummy48 = alloca i64, align 8
  %__dummy249 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.declare(metadata %struct.mmc_queue_req** %mqrq, metadata !9840, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9842, metadata !DIExpression()), !dbg !9844
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !9844
  %1 = bitcast %struct.mmc_request* %0 to i8*, !dbg !9844
  store i8* %1, i8** %__mptr, align 8, !dbg !9844
  br label %do.body, !dbg !9844

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9845

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9844
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !9844
  %3 = bitcast i8* %add.ptr to %struct.mmc_queue_req*, !dbg !9844
  store %struct.mmc_queue_req* %3, %struct.mmc_queue_req** %tmp, align 8, !dbg !9845
  %4 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %tmp, align 8, !dbg !9844
  store %struct.mmc_queue_req* %4, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9841
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !9847, metadata !DIExpression()), !dbg !9848
  %5 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9849
  %call = call %struct.request* @mmc_queue_req_to_req(%struct.mmc_queue_req* %5) #11, !dbg !9850
  store %struct.request* %call, %struct.request** %req, align 8, !dbg !9848
  call void @llvm.dbg.declare(metadata %struct.request_queue** %q, metadata !9851, metadata !DIExpression()), !dbg !9852
  %6 = load %struct.request*, %struct.request** %req, align 8, !dbg !9853
  %q1 = getelementptr inbounds %struct.request, %struct.request* %6, i32 0, i32 0, !dbg !9854
  %7 = load %struct.request_queue*, %struct.request_queue** %q1, align 8, !dbg !9854
  store %struct.request_queue* %7, %struct.request_queue** %q, align 8, !dbg !9852
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !9855, metadata !DIExpression()), !dbg !9856
  %8 = load %struct.request_queue*, %struct.request_queue** %q, align 8, !dbg !9857
  %queuedata = getelementptr inbounds %struct.request_queue, %struct.request_queue* %8, i32 0, i32 11, !dbg !9858
  %9 = load i8*, i8** %queuedata, align 8, !dbg !9858
  %10 = bitcast i8* %9 to %struct.mmc_queue*, !dbg !9857
  store %struct.mmc_queue* %10, %struct.mmc_queue** %mq, align 8, !dbg !9856
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9859, metadata !DIExpression()), !dbg !9860
  %11 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9861
  %card = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %11, i32 0, i32 0, !dbg !9862
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9862
  %host2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 0, !dbg !9863
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host2, align 8, !dbg !9863
  store %struct.mmc_host* %13, %struct.mmc_host** %host, align 8, !dbg !9860
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9864, metadata !DIExpression()), !dbg !9865
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9866
  %call3 = call zeroext i1 @mmc_host_done_complete(%struct.mmc_host* %14) #11, !dbg !9867
  br i1 %call3, label %if.end32, label %if.then, !dbg !9868

if.then:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %waiting, metadata !9869, metadata !DIExpression()), !dbg !9870
  br label %do.body4, !dbg !9871

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !9872

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9873, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9876, metadata !DIExpression()), !dbg !9875
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9875
  %conv = zext i1 %cmp to i32, !dbg !9875
  store i32 1, i32* %tmp6, align 4, !dbg !9875
  %15 = load i32, i32* %tmp6, align 4, !dbg !9875
  br label %do.body7, !dbg !9877

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !9878

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !9879

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !9881, metadata !DIExpression()), !dbg !9884
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !9885, metadata !DIExpression()), !dbg !9884
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !9884
  %conv13 = zext i1 %cmp12 to i32, !dbg !9884
  store i32 1, i32* %tmp14, align 4, !dbg !9884
  %16 = load i32, i32* %tmp14, align 4, !dbg !9884
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !9886
  store i64 %call15, i64* %flags, align 8, !dbg !9886
  br label %do.end16, !dbg !9886

do.end16:                                         ; preds = %do.body9
  br label %do.end17, !dbg !9879

do.end17:                                         ; preds = %do.end16
  br label %do.body18, !dbg !9878

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9887, !srcloc !9888
  br label %do.body19, !dbg !9887

do.body19:                                        ; preds = %do.body18
  %17 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9889
  %lock = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %17, i32 0, i32 5, !dbg !9889
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9890
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9891
  %rlock.i = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !9891
  br label %do.end21, !dbg !9889

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !9887

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9878

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !9877

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !9872

do.end25:                                         ; preds = %do.end24
  %20 = load %struct.request*, %struct.request** %req, align 8, !dbg !9892
  %21 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9893
  %complete_req = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %21, i32 0, i32 17, !dbg !9894
  store %struct.request* %20, %struct.request** %complete_req, align 8, !dbg !9895
  %22 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9896
  %rw_wait = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %22, i32 0, i32 12, !dbg !9897
  store i8 0, i8* %rw_wait, align 4, !dbg !9898
  %23 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9899
  %waiting26 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %23, i32 0, i32 13, !dbg !9900
  %24 = load i8, i8* %waiting26, align 1, !dbg !9900
  %tobool = trunc i8 %24 to i1, !dbg !9900
  %frombool = zext i1 %tobool to i8, !dbg !9901
  store i8 %frombool, i8* %waiting, align 1, !dbg !9901
  %25 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9902
  %lock27 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %25, i32 0, i32 5, !dbg !9903
  %26 = load i64, i64* %flags, align 8, !dbg !9904
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i71, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !312, metadata !5963, metadata !DIExpression()) #5, !dbg !9905
  call void @llvm.dbg.declare(metadata !312, metadata !5967, metadata !DIExpression()) #5, !dbg !9905
  store i32 1, i32* %tmp.i, align 4, !dbg !9905
  %27 = load i32, i32* %tmp.i, align 4, !dbg !9905
  call void @llvm.dbg.declare(metadata !312, metadata !5968, metadata !DIExpression()) #5, !dbg !9906
  call void @llvm.dbg.declare(metadata !312, metadata !5974, metadata !DIExpression()) #5, !dbg !9906
  store i32 1, i32* %tmp8.i, align 4, !dbg !9906
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !9906
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !9907
  call void @arch_local_irq_restore(i64 %29) #12, !dbg !9907
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9908, !srcloc !5978
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i71, align 8, !dbg !9909
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9909
  %rlock.i72 = bitcast %union.anon.2* %31 to %struct.raw_spinlock*, !dbg !9909
  %32 = load i8, i8* %waiting, align 1, !dbg !9910
  %tobool28 = trunc i8 %32 to i1, !dbg !9910
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !9912

if.then29:                                        ; preds = %do.end25
  %33 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9913
  %wait = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %33, i32 0, i32 15, !dbg !9913
  call void @__wake_up(%struct.wait_queue_head* %wait, i32 3, i32 1, i8* null) #11, !dbg !9913
  br label %if.end, !dbg !9913

if.else:                                          ; preds = %do.end25
  %34 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9914
  %card30 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %34, i32 0, i32 0, !dbg !9915
  %35 = load %struct.mmc_card*, %struct.mmc_card** %card30, align 8, !dbg !9915
  %complete_wq = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %35, i32 0, i32 43, !dbg !9916
  %36 = load %struct.workqueue_struct*, %struct.workqueue_struct** %complete_wq, align 8, !dbg !9916
  %37 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9917
  %complete_work = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %37, i32 0, i32 19, !dbg !9918
  %call31 = call zeroext i1 @queue_work(%struct.workqueue_struct* %36, %struct.work_struct* %complete_work) #11, !dbg !9919
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then29
  br label %return, !dbg !9920

if.end32:                                         ; preds = %do.end
  %38 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9921
  %brq = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %38, i32 0, i32 0, !dbg !9922
  %call33 = call zeroext i1 @mmc_blk_rq_error(%struct.mmc_blk_request* %brq) #11, !dbg !9923
  br i1 %call33, label %if.then37, label %lor.lhs.false, !dbg !9924

lor.lhs.false:                                    ; preds = %if.end32
  %39 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9925
  %40 = load %struct.mmc_queue_req*, %struct.mmc_queue_req** %mqrq, align 8, !dbg !9926
  %call35 = call zeroext i1 @mmc_blk_urgent_bkops_needed(%struct.mmc_queue* %39, %struct.mmc_queue_req* %40) #11, !dbg !9927
  br i1 %call35, label %if.then37, label %if.end68, !dbg !9928

if.then37:                                        ; preds = %lor.lhs.false, %if.end32
  br label %do.body38, !dbg !9929

do.body38:                                        ; preds = %if.then37
  br label %do.body39, !dbg !9930

do.body39:                                        ; preds = %do.body38
  call void @llvm.dbg.declare(metadata i64* %__dummy40, metadata !9931, metadata !DIExpression()), !dbg !9933
  call void @llvm.dbg.declare(metadata i64* %__dummy241, metadata !9934, metadata !DIExpression()), !dbg !9933
  %cmp42 = icmp eq i64* %__dummy40, %__dummy241, !dbg !9933
  %conv43 = zext i1 %cmp42 to i32, !dbg !9933
  store i32 1, i32* %tmp44, align 4, !dbg !9933
  %41 = load i32, i32* %tmp44, align 4, !dbg !9933
  br label %do.body45, !dbg !9935

do.body45:                                        ; preds = %do.body39
  br label %do.body46, !dbg !9936

do.body46:                                        ; preds = %do.body45
  br label %do.body47, !dbg !9937

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy48, metadata !9939, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.declare(metadata i64* %__dummy249, metadata !9943, metadata !DIExpression()), !dbg !9942
  %cmp50 = icmp eq i64* %__dummy48, %__dummy249, !dbg !9942
  %conv51 = zext i1 %cmp50 to i32, !dbg !9942
  store i32 1, i32* %tmp52, align 4, !dbg !9942
  %42 = load i32, i32* %tmp52, align 4, !dbg !9942
  %call53 = call i64 @arch_local_irq_save() #11, !dbg !9944
  store i64 %call53, i64* %flags, align 8, !dbg !9944
  br label %do.end54, !dbg !9944

do.end54:                                         ; preds = %do.body47
  br label %do.end55, !dbg !9937

do.end55:                                         ; preds = %do.end54
  br label %do.body56, !dbg !9936

do.body56:                                        ; preds = %do.end55
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9945, !srcloc !9946
  br label %do.body57, !dbg !9945

do.body57:                                        ; preds = %do.body56
  %43 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9947
  %lock58 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %43, i32 0, i32 5, !dbg !9947
  store %struct.spinlock* %lock58, %struct.spinlock** %lock.addr.i73, align 8
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i73, align 8, !dbg !9948
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !9949
  %rlock.i74 = bitcast %union.anon.2* %45 to %struct.raw_spinlock*, !dbg !9949
  br label %do.end60, !dbg !9947

do.end60:                                         ; preds = %do.body57
  br label %do.end61, !dbg !9945

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !9936

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !9935

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !9930

do.end64:                                         ; preds = %do.end63
  %46 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9950
  %recovery_needed = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %46, i32 0, i32 10, !dbg !9951
  store i8 1, i8* %recovery_needed, align 2, !dbg !9952
  %47 = load %struct.request*, %struct.request** %req, align 8, !dbg !9953
  %48 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9954
  %recovery_req = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %48, i32 0, i32 16, !dbg !9955
  store %struct.request* %47, %struct.request** %recovery_req, align 8, !dbg !9956
  %49 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9957
  %lock65 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %49, i32 0, i32 5, !dbg !9958
  %50 = load i64, i64* %flags, align 8, !dbg !9959
  store %struct.spinlock* %lock65, %struct.spinlock** %lock.addr.i75, align 8
  store i64 %50, i64* %flags.addr.i76, align 8
  call void @llvm.dbg.declare(metadata !312, metadata !5963, metadata !DIExpression()) #5, !dbg !9960
  call void @llvm.dbg.declare(metadata !312, metadata !5967, metadata !DIExpression()) #5, !dbg !9960
  store i32 1, i32* %tmp.i77, align 4, !dbg !9960
  %51 = load i32, i32* %tmp.i77, align 4, !dbg !9960
  call void @llvm.dbg.declare(metadata !312, metadata !5968, metadata !DIExpression()) #5, !dbg !9961
  call void @llvm.dbg.declare(metadata !312, metadata !5974, metadata !DIExpression()) #5, !dbg !9961
  store i32 1, i32* %tmp8.i78, align 4, !dbg !9961
  %52 = load i32, i32* %tmp8.i78, align 4, !dbg !9961
  %53 = load i64, i64* %flags.addr.i76, align 8, !dbg !9962
  call void @arch_local_irq_restore(i64 %53) #12, !dbg !9962
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !dbg !9963, !srcloc !5978
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i75, align 8, !dbg !9964
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !9964
  %rlock.i79 = bitcast %union.anon.2* %55 to %struct.raw_spinlock*, !dbg !9964
  %56 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9965
  %wait66 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %56, i32 0, i32 15, !dbg !9965
  call void @__wake_up(%struct.wait_queue_head* %wait66, i32 3, i32 1, i8* null) #11, !dbg !9965
  %57 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9966
  %recovery_work = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %57, i32 0, i32 14, !dbg !9967
  %call67 = call zeroext i1 @schedule_work(%struct.work_struct* %recovery_work) #11, !dbg !9968
  br label %return, !dbg !9969

if.end68:                                         ; preds = %lor.lhs.false
  %58 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9970
  %59 = load %struct.request*, %struct.request** %req, align 8, !dbg !9971
  call void @mmc_blk_rw_reset_success(%struct.mmc_queue* %58, %struct.request* %59) #11, !dbg !9972
  %60 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9973
  %rw_wait69 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %60, i32 0, i32 12, !dbg !9974
  store i8 0, i8* %rw_wait69, align 4, !dbg !9975
  %61 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9976
  %wait70 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %61, i32 0, i32 15, !dbg !9976
  call void @__wake_up(%struct.wait_queue_head* %wait70, i32 3, i32 1, i8* null) #11, !dbg !9976
  %62 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !9977
  %63 = load %struct.request*, %struct.request** %req, align 8, !dbg !9978
  call void @mmc_blk_mq_post_req(%struct.mmc_queue* %62, %struct.request* %63) #11, !dbg !9979
  br label %return, !dbg !9980

return:                                           ; preds = %if.end68, %do.end64, %if.end
  ret void, !dbg !9980
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_start_request(%struct.mmc_host*, %struct.mmc_request*) #2

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_probe(%struct.mmc_card* %card) #0 !dbg !9981 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %part_md = alloca %struct.mmc_blk_data*, align 8
  %cap_str = alloca [10 x i8], align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_blk_data*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp47 = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9982, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %part_md, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata [10 x i8]* %cap_str, metadata !9988, metadata !DIExpression()), !dbg !9992
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9993
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 20, !dbg !9995
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !9996
  %1 = load i16, i16* %cmdclass, align 2, !dbg !9996
  %conv = zext i16 %1 to i32, !dbg !9993
  %and = and i32 %conv, 4, !dbg !9997
  %tobool = icmp ne i32 %and, 0, !dbg !9997
  br i1 %tobool, label %if.end, label %if.then, !dbg !9998

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !9999
  br label %return, !dbg !9999

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10000
  call void @mmc_fixup_device(%struct.mmc_card* %2, %struct.mmc_fixup* getelementptr inbounds ([25 x %struct.mmc_fixup], [25 x %struct.mmc_fixup]* @mmc_blk_fixups, i64 0, i64 0)) #11, !dbg !10001
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 24, i32 0) #11, !dbg !10002
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10003
  %complete_wq = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 43, !dbg !10004
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** %complete_wq, align 8, !dbg !10005
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10006
  %complete_wq1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 43, !dbg !10006
  %5 = load %struct.workqueue_struct*, %struct.workqueue_struct** %complete_wq1, align 8, !dbg !10006
  %tobool2 = icmp ne %struct.workqueue_struct* %5, null, !dbg !10006
  %lnot = xor i1 %tobool2, true, !dbg !10006
  %lnot3 = xor i1 %lnot, true, !dbg !10006
  %lnot4 = xor i1 %lnot3, true, !dbg !10006
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !10006
  %conv5 = sext i32 %lnot.ext to i64, !dbg !10006
  %tobool6 = icmp ne i64 %conv5, 0, !dbg !10006
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !10008

if.then7:                                         ; preds = %if.end
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0)) #13, !dbg !10009
  store i32 -12, i32* %retval, align 4, !dbg !10011
  br label %return, !dbg !10011

if.end9:                                          ; preds = %if.end
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10012
  %call10 = call %struct.mmc_blk_data* @mmc_blk_alloc(%struct.mmc_card* %6) #11, !dbg !10013
  store %struct.mmc_blk_data* %call10, %struct.mmc_blk_data** %md, align 8, !dbg !10014
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10015
  %8 = bitcast %struct.mmc_blk_data* %7 to i8*, !dbg !10015
  %call11 = call zeroext i1 @IS_ERR(i8* %8) #11, !dbg !10017
  br i1 %call11, label %if.then12, label %if.end15, !dbg !10018

if.then12:                                        ; preds = %if.end9
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10019
  %10 = bitcast %struct.mmc_blk_data* %9 to i8*, !dbg !10019
  %call13 = call i64 @PTR_ERR(i8* %10) #11, !dbg !10020
  %conv14 = trunc i64 %call13 to i32, !dbg !10020
  store i32 %conv14, i32* %retval, align 4, !dbg !10021
  br label %return, !dbg !10021

if.end15:                                         ; preds = %if.end9
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10022
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %11, i32 0, i32 1, !dbg !10023
  %12 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !10023
  %call16 = call i64 @get_capacity(%struct.gendisk* %12) #11, !dbg !10024
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %cap_str, i64 0, i64 0, !dbg !10025
  call void @string_get_size(i64 %call16, i64 512, i32 1, i8* %arraydecay, i32 10) #11, !dbg !10026
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10027
  %disk17 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 1, !dbg !10027
  %14 = load %struct.gendisk*, %struct.gendisk** %disk17, align 8, !dbg !10027
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %14, i32 0, i32 3, !dbg !10027
  %arraydecay18 = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !10027
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10027
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 1, !dbg !10027
  %call19 = call i8* @dev_name(%struct.device* %dev) #11, !dbg !10027
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10027
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 19, !dbg !10027
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 1, !dbg !10027
  %arraydecay20 = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !10027
  %arraydecay21 = getelementptr inbounds [10 x i8], [10 x i8]* %cap_str, i64 0, i64 0, !dbg !10027
  %17 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10027
  %read_only = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %17, i32 0, i32 7, !dbg !10027
  %18 = load i32, i32* %read_only, align 8, !dbg !10027
  %tobool22 = icmp ne i32 %18, 0, !dbg !10027
  %19 = zext i1 %tobool22 to i64, !dbg !10027
  %cond = select i1 %tobool22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), !dbg !10027
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay18, i8* %call19, i8* %arraydecay20, i8* %arraydecay21, i8* %cond) #13, !dbg !10027
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10028
  %21 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10030
  %call24 = call i32 @mmc_blk_alloc_parts(%struct.mmc_card* %20, %struct.mmc_blk_data* %21) #11, !dbg !10031
  %tobool25 = icmp ne i32 %call24, 0, !dbg !10031
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !10032

if.then26:                                        ; preds = %if.end15
  br label %out, !dbg !10033

if.end27:                                         ; preds = %if.end15
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10034
  %dev28 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 1, !dbg !10035
  %23 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10036
  %24 = bitcast %struct.mmc_blk_data* %23 to i8*, !dbg !10036
  call void @dev_set_drvdata(%struct.device* %dev28, i8* %24) #11, !dbg !10037
  %25 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10038
  %call29 = call i32 @mmc_add_disk(%struct.mmc_blk_data* %25) #11, !dbg !10040
  %tobool30 = icmp ne i32 %call29, 0, !dbg !10040
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10041

if.then31:                                        ; preds = %if.end27
  br label %out, !dbg !10042

if.end32:                                         ; preds = %if.end27
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10043, metadata !DIExpression()), !dbg !10046
  %26 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10046
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %26, i32 0, i32 3, !dbg !10046
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %part, i32 0, i32 0, !dbg !10046
  %27 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10046
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !10046
  store i8* %28, i8** %__mptr, align 8, !dbg !10046
  br label %do.body, !dbg !10046

do.body:                                          ; preds = %if.end32
  br label %do.end, !dbg !10047

do.end:                                           ; preds = %do.body
  %29 = load i8*, i8** %__mptr, align 8, !dbg !10046
  %add.ptr = getelementptr i8, i8* %29, i64 -480, !dbg !10046
  %30 = bitcast i8* %add.ptr to %struct.mmc_blk_data*, !dbg !10046
  store %struct.mmc_blk_data* %30, %struct.mmc_blk_data** %tmp, align 8, !dbg !10047
  %31 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp, align 8, !dbg !10046
  store %struct.mmc_blk_data* %31, %struct.mmc_blk_data** %part_md, align 8, !dbg !10049
  br label %for.cond, !dbg !10049

for.cond:                                         ; preds = %do.end46, %do.end
  %32 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10050
  %part33 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %32, i32 0, i32 3, !dbg !10050
  %33 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10050
  %part34 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %33, i32 0, i32 3, !dbg !10050
  %cmp = icmp eq %struct.list_head* %part33, %part34, !dbg !10050
  %lnot36 = xor i1 %cmp, true, !dbg !10050
  br i1 %lnot36, label %for.body, label %for.end, !dbg !10049

for.body:                                         ; preds = %for.cond
  %34 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10052
  %call38 = call i32 @mmc_add_disk(%struct.mmc_blk_data* %34) #11, !dbg !10055
  %tobool39 = icmp ne i32 %call38, 0, !dbg !10055
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !10056

if.then40:                                        ; preds = %for.body
  br label %out, !dbg !10057

if.end41:                                         ; preds = %for.body
  br label %for.inc, !dbg !10058

for.inc:                                          ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !10059, metadata !DIExpression()), !dbg !10061
  %35 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10061
  %part43 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %35, i32 0, i32 3, !dbg !10061
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %part43, i32 0, i32 0, !dbg !10061
  %36 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !10061
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !10061
  store i8* %37, i8** %__mptr42, align 8, !dbg !10061
  br label %do.body45, !dbg !10061

do.body45:                                        ; preds = %for.inc
  br label %do.end46, !dbg !10062

do.end46:                                         ; preds = %do.body45
  %38 = load i8*, i8** %__mptr42, align 8, !dbg !10061
  %add.ptr48 = getelementptr i8, i8* %38, i64 -480, !dbg !10061
  %39 = bitcast i8* %add.ptr48 to %struct.mmc_blk_data*, !dbg !10061
  store %struct.mmc_blk_data* %39, %struct.mmc_blk_data** %tmp47, align 8, !dbg !10062
  %40 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp47, align 8, !dbg !10061
  store %struct.mmc_blk_data* %40, %struct.mmc_blk_data** %part_md, align 8, !dbg !10050
  br label %for.cond, !dbg !10050, !llvm.loop !10064

for.end:                                          ; preds = %for.cond
  %41 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10066
  %42 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10067
  %call49 = call i32 @mmc_blk_add_debugfs(%struct.mmc_card* %41, %struct.mmc_blk_data* %42) #11, !dbg !10068
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10069
  %dev50 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %43, i32 0, i32 1, !dbg !10070
  call void @pm_runtime_set_autosuspend_delay(%struct.device* %dev50, i32 3000) #11, !dbg !10071
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10072
  %dev51 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 1, !dbg !10073
  call void @pm_runtime_use_autosuspend(%struct.device* %dev51) #11, !dbg !10074
  %45 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10075
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %45, i32 0, i32 4, !dbg !10077
  %46 = load i32, i32* %type, align 8, !dbg !10077
  %cmp52 = icmp ne i32 %46, 3, !dbg !10078
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !10079

if.then54:                                        ; preds = %for.end
  %47 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10080
  %dev55 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %47, i32 0, i32 1, !dbg !10082
  %call56 = call i32 @pm_runtime_set_active(%struct.device* %dev55) #11, !dbg !10083
  %48 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10084
  %dev57 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %48, i32 0, i32 1, !dbg !10085
  call void @pm_runtime_enable(%struct.device* %dev57) #11, !dbg !10086
  br label %if.end58, !dbg !10087

if.end58:                                         ; preds = %if.then54, %for.end
  store i32 0, i32* %retval, align 4, !dbg !10088
  br label %return, !dbg !10088

out:                                              ; preds = %if.then40, %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !10089), !dbg !10090
  %49 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10091
  %50 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10092
  call void @mmc_blk_remove_parts(%struct.mmc_card* %49, %struct.mmc_blk_data* %50) #11, !dbg !10093
  %51 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10094
  call void @mmc_blk_remove_req(%struct.mmc_blk_data* %51) #11, !dbg !10095
  store i32 0, i32* %retval, align 4, !dbg !10096
  br label %return, !dbg !10096

return:                                           ; preds = %out, %if.end58, %if.then12, %if.then7, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !10097
  ret i32 %52, !dbg !10097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_remove(%struct.mmc_card* %card) #0 !dbg !10098 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10099, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !10101, metadata !DIExpression()), !dbg !10102
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10103
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 1, !dbg !10104
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !10105
  %1 = bitcast i8* %call to %struct.mmc_blk_data*, !dbg !10105
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !10102
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10106
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10107
  call void @mmc_blk_remove_debugfs(%struct.mmc_card* %2, %struct.mmc_blk_data* %3) #11, !dbg !10108
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10109
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10110
  call void @mmc_blk_remove_parts(%struct.mmc_card* %4, %struct.mmc_blk_data* %5) #11, !dbg !10111
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10112
  %dev1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 1, !dbg !10113
  %call2 = call i32 @pm_runtime_get_sync(%struct.device* %dev1) #11, !dbg !10114
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10115
  %part_curr = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %7, i32 0, i32 10, !dbg !10117
  %8 = load i32, i32* %part_curr, align 4, !dbg !10117
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10118
  %part_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %9, i32 0, i32 8, !dbg !10119
  %10 = load i32, i32* %part_type, align 4, !dbg !10119
  %cmp = icmp ne i32 %8, %10, !dbg !10120
  br i1 %cmp, label %if.then, label %if.end, !dbg !10121

if.then:                                          ; preds = %entry
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10122
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 0, !dbg !10124
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10124
  call void @mmc_claim_host(%struct.mmc_host* %12) #11, !dbg !10125
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10126
  %14 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10127
  %part_type3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %14, i32 0, i32 8, !dbg !10128
  %15 = load i32, i32* %part_type3, align 4, !dbg !10128
  %call4 = call i32 @mmc_blk_part_switch(%struct.mmc_card* %13, i32 %15) #11, !dbg !10129
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10130
  %host5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 0, !dbg !10131
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host5, align 8, !dbg !10131
  call void @mmc_release_host(%struct.mmc_host* %17) #11, !dbg !10132
  br label %if.end, !dbg !10133

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10134
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 4, !dbg !10136
  %19 = load i32, i32* %type, align 8, !dbg !10136
  %cmp6 = icmp ne i32 %19, 3, !dbg !10137
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !10138

if.then7:                                         ; preds = %if.end
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10139
  %dev8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 1, !dbg !10140
  call void @pm_runtime_disable(%struct.device* %dev8) #11, !dbg !10141
  br label %if.end9, !dbg !10141

if.end9:                                          ; preds = %if.then7, %if.end
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10142
  %dev10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 1, !dbg !10143
  call void @pm_runtime_put_noidle(%struct.device* %dev10) #11, !dbg !10144
  %22 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10145
  call void @mmc_blk_remove_req(%struct.mmc_blk_data* %22) #11, !dbg !10146
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10147
  %dev11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 1, !dbg !10148
  call void @dev_set_drvdata(%struct.device* %dev11, i8* null) #11, !dbg !10149
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10150
  %complete_wq = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 43, !dbg !10151
  %25 = load %struct.workqueue_struct*, %struct.workqueue_struct** %complete_wq, align 8, !dbg !10151
  call void @destroy_workqueue(%struct.workqueue_struct* %25) #11, !dbg !10152
  ret void, !dbg !10153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_shutdown(%struct.mmc_card* %card) #0 !dbg !10154 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10157
  %call = call i32 @_mmc_blk_suspend(%struct.mmc_card* %0) #11, !dbg !10158
  ret void, !dbg !10159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_suspend(%struct.device* %dev) #0 !dbg !10160 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_card*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !10163, metadata !DIExpression()), !dbg !10164
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10165, metadata !DIExpression()), !dbg !10167
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10167
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10167
  store i8* %1, i8** %__mptr, align 8, !dbg !10167
  br label %do.body, !dbg !10167

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10168

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10167
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !10167
  %3 = bitcast i8* %add.ptr to %struct.mmc_card*, !dbg !10167
  store %struct.mmc_card* %3, %struct.mmc_card** %tmp, align 8, !dbg !10168
  %4 = load %struct.mmc_card*, %struct.mmc_card** %tmp, align 8, !dbg !10167
  store %struct.mmc_card* %4, %struct.mmc_card** %card, align 8, !dbg !10164
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !10170
  %call = call i32 @_mmc_blk_suspend(%struct.mmc_card* %5) #11, !dbg !10171
  ret i32 %call, !dbg !10172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_resume(%struct.device* %dev) #0 !dbg !10173 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %part_md = alloca %struct.mmc_blk_data*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_blk_data*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.mmc_blk_data*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %part_md, metadata !10176, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !10178, metadata !DIExpression()), !dbg !10179
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10180
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !10181
  %1 = bitcast i8* %call to %struct.mmc_blk_data*, !dbg !10181
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !10179
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10182
  %tobool = icmp ne %struct.mmc_blk_data* %2, null, !dbg !10182
  br i1 %tobool, label %if.then, label %if.end, !dbg !10184

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10185
  %part_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %3, i32 0, i32 8, !dbg !10187
  %4 = load i32, i32* %part_type, align 4, !dbg !10187
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10188
  %part_curr = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %5, i32 0, i32 10, !dbg !10189
  store i32 %4, i32* %part_curr, align 4, !dbg !10190
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10191
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %6, i32 0, i32 2, !dbg !10192
  call void @mmc_queue_resume(%struct.mmc_queue* %queue) #11, !dbg !10193
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10194, metadata !DIExpression()), !dbg !10197
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10197
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %7, i32 0, i32 3, !dbg !10197
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %part, i32 0, i32 0, !dbg !10197
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10197
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !10197
  store i8* %9, i8** %__mptr, align 8, !dbg !10197
  br label %do.body, !dbg !10197

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !10198

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !10197
  %add.ptr = getelementptr i8, i8* %10, i64 -480, !dbg !10197
  %11 = bitcast i8* %add.ptr to %struct.mmc_blk_data*, !dbg !10197
  store %struct.mmc_blk_data* %11, %struct.mmc_blk_data** %tmp, align 8, !dbg !10198
  %12 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp, align 8, !dbg !10197
  store %struct.mmc_blk_data* %12, %struct.mmc_blk_data** %part_md, align 8, !dbg !10200
  br label %for.cond, !dbg !10200

for.cond:                                         ; preds = %do.end8, %do.end
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10201
  %part1 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 3, !dbg !10201
  %14 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10201
  %part2 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %14, i32 0, i32 3, !dbg !10201
  %cmp = icmp eq %struct.list_head* %part1, %part2, !dbg !10201
  %lnot = xor i1 %cmp, true, !dbg !10201
  br i1 %lnot, label %for.body, label %for.end, !dbg !10200

for.body:                                         ; preds = %for.cond
  %15 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10203
  %queue3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %15, i32 0, i32 2, !dbg !10205
  call void @mmc_queue_resume(%struct.mmc_queue* %queue3) #11, !dbg !10206
  br label %for.inc, !dbg !10207

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !10208, metadata !DIExpression()), !dbg !10210
  %16 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10210
  %part5 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %16, i32 0, i32 3, !dbg !10210
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %part5, i32 0, i32 0, !dbg !10210
  %17 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !10210
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !10210
  store i8* %18, i8** %__mptr4, align 8, !dbg !10210
  br label %do.body7, !dbg !10210

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !10211

do.end8:                                          ; preds = %do.body7
  %19 = load i8*, i8** %__mptr4, align 8, !dbg !10210
  %add.ptr10 = getelementptr i8, i8* %19, i64 -480, !dbg !10210
  %20 = bitcast i8* %add.ptr10 to %struct.mmc_blk_data*, !dbg !10210
  store %struct.mmc_blk_data* %20, %struct.mmc_blk_data** %tmp9, align 8, !dbg !10211
  %21 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp9, align 8, !dbg !10210
  store %struct.mmc_blk_data* %21, %struct.mmc_blk_data** %part_md, align 8, !dbg !10201
  br label %for.cond, !dbg !10201, !llvm.loop !10213

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10215

if.end:                                           ; preds = %for.end, %entry
  ret i32 0, !dbg !10216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_mmc_blk_suspend(%struct.mmc_card* %card) #0 !dbg !10217 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %part_md = alloca %struct.mmc_blk_data*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_blk_data*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10218, metadata !DIExpression()), !dbg !10219
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %part_md, metadata !10220, metadata !DIExpression()), !dbg !10221
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !10222, metadata !DIExpression()), !dbg !10223
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10224
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 1, !dbg !10225
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !10226
  %1 = bitcast i8* %call to %struct.mmc_blk_data*, !dbg !10226
  store %struct.mmc_blk_data* %1, %struct.mmc_blk_data** %md, align 8, !dbg !10223
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10227
  %tobool = icmp ne %struct.mmc_blk_data* %2, null, !dbg !10227
  br i1 %tobool, label %if.then, label %if.end, !dbg !10229

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10230
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %3, i32 0, i32 2, !dbg !10232
  call void @mmc_queue_suspend(%struct.mmc_queue* %queue) #11, !dbg !10233
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10234, metadata !DIExpression()), !dbg !10237
  %4 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10237
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %4, i32 0, i32 3, !dbg !10237
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %part, i32 0, i32 0, !dbg !10237
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10237
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !10237
  store i8* %6, i8** %__mptr, align 8, !dbg !10237
  br label %do.body, !dbg !10237

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !10238

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !10237
  %add.ptr = getelementptr i8, i8* %7, i64 -480, !dbg !10237
  %8 = bitcast i8* %add.ptr to %struct.mmc_blk_data*, !dbg !10237
  store %struct.mmc_blk_data* %8, %struct.mmc_blk_data** %tmp, align 8, !dbg !10238
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp, align 8, !dbg !10237
  store %struct.mmc_blk_data* %9, %struct.mmc_blk_data** %part_md, align 8, !dbg !10240
  br label %for.cond, !dbg !10240

for.cond:                                         ; preds = %do.end8, %do.end
  %10 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10241
  %part1 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %10, i32 0, i32 3, !dbg !10241
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10241
  %part2 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %11, i32 0, i32 3, !dbg !10241
  %cmp = icmp eq %struct.list_head* %part1, %part2, !dbg !10241
  %lnot = xor i1 %cmp, true, !dbg !10241
  br i1 %lnot, label %for.body, label %for.end, !dbg !10240

for.body:                                         ; preds = %for.cond
  %12 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10243
  %queue3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %12, i32 0, i32 2, !dbg !10245
  call void @mmc_queue_suspend(%struct.mmc_queue* %queue3) #11, !dbg !10246
  br label %for.inc, !dbg !10247

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !10248, metadata !DIExpression()), !dbg !10250
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10250
  %part5 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 3, !dbg !10250
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %part5, i32 0, i32 0, !dbg !10250
  %14 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !10250
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !10250
  store i8* %15, i8** %__mptr4, align 8, !dbg !10250
  br label %do.body7, !dbg !10250

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !10251

do.end8:                                          ; preds = %do.body7
  %16 = load i8*, i8** %__mptr4, align 8, !dbg !10250
  %add.ptr10 = getelementptr i8, i8* %16, i64 -480, !dbg !10250
  %17 = bitcast i8* %add.ptr10 to %struct.mmc_blk_data*, !dbg !10250
  store %struct.mmc_blk_data* %17, %struct.mmc_blk_data** %tmp9, align 8, !dbg !10251
  %18 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp9, align 8, !dbg !10250
  store %struct.mmc_blk_data* %18, %struct.mmc_blk_data** %part_md, align 8, !dbg !10241
  br label %for.cond, !dbg !10241, !llvm.loop !10253

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10255

if.end:                                           ; preds = %for.end, %entry
  ret i32 0, !dbg !10256
}

; Function Attrs: noredzone
declare dso_local void @mmc_queue_suspend(%struct.mmc_queue*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_queue_resume(%struct.mmc_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_fixup_device(%struct.mmc_card* %card, %struct.mmc_fixup* %table) #0 !dbg !10257 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %table.addr = alloca %struct.mmc_fixup*, align 8
  %f = alloca %struct.mmc_fixup*, align 8
  %rev = alloca i64, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10261, metadata !DIExpression()), !dbg !10262
  store %struct.mmc_fixup* %table, %struct.mmc_fixup** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_fixup** %table.addr, metadata !10263, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.declare(metadata %struct.mmc_fixup** %f, metadata !10265, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.declare(metadata i64* %rev, metadata !10267, metadata !DIExpression()), !dbg !10268
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10269
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 19, !dbg !10269
  %hwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 6, !dbg !10269
  %1 = load i8, i8* %hwrev, align 4, !dbg !10269
  %conv = zext i8 %1 to i64, !dbg !10269
  %shl = shl i64 %conv, 40, !dbg !10269
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10269
  %cid1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 19, !dbg !10269
  %fwrev = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid1, i32 0, i32 7, !dbg !10269
  %3 = load i8, i8* %fwrev, align 1, !dbg !10269
  %conv2 = zext i8 %3 to i64, !dbg !10269
  %shl3 = shl i64 %conv2, 32, !dbg !10269
  %or = or i64 %shl, %shl3, !dbg !10269
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10269
  %cid4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 19, !dbg !10269
  %year = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid4, i32 0, i32 5, !dbg !10269
  %5 = load i16, i16* %year, align 2, !dbg !10269
  %conv5 = zext i16 %5 to i64, !dbg !10269
  %shl6 = shl i64 %conv5, 16, !dbg !10269
  %or7 = or i64 %or, %shl6, !dbg !10269
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10269
  %cid8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 19, !dbg !10269
  %month = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid8, i32 0, i32 8, !dbg !10269
  %7 = load i8, i8* %month, align 2, !dbg !10269
  %conv9 = zext i8 %7 to i64, !dbg !10269
  %or10 = or i64 %or7, %conv9, !dbg !10269
  store i64 %or10, i64* %rev, align 8, !dbg !10268
  %8 = load %struct.mmc_fixup*, %struct.mmc_fixup** %table.addr, align 8, !dbg !10270
  store %struct.mmc_fixup* %8, %struct.mmc_fixup** %f, align 8, !dbg !10272
  br label %for.cond, !dbg !10273

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10274
  %vendor_fixup = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %9, i32 0, i32 8, !dbg !10276
  %10 = load void (%struct.mmc_card*, i32)*, void (%struct.mmc_card*, i32)** %vendor_fixup, align 8, !dbg !10276
  %tobool = icmp ne void (%struct.mmc_card*, i32)* %10, null, !dbg !10277
  br i1 %tobool, label %for.body, label %for.end, !dbg !10277

for.body:                                         ; preds = %for.cond
  %11 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10278
  %manfid = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %11, i32 0, i32 3, !dbg !10281
  %12 = load i32, i32* %manfid, align 8, !dbg !10281
  %cmp = icmp eq i32 %12, -1, !dbg !10282
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !10283

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10284
  %manfid12 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %13, i32 0, i32 3, !dbg !10285
  %14 = load i32, i32* %manfid12, align 8, !dbg !10285
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10286
  %cid13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 19, !dbg !10287
  %manfid14 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid13, i32 0, i32 0, !dbg !10288
  %16 = load i32, i32* %manfid14, align 4, !dbg !10288
  %cmp15 = icmp eq i32 %14, %16, !dbg !10289
  br i1 %cmp15, label %land.lhs.true, label %if.end, !dbg !10290

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %17 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10291
  %oemid = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %17, i32 0, i32 4, !dbg !10292
  %18 = load i16, i16* %oemid, align 4, !dbg !10292
  %conv17 = zext i16 %18 to i32, !dbg !10291
  %cmp18 = icmp eq i32 %conv17, 65535, !dbg !10293
  br i1 %cmp18, label %land.lhs.true28, label %lor.lhs.false20, !dbg !10294

lor.lhs.false20:                                  ; preds = %land.lhs.true
  %19 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10295
  %oemid21 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %19, i32 0, i32 4, !dbg !10296
  %20 = load i16, i16* %oemid21, align 4, !dbg !10296
  %conv22 = zext i16 %20 to i32, !dbg !10295
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10297
  %cid23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 19, !dbg !10298
  %oemid24 = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid23, i32 0, i32 4, !dbg !10299
  %22 = load i16, i16* %oemid24, align 4, !dbg !10299
  %conv25 = zext i16 %22 to i32, !dbg !10297
  %cmp26 = icmp eq i32 %conv22, %conv25, !dbg !10300
  br i1 %cmp26, label %land.lhs.true28, label %if.end, !dbg !10301

land.lhs.true28:                                  ; preds = %lor.lhs.false20, %land.lhs.true
  %23 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10302
  %name = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %23, i32 0, i32 0, !dbg !10303
  %24 = load i8*, i8** %name, align 8, !dbg !10303
  %cmp29 = icmp eq i8* %24, null, !dbg !10304
  br i1 %cmp29, label %land.lhs.true35, label %lor.lhs.false31, !dbg !10305

lor.lhs.false31:                                  ; preds = %land.lhs.true28
  %25 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10306
  %name32 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %25, i32 0, i32 0, !dbg !10307
  %26 = load i8*, i8** %name32, align 8, !dbg !10307
  %27 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10308
  %cid33 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %27, i32 0, i32 19, !dbg !10309
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid33, i32 0, i32 1, !dbg !10310
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !10308
  %call = call i32 @strncmp(i8* %26, i8* %arraydecay, i64 8) #11, !dbg !10311
  %tobool34 = icmp ne i32 %call, 0, !dbg !10311
  br i1 %tobool34, label %if.end, label %land.lhs.true35, !dbg !10312

land.lhs.true35:                                  ; preds = %lor.lhs.false31, %land.lhs.true28
  %28 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10313
  %cis_vendor = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %28, i32 0, i32 5, !dbg !10314
  %29 = load i16, i16* %cis_vendor, align 2, !dbg !10314
  %conv36 = zext i16 %29 to i32, !dbg !10313
  %30 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10315
  %cis = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %30, i32 0, i32 28, !dbg !10316
  %vendor = getelementptr inbounds %struct.sdio_cis, %struct.sdio_cis* %cis, i32 0, i32 0, !dbg !10317
  %31 = load i16, i16* %vendor, align 4, !dbg !10317
  %conv37 = zext i16 %31 to i32, !dbg !10315
  %cmp38 = icmp eq i32 %conv36, %conv37, !dbg !10318
  br i1 %cmp38, label %land.lhs.true45, label %lor.lhs.false40, !dbg !10319

lor.lhs.false40:                                  ; preds = %land.lhs.true35
  %32 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10320
  %cis_vendor41 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %32, i32 0, i32 5, !dbg !10321
  %33 = load i16, i16* %cis_vendor41, align 2, !dbg !10321
  %conv42 = zext i16 %33 to i32, !dbg !10320
  %cmp43 = icmp eq i32 %conv42, 65535, !dbg !10322
  br i1 %cmp43, label %land.lhs.true45, label %if.end, !dbg !10323

land.lhs.true45:                                  ; preds = %lor.lhs.false40, %land.lhs.true35
  %34 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10324
  %cis_device = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %34, i32 0, i32 6, !dbg !10325
  %35 = load i16, i16* %cis_device, align 8, !dbg !10325
  %conv46 = zext i16 %35 to i32, !dbg !10324
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10326
  %cis47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 28, !dbg !10327
  %device = getelementptr inbounds %struct.sdio_cis, %struct.sdio_cis* %cis47, i32 0, i32 1, !dbg !10328
  %37 = load i16, i16* %device, align 2, !dbg !10328
  %conv48 = zext i16 %37 to i32, !dbg !10326
  %cmp49 = icmp eq i32 %conv46, %conv48, !dbg !10329
  br i1 %cmp49, label %land.lhs.true56, label %lor.lhs.false51, !dbg !10330

lor.lhs.false51:                                  ; preds = %land.lhs.true45
  %38 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10331
  %cis_device52 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %38, i32 0, i32 6, !dbg !10332
  %39 = load i16, i16* %cis_device52, align 8, !dbg !10332
  %conv53 = zext i16 %39 to i32, !dbg !10331
  %cmp54 = icmp eq i32 %conv53, 65535, !dbg !10333
  br i1 %cmp54, label %land.lhs.true56, label %if.end, !dbg !10334

land.lhs.true56:                                  ; preds = %lor.lhs.false51, %land.lhs.true45
  %40 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10335
  %ext_csd_rev = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %40, i32 0, i32 7, !dbg !10336
  %41 = load i32, i32* %ext_csd_rev, align 4, !dbg !10336
  %cmp57 = icmp eq i32 %41, -1, !dbg !10337
  br i1 %cmp57, label %land.lhs.true65, label %lor.lhs.false59, !dbg !10338

lor.lhs.false59:                                  ; preds = %land.lhs.true56
  %42 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10339
  %ext_csd_rev60 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %42, i32 0, i32 7, !dbg !10340
  %43 = load i32, i32* %ext_csd_rev60, align 4, !dbg !10340
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10341
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 21, !dbg !10342
  %rev61 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !10343
  %45 = load i8, i8* %rev61, align 8, !dbg !10343
  %conv62 = zext i8 %45 to i32, !dbg !10341
  %cmp63 = icmp eq i32 %43, %conv62, !dbg !10344
  br i1 %cmp63, label %land.lhs.true65, label %if.end, !dbg !10345

land.lhs.true65:                                  ; preds = %lor.lhs.false59, %land.lhs.true56
  %46 = load i64, i64* %rev, align 8, !dbg !10346
  %47 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10347
  %rev_start = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %47, i32 0, i32 1, !dbg !10348
  %48 = load i64, i64* %rev_start, align 8, !dbg !10348
  %cmp66 = icmp uge i64 %46, %48, !dbg !10349
  br i1 %cmp66, label %land.lhs.true68, label %if.end, !dbg !10350

land.lhs.true68:                                  ; preds = %land.lhs.true65
  %49 = load i64, i64* %rev, align 8, !dbg !10351
  %50 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10352
  %rev_end = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %50, i32 0, i32 2, !dbg !10353
  %51 = load i64, i64* %rev_end, align 8, !dbg !10353
  %cmp69 = icmp ule i64 %49, %51, !dbg !10354
  br i1 %cmp69, label %if.then, label %if.end, !dbg !10355

if.then:                                          ; preds = %land.lhs.true68
  %52 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10356
  %vendor_fixup71 = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %52, i32 0, i32 8, !dbg !10358
  %53 = load void (%struct.mmc_card*, i32)*, void (%struct.mmc_card*, i32)** %vendor_fixup71, align 8, !dbg !10358
  %54 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10359
  %55 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10360
  %data = getelementptr inbounds %struct.mmc_fixup, %struct.mmc_fixup* %55, i32 0, i32 9, !dbg !10361
  %56 = load i32, i32* %data, align 8, !dbg !10361
  call void %53(%struct.mmc_card* %54, i32 %56) #11, !dbg !10356
  br label %if.end, !dbg !10362

if.end:                                           ; preds = %if.then, %land.lhs.true68, %land.lhs.true65, %lor.lhs.false59, %lor.lhs.false51, %lor.lhs.false40, %lor.lhs.false31, %lor.lhs.false20, %lor.lhs.false
  br label %for.inc, !dbg !10363

for.inc:                                          ; preds = %if.end
  %57 = load %struct.mmc_fixup*, %struct.mmc_fixup** %f, align 8, !dbg !10364
  %incdec.ptr = getelementptr %struct.mmc_fixup, %struct.mmc_fixup* %57, i32 1, !dbg !10364
  store %struct.mmc_fixup* %incdec.ptr, %struct.mmc_fixup** %f, align 8, !dbg !10364
  br label %for.cond, !dbg !10365, !llvm.loop !10366

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10368
}

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mmc_blk_data* @mmc_blk_alloc(%struct.mmc_card* %card) #0 !dbg !10369 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %size = alloca i64, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10372, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10374, metadata !DIExpression()), !dbg !10375
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10376
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 4, !dbg !10376
  %1 = load i32, i32* %type, align 8, !dbg !10376
  %cmp = icmp eq i32 %1, 1, !dbg !10376
  br i1 %cmp, label %if.else, label %land.lhs.true, !dbg !10378

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10379
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 5, !dbg !10379
  %3 = load i32, i32* %state, align 4, !dbg !10379
  %and = and i32 %3, 4, !dbg !10379
  %tobool = icmp ne i32 %and, 0, !dbg !10379
  br i1 %tobool, label %if.then, label %if.else, !dbg !10380

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10381
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 21, !dbg !10383
  %sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 19, !dbg !10384
  %5 = load i32, i32* %sectors, align 8, !dbg !10384
  %conv = zext i32 %5 to i64, !dbg !10381
  store i64 %conv, i64* %size, align 8, !dbg !10385
  br label %if.end, !dbg !10386

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10387
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 20, !dbg !10389
  %capacity = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 11, !dbg !10390
  %7 = load i32, i32* %capacity, align 4, !dbg !10390
  %conv1 = zext i32 %7 to i64, !dbg !10391
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10392
  %csd2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 20, !dbg !10393
  %read_blkbits = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd2, i32 0, i32 9, !dbg !10394
  %9 = load i32, i32* %read_blkbits, align 4, !dbg !10394
  %sub = sub i32 %9, 9, !dbg !10395
  %sh_prom = zext i32 %sub to i64, !dbg !10396
  %shl = shl i64 %conv1, %sh_prom, !dbg !10396
  store i64 %shl, i64* %size, align 8, !dbg !10397
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10398
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10399
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 1, !dbg !10400
  %12 = load i64, i64* %size, align 8, !dbg !10401
  %call = call %struct.mmc_blk_data* @mmc_blk_alloc_req(%struct.mmc_card* %10, %struct.device* %dev, i64 %12, i1 zeroext false, i8* null, i32 1) #11, !dbg !10402
  ret %struct.mmc_blk_data* %call, !dbg !10403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !10404 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10408, metadata !DIExpression()), !dbg !10409
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10410
  %1 = ptrtoint i8* %0 to i64, !dbg !10410
  %2 = inttoptr i64 %1 to i8*, !dbg !10410
  %3 = ptrtoint i8* %2 to i64, !dbg !10410
  %cmp = icmp uge i64 %3, -4095, !dbg !10410
  %lnot = xor i1 %cmp, true, !dbg !10410
  %lnot1 = xor i1 %lnot, true, !dbg !10410
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10410
  %conv = sext i32 %lnot.ext to i64, !dbg !10410
  %tobool = icmp ne i64 %conv, 0, !dbg !10410
  ret i1 %tobool, !dbg !10411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !10412 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10415, metadata !DIExpression()), !dbg !10416
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10417
  %1 = ptrtoint i8* %0 to i64, !dbg !10418
  ret i64 %1, !dbg !10419
}

; Function Attrs: noredzone
declare dso_local void @string_get_size(i64, i64, i32, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !10420 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10425
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10427
  %1 = load i8*, i8** %init_name, align 8, !dbg !10427
  %tobool = icmp ne i8* %1, null, !dbg !10425
  br i1 %tobool, label %if.then, label %if.end, !dbg !10428

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10429
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !10430
  %3 = load i8*, i8** %init_name1, align 8, !dbg !10430
  store i8* %3, i8** %retval, align 8, !dbg !10431
  br label %return, !dbg !10431

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10432
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10433
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !10434
  store i8* %call, i8** %retval, align 8, !dbg !10435
  br label %return, !dbg !10435

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !10436
  ret i8* %5, !dbg !10436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_alloc_parts(%struct.mmc_card* %card, %struct.mmc_blk_data* %md) #0 !dbg !10437 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %idx = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !10442, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10446, metadata !DIExpression()), !dbg !10447
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10448
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 4, !dbg !10448
  %1 = load i32, i32* %type, align 8, !dbg !10448
  %cmp = icmp eq i32 %1, 0, !dbg !10448
  br i1 %cmp, label %if.end, label %if.then, !dbg !10450

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10451
  br label %return, !dbg !10451

if.end:                                           ; preds = %entry
  store i32 0, i32* %idx, align 4, !dbg !10452
  br label %for.cond, !dbg !10454

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %idx, align 4, !dbg !10455
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10457
  %nr_parts = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 41, !dbg !10458
  %4 = load i32, i32* %nr_parts, align 8, !dbg !10458
  %cmp1 = icmp ult i32 %2, %4, !dbg !10459
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10460

for.body:                                         ; preds = %for.cond
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10461
  %part = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 40, !dbg !10464
  %6 = load i32, i32* %idx, align 4, !dbg !10465
  %idxprom = sext i32 %6 to i64, !dbg !10461
  %arrayidx = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part, i64 0, i64 %idxprom, !dbg !10461
  %area_type = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx, i32 0, i32 4, !dbg !10466
  %7 = load i32, i32* %area_type, align 4, !dbg !10466
  %and = and i32 %7, 8, !dbg !10467
  %tobool = icmp ne i32 %and, 0, !dbg !10467
  br i1 %tobool, label %if.then2, label %if.else, !dbg !10468

if.then2:                                         ; preds = %for.body
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10469
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10471
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10472
  %part3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 40, !dbg !10473
  %11 = load i32, i32* %idx, align 4, !dbg !10474
  %idxprom4 = sext i32 %11 to i64, !dbg !10472
  %arrayidx5 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part3, i64 0, i64 %idxprom4, !dbg !10472
  %part_cfg = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx5, i32 0, i32 1, !dbg !10475
  %12 = load i32, i32* %part_cfg, align 8, !dbg !10475
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10476
  %part6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 40, !dbg !10477
  %14 = load i32, i32* %idx, align 4, !dbg !10478
  %idxprom7 = sext i32 %14 to i64, !dbg !10476
  %arrayidx8 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part6, i64 0, i64 %idxprom7, !dbg !10476
  %size = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx8, i32 0, i32 0, !dbg !10479
  %15 = load i64, i64* %size, align 8, !dbg !10479
  %shr = lshr i64 %15, 9, !dbg !10480
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10481
  %part9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 40, !dbg !10482
  %17 = load i32, i32* %idx, align 4, !dbg !10483
  %idxprom10 = sext i32 %17 to i64, !dbg !10481
  %arrayidx11 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part9, i64 0, i64 %idxprom10, !dbg !10481
  %name = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx11, i32 0, i32 2, !dbg !10484
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %name, i64 0, i64 0, !dbg !10481
  %call = call i32 @mmc_blk_alloc_rpmb_part(%struct.mmc_card* %8, %struct.mmc_blk_data* %9, i32 %12, i64 %shr, i8* %arraydecay) #11, !dbg !10485
  store i32 %call, i32* %ret, align 4, !dbg !10486
  %18 = load i32, i32* %ret, align 4, !dbg !10487
  %tobool12 = icmp ne i32 %18, 0, !dbg !10487
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10489

if.then13:                                        ; preds = %if.then2
  %19 = load i32, i32* %ret, align 4, !dbg !10490
  store i32 %19, i32* %retval, align 4, !dbg !10491
  br label %return, !dbg !10491

if.end14:                                         ; preds = %if.then2
  br label %if.end48, !dbg !10492

if.else:                                          ; preds = %for.body
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10493
  %part15 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 40, !dbg !10495
  %21 = load i32, i32* %idx, align 4, !dbg !10496
  %idxprom16 = sext i32 %21 to i64, !dbg !10493
  %arrayidx17 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part15, i64 0, i64 %idxprom16, !dbg !10493
  %size18 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx17, i32 0, i32 0, !dbg !10497
  %22 = load i64, i64* %size18, align 8, !dbg !10497
  %tobool19 = icmp ne i64 %22, 0, !dbg !10493
  br i1 %tobool19, label %if.then20, label %if.end47, !dbg !10498

if.then20:                                        ; preds = %if.else
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10499
  %24 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10501
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10502
  %part21 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %25, i32 0, i32 40, !dbg !10503
  %26 = load i32, i32* %idx, align 4, !dbg !10504
  %idxprom22 = sext i32 %26 to i64, !dbg !10502
  %arrayidx23 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part21, i64 0, i64 %idxprom22, !dbg !10502
  %part_cfg24 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx23, i32 0, i32 1, !dbg !10505
  %27 = load i32, i32* %part_cfg24, align 8, !dbg !10505
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10506
  %part25 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 40, !dbg !10507
  %29 = load i32, i32* %idx, align 4, !dbg !10508
  %idxprom26 = sext i32 %29 to i64, !dbg !10506
  %arrayidx27 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part25, i64 0, i64 %idxprom26, !dbg !10506
  %size28 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx27, i32 0, i32 0, !dbg !10509
  %30 = load i64, i64* %size28, align 8, !dbg !10509
  %shr29 = lshr i64 %30, 9, !dbg !10510
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10511
  %part30 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %31, i32 0, i32 40, !dbg !10512
  %32 = load i32, i32* %idx, align 4, !dbg !10513
  %idxprom31 = sext i32 %32 to i64, !dbg !10511
  %arrayidx32 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part30, i64 0, i64 %idxprom31, !dbg !10511
  %force_ro = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx32, i32 0, i32 3, !dbg !10514
  %33 = load i8, i8* %force_ro, align 8, !dbg !10514
  %tobool33 = trunc i8 %33 to i1, !dbg !10514
  %34 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10515
  %part34 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %34, i32 0, i32 40, !dbg !10516
  %35 = load i32, i32* %idx, align 4, !dbg !10517
  %idxprom35 = sext i32 %35 to i64, !dbg !10515
  %arrayidx36 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part34, i64 0, i64 %idxprom35, !dbg !10515
  %name37 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx36, i32 0, i32 2, !dbg !10518
  %arraydecay38 = getelementptr inbounds [20 x i8], [20 x i8]* %name37, i64 0, i64 0, !dbg !10515
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10519
  %part39 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 40, !dbg !10520
  %37 = load i32, i32* %idx, align 4, !dbg !10521
  %idxprom40 = sext i32 %37 to i64, !dbg !10519
  %arrayidx41 = getelementptr [7 x %struct.mmc_part], [7 x %struct.mmc_part]* %part39, i64 0, i64 %idxprom40, !dbg !10519
  %area_type42 = getelementptr inbounds %struct.mmc_part, %struct.mmc_part* %arrayidx41, i32 0, i32 4, !dbg !10522
  %38 = load i32, i32* %area_type42, align 4, !dbg !10522
  %call43 = call i32 @mmc_blk_alloc_part(%struct.mmc_card* %23, %struct.mmc_blk_data* %24, i32 %27, i64 %shr29, i1 zeroext %tobool33, i8* %arraydecay38, i32 %38) #11, !dbg !10523
  store i32 %call43, i32* %ret, align 4, !dbg !10524
  %39 = load i32, i32* %ret, align 4, !dbg !10525
  %tobool44 = icmp ne i32 %39, 0, !dbg !10525
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !10527

if.then45:                                        ; preds = %if.then20
  %40 = load i32, i32* %ret, align 4, !dbg !10528
  store i32 %40, i32* %retval, align 4, !dbg !10529
  br label %return, !dbg !10529

if.end46:                                         ; preds = %if.then20
  br label %if.end47, !dbg !10530

if.end47:                                         ; preds = %if.end46, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end14
  br label %for.inc, !dbg !10531

for.inc:                                          ; preds = %if.end48
  %41 = load i32, i32* %idx, align 4, !dbg !10532
  %inc = add i32 %41, 1, !dbg !10532
  store i32 %inc, i32* %idx, align 4, !dbg !10532
  br label %for.cond, !dbg !10533, !llvm.loop !10534

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10536
  br label %return, !dbg !10536

return:                                           ; preds = %for.end, %if.then45, %if.then13, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !10537
  ret i32 %42, !dbg !10537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !10538 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10541, metadata !DIExpression()), !dbg !10542
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10543, metadata !DIExpression()), !dbg !10544
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10545
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10546
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !10547
  store i8* %0, i8** %driver_data, align 8, !dbg !10548
  ret void, !dbg !10549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_add_disk(%struct.mmc_blk_data* %md) #0 !dbg !10550 {
entry:
  %retval = alloca i32, align 4
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %ret = alloca i32, align 4
  %card = alloca %struct.mmc_card*, align 8
  %mode11 = alloca i16, align 2
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10555, metadata !DIExpression()), !dbg !10556
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !10557, metadata !DIExpression()), !dbg !10558
  %0 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10559
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %0, i32 0, i32 2, !dbg !10560
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !10561
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !10561
  store %struct.mmc_card* %1, %struct.mmc_card** %card, align 8, !dbg !10558
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10562
  %parent = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 0, !dbg !10563
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !10563
  %4 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10564
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %4, i32 0, i32 1, !dbg !10565
  %5 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !10565
  call void @device_add_disk(%struct.device* %3, %struct.gendisk* %5, %struct.attribute_group** null) #11, !dbg !10566
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10567
  %force_ro = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %6, i32 0, i32 11, !dbg !10568
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %force_ro, i32 0, i32 1, !dbg !10569
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @force_ro_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !10570
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10571
  %force_ro2 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %7, i32 0, i32 11, !dbg !10572
  %store = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %force_ro2, i32 0, i32 2, !dbg !10573
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @force_ro_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store, align 8, !dbg !10574
  br label %do.body, !dbg !10575

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10576

do.end:                                           ; preds = %do.body
  %8 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10578
  %force_ro3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %8, i32 0, i32 11, !dbg !10579
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %force_ro3, i32 0, i32 0, !dbg !10580
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !10581
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0), i8** %name, align 8, !dbg !10582
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10583
  %force_ro4 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %9, i32 0, i32 11, !dbg !10584
  %attr5 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %force_ro4, i32 0, i32 0, !dbg !10585
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr5, i32 0, i32 1, !dbg !10586
  store i16 420, i16* %mode, align 8, !dbg !10587
  %10 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10588
  %disk6 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %10, i32 0, i32 1, !dbg !10588
  %11 = load %struct.gendisk*, %struct.gendisk** %disk6, align 8, !dbg !10588
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %11, i32 0, i32 7, !dbg !10588
  %__dev = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 5, !dbg !10588
  %12 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10589
  %force_ro7 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %12, i32 0, i32 11, !dbg !10590
  %call = call i32 @device_create_file(%struct.device* %__dev, %struct.device_attribute* %force_ro7) #11, !dbg !10591
  store i32 %call, i32* %ret, align 4, !dbg !10592
  %13 = load i32, i32* %ret, align 4, !dbg !10593
  %tobool = icmp ne i32 %13, 0, !dbg !10593
  br i1 %tobool, label %if.then, label %if.end, !dbg !10595

if.then:                                          ; preds = %do.end
  br label %force_ro_fail, !dbg !10596

if.end:                                           ; preds = %do.end
  %14 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10597
  %area_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %14, i32 0, i32 13, !dbg !10599
  %15 = load i32, i32* %area_type, align 8, !dbg !10599
  %and = and i32 %15, 2, !dbg !10600
  %tobool8 = icmp ne i32 %and, 0, !dbg !10600
  br i1 %tobool8, label %land.lhs.true, label %if.end36, !dbg !10601

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !10602
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 21, !dbg !10603
  %boot_ro_lockable = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 38, !dbg !10604
  %17 = load i8, i8* %boot_ro_lockable, align 8, !dbg !10604
  %tobool9 = trunc i8 %17 to i1, !dbg !10604
  br i1 %tobool9, label %if.then10, label %if.end36, !dbg !10605

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i16* %mode11, metadata !10606, metadata !DIExpression()), !dbg !10608
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !10609
  %ext_csd12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 21, !dbg !10611
  %boot_ro_lock = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd12, i32 0, i32 37, !dbg !10612
  %19 = load i32, i32* %boot_ro_lock, align 4, !dbg !10612
  %and13 = and i32 %19, 64, !dbg !10613
  %tobool14 = icmp ne i32 %and13, 0, !dbg !10613
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !10614

if.then15:                                        ; preds = %if.then10
  store i16 292, i16* %mode11, align 2, !dbg !10615
  br label %if.end16, !dbg !10616

if.else:                                          ; preds = %if.then10
  store i16 420, i16* %mode11, align 2, !dbg !10617
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then15
  %20 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10618
  %power_ro_lock = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %20, i32 0, i32 12, !dbg !10619
  %show17 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %power_ro_lock, i32 0, i32 1, !dbg !10620
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @power_ro_lock_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show17, align 8, !dbg !10621
  %21 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10622
  %power_ro_lock18 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %21, i32 0, i32 12, !dbg !10623
  %store19 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %power_ro_lock18, i32 0, i32 2, !dbg !10624
  store i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @power_ro_lock_store, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)** %store19, align 8, !dbg !10625
  br label %do.body20, !dbg !10626

do.body20:                                        ; preds = %if.end16
  br label %do.end21, !dbg !10627

do.end21:                                         ; preds = %do.body20
  %22 = load i16, i16* %mode11, align 2, !dbg !10629
  %23 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10630
  %power_ro_lock22 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %23, i32 0, i32 12, !dbg !10631
  %attr23 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %power_ro_lock22, i32 0, i32 0, !dbg !10632
  %mode24 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr23, i32 0, i32 1, !dbg !10633
  store i16 %22, i16* %mode24, align 8, !dbg !10634
  %24 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10635
  %power_ro_lock25 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %24, i32 0, i32 12, !dbg !10636
  %attr26 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %power_ro_lock25, i32 0, i32 0, !dbg !10637
  %name27 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr26, i32 0, i32 0, !dbg !10638
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i8** %name27, align 8, !dbg !10639
  %25 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10640
  %disk28 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %25, i32 0, i32 1, !dbg !10640
  %26 = load %struct.gendisk*, %struct.gendisk** %disk28, align 8, !dbg !10640
  %part029 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %26, i32 0, i32 7, !dbg !10640
  %__dev30 = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part029, i32 0, i32 5, !dbg !10640
  %27 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10641
  %power_ro_lock31 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %27, i32 0, i32 12, !dbg !10642
  %call32 = call i32 @device_create_file(%struct.device* %__dev30, %struct.device_attribute* %power_ro_lock31) #11, !dbg !10643
  store i32 %call32, i32* %ret, align 4, !dbg !10644
  %28 = load i32, i32* %ret, align 4, !dbg !10645
  %tobool33 = icmp ne i32 %28, 0, !dbg !10645
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !10647

if.then34:                                        ; preds = %do.end21
  br label %power_ro_lock_fail, !dbg !10648

if.end35:                                         ; preds = %do.end21
  br label %if.end36, !dbg !10649

if.end36:                                         ; preds = %if.end35, %land.lhs.true, %if.end
  %29 = load i32, i32* %ret, align 4, !dbg !10650
  store i32 %29, i32* %retval, align 4, !dbg !10651
  br label %return, !dbg !10651

power_ro_lock_fail:                               ; preds = %if.then34
  call void @llvm.dbg.label(metadata !10652), !dbg !10653
  %30 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10654
  %disk37 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %30, i32 0, i32 1, !dbg !10654
  %31 = load %struct.gendisk*, %struct.gendisk** %disk37, align 8, !dbg !10654
  %part038 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %31, i32 0, i32 7, !dbg !10654
  %__dev39 = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part038, i32 0, i32 5, !dbg !10654
  %32 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10655
  %force_ro40 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %32, i32 0, i32 11, !dbg !10656
  call void @device_remove_file(%struct.device* %__dev39, %struct.device_attribute* %force_ro40) #11, !dbg !10657
  br label %force_ro_fail, !dbg !10657

force_ro_fail:                                    ; preds = %power_ro_lock_fail, %if.then
  call void @llvm.dbg.label(metadata !10658), !dbg !10659
  %33 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10660
  %disk41 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %33, i32 0, i32 1, !dbg !10661
  %34 = load %struct.gendisk*, %struct.gendisk** %disk41, align 8, !dbg !10661
  call void @del_gendisk(%struct.gendisk* %34) #11, !dbg !10662
  %35 = load i32, i32* %ret, align 4, !dbg !10663
  store i32 %35, i32* %retval, align 4, !dbg !10664
  br label %return, !dbg !10664

return:                                           ; preds = %force_ro_fail, %if.end36
  %36 = load i32, i32* %retval, align 4, !dbg !10665
  ret i32 %36, !dbg !10665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_add_debugfs(%struct.mmc_card* %card, %struct.mmc_blk_data* %md) #0 !dbg !10666 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !10669, metadata !DIExpression()), !dbg !10670
  ret i32 0, !dbg !10671
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_set_autosuspend_delay(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_use_autosuspend(%struct.device* %dev) #0 !dbg !10672 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10674, metadata !DIExpression()), !dbg !10675
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10676
  call void @__pm_runtime_use_autosuspend(%struct.device* %0, i1 zeroext true) #11, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_active(%struct.device* %dev) #0 !dbg !10679 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10680, metadata !DIExpression()), !dbg !10681
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10682
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 0) #11, !dbg !10683
  ret i32 %call, !dbg !10684
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_remove_parts(%struct.mmc_card* %card, %struct.mmc_blk_data* %md) #0 !dbg !10685 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %pos = alloca %struct.list_head*, align 8
  %q = alloca %struct.list_head*, align 8
  %part_md = alloca %struct.mmc_blk_data*, align 8
  %rpmb = alloca %struct.mmc_rpmb_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_rpmb_data*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp13 = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !10692, metadata !DIExpression()), !dbg !10693
  call void @llvm.dbg.declare(metadata %struct.list_head** %q, metadata !10694, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %part_md, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb, metadata !10698, metadata !DIExpression()), !dbg !10699
  %0 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10700
  %rpmbs = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %0, i32 0, i32 4, !dbg !10700
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %rpmbs, i32 0, i32 0, !dbg !10700
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10700
  store %struct.list_head* %1, %struct.list_head** %pos, align 8, !dbg !10700
  %2 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10700
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !10700
  %3 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !10700
  store %struct.list_head* %3, %struct.list_head** %q, align 8, !dbg !10700
  br label %for.cond, !dbg !10700

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10702
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10702
  %rpmbs2 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %5, i32 0, i32 4, !dbg !10702
  %cmp = icmp ne %struct.list_head* %4, %rpmbs2, !dbg !10702
  br i1 %cmp, label %for.body, label %for.end, !dbg !10700

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10704, metadata !DIExpression()), !dbg !10707
  %6 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10707
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !10707
  store i8* %7, i8** %__mptr, align 8, !dbg !10707
  br label %do.body, !dbg !10707

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !10708

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !10707
  %add.ptr = getelementptr i8, i8* %8, i64 -816, !dbg !10707
  %9 = bitcast i8* %add.ptr to %struct.mmc_rpmb_data*, !dbg !10707
  store %struct.mmc_rpmb_data* %9, %struct.mmc_rpmb_data** %tmp, align 8, !dbg !10708
  %10 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %tmp, align 8, !dbg !10707
  store %struct.mmc_rpmb_data* %10, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !10710
  %11 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10711
  call void @list_del(%struct.list_head* %11) #11, !dbg !10712
  %12 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !10713
  call void @mmc_blk_remove_rpmb_part(%struct.mmc_rpmb_data* %12) #11, !dbg !10714
  br label %for.inc, !dbg !10715

for.inc:                                          ; preds = %do.end
  %13 = load %struct.list_head*, %struct.list_head** %q, align 8, !dbg !10702
  store %struct.list_head* %13, %struct.list_head** %pos, align 8, !dbg !10702
  %14 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10702
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %14, i32 0, i32 0, !dbg !10702
  %15 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !10702
  store %struct.list_head* %15, %struct.list_head** %q, align 8, !dbg !10702
  br label %for.cond, !dbg !10702, !llvm.loop !10716

for.end:                                          ; preds = %for.cond
  %16 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10718
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %16, i32 0, i32 3, !dbg !10718
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %part, i32 0, i32 0, !dbg !10718
  %17 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !10718
  store %struct.list_head* %17, %struct.list_head** %pos, align 8, !dbg !10718
  %18 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10718
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %18, i32 0, i32 0, !dbg !10718
  %19 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !10718
  store %struct.list_head* %19, %struct.list_head** %q, align 8, !dbg !10718
  br label %for.cond6, !dbg !10718

for.cond6:                                        ; preds = %for.inc15, %for.end
  %20 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10720
  %21 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10720
  %part7 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %21, i32 0, i32 3, !dbg !10720
  %cmp8 = icmp ne %struct.list_head* %20, %part7, !dbg !10720
  br i1 %cmp8, label %for.body9, label %for.end17, !dbg !10718

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !10722, metadata !DIExpression()), !dbg !10725
  %22 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10725
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !10725
  store i8* %23, i8** %__mptr10, align 8, !dbg !10725
  br label %do.body11, !dbg !10725

do.body11:                                        ; preds = %for.body9
  br label %do.end12, !dbg !10726

do.end12:                                         ; preds = %do.body11
  %24 = load i8*, i8** %__mptr10, align 8, !dbg !10725
  %add.ptr14 = getelementptr i8, i8* %24, i64 -480, !dbg !10725
  %25 = bitcast i8* %add.ptr14 to %struct.mmc_blk_data*, !dbg !10725
  store %struct.mmc_blk_data* %25, %struct.mmc_blk_data** %tmp13, align 8, !dbg !10726
  %26 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp13, align 8, !dbg !10725
  store %struct.mmc_blk_data* %26, %struct.mmc_blk_data** %part_md, align 8, !dbg !10728
  %27 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10729
  call void @list_del(%struct.list_head* %27) #11, !dbg !10730
  %28 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !10731
  call void @mmc_blk_remove_req(%struct.mmc_blk_data* %28) #11, !dbg !10732
  br label %for.inc15, !dbg !10733

for.inc15:                                        ; preds = %do.end12
  %29 = load %struct.list_head*, %struct.list_head** %q, align 8, !dbg !10720
  store %struct.list_head* %29, %struct.list_head** %pos, align 8, !dbg !10720
  %30 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !10720
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %30, i32 0, i32 0, !dbg !10720
  %31 = load %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !10720
  store %struct.list_head* %31, %struct.list_head** %q, align 8, !dbg !10720
  br label %for.cond6, !dbg !10720, !llvm.loop !10734

for.end17:                                        ; preds = %for.cond6
  ret void, !dbg !10736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_remove_req(%struct.mmc_blk_data* %md) #0 !dbg !10737 {
entry:
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %card = alloca %struct.mmc_card*, align 8
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !10740, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !10742, metadata !DIExpression()), !dbg !10743
  %0 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10744
  %tobool = icmp ne %struct.mmc_blk_data* %0, null, !dbg !10744
  br i1 %tobool, label %if.then, label %if.end15, !dbg !10746

if.then:                                          ; preds = %entry
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10747
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %1, i32 0, i32 2, !dbg !10749
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !10750
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !10750
  store %struct.mmc_card* %2, %struct.mmc_card** %card, align 8, !dbg !10751
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10752
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %3, i32 0, i32 1, !dbg !10754
  %4 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !10754
  %flags = getelementptr inbounds %struct.gendisk, %struct.gendisk* %4, i32 0, i32 11, !dbg !10755
  %5 = load i32, i32* %flags, align 8, !dbg !10755
  %and = and i32 %5, 16, !dbg !10756
  %tobool2 = icmp ne i32 %and, 0, !dbg !10756
  br i1 %tobool2, label %if.then3, label %if.end13, !dbg !10757

if.then3:                                         ; preds = %if.then
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10758
  %disk4 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %6, i32 0, i32 1, !dbg !10758
  %7 = load %struct.gendisk*, %struct.gendisk** %disk4, align 8, !dbg !10758
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %7, i32 0, i32 7, !dbg !10758
  %__dev = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 5, !dbg !10758
  %8 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10760
  %force_ro = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %8, i32 0, i32 11, !dbg !10761
  call void @device_remove_file(%struct.device* %__dev, %struct.device_attribute* %force_ro) #11, !dbg !10762
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10763
  %area_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %9, i32 0, i32 13, !dbg !10765
  %10 = load i32, i32* %area_type, align 8, !dbg !10765
  %and5 = and i32 %10, 2, !dbg !10766
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10766
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !10767

land.lhs.true:                                    ; preds = %if.then3
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !10768
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 21, !dbg !10769
  %boot_ro_lockable = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 38, !dbg !10770
  %12 = load i8, i8* %boot_ro_lockable, align 8, !dbg !10770
  %tobool7 = trunc i8 %12 to i1, !dbg !10770
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !10771

if.then8:                                         ; preds = %land.lhs.true
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10772
  %disk9 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 1, !dbg !10772
  %14 = load %struct.gendisk*, %struct.gendisk** %disk9, align 8, !dbg !10772
  %part010 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %14, i32 0, i32 7, !dbg !10772
  %__dev11 = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part010, i32 0, i32 5, !dbg !10772
  %15 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10773
  %power_ro_lock = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %15, i32 0, i32 12, !dbg !10774
  call void @device_remove_file(%struct.device* %__dev11, %struct.device_attribute* %power_ro_lock) #11, !dbg !10775
  br label %if.end, !dbg !10775

if.end:                                           ; preds = %if.then8, %land.lhs.true, %if.then3
  %16 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10776
  %disk12 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %16, i32 0, i32 1, !dbg !10777
  %17 = load %struct.gendisk*, %struct.gendisk** %disk12, align 8, !dbg !10777
  call void @del_gendisk(%struct.gendisk* %17) #11, !dbg !10778
  br label %if.end13, !dbg !10779

if.end13:                                         ; preds = %if.end, %if.then
  %18 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10780
  %queue14 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %18, i32 0, i32 2, !dbg !10781
  call void @mmc_cleanup_queue(%struct.mmc_queue* %queue14) #11, !dbg !10782
  %19 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !10783
  call void @mmc_blk_put(%struct.mmc_blk_data* %19) #11, !dbg !10784
  br label %if.end15, !dbg !10785

if.end15:                                         ; preds = %if.end13, %entry
  ret void, !dbg !10786
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_quirk(%struct.mmc_card* %card, i32 %data) #0 !dbg !10787 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %data.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10788, metadata !DIExpression()), !dbg !10789
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !10790, metadata !DIExpression()), !dbg !10791
  %0 = load i32, i32* %data.addr, align 4, !dbg !10792
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10793
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 6, !dbg !10794
  %2 = load i32, i32* %quirks, align 8, !dbg !10795
  %or = or i32 %2, %0, !dbg !10795
  store i32 %or, i32* %quirks, align 8, !dbg !10795
  ret void, !dbg !10796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_quirk_mmc(%struct.mmc_card* %card, i32 %data) #0 !dbg !10797 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %data.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10798, metadata !DIExpression()), !dbg !10799
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !10800, metadata !DIExpression()), !dbg !10801
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10802
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 4, !dbg !10802
  %1 = load i32, i32* %type, align 8, !dbg !10802
  %cmp = icmp eq i32 %1, 0, !dbg !10802
  br i1 %cmp, label %if.then, label %if.end, !dbg !10804

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %data.addr, align 4, !dbg !10805
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10806
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 6, !dbg !10807
  %4 = load i32, i32* %quirks, align 8, !dbg !10808
  %or = or i32 %4, %2, !dbg !10808
  store i32 %or, i32* %quirks, align 8, !dbg !10808
  br label %if.end, !dbg !10806

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_quirk_sd(%struct.mmc_card* %card, i32 %data) #0 !dbg !10810 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %data.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10815
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 4, !dbg !10815
  %1 = load i32, i32* %type, align 8, !dbg !10815
  %cmp = icmp eq i32 %1, 1, !dbg !10815
  br i1 %cmp, label %if.then, label %if.end, !dbg !10817

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %data.addr, align 4, !dbg !10818
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10819
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 6, !dbg !10820
  %4 = load i32, i32* %quirks, align 8, !dbg !10821
  %or = or i32 %4, %2, !dbg !10821
  store i32 %or, i32* %quirks, align 8, !dbg !10821
  br label %if.end, !dbg !10819

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mmc_blk_data* @mmc_blk_alloc_req(%struct.mmc_card* %card, %struct.device* %parent, i64 %size, i1 zeroext %default_ro, i8* %subname, i32 %area_type) #0 !dbg !5646 {
entry:
  %retval = alloca %struct.mmc_blk_data*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %parent.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %default_ro.addr = alloca i8, align 1
  %subname.addr = alloca i8*, align 8
  %area_type.addr = alloca i32, align 4
  %md = alloca %struct.mmc_blk_data*, align 8
  %devidx = alloca i32, align 4
  %ret = alloca i32, align 4
  %__name = alloca i8*, align 8
  %__disk = alloca %struct.gendisk*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10823, metadata !DIExpression()), !dbg !10824
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !10825, metadata !DIExpression()), !dbg !10826
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10827, metadata !DIExpression()), !dbg !10828
  %frombool = zext i1 %default_ro to i8
  store i8 %frombool, i8* %default_ro.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %default_ro.addr, metadata !10829, metadata !DIExpression()), !dbg !10830
  store i8* %subname, i8** %subname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subname.addr, metadata !10831, metadata !DIExpression()), !dbg !10832
  store i32 %area_type, i32* %area_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %area_type.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !10835, metadata !DIExpression()), !dbg !10836
  call void @llvm.dbg.declare(metadata i32* %devidx, metadata !10837, metadata !DIExpression()), !dbg !10838
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10839, metadata !DIExpression()), !dbg !10840
  %0 = load i32, i32* @max_devices, align 4, !dbg !10841
  %sub = sub i32 %0, 1, !dbg !10841
  %call = call i32 @ida_alloc_range(%struct.ida* @mmc_blk_ida, i32 0, i32 %sub, i32 3264) #11, !dbg !10841
  store i32 %call, i32* %devidx, align 4, !dbg !10842
  %1 = load i32, i32* %devidx, align 4, !dbg !10843
  %cmp = icmp slt i32 %1, 0, !dbg !10845
  br i1 %cmp, label %if.then, label %if.end5, !dbg !10846

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %devidx, align 4, !dbg !10847
  %cmp1 = icmp eq i32 %2, -28, !dbg !10850
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10851

if.then2:                                         ; preds = %if.then
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10852
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 0, !dbg !10852
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10852
  %parent3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 0, !dbg !10852
  %5 = load %struct.device*, %struct.device** %parent3, align 64, !dbg !10852
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0)) #13, !dbg !10852
  br label %if.end, !dbg !10852

if.end:                                           ; preds = %if.then2, %if.then
  %6 = load i32, i32* %devidx, align 4, !dbg !10853
  %conv = sext i32 %6 to i64, !dbg !10853
  %call4 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !10854
  %7 = bitcast i8* %call4 to %struct.mmc_blk_data*, !dbg !10854
  store %struct.mmc_blk_data* %7, %struct.mmc_blk_data** %retval, align 8, !dbg !10855
  br label %return, !dbg !10855

if.end5:                                          ; preds = %entry
  %call6 = call i8* @kzalloc(i64 624, i32 3264) #11, !dbg !10856
  %8 = bitcast i8* %call6 to %struct.mmc_blk_data*, !dbg !10856
  store %struct.mmc_blk_data* %8, %struct.mmc_blk_data** %md, align 8, !dbg !10857
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10858
  %tobool = icmp ne %struct.mmc_blk_data* %9, null, !dbg !10858
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !10860

if.then7:                                         ; preds = %if.end5
  store i32 -12, i32* %ret, align 4, !dbg !10861
  br label %out, !dbg !10863

if.end8:                                          ; preds = %if.end5
  %10 = load i32, i32* %area_type.addr, align 4, !dbg !10864
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10865
  %area_type9 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %11, i32 0, i32 13, !dbg !10866
  store i32 %10, i32* %area_type9, align 8, !dbg !10867
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10868
  %call10 = call i32 @mmc_blk_readonly(%struct.mmc_card* %12) #11, !dbg !10869
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10870
  %read_only = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 7, !dbg !10871
  store i32 %call10, i32* %read_only, align 8, !dbg !10872
  call void @llvm.dbg.declare(metadata i8** %__name, metadata !10873, metadata !DIExpression()), !dbg !10875
  call void @llvm.dbg.declare(metadata %struct.gendisk** %__disk, metadata !10876, metadata !DIExpression()), !dbg !10875
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.40, i64 0, i64 0), i8** %__name, align 8, !dbg !10875
  %14 = load i32, i32* @perdev_minors, align 4, !dbg !10875
  %call11 = call %struct.gendisk* @__alloc_disk_node(i32 %14, i32 -1) #11, !dbg !10875
  store %struct.gendisk* %call11, %struct.gendisk** %__disk, align 8, !dbg !10875
  %15 = load %struct.gendisk*, %struct.gendisk** %__disk, align 8, !dbg !10877
  %tobool12 = icmp ne %struct.gendisk* %15, null, !dbg !10877
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10875

if.then13:                                        ; preds = %if.end8
  br label %do.body, !dbg !10877

do.body:                                          ; preds = %if.then13
  %16 = load i8*, i8** %__name, align 8, !dbg !10879
  br label %do.end, !dbg !10879

do.end:                                           ; preds = %do.body
  br label %if.end14, !dbg !10879

if.end14:                                         ; preds = %do.end, %if.end8
  %17 = load %struct.gendisk*, %struct.gendisk** %__disk, align 8, !dbg !10875
  store %struct.gendisk* %17, %struct.gendisk** %tmp, align 8, !dbg !10877
  %18 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !10875
  %19 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10881
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %19, i32 0, i32 1, !dbg !10882
  store %struct.gendisk* %18, %struct.gendisk** %disk, align 8, !dbg !10883
  %20 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10884
  %disk15 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %20, i32 0, i32 1, !dbg !10886
  %21 = load %struct.gendisk*, %struct.gendisk** %disk15, align 8, !dbg !10886
  %cmp16 = icmp eq %struct.gendisk* %21, null, !dbg !10887
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !10888

if.then18:                                        ; preds = %if.end14
  store i32 -12, i32* %ret, align 4, !dbg !10889
  br label %err_kfree, !dbg !10891

if.end19:                                         ; preds = %if.end14
  %22 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10892
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %22, i32 0, i32 3, !dbg !10893
  call void @INIT_LIST_HEAD(%struct.list_head* %part) #11, !dbg !10894
  %23 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10895
  %rpmbs = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %23, i32 0, i32 4, !dbg !10896
  call void @INIT_LIST_HEAD(%struct.list_head* %rpmbs) #11, !dbg !10897
  %24 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10898
  %usage = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %24, i32 0, i32 6, !dbg !10899
  store i32 1, i32* %usage, align 4, !dbg !10900
  %25 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10901
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %25, i32 0, i32 2, !dbg !10902
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10903
  %call20 = call i32 @mmc_init_queue(%struct.mmc_queue* %queue, %struct.mmc_card* %26) #11, !dbg !10904
  store i32 %call20, i32* %ret, align 4, !dbg !10905
  %27 = load i32, i32* %ret, align 4, !dbg !10906
  %tobool21 = icmp ne i32 %27, 0, !dbg !10906
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !10908

if.then22:                                        ; preds = %if.end19
  br label %err_putdisk, !dbg !10909

if.end23:                                         ; preds = %if.end19
  %28 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10910
  %29 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10911
  %queue24 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %29, i32 0, i32 2, !dbg !10912
  %blkdata = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue24, i32 0, i32 3, !dbg !10913
  store %struct.mmc_blk_data* %28, %struct.mmc_blk_data** %blkdata, align 8, !dbg !10914
  %30 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10915
  %queue25 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %30, i32 0, i32 2, !dbg !10917
  %queue26 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue25, i32 0, i32 4, !dbg !10918
  %31 = load %struct.request_queue*, %struct.request_queue** %queue26, align 8, !dbg !10918
  %call27 = call zeroext i1 @blk_get_queue(%struct.request_queue* %31) #11, !dbg !10919
  br i1 %call27, label %if.end30, label %if.then28, !dbg !10920

if.then28:                                        ; preds = %if.end23
  %32 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10921
  %queue29 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %32, i32 0, i32 2, !dbg !10923
  call void @mmc_cleanup_queue(%struct.mmc_queue* %queue29) #11, !dbg !10924
  store i32 -19, i32* %ret, align 4, !dbg !10925
  br label %err_putdisk, !dbg !10926

if.end30:                                         ; preds = %if.end23
  %33 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10927
  %disk31 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %33, i32 0, i32 1, !dbg !10928
  %34 = load %struct.gendisk*, %struct.gendisk** %disk31, align 8, !dbg !10928
  %major = getelementptr inbounds %struct.gendisk, %struct.gendisk* %34, i32 0, i32 0, !dbg !10929
  store i32 179, i32* %major, align 8, !dbg !10930
  %35 = load i32, i32* %devidx, align 4, !dbg !10931
  %36 = load i32, i32* @perdev_minors, align 4, !dbg !10932
  %mul = mul i32 %35, %36, !dbg !10933
  %37 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10934
  %disk32 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %37, i32 0, i32 1, !dbg !10935
  %38 = load %struct.gendisk*, %struct.gendisk** %disk32, align 8, !dbg !10935
  %first_minor = getelementptr inbounds %struct.gendisk, %struct.gendisk* %38, i32 0, i32 1, !dbg !10936
  store i32 %mul, i32* %first_minor, align 4, !dbg !10937
  %39 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10938
  %disk33 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %39, i32 0, i32 1, !dbg !10939
  %40 = load %struct.gendisk*, %struct.gendisk** %disk33, align 8, !dbg !10939
  %fops = getelementptr inbounds %struct.gendisk, %struct.gendisk* %40, i32 0, i32 8, !dbg !10940
  store %struct.block_device_operations* @mmc_bdops, %struct.block_device_operations** %fops, align 8, !dbg !10941
  %41 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10942
  %42 = bitcast %struct.mmc_blk_data* %41 to i8*, !dbg !10942
  %43 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10943
  %disk34 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %43, i32 0, i32 1, !dbg !10944
  %44 = load %struct.gendisk*, %struct.gendisk** %disk34, align 8, !dbg !10944
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %44, i32 0, i32 10, !dbg !10945
  store i8* %42, i8** %private_data, align 8, !dbg !10946
  %45 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10947
  %queue35 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %45, i32 0, i32 2, !dbg !10948
  %queue36 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue35, i32 0, i32 4, !dbg !10949
  %46 = load %struct.request_queue*, %struct.request_queue** %queue36, align 8, !dbg !10949
  %47 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10950
  %disk37 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %47, i32 0, i32 1, !dbg !10951
  %48 = load %struct.gendisk*, %struct.gendisk** %disk37, align 8, !dbg !10951
  %queue38 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %48, i32 0, i32 9, !dbg !10952
  store %struct.request_queue* %46, %struct.request_queue** %queue38, align 8, !dbg !10953
  %49 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !10954
  %50 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10955
  %parent39 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %50, i32 0, i32 0, !dbg !10956
  store %struct.device* %49, %struct.device** %parent39, align 8, !dbg !10957
  %51 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10958
  %disk40 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %51, i32 0, i32 1, !dbg !10959
  %52 = load %struct.gendisk*, %struct.gendisk** %disk40, align 8, !dbg !10959
  %53 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10960
  %read_only41 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %53, i32 0, i32 7, !dbg !10961
  %54 = load i32, i32* %read_only41, align 8, !dbg !10961
  %tobool42 = icmp ne i32 %54, 0, !dbg !10960
  br i1 %tobool42, label %lor.end, label %lor.rhs, !dbg !10962

lor.rhs:                                          ; preds = %if.end30
  %55 = load i8, i8* %default_ro.addr, align 1, !dbg !10963
  %tobool43 = trunc i8 %55 to i1, !dbg !10963
  br label %lor.end, !dbg !10962

lor.end:                                          ; preds = %lor.rhs, %if.end30
  %56 = phi i1 [ true, %if.end30 ], [ %tobool43, %lor.rhs ]
  %lor.ext = zext i1 %56 to i32, !dbg !10962
  call void @set_disk_ro(%struct.gendisk* %52, i32 %lor.ext) #11, !dbg !10964
  %57 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10965
  %disk45 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %57, i32 0, i32 1, !dbg !10966
  %58 = load %struct.gendisk*, %struct.gendisk** %disk45, align 8, !dbg !10966
  %flags = getelementptr inbounds %struct.gendisk, %struct.gendisk* %58, i32 0, i32 11, !dbg !10967
  store i32 64, i32* %flags, align 8, !dbg !10968
  %59 = load i32, i32* %area_type.addr, align 4, !dbg !10969
  %and = and i32 %59, 10, !dbg !10971
  %tobool46 = icmp ne i32 %and, 0, !dbg !10971
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !10972

if.then47:                                        ; preds = %lor.end
  %60 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10973
  %disk48 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %60, i32 0, i32 1, !dbg !10974
  %61 = load %struct.gendisk*, %struct.gendisk** %disk48, align 8, !dbg !10974
  %flags49 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %61, i32 0, i32 11, !dbg !10975
  %62 = load i32, i32* %flags49, align 8, !dbg !10976
  %or = or i32 %62, 544, !dbg !10976
  store i32 %or, i32* %flags49, align 8, !dbg !10976
  br label %if.end50, !dbg !10973

if.end50:                                         ; preds = %if.then47, %lor.end
  %63 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10977
  %disk51 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %63, i32 0, i32 1, !dbg !10978
  %64 = load %struct.gendisk*, %struct.gendisk** %disk51, align 8, !dbg !10978
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %64, i32 0, i32 3, !dbg !10979
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !10977
  %65 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10980
  %host52 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %65, i32 0, i32 0, !dbg !10981
  %66 = load %struct.mmc_host*, %struct.mmc_host** %host52, align 8, !dbg !10981
  %index = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %66, i32 0, i32 2, !dbg !10982
  %67 = load i32, i32* %index, align 64, !dbg !10982
  %68 = load i8*, i8** %subname.addr, align 8, !dbg !10983
  %tobool53 = icmp ne i8* %68, null, !dbg !10983
  br i1 %tobool53, label %cond.true, label %cond.false, !dbg !10983

cond.true:                                        ; preds = %if.end50
  %69 = load i8*, i8** %subname.addr, align 8, !dbg !10984
  br label %cond.end, !dbg !10983

cond.false:                                       ; preds = %if.end50
  br label %cond.end, !dbg !10983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %69, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false ], !dbg !10983
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i32 %67, i8* %cond) #11, !dbg !10985
  %70 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !10986
  %disk55 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %70, i32 0, i32 1, !dbg !10987
  %71 = load %struct.gendisk*, %struct.gendisk** %disk55, align 8, !dbg !10987
  %72 = load i64, i64* %size.addr, align 8, !dbg !10988
  call void @set_capacity(%struct.gendisk* %71, i64 %72) #11, !dbg !10989
  %73 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10990
  %host56 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %73, i32 0, i32 0, !dbg !10992
  %74 = load %struct.mmc_host*, %struct.mmc_host** %host56, align 8, !dbg !10992
  %call57 = call i32 @mmc_host_cmd23(%struct.mmc_host* %74) #11, !dbg !10993
  %tobool58 = icmp ne i32 %call57, 0, !dbg !10993
  br i1 %tobool58, label %if.then59, label %if.end76, !dbg !10994

if.then59:                                        ; preds = %cond.end
  %75 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10995
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %75, i32 0, i32 4, !dbg !10995
  %76 = load i32, i32* %type, align 8, !dbg !10995
  %cmp60 = icmp eq i32 %76, 0, !dbg !10995
  br i1 %cmp60, label %land.lhs.true, label %lor.lhs.false, !dbg !10998

land.lhs.true:                                    ; preds = %if.then59
  %77 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10999
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %77, i32 0, i32 20, !dbg !11000
  %mmca_vsn = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 1, !dbg !11001
  %78 = load i8, i8* %mmca_vsn, align 1, !dbg !11001
  %conv62 = zext i8 %78 to i32, !dbg !10999
  %cmp63 = icmp sge i32 %conv62, 3, !dbg !11002
  br i1 %cmp63, label %if.then72, label %lor.lhs.false, !dbg !11003

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then59
  %79 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11004
  %type65 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %79, i32 0, i32 4, !dbg !11004
  %80 = load i32, i32* %type65, align 8, !dbg !11004
  %cmp66 = icmp eq i32 %80, 1, !dbg !11004
  br i1 %cmp66, label %land.lhs.true68, label %if.end75, !dbg !11005

land.lhs.true68:                                  ; preds = %lor.lhs.false
  %81 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11006
  %scr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %81, i32 0, i32 22, !dbg !11007
  %cmds = getelementptr inbounds %struct.sd_scr, %struct.sd_scr* %scr, i32 0, i32 5, !dbg !11008
  %82 = load i8, i8* %cmds, align 1, !dbg !11008
  %conv69 = zext i8 %82 to i32, !dbg !11006
  %and70 = and i32 %conv69, 2, !dbg !11009
  %tobool71 = icmp ne i32 %and70, 0, !dbg !11009
  br i1 %tobool71, label %if.then72, label %if.end75, !dbg !11010

if.then72:                                        ; preds = %land.lhs.true68, %land.lhs.true
  %83 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11011
  %flags73 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %83, i32 0, i32 5, !dbg !11012
  %84 = load i32, i32* %flags73, align 8, !dbg !11013
  %or74 = or i32 %84, 1, !dbg !11013
  store i32 %or74, i32* %flags73, align 8, !dbg !11013
  br label %if.end75, !dbg !11011

if.end75:                                         ; preds = %if.then72, %land.lhs.true68, %lor.lhs.false
  br label %if.end76, !dbg !11014

if.end76:                                         ; preds = %if.end75, %cond.end
  %85 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11015
  %type77 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %85, i32 0, i32 4, !dbg !11015
  %86 = load i32, i32* %type77, align 8, !dbg !11015
  %cmp78 = icmp eq i32 %86, 0, !dbg !11015
  br i1 %cmp78, label %land.lhs.true80, label %if.end97, !dbg !11017

land.lhs.true80:                                  ; preds = %if.end76
  %87 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11018
  %flags81 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %87, i32 0, i32 5, !dbg !11019
  %88 = load i32, i32* %flags81, align 8, !dbg !11019
  %and82 = and i32 %88, 1, !dbg !11020
  %tobool83 = icmp ne i32 %and82, 0, !dbg !11020
  br i1 %tobool83, label %land.lhs.true84, label %if.end97, !dbg !11021

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %89 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11022
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %89, i32 0, i32 21, !dbg !11023
  %rel_param = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 4, !dbg !11024
  %90 = load i8, i8* %rel_param, align 4, !dbg !11024
  %conv85 = zext i8 %90 to i32, !dbg !11022
  %and86 = and i32 %conv85, 4, !dbg !11025
  %tobool87 = icmp ne i32 %and86, 0, !dbg !11025
  br i1 %tobool87, label %if.then92, label %lor.lhs.false88, !dbg !11026

lor.lhs.false88:                                  ; preds = %land.lhs.true84
  %91 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11027
  %ext_csd89 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %91, i32 0, i32 21, !dbg !11028
  %rel_sectors = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd89, i32 0, i32 3, !dbg !11029
  %92 = load i8, i8* %rel_sectors, align 1, !dbg !11029
  %conv90 = zext i8 %92 to i32, !dbg !11027
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !11027
  br i1 %tobool91, label %if.then92, label %if.end97, !dbg !11030

if.then92:                                        ; preds = %lor.lhs.false88, %land.lhs.true84
  %93 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11031
  %flags93 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %93, i32 0, i32 5, !dbg !11033
  %94 = load i32, i32* %flags93, align 8, !dbg !11034
  %or94 = or i32 %94, 2, !dbg !11034
  store i32 %or94, i32* %flags93, align 8, !dbg !11034
  %95 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11035
  %queue95 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %95, i32 0, i32 2, !dbg !11036
  %queue96 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue95, i32 0, i32 4, !dbg !11037
  %96 = load %struct.request_queue*, %struct.request_queue** %queue96, align 8, !dbg !11037
  call void @blk_queue_write_cache(%struct.request_queue* %96, i1 zeroext true, i1 zeroext true) #11, !dbg !11038
  br label %if.end97, !dbg !11039

if.end97:                                         ; preds = %if.then92, %lor.lhs.false88, %land.lhs.true80, %if.end76
  %97 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11040
  store %struct.mmc_blk_data* %97, %struct.mmc_blk_data** %retval, align 8, !dbg !11041
  br label %return, !dbg !11041

err_putdisk:                                      ; preds = %if.then28, %if.then22
  call void @llvm.dbg.label(metadata !11042), !dbg !11043
  %98 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11044
  %disk98 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %98, i32 0, i32 1, !dbg !11045
  %99 = load %struct.gendisk*, %struct.gendisk** %disk98, align 8, !dbg !11045
  call void @put_disk(%struct.gendisk* %99) #11, !dbg !11046
  br label %err_kfree, !dbg !11046

err_kfree:                                        ; preds = %err_putdisk, %if.then18
  call void @llvm.dbg.label(metadata !11047), !dbg !11048
  %100 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11049
  %101 = bitcast %struct.mmc_blk_data* %100 to i8*, !dbg !11049
  call void @kfree(i8* %101) #11, !dbg !11050
  br label %out, !dbg !11050

out:                                              ; preds = %err_kfree, %if.then7
  call void @llvm.dbg.label(metadata !11051), !dbg !11052
  %102 = load i32, i32* %devidx, align 4, !dbg !11053
  call void @ida_free(%struct.ida* @mmc_blk_ida, i32 %102) #11, !dbg !11053
  %103 = load i32, i32* %ret, align 4, !dbg !11054
  %conv99 = sext i32 %103 to i64, !dbg !11054
  %call100 = call i8* @ERR_PTR(i64 %conv99) #11, !dbg !11055
  %104 = bitcast i8* %call100 to %struct.mmc_blk_data*, !dbg !11055
  store %struct.mmc_blk_data* %104, %struct.mmc_blk_data** %retval, align 8, !dbg !11056
  br label %return, !dbg !11056

return:                                           ; preds = %out, %if.end97, %if.end
  %105 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %retval, align 8, !dbg !11057
  ret %struct.mmc_blk_data* %105, !dbg !11057
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !11058 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !11061, metadata !DIExpression()), !dbg !11062
  %0 = load i64, i64* %error.addr, align 8, !dbg !11063
  %1 = inttoptr i64 %0 to i8*, !dbg !11064
  ret i8* %1, !dbg !11065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !11066 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7570, metadata !DIExpression()), !dbg !11067
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7582, metadata !DIExpression()), !dbg !11070
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7584, metadata !DIExpression()), !dbg !11071
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7586, metadata !DIExpression()), !dbg !11072
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7588, metadata !DIExpression()), !dbg !11073
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7594, metadata !DIExpression()), !dbg !11075
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7600, metadata !DIExpression()), !dbg !11077
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7609, metadata !DIExpression()), !dbg !11080
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7611, metadata !DIExpression()), !dbg !11081
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7613, metadata !DIExpression()), !dbg !11082
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7615, metadata !DIExpression()), !dbg !11083
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7617, metadata !DIExpression()), !dbg !11084
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7619, metadata !DIExpression()), !dbg !11085
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7621, metadata !DIExpression()), !dbg !11086
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7623, metadata !DIExpression()), !dbg !11087
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11088, metadata !DIExpression()), !dbg !11089
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  %0 = load i64, i64* %size.addr, align 8, !dbg !11092
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11093
  %or = or i32 %1, 256, !dbg !11094
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11095
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !11096
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !11097

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11098
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !11099
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11100

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !11101
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !11102
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11103
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !11104
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11084
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11105
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11106
  %10 = load i32, i32* %order.i.i, align 4, !dbg !11107
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11108
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11109
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11110
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !11111
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11111
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11111
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11111
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !11111
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11112
  br label %kmalloc.exit, !dbg !11112

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !11113
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11114
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !11114
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11115

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11116
  br label %kmalloc_index.exit.i, !dbg !11116

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11117
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !11118
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11119

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11120
  br label %kmalloc_index.exit.i, !dbg !11120

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11121
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !11122
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11123

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11124
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !11125
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11126

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11127
  br label %kmalloc_index.exit.i, !dbg !11127

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11128
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !11129
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11130

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11131
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !11132
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11133

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11134
  br label %kmalloc_index.exit.i, !dbg !11134

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11135
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11136
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11137

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11138
  br label %kmalloc_index.exit.i, !dbg !11138

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11139
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11140
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11141

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11142
  br label %kmalloc_index.exit.i, !dbg !11142

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11143
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11144
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11145

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11146
  br label %kmalloc_index.exit.i, !dbg !11146

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11147
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11148
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11149

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11150
  br label %kmalloc_index.exit.i, !dbg !11150

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11151
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11152
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11153

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11154
  br label %kmalloc_index.exit.i, !dbg !11154

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11155
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11156
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11157

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11158
  br label %kmalloc_index.exit.i, !dbg !11158

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11159
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11160
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11161

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11162
  br label %kmalloc_index.exit.i, !dbg !11162

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11163
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11164
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11165

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11166
  br label %kmalloc_index.exit.i, !dbg !11166

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11167
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11168
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11169

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11170
  br label %kmalloc_index.exit.i, !dbg !11170

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11171
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !11172
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11173

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11174
  br label %kmalloc_index.exit.i, !dbg !11174

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11175
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !11176
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11177

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11178
  br label %kmalloc_index.exit.i, !dbg !11178

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11179
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !11180
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11181

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11182
  br label %kmalloc_index.exit.i, !dbg !11182

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11183
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !11184
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11185

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11186
  br label %kmalloc_index.exit.i, !dbg !11186

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11187
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !11188
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11189

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11190
  br label %kmalloc_index.exit.i, !dbg !11190

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11191
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !11192
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11193

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11194
  br label %kmalloc_index.exit.i, !dbg !11194

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11195
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !11196
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11197

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11198
  br label %kmalloc_index.exit.i, !dbg !11198

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11199
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !11200
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11201

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11202
  br label %kmalloc_index.exit.i, !dbg !11202

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11203
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !11204
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11205

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11206
  br label %kmalloc_index.exit.i, !dbg !11206

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11207
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !11208
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11209

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11210
  br label %kmalloc_index.exit.i, !dbg !11210

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11211
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !11212
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11213

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11214
  br label %kmalloc_index.exit.i, !dbg !11214

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11215
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !11216
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11217

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11218
  br label %kmalloc_index.exit.i, !dbg !11218

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11219
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !11220
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11221

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11222
  br label %kmalloc_index.exit.i, !dbg !11222

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11223
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !11224
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11225

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11226
  br label %kmalloc_index.exit.i, !dbg !11226

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11227
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !11228
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11229

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11230
  br label %kmalloc_index.exit.i, !dbg !11230

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !11231, !srcloc !7860
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #5, !dbg !11232, !srcloc !7864
  unreachable, !dbg !11233

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11234
  store i32 %45, i32* %index.i, align 4, !dbg !11235
  %46 = load i32, i32* %index.i, align 4, !dbg !11236
  %tobool.i = icmp ne i32 %46, 0, !dbg !11236
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11237

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11238
  br label %kmalloc.exit, !dbg !11238

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11239
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11240
  %and.i.i = and i32 %48, 17, !dbg !11240
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11240
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11240
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11240
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11240
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11241

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11242
  br label %kmalloc_type.exit.i, !dbg !11242

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11243
  %and2.i.i = and i32 %49, 1, !dbg !11244
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11243
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11243
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11243
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11245
  br label %kmalloc_type.exit.i, !dbg !11245

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11246
  %idxprom.i = zext i32 %51 to i64, !dbg !11247
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11247
  %52 = load i32, i32* %index.i, align 4, !dbg !11248
  %idxprom6.i = zext i32 %52 to i64, !dbg !11247
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11247
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11247
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11249
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11250
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11251
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11252
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !11253
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11253
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11253
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11253
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !11253
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11072
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11254
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11255
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11256
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11257
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !11258
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11259
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11260
  store i8* %62, i8** %retval.i, align 8, !dbg !11261
  br label %kmalloc.exit, !dbg !11261

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11262
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11263
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !11264
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11264
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11264
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11264
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !11264
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11265
  br label %kmalloc.exit, !dbg !11265

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11266
  ret i8* %65, !dbg !11267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_readonly(%struct.mmc_card* %card) #0 !dbg !11268 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !11269, metadata !DIExpression()), !dbg !11270
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11271
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 5, !dbg !11271
  %1 = load i32, i32* %state, align 4, !dbg !11271
  %and = and i32 %1, 2, !dbg !11271
  %tobool = icmp ne i32 %and, 0, !dbg !11271
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !11272

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !11273
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 20, !dbg !11274
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !11275
  %3 = load i16, i16* %cmdclass, align 2, !dbg !11275
  %conv = zext i16 %3 to i32, !dbg !11273
  %and1 = and i32 %conv, 16, !dbg !11276
  %tobool2 = icmp ne i32 %and1, 0, !dbg !11277
  %lnot = xor i1 %tobool2, true, !dbg !11277
  br label %lor.end, !dbg !11272

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !11272
  ret i32 %lor.ext, !dbg !11278
}

; Function Attrs: noredzone
declare dso_local %struct.gendisk* @__alloc_disk_node(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !11279 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !11283, metadata !DIExpression()), !dbg !11284
  br label %do.body, !dbg !11285

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11286

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11288

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !11286

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11290
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11290
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11290
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !11290
  br label %do.end3, !dbg !11290

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !11286

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11292
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !11293
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !11294
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !11295
  ret void, !dbg !11296
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_init_queue(%struct.mmc_queue*, %struct.mmc_card*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @blk_get_queue(%struct.request_queue*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_cleanup_queue(%struct.mmc_queue*) #2

; Function Attrs: noredzone
declare dso_local void @set_disk_ro(%struct.gendisk*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_capacity(%struct.gendisk* %disk, i64 %size) #0 !dbg !11297 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %size.addr = alloca i64, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !11300, metadata !DIExpression()), !dbg !11301
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11302, metadata !DIExpression()), !dbg !11303
  %0 = load i64, i64* %size.addr, align 8, !dbg !11304
  %1 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !11305
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %1, i32 0, i32 7, !dbg !11306
  %nr_sects = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 1, !dbg !11307
  store i64 %0, i64* %nr_sects, align 8, !dbg !11308
  ret void, !dbg !11309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_host_cmd23(%struct.mmc_host* %host) #0 !dbg !11310 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !11313
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !11314
  %1 = load i32, i32* %caps, align 4, !dbg !11314
  %and = and i32 %1, 1073741824, !dbg !11315
  ret i32 %and, !dbg !11316
}

; Function Attrs: noredzone
declare dso_local void @blk_queue_write_cache(%struct.request_queue*, i1 zeroext, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @put_disk(%struct.gendisk*) #2

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_open(%struct.block_device* %bdev, i32 %mode) #0 !dbg !11317 {
entry:
  %bdev.addr = alloca %struct.block_device*, align 8
  %mode.addr = alloca i32, align 4
  %md = alloca %struct.mmc_blk_data*, align 8
  %ret = alloca i32, align 4
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !11318, metadata !DIExpression()), !dbg !11319
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11320, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !11322, metadata !DIExpression()), !dbg !11323
  %0 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11324
  %bd_disk = getelementptr inbounds %struct.block_device, %struct.block_device* %0, i32 0, i32 15, !dbg !11325
  %1 = load %struct.gendisk*, %struct.gendisk** %bd_disk, align 8, !dbg !11325
  %call = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %1) #11, !dbg !11326
  store %struct.mmc_blk_data* %call, %struct.mmc_blk_data** %md, align 8, !dbg !11323
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11327, metadata !DIExpression()), !dbg !11328
  store i32 -6, i32* %ret, align 4, !dbg !11328
  call void @mutex_lock(%struct.mutex* @block_mutex) #11, !dbg !11329
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11330
  %tobool = icmp ne %struct.mmc_blk_data* %2, null, !dbg !11330
  br i1 %tobool, label %if.then, label %if.end4, !dbg !11332

if.then:                                          ; preds = %entry
  store i32 0, i32* %ret, align 4, !dbg !11333
  %3 = load i32, i32* %mode.addr, align 4, !dbg !11335
  %and = and i32 %3, 2, !dbg !11337
  %tobool1 = icmp ne i32 %and, 0, !dbg !11337
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !11338

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11339
  %read_only = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %4, i32 0, i32 7, !dbg !11340
  %5 = load i32, i32* %read_only, align 8, !dbg !11340
  %tobool2 = icmp ne i32 %5, 0, !dbg !11339
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !11341

if.then3:                                         ; preds = %land.lhs.true
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11342
  call void @mmc_blk_put(%struct.mmc_blk_data* %6) #11, !dbg !11344
  store i32 -30, i32* %ret, align 4, !dbg !11345
  br label %if.end, !dbg !11346

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  br label %if.end4, !dbg !11347

if.end4:                                          ; preds = %if.end, %entry
  call void @mutex_unlock(%struct.mutex* @block_mutex) #11, !dbg !11348
  %7 = load i32, i32* %ret, align 4, !dbg !11349
  ret i32 %7, !dbg !11350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_release(%struct.gendisk* %disk, i32 %mode) #0 !dbg !11351 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %mode.addr = alloca i32, align 4
  %md = alloca %struct.mmc_blk_data*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !11352, metadata !DIExpression()), !dbg !11353
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11354, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !11356, metadata !DIExpression()), !dbg !11357
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !11358
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %0, i32 0, i32 10, !dbg !11359
  %1 = load i8*, i8** %private_data, align 8, !dbg !11359
  %2 = bitcast i8* %1 to %struct.mmc_blk_data*, !dbg !11358
  store %struct.mmc_blk_data* %2, %struct.mmc_blk_data** %md, align 8, !dbg !11357
  call void @mutex_lock(%struct.mutex* @block_mutex) #11, !dbg !11360
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11361
  call void @mmc_blk_put(%struct.mmc_blk_data* %3) #11, !dbg !11362
  call void @mutex_unlock(%struct.mutex* @block_mutex) #11, !dbg !11363
  ret void, !dbg !11364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_ioctl(%struct.block_device* %bdev, i32 %mode, i32 %cmd, i64 %arg) #0 !dbg !11365 {
entry:
  %retval = alloca i32, align 4
  %bdev.addr = alloca %struct.block_device*, align 8
  %mode.addr = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %ret = alloca i32, align 4
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !11366, metadata !DIExpression()), !dbg !11367
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !11374, metadata !DIExpression()), !dbg !11375
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11376, metadata !DIExpression()), !dbg !11377
  %0 = load i32, i32* %cmd.addr, align 4, !dbg !11378
  switch i32 %0, label %sw.default [
    i32 -1068977408, label %sw.bb
    i32 -1073171711, label %sw.bb6
  ], !dbg !11379

sw.bb:                                            ; preds = %entry
  %1 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11380
  %call = call i32 @mmc_blk_check_blkdev(%struct.block_device* %1) #11, !dbg !11382
  store i32 %call, i32* %ret, align 4, !dbg !11383
  %2 = load i32, i32* %ret, align 4, !dbg !11384
  %tobool = icmp ne i32 %2, 0, !dbg !11384
  br i1 %tobool, label %if.then, label %if.end, !dbg !11386

if.then:                                          ; preds = %sw.bb
  %3 = load i32, i32* %ret, align 4, !dbg !11387
  store i32 %3, i32* %retval, align 4, !dbg !11388
  br label %return, !dbg !11388

if.end:                                           ; preds = %sw.bb
  %4 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11389
  %bd_disk = getelementptr inbounds %struct.block_device, %struct.block_device* %4, i32 0, i32 15, !dbg !11390
  %5 = load %struct.gendisk*, %struct.gendisk** %bd_disk, align 8, !dbg !11390
  %call1 = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %5) #11, !dbg !11391
  store %struct.mmc_blk_data* %call1, %struct.mmc_blk_data** %md, align 8, !dbg !11392
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11393
  %tobool2 = icmp ne %struct.mmc_blk_data* %6, null, !dbg !11393
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !11395

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11396
  br label %return, !dbg !11396

if.end4:                                          ; preds = %if.end
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11397
  %8 = load i64, i64* %arg.addr, align 8, !dbg !11398
  %9 = inttoptr i64 %8 to %struct.mmc_ioc_cmd*, !dbg !11399
  %call5 = call i32 @mmc_blk_ioctl_cmd(%struct.mmc_blk_data* %7, %struct.mmc_ioc_cmd* %9, %struct.mmc_rpmb_data* null) #11, !dbg !11400
  store i32 %call5, i32* %ret, align 4, !dbg !11401
  %10 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11402
  call void @mmc_blk_put(%struct.mmc_blk_data* %10) #11, !dbg !11403
  %11 = load i32, i32* %ret, align 4, !dbg !11404
  store i32 %11, i32* %retval, align 4, !dbg !11405
  br label %return, !dbg !11405

sw.bb6:                                           ; preds = %entry
  %12 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11406
  %call7 = call i32 @mmc_blk_check_blkdev(%struct.block_device* %12) #11, !dbg !11407
  store i32 %call7, i32* %ret, align 4, !dbg !11408
  %13 = load i32, i32* %ret, align 4, !dbg !11409
  %tobool8 = icmp ne i32 %13, 0, !dbg !11409
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !11411

if.then9:                                         ; preds = %sw.bb6
  %14 = load i32, i32* %ret, align 4, !dbg !11412
  store i32 %14, i32* %retval, align 4, !dbg !11413
  br label %return, !dbg !11413

if.end10:                                         ; preds = %sw.bb6
  %15 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11414
  %bd_disk11 = getelementptr inbounds %struct.block_device, %struct.block_device* %15, i32 0, i32 15, !dbg !11415
  %16 = load %struct.gendisk*, %struct.gendisk** %bd_disk11, align 8, !dbg !11415
  %call12 = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %16) #11, !dbg !11416
  store %struct.mmc_blk_data* %call12, %struct.mmc_blk_data** %md, align 8, !dbg !11417
  %17 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11418
  %tobool13 = icmp ne %struct.mmc_blk_data* %17, null, !dbg !11418
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !11420

if.then14:                                        ; preds = %if.end10
  store i32 -22, i32* %retval, align 4, !dbg !11421
  br label %return, !dbg !11421

if.end15:                                         ; preds = %if.end10
  %18 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11422
  %19 = load i64, i64* %arg.addr, align 8, !dbg !11423
  %20 = inttoptr i64 %19 to %struct.mmc_ioc_multi_cmd*, !dbg !11424
  %call16 = call i32 @mmc_blk_ioctl_multi_cmd(%struct.mmc_blk_data* %18, %struct.mmc_ioc_multi_cmd* %20, %struct.mmc_rpmb_data* null) #11, !dbg !11425
  store i32 %call16, i32* %ret, align 4, !dbg !11426
  %21 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11427
  call void @mmc_blk_put(%struct.mmc_blk_data* %21) #11, !dbg !11428
  %22 = load i32, i32* %ret, align 4, !dbg !11429
  store i32 %22, i32* %retval, align 4, !dbg !11430
  br label %return, !dbg !11430

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11431
  br label %return, !dbg !11431

return:                                           ; preds = %sw.default, %if.end15, %if.then14, %if.then9, %if.end4, %if.then3, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !11432
  ret i32 %23, !dbg !11432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_getgeo(%struct.block_device* %bdev, %struct.hd_geometry* %geo) #0 !dbg !11433 {
entry:
  %bdev.addr = alloca %struct.block_device*, align 8
  %geo.addr = alloca %struct.hd_geometry*, align 8
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  store %struct.hd_geometry* %geo, %struct.hd_geometry** %geo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hd_geometry** %geo.addr, metadata !11436, metadata !DIExpression()), !dbg !11437
  %0 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11438
  %bd_disk = getelementptr inbounds %struct.block_device, %struct.block_device* %0, i32 0, i32 15, !dbg !11439
  %1 = load %struct.gendisk*, %struct.gendisk** %bd_disk, align 8, !dbg !11439
  %call = call i64 @get_capacity(%struct.gendisk* %1) #11, !dbg !11440
  %div = udiv i64 %call, 64, !dbg !11441
  %conv = trunc i64 %div to i16, !dbg !11440
  %2 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !11442
  %cylinders = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %2, i32 0, i32 2, !dbg !11443
  store i16 %conv, i16* %cylinders, align 2, !dbg !11444
  %3 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !11445
  %heads = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %3, i32 0, i32 0, !dbg !11446
  store i8 4, i8* %heads, align 8, !dbg !11447
  %4 = load %struct.hd_geometry*, %struct.hd_geometry** %geo.addr, align 8, !dbg !11448
  %sectors = getelementptr inbounds %struct.hd_geometry, %struct.hd_geometry* %4, i32 0, i32 1, !dbg !11449
  store i8 16, i8* %sectors, align 1, !dbg !11450
  ret i32 0, !dbg !11451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %disk) #0 !dbg !11452 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !11457, metadata !DIExpression()), !dbg !11458
  call void @mutex_lock(%struct.mutex* @open_lock) #11, !dbg !11459
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !11460
  %private_data = getelementptr inbounds %struct.gendisk, %struct.gendisk* %0, i32 0, i32 10, !dbg !11461
  %1 = load i8*, i8** %private_data, align 8, !dbg !11461
  %2 = bitcast i8* %1 to %struct.mmc_blk_data*, !dbg !11460
  store %struct.mmc_blk_data* %2, %struct.mmc_blk_data** %md, align 8, !dbg !11462
  %3 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11463
  %tobool = icmp ne %struct.mmc_blk_data* %3, null, !dbg !11463
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11465

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11466
  %usage = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %4, i32 0, i32 6, !dbg !11467
  %5 = load i32, i32* %usage, align 4, !dbg !11467
  %cmp = icmp eq i32 %5, 0, !dbg !11468
  br i1 %cmp, label %if.then, label %if.end, !dbg !11469

if.then:                                          ; preds = %land.lhs.true
  store %struct.mmc_blk_data* null, %struct.mmc_blk_data** %md, align 8, !dbg !11470
  br label %if.end, !dbg !11471

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11472
  %tobool1 = icmp ne %struct.mmc_blk_data* %6, null, !dbg !11472
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !11474

if.then2:                                         ; preds = %if.end
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11475
  %usage3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %7, i32 0, i32 6, !dbg !11476
  %8 = load i32, i32* %usage3, align 4, !dbg !11477
  %inc = add i32 %8, 1, !dbg !11477
  store i32 %inc, i32* %usage3, align 4, !dbg !11477
  br label %if.end4, !dbg !11475

if.end4:                                          ; preds = %if.then2, %if.end
  call void @mutex_unlock(%struct.mutex* @open_lock) #11, !dbg !11478
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !11479
  ret %struct.mmc_blk_data* %9, !dbg !11480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_put(%struct.mmc_blk_data* %md) #0 !dbg !11481 {
entry:
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %devidx = alloca i32, align 4
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !11482, metadata !DIExpression()), !dbg !11483
  call void @mutex_lock(%struct.mutex* @open_lock) #11, !dbg !11484
  %0 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11485
  %usage = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %0, i32 0, i32 6, !dbg !11486
  %1 = load i32, i32* %usage, align 4, !dbg !11487
  %dec = add i32 %1, -1, !dbg !11487
  store i32 %dec, i32* %usage, align 4, !dbg !11487
  %2 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11488
  %usage1 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %2, i32 0, i32 6, !dbg !11490
  %3 = load i32, i32* %usage1, align 4, !dbg !11490
  %cmp = icmp eq i32 %3, 0, !dbg !11491
  br i1 %cmp, label %if.then, label %if.end, !dbg !11492

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %devidx, metadata !11493, metadata !DIExpression()), !dbg !11495
  %4 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11496
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %4, i32 0, i32 1, !dbg !11497
  %5 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !11497
  %call = call i32 @mmc_get_devidx(%struct.gendisk* %5) #11, !dbg !11498
  store i32 %call, i32* %devidx, align 4, !dbg !11495
  %6 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11499
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %6, i32 0, i32 2, !dbg !11500
  %queue2 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 4, !dbg !11501
  %7 = load %struct.request_queue*, %struct.request_queue** %queue2, align 8, !dbg !11501
  call void @blk_put_queue(%struct.request_queue* %7) #11, !dbg !11502
  %8 = load i32, i32* %devidx, align 4, !dbg !11503
  call void @ida_free(%struct.ida* @mmc_blk_ida, i32 %8) #11, !dbg !11503
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11504
  %disk3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %9, i32 0, i32 1, !dbg !11505
  %10 = load %struct.gendisk*, %struct.gendisk** %disk3, align 8, !dbg !11505
  call void @put_disk(%struct.gendisk* %10) #11, !dbg !11506
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11507
  %12 = bitcast %struct.mmc_blk_data* %11 to i8*, !dbg !11507
  call void @kfree(i8* %12) #11, !dbg !11508
  br label %if.end, !dbg !11509

if.end:                                           ; preds = %if.then, %entry
  call void @mutex_unlock(%struct.mutex* @open_lock) #11, !dbg !11510
  ret void, !dbg !11511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_get_devidx(%struct.gendisk* %disk) #0 !dbg !11512 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %devidx = alloca i32, align 4
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !11513, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.declare(metadata i32* %devidx, metadata !11515, metadata !DIExpression()), !dbg !11516
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !11517
  %first_minor = getelementptr inbounds %struct.gendisk, %struct.gendisk* %0, i32 0, i32 1, !dbg !11518
  %1 = load i32, i32* %first_minor, align 4, !dbg !11518
  %2 = load i32, i32* @perdev_minors, align 4, !dbg !11519
  %div = sdiv i32 %1, %2, !dbg !11520
  store i32 %div, i32* %devidx, align 4, !dbg !11516
  %3 = load i32, i32* %devidx, align 4, !dbg !11521
  ret i32 %3, !dbg !11522
}

; Function Attrs: noredzone
declare dso_local void @blk_put_queue(%struct.request_queue*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_check_blkdev(%struct.block_device* %bdev) #0 !dbg !11523 {
entry:
  %retval = alloca i32, align 4
  %bdev.addr = alloca %struct.block_device*, align 8
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !11526, metadata !DIExpression()), !dbg !11527
  %call = call zeroext i1 @capable(i32 17) #11, !dbg !11528
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !11530

lor.lhs.false:                                    ; preds = %entry
  %0 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11531
  %call1 = call zeroext i1 @bdev_is_partition(%struct.block_device* %0) #11, !dbg !11532
  br i1 %call1, label %if.then, label %if.end, !dbg !11533

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !11534
  br label %return, !dbg !11534

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !11535
  br label %return, !dbg !11535

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !11536
  ret i32 %1, !dbg !11536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_ioctl_cmd(%struct.mmc_blk_data* %md, %struct.mmc_ioc_cmd* %ic_ptr, %struct.mmc_rpmb_data* %rpmb) #0 !dbg !11537 {
entry:
  %retval = alloca i32, align 4
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %ic_ptr.addr = alloca %struct.mmc_ioc_cmd*, align 8
  %rpmb.addr = alloca %struct.mmc_rpmb_data*, align 8
  %idata = alloca %struct.mmc_blk_ioc_data*, align 8
  %idatas = alloca [1 x %struct.mmc_blk_ioc_data*], align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %err = alloca i32, align 4
  %ioc_err = alloca i32, align 4
  %req = alloca %struct.request*, align 8
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !11540, metadata !DIExpression()), !dbg !11541
  store %struct.mmc_ioc_cmd* %ic_ptr, %struct.mmc_ioc_cmd** %ic_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ioc_cmd** %ic_ptr.addr, metadata !11542, metadata !DIExpression()), !dbg !11543
  store %struct.mmc_rpmb_data* %rpmb, %struct.mmc_rpmb_data** %rpmb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb.addr, metadata !11544, metadata !DIExpression()), !dbg !11545
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_ioc_data** %idata, metadata !11546, metadata !DIExpression()), !dbg !11547
  call void @llvm.dbg.declare(metadata [1 x %struct.mmc_blk_ioc_data*]* %idatas, metadata !11548, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !11551, metadata !DIExpression()), !dbg !11552
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !11553, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11555, metadata !DIExpression()), !dbg !11556
  store i32 0, i32* %err, align 4, !dbg !11556
  call void @llvm.dbg.declare(metadata i32* %ioc_err, metadata !11557, metadata !DIExpression()), !dbg !11558
  store i32 0, i32* %ioc_err, align 4, !dbg !11558
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !11559, metadata !DIExpression()), !dbg !11560
  %0 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %ic_ptr.addr, align 8, !dbg !11561
  %call = call %struct.mmc_blk_ioc_data* @mmc_blk_ioctl_copy_from_user(%struct.mmc_ioc_cmd* %0) #11, !dbg !11562
  store %struct.mmc_blk_ioc_data* %call, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11563
  %1 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11564
  %2 = bitcast %struct.mmc_blk_ioc_data* %1 to i8*, !dbg !11564
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !11566
  br i1 %call1, label %if.then, label %if.end, !dbg !11567

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11568
  %4 = bitcast %struct.mmc_blk_ioc_data* %3 to i8*, !dbg !11568
  %call2 = call i64 @PTR_ERR(i8* %4) #11, !dbg !11569
  %conv = trunc i64 %call2 to i32, !dbg !11569
  store i32 %conv, i32* %retval, align 4, !dbg !11570
  br label %return, !dbg !11570

if.end:                                           ; preds = %entry
  %5 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !11571
  %6 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11572
  %rpmb3 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %6, i32 0, i32 3, !dbg !11573
  store %struct.mmc_rpmb_data* %5, %struct.mmc_rpmb_data** %rpmb3, align 8, !dbg !11574
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11575
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %7, i32 0, i32 2, !dbg !11576
  %card4 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !11577
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card4, align 8, !dbg !11577
  store %struct.mmc_card* %8, %struct.mmc_card** %card, align 8, !dbg !11578
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !11579
  %10 = bitcast %struct.mmc_card* %9 to i8*, !dbg !11579
  %call5 = call zeroext i1 @IS_ERR(i8* %10) #11, !dbg !11581
  br i1 %call5, label %if.then6, label %if.end9, !dbg !11582

if.then6:                                         ; preds = %if.end
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !11583
  %12 = bitcast %struct.mmc_card* %11 to i8*, !dbg !11583
  %call7 = call i64 @PTR_ERR(i8* %12) #11, !dbg !11585
  %conv8 = trunc i64 %call7 to i32, !dbg !11585
  store i32 %conv8, i32* %err, align 4, !dbg !11586
  br label %cmd_done, !dbg !11587

if.end9:                                          ; preds = %if.end
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11588
  %queue10 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 2, !dbg !11589
  store %struct.mmc_queue* %queue10, %struct.mmc_queue** %mq, align 8, !dbg !11590
  %14 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !11591
  %queue11 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %14, i32 0, i32 4, !dbg !11592
  %15 = load %struct.request_queue*, %struct.request_queue** %queue11, align 8, !dbg !11592
  %16 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11593
  %ic = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %16, i32 0, i32 0, !dbg !11594
  %write_flag = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic, i32 0, i32 0, !dbg !11595
  %17 = load i32, i32* %write_flag, align 8, !dbg !11595
  %tobool = icmp ne i32 %17, 0, !dbg !11593
  %18 = zext i1 %tobool to i64, !dbg !11593
  %cond = select i1 %tobool, i32 35, i32 34, !dbg !11593
  %call12 = call %struct.request* @blk_get_request(%struct.request_queue* %15, i32 %cond, i32 0) #11, !dbg !11596
  store %struct.request* %call12, %struct.request** %req, align 8, !dbg !11597
  %19 = load %struct.request*, %struct.request** %req, align 8, !dbg !11598
  %20 = bitcast %struct.request* %19 to i8*, !dbg !11598
  %call13 = call zeroext i1 @IS_ERR(i8* %20) #11, !dbg !11600
  br i1 %call13, label %if.then14, label %if.end17, !dbg !11601

if.then14:                                        ; preds = %if.end9
  %21 = load %struct.request*, %struct.request** %req, align 8, !dbg !11602
  %22 = bitcast %struct.request* %21 to i8*, !dbg !11602
  %call15 = call i64 @PTR_ERR(i8* %22) #11, !dbg !11604
  %conv16 = trunc i64 %call15 to i32, !dbg !11604
  store i32 %conv16, i32* %err, align 4, !dbg !11605
  br label %cmd_done, !dbg !11606

if.end17:                                         ; preds = %if.end9
  %23 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11607
  %arrayidx = getelementptr [1 x %struct.mmc_blk_ioc_data*], [1 x %struct.mmc_blk_ioc_data*]* %idatas, i64 0, i64 0, !dbg !11608
  store %struct.mmc_blk_ioc_data* %23, %struct.mmc_blk_ioc_data** %arrayidx, align 8, !dbg !11609
  %24 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !11610
  %tobool18 = icmp ne %struct.mmc_rpmb_data* %24, null, !dbg !11610
  %25 = zext i1 %tobool18 to i64, !dbg !11610
  %cond19 = select i1 %tobool18, i32 1, i32 0, !dbg !11610
  %26 = load %struct.request*, %struct.request** %req, align 8, !dbg !11611
  %call20 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %26) #11, !dbg !11612
  %drv_op = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call20, i32 0, i32 2, !dbg !11613
  store i32 %cond19, i32* %drv_op, align 8, !dbg !11614
  %arraydecay = getelementptr inbounds [1 x %struct.mmc_blk_ioc_data*], [1 x %struct.mmc_blk_ioc_data*]* %idatas, i64 0, i64 0, !dbg !11615
  %27 = bitcast %struct.mmc_blk_ioc_data** %arraydecay to i8*, !dbg !11615
  %28 = load %struct.request*, %struct.request** %req, align 8, !dbg !11616
  %call21 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %28) #11, !dbg !11617
  %drv_op_data = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call21, i32 0, i32 4, !dbg !11618
  store i8* %27, i8** %drv_op_data, align 8, !dbg !11619
  %29 = load %struct.request*, %struct.request** %req, align 8, !dbg !11620
  %call22 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %29) #11, !dbg !11621
  %ioc_count = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call22, i32 0, i32 5, !dbg !11622
  store i32 1, i32* %ioc_count, align 8, !dbg !11623
  %30 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !11624
  %queue23 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %30, i32 0, i32 4, !dbg !11625
  %31 = load %struct.request_queue*, %struct.request_queue** %queue23, align 8, !dbg !11625
  %32 = load %struct.request*, %struct.request** %req, align 8, !dbg !11626
  call void @blk_execute_rq(%struct.request_queue* %31, %struct.gendisk* null, %struct.request* %32, i32 0) #11, !dbg !11627
  %33 = load %struct.request*, %struct.request** %req, align 8, !dbg !11628
  %call24 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %33) #11, !dbg !11629
  %drv_op_result = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call24, i32 0, i32 3, !dbg !11630
  %34 = load i32, i32* %drv_op_result, align 4, !dbg !11630
  store i32 %34, i32* %ioc_err, align 4, !dbg !11631
  %35 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %ic_ptr.addr, align 8, !dbg !11632
  %36 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11633
  %call25 = call i32 @mmc_blk_ioctl_copy_to_user(%struct.mmc_ioc_cmd* %35, %struct.mmc_blk_ioc_data* %36) #11, !dbg !11634
  store i32 %call25, i32* %err, align 4, !dbg !11635
  %37 = load %struct.request*, %struct.request** %req, align 8, !dbg !11636
  call void @blk_put_request(%struct.request* %37) #11, !dbg !11637
  br label %cmd_done, !dbg !11637

cmd_done:                                         ; preds = %if.end17, %if.then14, %if.then6
  call void @llvm.dbg.label(metadata !11638), !dbg !11639
  %38 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11640
  %buf = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %38, i32 0, i32 1, !dbg !11641
  %39 = load i8*, i8** %buf, align 8, !dbg !11641
  call void @kfree(i8* %39) #11, !dbg !11642
  %40 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !11643
  %41 = bitcast %struct.mmc_blk_ioc_data* %40 to i8*, !dbg !11643
  call void @kfree(i8* %41) #11, !dbg !11644
  %42 = load i32, i32* %ioc_err, align 4, !dbg !11645
  %tobool26 = icmp ne i32 %42, 0, !dbg !11645
  br i1 %tobool26, label %cond.true, label %cond.false, !dbg !11645

cond.true:                                        ; preds = %cmd_done
  %43 = load i32, i32* %ioc_err, align 4, !dbg !11646
  br label %cond.end, !dbg !11645

cond.false:                                       ; preds = %cmd_done
  %44 = load i32, i32* %err, align 4, !dbg !11647
  br label %cond.end, !dbg !11645

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond27 = phi i32 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !11645
  store i32 %cond27, i32* %retval, align 4, !dbg !11648
  br label %return, !dbg !11648

return:                                           ; preds = %cond.end, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !11649
  ret i32 %45, !dbg !11649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_ioctl_multi_cmd(%struct.mmc_blk_data* %md, %struct.mmc_ioc_multi_cmd* %user, %struct.mmc_rpmb_data* %rpmb) #0 !dbg !11650 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11653, metadata !DIExpression()), !dbg !11658
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11667, metadata !DIExpression()), !dbg !11668
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11669, metadata !DIExpression()), !dbg !11670
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11671, metadata !DIExpression()), !dbg !11672
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11673, metadata !DIExpression()), !dbg !11676
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11677, metadata !DIExpression()), !dbg !11678
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11679, metadata !DIExpression()), !dbg !11680
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11681, metadata !DIExpression()), !dbg !11682
  %retval = alloca i32, align 4
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %user.addr = alloca %struct.mmc_ioc_multi_cmd*, align 8
  %rpmb.addr = alloca %struct.mmc_rpmb_data*, align 8
  %idata = alloca %struct.mmc_blk_ioc_data**, align 8
  %cmds = alloca %struct.mmc_ioc_cmd*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %ioc_err = alloca i32, align 4
  %num_of_cmds = alloca i64, align 8
  %req = alloca %struct.request*, align 8
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  store %struct.mmc_ioc_multi_cmd* %user, %struct.mmc_ioc_multi_cmd** %user.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ioc_multi_cmd** %user.addr, metadata !11685, metadata !DIExpression()), !dbg !11686
  store %struct.mmc_rpmb_data* %rpmb, %struct.mmc_rpmb_data** %rpmb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb.addr, metadata !11687, metadata !DIExpression()), !dbg !11688
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_ioc_data*** %idata, metadata !11689, metadata !DIExpression()), !dbg !11690
  store %struct.mmc_blk_ioc_data** null, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11690
  call void @llvm.dbg.declare(metadata %struct.mmc_ioc_cmd** %cmds, metadata !11691, metadata !DIExpression()), !dbg !11692
  %0 = load %struct.mmc_ioc_multi_cmd*, %struct.mmc_ioc_multi_cmd** %user.addr, align 8, !dbg !11693
  %cmds1 = getelementptr inbounds %struct.mmc_ioc_multi_cmd, %struct.mmc_ioc_multi_cmd* %0, i32 0, i32 1, !dbg !11694
  %arraydecay = getelementptr inbounds [0 x %struct.mmc_ioc_cmd], [0 x %struct.mmc_ioc_cmd]* %cmds1, i64 0, i64 0, !dbg !11693
  store %struct.mmc_ioc_cmd* %arraydecay, %struct.mmc_ioc_cmd** %cmds, align 8, !dbg !11692
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !11695, metadata !DIExpression()), !dbg !11696
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !11697, metadata !DIExpression()), !dbg !11698
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11699, metadata !DIExpression()), !dbg !11700
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11701, metadata !DIExpression()), !dbg !11702
  store i32 0, i32* %err, align 4, !dbg !11702
  call void @llvm.dbg.declare(metadata i32* %ioc_err, metadata !11703, metadata !DIExpression()), !dbg !11704
  store i32 0, i32* %ioc_err, align 4, !dbg !11704
  call void @llvm.dbg.declare(metadata i64* %num_of_cmds, metadata !11705, metadata !DIExpression()), !dbg !11706
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !11707, metadata !DIExpression()), !dbg !11708
  %1 = bitcast i64* %num_of_cmds to i8*, !dbg !11709
  %2 = load %struct.mmc_ioc_multi_cmd*, %struct.mmc_ioc_multi_cmd** %user.addr, align 8, !dbg !11710
  %num_of_cmds2 = getelementptr inbounds %struct.mmc_ioc_multi_cmd, %struct.mmc_ioc_multi_cmd* %2, i32 0, i32 0, !dbg !11711
  %3 = bitcast i64* %num_of_cmds2 to i8*, !dbg !11712
  store i8* %1, i8** %to.addr.i, align 8
  store i8* %3, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %4 = load i8*, i8** %to.addr.i, align 8, !dbg !11713
  %5 = load i64, i64* %n.addr.i, align 8, !dbg !11713
  store i8* %4, i8** %addr.addr.i.i, align 8
  store i64 %5, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11672
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !11714
  %cmp.i.i = icmp sge i32 %6, 0, !dbg !11714
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11714

land.rhs.i.i:                                     ; preds = %entry
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !11714
  %conv.i.i = sext i32 %7 to i64, !dbg !11714
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11714
  %cmp1.i.i = icmp ult i64 %conv.i.i, %8, !dbg !11714
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11716
  %lnot.i.i = xor i1 %9, true, !dbg !11714
  %lnot.ext.i.i = zext i1 %9 to i32, !dbg !11714
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11714
  br i1 %9, label %if.then.i.i, label %if.end10.i.i, !dbg !11717

if.then.i.i:                                      ; preds = %land.end.i.i
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11718
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #5, !dbg !11721
  br i1 %11, label %if.else.i.i, label %if.then5.i.i, !dbg !11722

if.then5.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !11723
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11724
  call void @copy_overflow(i32 %12, i64 %13) #12, !dbg !11725
  br label %if.end9.i.i, !dbg !11725

if.else.i.i:                                      ; preds = %if.then.i.i
  %14 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11726
  %tobool6.i.i = trunc i8 %14 to i1, !dbg !11726
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11728

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !11729
  br label %if.end.i.i, !dbg !11729

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !11730
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11731
  br label %check_copy_size.exit.i, !dbg !11731

if.end10.i.i:                                     ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11676
  %cmp11.i.i = icmp ugt i64 %15, 2147483647, !dbg !11676
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11676
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11676
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11676
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11732
  %tobool17.i.i = icmp ne i32 %16, 0, !dbg !11732
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11732
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11732
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11732
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11676

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !11734, !srcloc !11737
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !11738, !srcloc !11740
  br label %if.end31.i.i, !dbg !11741

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11676
  %tobool32.i.i = icmp ne i32 %17, 0, !dbg !11676
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11676
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11676
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11676
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11732
  %18 = load i64, i64* %tmp.i.i, align 8, !dbg !11676
  %tobool38.i.i = icmp ne i64 %18, 0, !dbg !11742
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11743

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11744
  br label %check_copy_size.exit.i, !dbg !11744

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %19 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11745
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11746
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11747
  %tobool41.i.i = trunc i8 %21 to i1, !dbg !11747
  call void @check_object_size(i8* %19, i64 %20, i1 zeroext %tobool41.i.i) #12, !dbg !11748
  store i1 true, i1* %retval.i.i, align 1, !dbg !11749
  br label %check_copy_size.exit.i, !dbg !11749

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %22 = load i1, i1* %retval.i.i, align 1, !dbg !11750
  %lnot.i = xor i1 %22, true, !dbg !11713
  %lnot.ext.i = zext i1 %22 to i32, !dbg !11713
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11713
  br i1 %22, label %if.then.i, label %copy_from_user.exit, !dbg !11751

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %23 = load i8*, i8** %to.addr.i, align 8, !dbg !11752
  %24 = load i8*, i8** %from.addr.i, align 8, !dbg !11753
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !11754
  %call2.i = call i64 @_copy_from_user(i8* %23, i8* %24, i64 %25) #12, !dbg !11755
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11756
  br label %copy_from_user.exit, !dbg !11757

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !11758
  %tobool = icmp ne i64 %26, 0, !dbg !11759
  br i1 %tobool, label %if.then, label %if.end, !dbg !11760

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !11761
  br label %return, !dbg !11761

if.end:                                           ; preds = %copy_from_user.exit
  %27 = load i64, i64* %num_of_cmds, align 8, !dbg !11762
  %tobool3 = icmp ne i64 %27, 0, !dbg !11762
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !11764

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11765
  br label %return, !dbg !11765

if.end5:                                          ; preds = %if.end
  %28 = load i64, i64* %num_of_cmds, align 8, !dbg !11766
  %cmp = icmp ugt i64 %28, 255, !dbg !11768
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !11769

if.then6:                                         ; preds = %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !11770
  br label %return, !dbg !11770

if.end7:                                          ; preds = %if.end5
  %29 = load i64, i64* %num_of_cmds, align 8, !dbg !11771
  %call8 = call i8* @kcalloc(i64 %29, i64 8, i32 3264) #11, !dbg !11772
  %30 = bitcast i8* %call8 to %struct.mmc_blk_ioc_data**, !dbg !11772
  store %struct.mmc_blk_ioc_data** %30, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11773
  %31 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11774
  %tobool9 = icmp ne %struct.mmc_blk_ioc_data** %31, null, !dbg !11774
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11776

if.then10:                                        ; preds = %if.end7
  store i32 -12, i32* %retval, align 4, !dbg !11777
  br label %return, !dbg !11777

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %i, align 4, !dbg !11778
  br label %for.cond, !dbg !11780

for.cond:                                         ; preds = %for.inc, %if.end11
  %32 = load i32, i32* %i, align 4, !dbg !11781
  %conv = sext i32 %32 to i64, !dbg !11781
  %33 = load i64, i64* %num_of_cmds, align 8, !dbg !11783
  %cmp12 = icmp ult i64 %conv, %33, !dbg !11784
  br i1 %cmp12, label %for.body, label %for.end, !dbg !11785

for.body:                                         ; preds = %for.cond
  %34 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %cmds, align 8, !dbg !11786
  %35 = load i32, i32* %i, align 4, !dbg !11788
  %idxprom = sext i32 %35 to i64, !dbg !11786
  %arrayidx = getelementptr %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %34, i64 %idxprom, !dbg !11786
  %call14 = call %struct.mmc_blk_ioc_data* @mmc_blk_ioctl_copy_from_user(%struct.mmc_ioc_cmd* %arrayidx) #11, !dbg !11789
  %36 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11790
  %37 = load i32, i32* %i, align 4, !dbg !11791
  %idxprom15 = sext i32 %37 to i64, !dbg !11790
  %arrayidx16 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %36, i64 %idxprom15, !dbg !11790
  store %struct.mmc_blk_ioc_data* %call14, %struct.mmc_blk_ioc_data** %arrayidx16, align 8, !dbg !11792
  %38 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11793
  %39 = load i32, i32* %i, align 4, !dbg !11795
  %idxprom17 = sext i32 %39 to i64, !dbg !11793
  %arrayidx18 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %38, i64 %idxprom17, !dbg !11793
  %40 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx18, align 8, !dbg !11793
  %41 = bitcast %struct.mmc_blk_ioc_data* %40 to i8*, !dbg !11793
  %call19 = call zeroext i1 @IS_ERR(i8* %41) #11, !dbg !11796
  br i1 %call19, label %if.then20, label %if.end26, !dbg !11797

if.then20:                                        ; preds = %for.body
  %42 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11798
  %43 = load i32, i32* %i, align 4, !dbg !11800
  %idxprom21 = sext i32 %43 to i64, !dbg !11798
  %arrayidx22 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %42, i64 %idxprom21, !dbg !11798
  %44 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx22, align 8, !dbg !11798
  %45 = bitcast %struct.mmc_blk_ioc_data* %44 to i8*, !dbg !11798
  %call23 = call i64 @PTR_ERR(i8* %45) #11, !dbg !11801
  %conv24 = trunc i64 %call23 to i32, !dbg !11801
  store i32 %conv24, i32* %err, align 4, !dbg !11802
  %46 = load i32, i32* %i, align 4, !dbg !11803
  %conv25 = sext i32 %46 to i64, !dbg !11803
  store i64 %conv25, i64* %num_of_cmds, align 8, !dbg !11804
  br label %cmd_err, !dbg !11805

if.end26:                                         ; preds = %for.body
  %47 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !11806
  %48 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11807
  %49 = load i32, i32* %i, align 4, !dbg !11808
  %idxprom27 = sext i32 %49 to i64, !dbg !11807
  %arrayidx28 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %48, i64 %idxprom27, !dbg !11807
  %50 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx28, align 8, !dbg !11807
  %rpmb29 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %50, i32 0, i32 3, !dbg !11809
  store %struct.mmc_rpmb_data* %47, %struct.mmc_rpmb_data** %rpmb29, align 8, !dbg !11810
  br label %for.inc, !dbg !11811

for.inc:                                          ; preds = %if.end26
  %51 = load i32, i32* %i, align 4, !dbg !11812
  %inc = add i32 %51, 1, !dbg !11812
  store i32 %inc, i32* %i, align 4, !dbg !11812
  br label %for.cond, !dbg !11813, !llvm.loop !11814

for.end:                                          ; preds = %for.cond
  %52 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11816
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %52, i32 0, i32 2, !dbg !11817
  %card30 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !11818
  %53 = load %struct.mmc_card*, %struct.mmc_card** %card30, align 8, !dbg !11818
  store %struct.mmc_card* %53, %struct.mmc_card** %card, align 8, !dbg !11819
  %54 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !11820
  %55 = bitcast %struct.mmc_card* %54 to i8*, !dbg !11820
  %call31 = call zeroext i1 @IS_ERR(i8* %55) #11, !dbg !11822
  br i1 %call31, label %if.then32, label %if.end35, !dbg !11823

if.then32:                                        ; preds = %for.end
  %56 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !11824
  %57 = bitcast %struct.mmc_card* %56 to i8*, !dbg !11824
  %call33 = call i64 @PTR_ERR(i8* %57) #11, !dbg !11826
  %conv34 = trunc i64 %call33 to i32, !dbg !11826
  store i32 %conv34, i32* %err, align 4, !dbg !11827
  br label %cmd_err, !dbg !11828

if.end35:                                         ; preds = %for.end
  %58 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !11829
  %queue36 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %58, i32 0, i32 2, !dbg !11830
  store %struct.mmc_queue* %queue36, %struct.mmc_queue** %mq, align 8, !dbg !11831
  %59 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !11832
  %queue37 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %59, i32 0, i32 4, !dbg !11833
  %60 = load %struct.request_queue*, %struct.request_queue** %queue37, align 8, !dbg !11833
  %61 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11834
  %arrayidx38 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %61, i64 0, !dbg !11834
  %62 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx38, align 8, !dbg !11834
  %ic = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %62, i32 0, i32 0, !dbg !11835
  %write_flag = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic, i32 0, i32 0, !dbg !11836
  %63 = load i32, i32* %write_flag, align 8, !dbg !11836
  %tobool39 = icmp ne i32 %63, 0, !dbg !11834
  %64 = zext i1 %tobool39 to i64, !dbg !11834
  %cond = select i1 %tobool39, i32 35, i32 34, !dbg !11834
  %call40 = call %struct.request* @blk_get_request(%struct.request_queue* %60, i32 %cond, i32 0) #11, !dbg !11837
  store %struct.request* %call40, %struct.request** %req, align 8, !dbg !11838
  %65 = load %struct.request*, %struct.request** %req, align 8, !dbg !11839
  %66 = bitcast %struct.request* %65 to i8*, !dbg !11839
  %call41 = call zeroext i1 @IS_ERR(i8* %66) #11, !dbg !11841
  br i1 %call41, label %if.then42, label %if.end45, !dbg !11842

if.then42:                                        ; preds = %if.end35
  %67 = load %struct.request*, %struct.request** %req, align 8, !dbg !11843
  %68 = bitcast %struct.request* %67 to i8*, !dbg !11843
  %call43 = call i64 @PTR_ERR(i8* %68) #11, !dbg !11845
  %conv44 = trunc i64 %call43 to i32, !dbg !11845
  store i32 %conv44, i32* %err, align 4, !dbg !11846
  br label %cmd_err, !dbg !11847

if.end45:                                         ; preds = %if.end35
  %69 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !11848
  %tobool46 = icmp ne %struct.mmc_rpmb_data* %69, null, !dbg !11848
  %70 = zext i1 %tobool46 to i64, !dbg !11848
  %cond47 = select i1 %tobool46, i32 1, i32 0, !dbg !11848
  %71 = load %struct.request*, %struct.request** %req, align 8, !dbg !11849
  %call48 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %71) #11, !dbg !11850
  %drv_op = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call48, i32 0, i32 2, !dbg !11851
  store i32 %cond47, i32* %drv_op, align 8, !dbg !11852
  %72 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11853
  %73 = bitcast %struct.mmc_blk_ioc_data** %72 to i8*, !dbg !11853
  %74 = load %struct.request*, %struct.request** %req, align 8, !dbg !11854
  %call49 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %74) #11, !dbg !11855
  %drv_op_data = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call49, i32 0, i32 4, !dbg !11856
  store i8* %73, i8** %drv_op_data, align 8, !dbg !11857
  %75 = load i64, i64* %num_of_cmds, align 8, !dbg !11858
  %conv50 = trunc i64 %75 to i32, !dbg !11858
  %76 = load %struct.request*, %struct.request** %req, align 8, !dbg !11859
  %call51 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %76) #11, !dbg !11860
  %ioc_count = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call51, i32 0, i32 5, !dbg !11861
  store i32 %conv50, i32* %ioc_count, align 8, !dbg !11862
  %77 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !11863
  %queue52 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %77, i32 0, i32 4, !dbg !11864
  %78 = load %struct.request_queue*, %struct.request_queue** %queue52, align 8, !dbg !11864
  %79 = load %struct.request*, %struct.request** %req, align 8, !dbg !11865
  call void @blk_execute_rq(%struct.request_queue* %78, %struct.gendisk* null, %struct.request* %79, i32 0) #11, !dbg !11866
  %80 = load %struct.request*, %struct.request** %req, align 8, !dbg !11867
  %call53 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %80) #11, !dbg !11868
  %drv_op_result = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call53, i32 0, i32 3, !dbg !11869
  %81 = load i32, i32* %drv_op_result, align 4, !dbg !11869
  store i32 %81, i32* %ioc_err, align 4, !dbg !11870
  store i32 0, i32* %i, align 4, !dbg !11871
  br label %for.cond54, !dbg !11873

for.cond54:                                       ; preds = %for.inc65, %if.end45
  %82 = load i32, i32* %i, align 4, !dbg !11874
  %conv55 = sext i32 %82 to i64, !dbg !11874
  %83 = load i64, i64* %num_of_cmds, align 8, !dbg !11876
  %cmp56 = icmp ult i64 %conv55, %83, !dbg !11877
  br i1 %cmp56, label %land.rhs, label %land.end, !dbg !11878

land.rhs:                                         ; preds = %for.cond54
  %84 = load i32, i32* %err, align 4, !dbg !11879
  %tobool58 = icmp ne i32 %84, 0, !dbg !11880
  %lnot = xor i1 %tobool58, true, !dbg !11880
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond54
  %85 = phi i1 [ false, %for.cond54 ], [ %lnot, %land.rhs ], !dbg !11881
  br i1 %85, label %for.body59, label %for.end67, !dbg !11882

for.body59:                                       ; preds = %land.end
  %86 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %cmds, align 8, !dbg !11883
  %87 = load i32, i32* %i, align 4, !dbg !11884
  %idxprom60 = sext i32 %87 to i64, !dbg !11883
  %arrayidx61 = getelementptr %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %86, i64 %idxprom60, !dbg !11883
  %88 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11885
  %89 = load i32, i32* %i, align 4, !dbg !11886
  %idxprom62 = sext i32 %89 to i64, !dbg !11885
  %arrayidx63 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %88, i64 %idxprom62, !dbg !11885
  %90 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx63, align 8, !dbg !11885
  %call64 = call i32 @mmc_blk_ioctl_copy_to_user(%struct.mmc_ioc_cmd* %arrayidx61, %struct.mmc_blk_ioc_data* %90) #11, !dbg !11887
  store i32 %call64, i32* %err, align 4, !dbg !11888
  br label %for.inc65, !dbg !11889

for.inc65:                                        ; preds = %for.body59
  %91 = load i32, i32* %i, align 4, !dbg !11890
  %inc66 = add i32 %91, 1, !dbg !11890
  store i32 %inc66, i32* %i, align 4, !dbg !11890
  br label %for.cond54, !dbg !11891, !llvm.loop !11892

for.end67:                                        ; preds = %land.end
  %92 = load %struct.request*, %struct.request** %req, align 8, !dbg !11894
  call void @blk_put_request(%struct.request* %92) #11, !dbg !11895
  br label %cmd_err, !dbg !11895

cmd_err:                                          ; preds = %for.end67, %if.then42, %if.then32, %if.then20
  call void @llvm.dbg.label(metadata !11896), !dbg !11897
  store i32 0, i32* %i, align 4, !dbg !11898
  br label %for.cond68, !dbg !11900

for.cond68:                                       ; preds = %for.inc77, %cmd_err
  %93 = load i32, i32* %i, align 4, !dbg !11901
  %conv69 = sext i32 %93 to i64, !dbg !11901
  %94 = load i64, i64* %num_of_cmds, align 8, !dbg !11903
  %cmp70 = icmp ult i64 %conv69, %94, !dbg !11904
  br i1 %cmp70, label %for.body72, label %for.end79, !dbg !11905

for.body72:                                       ; preds = %for.cond68
  %95 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11906
  %96 = load i32, i32* %i, align 4, !dbg !11908
  %idxprom73 = sext i32 %96 to i64, !dbg !11906
  %arrayidx74 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %95, i64 %idxprom73, !dbg !11906
  %97 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx74, align 8, !dbg !11906
  %buf = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %97, i32 0, i32 1, !dbg !11909
  %98 = load i8*, i8** %buf, align 8, !dbg !11909
  call void @kfree(i8* %98) #11, !dbg !11910
  %99 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11911
  %100 = load i32, i32* %i, align 4, !dbg !11912
  %idxprom75 = sext i32 %100 to i64, !dbg !11911
  %arrayidx76 = getelementptr %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %99, i64 %idxprom75, !dbg !11911
  %101 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %arrayidx76, align 8, !dbg !11911
  %102 = bitcast %struct.mmc_blk_ioc_data* %101 to i8*, !dbg !11911
  call void @kfree(i8* %102) #11, !dbg !11913
  br label %for.inc77, !dbg !11914

for.inc77:                                        ; preds = %for.body72
  %103 = load i32, i32* %i, align 4, !dbg !11915
  %inc78 = add i32 %103, 1, !dbg !11915
  store i32 %inc78, i32* %i, align 4, !dbg !11915
  br label %for.cond68, !dbg !11916, !llvm.loop !11917

for.end79:                                        ; preds = %for.cond68
  %104 = load %struct.mmc_blk_ioc_data**, %struct.mmc_blk_ioc_data*** %idata, align 8, !dbg !11919
  %105 = bitcast %struct.mmc_blk_ioc_data** %104 to i8*, !dbg !11919
  call void @kfree(i8* %105) #11, !dbg !11920
  %106 = load i32, i32* %ioc_err, align 4, !dbg !11921
  %tobool80 = icmp ne i32 %106, 0, !dbg !11921
  br i1 %tobool80, label %cond.true, label %cond.false, !dbg !11921

cond.true:                                        ; preds = %for.end79
  %107 = load i32, i32* %ioc_err, align 4, !dbg !11922
  br label %cond.end, !dbg !11921

cond.false:                                       ; preds = %for.end79
  %108 = load i32, i32* %err, align 4, !dbg !11923
  br label %cond.end, !dbg !11921

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond81 = phi i32 [ %107, %cond.true ], [ %108, %cond.false ], !dbg !11921
  store i32 %cond81, i32* %retval, align 4, !dbg !11924
  br label %return, !dbg !11924

return:                                           ; preds = %cond.end, %if.then10, %if.then6, %if.then4, %if.then
  %109 = load i32, i32* %retval, align 4, !dbg !11925
  ret i32 %109, !dbg !11925
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @bdev_is_partition(%struct.block_device* %bdev) #0 !dbg !11926 {
entry:
  %bdev.addr = alloca %struct.block_device*, align 8
  store %struct.block_device* %bdev, %struct.block_device** %bdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.block_device** %bdev.addr, metadata !11929, metadata !DIExpression()), !dbg !11930
  %0 = load %struct.block_device*, %struct.block_device** %bdev.addr, align 8, !dbg !11931
  %bd_partno = getelementptr inbounds %struct.block_device, %struct.block_device* %0, i32 0, i32 11, !dbg !11932
  %1 = load i8, i8* %bd_partno, align 8, !dbg !11932
  %tobool = icmp ne i8 %1, 0, !dbg !11931
  ret i1 %tobool, !dbg !11933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mmc_blk_ioc_data* @mmc_blk_ioctl_copy_from_user(%struct.mmc_ioc_cmd* %user) #0 !dbg !11934 {
entry:
  %retval.i.i29 = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11653, metadata !DIExpression()), !dbg !11937
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11667, metadata !DIExpression()), !dbg !11941
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11669, metadata !DIExpression()), !dbg !11942
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11671, metadata !DIExpression()), !dbg !11943
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11673, metadata !DIExpression()), !dbg !11944
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !11677, metadata !DIExpression()), !dbg !11945
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !11679, metadata !DIExpression()), !dbg !11946
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !11681, metadata !DIExpression()), !dbg !11947
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7570, metadata !DIExpression()), !dbg !11948
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7582, metadata !DIExpression()), !dbg !11951
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7584, metadata !DIExpression()), !dbg !11952
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7586, metadata !DIExpression()), !dbg !11953
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7588, metadata !DIExpression()), !dbg !11954
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7594, metadata !DIExpression()), !dbg !11956
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7600, metadata !DIExpression()), !dbg !11958
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7609, metadata !DIExpression()), !dbg !11961
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7611, metadata !DIExpression()), !dbg !11962
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7613, metadata !DIExpression()), !dbg !11963
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7615, metadata !DIExpression()), !dbg !11964
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7617, metadata !DIExpression()), !dbg !11965
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7619, metadata !DIExpression()), !dbg !11966
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7621, metadata !DIExpression()), !dbg !11967
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7623, metadata !DIExpression()), !dbg !11968
  %retval = alloca %struct.mmc_blk_ioc_data*, align 8
  %user.addr = alloca %struct.mmc_ioc_cmd*, align 8
  %idata = alloca %struct.mmc_blk_ioc_data*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_ioc_cmd* %user, %struct.mmc_ioc_cmd** %user.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ioc_cmd** %user.addr, metadata !11969, metadata !DIExpression()), !dbg !11970
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_ioc_data** %idata, metadata !11971, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11973, metadata !DIExpression()), !dbg !11974
  store i64 96, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !11975
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #5, !dbg !11976
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !11977

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11978
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !11979
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11980

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !11981
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !11982
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11983
  %call.i.i = call i32 @get_order(i64 %5) #14, !dbg !11984
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11965
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !11985
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11986
  %8 = load i32, i32* %order.i.i, align 4, !dbg !11987
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11988
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11989
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11990
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #12, !dbg !11991
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11991
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11991
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11991
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !11991
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11992
  br label %kmalloc.exit, !dbg !11992

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !11993
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11994
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !11994
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11995

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11996
  br label %kmalloc_index.exit.i, !dbg !11996

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11997
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !11998
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11999

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12000
  br label %kmalloc_index.exit.i, !dbg !12000

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12001
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !12002
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12003

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12004
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !12005
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12006

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12007
  br label %kmalloc_index.exit.i, !dbg !12007

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12008
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !12009
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12010

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12011
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !12012
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12013

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12014
  br label %kmalloc_index.exit.i, !dbg !12014

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12015
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !12016
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12017

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12018
  br label %kmalloc_index.exit.i, !dbg !12018

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12019
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !12020
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12021

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12022
  br label %kmalloc_index.exit.i, !dbg !12022

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12023
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !12024
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12025

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12026
  br label %kmalloc_index.exit.i, !dbg !12026

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12027
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !12028
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12029

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12030
  br label %kmalloc_index.exit.i, !dbg !12030

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12031
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !12032
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12033

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12034
  br label %kmalloc_index.exit.i, !dbg !12034

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12035
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !12036
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12037

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12038
  br label %kmalloc_index.exit.i, !dbg !12038

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12039
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !12040
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12041

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12042
  br label %kmalloc_index.exit.i, !dbg !12042

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12043
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !12044
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12045

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12046
  br label %kmalloc_index.exit.i, !dbg !12046

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12047
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !12048
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12049

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12050
  br label %kmalloc_index.exit.i, !dbg !12050

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12051
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !12052
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12053

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12054
  br label %kmalloc_index.exit.i, !dbg !12054

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12055
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !12056
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12057

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12058
  br label %kmalloc_index.exit.i, !dbg !12058

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12059
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !12060
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12061

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12062
  br label %kmalloc_index.exit.i, !dbg !12062

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12063
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !12064
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12065

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12066
  br label %kmalloc_index.exit.i, !dbg !12066

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12067
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !12068
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12069

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12070
  br label %kmalloc_index.exit.i, !dbg !12070

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12071
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !12072
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12073

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12074
  br label %kmalloc_index.exit.i, !dbg !12074

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12075
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !12076
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12077

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12078
  br label %kmalloc_index.exit.i, !dbg !12078

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12079
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !12080
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12081

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12082
  br label %kmalloc_index.exit.i, !dbg !12082

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12083
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !12084
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12085

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12086
  br label %kmalloc_index.exit.i, !dbg !12086

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12087
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !12088
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12089

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12090
  br label %kmalloc_index.exit.i, !dbg !12090

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12091
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !12092
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12093

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12094
  br label %kmalloc_index.exit.i, !dbg !12094

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12095
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !12096
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12097

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12098
  br label %kmalloc_index.exit.i, !dbg !12098

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12099
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !12100
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12101

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12102
  br label %kmalloc_index.exit.i, !dbg !12102

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12103
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !12104
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12105

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12106
  br label %kmalloc_index.exit.i, !dbg !12106

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12107
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !12108
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12109

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12110
  br label %kmalloc_index.exit.i, !dbg !12110

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !12111, !srcloc !7860
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #5, !dbg !12112, !srcloc !7864
  unreachable, !dbg !12113

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !12114
  store i32 %43, i32* %index.i, align 4, !dbg !12115
  %44 = load i32, i32* %index.i, align 4, !dbg !12116
  %tobool.i = icmp ne i32 %44, 0, !dbg !12116
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12117

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12118
  br label %kmalloc.exit, !dbg !12118

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !12119
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12120
  %and.i.i = and i32 %46, 17, !dbg !12120
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12120
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12120
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12120
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12120
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12121

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12122
  br label %kmalloc_type.exit.i, !dbg !12122

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12123
  %and2.i.i = and i32 %47, 1, !dbg !12124
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12123
  %48 = zext i1 %tobool3.i.i to i64, !dbg !12123
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12123
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12125
  br label %kmalloc_type.exit.i, !dbg !12125

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !12126
  %idxprom.i = zext i32 %49 to i64, !dbg !12127
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12127
  %50 = load i32, i32* %index.i, align 4, !dbg !12128
  %idxprom6.i = zext i32 %50 to i64, !dbg !12127
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12127
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12127
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !12129
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !12130
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12131
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12132
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #12, !dbg !12133
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12133
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12133
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12133
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !12133
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11953
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12134
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !12135
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12136
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12137
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #12, !dbg !12138
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12139
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !12140
  store i8* %60, i8** %retval.i, align 8, !dbg !12141
  br label %kmalloc.exit, !dbg !12141

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !12142
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !12143
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #12, !dbg !12144
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12144
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12144
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12144
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !12144
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12145
  br label %kmalloc.exit, !dbg !12145

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !12146
  %64 = bitcast i8* %63 to %struct.mmc_blk_ioc_data*, !dbg !12147
  store %struct.mmc_blk_ioc_data* %64, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12148
  %65 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12149
  %tobool = icmp ne %struct.mmc_blk_ioc_data* %65, null, !dbg !12149
  br i1 %tobool, label %if.end, label %if.then, !dbg !12151

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %err, align 4, !dbg !12152
  br label %out, !dbg !12154

if.end:                                           ; preds = %kmalloc.exit
  %66 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12155
  %ic = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %66, i32 0, i32 0, !dbg !12156
  %67 = bitcast %struct.mmc_ioc_cmd* %ic to i8*, !dbg !12157
  %68 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %user.addr, align 8, !dbg !12158
  %69 = bitcast %struct.mmc_ioc_cmd* %68 to i8*, !dbg !12158
  store i8* %67, i8** %to.addr.i, align 8
  store i8* %69, i8** %from.addr.i, align 8
  store i64 72, i64* %n.addr.i, align 8
  %70 = load i8*, i8** %to.addr.i, align 8, !dbg !12159
  %71 = load i64, i64* %n.addr.i, align 8, !dbg !12159
  store i8* %70, i8** %addr.addr.i.i, align 8
  store i64 %71, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11943
  %72 = load i32, i32* %sz.i.i, align 4, !dbg !12160
  %cmp.i.i30 = icmp sge i32 %72, 0, !dbg !12160
  br i1 %cmp.i.i30, label %land.rhs.i.i, label %land.end.i.i, !dbg !12160

land.rhs.i.i:                                     ; preds = %if.end
  %73 = load i32, i32* %sz.i.i, align 4, !dbg !12160
  %conv.i.i31 = sext i32 %73 to i64, !dbg !12160
  %74 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12160
  %cmp1.i.i = icmp ult i64 %conv.i.i31, %74, !dbg !12160
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %75 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !12161
  %lnot.i.i32 = xor i1 %75, true, !dbg !12160
  %lnot.ext.i.i33 = zext i1 %75 to i32, !dbg !12160
  %conv4.i.i = sext i32 %lnot.ext.i.i33 to i64, !dbg !12160
  br i1 %75, label %if.then.i.i34, label %if.end10.i.i, !dbg !12162

if.then.i.i34:                                    ; preds = %land.end.i.i
  %76 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12163
  %77 = call i1 @llvm.is.constant.i64(i64 %76) #5, !dbg !12164
  br i1 %77, label %if.else.i.i, label %if.then5.i.i35, !dbg !12165

if.then5.i.i35:                                   ; preds = %if.then.i.i34
  %78 = load i32, i32* %sz.i.i, align 4, !dbg !12166
  %79 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12167
  call void @copy_overflow(i32 %78, i64 %79) #12, !dbg !12168
  br label %if.end9.i.i, !dbg !12168

if.else.i.i:                                      ; preds = %if.then.i.i34
  %80 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12169
  %tobool6.i.i = trunc i8 %80 to i1, !dbg !12169
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !12170

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !12171
  br label %if.end.i.i36, !dbg !12171

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !12172
  br label %if.end.i.i36

if.end.i.i36:                                     ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i36, %if.then5.i.i35
  store i1 false, i1* %retval.i.i29, align 1, !dbg !12173
  br label %check_copy_size.exit.i, !dbg !12173

if.end10.i.i:                                     ; preds = %land.end.i.i
  %81 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11944
  %cmp11.i.i = icmp ugt i64 %81, 2147483647, !dbg !11944
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11944
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11944
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11944
  %82 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !12174
  %tobool17.i.i = icmp ne i32 %82, 0, !dbg !12174
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !12174
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !12174
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !12174
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11944

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !12175, !srcloc !11737
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !12176, !srcloc !11740
  br label %if.end31.i.i, !dbg !12177

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %83 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11944
  %tobool32.i.i = icmp ne i32 %83, 0, !dbg !11944
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11944
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11944
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11944
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !12174
  %84 = load i64, i64* %tmp.i.i, align 8, !dbg !11944
  %tobool38.i.i = icmp ne i64 %84, 0, !dbg !12178
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !12179

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i29, align 1, !dbg !12180
  br label %check_copy_size.exit.i, !dbg !12180

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %85 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !12181
  %86 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12182
  %87 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12183
  %tobool41.i.i = trunc i8 %87 to i1, !dbg !12183
  call void @check_object_size(i8* %85, i64 %86, i1 zeroext %tobool41.i.i) #12, !dbg !12184
  store i1 true, i1* %retval.i.i29, align 1, !dbg !12185
  br label %check_copy_size.exit.i, !dbg !12185

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %88 = load i1, i1* %retval.i.i29, align 1, !dbg !12186
  %lnot.i = xor i1 %88, true, !dbg !12159
  %lnot.ext.i = zext i1 %88 to i32, !dbg !12159
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !12159
  br i1 %88, label %if.then.i37, label %copy_from_user.exit, !dbg !12187

if.then.i37:                                      ; preds = %check_copy_size.exit.i
  %89 = load i8*, i8** %to.addr.i, align 8, !dbg !12188
  %90 = load i8*, i8** %from.addr.i, align 8, !dbg !12189
  %91 = load i64, i64* %n.addr.i, align 8, !dbg !12190
  %call2.i = call i64 @_copy_from_user(i8* %89, i8* %90, i64 %91) #12, !dbg !12191
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !12192
  br label %copy_from_user.exit, !dbg !12193

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i37
  %92 = load i64, i64* %n.addr.i, align 8, !dbg !12194
  %tobool2 = icmp ne i64 %92, 0, !dbg !12195
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12196

if.then3:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %err, align 4, !dbg !12197
  br label %idata_err, !dbg !12199

if.end4:                                          ; preds = %copy_from_user.exit
  %93 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12200
  %ic5 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %93, i32 0, i32 0, !dbg !12201
  %blksz = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic5, i32 0, i32 6, !dbg !12202
  %94 = load i32, i32* %blksz, align 4, !dbg !12202
  %conv = zext i32 %94 to i64, !dbg !12203
  %95 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12204
  %ic6 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %95, i32 0, i32 0, !dbg !12205
  %blocks = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic6, i32 0, i32 7, !dbg !12206
  %96 = load i32, i32* %blocks, align 8, !dbg !12206
  %conv7 = zext i32 %96 to i64, !dbg !12204
  %mul = mul i64 %conv, %conv7, !dbg !12207
  %97 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12208
  %buf_bytes = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %97, i32 0, i32 2, !dbg !12209
  store i64 %mul, i64* %buf_bytes, align 8, !dbg !12210
  %98 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12211
  %buf_bytes8 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %98, i32 0, i32 2, !dbg !12213
  %99 = load i64, i64* %buf_bytes8, align 8, !dbg !12213
  %cmp = icmp ugt i64 %99, 524288, !dbg !12214
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !12215

if.then10:                                        ; preds = %if.end4
  store i32 -75, i32* %err, align 4, !dbg !12216
  br label %idata_err, !dbg !12218

if.end11:                                         ; preds = %if.end4
  %100 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12219
  %buf_bytes12 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %100, i32 0, i32 2, !dbg !12221
  %101 = load i64, i64* %buf_bytes12, align 8, !dbg !12221
  %tobool13 = icmp ne i64 %101, 0, !dbg !12219
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !12222

if.then14:                                        ; preds = %if.end11
  %102 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12223
  %buf = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %102, i32 0, i32 1, !dbg !12225
  store i8* null, i8** %buf, align 8, !dbg !12226
  %103 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12227
  store %struct.mmc_blk_ioc_data* %103, %struct.mmc_blk_ioc_data** %retval, align 8, !dbg !12228
  br label %return, !dbg !12228

if.end15:                                         ; preds = %if.end11
  %104 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12229
  %ic16 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %104, i32 0, i32 0, !dbg !12230
  %data_ptr = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic16, i32 0, i32 13, !dbg !12231
  %105 = load i64, i64* %data_ptr, align 8, !dbg !12231
  %106 = inttoptr i64 %105 to i8*, !dbg !12232
  %107 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12233
  %buf_bytes17 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %107, i32 0, i32 2, !dbg !12234
  %108 = load i64, i64* %buf_bytes17, align 8, !dbg !12234
  %call18 = call i8* @memdup_user(i8* %106, i64 %108) #11, !dbg !12235
  %109 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12236
  %buf19 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %109, i32 0, i32 1, !dbg !12237
  store i8* %call18, i8** %buf19, align 8, !dbg !12238
  %110 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12239
  %buf20 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %110, i32 0, i32 1, !dbg !12241
  %111 = load i8*, i8** %buf20, align 8, !dbg !12241
  %call21 = call zeroext i1 @IS_ERR(i8* %111) #11, !dbg !12242
  br i1 %call21, label %if.then22, label %if.end26, !dbg !12243

if.then22:                                        ; preds = %if.end15
  %112 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12244
  %buf23 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %112, i32 0, i32 1, !dbg !12246
  %113 = load i8*, i8** %buf23, align 8, !dbg !12246
  %call24 = call i64 @PTR_ERR(i8* %113) #11, !dbg !12247
  %conv25 = trunc i64 %call24 to i32, !dbg !12247
  store i32 %conv25, i32* %err, align 4, !dbg !12248
  br label %idata_err, !dbg !12249

if.end26:                                         ; preds = %if.end15
  %114 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12250
  store %struct.mmc_blk_ioc_data* %114, %struct.mmc_blk_ioc_data** %retval, align 8, !dbg !12251
  br label %return, !dbg !12251

idata_err:                                        ; preds = %if.then22, %if.then10, %if.then3
  call void @llvm.dbg.label(metadata !12252), !dbg !12253
  %115 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata, align 8, !dbg !12254
  %116 = bitcast %struct.mmc_blk_ioc_data* %115 to i8*, !dbg !12254
  call void @kfree(i8* %116) #11, !dbg !12255
  br label %out, !dbg !12255

out:                                              ; preds = %idata_err, %if.then
  call void @llvm.dbg.label(metadata !12256), !dbg !12257
  %117 = load i32, i32* %err, align 4, !dbg !12258
  %conv27 = sext i32 %117 to i64, !dbg !12258
  %call28 = call i8* @ERR_PTR(i64 %conv27) #11, !dbg !12259
  %118 = bitcast i8* %call28 to %struct.mmc_blk_ioc_data*, !dbg !12259
  store %struct.mmc_blk_ioc_data* %118, %struct.mmc_blk_ioc_data** %retval, align 8, !dbg !12260
  br label %return, !dbg !12260

return:                                           ; preds = %out, %if.end26, %if.then14
  %119 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %retval, align 8, !dbg !12261
  ret %struct.mmc_blk_ioc_data* %119, !dbg !12261
}

; Function Attrs: noredzone
declare dso_local %struct.request* @blk_get_request(%struct.request_queue*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @blk_execute_rq(%struct.request_queue*, %struct.gendisk*, %struct.request*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_ioctl_copy_to_user(%struct.mmc_ioc_cmd* %ic_ptr, %struct.mmc_blk_ioc_data* %idata) #0 !dbg !12262 {
entry:
  %retval.i.i11 = alloca i1, align 1
  %addr.addr.i.i12 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i12, metadata !11653, metadata !DIExpression()), !dbg !12265
  %bytes.addr.i.i13 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i13, metadata !11667, metadata !DIExpression()), !dbg !12273
  %is_source.addr.i.i14 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i14, metadata !11669, metadata !DIExpression()), !dbg !12274
  %sz.i.i15 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i15, metadata !11671, metadata !DIExpression()), !dbg !12275
  %__ret_warn_on.i.i16 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i16, metadata !11673, metadata !DIExpression()), !dbg !12276
  %tmp.i.i17 = alloca i64, align 8
  %to.addr.i18 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i18, metadata !12277, metadata !DIExpression()), !dbg !12278
  %from.addr.i19 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i19, metadata !12279, metadata !DIExpression()), !dbg !12280
  %n.addr.i20 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i20, metadata !12281, metadata !DIExpression()), !dbg !12282
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !11653, metadata !DIExpression()), !dbg !12283
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !11667, metadata !DIExpression()), !dbg !12287
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !11669, metadata !DIExpression()), !dbg !12288
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !11671, metadata !DIExpression()), !dbg !12289
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !11673, metadata !DIExpression()), !dbg !12290
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12277, metadata !DIExpression()), !dbg !12291
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12279, metadata !DIExpression()), !dbg !12292
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12281, metadata !DIExpression()), !dbg !12293
  %retval = alloca i32, align 4
  %ic_ptr.addr = alloca %struct.mmc_ioc_cmd*, align 8
  %idata.addr = alloca %struct.mmc_blk_ioc_data*, align 8
  %ic = alloca %struct.mmc_ioc_cmd*, align 8
  store %struct.mmc_ioc_cmd* %ic_ptr, %struct.mmc_ioc_cmd** %ic_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ioc_cmd** %ic_ptr.addr, metadata !12294, metadata !DIExpression()), !dbg !12295
  store %struct.mmc_blk_ioc_data* %idata, %struct.mmc_blk_ioc_data** %idata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_ioc_data** %idata.addr, metadata !12296, metadata !DIExpression()), !dbg !12297
  call void @llvm.dbg.declare(metadata %struct.mmc_ioc_cmd** %ic, metadata !12298, metadata !DIExpression()), !dbg !12299
  %0 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !12300
  %ic1 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %0, i32 0, i32 0, !dbg !12301
  store %struct.mmc_ioc_cmd* %ic1, %struct.mmc_ioc_cmd** %ic, align 8, !dbg !12299
  %1 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %ic_ptr.addr, align 8, !dbg !12302
  %response = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %1, i32 0, i32 4, !dbg !12303
  %2 = bitcast [4 x i32]* %response to i8*, !dbg !12304
  %3 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %ic, align 8, !dbg !12305
  %response2 = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %3, i32 0, i32 4, !dbg !12306
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %response2, i64 0, i64 0, !dbg !12305
  %4 = bitcast i32* %arraydecay to i8*, !dbg !12305
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %from.addr.i, align 8, !dbg !12307
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !12307
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !12289
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !12308
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !12308
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !12308

land.rhs.i.i:                                     ; preds = %entry
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !12308
  %conv.i.i = sext i32 %8 to i64, !dbg !12308
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12308
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !12308
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %10 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !12309
  %lnot.i.i = xor i1 %10, true, !dbg !12308
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !12308
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12308
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !12310

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12311
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #5, !dbg !12312
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !12313

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !12314
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12315
  call void @copy_overflow(i32 %13, i64 %14) #12, !dbg !12316
  br label %if.end9.i.i, !dbg !12316

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12317
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !12317
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !12318

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !12319
  br label %if.end.i.i, !dbg !12319

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !12320
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !12321
  br label %check_copy_size.exit.i, !dbg !12321

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12290
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !12290
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !12290
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !12290
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !12290
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !12322
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !12322
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !12322
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !12322
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !12322
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !12290

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !12323, !srcloc !11737
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !12324, !srcloc !11740
  br label %if.end31.i.i, !dbg !12325

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !12290
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !12290
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !12290
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !12290
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !12290
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !12322
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !12290
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !12326
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !12327

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !12328
  br label %check_copy_size.exit.i, !dbg !12328

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !12329
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12330
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12331
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !12331
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #12, !dbg !12332
  store i1 true, i1* %retval.i.i, align 1, !dbg !12333
  br label %check_copy_size.exit.i, !dbg !12333

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !12334
  %lnot.i = xor i1 %23, true, !dbg !12307
  %lnot.ext.i = zext i1 %23 to i32, !dbg !12307
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !12307
  br i1 %23, label %if.then.i, label %copy_to_user.exit, !dbg !12335

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !12336
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !12337
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !12338
  %call2.i = call i64 @_copy_to_user(i8* %24, i8* %25, i64 %26) #12, !dbg !12339
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !12340
  br label %copy_to_user.exit, !dbg !12341

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !12342
  %tobool = icmp ne i64 %27, 0, !dbg !12343
  br i1 %tobool, label %if.then, label %if.end, !dbg !12344

if.then:                                          ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !12345
  br label %return, !dbg !12345

if.end:                                           ; preds = %copy_to_user.exit
  %28 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !12346
  %ic3 = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %28, i32 0, i32 0, !dbg !12347
  %write_flag = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %ic3, i32 0, i32 0, !dbg !12348
  %29 = load i32, i32* %write_flag, align 8, !dbg !12348
  %tobool4 = icmp ne i32 %29, 0, !dbg !12346
  br i1 %tobool4, label %if.end10, label %if.then5, !dbg !12349

if.then5:                                         ; preds = %if.end
  %30 = load %struct.mmc_ioc_cmd*, %struct.mmc_ioc_cmd** %ic, align 8, !dbg !12350
  %data_ptr = getelementptr inbounds %struct.mmc_ioc_cmd, %struct.mmc_ioc_cmd* %30, i32 0, i32 13, !dbg !12351
  %31 = load i64, i64* %data_ptr, align 8, !dbg !12351
  %32 = inttoptr i64 %31 to i8*, !dbg !12352
  %33 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !12353
  %buf = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %33, i32 0, i32 1, !dbg !12354
  %34 = load i8*, i8** %buf, align 8, !dbg !12354
  %35 = load %struct.mmc_blk_ioc_data*, %struct.mmc_blk_ioc_data** %idata.addr, align 8, !dbg !12355
  %buf_bytes = getelementptr inbounds %struct.mmc_blk_ioc_data, %struct.mmc_blk_ioc_data* %35, i32 0, i32 2, !dbg !12356
  %36 = load i64, i64* %buf_bytes, align 8, !dbg !12356
  store i8* %32, i8** %to.addr.i18, align 8
  store i8* %34, i8** %from.addr.i19, align 8
  store i64 %36, i64* %n.addr.i20, align 8
  %37 = load i8*, i8** %from.addr.i19, align 8, !dbg !12357
  %38 = load i64, i64* %n.addr.i20, align 8, !dbg !12357
  store i8* %37, i8** %addr.addr.i.i12, align 8
  store i64 %38, i64* %bytes.addr.i.i13, align 8
  store i8 1, i8* %is_source.addr.i.i14, align 1
  store i32 -1, i32* %sz.i.i15, align 4, !dbg !12275
  %39 = load i32, i32* %sz.i.i15, align 4, !dbg !12358
  %cmp.i.i21 = icmp sge i32 %39, 0, !dbg !12358
  br i1 %cmp.i.i21, label %land.rhs.i.i24, label %land.end.i.i28, !dbg !12358

land.rhs.i.i24:                                   ; preds = %if.then5
  %40 = load i32, i32* %sz.i.i15, align 4, !dbg !12358
  %conv.i.i22 = sext i32 %40 to i64, !dbg !12358
  %41 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !12358
  %cmp1.i.i23 = icmp ult i64 %conv.i.i22, %41, !dbg !12358
  br label %land.end.i.i28

land.end.i.i28:                                   ; preds = %land.rhs.i.i24, %if.then5
  %42 = phi i1 [ false, %if.then5 ], [ %cmp1.i.i23, %land.rhs.i.i24 ], !dbg !12359
  %lnot.i.i25 = xor i1 %42, true, !dbg !12358
  %lnot.ext.i.i26 = zext i1 %42 to i32, !dbg !12358
  %conv4.i.i27 = sext i32 %lnot.ext.i.i26 to i64, !dbg !12358
  br i1 %42, label %if.then.i.i29, label %if.end10.i.i44, !dbg !12360

if.then.i.i29:                                    ; preds = %land.end.i.i28
  %43 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !12361
  %44 = call i1 @llvm.is.constant.i64(i64 %43) #5, !dbg !12362
  br i1 %44, label %if.else.i.i32, label %if.then5.i.i30, !dbg !12363

if.then5.i.i30:                                   ; preds = %if.then.i.i29
  %45 = load i32, i32* %sz.i.i15, align 4, !dbg !12364
  %46 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !12365
  call void @copy_overflow(i32 %45, i64 %46) #12, !dbg !12366
  br label %if.end9.i.i36, !dbg !12366

if.else.i.i32:                                    ; preds = %if.then.i.i29
  %47 = load i8, i8* %is_source.addr.i.i14, align 1, !dbg !12367
  %tobool6.i.i31 = trunc i8 %47 to i1, !dbg !12367
  br i1 %tobool6.i.i31, label %if.then7.i.i33, label %if.else8.i.i34, !dbg !12368

if.then7.i.i33:                                   ; preds = %if.else.i.i32
  call void @__bad_copy_from() #12, !dbg !12369
  br label %if.end.i.i35, !dbg !12369

if.else8.i.i34:                                   ; preds = %if.else.i.i32
  call void @__bad_copy_to() #12, !dbg !12370
  br label %if.end.i.i35

if.end.i.i35:                                     ; preds = %if.else8.i.i34, %if.then7.i.i33
  br label %if.end9.i.i36

if.end9.i.i36:                                    ; preds = %if.end.i.i35, %if.then5.i.i30
  store i1 false, i1* %retval.i.i11, align 1, !dbg !12371
  br label %check_copy_size.exit.i58, !dbg !12371

if.end10.i.i44:                                   ; preds = %land.end.i.i28
  %48 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !12276
  %cmp11.i.i37 = icmp ugt i64 %48, 2147483647, !dbg !12276
  %lnot13.i.i38 = xor i1 %cmp11.i.i37, true, !dbg !12276
  %lnot.ext16.i.i39 = zext i1 %cmp11.i.i37 to i32, !dbg !12276
  store i32 %lnot.ext16.i.i39, i32* %__ret_warn_on.i.i16, align 4, !dbg !12276
  %49 = load i32, i32* %__ret_warn_on.i.i16, align 4, !dbg !12372
  %tobool17.i.i40 = icmp ne i32 %49, 0, !dbg !12372
  %lnot18.i.i41 = xor i1 %tobool17.i.i40, true, !dbg !12372
  %lnot.ext21.i.i42 = zext i1 %tobool17.i.i40 to i32, !dbg !12372
  %conv22.i.i43 = sext i32 %lnot.ext21.i.i42 to i64, !dbg !12372
  br i1 %tobool17.i.i40, label %if.then24.i.i45, label %if.end31.i.i51, !dbg !12276

if.then24.i.i45:                                  ; preds = %if.end10.i.i44
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i32 150, i32 2307, i64 12) #5, !dbg !12373, !srcloc !11737
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #5, !dbg !12374, !srcloc !11740
  br label %if.end31.i.i51, !dbg !12375

if.end31.i.i51:                                   ; preds = %if.then24.i.i45, %if.end10.i.i44
  %50 = load i32, i32* %__ret_warn_on.i.i16, align 4, !dbg !12276
  %tobool32.i.i46 = icmp ne i32 %50, 0, !dbg !12276
  %lnot33.i.i47 = xor i1 %tobool32.i.i46, true, !dbg !12276
  %lnot.ext36.i.i48 = zext i1 %tobool32.i.i46 to i32, !dbg !12276
  %conv37.i.i49 = sext i32 %lnot.ext36.i.i48 to i64, !dbg !12276
  store i64 %conv37.i.i49, i64* %tmp.i.i17, align 8, !dbg !12372
  %51 = load i64, i64* %tmp.i.i17, align 8, !dbg !12276
  %tobool38.i.i50 = icmp ne i64 %51, 0, !dbg !12376
  br i1 %tobool38.i.i50, label %if.then39.i.i52, label %if.end40.i.i54, !dbg !12377

if.then39.i.i52:                                  ; preds = %if.end31.i.i51
  store i1 false, i1* %retval.i.i11, align 1, !dbg !12378
  br label %check_copy_size.exit.i58, !dbg !12378

if.end40.i.i54:                                   ; preds = %if.end31.i.i51
  %52 = load i8*, i8** %addr.addr.i.i12, align 8, !dbg !12379
  %53 = load i64, i64* %bytes.addr.i.i13, align 8, !dbg !12380
  %54 = load i8, i8* %is_source.addr.i.i14, align 1, !dbg !12381
  %tobool41.i.i53 = trunc i8 %54 to i1, !dbg !12381
  call void @check_object_size(i8* %52, i64 %53, i1 zeroext %tobool41.i.i53) #12, !dbg !12382
  store i1 true, i1* %retval.i.i11, align 1, !dbg !12383
  br label %check_copy_size.exit.i58, !dbg !12383

check_copy_size.exit.i58:                         ; preds = %if.end40.i.i54, %if.then39.i.i52, %if.end9.i.i36
  %55 = load i1, i1* %retval.i.i11, align 1, !dbg !12384
  %lnot.i55 = xor i1 %55, true, !dbg !12357
  %lnot.ext.i56 = zext i1 %55 to i32, !dbg !12357
  %conv.i57 = sext i32 %lnot.ext.i56 to i64, !dbg !12357
  br i1 %55, label %if.then.i60, label %copy_to_user.exit61, !dbg !12385

if.then.i60:                                      ; preds = %check_copy_size.exit.i58
  %56 = load i8*, i8** %to.addr.i18, align 8, !dbg !12386
  %57 = load i8*, i8** %from.addr.i19, align 8, !dbg !12387
  %58 = load i64, i64* %n.addr.i20, align 8, !dbg !12388
  %call2.i59 = call i64 @_copy_to_user(i8* %56, i8* %57, i64 %58) #12, !dbg !12389
  store i64 %call2.i59, i64* %n.addr.i20, align 8, !dbg !12390
  br label %copy_to_user.exit61, !dbg !12391

copy_to_user.exit61:                              ; preds = %check_copy_size.exit.i58, %if.then.i60
  %59 = load i64, i64* %n.addr.i20, align 8, !dbg !12392
  %tobool7 = icmp ne i64 %59, 0, !dbg !12393
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !12394

if.then8:                                         ; preds = %copy_to_user.exit61
  store i32 -14, i32* %retval, align 4, !dbg !12395
  br label %return, !dbg !12395

if.end9:                                          ; preds = %copy_to_user.exit61
  br label %if.end10, !dbg !12396

if.end10:                                         ; preds = %if.end9, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12397
  br label %return, !dbg !12397

return:                                           ; preds = %if.end10, %if.then8, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !12398
  ret i32 %60, !dbg !12398
}

; Function Attrs: noredzone
declare dso_local void @blk_put_request(%struct.request*) #2

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !12399 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12404, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12406, metadata !DIExpression()), !dbg !12408
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !12408
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !12409
  %tobool = icmp ne i32 %0, 0, !dbg !12409
  %lnot = xor i1 %tobool, true, !dbg !12409
  %lnot1 = xor i1 %lnot, true, !dbg !12409
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12409
  %conv = sext i32 %lnot.ext to i64, !dbg !12409
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12409
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12408

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12409

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !12411

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !12413

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !12411
  %2 = load i64, i64* %count.addr, align 8, !dbg !12411
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.43, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !12411
  br label %do.body4, !dbg !12411

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !12415

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !12417

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12415

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.42, i64 0, i64 0), i32 134, i32 2313, i64 12) #5, !dbg !12419, !srcloc !12421
  br label %do.end8, !dbg !12419

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #5, !dbg !12422, !srcloc !12424
  br label %do.body9, !dbg !12415

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !12425

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !12415

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !12411

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !12427

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !12411

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !12411

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !12408
  %tobool15 = icmp ne i32 %3, 0, !dbg !12408
  %lnot16 = xor i1 %tobool15, true, !dbg !12408
  %lnot18 = xor i1 %lnot16, true, !dbg !12408
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12408
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12408
  store i64 %conv20, i64* %tmp, align 8, !dbg !12409
  %4 = load i64, i64* %tmp, align 8, !dbg !12408
  ret void, !dbg !12429
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !12430 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12435, metadata !DIExpression()), !dbg !12436
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !12437, metadata !DIExpression()), !dbg !12438
  ret void, !dbg !12439
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !12440 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12443, metadata !DIExpression()), !dbg !12444
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12445, metadata !DIExpression()), !dbg !12446
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12447, metadata !DIExpression()), !dbg !12448
  %0 = load i64, i64* %n.addr, align 8, !dbg !12449
  %1 = load i64, i64* %size.addr, align 8, !dbg !12450
  %2 = load i32, i32* %flags.addr, align 4, !dbg !12451
  %or = or i32 %2, 256, !dbg !12452
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !12453
  ret i8* %call, !dbg !12454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !12455 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7570, metadata !DIExpression()), !dbg !12456
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7582, metadata !DIExpression()), !dbg !12460
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7584, metadata !DIExpression()), !dbg !12461
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7586, metadata !DIExpression()), !dbg !12462
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7588, metadata !DIExpression()), !dbg !12463
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7594, metadata !DIExpression()), !dbg !12465
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7600, metadata !DIExpression()), !dbg !12467
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7609, metadata !DIExpression()), !dbg !12470
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7611, metadata !DIExpression()), !dbg !12471
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7613, metadata !DIExpression()), !dbg !12472
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7615, metadata !DIExpression()), !dbg !12473
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7617, metadata !DIExpression()), !dbg !12474
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7619, metadata !DIExpression()), !dbg !12475
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7621, metadata !DIExpression()), !dbg !12476
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7623, metadata !DIExpression()), !dbg !12477
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12482, metadata !DIExpression()), !dbg !12483
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12484, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !12486, metadata !DIExpression()), !dbg !12489
  %0 = load i64, i64* %n.addr, align 8, !dbg !12489
  store i64 %0, i64* %__a, align 8, !dbg !12489
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !12490, metadata !DIExpression()), !dbg !12489
  %1 = load i64, i64* %size.addr, align 8, !dbg !12489
  store i64 %1, i64* %__b, align 8, !dbg !12489
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !12491, metadata !DIExpression()), !dbg !12489
  store i64* %bytes, i64** %__d, align 8, !dbg !12489
  %cmp = icmp eq i64* %__a, %__b, !dbg !12489
  %conv = zext i1 %cmp to i32, !dbg !12489
  %2 = load i64*, i64** %__d, align 8, !dbg !12489
  %cmp1 = icmp eq i64* %__a, %2, !dbg !12489
  %conv2 = zext i1 %cmp1 to i32, !dbg !12489
  %3 = load i64, i64* %__a, align 8, !dbg !12489
  %4 = load i64, i64* %__b, align 8, !dbg !12489
  %5 = load i64*, i64** %__d, align 8, !dbg !12489
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !12489
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !12489
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !12489
  store i64 %8, i64* %5, align 8, !dbg !12489
  %frombool = zext i1 %7 to i8, !dbg !12489
  store i8 %frombool, i8* %tmp, align 1, !dbg !12489
  %9 = load i8, i8* %tmp, align 1, !dbg !12489
  %tobool = trunc i8 %9 to i1, !dbg !12489
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !12493
  %lnot = xor i1 %call, true, !dbg !12493
  %lnot3 = xor i1 %lnot, true, !dbg !12493
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12493
  %conv4 = sext i32 %lnot.ext to i64, !dbg !12493
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !12493
  br i1 %tobool5, label %if.then, label %if.end, !dbg !12494

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12495
  br label %return, !dbg !12495

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !12496
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !12497
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !12498

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !12499
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !12500
  br i1 %13, label %if.then6, label %if.end8, !dbg !12501

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !12502
  %15 = load i32, i32* %flags.addr, align 4, !dbg !12503
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !12504
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #5, !dbg !12505
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !12506

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !12507
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !12508
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12509

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !12510
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !12511
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !12512
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !12513
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12474
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !12514
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12515
  %24 = load i32, i32* %order.i.i, align 4, !dbg !12516
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12517
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12518
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12519
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !12520
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12520
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12520
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12520
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !12520
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12521
  br label %kmalloc.exit, !dbg !12521

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !12522
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12523
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !12523
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12524

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12525
  br label %kmalloc_index.exit.i, !dbg !12525

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12526
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !12527
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12528

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12529
  br label %kmalloc_index.exit.i, !dbg !12529

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12530
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !12531
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12532

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12533
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !12534
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12535

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12536
  br label %kmalloc_index.exit.i, !dbg !12536

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12537
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !12538
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12539

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12540
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !12541
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12542

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12543
  br label %kmalloc_index.exit.i, !dbg !12543

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12544
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !12545
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12546

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12547
  br label %kmalloc_index.exit.i, !dbg !12547

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12548
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !12549
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12550

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12551
  br label %kmalloc_index.exit.i, !dbg !12551

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12552
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !12553
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12554

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12555
  br label %kmalloc_index.exit.i, !dbg !12555

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12556
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !12557
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12558

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12559
  br label %kmalloc_index.exit.i, !dbg !12559

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12560
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !12561
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12562

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12563
  br label %kmalloc_index.exit.i, !dbg !12563

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12564
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !12565
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12566

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12567
  br label %kmalloc_index.exit.i, !dbg !12567

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12568
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !12569
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12570

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12571
  br label %kmalloc_index.exit.i, !dbg !12571

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12572
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !12573
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12574

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12575
  br label %kmalloc_index.exit.i, !dbg !12575

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12576
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !12577
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12578

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12579
  br label %kmalloc_index.exit.i, !dbg !12579

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12580
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !12581
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12582

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12583
  br label %kmalloc_index.exit.i, !dbg !12583

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12584
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !12585
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12586

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12587
  br label %kmalloc_index.exit.i, !dbg !12587

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12588
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !12589
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12590

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12591
  br label %kmalloc_index.exit.i, !dbg !12591

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12592
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !12593
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12594

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12595
  br label %kmalloc_index.exit.i, !dbg !12595

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12596
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !12597
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12598

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12599
  br label %kmalloc_index.exit.i, !dbg !12599

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12600
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !12601
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12602

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12603
  br label %kmalloc_index.exit.i, !dbg !12603

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12604
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !12605
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12606

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12607
  br label %kmalloc_index.exit.i, !dbg !12607

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12608
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !12609
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12610

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12611
  br label %kmalloc_index.exit.i, !dbg !12611

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12612
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !12613
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12614

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12615
  br label %kmalloc_index.exit.i, !dbg !12615

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12616
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !12617
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12618

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12619
  br label %kmalloc_index.exit.i, !dbg !12619

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12620
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !12621
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12622

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12623
  br label %kmalloc_index.exit.i, !dbg !12623

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12624
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !12625
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12626

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12627
  br label %kmalloc_index.exit.i, !dbg !12627

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12628
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !12629
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12630

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12631
  br label %kmalloc_index.exit.i, !dbg !12631

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12632
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !12633
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12634

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12635
  br label %kmalloc_index.exit.i, !dbg !12635

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12636
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !12637
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12638

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12639
  br label %kmalloc_index.exit.i, !dbg !12639

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !12640, !srcloc !7860
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 201) #5, !dbg !12641, !srcloc !7864
  unreachable, !dbg !12642

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !12643
  store i32 %59, i32* %index.i, align 4, !dbg !12644
  %60 = load i32, i32* %index.i, align 4, !dbg !12645
  %tobool.i = icmp ne i32 %60, 0, !dbg !12645
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12646

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12647
  br label %kmalloc.exit, !dbg !12647

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !12648
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12649
  %and.i.i = and i32 %62, 17, !dbg !12649
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12649
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12649
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12649
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12649
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12650

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12651
  br label %kmalloc_type.exit.i, !dbg !12651

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12652
  %and2.i.i = and i32 %63, 1, !dbg !12653
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12652
  %64 = zext i1 %tobool3.i.i to i64, !dbg !12652
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12652
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12654
  br label %kmalloc_type.exit.i, !dbg !12654

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !12655
  %idxprom.i = zext i32 %65 to i64, !dbg !12656
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12656
  %66 = load i32, i32* %index.i, align 4, !dbg !12657
  %idxprom6.i = zext i32 %66 to i64, !dbg !12656
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12656
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12656
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !12658
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !12659
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12660
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12661
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !12662
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12662
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12662
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12662
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !12662
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12462
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12663
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !12664
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12665
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12666
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !12667
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12668
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !12669
  store i8* %76, i8** %retval.i, align 8, !dbg !12670
  br label %kmalloc.exit, !dbg !12670

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !12671
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !12672
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !12673
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12673
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12673
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12673
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !12673
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12674
  br label %kmalloc.exit, !dbg !12674

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !12675
  store i8* %79, i8** %retval, align 8, !dbg !12676
  br label %return, !dbg !12676

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !12677
  %81 = load i32, i32* %flags.addr, align 4, !dbg !12678
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !12679
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !12679
  %maskedptr = and i64 %ptrint, 7, !dbg !12679
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !12679
  call void @llvm.assume(i1 %maskcond), !dbg !12679
  store i8* %call9, i8** %retval, align 8, !dbg !12680
  br label %return, !dbg !12680

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !12681
  ret i8* %82, !dbg !12681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !12682 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !12686, metadata !DIExpression()), !dbg !12687
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !12688
  %tobool = trunc i8 %0 to i1, !dbg !12688
  %lnot = xor i1 %tobool, true, !dbg !12688
  %lnot1 = xor i1 %lnot, true, !dbg !12688
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12688
  %conv = sext i32 %lnot.ext to i64, !dbg !12688
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12688
  ret i1 %tobool2, !dbg !12689
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !12690 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !12697
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !12698
  %1 = load i8*, i8** %name, align 8, !dbg !12698
  ret i8* %1, !dbg !12699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_alloc_rpmb_part(%struct.mmc_card* %card, %struct.mmc_blk_data* %md, i32 %part_index, i64 %size, i8* %subname) #0 !dbg !12700 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %part_index.addr = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %subname.addr = alloca i8*, align 8
  %devidx = alloca i32, align 4
  %ret = alloca i32, align 4
  %rpmb_name = alloca [32 x i8], align 16
  %cap_str = alloca [10 x i8], align 1
  %rpmb = alloca %struct.mmc_rpmb_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !12703, metadata !DIExpression()), !dbg !12704
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !12705, metadata !DIExpression()), !dbg !12706
  store i32 %part_index, i32* %part_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %part_index.addr, metadata !12707, metadata !DIExpression()), !dbg !12708
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12709, metadata !DIExpression()), !dbg !12710
  store i8* %subname, i8** %subname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subname.addr, metadata !12711, metadata !DIExpression()), !dbg !12712
  call void @llvm.dbg.declare(metadata i32* %devidx, metadata !12713, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12715, metadata !DIExpression()), !dbg !12716
  call void @llvm.dbg.declare(metadata [32 x i8]* %rpmb_name, metadata !12717, metadata !DIExpression()), !dbg !12718
  call void @llvm.dbg.declare(metadata [10 x i8]* %cap_str, metadata !12719, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb, metadata !12721, metadata !DIExpression()), !dbg !12722
  %0 = load i32, i32* @max_devices, align 4, !dbg !12723
  %sub = sub i32 %0, 1, !dbg !12723
  %call = call i32 @ida_alloc_range(%struct.ida* @mmc_rpmb_ida, i32 0, i32 %sub, i32 3264) #11, !dbg !12723
  store i32 %call, i32* %devidx, align 4, !dbg !12724
  %1 = load i32, i32* %devidx, align 4, !dbg !12725
  %cmp = icmp slt i32 %1, 0, !dbg !12727
  br i1 %cmp, label %if.then, label %if.end, !dbg !12728

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %devidx, align 4, !dbg !12729
  store i32 %2, i32* %retval, align 4, !dbg !12730
  br label %return, !dbg !12730

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 832, i32 3264) #11, !dbg !12731
  %3 = bitcast i8* %call1 to %struct.mmc_rpmb_data*, !dbg !12731
  store %struct.mmc_rpmb_data* %3, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12732
  %4 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12733
  %tobool = icmp ne %struct.mmc_rpmb_data* %4, null, !dbg !12733
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !12735

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %devidx, align 4, !dbg !12736
  call void @ida_free(%struct.ida* @mmc_rpmb_ida, i32 %5) #11, !dbg !12736
  store i32 -12, i32* %retval, align 4, !dbg !12738
  br label %return, !dbg !12738

if.end3:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %rpmb_name, i64 0, i64 0, !dbg !12739
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12740
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 0, !dbg !12741
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !12741
  %index = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 2, !dbg !12742
  %8 = load i32, i32* %index, align 64, !dbg !12742
  %9 = load i8*, i8** %subname.addr, align 8, !dbg !12743
  %tobool4 = icmp ne i8* %9, null, !dbg !12743
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !12743

cond.true:                                        ; preds = %if.end3
  %10 = load i8*, i8** %subname.addr, align 8, !dbg !12744
  br label %cond.end, !dbg !12743

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !12743

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %10, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0), %cond.false ], !dbg !12743
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i32 %8, i8* %cond) #11, !dbg !12745
  %11 = load i32, i32* %devidx, align 4, !dbg !12746
  %12 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12747
  %id = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %12, i32 0, i32 2, !dbg !12748
  store i32 %11, i32* %id, align 8, !dbg !12749
  %13 = load i32, i32* %part_index.addr, align 4, !dbg !12750
  %14 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12751
  %part_index6 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %14, i32 0, i32 3, !dbg !12752
  store i32 %13, i32* %part_index6, align 4, !dbg !12753
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %rpmb_name, i64 0, i64 0, !dbg !12754
  %15 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12755
  %dev = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %15, i32 0, i32 0, !dbg !12756
  %init_name = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3, !dbg !12757
  store i8* %arraydecay7, i8** %init_name, align 8, !dbg !12758
  %16 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12759
  %dev8 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %16, i32 0, i32 0, !dbg !12760
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 5, !dbg !12761
  store %struct.bus_type* @mmc_rpmb_bus_type, %struct.bus_type** %bus, align 8, !dbg !12762
  %17 = load i32, i32* @mmc_rpmb_devt, align 4, !dbg !12763
  %shr = lshr i32 %17, 20, !dbg !12763
  %shl = shl i32 %shr, 20, !dbg !12763
  %18 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12763
  %id9 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %18, i32 0, i32 2, !dbg !12763
  %19 = load i32, i32* %id9, align 8, !dbg !12763
  %or = or i32 %shl, %19, !dbg !12763
  %20 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12764
  %dev10 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %20, i32 0, i32 0, !dbg !12765
  %devt = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 25, !dbg !12766
  store i32 %or, i32* %devt, align 8, !dbg !12767
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12768
  %dev11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 1, !dbg !12769
  %22 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12770
  %dev12 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %22, i32 0, i32 0, !dbg !12771
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 1, !dbg !12772
  store %struct.device* %dev11, %struct.device** %parent, align 8, !dbg !12773
  %23 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12774
  %dev13 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %23, i32 0, i32 0, !dbg !12775
  %release = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 31, !dbg !12776
  store void (%struct.device*)* @mmc_blk_rpmb_device_release, void (%struct.device*)** %release, align 8, !dbg !12777
  %24 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12778
  %dev14 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %24, i32 0, i32 0, !dbg !12779
  call void @device_initialize(%struct.device* %dev14) #11, !dbg !12780
  %25 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12781
  %dev15 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %25, i32 0, i32 0, !dbg !12782
  %26 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12783
  %27 = bitcast %struct.mmc_rpmb_data* %26 to i8*, !dbg !12783
  call void @dev_set_drvdata(%struct.device* %dev15, i8* %27) #11, !dbg !12784
  %28 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !12785
  %29 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12786
  %md16 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %29, i32 0, i32 4, !dbg !12787
  store %struct.mmc_blk_data* %28, %struct.mmc_blk_data** %md16, align 8, !dbg !12788
  %30 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12789
  %chrdev = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %30, i32 0, i32 1, !dbg !12790
  call void @cdev_init(%struct.cdev* %chrdev, %struct.file_operations* @mmc_rpmb_fileops) #11, !dbg !12791
  %31 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12792
  %chrdev17 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %31, i32 0, i32 1, !dbg !12793
  %owner = getelementptr inbounds %struct.cdev, %struct.cdev* %chrdev17, i32 0, i32 1, !dbg !12794
  store %struct.module* null, %struct.module** %owner, align 8, !dbg !12795
  %32 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12796
  %chrdev18 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %32, i32 0, i32 1, !dbg !12797
  %33 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12798
  %dev19 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %33, i32 0, i32 0, !dbg !12799
  %call20 = call i32 @cdev_device_add(%struct.cdev* %chrdev18, %struct.device* %dev19) #11, !dbg !12800
  store i32 %call20, i32* %ret, align 4, !dbg !12801
  %34 = load i32, i32* %ret, align 4, !dbg !12802
  %tobool21 = icmp ne i32 %34, 0, !dbg !12802
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !12804

if.then22:                                        ; preds = %cond.end
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %rpmb_name, i64 0, i64 0, !dbg !12805
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay23) #13, !dbg !12805
  br label %out_put_device, !dbg !12807

if.end25:                                         ; preds = %cond.end
  %35 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12808
  %node = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %35, i32 0, i32 5, !dbg !12809
  %36 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !12810
  %rpmbs = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %36, i32 0, i32 4, !dbg !12811
  call void @list_add(%struct.list_head* %node, %struct.list_head* %rpmbs) #11, !dbg !12812
  %37 = load i64, i64* %size.addr, align 8, !dbg !12813
  %arraydecay26 = getelementptr inbounds [10 x i8], [10 x i8]* %cap_str, i64 0, i64 0, !dbg !12814
  call void @string_get_size(i64 %37, i64 512, i32 1, i8* %arraydecay26, i32 10) #11, !dbg !12815
  %arraydecay27 = getelementptr inbounds [32 x i8], [32 x i8]* %rpmb_name, i64 0, i64 0, !dbg !12816
  %38 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12816
  %dev28 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %38, i32 0, i32 1, !dbg !12816
  %call29 = call i8* @dev_name(%struct.device* %dev28) #11, !dbg !12816
  %39 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12816
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %39, i32 0, i32 19, !dbg !12816
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 1, !dbg !12816
  %arraydecay30 = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !12816
  %arraydecay31 = getelementptr inbounds [10 x i8], [10 x i8]* %cap_str, i64 0, i64 0, !dbg !12816
  %40 = load i32, i32* @mmc_rpmb_devt, align 4, !dbg !12816
  %shr32 = lshr i32 %40, 20, !dbg !12816
  %41 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12816
  %id33 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %41, i32 0, i32 2, !dbg !12816
  %42 = load i32, i32* %id33, align 8, !dbg !12816
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.45, i64 0, i64 0), i8* %arraydecay27, i8* %call29, i8* %arraydecay30, i32 3, i8* %arraydecay31, i32 %shr32, i32 %42) #13, !dbg !12816
  store i32 0, i32* %retval, align 4, !dbg !12817
  br label %return, !dbg !12817

out_put_device:                                   ; preds = %if.then22
  call void @llvm.dbg.label(metadata !12818), !dbg !12819
  %43 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12820
  %dev35 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %43, i32 0, i32 0, !dbg !12821
  call void @put_device(%struct.device* %dev35) #11, !dbg !12822
  %44 = load i32, i32* %ret, align 4, !dbg !12823
  store i32 %44, i32* %retval, align 4, !dbg !12824
  br label %return, !dbg !12824

return:                                           ; preds = %out_put_device, %if.end25, %if.then2, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !12825
  ret i32 %45, !dbg !12825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_blk_alloc_part(%struct.mmc_card* %card, %struct.mmc_blk_data* %md, i32 %part_type, i64 %size, i1 zeroext %default_ro, i8* %subname, i32 %area_type) #0 !dbg !12826 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  %part_type.addr = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %default_ro.addr = alloca i8, align 1
  %subname.addr = alloca i8*, align 8
  %area_type.addr = alloca i32, align 4
  %cap_str = alloca [10 x i8], align 1
  %part_md = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !12831, metadata !DIExpression()), !dbg !12832
  store i32 %part_type, i32* %part_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %part_type.addr, metadata !12833, metadata !DIExpression()), !dbg !12834
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12835, metadata !DIExpression()), !dbg !12836
  %frombool = zext i1 %default_ro to i8
  store i8 %frombool, i8* %default_ro.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %default_ro.addr, metadata !12837, metadata !DIExpression()), !dbg !12838
  store i8* %subname, i8** %subname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %subname.addr, metadata !12839, metadata !DIExpression()), !dbg !12840
  store i32 %area_type, i32* %area_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %area_type.addr, metadata !12841, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.declare(metadata [10 x i8]* %cap_str, metadata !12843, metadata !DIExpression()), !dbg !12844
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %part_md, metadata !12845, metadata !DIExpression()), !dbg !12846
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12847
  %1 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !12848
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %1, i32 0, i32 1, !dbg !12848
  %2 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !12848
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %2, i32 0, i32 7, !dbg !12848
  %__dev = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 5, !dbg !12848
  %3 = load i64, i64* %size.addr, align 8, !dbg !12849
  %4 = load i8, i8* %default_ro.addr, align 1, !dbg !12850
  %tobool = trunc i8 %4 to i1, !dbg !12850
  %5 = load i8*, i8** %subname.addr, align 8, !dbg !12851
  %6 = load i32, i32* %area_type.addr, align 4, !dbg !12852
  %call = call %struct.mmc_blk_data* @mmc_blk_alloc_req(%struct.mmc_card* %0, %struct.device* %__dev, i64 %3, i1 zeroext %tobool, i8* %5, i32 %6) #11, !dbg !12853
  store %struct.mmc_blk_data* %call, %struct.mmc_blk_data** %part_md, align 8, !dbg !12854
  %7 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12855
  %8 = bitcast %struct.mmc_blk_data* %7 to i8*, !dbg !12855
  %call1 = call zeroext i1 @IS_ERR(i8* %8) #11, !dbg !12857
  br i1 %call1, label %if.then, label %if.end, !dbg !12858

if.then:                                          ; preds = %entry
  %9 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12859
  %10 = bitcast %struct.mmc_blk_data* %9 to i8*, !dbg !12859
  %call2 = call i64 @PTR_ERR(i8* %10) #11, !dbg !12860
  %conv = trunc i64 %call2 to i32, !dbg !12860
  store i32 %conv, i32* %retval, align 4, !dbg !12861
  br label %return, !dbg !12861

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %part_type.addr, align 4, !dbg !12862
  %12 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12863
  %part_type3 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %12, i32 0, i32 8, !dbg !12864
  store i32 %11, i32* %part_type3, align 4, !dbg !12865
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12866
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %13, i32 0, i32 3, !dbg !12867
  %14 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md.addr, align 8, !dbg !12868
  %part4 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %14, i32 0, i32 3, !dbg !12869
  call void @list_add(%struct.list_head* %part, %struct.list_head* %part4) #11, !dbg !12870
  %15 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12871
  %disk5 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %15, i32 0, i32 1, !dbg !12872
  %16 = load %struct.gendisk*, %struct.gendisk** %disk5, align 8, !dbg !12872
  %call6 = call i64 @get_capacity(%struct.gendisk* %16) #11, !dbg !12873
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %cap_str, i64 0, i64 0, !dbg !12874
  call void @string_get_size(i64 %call6, i64 512, i32 1, i8* %arraydecay, i32 10) #11, !dbg !12875
  %17 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12876
  %disk7 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %17, i32 0, i32 1, !dbg !12876
  %18 = load %struct.gendisk*, %struct.gendisk** %disk7, align 8, !dbg !12876
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %18, i32 0, i32 3, !dbg !12876
  %arraydecay8 = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !12876
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12876
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 1, !dbg !12876
  %call9 = call i8* @dev_name(%struct.device* %dev) #11, !dbg !12876
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !12876
  %cid = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 19, !dbg !12876
  %prod_name = getelementptr inbounds %struct.mmc_cid, %struct.mmc_cid* %cid, i32 0, i32 1, !dbg !12876
  %arraydecay10 = getelementptr inbounds [8 x i8], [8 x i8]* %prod_name, i64 0, i64 0, !dbg !12876
  %21 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !12876
  %part_type11 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %21, i32 0, i32 8, !dbg !12876
  %22 = load i32, i32* %part_type11, align 4, !dbg !12876
  %arraydecay12 = getelementptr inbounds [10 x i8], [10 x i8]* %cap_str, i64 0, i64 0, !dbg !12876
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i64 0, i64 0), i8* %arraydecay8, i8* %call9, i8* %arraydecay10, i32 %22, i8* %arraydecay12) #13, !dbg !12876
  store i32 0, i32* %retval, align 4, !dbg !12877
  br label %return, !dbg !12877

return:                                           ; preds = %if.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !12878
  ret i32 %23, !dbg !12878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_rpmb_device_release(%struct.device* %dev) #0 !dbg !12879 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %rpmb = alloca %struct.mmc_rpmb_data*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12880, metadata !DIExpression()), !dbg !12881
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb, metadata !12882, metadata !DIExpression()), !dbg !12883
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12884
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !12885
  %1 = bitcast i8* %call to %struct.mmc_rpmb_data*, !dbg !12885
  store %struct.mmc_rpmb_data* %1, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12883
  %2 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12886
  %id = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %2, i32 0, i32 2, !dbg !12886
  %3 = load i32, i32* %id, align 8, !dbg !12886
  call void @ida_free(%struct.ida* @mmc_rpmb_ida, i32 %3) #11, !dbg !12886
  %4 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12887
  %5 = bitcast %struct.mmc_rpmb_data* %4 to i8*, !dbg !12887
  call void @kfree(i8* %5) #11, !dbg !12888
  ret void, !dbg !12889
}

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @cdev_device_add(%struct.cdev*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !12890 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12893, metadata !DIExpression()), !dbg !12894
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !12895, metadata !DIExpression()), !dbg !12896
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12897
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12898
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12899
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !12900
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12900
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !12901
  ret void, !dbg !12902
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i64 @no_llseek(%struct.file*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mmc_rpmb_ioctl(%struct.file* %filp, i32 %cmd, i64 %arg) #0 !dbg !12903 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %rpmb = alloca %struct.mmc_rpmb_data*, align 8
  %ret = alloca i32, align 4
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb, metadata !12910, metadata !DIExpression()), !dbg !12911
  %0 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !12912
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !12913
  %1 = load i8*, i8** %private_data, align 8, !dbg !12913
  %2 = bitcast i8* %1 to %struct.mmc_rpmb_data*, !dbg !12912
  store %struct.mmc_rpmb_data* %2, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12911
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12914, metadata !DIExpression()), !dbg !12915
  %3 = load i32, i32* %cmd.addr, align 4, !dbg !12916
  switch i32 %3, label %sw.default [
    i32 -1068977408, label %sw.bb
    i32 -1073171711, label %sw.bb1
  ], !dbg !12917

sw.bb:                                            ; preds = %entry
  %4 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12918
  %md = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %4, i32 0, i32 4, !dbg !12920
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !12920
  %6 = load i64, i64* %arg.addr, align 8, !dbg !12921
  %7 = inttoptr i64 %6 to %struct.mmc_ioc_cmd*, !dbg !12922
  %8 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12923
  %call = call i32 @mmc_blk_ioctl_cmd(%struct.mmc_blk_data* %5, %struct.mmc_ioc_cmd* %7, %struct.mmc_rpmb_data* %8) #11, !dbg !12924
  store i32 %call, i32* %ret, align 4, !dbg !12925
  br label %sw.epilog, !dbg !12926

sw.bb1:                                           ; preds = %entry
  %9 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12927
  %md2 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %9, i32 0, i32 4, !dbg !12928
  %10 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md2, align 8, !dbg !12928
  %11 = load i64, i64* %arg.addr, align 8, !dbg !12929
  %12 = inttoptr i64 %11 to %struct.mmc_ioc_multi_cmd*, !dbg !12930
  %13 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12931
  %call3 = call i32 @mmc_blk_ioctl_multi_cmd(%struct.mmc_blk_data* %10, %struct.mmc_ioc_multi_cmd* %12, %struct.mmc_rpmb_data* %13) #11, !dbg !12932
  store i32 %call3, i32* %ret, align 4, !dbg !12933
  br label %sw.epilog, !dbg !12934

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %ret, align 4, !dbg !12935
  br label %sw.epilog, !dbg !12936

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %14 = load i32, i32* %ret, align 4, !dbg !12937
  %conv = sext i32 %14 to i64, !dbg !12937
  ret i64 %conv, !dbg !12938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_rpmb_chrdev_open(%struct.inode* %inode, %struct.file* %filp) #0 !dbg !12939 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %rpmb = alloca %struct.mmc_rpmb_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_rpmb_data*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !12940, metadata !DIExpression()), !dbg !12941
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !12942, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb, metadata !12944, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12946, metadata !DIExpression()), !dbg !12948
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !12948
  %1 = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 40, !dbg !12948
  %i_cdev = bitcast %union.anon.64* %1 to %struct.cdev**, !dbg !12948
  %2 = load %struct.cdev*, %struct.cdev** %i_cdev, align 8, !dbg !12948
  %3 = bitcast %struct.cdev* %2 to i8*, !dbg !12948
  store i8* %3, i8** %__mptr, align 8, !dbg !12948
  br label %do.body, !dbg !12948

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12949

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12948
  %add.ptr = getelementptr i8, i8* %4, i64 -696, !dbg !12948
  %5 = bitcast i8* %add.ptr to %struct.mmc_rpmb_data*, !dbg !12948
  store %struct.mmc_rpmb_data* %5, %struct.mmc_rpmb_data** %tmp, align 8, !dbg !12949
  %6 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %tmp, align 8, !dbg !12948
  store %struct.mmc_rpmb_data* %6, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12945
  %7 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12951
  %dev = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %7, i32 0, i32 0, !dbg !12952
  %call = call %struct.device* @get_device(%struct.device* %dev) #11, !dbg !12953
  %8 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12954
  %9 = bitcast %struct.mmc_rpmb_data* %8 to i8*, !dbg !12954
  %10 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !12955
  %private_data = getelementptr inbounds %struct.file, %struct.file* %10, i32 0, i32 15, !dbg !12956
  store i8* %9, i8** %private_data, align 8, !dbg !12957
  %11 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12958
  %md = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %11, i32 0, i32 4, !dbg !12959
  %12 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !12959
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %12, i32 0, i32 1, !dbg !12960
  %13 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !12960
  %call1 = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %13) #11, !dbg !12961
  %14 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !12962
  %15 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !12963
  %call2 = call i32 @nonseekable_open(%struct.inode* %14, %struct.file* %15) #11, !dbg !12964
  ret i32 %call2, !dbg !12965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_rpmb_chrdev_release(%struct.inode* %inode, %struct.file* %filp) #0 !dbg !12966 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %rpmb = alloca %struct.mmc_rpmb_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_rpmb_data*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12973, metadata !DIExpression()), !dbg !12975
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !12975
  %1 = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 40, !dbg !12975
  %i_cdev = bitcast %union.anon.64* %1 to %struct.cdev**, !dbg !12975
  %2 = load %struct.cdev*, %struct.cdev** %i_cdev, align 8, !dbg !12975
  %3 = bitcast %struct.cdev* %2 to i8*, !dbg !12975
  store i8* %3, i8** %__mptr, align 8, !dbg !12975
  br label %do.body, !dbg !12975

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12976

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12975
  %add.ptr = getelementptr i8, i8* %4, i64 -696, !dbg !12975
  %5 = bitcast i8* %add.ptr to %struct.mmc_rpmb_data*, !dbg !12975
  store %struct.mmc_rpmb_data* %5, %struct.mmc_rpmb_data** %tmp, align 8, !dbg !12976
  %6 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %tmp, align 8, !dbg !12975
  store %struct.mmc_rpmb_data* %6, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12972
  %7 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12978
  %md = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %7, i32 0, i32 4, !dbg !12979
  %8 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !12979
  call void @mmc_blk_put(%struct.mmc_blk_data* %8) #11, !dbg !12980
  %9 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb, align 8, !dbg !12981
  %dev = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %9, i32 0, i32 0, !dbg !12982
  call void @put_device(%struct.device* %dev) #11, !dbg !12983
  ret i32 0, !dbg !12984
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @nonseekable_open(%struct.inode*, %struct.file*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12985 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12988, metadata !DIExpression()), !dbg !12989
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12990, metadata !DIExpression()), !dbg !12991
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12992, metadata !DIExpression()), !dbg !12993
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12994
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12996
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12997
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !12998
  br i1 %call, label %if.end, label %if.then, !dbg !12999

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13000

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13001
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13002
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13003
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13004
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13005
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13006
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13007
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13008
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13009
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13010
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13011
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13012
  br label %do.body, !dbg !13013

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13014

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13016

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13014

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13018
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13018
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13018
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13018
  br label %do.end7, !dbg !13018

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13014

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13021 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13024, metadata !DIExpression()), !dbg !13025
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13028, metadata !DIExpression()), !dbg !13029
  ret i1 true, !dbg !13030
}

; Function Attrs: noredzone
declare dso_local void @device_add_disk(%struct.device*, %struct.gendisk*, %struct.attribute_group**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @force_ro_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13031 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %md = alloca %struct.mmc_blk_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.gendisk*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13032, metadata !DIExpression()), !dbg !13033
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13034, metadata !DIExpression()), !dbg !13035
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13036, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13038, metadata !DIExpression()), !dbg !13039
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !13040, metadata !DIExpression()), !dbg !13041
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13042, metadata !DIExpression()), !dbg !13044
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13044
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13044
  store i8* %1, i8** %__mptr, align 8, !dbg !13044
  br label %do.body, !dbg !13044

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13045

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13044
  %add.ptr = getelementptr i8, i8* %2, i64 -104, !dbg !13044
  %3 = bitcast i8* %add.ptr to %struct.gendisk*, !dbg !13044
  store %struct.gendisk* %3, %struct.gendisk** %tmp, align 8, !dbg !13045
  %4 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !13044
  %call = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %4) #11, !dbg !13047
  store %struct.mmc_blk_data* %call, %struct.mmc_blk_data** %md, align 8, !dbg !13041
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13048
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13049, metadata !DIExpression()), !dbg !13051
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13051
  %7 = bitcast %struct.device* %6 to i8*, !dbg !13051
  store i8* %7, i8** %__mptr1, align 8, !dbg !13051
  br label %do.body2, !dbg !13051

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13052

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !13051
  %add.ptr5 = getelementptr i8, i8* %8, i64 -104, !dbg !13051
  %9 = bitcast i8* %add.ptr5 to %struct.gendisk*, !dbg !13051
  store %struct.gendisk* %9, %struct.gendisk** %tmp4, align 8, !dbg !13052
  %10 = load %struct.gendisk*, %struct.gendisk** %tmp4, align 8, !dbg !13051
  %call6 = call i32 @get_disk_ro(%struct.gendisk* %10) #11, !dbg !13054
  %11 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13055
  %read_only = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %11, i32 0, i32 7, !dbg !13056
  %12 = load i32, i32* %read_only, align 8, !dbg !13056
  %xor = xor i32 %call6, %12, !dbg !13057
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i32 %xor) #11, !dbg !13058
  store i32 %call7, i32* %ret, align 4, !dbg !13059
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13060
  call void @mmc_blk_put(%struct.mmc_blk_data* %13) #11, !dbg !13061
  %14 = load i32, i32* %ret, align 4, !dbg !13062
  %conv = sext i32 %14 to i64, !dbg !13062
  ret i64 %conv, !dbg !13063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @force_ro_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !13064 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %end = alloca i8*, align 8
  %md = alloca %struct.mmc_blk_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  %set = alloca i64, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.gendisk*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13067, metadata !DIExpression()), !dbg !13068
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13069, metadata !DIExpression()), !dbg !13070
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13073, metadata !DIExpression()), !dbg !13074
  call void @llvm.dbg.declare(metadata i8** %end, metadata !13075, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !13077, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13079, metadata !DIExpression()), !dbg !13081
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13081
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13081
  store i8* %1, i8** %__mptr, align 8, !dbg !13081
  br label %do.body, !dbg !13081

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13082

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13081
  %add.ptr = getelementptr i8, i8* %2, i64 -104, !dbg !13081
  %3 = bitcast i8* %add.ptr to %struct.gendisk*, !dbg !13081
  store %struct.gendisk* %3, %struct.gendisk** %tmp, align 8, !dbg !13082
  %4 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !13081
  %call = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %4) #11, !dbg !13084
  store %struct.mmc_blk_data* %call, %struct.mmc_blk_data** %md, align 8, !dbg !13078
  call void @llvm.dbg.declare(metadata i64* %set, metadata !13085, metadata !DIExpression()), !dbg !13086
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13087
  %call1 = call i64 @simple_strtoul(i8* %5, i8** %end, i32 0) #11, !dbg !13088
  store i64 %call1, i64* %set, align 8, !dbg !13086
  %6 = load i8*, i8** %end, align 8, !dbg !13089
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !13091
  %cmp = icmp eq i8* %6, %7, !dbg !13092
  br i1 %cmp, label %if.then, label %if.end, !dbg !13093

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %ret, align 4, !dbg !13094
  br label %out, !dbg !13096

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !13097, metadata !DIExpression()), !dbg !13099
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13099
  %9 = bitcast %struct.device* %8 to i8*, !dbg !13099
  store i8* %9, i8** %__mptr2, align 8, !dbg !13099
  br label %do.body3, !dbg !13099

do.body3:                                         ; preds = %if.end
  br label %do.end4, !dbg !13100

do.end4:                                          ; preds = %do.body3
  %10 = load i8*, i8** %__mptr2, align 8, !dbg !13099
  %add.ptr6 = getelementptr i8, i8* %10, i64 -104, !dbg !13099
  %11 = bitcast i8* %add.ptr6 to %struct.gendisk*, !dbg !13099
  store %struct.gendisk* %11, %struct.gendisk** %tmp5, align 8, !dbg !13100
  %12 = load %struct.gendisk*, %struct.gendisk** %tmp5, align 8, !dbg !13099
  %13 = load i64, i64* %set, align 8, !dbg !13102
  %tobool = icmp ne i64 %13, 0, !dbg !13102
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !13103

lor.rhs:                                          ; preds = %do.end4
  %14 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13104
  %read_only = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %14, i32 0, i32 7, !dbg !13105
  %15 = load i32, i32* %read_only, align 8, !dbg !13105
  %tobool7 = icmp ne i32 %15, 0, !dbg !13103
  br label %lor.end, !dbg !13103

lor.end:                                          ; preds = %lor.rhs, %do.end4
  %16 = phi i1 [ true, %do.end4 ], [ %tobool7, %lor.rhs ]
  %lor.ext = zext i1 %16 to i32, !dbg !13103
  call void @set_disk_ro(%struct.gendisk* %12, i32 %lor.ext) #11, !dbg !13106
  %17 = load i64, i64* %count.addr, align 8, !dbg !13107
  %conv = trunc i64 %17 to i32, !dbg !13107
  store i32 %conv, i32* %ret, align 4, !dbg !13108
  br label %out, !dbg !13109

out:                                              ; preds = %lor.end, %if.then
  call void @llvm.dbg.label(metadata !13110), !dbg !13111
  %18 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13112
  call void @mmc_blk_put(%struct.mmc_blk_data* %18) #11, !dbg !13113
  %19 = load i32, i32* %ret, align 4, !dbg !13114
  %conv8 = sext i32 %19 to i64, !dbg !13114
  ret i64 %conv8, !dbg !13115
}

; Function Attrs: noredzone
declare dso_local i32 @device_create_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @power_ro_lock_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13116 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %md = alloca %struct.mmc_blk_data*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %locked = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13117, metadata !DIExpression()), !dbg !13118
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13119, metadata !DIExpression()), !dbg !13120
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13123, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !13125, metadata !DIExpression()), !dbg !13126
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13127, metadata !DIExpression()), !dbg !13129
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13129
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13129
  store i8* %1, i8** %__mptr, align 8, !dbg !13129
  br label %do.body, !dbg !13129

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13130

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13129
  %add.ptr = getelementptr i8, i8* %2, i64 -104, !dbg !13129
  %3 = bitcast i8* %add.ptr to %struct.gendisk*, !dbg !13129
  store %struct.gendisk* %3, %struct.gendisk** %tmp, align 8, !dbg !13130
  %4 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !13129
  %call = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %4) #11, !dbg !13132
  store %struct.mmc_blk_data* %call, %struct.mmc_blk_data** %md, align 8, !dbg !13126
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !13133, metadata !DIExpression()), !dbg !13134
  %5 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13135
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %5, i32 0, i32 2, !dbg !13136
  %card1 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %queue, i32 0, i32 0, !dbg !13137
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !13137
  store %struct.mmc_card* %6, %struct.mmc_card** %card, align 8, !dbg !13134
  call void @llvm.dbg.declare(metadata i32* %locked, metadata !13138, metadata !DIExpression()), !dbg !13139
  store i32 0, i32* %locked, align 4, !dbg !13139
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !13140
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 21, !dbg !13142
  %boot_ro_lock = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 37, !dbg !13143
  %8 = load i32, i32* %boot_ro_lock, align 4, !dbg !13143
  %and = and i32 %8, 4, !dbg !13144
  %tobool = icmp ne i32 %and, 0, !dbg !13144
  br i1 %tobool, label %if.then, label %if.else, !dbg !13145

if.then:                                          ; preds = %do.end
  store i32 2, i32* %locked, align 4, !dbg !13146
  br label %if.end7, !dbg !13147

if.else:                                          ; preds = %do.end
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !13148
  %ext_csd2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 21, !dbg !13150
  %boot_ro_lock3 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd2, i32 0, i32 37, !dbg !13151
  %10 = load i32, i32* %boot_ro_lock3, align 4, !dbg !13151
  %and4 = and i32 %10, 1, !dbg !13152
  %tobool5 = icmp ne i32 %and4, 0, !dbg !13152
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !13153

if.then6:                                         ; preds = %if.else
  store i32 1, i32* %locked, align 4, !dbg !13154
  br label %if.end, !dbg !13155

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !13156
  %12 = load i32, i32* %locked, align 4, !dbg !13157
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %11, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0), i32 %12) #11, !dbg !13158
  store i32 %call8, i32* %ret, align 4, !dbg !13159
  %13 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13160
  call void @mmc_blk_put(%struct.mmc_blk_data* %13) #11, !dbg !13161
  %14 = load i32, i32* %ret, align 4, !dbg !13162
  %conv = sext i32 %14 to i64, !dbg !13162
  ret i64 %conv, !dbg !13163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @power_ro_lock_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !13164 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  %md = alloca %struct.mmc_blk_data*, align 8
  %part_md = alloca %struct.mmc_blk_data*, align 8
  %mq = alloca %struct.mmc_queue*, align 8
  %req = alloca %struct.request*, align 8
  %set = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.gendisk*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp20 = alloca %struct.mmc_blk_data*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp38 = alloca %struct.mmc_blk_data*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13173, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md, metadata !13175, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %part_md, metadata !13177, metadata !DIExpression()), !dbg !13178
  call void @llvm.dbg.declare(metadata %struct.mmc_queue** %mq, metadata !13179, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.declare(metadata %struct.request** %req, metadata !13181, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.declare(metadata i64* %set, metadata !13183, metadata !DIExpression()), !dbg !13184
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13185
  %call = call i32 @kstrtoul(i8* %0, i32 0, i64* %set) #11, !dbg !13187
  %tobool = icmp ne i32 %call, 0, !dbg !13187
  br i1 %tobool, label %if.then, label %if.end, !dbg !13188

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !13189
  br label %return, !dbg !13189

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %set, align 8, !dbg !13190
  %cmp = icmp ne i64 %1, 1, !dbg !13192
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !13193

if.then1:                                         ; preds = %if.end
  %2 = load i64, i64* %count.addr, align 8, !dbg !13194
  store i64 %2, i64* %retval, align 8, !dbg !13195
  br label %return, !dbg !13195

if.end2:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13196, metadata !DIExpression()), !dbg !13198
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13198
  %4 = bitcast %struct.device* %3 to i8*, !dbg !13198
  store i8* %4, i8** %__mptr, align 8, !dbg !13198
  br label %do.body, !dbg !13198

do.body:                                          ; preds = %if.end2
  br label %do.end, !dbg !13199

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !13198
  %add.ptr = getelementptr i8, i8* %5, i64 -104, !dbg !13198
  %6 = bitcast i8* %add.ptr to %struct.gendisk*, !dbg !13198
  store %struct.gendisk* %6, %struct.gendisk** %tmp, align 8, !dbg !13199
  %7 = load %struct.gendisk*, %struct.gendisk** %tmp, align 8, !dbg !13198
  %call3 = call %struct.mmc_blk_data* @mmc_blk_get(%struct.gendisk* %7) #11, !dbg !13201
  store %struct.mmc_blk_data* %call3, %struct.mmc_blk_data** %md, align 8, !dbg !13202
  %8 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13203
  %queue = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %8, i32 0, i32 2, !dbg !13204
  store %struct.mmc_queue* %queue, %struct.mmc_queue** %mq, align 8, !dbg !13205
  %9 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !13206
  %queue4 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %9, i32 0, i32 4, !dbg !13207
  %10 = load %struct.request_queue*, %struct.request_queue** %queue4, align 8, !dbg !13207
  %call5 = call %struct.request* @blk_get_request(%struct.request_queue* %10, i32 35, i32 0) #11, !dbg !13208
  store %struct.request* %call5, %struct.request** %req, align 8, !dbg !13209
  %11 = load %struct.request*, %struct.request** %req, align 8, !dbg !13210
  %12 = bitcast %struct.request* %11 to i8*, !dbg !13210
  %call6 = call zeroext i1 @IS_ERR(i8* %12) #11, !dbg !13212
  br i1 %call6, label %if.then7, label %if.end9, !dbg !13213

if.then7:                                         ; preds = %do.end
  %13 = load %struct.request*, %struct.request** %req, align 8, !dbg !13214
  %14 = bitcast %struct.request* %13 to i8*, !dbg !13214
  %call8 = call i64 @PTR_ERR(i8* %14) #11, !dbg !13216
  store i64 %call8, i64* %count.addr, align 8, !dbg !13217
  br label %out_put, !dbg !13218

if.end9:                                          ; preds = %do.end
  %15 = load %struct.request*, %struct.request** %req, align 8, !dbg !13219
  %call10 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %15) #11, !dbg !13220
  %drv_op = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call10, i32 0, i32 2, !dbg !13221
  store i32 2, i32* %drv_op, align 8, !dbg !13222
  %16 = load %struct.mmc_queue*, %struct.mmc_queue** %mq, align 8, !dbg !13223
  %queue11 = getelementptr inbounds %struct.mmc_queue, %struct.mmc_queue* %16, i32 0, i32 4, !dbg !13224
  %17 = load %struct.request_queue*, %struct.request_queue** %queue11, align 8, !dbg !13224
  %18 = load %struct.request*, %struct.request** %req, align 8, !dbg !13225
  call void @blk_execute_rq(%struct.request_queue* %17, %struct.gendisk* null, %struct.request* %18, i32 0) #11, !dbg !13226
  %19 = load %struct.request*, %struct.request** %req, align 8, !dbg !13227
  %call12 = call %struct.mmc_queue_req* @req_to_mmc_queue_req(%struct.request* %19) #11, !dbg !13228
  %drv_op_result = getelementptr inbounds %struct.mmc_queue_req, %struct.mmc_queue_req* %call12, i32 0, i32 3, !dbg !13229
  %20 = load i32, i32* %drv_op_result, align 4, !dbg !13229
  store i32 %20, i32* %ret, align 4, !dbg !13230
  %21 = load %struct.request*, %struct.request** %req, align 8, !dbg !13231
  call void @blk_put_request(%struct.request* %21) #11, !dbg !13232
  %22 = load i32, i32* %ret, align 4, !dbg !13233
  %tobool13 = icmp ne i32 %22, 0, !dbg !13233
  br i1 %tobool13, label %if.end40, label %if.then14, !dbg !13235

if.then14:                                        ; preds = %if.end9
  %23 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13236
  %disk = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %23, i32 0, i32 1, !dbg !13236
  %24 = load %struct.gendisk*, %struct.gendisk** %disk, align 8, !dbg !13236
  %disk_name = getelementptr inbounds %struct.gendisk, %struct.gendisk* %24, i32 0, i32 3, !dbg !13236
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name, i64 0, i64 0, !dbg !13236
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay) #13, !dbg !13236
  %25 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13238
  %disk16 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %25, i32 0, i32 1, !dbg !13239
  %26 = load %struct.gendisk*, %struct.gendisk** %disk16, align 8, !dbg !13239
  call void @set_disk_ro(%struct.gendisk* %26, i32 1) #11, !dbg !13240
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !13241, metadata !DIExpression()), !dbg !13244
  %27 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13244
  %part = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %27, i32 0, i32 3, !dbg !13244
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %part, i32 0, i32 0, !dbg !13244
  %28 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13244
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !13244
  store i8* %29, i8** %__mptr17, align 8, !dbg !13244
  br label %do.body18, !dbg !13244

do.body18:                                        ; preds = %if.then14
  br label %do.end19, !dbg !13245

do.end19:                                         ; preds = %do.body18
  %30 = load i8*, i8** %__mptr17, align 8, !dbg !13244
  %add.ptr21 = getelementptr i8, i8* %30, i64 -480, !dbg !13244
  %31 = bitcast i8* %add.ptr21 to %struct.mmc_blk_data*, !dbg !13244
  store %struct.mmc_blk_data* %31, %struct.mmc_blk_data** %tmp20, align 8, !dbg !13245
  %32 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp20, align 8, !dbg !13244
  store %struct.mmc_blk_data* %32, %struct.mmc_blk_data** %part_md, align 8, !dbg !13247
  br label %for.cond, !dbg !13247

for.cond:                                         ; preds = %do.end37, %do.end19
  %33 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !13248
  %part22 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %33, i32 0, i32 3, !dbg !13248
  %34 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13248
  %part23 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %34, i32 0, i32 3, !dbg !13248
  %cmp24 = icmp eq %struct.list_head* %part22, %part23, !dbg !13248
  %lnot = xor i1 %cmp24, true, !dbg !13248
  br i1 %lnot, label %for.body, label %for.end, !dbg !13247

for.body:                                         ; preds = %for.cond
  %35 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !13250
  %area_type = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %35, i32 0, i32 13, !dbg !13252
  %36 = load i32, i32* %area_type, align 8, !dbg !13252
  %cmp25 = icmp eq i32 %36, 2, !dbg !13253
  br i1 %cmp25, label %if.then26, label %if.end32, !dbg !13254

if.then26:                                        ; preds = %for.body
  %37 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !13255
  %disk27 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %37, i32 0, i32 1, !dbg !13255
  %38 = load %struct.gendisk*, %struct.gendisk** %disk27, align 8, !dbg !13255
  %disk_name28 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %38, i32 0, i32 3, !dbg !13255
  %arraydecay29 = getelementptr inbounds [32 x i8], [32 x i8]* %disk_name28, i64 0, i64 0, !dbg !13255
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay29) #13, !dbg !13255
  %39 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !13257
  %disk31 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %39, i32 0, i32 1, !dbg !13258
  %40 = load %struct.gendisk*, %struct.gendisk** %disk31, align 8, !dbg !13258
  call void @set_disk_ro(%struct.gendisk* %40, i32 1) #11, !dbg !13259
  br label %if.end32, !dbg !13260

if.end32:                                         ; preds = %if.then26, %for.body
  br label %for.inc, !dbg !13261

for.inc:                                          ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !13262, metadata !DIExpression()), !dbg !13264
  %41 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %part_md, align 8, !dbg !13264
  %part34 = getelementptr inbounds %struct.mmc_blk_data, %struct.mmc_blk_data* %41, i32 0, i32 3, !dbg !13264
  %next35 = getelementptr inbounds %struct.list_head, %struct.list_head* %part34, i32 0, i32 0, !dbg !13264
  %42 = load %struct.list_head*, %struct.list_head** %next35, align 8, !dbg !13264
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !13264
  store i8* %43, i8** %__mptr33, align 8, !dbg !13264
  br label %do.body36, !dbg !13264

do.body36:                                        ; preds = %for.inc
  br label %do.end37, !dbg !13265

do.end37:                                         ; preds = %do.body36
  %44 = load i8*, i8** %__mptr33, align 8, !dbg !13264
  %add.ptr39 = getelementptr i8, i8* %44, i64 -480, !dbg !13264
  %45 = bitcast i8* %add.ptr39 to %struct.mmc_blk_data*, !dbg !13264
  store %struct.mmc_blk_data* %45, %struct.mmc_blk_data** %tmp38, align 8, !dbg !13265
  %46 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %tmp38, align 8, !dbg !13264
  store %struct.mmc_blk_data* %46, %struct.mmc_blk_data** %part_md, align 8, !dbg !13248
  br label %for.cond, !dbg !13248, !llvm.loop !13267

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !13269

if.end40:                                         ; preds = %for.end, %if.end9
  br label %out_put, !dbg !13233

out_put:                                          ; preds = %if.end40, %if.then7
  call void @llvm.dbg.label(metadata !13270), !dbg !13271
  %47 = load %struct.mmc_blk_data*, %struct.mmc_blk_data** %md, align 8, !dbg !13272
  call void @mmc_blk_put(%struct.mmc_blk_data* %47) #11, !dbg !13273
  %48 = load i64, i64* %count.addr, align 8, !dbg !13274
  store i64 %48, i64* %retval, align 8, !dbg !13275
  br label %return, !dbg !13275

return:                                           ; preds = %out_put, %if.then1, %if.then
  %49 = load i64, i64* %retval, align 8, !dbg !13276
  ret i64 %49, !dbg !13276
}

; Function Attrs: noredzone
declare dso_local void @device_remove_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: noredzone
declare dso_local void @del_gendisk(%struct.gendisk*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_disk_ro(%struct.gendisk* %disk) #0 !dbg !13277 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !13278, metadata !DIExpression()), !dbg !13279
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !13280
  %part0 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %0, i32 0, i32 7, !dbg !13281
  %policy = getelementptr inbounds %struct.hd_struct, %struct.hd_struct* %part0, i32 0, i32 7, !dbg !13282
  %1 = load i32, i32* %policy, align 8, !dbg !13282
  ret i32 %1, !dbg !13283
}

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtoul(i8* %s, i32 %base, i64* %res) #0 !dbg !13284 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !13289, metadata !DIExpression()), !dbg !13290
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !13291, metadata !DIExpression()), !dbg !13292
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !13293, metadata !DIExpression()), !dbg !13294
  %0 = load i8*, i8** %s.addr, align 8, !dbg !13295
  %1 = load i32, i32* %base.addr, align 4, !dbg !13297
  %2 = load i64*, i64** %res.addr, align 8, !dbg !13298
  %call = call i32 @kstrtoull(i8* %0, i32 %1, i64* %2) #11, !dbg !13299
  ret i32 %call, !dbg !13300
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtoull(i8*, i32, i64*) #2

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_use_autosuspend(%struct.device*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_set_status(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !13301 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13302, metadata !DIExpression()), !dbg !13303
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13304
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !13305
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13306
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13307
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !13308
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13309
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !13310
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !13311
  ret void, !dbg !13312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_remove_rpmb_part(%struct.mmc_rpmb_data* %rpmb) #0 !dbg !13313 {
entry:
  %rpmb.addr = alloca %struct.mmc_rpmb_data*, align 8
  store %struct.mmc_rpmb_data* %rpmb, %struct.mmc_rpmb_data** %rpmb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_rpmb_data** %rpmb.addr, metadata !13316, metadata !DIExpression()), !dbg !13317
  %0 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !13318
  %chrdev = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %0, i32 0, i32 1, !dbg !13319
  %1 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !13320
  %dev = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %1, i32 0, i32 0, !dbg !13321
  call void @cdev_device_del(%struct.cdev* %chrdev, %struct.device* %dev) #11, !dbg !13322
  %2 = load %struct.mmc_rpmb_data*, %struct.mmc_rpmb_data** %rpmb.addr, align 8, !dbg !13323
  %dev1 = getelementptr inbounds %struct.mmc_rpmb_data, %struct.mmc_rpmb_data* %2, i32 0, i32 0, !dbg !13324
  call void @put_device(%struct.device* %dev1) #11, !dbg !13325
  ret void, !dbg !13326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !13327 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13328, metadata !DIExpression()), !dbg !13329
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13330
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !13332
  br i1 %call, label %if.end, label %if.then, !dbg !13333

if.then:                                          ; preds = %entry
  br label %return, !dbg !13334

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13335
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13336
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13336
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13337
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13338
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13338
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !13339
  br label %return, !dbg !13340

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !13341 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13344, metadata !DIExpression()), !dbg !13345
  ret i1 true, !dbg !13346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13347 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13348, metadata !DIExpression()), !dbg !13349
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13350, metadata !DIExpression()), !dbg !13351
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13352
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13353
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13354
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !13355
  br label %do.body, !dbg !13356

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13357

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !13359

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !13357

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13361
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13361
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13361
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !13361
  br label %do.end5, !dbg !13361

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !13357

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !13363
}

; Function Attrs: noredzone
declare dso_local void @cdev_device_del(%struct.cdev*, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_blk_remove_debugfs(%struct.mmc_card* %card, %struct.mmc_blk_data* %md) #0 !dbg !13364 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %md.addr = alloca %struct.mmc_blk_data*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !13365, metadata !DIExpression()), !dbg !13366
  store %struct.mmc_blk_data* %md, %struct.mmc_blk_data** %md.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_blk_data** %md.addr, metadata !13367, metadata !DIExpression()), !dbg !13368
  ret void, !dbg !13369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !13370 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13371, metadata !DIExpression()), !dbg !13372
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13373
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #11, !dbg !13374
  ret i32 %call, !dbg !13375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_claim_host(%struct.mmc_host* %host) #0 !dbg !13376 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !13377, metadata !DIExpression()), !dbg !13378
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !13379
  %call = call i32 @__mmc_claim_host(%struct.mmc_host* %0, %struct.mmc_ctx* null, %struct.atomic_t* null) #11, !dbg !13380
  ret void, !dbg !13381
}

; Function Attrs: noredzone
declare dso_local void @mmc_release_host(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #0 !dbg !13382 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13383, metadata !DIExpression()), !dbg !13384
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13385
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #11, !dbg !13386
  ret void, !dbg !13387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #0 !dbg !13388 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !13389, metadata !DIExpression()), !dbg !13395
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !13409, metadata !DIExpression()), !dbg !13410
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !13411, metadata !DIExpression()), !dbg !13412
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !13413, metadata !DIExpression()), !dbg !13415
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !13416, metadata !DIExpression()), !dbg !13415
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !13417, metadata !DIExpression()), !dbg !13415
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !13418, metadata !DIExpression()), !dbg !13415
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !13419, metadata !DIExpression()), !dbg !13415
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !13420, metadata !DIExpression()), !dbg !13426
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !13428, metadata !DIExpression()), !dbg !13429
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !13430, metadata !DIExpression()), !dbg !13431
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !13432, metadata !DIExpression()), !dbg !13433
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !13434, metadata !DIExpression()), !dbg !13435
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13436, metadata !DIExpression()), !dbg !13437
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !13438, metadata !DIExpression()), !dbg !13439
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !13440, metadata !DIExpression()), !dbg !13441
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13442, metadata !DIExpression()), !dbg !13450
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13452, metadata !DIExpression()), !dbg !13453
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13454, metadata !DIExpression()), !dbg !13455
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !13456, metadata !DIExpression()), !dbg !13457
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !13458, metadata !DIExpression()), !dbg !13459
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13460, metadata !DIExpression()), !dbg !13461
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13462
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !13463
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !13464
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13465
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !13465
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13466
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !13467
  %conv.i.i = trunc i64 %4 to i32, !dbg !13467
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #12, !dbg !13468
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13469
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !13469
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !13469
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13470
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !13471
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !13472
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13473
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !13474
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !13475
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !13476
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !13477
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !13477
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !13477
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !13435
  br label %do.body.i.i.i, !dbg !13478

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !13479
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !13479
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !13479
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !13479
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !13479
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !13479
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !13482

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !13483

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !13484
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !13485
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !13486
  %add.i.i.i = add i32 %19, %20, !dbg !13487
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !13415
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !13415
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !13415
  %23 = load i32, i32* %22, align 4, !dbg !13415
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !13415
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !13415
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !13415
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !13415
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !13415
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !13415
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !13415
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !13415
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !13415
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #5, !dbg !13415, !srcloc !13488
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !13415
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !13415
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !13415
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !13415
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !13489
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !13489
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !13489
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !13489
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !13489
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !13489
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !13415

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !13489
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !13489
  store i32 %31, i32* %32, align 4, !dbg !13489
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !13489

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !13415
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !13415
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !13415
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !13415
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !13415
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !13489
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !13415
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !13491
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !13492
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !13493, !llvm.loop !13494

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !13496
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !13497
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !13498
  ret void, !dbg !13499
}

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @__mmc_claim_host(%struct.mmc_host*, %struct.mmc_ctx*, %struct.atomic_t*) #2

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !13500 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13504, metadata !DIExpression()), !dbg !13505
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13506, metadata !DIExpression()), !dbg !13507
  ret i1 true, !dbg !13508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !13509 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13513, metadata !DIExpression()), !dbg !13514
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13515, metadata !DIExpression()), !dbg !13516
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13517, metadata !DIExpression()), !dbg !13518
  ret void, !dbg !13519
}

; Function Attrs: noredzone
declare dso_local i32 @bus_register(%struct.bus_type*) #2

; Function Attrs: noredzone
declare dso_local i32 @alloc_chrdev_region(i32*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @register_blkdev(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_register_driver(%struct.mmc_driver*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly }
attributes #5 = { nounwind }
attributes #6 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind willreturn }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5671}
!llvm.module.flags = !{!5672, !5673, !5674, !5675}
!llvm.ident = !{!5676}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias291", scope: !2, file: !3, line: 60, type: !5668, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !256, globals: !5516, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/mmc/core/block.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !42, !48, !55, !59, !66, !71, !78, !84, !93, !101, !107, !113, !120, !127, !135, !140, !146, !152, !159, !182, !215, !231, !236}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !31, line: 49, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41}
!33 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !43, line: 118, baseType: !7, size: 32, elements: !44)
!43 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!44 = !{!45, !46, !47}
!45 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!46 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !49, line: 19, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53, !54}
!51 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_eh_timer_return", file: !43, line: 293, baseType: !7, size: 32, elements: !56)
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "BLK_EH_DONE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "BLK_EH_RESET_TIMER", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !60, line: 502, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !43, line: 315, baseType: !7, size: 32, elements: !67)
!67 = !{!68, !69, !70}
!68 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!69 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!70 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !72, line: 59, baseType: !7, size: 32, elements: !73)
!72 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !79, line: 54, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!80 = !{!81, !82, !83}
!81 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !85, line: 296, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89, !90, !91, !92}
!87 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !94, line: 9, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100}
!96 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !102, line: 26, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105, !106}
!104 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !108, line: 44, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !114, line: 343, baseType: !7, size: 32, elements: !115)
!114 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!115 = !{!116, !117, !118, !119}
!116 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !60, line: 524, baseType: !7, size: 32, elements: !121)
!121 = !{!122, !123, !124, !125, !126}
!122 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mmc_drv_op", file: !128, line: 56, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "drivers/mmc/core/queue.h", directory: "/home/lizy2001/genbc/linux")
!129 = !{!130, !131, !132, !133, !134}
!130 = !DIEnumerator(name: "MMC_DRV_OP_IOCTL", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MMC_DRV_OP_IOCTL_RPMB", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "MMC_DRV_OP_BOOT_WP", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "MMC_DRV_OP_GET_CARD_STATUS", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "MMC_DRV_OP_GET_EXT_CSD", value: 4, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !136, line: 10, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139}
!138 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mmc_issued", file: !128, line: 11, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144, !145}
!142 = !DIEnumerator(name: "MMC_REQ_STARTED", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "MMC_REQ_BUSY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "MMC_REQ_FAILED_TO_START", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "MMC_REQ_FINISHED", value: 3, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mmc_issue_type", file: !128, line: 18, baseType: !7, size: 32, elements: !147)
!147 = !{!148, !149, !150, !151}
!148 = !DIEnumerator(name: "MMC_ISSUE_SYNC", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MMC_ISSUE_DCMD", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "MMC_ISSUE_ASYNC", value: 2, isUnsigned: true)
!151 = !DIEnumerator(name: "MMC_ISSUE_MAX", value: 3, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !153, line: 305, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!154 = !{!155, !156, !157, !158}
!155 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "req_flag_bits", file: !160, line: 374, baseType: !7, size: 32, elements: !161)
!160 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!161 = !{!162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!162 = !DIEnumerator(name: "__REQ_FAILFAST_DEV", value: 8, isUnsigned: true)
!163 = !DIEnumerator(name: "__REQ_FAILFAST_TRANSPORT", value: 9, isUnsigned: true)
!164 = !DIEnumerator(name: "__REQ_FAILFAST_DRIVER", value: 10, isUnsigned: true)
!165 = !DIEnumerator(name: "__REQ_SYNC", value: 11, isUnsigned: true)
!166 = !DIEnumerator(name: "__REQ_META", value: 12, isUnsigned: true)
!167 = !DIEnumerator(name: "__REQ_PRIO", value: 13, isUnsigned: true)
!168 = !DIEnumerator(name: "__REQ_NOMERGE", value: 14, isUnsigned: true)
!169 = !DIEnumerator(name: "__REQ_IDLE", value: 15, isUnsigned: true)
!170 = !DIEnumerator(name: "__REQ_INTEGRITY", value: 16, isUnsigned: true)
!171 = !DIEnumerator(name: "__REQ_FUA", value: 17, isUnsigned: true)
!172 = !DIEnumerator(name: "__REQ_PREFLUSH", value: 18, isUnsigned: true)
!173 = !DIEnumerator(name: "__REQ_RAHEAD", value: 19, isUnsigned: true)
!174 = !DIEnumerator(name: "__REQ_BACKGROUND", value: 20, isUnsigned: true)
!175 = !DIEnumerator(name: "__REQ_NOWAIT", value: 21, isUnsigned: true)
!176 = !DIEnumerator(name: "__REQ_CGROUP_PUNT", value: 22, isUnsigned: true)
!177 = !DIEnumerator(name: "__REQ_NOUNMAP", value: 23, isUnsigned: true)
!178 = !DIEnumerator(name: "__REQ_HIPRI", value: 24, isUnsigned: true)
!179 = !DIEnumerator(name: "__REQ_DRV", value: 25, isUnsigned: true)
!180 = !DIEnumerator(name: "__REQ_SWAP", value: 26, isUnsigned: true)
!181 = !DIEnumerator(name: "__REQ_NR_BITS", value: 27, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 30, baseType: !184, size: 64, elements: !185)
!183 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!184 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!185 = !{!186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214}
!186 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!187 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!188 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!189 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!190 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!191 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!192 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!193 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!194 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!195 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!196 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!197 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!198 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!199 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!200 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!201 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!202 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!203 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!204 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!205 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!206 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!207 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!208 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!209 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!210 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!211 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!212 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!213 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!214 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!215 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !183, line: 308, baseType: !7, size: 32, elements: !216)
!216 = !{!217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230}
!217 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!218 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!219 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!221 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!222 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!223 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!224 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!225 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!226 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!227 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!228 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!229 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!230 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "string_size_units", file: !232, line: 13, baseType: !7, size: 32, elements: !233)
!232 = !DIFile(filename: "./include/linux/string_helpers.h", directory: "/home/lizy2001/genbc/linux")
!233 = !{!234, !235}
!234 = !DIEnumerator(name: "STRING_UNITS_10", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "STRING_UNITS_2", value: 1, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "req_opf", file: !160, line: 336, baseType: !7, size: 32, elements: !237)
!237 = !{!238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255}
!238 = !DIEnumerator(name: "REQ_OP_READ", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "REQ_OP_WRITE", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "REQ_OP_FLUSH", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "REQ_OP_DISCARD", value: 3, isUnsigned: true)
!242 = !DIEnumerator(name: "REQ_OP_SECURE_ERASE", value: 5, isUnsigned: true)
!243 = !DIEnumerator(name: "REQ_OP_WRITE_SAME", value: 7, isUnsigned: true)
!244 = !DIEnumerator(name: "REQ_OP_WRITE_ZEROES", value: 9, isUnsigned: true)
!245 = !DIEnumerator(name: "REQ_OP_ZONE_OPEN", value: 10, isUnsigned: true)
!246 = !DIEnumerator(name: "REQ_OP_ZONE_CLOSE", value: 11, isUnsigned: true)
!247 = !DIEnumerator(name: "REQ_OP_ZONE_FINISH", value: 12, isUnsigned: true)
!248 = !DIEnumerator(name: "REQ_OP_ZONE_APPEND", value: 13, isUnsigned: true)
!249 = !DIEnumerator(name: "REQ_OP_ZONE_RESET", value: 15, isUnsigned: true)
!250 = !DIEnumerator(name: "REQ_OP_ZONE_RESET_ALL", value: 17, isUnsigned: true)
!251 = !DIEnumerator(name: "REQ_OP_SCSI_IN", value: 32, isUnsigned: true)
!252 = !DIEnumerator(name: "REQ_OP_SCSI_OUT", value: 33, isUnsigned: true)
!253 = !DIEnumerator(name: "REQ_OP_DRV_IN", value: 34, isUnsigned: true)
!254 = !DIEnumerator(name: "REQ_OP_DRV_OUT", value: 35, isUnsigned: true)
!255 = !DIEnumerator(name: "REQ_OP_LAST", value: 36, isUnsigned: true)
!256 = !{!257, !258, !2547, !389, !2479, !184, !324, !861, !482, !5456, !948, !5457, !262, !5408, !486, !381, !977, !5474, !2303, !5476, !5495, !7, !698, !5501, !2099, !5510, !5511, !773, !5514}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_queue", file: !128, line: 74, size: 3712, elements: !260)
!260 = !{!261, !5405, !5406, !5407, !5439, !5440, !5441, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !259, file: !128, line: 75, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_card", file: !264, line: 244, size: 12672, elements: !265)
!264 = !DIFile(filename: "./include/linux/mmc/card.h", directory: "/home/lizy2001/genbc/linux")
!265 = !{!266, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5218, !5220, !5232, !5252, !5333, !5342, !5348, !5356, !5357, !5358, !5369, !5376, !5380, !5381, !5382, !5383, !5384, !5385, !5388, !5389, !5390, !5391, !5392, !5402, !5403, !5404}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !263, file: !264, line: 245, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host", file: !269, line: 275, size: 10752, elements: !270)
!269 = !DIFile(filename: "./include/linux/mmc/host.h", directory: "/home/lizy2001/genbc/linux")
!270 = !{!271, !4922, !4923, !4924, !5058, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5124, !5125, !5126, !5127, !5128, !5134, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5161, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5194, !5195, !5196, !5197, !5198, !5199}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !268, file: !269, line: 276, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !114, line: 461, size: 5568, elements: !274)
!274 = !{!275, !4487, !4488, !4491, !4492, !4542, !4633, !4634, !4635, !4636, !4637, !4646, !4740, !4753, !4757, !4758, !4762, !4764, !4765, !4766, !4770, !4776, !4777, !4780, !4784, !4874, !4875, !4876, !4877, !4878, !4910, !4911, !4912, !4915, !4918, !4919, !4920, !4921}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !273, file: !114, line: 462, baseType: !276, size: 512)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !277, line: 64, size: 512, elements: !278)
!277 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !283, !290, !292, !353, !4354, !4481, !4482, !4483, !4484, !4485, !4486}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 65, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !282)
!282 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !276, file: !277, line: 66, baseType: !284, size: 128, offset: 64)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !285, line: 178, size: 128, elements: !286)
!285 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!286 = !{!287, !289}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !285, line: 179, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !285, line: 179, baseType: !288, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !276, file: !277, line: 67, baseType: !291, size: 64, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !276, file: !277, line: 68, baseType: !293, size: 64, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !277, line: 192, size: 704, elements: !295)
!295 = !{!296, !297, !313, !314}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !294, file: !277, line: 193, baseType: !284, size: 128)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !294, file: !277, line: 194, baseType: !298, offset: 128)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !299, line: 83, baseType: !300)
!299 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !299, line: 71, elements: !301)
!301 = !{!302}
!302 = !DIDerivedType(tag: DW_TAG_member, scope: !300, file: !299, line: 72, baseType: !303)
!303 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !300, file: !299, line: 72, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !303, file: !299, line: 73, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !299, line: 20, elements: !307)
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !306, file: !299, line: 21, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !310, line: 25, baseType: !311)
!310 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 25, elements: !312)
!312 = !{}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !294, file: !277, line: 195, baseType: !276, size: 512, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !294, file: !277, line: 196, baseType: !315, size: 64, offset: 640)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !277, line: 156, size: 192, elements: !318)
!318 = !{!319, !325, !330}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !317, file: !277, line: 157, baseType: !320, size: 64)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DISubroutineType(types: !323)
!323 = !{!324, !293, !291}
!324 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !317, file: !277, line: 158, baseType: !326, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !327)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!280, !293, !291}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !317, file: !277, line: 159, baseType: !331, size: 64, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!333 = !DISubroutineType(types: !334)
!334 = !{!324, !293, !291, !335}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !277, line: 148, size: 20736, elements: !337)
!337 = !{!338, !343, !347, !348, !352}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !336, file: !277, line: 149, baseType: !339, size: 192)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 192, elements: !341)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!341 = !{!342}
!342 = !DISubrange(count: 3)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !336, file: !277, line: 150, baseType: !344, size: 4096, offset: 192)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 4096, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !336, file: !277, line: 151, baseType: !324, size: 32, offset: 4288)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !336, file: !277, line: 152, baseType: !349, size: 16384, offset: 4320)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 16384, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 2048)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !336, file: !277, line: 153, baseType: !324, size: 32, offset: 20704)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !276, file: !277, line: 69, baseType: !354, size: 64, offset: 320)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !277, line: 138, size: 448, elements: !356)
!356 = !{!357, !361, !390, !392, !4316, !4344, !4348}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !355, file: !277, line: 139, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = !DISubroutineType(types: !360)
!360 = !{null, !291}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !355, file: !277, line: 140, baseType: !362, size: 64, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !365, line: 230, size: 128, elements: !366)
!365 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!366 = !{!367, !382}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !364, file: !365, line: 231, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DISubroutineType(types: !370)
!370 = !{!371, !291, !375, !340}
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !285, line: 60, baseType: !372)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !373, line: 73, baseType: !374)
!373 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !373, line: 15, baseType: !184)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !365, line: 30, size: 128, elements: !377)
!377 = !{!378, !379}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !376, file: !365, line: 31, baseType: !280, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !376, file: !365, line: 32, baseType: !380, size: 16, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !285, line: 19, baseType: !381)
!381 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !364, file: !365, line: 232, baseType: !383, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!371, !291, !375, !280, !386}
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !285, line: 55, baseType: !387)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !373, line: 72, baseType: !388)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !373, line: 16, baseType: !389)
!389 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !355, file: !277, line: 141, baseType: !391, size: 64, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !355, file: !277, line: 142, baseType: !393, size: 64, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !365, line: 84, size: 320, elements: !397)
!397 = !{!398, !399, !403, !4313, !4314}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !396, file: !365, line: 85, baseType: !280, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !396, file: !365, line: 86, baseType: !400, size: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{!380, !291, !375, !324}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !396, file: !365, line: 88, baseType: !404, size: 64, offset: 128)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!380, !291, !407, !324}
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !365, line: 168, size: 448, elements: !409)
!409 = !{!410, !411, !412, !413, !4308, !4309}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !408, file: !365, line: 169, baseType: !376, size: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !408, file: !365, line: 170, baseType: !386, size: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !408, file: !365, line: 171, baseType: !257, size: 64, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !408, file: !365, line: 172, baseType: !414, size: 64, offset: 256)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!371, !417, !291, !407, !340, !596, !386}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !85, line: 916, size: 1856, align: 32, elements: !419)
!419 = !{!420, !438, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4291, !4292, !4301, !4302, !4303, !4304, !4305, !4306, !4307}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !418, file: !85, line: 920, baseType: !421, size: 128)
!421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !418, file: !85, line: 917, size: 128, elements: !422)
!422 = !{!423, !429}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !421, file: !85, line: 918, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !425, line: 58, size: 64, elements: !426)
!425 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!426 = !{!427}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !425, line: 59, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !421, file: !85, line: 919, baseType: !430, size: 128, align: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !285, line: 216, size: 128, align: 64, elements: !431)
!431 = !{!432, !434}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !430, file: !285, line: 217, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !430, file: !285, line: 218, baseType: !435, size: 64, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !433}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !418, file: !85, line: 921, baseType: !439, size: 128, offset: 128)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !440, line: 8, size: 128, elements: !441)
!440 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!441 = !{!442, !446}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !439, file: !440, line: 9, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !445, line: 18, flags: DIFlagFwdDecl)
!445 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!446 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !439, file: !440, line: 10, baseType: !447, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !445, line: 89, size: 1536, elements: !449)
!449 = !{!450, !451, !461, !469, !470, !493, !4241, !4243, !4255, !4256, !4257, !4258, !4259, !4265, !4266, !4267}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !448, file: !445, line: 91, baseType: !7, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !448, file: !445, line: 92, baseType: !452, size: 32, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !453, line: 277, baseType: !454)
!453 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !453, line: 277, size: 32, elements: !455)
!455 = !{!456}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !454, file: !453, line: 277, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !453, line: 70, baseType: !458)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !453, line: 65, size: 32, elements: !459)
!459 = !{!460}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !458, file: !453, line: 66, baseType: !7, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !448, file: !445, line: 93, baseType: !462, size: 128, offset: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !463, line: 38, size: 128, elements: !464)
!463 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!464 = !{!465, !467}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !462, file: !463, line: 39, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !462, file: !463, line: 39, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !448, file: !445, line: 94, baseType: !447, size: 64, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !448, file: !445, line: 95, baseType: !471, size: 128, offset: 256)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !445, line: 47, size: 128, elements: !472)
!472 = !{!473, !489}
!473 = !DIDerivedType(tag: DW_TAG_member, scope: !471, file: !445, line: 48, baseType: !474, size: 64)
!474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !471, file: !445, line: 48, size: 64, elements: !475)
!475 = !{!476, !485}
!476 = !DIDerivedType(tag: DW_TAG_member, scope: !474, file: !445, line: 49, baseType: !477, size: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !474, file: !445, line: 49, size: 64, elements: !478)
!478 = !{!479, !484}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !477, file: !445, line: 50, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !481, line: 21, baseType: !482)
!481 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !483, line: 27, baseType: !7)
!483 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!484 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !477, file: !445, line: 50, baseType: !480, size: 32, offset: 32)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !474, file: !445, line: 52, baseType: !486, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !481, line: 23, baseType: !487)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !483, line: 31, baseType: !488)
!488 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !445, line: 54, baseType: !490, size: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !448, file: !445, line: 96, baseType: !494, size: 64, offset: 384)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !85, line: 610, size: 4224, elements: !496)
!496 = !{!497, !498, !499, !507, !514, !515, !663, !3946, !3947, !3948, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !4209, !4217, !4218, !4219, !4237, !4238, !4239, !4240}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !495, file: !85, line: 611, baseType: !380, size: 16)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !495, file: !85, line: 612, baseType: !381, size: 16, offset: 16)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !495, file: !85, line: 613, baseType: !500, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !501, line: 23, baseType: !502)
!501 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !501, line: 21, size: 32, elements: !503)
!503 = !{!504}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !502, file: !501, line: 22, baseType: !505, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !285, line: 32, baseType: !506)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !373, line: 49, baseType: !7)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !495, file: !85, line: 614, baseType: !508, size: 32, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !501, line: 28, baseType: !509)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !501, line: 26, size: 32, elements: !510)
!510 = !{!511}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !509, file: !501, line: 27, baseType: !512, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !285, line: 33, baseType: !513)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !373, line: 50, baseType: !7)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !495, file: !85, line: 615, baseType: !7, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !495, file: !85, line: 622, baseType: !516, size: 64, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !85, line: 1864, size: 1536, align: 512, elements: !519)
!519 = !{!520, !524, !537, !541, !547, !551, !557, !561, !565, !569, !573, !574, !580, !584, !610, !639, !643, !649, !654, !658, !659}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !518, file: !85, line: 1865, baseType: !521, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!447, !494, !447, !7}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !518, file: !85, line: 1866, baseType: !525, size: 64, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DISubroutineType(types: !527)
!527 = !{!280, !447, !494, !528}
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !530, line: 10, size: 128, elements: !531)
!530 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!531 = !{!532, !536}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !529, file: !530, line: 11, baseType: !533, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{null, !257}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !529, file: !530, line: 12, baseType: !257, size: 64, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !518, file: !85, line: 1867, baseType: !538, size: 64, offset: 128)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!324, !494, !324}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !518, file: !85, line: 1868, baseType: !542, size: 64, offset: 192)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!545, !494, !324}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !85, line: 581, flags: DIFlagFwdDecl)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !518, file: !85, line: 1870, baseType: !548, size: 64, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DISubroutineType(types: !550)
!550 = !{!324, !447, !340, !324}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !518, file: !85, line: 1872, baseType: !552, size: 64, offset: 320)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DISubroutineType(types: !554)
!554 = !{!324, !494, !447, !380, !555}
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !285, line: 30, baseType: !556)
!556 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !518, file: !85, line: 1873, baseType: !558, size: 64, offset: 384)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = !DISubroutineType(types: !560)
!560 = !{!324, !447, !494, !447}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !518, file: !85, line: 1874, baseType: !562, size: 64, offset: 448)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!324, !494, !447}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !518, file: !85, line: 1875, baseType: !566, size: 64, offset: 512)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!324, !494, !447, !280}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !518, file: !85, line: 1876, baseType: !570, size: 64, offset: 576)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!324, !494, !447, !380}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !518, file: !85, line: 1877, baseType: !562, size: 64, offset: 640)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !518, file: !85, line: 1878, baseType: !575, size: 64, offset: 704)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!324, !494, !447, !380, !578}
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !285, line: 16, baseType: !579)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !285, line: 13, baseType: !480)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !518, file: !85, line: 1879, baseType: !581, size: 64, offset: 768)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!324, !494, !447, !494, !447, !7}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !518, file: !85, line: 1881, baseType: !585, size: 64, offset: 832)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{!324, !447, !588}
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !85, line: 219, size: 640, elements: !590)
!590 = !{!591, !592, !593, !594, !595, !599, !607, !608, !609}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !589, file: !85, line: 220, baseType: !7, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !589, file: !85, line: 221, baseType: !380, size: 16, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !589, file: !85, line: 222, baseType: !500, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !589, file: !85, line: 223, baseType: !508, size: 32, offset: 96)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !589, file: !85, line: 224, baseType: !596, size: 64, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !285, line: 46, baseType: !597)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !373, line: 88, baseType: !598)
!598 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !589, file: !85, line: 225, baseType: !600, size: 128, offset: 192)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !601, line: 13, size: 128, elements: !602)
!601 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!602 = !{!603, !606}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !600, file: !601, line: 14, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !601, line: 8, baseType: !605)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !483, line: 30, baseType: !598)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !600, file: !601, line: 15, baseType: !184, size: 64, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !589, file: !85, line: 226, baseType: !600, size: 128, offset: 320)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !589, file: !85, line: 227, baseType: !600, size: 128, offset: 448)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !589, file: !85, line: 234, baseType: !417, size: 64, offset: 576)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !518, file: !85, line: 1882, baseType: !611, size: 64, offset: 896)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DISubroutineType(types: !613)
!613 = !{!324, !614, !616, !480, !7}
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !439)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !618, line: 22, size: 1152, elements: !619)
!618 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!619 = !{!620, !621, !622, !623, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !617, file: !618, line: 23, baseType: !480, size: 32)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !617, file: !618, line: 24, baseType: !380, size: 16, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !617, file: !618, line: 25, baseType: !7, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !617, file: !618, line: 26, baseType: !624, size: 32, offset: 96)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !285, line: 104, baseType: !480)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !617, file: !618, line: 27, baseType: !486, size: 64, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !617, file: !618, line: 28, baseType: !486, size: 64, offset: 192)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !617, file: !618, line: 37, baseType: !486, size: 64, offset: 256)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !617, file: !618, line: 38, baseType: !578, size: 32, offset: 320)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !617, file: !618, line: 39, baseType: !578, size: 32, offset: 352)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !617, file: !618, line: 40, baseType: !500, size: 32, offset: 384)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !617, file: !618, line: 41, baseType: !508, size: 32, offset: 416)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !617, file: !618, line: 42, baseType: !596, size: 64, offset: 448)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !617, file: !618, line: 43, baseType: !600, size: 128, offset: 512)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !617, file: !618, line: 44, baseType: !600, size: 128, offset: 640)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !617, file: !618, line: 45, baseType: !600, size: 128, offset: 768)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !617, file: !618, line: 46, baseType: !600, size: 128, offset: 896)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !617, file: !618, line: 47, baseType: !486, size: 64, offset: 1024)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !617, file: !618, line: 48, baseType: !486, size: 64, offset: 1088)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !518, file: !85, line: 1883, baseType: !640, size: 64, offset: 960)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DISubroutineType(types: !642)
!642 = !{!371, !447, !340, !386}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !518, file: !85, line: 1884, baseType: !644, size: 64, offset: 1024)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DISubroutineType(types: !646)
!646 = !{!324, !494, !647, !486, !486}
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !85, line: 50, flags: DIFlagFwdDecl)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !518, file: !85, line: 1886, baseType: !650, size: 64, offset: 1088)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DISubroutineType(types: !652)
!652 = !{!324, !494, !653, !324}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !518, file: !85, line: 1887, baseType: !655, size: 64, offset: 1152)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!324, !494, !447, !417, !7, !380}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !518, file: !85, line: 1890, baseType: !570, size: 64, offset: 1216)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !518, file: !85, line: 1891, baseType: !660, size: 64, offset: 1280)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!324, !494, !545, !324}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !495, file: !85, line: 623, baseType: !664, size: 64, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !85, line: 1416, size: 9472, elements: !666)
!666 = !{!667, !668, !669, !670, !671, !672, !722, !3560, !3642, !3725, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3741, !3745, !3746, !3747, !3748, !3751, !3752, !3753, !3794, !3820, !3821, !3822, !3823, !3824, !3825, !3828, !3829, !3836, !3837, !3838, !3839, !3840, !3899, !3900, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !665, file: !85, line: 1417, baseType: !284, size: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !665, file: !85, line: 1418, baseType: !578, size: 32, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !665, file: !85, line: 1419, baseType: !492, size: 8, offset: 160)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !665, file: !85, line: 1420, baseType: !389, size: 64, offset: 192)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !665, file: !85, line: 1421, baseType: !596, size: 64, offset: 256)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !665, file: !85, line: 1422, baseType: !673, size: 64, offset: 320)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !85, line: 2228, size: 576, elements: !675)
!675 = !{!676, !677, !678, !685, !689, !693, !697, !701, !702, !712, !715, !716, !717, !719, !720, !721}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !674, file: !85, line: 2229, baseType: !280, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !674, file: !85, line: 2230, baseType: !324, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !674, file: !85, line: 2238, baseType: !679, size: 64, offset: 128)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!324, !682}
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !684, line: 28, flags: DIFlagFwdDecl)
!684 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!685 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !674, file: !85, line: 2239, baseType: !686, size: 64, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !688)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !85, line: 70, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !674, file: !85, line: 2240, baseType: !690, size: 64, offset: 256)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{!447, !673, !324, !280, !257}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !674, file: !85, line: 2242, baseType: !694, size: 64, offset: 320)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{null, !664}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !674, file: !85, line: 2243, baseType: !698, size: 64, offset: 384)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !700, line: 76, flags: DIFlagFwdDecl)
!700 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!701 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !674, file: !85, line: 2244, baseType: !673, size: 64, offset: 448)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !674, file: !85, line: 2245, baseType: !703, size: 64, offset: 512)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !285, line: 182, size: 64, elements: !704)
!704 = !{!705}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !703, file: !285, line: 183, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !285, line: 186, size: 128, elements: !708)
!708 = !{!709, !710}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !707, file: !285, line: 187, baseType: !706, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !707, file: !285, line: 187, baseType: !711, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !674, file: !85, line: 2247, baseType: !713, offset: 576)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !714, line: 187, elements: !312)
!714 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!715 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !674, file: !85, line: 2248, baseType: !713, offset: 576)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !674, file: !85, line: 2249, baseType: !713, offset: 576)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !674, file: !85, line: 2250, baseType: !718, offset: 576)
!718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, elements: !341)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !674, file: !85, line: 2252, baseType: !713, offset: 576)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !674, file: !85, line: 2253, baseType: !713, offset: 576)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !674, file: !85, line: 2254, baseType: !713, offset: 576)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !665, file: !85, line: 1423, baseType: !723, size: 64, offset: 384)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !85, line: 1935, size: 1472, elements: !726)
!726 = !{!727, !731, !735, !736, !740, !746, !750, !751, !752, !756, !760, !761, !762, !763, !769, !774, !775, !831, !832, !833, !834, !3544, !3559}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !725, file: !85, line: 1936, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DISubroutineType(types: !730)
!730 = !{!494, !664}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !725, file: !85, line: 1937, baseType: !732, size: 64, offset: 64)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !494}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !725, file: !85, line: 1938, baseType: !732, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !725, file: !85, line: 1940, baseType: !737, size: 64, offset: 192)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{null, !494, !324}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !725, file: !85, line: 1941, baseType: !741, size: 64, offset: 256)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!324, !494, !744}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !85, line: 289, flags: DIFlagFwdDecl)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !725, file: !85, line: 1942, baseType: !747, size: 64, offset: 320)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!324, !494}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !725, file: !85, line: 1943, baseType: !732, size: 64, offset: 384)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !725, file: !85, line: 1944, baseType: !694, size: 64, offset: 448)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !725, file: !85, line: 1945, baseType: !753, size: 64, offset: 512)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{!324, !664, !324}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !725, file: !85, line: 1946, baseType: !757, size: 64, offset: 576)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!324, !664}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !725, file: !85, line: 1947, baseType: !757, size: 64, offset: 640)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !725, file: !85, line: 1948, baseType: !757, size: 64, offset: 704)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !725, file: !85, line: 1949, baseType: !757, size: 64, offset: 768)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !725, file: !85, line: 1950, baseType: !764, size: 64, offset: 832)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DISubroutineType(types: !766)
!766 = !{!324, !447, !767}
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !85, line: 57, flags: DIFlagFwdDecl)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !725, file: !85, line: 1951, baseType: !770, size: 64, offset: 896)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!324, !664, !773, !340}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !725, file: !85, line: 1952, baseType: !694, size: 64, offset: 960)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !725, file: !85, line: 1954, baseType: !776, size: 64, offset: 1024)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!324, !779, !447}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !781, line: 16, size: 896, elements: !782)
!781 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!782 = !{!783, !784, !785, !786, !787, !788, !789, !790, !804, !826, !827, !830}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !780, file: !781, line: 17, baseType: !340, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !780, file: !781, line: 18, baseType: !386, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !780, file: !781, line: 19, baseType: !386, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !780, file: !781, line: 20, baseType: !386, size: 64, offset: 192)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !780, file: !781, line: 21, baseType: !386, size: 64, offset: 256)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !780, file: !781, line: 22, baseType: !596, size: 64, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !780, file: !781, line: 23, baseType: !596, size: 64, offset: 384)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !780, file: !781, line: 24, baseType: !791, size: 192, offset: 448)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !792, line: 53, size: 192, elements: !793)
!792 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!793 = !{!794, !802, !803}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !791, file: !792, line: 54, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !796, line: 13, baseType: !797)
!796 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !285, line: 175, baseType: !798)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 173, size: 64, elements: !799)
!799 = !{!800}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !798, file: !285, line: 174, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !481, line: 22, baseType: !605)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !791, file: !792, line: 55, baseType: !298, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !791, file: !792, line: 59, baseType: !284, size: 128, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !780, file: !781, line: 25, baseType: !805, size: 64, offset: 640)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !781, line: 31, size: 256, elements: !808)
!808 = !{!809, !814, !818, !822}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !807, file: !781, line: 32, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!257, !779, !813}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !807, file: !781, line: 33, baseType: !815, size: 64, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{null, !779, !257}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !807, file: !781, line: 34, baseType: !819, size: 64, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!257, !779, !257, !813}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !807, file: !781, line: 35, baseType: !823, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!324, !779, !257}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !780, file: !781, line: 26, baseType: !324, size: 32, offset: 704)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !780, file: !781, line: 27, baseType: !828, size: 64, offset: 768)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !418)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !780, file: !781, line: 28, baseType: !257, size: 64, offset: 832)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !725, file: !85, line: 1955, baseType: !776, size: 64, offset: 1088)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !725, file: !85, line: 1956, baseType: !776, size: 64, offset: 1152)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !725, file: !85, line: 1957, baseType: !776, size: 64, offset: 1216)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !725, file: !85, line: 1963, baseType: !835, size: 64, offset: 1280)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!324, !664, !838, !861}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !840, line: 68, size: 512, align: 128, elements: !841)
!840 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!841 = !{!842, !843, !3536, !3543}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !839, file: !840, line: 69, baseType: !389, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, scope: !839, file: !840, line: 77, baseType: !844, size: 320, offset: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !839, file: !840, line: 77, size: 320, elements: !845)
!845 = !{!846, !1096, !1101, !1129, !1137, !1143, !3487, !3535}
!846 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 78, baseType: !847, size: 320)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 78, size: 320, elements: !848)
!848 = !{!849, !850, !1094, !1095}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !847, file: !840, line: 84, baseType: !284, size: 128)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !847, file: !840, line: 86, baseType: !851, size: 64, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !85, line: 451, size: 1216, align: 64, elements: !853)
!853 = !{!854, !855, !863, !864, !869, !884, !893, !894, !895, !896, !1087, !1088, !1091, !1092, !1093}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !852, file: !85, line: 452, baseType: !494, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !852, file: !85, line: 453, baseType: !856, size: 128, offset: 64)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !857, line: 292, size: 128, elements: !858)
!857 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!858 = !{!859, !860, !862}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !856, file: !857, line: 293, baseType: !298)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !856, file: !857, line: 295, baseType: !861, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !285, line: 148, baseType: !7)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !856, file: !857, line: 296, baseType: !257, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !852, file: !85, line: 454, baseType: !861, size: 32, offset: 192)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !852, file: !85, line: 455, baseType: !865, size: 32, offset: 224)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !285, line: 168, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !285, line: 166, size: 32, elements: !867)
!867 = !{!868}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !866, file: !285, line: 167, baseType: !324, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !852, file: !85, line: 460, baseType: !870, size: 128, offset: 256)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !871, line: 125, size: 128, elements: !872)
!871 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!872 = !{!873, !883}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !870, file: !871, line: 126, baseType: !874, size: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !871, line: 31, size: 64, elements: !875)
!875 = !{!876}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !874, file: !871, line: 32, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !871, line: 24, size: 192, align: 64, elements: !879)
!879 = !{!880, !881, !882}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !878, file: !871, line: 25, baseType: !389, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !878, file: !871, line: 26, baseType: !877, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !878, file: !871, line: 27, baseType: !877, size: 64, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !870, file: !871, line: 127, baseType: !877, size: 64, offset: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !852, file: !85, line: 461, baseType: !885, size: 256, offset: 384)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !886, line: 35, size: 256, elements: !887)
!886 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!887 = !{!888, !889, !890, !892}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !885, file: !886, line: 36, baseType: !795, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !885, file: !886, line: 42, baseType: !795, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !885, file: !886, line: 46, baseType: !891, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !299, line: 29, baseType: !306)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !885, file: !886, line: 47, baseType: !284, size: 128, offset: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !852, file: !85, line: 462, baseType: !389, size: 64, offset: 640)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !852, file: !85, line: 463, baseType: !389, size: 64, offset: 704)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !852, file: !85, line: 464, baseType: !389, size: 64, offset: 768)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !852, file: !85, line: 465, baseType: !897, size: 64, offset: 832)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !85, line: 367, size: 1408, elements: !900)
!900 = !{!901, !905, !909, !913, !917, !921, !934, !940, !944, !949, !953, !957, !961, !1051, !1055, !1061, !1062, !1063, !1067, !1072, !1076, !1083}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !899, file: !85, line: 368, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!324, !838, !744}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !899, file: !85, line: 369, baseType: !906, size: 64, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!324, !417, !838}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !899, file: !85, line: 372, baseType: !910, size: 64, offset: 128)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!324, !851, !744}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !899, file: !85, line: 375, baseType: !914, size: 64, offset: 192)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!324, !838}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !899, file: !85, line: 381, baseType: !918, size: 64, offset: 256)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!324, !417, !851, !288, !7}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !899, file: !85, line: 383, baseType: !922, size: 64, offset: 320)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{null, !925}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !927, line: 795, size: 256, elements: !928)
!927 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!928 = !{!929, !930, !931, !932, !933}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !926, file: !927, line: 796, baseType: !417, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !926, file: !927, line: 797, baseType: !851, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !926, file: !927, line: 799, baseType: !389, size: 64, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !926, file: !927, line: 800, baseType: !7, size: 32, offset: 192)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !926, file: !927, line: 801, baseType: !7, size: 32, offset: 224)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !899, file: !85, line: 385, baseType: !935, size: 64, offset: 384)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!324, !417, !851, !596, !7, !7, !938, !939}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !899, file: !85, line: 388, baseType: !941, size: 64, offset: 448)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!324, !417, !851, !596, !7, !7, !838, !257}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !899, file: !85, line: 393, baseType: !945, size: 64, offset: 512)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!948, !851, !948}
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !285, line: 125, baseType: !486)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !899, file: !85, line: 394, baseType: !950, size: 64, offset: 576)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DISubroutineType(types: !952)
!952 = !{null, !838, !7, !7}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !899, file: !85, line: 395, baseType: !954, size: 64, offset: 640)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{!324, !838, !861}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !899, file: !85, line: 396, baseType: !958, size: 64, offset: 704)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !838}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !899, file: !85, line: 397, baseType: !962, size: 64, offset: 768)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!371, !965, !1004}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !85, line: 320, size: 384, elements: !967)
!967 = !{!968, !969, !970, !974, !975, !976, !979, !980}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !966, file: !85, line: 321, baseType: !417, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !966, file: !85, line: 326, baseType: !596, size: 64, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !966, file: !85, line: 327, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !965, !184, !184}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !966, file: !85, line: 328, baseType: !257, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !966, file: !85, line: 329, baseType: !324, size: 32, offset: 256)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !966, file: !85, line: 330, baseType: !977, size: 16, offset: 288)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !481, line: 19, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !483, line: 24, baseType: !381)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !966, file: !85, line: 331, baseType: !977, size: 16, offset: 304)
!980 = !DIDerivedType(tag: DW_TAG_member, scope: !966, file: !85, line: 332, baseType: !981, size: 64, offset: 320)
!981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !966, file: !85, line: 332, size: 64, elements: !982)
!982 = !{!983, !984}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !981, file: !85, line: 333, baseType: !7, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !981, file: !85, line: 334, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !927, line: 569, size: 448, elements: !987)
!987 = !{!988, !989, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !986, file: !927, line: 570, baseType: !838, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !986, file: !927, line: 571, baseType: !324, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !986, file: !927, line: 572, baseType: !991, size: 320, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !992, line: 14, baseType: !993)
!992 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !992, line: 29, size: 320, elements: !994)
!994 = !{!995, !996, !997, !1003}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !993, file: !992, line: 30, baseType: !7, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !993, file: !992, line: 31, baseType: !257, size: 64, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !993, file: !992, line: 32, baseType: !998, size: 64, offset: 128)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !992, line: 16, baseType: !999)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!324, !1002, !7, !324, !257}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !993, file: !992, line: 33, baseType: !284, size: 128, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1006, line: 29, size: 320, elements: !1007)
!1006 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1007 = !{!1008, !1009, !1010, !1011, !1042}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1005, file: !1006, line: 35, baseType: !7, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1005, file: !1006, line: 36, baseType: !386, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1005, file: !1006, line: 37, baseType: !386, size: 64, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, scope: !1005, file: !1006, line: 38, baseType: !1012, size: 64, offset: 192)
!1012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1005, file: !1006, line: 38, size: 64, elements: !1013)
!1013 = !{!1014, !1022, !1029, !1038}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1012, file: !1006, line: 39, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1018, line: 17, size: 128, elements: !1019)
!1018 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1017, file: !1018, line: 19, baseType: !257, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1017, file: !1018, line: 20, baseType: !387, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1012, file: !1006, line: 40, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1025)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1006, line: 15, size: 128, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1025, file: !1006, line: 16, baseType: !257, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1025, file: !1006, line: 17, baseType: !386, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1012, file: !1006, line: 41, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1033, line: 31, size: 128, elements: !1034)
!1033 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1034 = !{!1035, !1036, !1037}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1032, file: !1033, line: 32, baseType: !838, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1032, file: !1033, line: 33, baseType: !7, size: 32, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1032, file: !1033, line: 34, baseType: !7, size: 32, offset: 96)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1012, file: !1006, line: 42, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1041, line: 53, flags: DIFlagFwdDecl)
!1041 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_member, scope: !1005, file: !1006, line: 44, baseType: !1043, size: 64, offset: 256)
!1043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1005, file: !1006, line: 44, size: 64, elements: !1044)
!1044 = !{!1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1043, file: !1006, line: 45, baseType: !389, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1006, line: 46, baseType: !1047, size: 64)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1006, line: 46, size: 64, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1047, file: !1006, line: 47, baseType: !7, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1047, file: !1006, line: 48, baseType: !7, size: 32, offset: 32)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !899, file: !85, line: 402, baseType: !1052, size: 64, offset: 832)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!324, !851, !838, !838, !5}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !899, file: !85, line: 404, baseType: !1056, size: 64, offset: 896)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!555, !838, !1059}
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1060, line: 305, baseType: !7)
!1060 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !899, file: !85, line: 405, baseType: !958, size: 64, offset: 960)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !899, file: !85, line: 406, baseType: !914, size: 64, offset: 1024)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !899, file: !85, line: 407, baseType: !1064, size: 64, offset: 1088)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!324, !838, !389, !389}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !899, file: !85, line: 409, baseType: !1068, size: 64, offset: 1152)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !838, !1071, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !899, file: !85, line: 410, baseType: !1073, size: 64, offset: 1216)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!324, !851, !838}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !899, file: !85, line: 413, baseType: !1077, size: 64, offset: 1280)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!324, !1080, !417, !1082}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !85, line: 61, flags: DIFlagFwdDecl)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !899, file: !85, line: 415, baseType: !1084, size: 64, offset: 1344)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{null, !417}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !852, file: !85, line: 466, baseType: !389, size: 64, offset: 896)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !852, file: !85, line: 467, baseType: !1089, size: 32, offset: 960)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1090, line: 8, baseType: !480)
!1090 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !852, file: !85, line: 468, baseType: !298, offset: 992)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !852, file: !85, line: 469, baseType: !284, size: 128, offset: 1024)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !852, file: !85, line: 470, baseType: !257, size: 64, offset: 1152)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !847, file: !840, line: 87, baseType: !389, size: 64, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !847, file: !840, line: 94, baseType: !389, size: 64, offset: 256)
!1096 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 96, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 96, size: 64, elements: !1098)
!1098 = !{!1099}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1097, file: !840, line: 101, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !285, line: 143, baseType: !486)
!1101 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 103, baseType: !1102, size: 320)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 103, size: 320, elements: !1103)
!1103 = !{!1104, !1114, !1117, !1118}
!1104 = !DIDerivedType(tag: DW_TAG_member, scope: !1102, file: !840, line: 104, baseType: !1105, size: 128)
!1105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1102, file: !840, line: 104, size: 128, elements: !1106)
!1106 = !{!1107, !1108}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1105, file: !840, line: 105, baseType: !284, size: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, scope: !1105, file: !840, line: 106, baseType: !1109, size: 128)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1105, file: !840, line: 106, size: 128, elements: !1110)
!1110 = !{!1111, !1112, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1109, file: !840, line: 107, baseType: !838, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1109, file: !840, line: 109, baseType: !324, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1109, file: !840, line: 110, baseType: !324, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1102, file: !840, line: 117, baseType: !1115, size: 64, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !840, line: 117, flags: DIFlagFwdDecl)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1102, file: !840, line: 119, baseType: !257, size: 64, offset: 192)
!1118 = !DIDerivedType(tag: DW_TAG_member, scope: !1102, file: !840, line: 120, baseType: !1119, size: 64, offset: 256)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1102, file: !840, line: 120, size: 64, elements: !1120)
!1120 = !{!1121, !1122, !1123}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1119, file: !840, line: 121, baseType: !257, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1119, file: !840, line: 122, baseType: !389, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, scope: !1119, file: !840, line: 123, baseType: !1124, size: 32)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1119, file: !840, line: 123, size: 32, elements: !1125)
!1125 = !{!1126, !1127, !1128}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1124, file: !840, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1124, file: !840, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1124, file: !840, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1129 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 130, baseType: !1130, size: 192)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 130, size: 192, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1130, file: !840, line: 131, baseType: !389, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1130, file: !840, line: 134, baseType: !492, size: 8, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1130, file: !840, line: 135, baseType: !492, size: 8, offset: 72)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1130, file: !840, line: 136, baseType: !865, size: 32, offset: 96)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1130, file: !840, line: 137, baseType: !7, size: 32, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 139, baseType: !1138, size: 256)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 139, size: 256, elements: !1139)
!1139 = !{!1140, !1141, !1142}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1138, file: !840, line: 140, baseType: !389, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1138, file: !840, line: 141, baseType: !865, size: 32, offset: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1138, file: !840, line: 143, baseType: !284, size: 128, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 145, baseType: !1144, size: 256)
!1144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 145, size: 256, elements: !1145)
!1145 = !{!1146, !1147, !1150, !1151, !3486}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1144, file: !840, line: 146, baseType: !389, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1144, file: !840, line: 147, baseType: !1148, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1149, line: 509, baseType: !838)
!1149 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1144, file: !840, line: 148, baseType: !389, size: 64, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_member, scope: !1144, file: !840, line: 149, baseType: !1152, size: 64, offset: 192)
!1152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1144, file: !840, line: 149, size: 64, elements: !1153)
!1153 = !{!1154, !3485}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1152, file: !840, line: 150, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !840, line: 388, size: 7296, elements: !1157)
!1157 = !{!1158, !3483}
!1158 = !DIDerivedType(tag: DW_TAG_member, scope: !1156, file: !840, line: 389, baseType: !1159, size: 7296)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1156, file: !840, line: 389, size: 7296, elements: !1160)
!1160 = !{!1161, !1279, !1280, !1281, !1285, !1286, !1287, !1288, !1289, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1330, !1338, !1341, !1381, !1382, !3467, !3468, !3471, !3472, !3473, !3476, !3477, !3478, !3481, !3482}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1159, file: !840, line: 390, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !840, line: 305, size: 1472, elements: !1164)
!1164 = !{!1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1179, !1180, !1185, !1186, !1189, !1273, !1274, !1275, !1276, !1277}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1163, file: !840, line: 308, baseType: !389, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1163, file: !840, line: 309, baseType: !389, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1163, file: !840, line: 313, baseType: !1162, size: 64, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1163, file: !840, line: 313, baseType: !1162, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1163, file: !840, line: 315, baseType: !878, size: 192, align: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1163, file: !840, line: 323, baseType: !389, size: 64, offset: 448)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1163, file: !840, line: 327, baseType: !1155, size: 64, offset: 512)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1163, file: !840, line: 333, baseType: !1173, size: 64, offset: 576)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1149, line: 284, baseType: !1174)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1149, line: 284, size: 64, elements: !1175)
!1175 = !{!1176}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1174, file: !1149, line: 284, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1178, line: 19, baseType: !389)
!1178 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1163, file: !840, line: 334, baseType: !389, size: 64, offset: 640)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1163, file: !840, line: 343, baseType: !1181, size: 256, offset: 704)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1163, file: !840, line: 340, size: 256, elements: !1182)
!1182 = !{!1183, !1184}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1181, file: !840, line: 341, baseType: !878, size: 192, align: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1181, file: !840, line: 342, baseType: !389, size: 64, offset: 192)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1163, file: !840, line: 351, baseType: !284, size: 128, offset: 960)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1163, file: !840, line: 353, baseType: !1187, size: 64, offset: 1088)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !840, line: 353, flags: DIFlagFwdDecl)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1163, file: !840, line: 356, baseType: !1190, size: 64, offset: 1152)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1193)
!1193 = !{!1194, !1198, !1199, !1203, !1207, !1247, !1251, !1255, !1259, !1260, !1261, !1265, !1269}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1192, file: !14, line: 558, baseType: !1195, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{null, !1162}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1192, file: !14, line: 559, baseType: !1195, size: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1192, file: !14, line: 560, baseType: !1200, size: 64, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!324, !1162, !389}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1192, file: !14, line: 561, baseType: !1204, size: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!324, !1162}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1192, file: !14, line: 562, baseType: !1208, size: 64, offset: 256)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !840, line: 682, baseType: !7)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1227, !1234, !1240, !1241, !1242, !1244, !1246}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1213, file: !14, line: 509, baseType: !1162, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1213, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1213, file: !14, line: 511, baseType: !861, size: 32, offset: 96)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1213, file: !14, line: 512, baseType: !389, size: 64, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1213, file: !14, line: 513, baseType: !389, size: 64, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1213, file: !14, line: 514, baseType: !1221, size: 64, offset: 256)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1149, line: 385, baseType: !1223)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1149, line: 385, size: 64, elements: !1224)
!1224 = !{!1225}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1223, file: !1149, line: 385, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1178, line: 15, baseType: !389)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1213, file: !14, line: 516, baseType: !1228, size: 64, offset: 320)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1149, line: 359, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1149, line: 359, size: 64, elements: !1231)
!1231 = !{!1232}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1230, file: !1149, line: 359, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1178, line: 16, baseType: !389)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1213, file: !14, line: 519, baseType: !1235, size: 64, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1178, line: 21, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 21, size: 64, elements: !1237)
!1237 = !{!1238}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1236, file: !1178, line: 21, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1178, line: 14, baseType: !389)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1213, file: !14, line: 521, baseType: !838, size: 64, offset: 448)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1213, file: !14, line: 522, baseType: !838, size: 64, offset: 512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1213, file: !14, line: 528, baseType: !1243, size: 64, offset: 576)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1213, file: !14, line: 532, baseType: !1245, size: 64, offset: 640)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1213, file: !14, line: 536, baseType: !1148, size: 64, offset: 704)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1192, file: !14, line: 563, baseType: !1248, size: 64, offset: 320)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!1211, !1212, !13}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1192, file: !14, line: 565, baseType: !1252, size: 64, offset: 384)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !1212, !389, !389}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1192, file: !14, line: 567, baseType: !1256, size: 64, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!389, !1162}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1192, file: !14, line: 571, baseType: !1208, size: 64, offset: 512)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1192, file: !14, line: 574, baseType: !1208, size: 64, offset: 576)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1192, file: !14, line: 579, baseType: !1262, size: 64, offset: 640)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{!324, !1162, !389, !257, !324, !324}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1192, file: !14, line: 585, baseType: !1266, size: 64, offset: 704)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!280, !1162}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1192, file: !14, line: 615, baseType: !1270, size: 64, offset: 768)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{!838, !1162, !389}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1163, file: !840, line: 359, baseType: !389, size: 64, offset: 1216)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1163, file: !840, line: 361, baseType: !417, size: 64, offset: 1280)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1163, file: !840, line: 362, baseType: !257, size: 64, offset: 1344)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1163, file: !840, line: 365, baseType: !795, size: 64, offset: 1408)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1163, file: !840, line: 373, baseType: !1278, offset: 1472)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !840, line: 296, elements: !312)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1159, file: !840, line: 391, baseType: !874, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1159, file: !840, line: 392, baseType: !486, size: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1159, file: !840, line: 394, baseType: !1282, size: 64, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!389, !417, !389, !389, !389, !389}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1159, file: !840, line: 398, baseType: !389, size: 64, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1159, file: !840, line: 399, baseType: !389, size: 64, offset: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1159, file: !840, line: 405, baseType: !389, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1159, file: !840, line: 406, baseType: !389, size: 64, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1159, file: !840, line: 407, baseType: !1290, size: 64, offset: 512)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1149, line: 286, baseType: !1292)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1149, line: 286, size: 64, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1292, file: !1149, line: 286, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1178, line: 18, baseType: !389)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1159, file: !840, line: 416, baseType: !865, size: 32, offset: 576)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1159, file: !840, line: 428, baseType: !865, size: 32, offset: 608)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1159, file: !840, line: 437, baseType: !865, size: 32, offset: 640)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1159, file: !840, line: 447, baseType: !865, size: 32, offset: 672)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1159, file: !840, line: 450, baseType: !795, size: 64, offset: 704)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1159, file: !840, line: 452, baseType: !324, size: 32, offset: 768)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1159, file: !840, line: 454, baseType: !298, offset: 800)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1159, file: !840, line: 457, baseType: !885, size: 256, offset: 832)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1159, file: !840, line: 459, baseType: !284, size: 128, offset: 1088)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1159, file: !840, line: 466, baseType: !389, size: 64, offset: 1216)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1159, file: !840, line: 467, baseType: !389, size: 64, offset: 1280)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1159, file: !840, line: 469, baseType: !389, size: 64, offset: 1344)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1159, file: !840, line: 470, baseType: !389, size: 64, offset: 1408)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1159, file: !840, line: 471, baseType: !797, size: 64, offset: 1472)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1159, file: !840, line: 472, baseType: !389, size: 64, offset: 1536)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1159, file: !840, line: 473, baseType: !389, size: 64, offset: 1600)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1159, file: !840, line: 474, baseType: !389, size: 64, offset: 1664)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1159, file: !840, line: 475, baseType: !389, size: 64, offset: 1728)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1159, file: !840, line: 477, baseType: !298, offset: 1792)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1159, file: !840, line: 478, baseType: !389, size: 64, offset: 1792)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1159, file: !840, line: 478, baseType: !389, size: 64, offset: 1856)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1159, file: !840, line: 478, baseType: !389, size: 64, offset: 1920)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1159, file: !840, line: 478, baseType: !389, size: 64, offset: 1984)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1159, file: !840, line: 479, baseType: !389, size: 64, offset: 2048)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1159, file: !840, line: 479, baseType: !389, size: 64, offset: 2112)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1159, file: !840, line: 479, baseType: !389, size: 64, offset: 2176)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1159, file: !840, line: 480, baseType: !389, size: 64, offset: 2240)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1159, file: !840, line: 480, baseType: !389, size: 64, offset: 2304)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1159, file: !840, line: 480, baseType: !389, size: 64, offset: 2368)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1159, file: !840, line: 480, baseType: !389, size: 64, offset: 2432)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1159, file: !840, line: 482, baseType: !1327, size: 2816, offset: 2496)
!1327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 2816, elements: !1328)
!1328 = !{!1329}
!1329 = !DISubrange(count: 44)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1159, file: !840, line: 488, baseType: !1331, size: 256, offset: 5312)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1332, line: 60, size: 256, elements: !1333)
!1332 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1333 = !{!1334}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1331, file: !1332, line: 61, baseType: !1335, size: 256)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !795, size: 256, elements: !1336)
!1336 = !{!1337}
!1337 = !DISubrange(count: 4)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1159, file: !840, line: 490, baseType: !1339, size: 64, offset: 5568)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !840, line: 490, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1159, file: !840, line: 493, baseType: !1342, size: 896, offset: 5632)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1343, line: 53, baseType: !1344)
!1343 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1343, line: 13, size: 896, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1352, !1353, !1354, !1355, !1375, !1376, !1377}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1344, file: !1343, line: 18, baseType: !486, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1344, file: !1343, line: 28, baseType: !797, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1344, file: !1343, line: 31, baseType: !885, size: 256, offset: 128)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1344, file: !1343, line: 32, baseType: !1350, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1343, line: 32, flags: DIFlagFwdDecl)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1344, file: !1343, line: 37, baseType: !381, size: 16, offset: 448)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1344, file: !1343, line: 40, baseType: !791, size: 192, offset: 512)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1344, file: !1343, line: 41, baseType: !257, size: 64, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1344, file: !1343, line: 42, baseType: !1356, size: 64, offset: 768)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1359, line: 13, size: 896, elements: !1360)
!1359 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1358, file: !1359, line: 14, baseType: !257, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1358, file: !1359, line: 15, baseType: !389, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1358, file: !1359, line: 17, baseType: !389, size: 64, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1358, file: !1359, line: 17, baseType: !389, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1358, file: !1359, line: 19, baseType: !184, size: 64, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1358, file: !1359, line: 21, baseType: !184, size: 64, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1358, file: !1359, line: 22, baseType: !184, size: 64, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1358, file: !1359, line: 23, baseType: !184, size: 64, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1358, file: !1359, line: 24, baseType: !184, size: 64, offset: 512)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1358, file: !1359, line: 25, baseType: !184, size: 64, offset: 576)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1358, file: !1359, line: 26, baseType: !184, size: 64, offset: 640)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1358, file: !1359, line: 27, baseType: !184, size: 64, offset: 704)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1358, file: !1359, line: 28, baseType: !184, size: 64, offset: 768)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1358, file: !1359, line: 29, baseType: !184, size: 64, offset: 832)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1344, file: !1343, line: 44, baseType: !865, size: 32, offset: 832)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1344, file: !1343, line: 50, baseType: !977, size: 16, offset: 864)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1344, file: !1343, line: 51, baseType: !1378, size: 16, offset: 880)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !481, line: 18, baseType: !1379)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !483, line: 23, baseType: !1380)
!1380 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1159, file: !840, line: 495, baseType: !389, size: 64, offset: 6528)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1159, file: !840, line: 497, baseType: !1383, size: 64, offset: 6592)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !840, line: 381, size: 384, elements: !1385)
!1385 = !{!1386, !1387, !3466}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1384, file: !840, line: 382, baseType: !865, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1384, file: !840, line: 383, baseType: !1388, size: 128, offset: 64)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !840, line: 376, size: 128, elements: !1389)
!1389 = !{!1390, !3464}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1388, file: !840, line: 377, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1041, line: 640, size: 48640, elements: !1393)
!1393 = !{!1394, !1400, !1402, !1403, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1420, !1438, !1449, !1534, !1535, !1536, !1547, !1548, !1550, !1551, !1552, !1553, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1632, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1669, !1671, !1672, !1673, !1685, !1686, !1687, !1688, !1689, !1690, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1714, !1719, !1903, !1904, !1905, !1906, !1910, !1913, !1916, !1919, !1922, !1926, !2027, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2073, !2074, !2075, !2076, !2077, !2082, !2083, !2084, !2087, !2088, !3112, !3121, !3124, !3125, !3126, !3129, !3130, !3209, !3210, !3213, !3214, !3217, !3218, !3219, !3223, !3224, !3225, !3238, !3239, !3240, !3250, !3255, !3256, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1392, file: !1041, line: 646, baseType: !1395, size: 128)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1396, line: 56, size: 128, elements: !1397)
!1396 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1395, file: !1396, line: 57, baseType: !389, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1395, file: !1396, line: 58, baseType: !480, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1392, file: !1041, line: 649, baseType: !1401, size: 64, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !184)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1392, file: !1041, line: 657, baseType: !257, size: 64, offset: 192)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1392, file: !1041, line: 658, baseType: !1404, size: 32, offset: 256)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1405, line: 113, baseType: !1406)
!1405 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1405, line: 111, size: 32, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1406, file: !1405, line: 112, baseType: !865, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1392, file: !1041, line: 660, baseType: !7, size: 32, offset: 288)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1392, file: !1041, line: 661, baseType: !7, size: 32, offset: 320)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1392, file: !1041, line: 684, baseType: !324, size: 32, offset: 352)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1392, file: !1041, line: 686, baseType: !324, size: 32, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1392, file: !1041, line: 687, baseType: !324, size: 32, offset: 416)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1392, file: !1041, line: 688, baseType: !324, size: 32, offset: 448)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1392, file: !1041, line: 689, baseType: !7, size: 32, offset: 480)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1392, file: !1041, line: 691, baseType: !1417, size: 64, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1419)
!1419 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1041, line: 691, flags: DIFlagFwdDecl)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1392, file: !1041, line: 692, baseType: !1421, size: 832, offset: 576)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1041, line: 451, size: 832, elements: !1422)
!1422 = !{!1423, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1421, file: !1041, line: 453, baseType: !1424, size: 128)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1041, line: 325, size: 128, elements: !1425)
!1425 = !{!1426, !1427}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1424, file: !1041, line: 326, baseType: !389, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1424, file: !1041, line: 327, baseType: !480, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1421, file: !1041, line: 454, baseType: !878, size: 192, align: 64, offset: 128)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1421, file: !1041, line: 455, baseType: !284, size: 128, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1421, file: !1041, line: 456, baseType: !7, size: 32, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1421, file: !1041, line: 458, baseType: !486, size: 64, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1421, file: !1041, line: 459, baseType: !486, size: 64, offset: 576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1421, file: !1041, line: 460, baseType: !486, size: 64, offset: 640)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1421, file: !1041, line: 461, baseType: !486, size: 64, offset: 704)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1421, file: !1041, line: 463, baseType: !486, size: 64, offset: 768)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1421, file: !1041, line: 465, baseType: !1437, offset: 832)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1041, line: 415, elements: !312)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1392, file: !1041, line: 693, baseType: !1439, size: 384, offset: 1408)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1041, line: 489, size: 384, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1439, file: !1041, line: 490, baseType: !284, size: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1439, file: !1041, line: 491, baseType: !389, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1439, file: !1041, line: 492, baseType: !389, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1439, file: !1041, line: 493, baseType: !7, size: 32, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1439, file: !1041, line: 494, baseType: !381, size: 16, offset: 288)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1439, file: !1041, line: 495, baseType: !381, size: 16, offset: 304)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1439, file: !1041, line: 497, baseType: !1448, size: 64, offset: 320)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1392, file: !1041, line: 697, baseType: !1450, size: 1792, offset: 1792)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1041, line: 507, size: 1792, elements: !1451)
!1451 = !{!1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1531, !1532}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1450, file: !1041, line: 508, baseType: !878, size: 192, align: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1450, file: !1041, line: 515, baseType: !486, size: 64, offset: 192)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1450, file: !1041, line: 516, baseType: !486, size: 64, offset: 256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1450, file: !1041, line: 517, baseType: !486, size: 64, offset: 320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1450, file: !1041, line: 518, baseType: !486, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1450, file: !1041, line: 519, baseType: !486, size: 64, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1450, file: !1041, line: 526, baseType: !801, size: 64, offset: 512)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1450, file: !1041, line: 527, baseType: !486, size: 64, offset: 576)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1450, file: !1041, line: 528, baseType: !7, size: 32, offset: 640)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1450, file: !1041, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1450, file: !1041, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1450, file: !1041, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1450, file: !1041, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1450, file: !1041, line: 563, baseType: !1466, size: 512, offset: 704)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1467)
!1467 = !{!1468, !1476, !1477, !1482, !1525, !1528, !1529, !1530}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1466, file: !20, line: 119, baseType: !1469, size: 256)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1470, line: 9, size: 256, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1473}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1469, file: !1470, line: 10, baseType: !878, size: 192, align: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1469, file: !1470, line: 11, baseType: !1474, size: 64, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1475, line: 29, baseType: !801)
!1475 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1466, file: !20, line: 120, baseType: !1474, size: 64, offset: 256)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1466, file: !20, line: 121, baseType: !1478, size: 64, offset: 320)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!19, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1466, file: !20, line: 122, baseType: !1483, size: 64, offset: 384)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1485)
!1485 = !{!1486, !1506, !1507, !1510, !1515, !1516, !1520, !1524}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1484, file: !20, line: 160, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1488, file: !20, line: 215, baseType: !891)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1488, file: !20, line: 216, baseType: !7, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1488, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1488, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1488, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1488, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1488, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1488, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1488, file: !20, line: 233, baseType: !1474, size: 64, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1488, file: !20, line: 234, baseType: !1481, size: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1488, file: !20, line: 235, baseType: !1474, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1488, file: !20, line: 236, baseType: !1481, size: 64, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1488, file: !20, line: 237, baseType: !1503, size: 4096, offset: 512)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 4096, elements: !1504)
!1504 = !{!1505}
!1505 = !DISubrange(count: 8)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1484, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1484, file: !20, line: 162, baseType: !1508, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !285, line: 27, baseType: !1509)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !373, line: 96, baseType: !324)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1484, file: !20, line: 163, baseType: !1511, size: 32, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !453, line: 276, baseType: !1512)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !453, line: 276, size: 32, elements: !1513)
!1513 = !{!1514}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1512, file: !453, line: 276, baseType: !457, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1484, file: !20, line: 164, baseType: !1481, size: 64, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1484, file: !20, line: 165, baseType: !1517, size: 128, offset: 256)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1470, line: 14, size: 128, elements: !1518)
!1518 = !{!1519}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1517, file: !1470, line: 15, baseType: !870, size: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1484, file: !20, line: 166, baseType: !1521, size: 64, offset: 384)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{!1474}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1484, file: !20, line: 167, baseType: !1474, size: 64, offset: 448)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1466, file: !20, line: 123, baseType: !1526, size: 8, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !481, line: 17, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !483, line: 21, baseType: !492)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1466, file: !20, line: 124, baseType: !1526, size: 8, offset: 456)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1466, file: !20, line: 125, baseType: !1526, size: 8, offset: 464)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1466, file: !20, line: 126, baseType: !1526, size: 8, offset: 472)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1450, file: !1041, line: 572, baseType: !1466, size: 512, offset: 1216)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1450, file: !1041, line: 580, baseType: !1533, size: 64, offset: 1728)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1392, file: !1041, line: 721, baseType: !7, size: 32, offset: 3584)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1392, file: !1041, line: 722, baseType: !324, size: 32, offset: 3616)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1392, file: !1041, line: 723, baseType: !1537, size: 64, offset: 3648)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1539 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1540, line: 17, baseType: !1541)
!1540 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1540, line: 17, size: 64, elements: !1542)
!1542 = !{!1543}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1541, file: !1540, line: 17, baseType: !1544, size: 64)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 64, elements: !1545)
!1545 = !{!1546}
!1546 = !DISubrange(count: 1)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1392, file: !1041, line: 724, baseType: !1539, size: 64, offset: 3712)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1392, file: !1041, line: 749, baseType: !1549, offset: 3776)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1041, line: 290, elements: !312)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1392, file: !1041, line: 751, baseType: !284, size: 128, offset: 3776)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1392, file: !1041, line: 757, baseType: !1155, size: 64, offset: 3904)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1392, file: !1041, line: 758, baseType: !1155, size: 64, offset: 3968)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1392, file: !1041, line: 761, baseType: !1554, size: 320, offset: 4032)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1332, line: 34, size: 320, elements: !1555)
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1554, file: !1332, line: 35, baseType: !486, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1554, file: !1332, line: 36, baseType: !1558, size: 256, offset: 64)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 256, elements: !1336)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1392, file: !1041, line: 766, baseType: !324, size: 32, offset: 4352)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1392, file: !1041, line: 767, baseType: !324, size: 32, offset: 4384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1392, file: !1041, line: 768, baseType: !324, size: 32, offset: 4416)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1392, file: !1041, line: 770, baseType: !324, size: 32, offset: 4448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1392, file: !1041, line: 772, baseType: !389, size: 64, offset: 4480)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1392, file: !1041, line: 775, baseType: !7, size: 32, offset: 4544)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1392, file: !1041, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1392, file: !1041, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1392, file: !1041, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1392, file: !1041, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1392, file: !1041, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1392, file: !1041, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1392, file: !1041, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1392, file: !1041, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1392, file: !1041, line: 831, baseType: !389, size: 64, offset: 4672)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1392, file: !1041, line: 833, baseType: !1575, size: 384, offset: 4736)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1576)
!1576 = !{!1577, !1582}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1575, file: !25, line: 26, baseType: !1578, size: 64)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!184, !1581}
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, scope: !1575, file: !25, line: 27, baseType: !1583, size: 320, offset: 64)
!1583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1575, file: !25, line: 27, size: 320, elements: !1584)
!1584 = !{!1585, !1595, !1622}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1583, file: !25, line: 36, baseType: !1586, size: 320)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1583, file: !25, line: 29, size: 320, elements: !1587)
!1587 = !{!1588, !1590, !1591, !1592, !1593, !1594}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1586, file: !25, line: 30, baseType: !1589, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1586, file: !25, line: 31, baseType: !480, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1586, file: !25, line: 32, baseType: !480, size: 32, offset: 96)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1586, file: !25, line: 33, baseType: !480, size: 32, offset: 128)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1586, file: !25, line: 34, baseType: !486, size: 64, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1586, file: !25, line: 35, baseType: !1589, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1583, file: !25, line: 46, baseType: !1596, size: 192)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1583, file: !25, line: 38, size: 192, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1621}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1596, file: !25, line: 39, baseType: !1508, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1596, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !25, line: 41, baseType: !1601, size: 64, offset: 64)
!1601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1596, file: !25, line: 41, size: 64, elements: !1602)
!1602 = !{!1603, !1611}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1601, file: !25, line: 42, baseType: !1604, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1606, line: 7, size: 128, elements: !1607)
!1606 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1607 = !{!1608, !1610}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1605, file: !1606, line: 8, baseType: !1609, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !373, line: 93, baseType: !598)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1605, file: !1606, line: 9, baseType: !598, size: 64, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1601, file: !25, line: 43, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1614, line: 7, size: 64, elements: !1615)
!1614 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1615 = !{!1616, !1620}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1613, file: !1614, line: 8, baseType: !1617, size: 32)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1614, line: 5, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !481, line: 20, baseType: !1619)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !483, line: 26, baseType: !324)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1613, file: !1614, line: 9, baseType: !1618, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1596, file: !25, line: 45, baseType: !486, size: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1583, file: !25, line: 54, baseType: !1623, size: 256)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1583, file: !25, line: 48, size: 256, elements: !1624)
!1624 = !{!1625, !1628, !1629, !1630, !1631}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1623, file: !25, line: 49, baseType: !1626, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1623, file: !25, line: 50, baseType: !324, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1623, file: !25, line: 51, baseType: !324, size: 32, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1623, file: !25, line: 52, baseType: !389, size: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1623, file: !25, line: 53, baseType: !389, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1392, file: !1041, line: 835, baseType: !1633, size: 32, offset: 5120)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !285, line: 22, baseType: !1634)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !373, line: 28, baseType: !324)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1392, file: !1041, line: 836, baseType: !1633, size: 32, offset: 5152)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1392, file: !1041, line: 840, baseType: !389, size: 64, offset: 5184)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1392, file: !1041, line: 849, baseType: !1391, size: 64, offset: 5248)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1392, file: !1041, line: 852, baseType: !1391, size: 64, offset: 5312)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1392, file: !1041, line: 857, baseType: !284, size: 128, offset: 5376)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1392, file: !1041, line: 858, baseType: !284, size: 128, offset: 5504)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1392, file: !1041, line: 859, baseType: !1391, size: 64, offset: 5632)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1392, file: !1041, line: 867, baseType: !284, size: 128, offset: 5696)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1392, file: !1041, line: 868, baseType: !284, size: 128, offset: 5824)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1392, file: !1041, line: 871, baseType: !1645, size: 64, offset: 5952)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !94, line: 59, size: 768, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1653, !1654, !1660, !1661}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1646, file: !94, line: 61, baseType: !1404, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1646, file: !94, line: 62, baseType: !7, size: 32, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1646, file: !94, line: 63, baseType: !298, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1646, file: !94, line: 65, baseType: !1652, size: 256, offset: 64)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 256, elements: !1336)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1646, file: !94, line: 66, baseType: !703, size: 64, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1646, file: !94, line: 68, baseType: !1655, size: 128, offset: 384)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !992, line: 40, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !992, line: 36, size: 128, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1656, file: !992, line: 37, baseType: !298)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1656, file: !992, line: 38, baseType: !284, size: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1646, file: !94, line: 69, baseType: !430, size: 128, align: 64, offset: 512)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1646, file: !94, line: 70, baseType: !1662, size: 128, offset: 640)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1663, size: 128, elements: !1545)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !94, line: 54, size: 128, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1663, file: !94, line: 55, baseType: !324, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1663, file: !94, line: 56, baseType: !1667, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !94, line: 56, flags: DIFlagFwdDecl)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1392, file: !1041, line: 872, baseType: !1670, size: 512, offset: 6016)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 512, elements: !1336)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1392, file: !1041, line: 873, baseType: !284, size: 128, offset: 6528)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1392, file: !1041, line: 874, baseType: !284, size: 128, offset: 6656)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1392, file: !1041, line: 876, baseType: !1674, size: 64, offset: 6784)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1676, line: 26, size: 192, elements: !1677)
!1676 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1675, file: !1676, line: 27, baseType: !7, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1675, file: !1676, line: 28, baseType: !1680, size: 128, offset: 64)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1681, line: 43, size: 128, elements: !1682)
!1681 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1680, file: !1681, line: 44, baseType: !891)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1680, file: !1681, line: 45, baseType: !284, size: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1392, file: !1041, line: 879, baseType: !773, size: 64, offset: 6848)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1392, file: !1041, line: 882, baseType: !773, size: 64, offset: 6912)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1392, file: !1041, line: 884, baseType: !486, size: 64, offset: 6976)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1392, file: !1041, line: 885, baseType: !486, size: 64, offset: 7040)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1392, file: !1041, line: 890, baseType: !486, size: 64, offset: 7104)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1392, file: !1041, line: 891, baseType: !1691, size: 128, offset: 7168)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1041, line: 242, size: 128, elements: !1692)
!1692 = !{!1693, !1694, !1695}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1691, file: !1041, line: 244, baseType: !486, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1691, file: !1041, line: 245, baseType: !486, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1691, file: !1041, line: 246, baseType: !891, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1392, file: !1041, line: 900, baseType: !389, size: 64, offset: 7296)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1392, file: !1041, line: 901, baseType: !389, size: 64, offset: 7360)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1392, file: !1041, line: 904, baseType: !486, size: 64, offset: 7424)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1392, file: !1041, line: 907, baseType: !486, size: 64, offset: 7488)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1392, file: !1041, line: 910, baseType: !389, size: 64, offset: 7552)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1392, file: !1041, line: 911, baseType: !389, size: 64, offset: 7616)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1392, file: !1041, line: 914, baseType: !1703, size: 640, offset: 7680)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1704, line: 123, size: 640, elements: !1705)
!1704 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1705 = !{!1706, !1712, !1713}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1703, file: !1704, line: 124, baseType: !1707, size: 576)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1708, size: 576, elements: !341)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1704, line: 108, size: 192, elements: !1709)
!1709 = !{!1710, !1711}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1708, file: !1704, line: 109, baseType: !486, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1708, file: !1704, line: 110, baseType: !1517, size: 128, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1703, file: !1704, line: 125, baseType: !7, size: 32, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1703, file: !1704, line: 126, baseType: !7, size: 32, offset: 608)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1392, file: !1041, line: 917, baseType: !1715, size: 192, offset: 8320)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1704, line: 134, size: 192, elements: !1716)
!1716 = !{!1717, !1718}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1715, file: !1704, line: 135, baseType: !430, size: 128, align: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1715, file: !1704, line: 136, baseType: !7, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1392, file: !1041, line: 923, baseType: !1720, size: 64, offset: 8512)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1723, line: 111, size: 1280, elements: !1724)
!1723 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1724 = !{!1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1744, !1745, !1746, !1747, !1748, !1749, !1856, !1857, !1858, !1859, !1885, !1888, !1898}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1722, file: !1723, line: 112, baseType: !865, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1722, file: !1723, line: 120, baseType: !500, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1722, file: !1723, line: 121, baseType: !508, size: 32, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1722, file: !1723, line: 122, baseType: !500, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1722, file: !1723, line: 123, baseType: !508, size: 32, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1722, file: !1723, line: 124, baseType: !500, size: 32, offset: 160)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1722, file: !1723, line: 125, baseType: !508, size: 32, offset: 192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1722, file: !1723, line: 126, baseType: !500, size: 32, offset: 224)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1722, file: !1723, line: 127, baseType: !508, size: 32, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1722, file: !1723, line: 128, baseType: !7, size: 32, offset: 288)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1722, file: !1723, line: 129, baseType: !1736, size: 64, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1737, line: 26, baseType: !1738)
!1737 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1737, line: 24, size: 64, elements: !1739)
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1738, file: !1737, line: 25, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 64, elements: !1742)
!1742 = !{!1743}
!1743 = !DISubrange(count: 2)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1722, file: !1723, line: 130, baseType: !1736, size: 64, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1722, file: !1723, line: 131, baseType: !1736, size: 64, offset: 448)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1722, file: !1723, line: 132, baseType: !1736, size: 64, offset: 512)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1722, file: !1723, line: 133, baseType: !1736, size: 64, offset: 576)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1722, file: !1723, line: 135, baseType: !492, size: 8, offset: 640)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1722, file: !1723, line: 137, baseType: !1750, size: 64, offset: 704)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1752, line: 189, size: 1664, elements: !1753)
!1752 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1753 = !{!1754, !1755, !1758, !1763, !1764, !1767, !1768, !1773, !1774, !1775, !1776, !1778, !1779, !1780, !1781, !1782, !1820, !1841}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1751, file: !1752, line: 190, baseType: !1404, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1751, file: !1752, line: 191, baseType: !1756, size: 32, offset: 32)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1752, line: 28, baseType: !1757)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !285, line: 98, baseType: !1618)
!1758 = !DIDerivedType(tag: DW_TAG_member, scope: !1751, file: !1752, line: 192, baseType: !1759, size: 192, offset: 64)
!1759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1751, file: !1752, line: 192, size: 192, elements: !1760)
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1759, file: !1752, line: 193, baseType: !284, size: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1759, file: !1752, line: 194, baseType: !878, size: 192, align: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1751, file: !1752, line: 199, baseType: !885, size: 256, offset: 256)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1751, file: !1752, line: 200, baseType: !1765, size: 64, offset: 512)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1752, line: 200, flags: DIFlagFwdDecl)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1751, file: !1752, line: 201, baseType: !257, size: 64, offset: 576)
!1768 = !DIDerivedType(tag: DW_TAG_member, scope: !1751, file: !1752, line: 202, baseType: !1769, size: 64, offset: 640)
!1769 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1751, file: !1752, line: 202, size: 64, elements: !1770)
!1770 = !{!1771, !1772}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1769, file: !1752, line: 203, baseType: !604, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1769, file: !1752, line: 204, baseType: !604, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1751, file: !1752, line: 206, baseType: !604, size: 64, offset: 704)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1751, file: !1752, line: 207, baseType: !500, size: 32, offset: 768)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1751, file: !1752, line: 208, baseType: !508, size: 32, offset: 800)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1751, file: !1752, line: 209, baseType: !1777, size: 32, offset: 832)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1752, line: 31, baseType: !624)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1751, file: !1752, line: 210, baseType: !381, size: 16, offset: 864)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1751, file: !1752, line: 211, baseType: !381, size: 16, offset: 880)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1751, file: !1752, line: 215, baseType: !1380, size: 16, offset: 896)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1751, file: !1752, line: 222, baseType: !389, size: 64, offset: 960)
!1782 = !DIDerivedType(tag: DW_TAG_member, scope: !1751, file: !1752, line: 239, baseType: !1783, size: 320, offset: 1024)
!1783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1751, file: !1752, line: 239, size: 320, elements: !1784)
!1784 = !{!1785, !1812}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1783, file: !1752, line: 240, baseType: !1786, size: 320)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1752, line: 108, size: 320, elements: !1787)
!1787 = !{!1788, !1789, !1801, !1804, !1811}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1786, file: !1752, line: 110, baseType: !389, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, scope: !1786, file: !1752, line: 111, baseType: !1790, size: 64, offset: 64)
!1790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1786, file: !1752, line: 111, size: 64, elements: !1791)
!1791 = !{!1792, !1800}
!1792 = !DIDerivedType(tag: DW_TAG_member, scope: !1790, file: !1752, line: 112, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1790, file: !1752, line: 112, size: 64, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1793, file: !1752, line: 114, baseType: !977, size: 16)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1793, file: !1752, line: 115, baseType: !1797, size: 48, offset: 16)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 48, elements: !1798)
!1798 = !{!1799}
!1799 = !DISubrange(count: 6)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1790, file: !1752, line: 121, baseType: !389, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1786, file: !1752, line: 123, baseType: !1802, size: 64, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1752, line: 96, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1786, file: !1752, line: 124, baseType: !1805, size: 64, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1752, line: 102, size: 192, elements: !1807)
!1807 = !{!1808, !1809, !1810}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1806, file: !1752, line: 103, baseType: !430, size: 128, align: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1806, file: !1752, line: 104, baseType: !1404, size: 32, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1806, file: !1752, line: 105, baseType: !555, size: 8, offset: 160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1786, file: !1752, line: 125, baseType: !280, size: 64, offset: 256)
!1812 = !DIDerivedType(tag: DW_TAG_member, scope: !1783, file: !1752, line: 241, baseType: !1813, size: 320)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1783, file: !1752, line: 241, size: 320, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818, !1819}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1813, file: !1752, line: 242, baseType: !389, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1813, file: !1752, line: 243, baseType: !389, size: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1813, file: !1752, line: 244, baseType: !1802, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1813, file: !1752, line: 245, baseType: !1805, size: 64, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1813, file: !1752, line: 246, baseType: !340, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, scope: !1751, file: !1752, line: 254, baseType: !1821, size: 256, offset: 1344)
!1821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1751, file: !1752, line: 254, size: 256, elements: !1822)
!1822 = !{!1823, !1829}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1821, file: !1752, line: 255, baseType: !1824, size: 256)
!1824 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1752, line: 128, size: 256, elements: !1825)
!1825 = !{!1826, !1827}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1824, file: !1752, line: 129, baseType: !257, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1824, file: !1752, line: 130, baseType: !1828, size: 256)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 256, elements: !1336)
!1829 = !DIDerivedType(tag: DW_TAG_member, scope: !1821, file: !1752, line: 256, baseType: !1830, size: 256)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1821, file: !1752, line: 256, size: 256, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1830, file: !1752, line: 258, baseType: !284, size: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1830, file: !1752, line: 259, baseType: !1834, size: 128, offset: 128)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1835, line: 22, size: 128, elements: !1836)
!1835 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1836 = !{!1837, !1840}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1834, file: !1835, line: 23, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1835, line: 23, flags: DIFlagFwdDecl)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1834, file: !1835, line: 24, baseType: !389, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1751, file: !1752, line: 274, baseType: !1842, size: 64, offset: 1600)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1752, line: 170, size: 192, elements: !1844)
!1844 = !{!1845, !1854, !1855}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1843, file: !1752, line: 171, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1752, line: 165, baseType: !1847)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!324, !1750, !1850, !1852, !1750}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1824)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1843, file: !1752, line: 172, baseType: !1750, size: 64, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1843, file: !1752, line: 173, baseType: !1802, size: 64, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1722, file: !1723, line: 138, baseType: !1750, size: 64, offset: 768)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1722, file: !1723, line: 139, baseType: !1750, size: 64, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1722, file: !1723, line: 140, baseType: !1750, size: 64, offset: 896)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1722, file: !1723, line: 145, baseType: !1860, size: 64, offset: 960)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1862, line: 13, size: 896, elements: !1863)
!1862 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1861, file: !1862, line: 14, baseType: !1404, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1861, file: !1862, line: 15, baseType: !865, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1861, file: !1862, line: 16, baseType: !865, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1861, file: !1862, line: 21, baseType: !795, size: 64, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1861, file: !1862, line: 27, baseType: !389, size: 64, offset: 192)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1861, file: !1862, line: 28, baseType: !389, size: 64, offset: 256)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1861, file: !1862, line: 29, baseType: !795, size: 64, offset: 320)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1861, file: !1862, line: 32, baseType: !707, size: 128, offset: 384)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1861, file: !1862, line: 33, baseType: !500, size: 32, offset: 512)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1861, file: !1862, line: 37, baseType: !795, size: 64, offset: 576)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1861, file: !1862, line: 44, baseType: !1875, size: 256, offset: 640)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1876, line: 15, size: 256, elements: !1877)
!1876 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1877 = !{!1878, !1879, !1880, !1881, !1882, !1883, !1884}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1875, file: !1876, line: 16, baseType: !891)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1875, file: !1876, line: 18, baseType: !324, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1875, file: !1876, line: 19, baseType: !324, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1875, file: !1876, line: 20, baseType: !324, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1875, file: !1876, line: 21, baseType: !324, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1875, file: !1876, line: 22, baseType: !389, size: 64, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1875, file: !1876, line: 23, baseType: !389, size: 64, offset: 192)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1722, file: !1723, line: 146, baseType: !1886, size: 64, offset: 1024)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !501, line: 18, flags: DIFlagFwdDecl)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1722, file: !1723, line: 147, baseType: !1889, size: 64, offset: 1088)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1723, line: 25, size: 64, elements: !1891)
!1891 = !{!1892, !1893, !1894}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1890, file: !1723, line: 26, baseType: !865, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1890, file: !1723, line: 27, baseType: !324, size: 32, offset: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1890, file: !1723, line: 28, baseType: !1895, offset: 64)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !508, elements: !1896)
!1896 = !{!1897}
!1897 = !DISubrange(count: 0)
!1898 = !DIDerivedType(tag: DW_TAG_member, scope: !1722, file: !1723, line: 149, baseType: !1899, size: 128, offset: 1152)
!1899 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1722, file: !1723, line: 149, size: 128, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1899, file: !1723, line: 150, baseType: !324, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1899, file: !1723, line: 151, baseType: !430, size: 128, align: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1392, file: !1041, line: 926, baseType: !1720, size: 64, offset: 8576)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1392, file: !1041, line: 929, baseType: !1720, size: 64, offset: 8640)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1392, file: !1041, line: 933, baseType: !1750, size: 64, offset: 8704)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1392, file: !1041, line: 943, baseType: !1907, size: 128, offset: 8768)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 128, elements: !1908)
!1908 = !{!1909}
!1909 = !DISubrange(count: 16)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1392, file: !1041, line: 945, baseType: !1911, size: 64, offset: 8896)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1041, line: 49, flags: DIFlagFwdDecl)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1392, file: !1041, line: 956, baseType: !1914, size: 64, offset: 8960)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1041, line: 45, flags: DIFlagFwdDecl)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1392, file: !1041, line: 959, baseType: !1917, size: 64, offset: 9024)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1041, line: 959, flags: DIFlagFwdDecl)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1392, file: !1041, line: 962, baseType: !1920, size: 64, offset: 9088)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1041, line: 66, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1392, file: !1041, line: 966, baseType: !1923, size: 64, offset: 9152)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1925, line: 35, flags: DIFlagFwdDecl)
!1925 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1392, file: !1041, line: 969, baseType: !1927, size: 64, offset: 9216)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1929, line: 82, size: 7296, elements: !1930)
!1929 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1930 = !{!1931, !1932, !1933, !1934, !1935, !1936, !1937, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1966, !1975, !1976, !1978, !1979, !1980, !1983, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2013, !2014, !2021, !2022, !2023, !2024, !2025, !2026}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1928, file: !1929, line: 83, baseType: !1404, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1928, file: !1929, line: 84, baseType: !865, size: 32, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1928, file: !1929, line: 85, baseType: !324, size: 32, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1928, file: !1929, line: 86, baseType: !284, size: 128, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1928, file: !1929, line: 88, baseType: !1655, size: 128, offset: 256)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1928, file: !1929, line: 91, baseType: !1391, size: 64, offset: 384)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1928, file: !1929, line: 94, baseType: !1938, size: 192, offset: 448)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1939, line: 30, size: 192, elements: !1940)
!1939 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1938, file: !1939, line: 31, baseType: !284, size: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1938, file: !1939, line: 32, baseType: !1943, size: 64, offset: 128)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1944, line: 25, baseType: !1945)
!1944 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1944, line: 23, size: 64, elements: !1946)
!1946 = !{!1947}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1945, file: !1944, line: 24, baseType: !1544, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1928, file: !1929, line: 97, baseType: !703, size: 64, offset: 640)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1928, file: !1929, line: 100, baseType: !324, size: 32, offset: 704)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1928, file: !1929, line: 106, baseType: !324, size: 32, offset: 736)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1928, file: !1929, line: 107, baseType: !1391, size: 64, offset: 768)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1928, file: !1929, line: 110, baseType: !324, size: 32, offset: 832)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1928, file: !1929, line: 111, baseType: !7, size: 32, offset: 864)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1928, file: !1929, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1928, file: !1929, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1928, file: !1929, line: 128, baseType: !324, size: 32, offset: 928)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1928, file: !1929, line: 129, baseType: !284, size: 128, offset: 960)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1928, file: !1929, line: 132, baseType: !1466, size: 512, offset: 1088)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1928, file: !1929, line: 133, baseType: !1474, size: 64, offset: 1600)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1928, file: !1929, line: 140, baseType: !1961, size: 256, offset: 1664)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1962, size: 256, elements: !1742)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1929, line: 38, size: 128, elements: !1963)
!1963 = !{!1964, !1965}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1962, file: !1929, line: 39, baseType: !486, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1962, file: !1929, line: 40, baseType: !486, size: 64, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1928, file: !1929, line: 146, baseType: !1967, size: 192, offset: 1920)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1929, line: 66, size: 192, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1967, file: !1929, line: 67, baseType: !1970, size: 192)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1929, line: 47, size: 192, elements: !1971)
!1971 = !{!1972, !1973, !1974}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1970, file: !1929, line: 48, baseType: !797, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1970, file: !1929, line: 49, baseType: !797, size: 64, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1970, file: !1929, line: 50, baseType: !797, size: 64, offset: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1928, file: !1929, line: 150, baseType: !1703, size: 640, offset: 2112)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1928, file: !1929, line: 153, baseType: !1977, size: 256, offset: 2752)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1645, size: 256, elements: !1336)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1928, file: !1929, line: 159, baseType: !1645, size: 64, offset: 3008)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1928, file: !1929, line: 162, baseType: !324, size: 32, offset: 3072)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1928, file: !1929, line: 164, baseType: !1981, size: 64, offset: 3136)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1929, line: 164, flags: DIFlagFwdDecl)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1928, file: !1929, line: 175, baseType: !1984, size: 32, offset: 3200)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !453, line: 805, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !453, line: 798, size: 32, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1985, file: !453, line: 803, baseType: !452, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1985, file: !453, line: 804, baseType: !298, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1928, file: !1929, line: 176, baseType: !486, size: 64, offset: 3264)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1928, file: !1929, line: 176, baseType: !486, size: 64, offset: 3328)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1928, file: !1929, line: 176, baseType: !486, size: 64, offset: 3392)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1928, file: !1929, line: 176, baseType: !486, size: 64, offset: 3456)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1928, file: !1929, line: 177, baseType: !486, size: 64, offset: 3520)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1928, file: !1929, line: 178, baseType: !486, size: 64, offset: 3584)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1928, file: !1929, line: 179, baseType: !1691, size: 128, offset: 3648)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1928, file: !1929, line: 180, baseType: !389, size: 64, offset: 3776)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1928, file: !1929, line: 180, baseType: !389, size: 64, offset: 3840)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1928, file: !1929, line: 180, baseType: !389, size: 64, offset: 3904)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1928, file: !1929, line: 180, baseType: !389, size: 64, offset: 3968)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1928, file: !1929, line: 181, baseType: !389, size: 64, offset: 4032)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1928, file: !1929, line: 181, baseType: !389, size: 64, offset: 4096)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1928, file: !1929, line: 181, baseType: !389, size: 64, offset: 4160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1928, file: !1929, line: 181, baseType: !389, size: 64, offset: 4224)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1928, file: !1929, line: 182, baseType: !389, size: 64, offset: 4288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1928, file: !1929, line: 182, baseType: !389, size: 64, offset: 4352)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1928, file: !1929, line: 182, baseType: !389, size: 64, offset: 4416)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1928, file: !1929, line: 182, baseType: !389, size: 64, offset: 4480)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1928, file: !1929, line: 183, baseType: !389, size: 64, offset: 4544)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1928, file: !1929, line: 183, baseType: !389, size: 64, offset: 4608)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1928, file: !1929, line: 184, baseType: !2011, offset: 4672)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2012, line: 12, elements: !312)
!2012 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1928, file: !1929, line: 192, baseType: !488, size: 64, offset: 4672)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1928, file: !1929, line: 203, baseType: !2015, size: 2048, offset: 4736)
!2015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2016, size: 2048, elements: !1908)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2017, line: 43, size: 128, elements: !2018)
!2017 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2016, file: !2017, line: 44, baseType: !388, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2016, file: !2017, line: 45, baseType: !388, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1928, file: !1929, line: 220, baseType: !555, size: 8, offset: 6784)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1928, file: !1929, line: 221, baseType: !1380, size: 16, offset: 6800)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1928, file: !1929, line: 222, baseType: !1380, size: 16, offset: 6816)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1928, file: !1929, line: 224, baseType: !1155, size: 64, offset: 6848)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1928, file: !1929, line: 227, baseType: !791, size: 192, offset: 6912)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1928, file: !1929, line: 233, baseType: !791, size: 192, offset: 7104)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1392, file: !1041, line: 970, baseType: !2028, size: 64, offset: 9280)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1929, line: 20, size: 16576, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2029, file: !1929, line: 21, baseType: !298)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2029, file: !1929, line: 22, baseType: !1404, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2029, file: !1929, line: 23, baseType: !1655, size: 128, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2029, file: !1929, line: 24, baseType: !2035, size: 16384, offset: 192)
!2035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2036, size: 16384, elements: !345)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1939, line: 49, size: 256, elements: !2037)
!2037 = !{!2038}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2036, file: !1939, line: 50, baseType: !2039, size: 256)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1939, line: 35, size: 256, elements: !2040)
!2040 = !{!2041, !2048, !2049, !2055}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2039, file: !1939, line: 37, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2043, line: 19, baseType: !2044)
!2043 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2043, line: 18, baseType: !2046)
!2046 = !DISubroutineType(types: !2047)
!2047 = !{null, !324}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2039, file: !1939, line: 38, baseType: !389, size: 64, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2039, file: !1939, line: 44, baseType: !2050, size: 64, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2043, line: 22, baseType: !2051)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2043, line: 21, baseType: !2053)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{null}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2039, file: !1939, line: 46, baseType: !1943, size: 64, offset: 192)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1392, file: !1041, line: 971, baseType: !1943, size: 64, offset: 9344)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1392, file: !1041, line: 972, baseType: !1943, size: 64, offset: 9408)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1392, file: !1041, line: 974, baseType: !1943, size: 64, offset: 9472)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1392, file: !1041, line: 975, baseType: !1938, size: 192, offset: 9536)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1392, file: !1041, line: 976, baseType: !389, size: 64, offset: 9728)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1392, file: !1041, line: 977, baseType: !386, size: 64, offset: 9792)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1392, file: !1041, line: 978, baseType: !7, size: 32, offset: 9856)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1392, file: !1041, line: 980, baseType: !433, size: 64, offset: 9920)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1392, file: !1041, line: 989, baseType: !2065, size: 128, offset: 9984)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2066, line: 35, size: 128, elements: !2067)
!2066 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !{!2068, !2069, !2070}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2065, file: !2066, line: 36, baseType: !324, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2065, file: !2066, line: 37, baseType: !865, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2065, file: !2066, line: 38, baseType: !2071, size: 64, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2066, line: 23, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1392, file: !1041, line: 992, baseType: !486, size: 64, offset: 10112)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1392, file: !1041, line: 993, baseType: !486, size: 64, offset: 10176)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1392, file: !1041, line: 996, baseType: !298, offset: 10240)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1392, file: !1041, line: 999, baseType: !891, offset: 10240)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1392, file: !1041, line: 1001, baseType: !2078, size: 64, offset: 10240)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1041, line: 636, size: 64, elements: !2079)
!2079 = !{!2080}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2078, file: !1041, line: 637, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1392, file: !1041, line: 1005, baseType: !870, size: 128, offset: 10304)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1392, file: !1041, line: 1007, baseType: !1391, size: 64, offset: 10432)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1392, file: !1041, line: 1009, baseType: !2085, size: 64, offset: 10496)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1041, line: 1009, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1392, file: !1041, line: 1043, baseType: !257, size: 64, offset: 10560)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1392, file: !1041, line: 1046, baseType: !2089, size: 64, offset: 10624)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2091, line: 554, size: 128, elements: !2092)
!2091 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2092 = !{!2093, !3111}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2090, file: !2091, line: 555, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !160, line: 203, size: 832, elements: !2096)
!2096 = !{!2097, !2098, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3079, !3084, !3085, !3104, !3105, !3106, !3107, !3108, !3110}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2095, file: !160, line: 204, baseType: !2094, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2095, file: !160, line: 205, baseType: !2099, size: 64, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !2101, line: 167, size: 8512, elements: !2102)
!2101 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!2102 = !{!2103, !2104, !2105, !2106, !2110, !2111, !2112, !2185, !2186, !2381, !3046, !3047, !3048, !3049, !3050, !3051, !3054, !3055, !3058, !3059, !3060, !3063}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2100, file: !2101, line: 171, baseType: !324, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2100, file: !2101, line: 172, baseType: !324, size: 32, offset: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2100, file: !2101, line: 173, baseType: !324, size: 32, offset: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2100, file: !2101, line: 176, baseType: !2107, size: 256, offset: 96)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 256, elements: !2108)
!2108 = !{!2109}
!2109 = !DISubrange(count: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2100, file: !2101, line: 178, baseType: !381, size: 16, offset: 352)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2100, file: !2101, line: 179, baseType: !381, size: 16, offset: 368)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2100, file: !2101, line: 186, baseType: !2113, size: 64, offset: 384)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !2101, line: 149, size: 256, elements: !2115)
!2115 = !{!2116, !2117, !2118, !2181}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2114, file: !2101, line: 150, baseType: !430, size: 128, align: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2114, file: !2101, line: 151, baseType: !324, size: 32, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2114, file: !2101, line: 152, baseType: !2119, size: 64, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !2101, line: 53, size: 6592, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125, !2128, !2149, !2150, !2151, !2152, !2153, !2163}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !2120, file: !2101, line: 54, baseType: !948, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !2120, file: !2101, line: 60, baseType: !948, size: 64, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2120, file: !2101, line: 64, baseType: !389, size: 64, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !2120, file: !2101, line: 65, baseType: !2126, size: 64, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !2101, line: 65, flags: DIFlagFwdDecl)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2120, file: !2101, line: 66, baseType: !2129, size: 128, offset: 256)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2130, line: 105, size: 128, elements: !2131)
!2130 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2129, file: !2130, line: 110, baseType: !389, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2129, file: !2130, line: 118, baseType: !2134, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2130, line: 95, size: 448, elements: !2136)
!2136 = !{!2137, !2138, !2144, !2145, !2146, !2147, !2148}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2135, file: !2130, line: 96, baseType: !795, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2135, file: !2130, line: 97, baseType: !2139, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2130, line: 60, baseType: !2141)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !2143}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2135, file: !2130, line: 98, baseType: !2139, size: 64, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2135, file: !2130, line: 99, baseType: !555, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2135, file: !2130, line: 100, baseType: !555, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2135, file: !2130, line: 101, baseType: !430, size: 128, align: 64, offset: 256)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2135, file: !2130, line: 102, baseType: !2143, size: 64, offset: 384)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !2120, file: !2101, line: 68, baseType: !273, size: 5568, offset: 384)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !2120, file: !2101, line: 69, baseType: !291, size: 64, offset: 5952)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2120, file: !2101, line: 70, baseType: !324, size: 32, offset: 6016)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !2120, file: !2101, line: 70, baseType: !324, size: 32, offset: 6048)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2120, file: !2101, line: 71, baseType: !2154, size: 64, offset: 6080)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !2101, line: 48, size: 808, elements: !2156)
!2156 = !{!2157, !2161}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2155, file: !2101, line: 49, baseType: !2158, size: 296)
!2158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 296, elements: !2159)
!2159 = !{!2160}
!2160 = !DISubrange(count: 37)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2155, file: !2101, line: 50, baseType: !2162, size: 512, offset: 296)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 512, elements: !345)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !2120, file: !2101, line: 75, baseType: !2164, size: 448, offset: 6144)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !183, line: 124, size: 448, elements: !2165)
!2165 = !{!2166, !2177, !2178}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2164, file: !183, line: 125, baseType: !2167, size: 256)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !183, line: 102, size: 256, elements: !2168)
!2168 = !{!2169, !2170, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2167, file: !183, line: 103, baseType: !795, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2167, file: !183, line: 104, baseType: !284, size: 128, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2167, file: !183, line: 105, baseType: !2172, size: 64, offset: 192)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !183, line: 21, baseType: !2173)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DISubroutineType(types: !2175)
!2175 = !{null, !2176}
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2164, file: !183, line: 126, baseType: !430, size: 128, align: 64, offset: 256)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2164, file: !183, line: 129, baseType: !2179, size: 64, offset: 384)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !183, line: 18, flags: DIFlagFwdDecl)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2114, file: !2101, line: 153, baseType: !2182, offset: 256)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2119, elements: !2183)
!2183 = !{!2184}
!2184 = !DISubrange(count: -1)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2100, file: !2101, line: 187, baseType: !2120, size: 6592, offset: 448)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2100, file: !2101, line: 189, baseType: !2187, size: 64, offset: 7040)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2189)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !43, line: 1844, size: 960, elements: !2190)
!2190 = !{!2191, !2196, !2304, !2308, !2312, !2316, !2317, !2321, !2325, !2329, !2341, !2345, !2371, !2376, !2377}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2189, file: !43, line: 1845, baseType: !2192, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!2195, !2094}
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !160, line: 515, baseType: !7)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2189, file: !43, line: 1846, baseType: !2197, size: 64, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!324, !2200, !2303}
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !160, line: 22, size: 1344, elements: !2202)
!2202 = !{!2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2301, !2302}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !2201, file: !160, line: 23, baseType: !578, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !2201, file: !160, line: 24, baseType: !324, size: 32, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !2201, file: !160, line: 25, baseType: !494, size: 64, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !2201, file: !160, line: 26, baseType: !664, size: 64, offset: 128)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !2201, file: !160, line: 27, baseType: !791, size: 192, offset: 192)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !2201, file: !160, line: 28, baseType: !257, size: 64, offset: 384)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !2201, file: !160, line: 29, baseType: !257, size: 64, offset: 448)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !2201, file: !160, line: 30, baseType: !324, size: 32, offset: 512)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !2201, file: !160, line: 31, baseType: !555, size: 8, offset: 544)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !2201, file: !160, line: 33, baseType: !284, size: 128, offset: 576)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !2201, file: !160, line: 35, baseType: !2200, size: 64, offset: 704)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !2201, file: !160, line: 36, baseType: !1526, size: 8, offset: 768)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !2201, file: !160, line: 37, baseType: !2119, size: 64, offset: 832)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !2201, file: !160, line: 39, baseType: !7, size: 32, offset: 896)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !2201, file: !160, line: 41, baseType: !298, offset: 928)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !2201, file: !160, line: 42, baseType: !2099, size: 64, offset: 960)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !2201, file: !160, line: 43, baseType: !2220, size: 64, offset: 1024)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !31, line: 165, size: 4672, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2233, !2234, !2235, !2236, !2237, !2238, !2294, !2295, !2296, !2297, !2299, !2300}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2221, file: !31, line: 166, baseType: !486, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2221, file: !31, line: 167, baseType: !878, size: 192, align: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !2221, file: !31, line: 168, baseType: !284, size: 128, offset: 256)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2221, file: !31, line: 169, baseType: !389, size: 64, offset: 384)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !2221, file: !31, line: 170, baseType: !389, size: 64, offset: 448)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2221, file: !31, line: 172, baseType: !2229, size: 32, offset: 512)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2230, line: 19, size: 32, elements: !2231)
!2230 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2231 = !{!2232}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2229, file: !2230, line: 20, baseType: !1404, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !2221, file: !31, line: 173, baseType: !7, size: 32, offset: 544)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !2221, file: !31, line: 174, baseType: !7, size: 32, offset: 576)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !2221, file: !31, line: 175, baseType: !7, size: 32, offset: 608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !2221, file: !31, line: 175, baseType: !7, size: 32, offset: 640)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !2221, file: !31, line: 181, baseType: !795, size: 64, offset: 704)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !2221, file: !31, line: 183, baseType: !2239, size: 2688, offset: 768)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !31, line: 107, size: 2688, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2270, !2271, !2272, !2273, !2274, !2292, !2293}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !2239, file: !31, line: 108, baseType: !2220, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2239, file: !31, line: 110, baseType: !389, size: 64, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !2239, file: !31, line: 111, baseType: !389, size: 64, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !2239, file: !31, line: 113, baseType: !284, size: 128, offset: 192)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !2239, file: !31, line: 114, baseType: !284, size: 128, offset: 320)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !2239, file: !31, line: 115, baseType: !284, size: 128, offset: 448)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !2239, file: !31, line: 116, baseType: !284, size: 128, offset: 576)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !2239, file: !31, line: 117, baseType: !298, offset: 704)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !2239, file: !31, line: 119, baseType: !2250, size: 256, offset: 704)
!2250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2251, size: 256, elements: !1336)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2252, line: 97, size: 64, elements: !2253)
!2252 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2253 = !{!2254}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2251, file: !2252, line: 98, baseType: !801, size: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !2239, file: !31, line: 121, baseType: !389, size: 64, offset: 960)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !2239, file: !31, line: 123, baseType: !389, size: 64, offset: 1024)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !2239, file: !31, line: 124, baseType: !389, size: 64, offset: 1088)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !2239, file: !31, line: 125, baseType: !389, size: 64, offset: 1152)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !2239, file: !31, line: 126, baseType: !389, size: 64, offset: 1216)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !2239, file: !31, line: 127, baseType: !389, size: 64, offset: 1280)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !2239, file: !31, line: 135, baseType: !389, size: 64, offset: 1344)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !2239, file: !31, line: 136, baseType: !389, size: 64, offset: 1408)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !2239, file: !31, line: 138, baseType: !2264, size: 128, offset: 1472)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !2265, line: 76, size: 128, elements: !2266)
!2265 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!2266 = !{!2267, !2268, !2269}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2264, file: !2265, line: 78, baseType: !2251, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !2264, file: !2265, line: 80, baseType: !7, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2264, file: !2265, line: 81, baseType: !891, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !2239, file: !31, line: 139, baseType: !324, size: 32, offset: 1600)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !2239, file: !31, line: 140, baseType: !30, size: 32, offset: 1632)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !2239, file: !31, line: 142, baseType: !298, offset: 1664)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !2239, file: !31, line: 143, baseType: !284, size: 128, offset: 1664)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !2239, file: !31, line: 144, baseType: !2275, size: 704, offset: 1792)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !183, line: 115, size: 704, elements: !2276)
!2276 = !{!2277, !2278, !2290, !2291}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2275, file: !183, line: 116, baseType: !2167, size: 256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2275, file: !183, line: 117, baseType: !2279, size: 320, offset: 256)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2280, line: 11, size: 320, elements: !2281)
!2280 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2281 = !{!2282, !2283, !2284, !2289}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2279, file: !2280, line: 16, baseType: !707, size: 128)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2279, file: !2280, line: 17, baseType: !389, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2279, file: !2280, line: 18, baseType: !2285, size: 64, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DISubroutineType(types: !2287)
!2287 = !{null, !2288}
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2279, file: !2280, line: 19, baseType: !480, size: 32, offset: 256)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2275, file: !183, line: 120, baseType: !2179, size: 64, offset: 576)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2275, file: !183, line: 121, baseType: !324, size: 32, offset: 640)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !2239, file: !31, line: 146, baseType: !389, size: 64, offset: 2496)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !2239, file: !31, line: 148, baseType: !284, size: 128, offset: 2560)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !2221, file: !31, line: 184, baseType: !284, size: 128, offset: 3456)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !2221, file: !31, line: 190, baseType: !1655, size: 128, offset: 3584)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2221, file: !31, line: 192, baseType: !272, size: 64, offset: 3712)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2221, file: !31, line: 193, baseType: !2298, size: 512, offset: 3776)
!2298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 512, elements: !345)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2221, file: !31, line: 194, baseType: !272, size: 64, offset: 4288)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !2221, file: !31, line: 196, baseType: !2279, size: 320, offset: 4352)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !2201, file: !160, line: 46, baseType: !324, size: 32, offset: 1088)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !2201, file: !160, line: 48, baseType: !791, size: 192, offset: 1152)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !285, line: 150, baseType: !7)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2189, file: !43, line: 1847, baseType: !2305, size: 64, offset: 128)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{null, !2099, !2303}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2189, file: !43, line: 1848, baseType: !2309, size: 64, offset: 192)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!324, !2200, !948, !838, !7}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2189, file: !43, line: 1849, baseType: !2313, size: 64, offset: 256)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!324, !2200, !2303, !7, !389}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2189, file: !43, line: 1850, baseType: !2313, size: 64, offset: 320)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2189, file: !43, line: 1851, baseType: !2318, size: 64, offset: 384)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DISubroutineType(types: !2320)
!2320 = !{!7, !2099, !7}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2189, file: !43, line: 1853, baseType: !2322, size: 64, offset: 448)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{null, !2099}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2189, file: !43, line: 1854, baseType: !2326, size: 64, offset: 512)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!324, !2099}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2189, file: !43, line: 1855, baseType: !2330, size: 64, offset: 576)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!324, !2200, !2333}
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !2335, line: 324, size: 128, elements: !2336)
!2335 = !DIFile(filename: "./include/uapi/linux/hdreg.h", directory: "/home/lizy2001/genbc/linux")
!2336 = !{!2337, !2338, !2339, !2340}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !2334, file: !2335, line: 325, baseType: !492, size: 8)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !2334, file: !2335, line: 326, baseType: !492, size: 8, offset: 8)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "cylinders", scope: !2334, file: !2335, line: 327, baseType: !381, size: 16, offset: 16)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2334, file: !2335, line: 328, baseType: !389, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2189, file: !43, line: 1857, baseType: !2342, size: 64, offset: 640)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DISubroutineType(types: !2344)
!2344 = !{null, !2200, !389}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2189, file: !43, line: 1858, baseType: !2346, size: 64, offset: 704)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!324, !2099, !948, !7, !2349, !257}
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !43, line: 354, baseType: !2350)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = !DISubroutineType(types: !2352)
!2352 = !{!324, !2353, !7, !257}
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2355, line: 106, size: 512, elements: !2356)
!2355 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2366, !2367}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2354, file: !2355, line: 107, baseType: !487, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2354, file: !2355, line: 108, baseType: !487, size: 64, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2354, file: !2355, line: 109, baseType: !487, size: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2354, file: !2355, line: 110, baseType: !1527, size: 8, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2354, file: !2355, line: 111, baseType: !1527, size: 8, offset: 200)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2354, file: !2355, line: 112, baseType: !1527, size: 8, offset: 208)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2354, file: !2355, line: 113, baseType: !1527, size: 8, offset: 216)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2354, file: !2355, line: 114, baseType: !2365, size: 32, offset: 224)
!2365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 32, elements: !1336)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2354, file: !2355, line: 115, baseType: !487, size: 64, offset: 256)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2354, file: !2355, line: 116, baseType: !2368, size: 192, offset: 320)
!2368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 192, elements: !2369)
!2369 = !{!2370}
!2370 = !DISubrange(count: 24)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2189, file: !43, line: 1860, baseType: !2372, size: 64, offset: 768)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DISubroutineType(types: !2374)
!2374 = !{!340, !2099, !2375}
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2189, file: !43, line: 1861, baseType: !698, size: 64, offset: 832)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2189, file: !43, line: 1862, baseType: !2378, size: 64, offset: 896)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2380)
!2380 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !43, line: 41, flags: DIFlagFwdDecl)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2100, file: !2101, line: 190, baseType: !2382, size: 64, offset: 7104)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !43, line: 399, size: 14464, elements: !2384)
!2384 = !{!2385, !2596, !2718, !2719, !2722, !2725, !2821, !2822, !2823, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2882, !2891, !2892, !2893, !2894, !2895, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !3001, !3002, !3003, !3004, !3005, !3006, !3039, !3040, !3041, !3042}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2383, file: !43, line: 400, baseType: !2386, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !43, line: 130, size: 2176, elements: !2388)
!2388 = !{!2389, !2390, !2393, !2477, !2478, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2492, !2499, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2594, !2595}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2387, file: !43, line: 131, baseType: !2382, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2387, file: !43, line: 132, baseType: !2391, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !43, line: 132, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2387, file: !43, line: 133, baseType: !2394, size: 64, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !2396, line: 16, size: 4032, elements: !2397)
!2396 = !DIFile(filename: "./include/linux/blk-mq.h", directory: "/home/lizy2001/genbc/linux")
!2397 = !{!2398, !2404, !2405, !2408, !2409, !2410, !2411, !2412, !2413, !2416, !2417, !2432, !2433, !2434, !2435, !2436, !2438, !2439, !2440, !2441, !2444, !2445, !2446, !2447, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462}
!2398 = !DIDerivedType(tag: DW_TAG_member, scope: !2395, file: !2396, line: 17, baseType: !2399, size: 192)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2395, file: !2396, line: 17, size: 192, elements: !2400)
!2400 = !{!2401, !2402, !2403}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2399, file: !2396, line: 19, baseType: !298)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch", scope: !2399, file: !2396, line: 27, baseType: !284, size: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2399, file: !2396, line: 32, baseType: !389, size: 64, offset: 128)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2395, file: !2396, line: 38, baseType: !2275, size: 704, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2395, file: !2396, line: 40, baseType: !2406, size: 64, offset: 896)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1540, line: 756, baseType: !2407)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1541, size: 64, elements: !1545)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu", scope: !2395, file: !2396, line: 45, baseType: !324, size: 32, offset: 960)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "next_cpu_batch", scope: !2395, file: !2396, line: 50, baseType: !324, size: 32, offset: 992)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2395, file: !2396, line: 53, baseType: !389, size: 64, offset: 1024)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_data", scope: !2395, file: !2396, line: 59, baseType: !257, size: 64, offset: 1088)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2395, file: !2396, line: 63, baseType: !2382, size: 64, offset: 1152)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2395, file: !2396, line: 65, baseType: !2414, size: 64, offset: 1216)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !43, line: 40, flags: DIFlagFwdDecl)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2395, file: !2396, line: 71, baseType: !257, size: 64, offset: 1280)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_map", scope: !2395, file: !2396, line: 77, baseType: !2418, size: 192, offset: 1344)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap", file: !2419, line: 48, size: 192, elements: !2420)
!2419 = !DIFile(filename: "./include/linux/sbitmap.h", directory: "/home/lizy2001/genbc/linux")
!2420 = !{!2421, !2422, !2423, !2424}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2418, file: !2419, line: 52, baseType: !7, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2418, file: !2419, line: 57, baseType: !7, size: 32, offset: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "map_nr", scope: !2418, file: !2419, line: 62, baseType: !7, size: 32, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2418, file: !2419, line: 67, baseType: !2425, size: 64, offset: 128)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_word", file: !2419, line: 20, size: 192, elements: !2427)
!2427 = !{!2428, !2429, !2430, !2431}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2426, file: !2419, line: 24, baseType: !389, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !2426, file: !2419, line: 29, baseType: !389, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "cleared", scope: !2426, file: !2419, line: 34, baseType: !389, size: 64, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "swap_lock", scope: !2426, file: !2419, line: 39, baseType: !298, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_from", scope: !2395, file: !2396, line: 83, baseType: !2391, size: 64, offset: 1536)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_busy", scope: !2395, file: !2396, line: 89, baseType: !7, size: 32, offset: 1600)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2395, file: !2396, line: 92, baseType: !381, size: 16, offset: 1632)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ctx", scope: !2395, file: !2396, line: 94, baseType: !381, size: 16, offset: 1648)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ctxs", scope: !2395, file: !2396, line: 96, baseType: !2437, size: 64, offset: 1664)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait_lock", scope: !2395, file: !2396, line: 99, baseType: !298, offset: 1728)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_wait", scope: !2395, file: !2396, line: 104, baseType: !991, size: 320, offset: 1728)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "wait_index", scope: !2395, file: !2396, line: 110, baseType: !865, size: 32, offset: 2048)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2395, file: !2396, line: 116, baseType: !2442, size: 64, offset: 2112)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tags", file: !2396, line: 9, flags: DIFlagFwdDecl)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sched_tags", scope: !2395, file: !2396, line: 122, baseType: !2442, size: 64, offset: 2176)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !2395, file: !2396, line: 125, baseType: !389, size: 64, offset: 2240)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !2395, file: !2396, line: 127, baseType: !389, size: 64, offset: 2304)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dispatched", scope: !2395, file: !2396, line: 130, baseType: !2448, size: 448, offset: 2368)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 448, elements: !2449)
!2449 = !{!2450}
!2450 = !DISubrange(count: 7)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2395, file: !2396, line: 133, baseType: !7, size: 32, offset: 2816)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "queue_num", scope: !2395, file: !2396, line: 135, baseType: !7, size: 32, offset: 2848)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !2395, file: !2396, line: 141, baseType: !865, size: 32, offset: 2880)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_queued", scope: !2395, file: !2396, line: 145, baseType: !865, size: 32, offset: 2912)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_online", scope: !2395, file: !2396, line: 148, baseType: !707, size: 128, offset: 2944)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "cpuhp_dead", scope: !2395, file: !2396, line: 150, baseType: !707, size: 128, offset: 3072)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2395, file: !2396, line: 152, baseType: !276, size: 512, offset: 3200)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "poll_considered", scope: !2395, file: !2396, line: 155, baseType: !389, size: 64, offset: 3712)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "poll_invoked", scope: !2395, file: !2396, line: 157, baseType: !389, size: 64, offset: 3776)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "poll_success", scope: !2395, file: !2396, line: 159, baseType: !389, size: 64, offset: 3840)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "hctx_list", scope: !2395, file: !2396, line: 175, baseType: !284, size: 128, offset: 3904)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "srcu", scope: !2395, file: !2396, line: 182, baseType: !2463, offset: 4032)
!2463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, elements: !2183)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srcu_struct", file: !2465, line: 16, size: 576, elements: !2466)
!2465 = !DIFile(filename: "./include/linux/srcutiny.h", directory: "/home/lizy2001/genbc/linux")
!2466 = !{!2467, !2469, !2470, !2471, !2472, !2473, !2474, !2476}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_lock_nesting", scope: !2464, file: !2465, line: 17, baseType: !2468, size: 32)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, size: 32, elements: !1742)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_idx", scope: !2464, file: !2465, line: 18, baseType: !1380, size: 16, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_running", scope: !2464, file: !2465, line: 19, baseType: !1526, size: 8, offset: 48)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_gp_waiting", scope: !2464, file: !2465, line: 20, baseType: !1526, size: 8, offset: 56)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_wq", scope: !2464, file: !2465, line: 21, baseType: !1680, size: 128, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_head", scope: !2464, file: !2465, line: 23, baseType: !433, size: 64, offset: 192)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_cb_tail", scope: !2464, file: !2465, line: 24, baseType: !2475, size: 64, offset: 256)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "srcu_work", scope: !2464, file: !2465, line: 25, baseType: !2167, size: 256, offset: 320)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2387, file: !43, line: 135, baseType: !7, size: 32, offset: 192)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2387, file: !43, line: 136, baseType: !2479, size: 32, offset: 224)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !43, line: 66, baseType: !482)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2387, file: !43, line: 138, baseType: !324, size: 32, offset: 256)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2387, file: !43, line: 139, baseType: !324, size: 32, offset: 288)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2387, file: !43, line: 142, baseType: !7, size: 32, offset: 320)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2387, file: !43, line: 143, baseType: !948, size: 64, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2387, file: !43, line: 145, baseType: !2094, size: 64, offset: 448)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2387, file: !43, line: 146, baseType: !2094, size: 64, offset: 512)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2387, file: !43, line: 148, baseType: !284, size: 128, offset: 576)
!2487 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !43, line: 157, baseType: !2488, size: 128, offset: 704)
!2488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !43, line: 157, size: 128, elements: !2489)
!2489 = !{!2490, !2491}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2488, file: !43, line: 158, baseType: !707, size: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2488, file: !43, line: 159, baseType: !284, size: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !43, line: 167, baseType: !2493, size: 192, offset: 832)
!2493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !43, line: 167, size: 192, elements: !2494)
!2494 = !{!2495, !2496, !2497, !2498}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2493, file: !43, line: 168, baseType: !878, size: 192, align: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2493, file: !43, line: 169, baseType: !1032, size: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2493, file: !43, line: 170, baseType: !257, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2493, file: !43, line: 171, baseType: !324, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !43, line: 180, baseType: !2500, size: 256, offset: 1024)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !43, line: 180, size: 256, elements: !2501)
!2501 = !{!2502, !2537}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2500, file: !43, line: 184, baseType: !2503, size: 192)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2500, file: !43, line: 181, size: 192, elements: !2504)
!2504 = !{!2505, !2535}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2503, file: !43, line: 182, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2508, line: 73, size: 448, elements: !2509)
!2508 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2509 = !{!2510, !2511, !2524, !2529, !2534}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2507, file: !2508, line: 74, baseType: !2382, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2507, file: !2508, line: 75, baseType: !2512, size: 64, offset: 64)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2508, line: 99, size: 704, elements: !2514)
!2514 = !{!2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2513, file: !2508, line: 100, baseType: !795, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2513, file: !2508, line: 101, baseType: !865, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2513, file: !2508, line: 102, baseType: !865, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2513, file: !2508, line: 105, baseType: !298, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2513, file: !2508, line: 107, baseType: !381, size: 16, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2513, file: !2508, line: 109, baseType: !856, size: 128, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2513, file: !2508, line: 110, baseType: !2506, size: 64, offset: 320)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2513, file: !2508, line: 111, baseType: !703, size: 64, offset: 384)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2513, file: !2508, line: 113, baseType: !2167, size: 256, offset: 448)
!2524 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 83, baseType: !2525, size: 128, offset: 128)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 83, size: 128, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2525, file: !2508, line: 84, baseType: !284, size: 128)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2525, file: !2508, line: 85, baseType: !1115, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2507, file: !2508, line: 87, baseType: !2530, size: 128, offset: 256)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2507, file: !2508, line: 87, size: 128, elements: !2531)
!2531 = !{!2532, !2533}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2530, file: !2508, line: 88, baseType: !707, size: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2530, file: !2508, line: 89, baseType: !430, size: 128, align: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2507, file: !2508, line: 92, baseType: !7, size: 32, offset: 384)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2503, file: !43, line: 183, baseType: !2536, size: 128, offset: 64)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 128, elements: !1742)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2500, file: !43, line: 190, baseType: !2538, size: 256)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2500, file: !43, line: 186, size: 256, elements: !2539)
!2539 = !{!2540, !2541, !2542}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2538, file: !43, line: 187, baseType: !7, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2538, file: !43, line: 188, baseType: !284, size: 128, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2538, file: !43, line: 189, baseType: !2543, size: 64, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !43, line: 62, baseType: !2545)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{null, !2386, !2547}
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !160, line: 58, baseType: !1526)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2387, file: !43, line: 193, baseType: !2099, size: 64, offset: 1280)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2387, file: !43, line: 194, baseType: !2119, size: 64, offset: 1344)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2387, file: !43, line: 200, baseType: !486, size: 64, offset: 1408)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2387, file: !43, line: 202, baseType: !486, size: 64, offset: 1472)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2387, file: !43, line: 212, baseType: !381, size: 16, offset: 1536)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2387, file: !43, line: 218, baseType: !381, size: 16, offset: 1552)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2387, file: !43, line: 221, baseType: !381, size: 16, offset: 1568)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2387, file: !43, line: 229, baseType: !381, size: 16, offset: 1584)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2387, file: !43, line: 230, baseType: !381, size: 16, offset: 1600)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2387, file: !43, line: 232, baseType: !42, size: 32, offset: 1632)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2387, file: !43, line: 233, baseType: !1404, size: 32, offset: 1664)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2387, file: !43, line: 235, baseType: !7, size: 32, offset: 1696)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2387, file: !43, line: 236, baseType: !389, size: 64, offset: 1728)
!2561 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !43, line: 238, baseType: !2562, size: 256, offset: 1792)
!2562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !43, line: 238, size: 256, elements: !2563)
!2563 = !{!2564, !2593}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2562, file: !43, line: 239, baseType: !2565, size: 256)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2566, line: 23, size: 256, elements: !2567)
!2566 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!2567 = !{!2568, !2590, !2592}
!2568 = !DIDerivedType(tag: DW_TAG_member, scope: !2565, file: !2566, line: 24, baseType: !2569, size: 128)
!2569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2565, file: !2566, line: 24, size: 128, elements: !2570)
!2570 = !{!2571, !2583}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2569, file: !2566, line: 25, baseType: !2572, size: 128)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !2573, line: 58, size: 128, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2581, !2582}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2572, file: !2573, line: 59, baseType: !424, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2572, file: !2573, line: 60, baseType: !2577, size: 32, offset: 64)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2572, file: !2573, line: 60, size: 32, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !2577, file: !2573, line: 61, baseType: !7, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !2577, file: !2573, line: 62, baseType: !865, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2572, file: !2573, line: 65, baseType: !977, size: 16, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2572, file: !2573, line: 65, baseType: !977, size: 16, offset: 112)
!2583 = !DIDerivedType(tag: DW_TAG_member, scope: !2569, file: !2566, line: 26, baseType: !2584, size: 128)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2569, file: !2566, line: 26, size: 128, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2589}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !2584, file: !2566, line: 27, baseType: !424, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2584, file: !2566, line: 28, baseType: !7, size: 32, offset: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2584, file: !2566, line: 30, baseType: !977, size: 16, offset: 96)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2584, file: !2566, line: 30, baseType: !977, size: 16, offset: 112)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2565, file: !2566, line: 34, baseType: !2591, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2566, line: 17, baseType: !533)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2565, file: !2566, line: 35, baseType: !257, size: 64, offset: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2562, file: !43, line: 240, baseType: !486, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2387, file: !43, line: 246, baseType: !2543, size: 64, offset: 2048)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2387, file: !43, line: 247, baseType: !257, size: 64, offset: 2112)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2383, file: !43, line: 401, baseType: !2597, size: 64, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !49, line: 101, size: 4992, elements: !2599)
!2599 = !{!2600, !2712, !2713, !2714, !2715, !2716}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2598, file: !49, line: 103, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !49, line: 66, size: 2240, elements: !2603)
!2603 = !{!2604, !2605, !2687, !2688, !2689, !2702, !2703, !2704, !2706, !2707, !2711}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !2602, file: !49, line: 69, baseType: !1115, size: 64)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2602, file: !49, line: 72, baseType: !2606, size: 1408, offset: 64)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !49, line: 29, size: 1408, elements: !2607)
!2607 = !{!2608, !2612, !2616, !2620, !2624, !2628, !2632, !2636, !2641, !2645, !2649, !2655, !2659, !2660, !2664, !2668, !2672, !2676, !2677, !2681, !2682, !2686}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !2606, file: !49, line: 30, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!324, !2382, !2601}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !2606, file: !49, line: 31, baseType: !2613, size: 64, offset: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{null, !2597}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2606, file: !49, line: 32, baseType: !2617, size: 64, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = !DISubroutineType(types: !2619)
!2619 = !{!324, !2394, !7}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2606, file: !49, line: 33, baseType: !2621, size: 64, offset: 192)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{null, !2394, !7}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !2606, file: !49, line: 34, baseType: !2625, size: 64, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DISubroutineType(types: !2627)
!2627 = !{null, !2394}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !2606, file: !49, line: 36, baseType: !2629, size: 64, offset: 320)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{!555, !2382, !2386, !2094}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !2606, file: !49, line: 37, baseType: !2633, size: 64, offset: 384)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!555, !2394, !2094, !7}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !2606, file: !49, line: 38, baseType: !2637, size: 64, offset: 448)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!324, !2382, !2640, !2094}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !2606, file: !49, line: 39, baseType: !2642, size: 64, offset: 512)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{null, !2382, !2386, !48}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !2606, file: !49, line: 40, baseType: !2646, size: 64, offset: 576)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{null, !2382, !2386, !2386}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !2606, file: !49, line: 41, baseType: !2650, size: 64, offset: 640)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{null, !7, !2653}
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !49, line: 26, flags: DIFlagFwdDecl)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !2606, file: !49, line: 42, baseType: !2656, size: 64, offset: 704)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null, !2386}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !2606, file: !49, line: 43, baseType: !2656, size: 64, offset: 768)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !2606, file: !49, line: 44, baseType: !2661, size: 64, offset: 832)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{null, !2394, !288, !555}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !2606, file: !49, line: 45, baseType: !2665, size: 64, offset: 896)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!2386, !2394}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !2606, file: !49, line: 46, baseType: !2669, size: 64, offset: 960)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!555, !2394}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !2606, file: !49, line: 47, baseType: !2673, size: 64, offset: 1024)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{null, !2386, !486}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !2606, file: !49, line: 48, baseType: !2656, size: 64, offset: 1088)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !2606, file: !49, line: 49, baseType: !2678, size: 64, offset: 1152)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2679, size: 64)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{!2386, !2382, !2386}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !2606, file: !49, line: 50, baseType: !2678, size: 64, offset: 1216)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !2606, file: !49, line: 51, baseType: !2683, size: 64, offset: 1280)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{null, !2506}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !2606, file: !49, line: 52, baseType: !2683, size: 64, offset: 1344)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !2602, file: !49, line: 74, baseType: !386, size: 64, offset: 1472)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !2602, file: !49, line: 75, baseType: !386, size: 64, offset: 1536)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !2602, file: !49, line: 76, baseType: !2690, size: 64, offset: 1600)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !49, line: 57, size: 256, elements: !2692)
!2692 = !{!2693, !2694, !2698}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2691, file: !49, line: 58, baseType: !376, size: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2691, file: !49, line: 59, baseType: !2695, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{!371, !2597, !340}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2691, file: !49, line: 60, baseType: !2699, size: 64, offset: 192)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{!371, !2597, !280, !386}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !2602, file: !49, line: 77, baseType: !280, size: 64, offset: 1664)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !2602, file: !49, line: 78, baseType: !280, size: 64, offset: 1728)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !2602, file: !49, line: 79, baseType: !2705, size: 32, offset: 1792)
!2705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !2602, file: !49, line: 80, baseType: !698, size: 64, offset: 1856)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !2602, file: !49, line: 87, baseType: !2708, size: 176, offset: 1920)
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 176, elements: !2709)
!2709 = !{!2710}
!2710 = !DISubrange(count: 22)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2602, file: !49, line: 88, baseType: !284, size: 128, offset: 2112)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !2598, file: !49, line: 104, baseType: !257, size: 64, offset: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2598, file: !49, line: 105, baseType: !276, size: 512, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2598, file: !49, line: 106, baseType: !791, size: 192, offset: 640)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !2598, file: !49, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2598, file: !49, line: 108, baseType: !2717, size: 4096, offset: 896)
!2717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 4096, elements: !345)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2383, file: !43, line: 403, baseType: !2129, size: 128, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2383, file: !43, line: 405, baseType: !2720, size: 64, offset: 256)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !43, line: 43, flags: DIFlagFwdDecl)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2383, file: !43, line: 406, baseType: !2723, size: 64, offset: 320)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !43, line: 42, flags: DIFlagFwdDecl)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2383, file: !43, line: 408, baseType: !2726, size: 64, offset: 384)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2728)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !2396, line: 290, size: 960, elements: !2729)
!2729 = !{!2730, !2740, !2741, !2745, !2749, !2753, !2757, !2758, !2762, !2763, !2810, !2814, !2815, !2816, !2817}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "queue_rq", scope: !2728, file: !2396, line: 294, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!2547, !2394, !2734}
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2736)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_data", file: !2396, line: 277, size: 128, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "rq", scope: !2736, file: !2396, line: 278, baseType: !2386, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !2736, file: !2396, line: 279, baseType: !555, size: 8, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "commit_rqs", scope: !2728, file: !2396, line: 304, baseType: !2625, size: 64, offset: 64)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "get_budget", scope: !2728, file: !2396, line: 312, baseType: !2742, size: 64, offset: 128)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{!555, !2382}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "put_budget", scope: !2728, file: !2396, line: 317, baseType: !2746, size: 64, offset: 192)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DISubroutineType(types: !2748)
!2748 = !{null, !2382}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2728, file: !2396, line: 322, baseType: !2750, size: 64, offset: 256)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!55, !2386, !555}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2728, file: !2396, line: 327, baseType: !2754, size: 64, offset: 320)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!324, !2394}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2728, file: !2396, line: 332, baseType: !2656, size: 64, offset: 384)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !2728, file: !2396, line: 339, baseType: !2759, size: 64, offset: 448)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{!324, !2394, !257, !7}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !2728, file: !2396, line: 343, baseType: !2621, size: 64, offset: 512)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "init_request", scope: !2728, file: !2396, line: 352, baseType: !2764, size: 64, offset: 576)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!324, !2767, !2386, !7, !7}
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !2396, line: 249, size: 2304, elements: !2769)
!2769 = !{!2770, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2805, !2806, !2808, !2809}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2768, file: !2396, line: 250, baseType: !2771, size: 384)
!2771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2772, size: 384, elements: !341)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_queue_map", file: !2396, line: 195, size: 128, elements: !2773)
!2773 = !{!2774, !2776, !2777}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "mq_map", scope: !2772, file: !2396, line: 196, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "nr_queues", scope: !2772, file: !2396, line: 197, baseType: !7, size: 32, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "queue_offset", scope: !2772, file: !2396, line: 198, baseType: !7, size: 32, offset: 96)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "nr_maps", scope: !2768, file: !2396, line: 251, baseType: !7, size: 32, offset: 384)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2768, file: !2396, line: 252, baseType: !2726, size: 64, offset: 448)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2768, file: !2396, line: 253, baseType: !7, size: 32, offset: 512)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2768, file: !2396, line: 254, baseType: !7, size: 32, offset: 544)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tags", scope: !2768, file: !2396, line: 255, baseType: !7, size: 32, offset: 576)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2768, file: !2396, line: 256, baseType: !7, size: 32, offset: 608)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !2768, file: !2396, line: 257, baseType: !324, size: 32, offset: 640)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2768, file: !2396, line: 258, baseType: !7, size: 32, offset: 672)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2768, file: !2396, line: 259, baseType: !7, size: 32, offset: 704)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !2768, file: !2396, line: 260, baseType: !257, size: 64, offset: 768)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "active_queues_shared_sbitmap", scope: !2768, file: !2396, line: 261, baseType: !865, size: 32, offset: 832)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "__bitmap_tags", scope: !2768, file: !2396, line: 263, baseType: !2790, size: 512, offset: 896)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbitmap_queue", file: !2419, line: 97, size: 512, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2802, !2803, !2804}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "sb", scope: !2790, file: !2419, line: 101, baseType: !2418, size: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hint", scope: !2790, file: !2419, line: 109, baseType: !2775, size: 64, offset: 192)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "wake_batch", scope: !2790, file: !2419, line: 115, baseType: !7, size: 32, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "wake_index", scope: !2790, file: !2419, line: 120, baseType: !865, size: 32, offset: 288)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !2790, file: !2419, line: 125, baseType: !2797, size: 64, offset: 320)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sbq_wait_state", file: !2419, line: 76, size: 192, elements: !2799)
!2799 = !{!2800, !2801}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "wait_cnt", scope: !2798, file: !2419, line: 80, baseType: !865, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2798, file: !2419, line: 85, baseType: !1655, size: 128, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "ws_active", scope: !2790, file: !2419, line: 130, baseType: !865, size: 32, offset: 384)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "round_robin", scope: !2790, file: !2419, line: 135, baseType: !555, size: 8, offset: 416)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "min_shallow_depth", scope: !2790, file: !2419, line: 141, baseType: !7, size: 32, offset: 448)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "__breserved_tags", scope: !2768, file: !2396, line: 264, baseType: !2790, size: 512, offset: 1408)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2768, file: !2396, line: 265, baseType: !2807, size: 64, offset: 1920)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list_lock", scope: !2768, file: !2396, line: 267, baseType: !791, size: 192, offset: 1984)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "tag_list", scope: !2768, file: !2396, line: 268, baseType: !284, size: 128, offset: 2176)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "exit_request", scope: !2728, file: !2396, line: 357, baseType: !2811, size: 64, offset: 640)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{null, !2767, !2386, !7}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rq_fn", scope: !2728, file: !2396, line: 363, baseType: !2656, size: 64, offset: 704)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_rq", scope: !2728, file: !2396, line: 369, baseType: !2656, size: 64, offset: 768)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !2728, file: !2396, line: 374, baseType: !2742, size: 64, offset: 832)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "map_queues", scope: !2728, file: !2396, line: 380, baseType: !2818, size: 64, offset: 896)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!324, !2767}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2383, file: !43, line: 411, baseType: !2391, size: 64, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2383, file: !43, line: 413, baseType: !7, size: 32, offset: 512)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2383, file: !43, line: 416, baseType: !2824, size: 64, offset: 576)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2383, file: !43, line: 417, baseType: !7, size: 32, offset: 640)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2383, file: !43, line: 419, baseType: !2220, size: 64, offset: 704)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2383, file: !43, line: 425, baseType: !257, size: 64, offset: 768)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2383, file: !43, line: 430, baseType: !389, size: 64, offset: 832)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2383, file: !43, line: 436, baseType: !865, size: 32, offset: 896)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2383, file: !43, line: 442, baseType: !324, size: 32, offset: 928)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2383, file: !43, line: 447, baseType: !861, size: 32, offset: 960)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2383, file: !43, line: 449, baseType: !298, offset: 992)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2383, file: !43, line: 454, baseType: !276, size: 512, offset: 1024)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2383, file: !43, line: 459, baseType: !291, size: 64, offset: 1536)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2383, file: !43, line: 462, baseType: !2836, size: 128, offset: 1600)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !2101, line: 159, size: 128, elements: !2837)
!2837 = !{!2838, !2867, !2868, !2869, !2870}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !2836, file: !2101, line: 160, baseType: !2839, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2841)
!2841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !43, line: 1664, size: 320, elements: !2842)
!2842 = !{!2843, !2857, !2858, !2861, !2866}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !2841, file: !43, line: 1665, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !43, line: 1660, baseType: !2846)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!2547, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !43, line: 1651, size: 320, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2855, !2856}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !2849, file: !43, line: 1652, baseType: !257, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !2849, file: !43, line: 1653, baseType: !257, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2849, file: !43, line: 1654, baseType: !948, size: 64, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !2849, file: !43, line: 1655, baseType: !7, size: 32, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2849, file: !43, line: 1656, baseType: !381, size: 16, offset: 224)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2849, file: !43, line: 1657, baseType: !280, size: 64, offset: 256)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !2841, file: !43, line: 1666, baseType: !2844, size: 64, offset: 64)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !2841, file: !43, line: 1667, baseType: !2859, size: 64, offset: 128)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !43, line: 1661, baseType: !2657)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !2841, file: !43, line: 1668, baseType: !2862, size: 64, offset: 192)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !43, line: 1662, baseType: !2864)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null, !2386, !7}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2841, file: !43, line: 1669, baseType: !280, size: 64, offset: 256)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2836, file: !2101, line: 161, baseType: !492, size: 8, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !2836, file: !2101, line: 162, baseType: !492, size: 8, offset: 72)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !2836, file: !2101, line: 163, baseType: !492, size: 8, offset: 80)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !2836, file: !2101, line: 164, baseType: !492, size: 8, offset: 88)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2383, file: !43, line: 466, baseType: !272, size: 64, offset: 1728)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2383, file: !43, line: 467, baseType: !59, size: 32, offset: 1792)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2383, file: !43, line: 468, baseType: !7, size: 32, offset: 1824)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2383, file: !43, line: 474, baseType: !389, size: 64, offset: 1856)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2383, file: !43, line: 476, baseType: !7, size: 32, offset: 1920)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2383, file: !43, line: 477, baseType: !7, size: 32, offset: 1952)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2383, file: !43, line: 484, baseType: !7, size: 32, offset: 1984)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2383, file: !43, line: 485, baseType: !324, size: 32, offset: 2016)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2383, file: !43, line: 487, baseType: !2880, size: 64, offset: 2048)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2881 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !43, line: 44, flags: DIFlagFwdDecl)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2383, file: !43, line: 488, baseType: !2883, size: 5120, offset: 2112)
!2883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2884, size: 5120, elements: !1908)
!2884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !160, line: 540, size: 320, elements: !2885)
!2885 = !{!2886, !2887, !2888, !2889, !2890}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !2884, file: !160, line: 541, baseType: !486, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2884, file: !160, line: 542, baseType: !486, size: 64, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2884, file: !160, line: 543, baseType: !486, size: 64, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !2884, file: !160, line: 544, baseType: !480, size: 32, offset: 192)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2884, file: !160, line: 545, baseType: !486, size: 64, offset: 256)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2383, file: !43, line: 490, baseType: !2279, size: 320, offset: 7232)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2383, file: !43, line: 491, baseType: !2167, size: 256, offset: 7552)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2383, file: !43, line: 493, baseType: !865, size: 32, offset: 7808)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2383, file: !43, line: 495, baseType: !284, size: 128, offset: 7872)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2383, file: !43, line: 502, baseType: !2896, size: 896, offset: 8000)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !43, line: 321, size: 896, elements: !2897)
!2897 = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !2896, file: !43, line: 322, baseType: !389, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !2896, file: !43, line: 323, baseType: !389, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !2896, file: !43, line: 324, baseType: !389, size: 64, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !2896, file: !43, line: 326, baseType: !7, size: 32, offset: 192)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !2896, file: !43, line: 327, baseType: !7, size: 32, offset: 224)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !2896, file: !43, line: 328, baseType: !7, size: 32, offset: 256)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !2896, file: !43, line: 329, baseType: !7, size: 32, offset: 288)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2896, file: !43, line: 330, baseType: !7, size: 32, offset: 320)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !2896, file: !43, line: 331, baseType: !7, size: 32, offset: 352)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !2896, file: !43, line: 332, baseType: !7, size: 32, offset: 384)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !2896, file: !43, line: 333, baseType: !7, size: 32, offset: 416)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !2896, file: !43, line: 334, baseType: !7, size: 32, offset: 448)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !2896, file: !43, line: 335, baseType: !7, size: 32, offset: 480)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !2896, file: !43, line: 336, baseType: !7, size: 32, offset: 512)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !2896, file: !43, line: 337, baseType: !7, size: 32, offset: 544)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !2896, file: !43, line: 338, baseType: !7, size: 32, offset: 576)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !2896, file: !43, line: 339, baseType: !7, size: 32, offset: 608)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !2896, file: !43, line: 340, baseType: !7, size: 32, offset: 640)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !2896, file: !43, line: 341, baseType: !7, size: 32, offset: 672)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !2896, file: !43, line: 342, baseType: !7, size: 32, offset: 704)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !2896, file: !43, line: 344, baseType: !381, size: 16, offset: 736)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !2896, file: !43, line: 345, baseType: !381, size: 16, offset: 752)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !2896, file: !43, line: 346, baseType: !381, size: 16, offset: 768)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !2896, file: !43, line: 348, baseType: !492, size: 8, offset: 784)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !2896, file: !43, line: 349, baseType: !492, size: 8, offset: 792)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !2896, file: !43, line: 350, baseType: !492, size: 8, offset: 800)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !2896, file: !43, line: 351, baseType: !66, size: 32, offset: 832)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2383, file: !43, line: 504, baseType: !7, size: 32, offset: 8896)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2383, file: !43, line: 534, baseType: !7, size: 32, offset: 8928)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2383, file: !43, line: 535, baseType: !7, size: 32, offset: 8960)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2383, file: !43, line: 536, baseType: !324, size: 32, offset: 8992)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2383, file: !43, line: 537, baseType: !791, size: 192, offset: 9024)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2383, file: !43, line: 544, baseType: !2414, size: 64, offset: 9216)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2383, file: !43, line: 546, baseType: !284, size: 128, offset: 9280)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2383, file: !43, line: 547, baseType: !298, offset: 9408)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2383, file: !43, line: 548, baseType: !2275, size: 704, offset: 9408)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2383, file: !43, line: 550, baseType: !791, size: 192, offset: 10112)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2383, file: !43, line: 551, baseType: !791, size: 192, offset: 10304)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2383, file: !43, line: 557, baseType: !284, size: 128, offset: 10496)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2383, file: !43, line: 558, baseType: !298, offset: 10624)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2383, file: !43, line: 560, baseType: !324, size: 32, offset: 10624)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2383, file: !43, line: 563, baseType: !2940, size: 256, offset: 10688)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !2941, line: 18, size: 256, elements: !2942)
!2941 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!2942 = !{!2943, !2944, !2945, !2946}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !2940, file: !2941, line: 19, baseType: !272, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !2940, file: !2941, line: 20, baseType: !324, size: 32, offset: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2940, file: !2941, line: 21, baseType: !2382, size: 64, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2940, file: !2941, line: 22, baseType: !2947, size: 64, offset: 192)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2949)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !2941, line: 10, size: 256, elements: !2950)
!2950 = !{!2951, !2992, !2996, !3000}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !2949, file: !2941, line: 11, baseType: !2952, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DISubroutineType(types: !2954)
!2954 = !{!324, !2955}
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !2957, line: 22, size: 1280, elements: !2958)
!2957 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!2958 = !{!2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !2956, file: !2957, line: 23, baseType: !1619, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2956, file: !2957, line: 24, baseType: !482, size: 32, offset: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !2956, file: !2957, line: 25, baseType: !482, size: 32, offset: 64)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !2956, file: !2957, line: 28, baseType: !482, size: 32, offset: 96)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2956, file: !2957, line: 29, baseType: !487, size: 64, offset: 128)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !2956, file: !2957, line: 30, baseType: !487, size: 64, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !2956, file: !2957, line: 31, baseType: !482, size: 32, offset: 256)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !2956, file: !2957, line: 32, baseType: !482, size: 32, offset: 288)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !2956, file: !2957, line: 33, baseType: !482, size: 32, offset: 320)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !2956, file: !2957, line: 34, baseType: !482, size: 32, offset: 352)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !2956, file: !2957, line: 35, baseType: !487, size: 64, offset: 384)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !2956, file: !2957, line: 38, baseType: !482, size: 32, offset: 448)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !2956, file: !2957, line: 40, baseType: !482, size: 32, offset: 480)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !2956, file: !2957, line: 41, baseType: !482, size: 32, offset: 512)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !2956, file: !2957, line: 42, baseType: !482, size: 32, offset: 544)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !2956, file: !2957, line: 43, baseType: !487, size: 64, offset: 576)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !2956, file: !2957, line: 44, baseType: !487, size: 64, offset: 640)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2956, file: !2957, line: 46, baseType: !482, size: 32, offset: 704)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2956, file: !2957, line: 47, baseType: !482, size: 32, offset: 736)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !2956, file: !2957, line: 48, baseType: !487, size: 64, offset: 768)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !2956, file: !2957, line: 49, baseType: !482, size: 32, offset: 832)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !2956, file: !2957, line: 51, baseType: !482, size: 32, offset: 864)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !2956, file: !2957, line: 52, baseType: !482, size: 32, offset: 896)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !2956, file: !2957, line: 53, baseType: !482, size: 32, offset: 928)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !2956, file: !2957, line: 54, baseType: !482, size: 32, offset: 960)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2956, file: !2957, line: 55, baseType: !482, size: 32, offset: 992)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !2956, file: !2957, line: 56, baseType: !482, size: 32, offset: 1024)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !2956, file: !2957, line: 57, baseType: !482, size: 32, offset: 1056)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !2956, file: !2957, line: 58, baseType: !1619, size: 32, offset: 1088)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !2956, file: !2957, line: 59, baseType: !1619, size: 32, offset: 1120)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !2956, file: !2957, line: 60, baseType: !487, size: 64, offset: 1152)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !2956, file: !2957, line: 61, baseType: !482, size: 32, offset: 1216)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2956, file: !2957, line: 63, baseType: !482, size: 32, offset: 1248)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !2949, file: !2941, line: 12, baseType: !2993, size: 64, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!324, !2386, !2955, !2303}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !2949, file: !2941, line: 14, baseType: !2997, size: 64, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!324, !2386, !2955}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !2949, file: !2941, line: 15, baseType: !2656, size: 64, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2383, file: !43, line: 570, baseType: !430, size: 128, align: 64, offset: 10944)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2383, file: !43, line: 571, baseType: !1655, size: 128, offset: 11072)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2383, file: !43, line: 576, baseType: !791, size: 192, offset: 11200)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2383, file: !43, line: 578, baseType: !2767, size: 64, offset: 11392)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2383, file: !43, line: 579, baseType: !284, size: 128, offset: 11456)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2383, file: !43, line: 580, baseType: !3007, size: 2368, offset: 11584)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2091, line: 682, size: 2368, elements: !3008)
!3008 = !{!3009, !3010, !3011, !3032, !3033, !3034, !3035, !3036, !3037, !3038}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !3007, file: !2091, line: 683, baseType: !1115, size: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !3007, file: !2091, line: 684, baseType: !7, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !3007, file: !2091, line: 686, baseType: !3012, size: 448, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !3013, line: 26, baseType: !3014)
!3013 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !3013, line: 16, size: 448, elements: !3015)
!3015 = !{!3016, !3017, !3018, !3019, !3020, !3021, !3026, !3031}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3014, file: !3013, line: 17, baseType: !298)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !3014, file: !3013, line: 18, baseType: !324, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !3014, file: !3013, line: 19, baseType: !324, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3014, file: !3013, line: 20, baseType: !939, size: 64, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !3014, file: !3013, line: 22, baseType: !257, size: 64, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3014, file: !3013, line: 23, baseType: !3022, size: 64, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !3013, line: 13, baseType: !3024)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!257, !861, !257}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3014, file: !3013, line: 24, baseType: !3027, size: 64, offset: 256)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !3013, line: 14, baseType: !3029)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{null, !257, !257}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3014, file: !3013, line: 25, baseType: !1655, size: 128, offset: 320)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !3007, file: !2091, line: 687, baseType: !3012, size: 448, offset: 576)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !3007, file: !2091, line: 689, baseType: !3012, size: 448, offset: 1024)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !3007, file: !2091, line: 690, baseType: !3012, size: 448, offset: 1472)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !3007, file: !2091, line: 697, baseType: !298, offset: 1920)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !3007, file: !2091, line: 698, baseType: !2090, size: 128, offset: 1920)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !3007, file: !2091, line: 699, baseType: !2167, size: 256, offset: 2048)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !3007, file: !2091, line: 700, baseType: !2179, size: 64, offset: 2304)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2383, file: !43, line: 582, baseType: !447, size: 64, offset: 13952)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2383, file: !43, line: 589, baseType: !555, size: 8, offset: 14016)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2383, file: !43, line: 591, baseType: !386, size: 64, offset: 14080)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2383, file: !43, line: 594, baseType: !3043, size: 320, offset: 14144)
!3043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 320, elements: !3044)
!3044 = !{!3045}
!3045 = !DISubrange(count: 5)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2100, file: !2101, line: 191, baseType: !257, size: 64, offset: 7168)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2100, file: !2101, line: 193, baseType: !324, size: 32, offset: 7232)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2100, file: !2101, line: 194, baseType: !389, size: 64, offset: 7296)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2100, file: !2101, line: 196, baseType: !885, size: 256, offset: 7360)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2100, file: !2101, line: 197, baseType: !291, size: 64, offset: 7616)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2100, file: !2101, line: 199, baseType: !3052, size: 64, offset: 7680)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !2101, line: 199, flags: DIFlagFwdDecl)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2100, file: !2101, line: 200, baseType: !865, size: 32, offset: 7744)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2100, file: !2101, line: 201, baseType: !3056, size: 64, offset: 7808)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !2101, line: 156, flags: DIFlagFwdDecl)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2100, file: !2101, line: 203, baseType: !276, size: 512, offset: 7872)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2100, file: !2101, line: 208, baseType: !324, size: 32, offset: 8384)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2100, file: !2101, line: 209, baseType: !3061, size: 64, offset: 8448)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !2101, line: 157, flags: DIFlagFwdDecl)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2100, file: !2101, line: 210, baseType: !3064, offset: 8512)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !714, line: 192, elements: !312)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2095, file: !160, line: 206, baseType: !7, size: 32, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2095, file: !160, line: 210, baseType: !381, size: 16, offset: 160)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2095, file: !160, line: 211, baseType: !381, size: 16, offset: 176)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2095, file: !160, line: 212, baseType: !381, size: 16, offset: 192)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2095, file: !160, line: 213, baseType: !2547, size: 8, offset: 208)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2095, file: !160, line: 214, baseType: !1526, size: 8, offset: 216)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2095, file: !160, line: 215, baseType: !865, size: 32, offset: 224)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2095, file: !160, line: 217, baseType: !3073, size: 192, offset: 256)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1033, line: 37, size: 192, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !3073, file: !1033, line: 38, baseType: !948, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !3073, file: !1033, line: 40, baseType: !7, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !3073, file: !1033, line: 42, baseType: !7, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !3073, file: !1033, line: 44, baseType: !7, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2095, file: !160, line: 219, baseType: !3080, size: 64, offset: 448)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !160, line: 19, baseType: !3082)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{null, !2094}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2095, file: !160, line: 221, baseType: !257, size: 64, offset: 512)
!3085 = !DIDerivedType(tag: DW_TAG_member, scope: !2095, file: !160, line: 240, baseType: !3086, size: 64, offset: 576)
!3086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2095, file: !160, line: 240, size: 64, elements: !3087)
!3087 = !{!3088}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !3086, file: !160, line: 242, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2091, line: 313, size: 832, elements: !3091)
!3091 = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3102}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !3090, file: !2091, line: 314, baseType: !2094, size: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !3090, file: !2091, line: 316, baseType: !3073, size: 192, offset: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !3090, file: !2091, line: 318, baseType: !381, size: 16, offset: 256)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !3090, file: !2091, line: 319, baseType: !381, size: 16, offset: 272)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !3090, file: !2091, line: 320, baseType: !381, size: 16, offset: 288)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !3090, file: !2091, line: 321, baseType: !381, size: 16, offset: 304)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !3090, file: !2091, line: 323, baseType: !3073, size: 192, offset: 320)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !3090, file: !2091, line: 325, baseType: !2167, size: 256, offset: 512)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !3090, file: !2091, line: 327, baseType: !3101, size: 64, offset: 768)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !3090, file: !2091, line: 328, baseType: !3103, offset: 832)
!3103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, elements: !2183)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2095, file: !160, line: 246, baseType: !381, size: 16, offset: 640)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2095, file: !160, line: 252, baseType: !381, size: 16, offset: 656)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2095, file: !160, line: 254, baseType: !865, size: 32, offset: 672)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2095, file: !160, line: 256, baseType: !3101, size: 64, offset: 704)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2095, file: !160, line: 258, baseType: !3109, size: 64, offset: 768)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2095, file: !160, line: 265, baseType: !3103, offset: 832)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2090, file: !2091, line: 556, baseType: !2094, size: 64, offset: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1392, file: !1041, line: 1050, baseType: !3113, size: 64, offset: 10688)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !43, line: 1236, size: 320, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3114, file: !43, line: 1237, baseType: !284, size: 128)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3114, file: !43, line: 1238, baseType: !284, size: 128, offset: 128)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3114, file: !43, line: 1239, baseType: !381, size: 16, offset: 256)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3114, file: !43, line: 1240, baseType: !555, size: 8, offset: 272)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3114, file: !43, line: 1241, baseType: !555, size: 8, offset: 280)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1392, file: !1041, line: 1054, baseType: !3122, size: 64, offset: 10752)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1041, line: 55, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1392, file: !1041, line: 1056, baseType: !2220, size: 64, offset: 10816)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1392, file: !1041, line: 1058, baseType: !2512, size: 64, offset: 10880)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1392, file: !1041, line: 1061, baseType: !3127, size: 64, offset: 10944)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1041, line: 43, flags: DIFlagFwdDecl)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1392, file: !1041, line: 1064, baseType: !389, size: 64, offset: 11008)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1392, file: !1041, line: 1065, baseType: !3131, size: 64, offset: 11072)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1939, line: 14, baseType: !3133)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1939, line: 12, size: 384, elements: !3134)
!3134 = !{!3135}
!3135 = !DIDerivedType(tag: DW_TAG_member, scope: !3133, file: !1939, line: 13, baseType: !3136, size: 384)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3133, file: !1939, line: 13, size: 384, elements: !3137)
!3137 = !{!3138, !3139, !3140, !3141}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3136, file: !1939, line: 13, baseType: !324, size: 32)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3136, file: !1939, line: 13, baseType: !324, size: 32, offset: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3136, file: !1939, line: 13, baseType: !324, size: 32, offset: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3136, file: !1939, line: 13, baseType: !3142, size: 256, offset: 128)
!3142 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3143, line: 32, size: 256, elements: !3144)
!3143 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3144 = !{!3145, !3150, !3163, !3169, !3178, !3198, !3203}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3142, file: !3143, line: 37, baseType: !3146, size: 64)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 34, size: 64, elements: !3147)
!3147 = !{!3148, !3149}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3146, file: !3143, line: 35, baseType: !1634, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3146, file: !3143, line: 36, baseType: !506, size: 32, offset: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3142, file: !3143, line: 45, baseType: !3151, size: 192)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 40, size: 192, elements: !3152)
!3152 = !{!3153, !3155, !3156, !3162}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3151, file: !3143, line: 41, baseType: !3154, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !373, line: 95, baseType: !324)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3151, file: !3143, line: 42, baseType: !324, size: 32, offset: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3151, file: !3143, line: 43, baseType: !3157, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3143, line: 11, baseType: !3158)
!3158 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3143, line: 8, size: 64, elements: !3159)
!3159 = !{!3160, !3161}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3158, file: !3143, line: 9, baseType: !324, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3158, file: !3143, line: 10, baseType: !257, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3151, file: !3143, line: 44, baseType: !324, size: 32, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3142, file: !3143, line: 52, baseType: !3164, size: 128)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 48, size: 128, elements: !3165)
!3165 = !{!3166, !3167, !3168}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3164, file: !3143, line: 49, baseType: !1634, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3164, file: !3143, line: 50, baseType: !506, size: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3164, file: !3143, line: 51, baseType: !3157, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3142, file: !3143, line: 61, baseType: !3170, size: 256)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 55, size: 256, elements: !3171)
!3171 = !{!3172, !3173, !3174, !3175, !3177}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3170, file: !3143, line: 56, baseType: !1634, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3170, file: !3143, line: 57, baseType: !506, size: 32, offset: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3170, file: !3143, line: 58, baseType: !324, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3170, file: !3143, line: 59, baseType: !3176, size: 64, offset: 128)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !373, line: 94, baseType: !374)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3170, file: !3143, line: 60, baseType: !3176, size: 64, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3142, file: !3143, line: 95, baseType: !3179, size: 256)
!3179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 64, size: 256, elements: !3180)
!3180 = !{!3181, !3182}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3179, file: !3143, line: 65, baseType: !257, size: 64)
!3182 = !DIDerivedType(tag: DW_TAG_member, scope: !3179, file: !3143, line: 77, baseType: !3183, size: 192, offset: 64)
!3183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3179, file: !3143, line: 77, size: 192, elements: !3184)
!3184 = !{!3185, !3186, !3193}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3183, file: !3143, line: 82, baseType: !1380, size: 16)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3183, file: !3143, line: 88, baseType: !3187, size: 192)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !3143, line: 84, size: 192, elements: !3188)
!3188 = !{!3189, !3191, !3192}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3187, file: !3143, line: 85, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 64, elements: !1504)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3187, file: !3143, line: 86, baseType: !257, size: 64, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3187, file: !3143, line: 87, baseType: !257, size: 64, offset: 128)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3183, file: !3143, line: 93, baseType: !3194, size: 96)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !3143, line: 90, size: 96, elements: !3195)
!3195 = !{!3196, !3197}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3194, file: !3143, line: 91, baseType: !3190, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3194, file: !3143, line: 92, baseType: !482, size: 32, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3142, file: !3143, line: 101, baseType: !3199, size: 128)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 98, size: 128, elements: !3200)
!3200 = !{!3201, !3202}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3199, file: !3143, line: 99, baseType: !184, size: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3199, file: !3143, line: 100, baseType: !324, size: 32, offset: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3142, file: !3143, line: 108, baseType: !3204, size: 128)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3142, file: !3143, line: 104, size: 128, elements: !3205)
!3205 = !{!3206, !3207, !3208}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3204, file: !3143, line: 105, baseType: !257, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3204, file: !3143, line: 106, baseType: !324, size: 32, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3204, file: !3143, line: 107, baseType: !7, size: 32, offset: 96)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1392, file: !1041, line: 1067, baseType: !2011, offset: 11136)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1392, file: !1041, line: 1099, baseType: !3211, size: 64, offset: 11136)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1041, line: 56, flags: DIFlagFwdDecl)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1392, file: !1041, line: 1103, baseType: !284, size: 128, offset: 11200)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1392, file: !1041, line: 1104, baseType: !3215, size: 64, offset: 11328)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1041, line: 46, flags: DIFlagFwdDecl)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1392, file: !1041, line: 1105, baseType: !791, size: 192, offset: 11392)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1392, file: !1041, line: 1106, baseType: !7, size: 32, offset: 11584)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1392, file: !1041, line: 1109, baseType: !3220, size: 128, offset: 11648)
!3220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3221, size: 128, elements: !1742)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1041, line: 51, flags: DIFlagFwdDecl)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1392, file: !1041, line: 1110, baseType: !791, size: 192, offset: 11776)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1392, file: !1041, line: 1111, baseType: !284, size: 128, offset: 11968)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1392, file: !1041, line: 1173, baseType: !3226, size: 64, offset: 12096)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3228, line: 62, size: 256, align: 256, elements: !3229)
!3228 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3229 = !{!3230, !3231, !3232, !3237}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3227, file: !3228, line: 75, baseType: !482, size: 32)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3227, file: !3228, line: 90, baseType: !482, size: 32, offset: 32)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3227, file: !3228, line: 124, baseType: !3233, size: 64, offset: 64)
!3233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3227, file: !3228, line: 109, size: 64, elements: !3234)
!3234 = !{!3235, !3236}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3233, file: !3228, line: 110, baseType: !487, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3233, file: !3228, line: 112, baseType: !487, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3227, file: !3228, line: 144, baseType: !482, size: 32, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1392, file: !1041, line: 1174, baseType: !480, size: 32, offset: 12160)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1392, file: !1041, line: 1179, baseType: !389, size: 64, offset: 12224)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1392, file: !1041, line: 1182, baseType: !3241, size: 128, offset: 12288)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1332, line: 76, size: 128, elements: !3242)
!3242 = !{!3243, !3248, !3249}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3241, file: !1332, line: 85, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3245, line: 7, size: 64, elements: !3246)
!3245 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3246 = !{!3247}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3244, file: !3245, line: 12, baseType: !1541, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3241, file: !1332, line: 88, baseType: !555, size: 8, offset: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3241, file: !1332, line: 95, baseType: !555, size: 8, offset: 72)
!3250 = !DIDerivedType(tag: DW_TAG_member, scope: !1392, file: !1041, line: 1184, baseType: !3251, size: 128, offset: 12416)
!3251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1392, file: !1041, line: 1184, size: 128, elements: !3252)
!3252 = !{!3253, !3254}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3251, file: !1041, line: 1185, baseType: !1404, size: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3251, file: !1041, line: 1186, baseType: !430, size: 128, align: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1392, file: !1041, line: 1190, baseType: !1039, size: 64, offset: 12544)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1392, file: !1041, line: 1192, baseType: !3257, size: 128, offset: 12608)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1332, line: 64, size: 128, elements: !3258)
!3258 = !{!3259, !3260, !3261}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3257, file: !1332, line: 65, baseType: !838, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3257, file: !1332, line: 67, baseType: !482, size: 32, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3257, file: !1332, line: 68, baseType: !482, size: 32, offset: 96)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1392, file: !1041, line: 1206, baseType: !324, size: 32, offset: 12736)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1392, file: !1041, line: 1207, baseType: !324, size: 32, offset: 12768)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1392, file: !1041, line: 1209, baseType: !389, size: 64, offset: 12800)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1392, file: !1041, line: 1219, baseType: !486, size: 64, offset: 12864)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1392, file: !1041, line: 1220, baseType: !486, size: 64, offset: 12928)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1392, file: !1041, line: 1317, baseType: !324, size: 32, offset: 12992)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1392, file: !1041, line: 1319, baseType: !1391, size: 64, offset: 13056)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1392, file: !1041, line: 1322, baseType: !3270, size: 64, offset: 13120)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3272, line: 56, size: 512, elements: !3273)
!3272 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3273 = !{!3274, !3275, !3276, !3277, !3278, !3279, !3280, !3282}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3271, file: !3272, line: 57, baseType: !3270, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3271, file: !3272, line: 58, baseType: !257, size: 64, offset: 64)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3271, file: !3272, line: 59, baseType: !389, size: 64, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3271, file: !3272, line: 60, baseType: !389, size: 64, offset: 192)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3271, file: !3272, line: 61, baseType: !938, size: 64, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3271, file: !3272, line: 62, baseType: !7, size: 32, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3271, file: !3272, line: 63, baseType: !3281, size: 64, offset: 384)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !285, line: 153, baseType: !486)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3271, file: !3272, line: 64, baseType: !3283, size: 64, offset: 448)
!3283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3284, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1392, file: !1041, line: 1326, baseType: !1404, size: 32, offset: 13184)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1392, file: !1041, line: 1342, baseType: !257, size: 64, offset: 13248)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1392, file: !1041, line: 1343, baseType: !487, size: 64, offset: 13312)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1392, file: !1041, line: 1344, baseType: !486, size: 64, offset: 13376)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1392, file: !1041, line: 1345, baseType: !487, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1392, file: !1041, line: 1346, baseType: !487, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1392, file: !1041, line: 1347, baseType: !487, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1392, file: !1041, line: 1348, baseType: !430, size: 128, align: 64, offset: 13504)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1392, file: !1041, line: 1358, baseType: !3294, size: 34816, offset: 13824)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3295, line: 485, size: 34816, elements: !3296)
!3295 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3296 = !{!3297, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3326, !3327, !3328, !3329, !3330, !3331, !3334, !3335, !3336}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3294, file: !3295, line: 487, baseType: !3298, size: 192)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3299, size: 192, elements: !341)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3300, line: 16, size: 64, elements: !3301)
!3300 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3301 = !{!3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3299, file: !3300, line: 17, baseType: !977, size: 16)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3299, file: !3300, line: 18, baseType: !977, size: 16, offset: 16)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3299, file: !3300, line: 19, baseType: !977, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3299, file: !3300, line: 19, baseType: !977, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3299, file: !3300, line: 19, baseType: !977, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3299, file: !3300, line: 19, baseType: !977, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3299, file: !3300, line: 19, baseType: !977, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3299, file: !3300, line: 20, baseType: !977, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3299, file: !3300, line: 20, baseType: !977, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3299, file: !3300, line: 20, baseType: !977, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3299, file: !3300, line: 20, baseType: !977, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3299, file: !3300, line: 20, baseType: !977, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3299, file: !3300, line: 20, baseType: !977, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3294, file: !3295, line: 491, baseType: !389, size: 64, offset: 192)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3294, file: !3295, line: 495, baseType: !381, size: 16, offset: 256)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3294, file: !3295, line: 496, baseType: !381, size: 16, offset: 272)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3294, file: !3295, line: 497, baseType: !381, size: 16, offset: 288)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3294, file: !3295, line: 498, baseType: !381, size: 16, offset: 304)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3294, file: !3295, line: 502, baseType: !389, size: 64, offset: 320)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3294, file: !3295, line: 503, baseType: !389, size: 64, offset: 384)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3294, file: !3295, line: 514, baseType: !3323, size: 256, offset: 448)
!3323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3324, size: 256, elements: !1336)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3295, line: 483, flags: DIFlagFwdDecl)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3294, file: !3295, line: 516, baseType: !389, size: 64, offset: 704)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3294, file: !3295, line: 518, baseType: !389, size: 64, offset: 768)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3294, file: !3295, line: 520, baseType: !389, size: 64, offset: 832)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3294, file: !3295, line: 521, baseType: !389, size: 64, offset: 896)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3294, file: !3295, line: 522, baseType: !389, size: 64, offset: 960)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3294, file: !3295, line: 528, baseType: !3332, size: 64, offset: 1024)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3295, line: 10, flags: DIFlagFwdDecl)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3294, file: !3295, line: 535, baseType: !389, size: 64, offset: 1088)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3294, file: !3295, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3294, file: !3295, line: 540, baseType: !3337, size: 33280, offset: 1536)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3338, line: 317, size: 33280, elements: !3339)
!3338 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3339 = !{!3340, !3341, !3342}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3337, file: !3338, line: 330, baseType: !7, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3337, file: !3338, line: 337, baseType: !389, size: 64, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3337, file: !3338, line: 348, baseType: !3343, size: 32768, offset: 512)
!3343 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3338, line: 304, size: 32768, elements: !3344)
!3344 = !{!3345, !3360, !3397, !3447, !3460}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3343, file: !3338, line: 305, baseType: !3346, size: 896)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3338, line: 12, size: 896, elements: !3347)
!3347 = !{!3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3359}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3346, file: !3338, line: 13, baseType: !480, size: 32)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3346, file: !3338, line: 14, baseType: !480, size: 32, offset: 32)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3346, file: !3338, line: 15, baseType: !480, size: 32, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3346, file: !3338, line: 16, baseType: !480, size: 32, offset: 96)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3346, file: !3338, line: 17, baseType: !480, size: 32, offset: 128)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3346, file: !3338, line: 18, baseType: !480, size: 32, offset: 160)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3346, file: !3338, line: 19, baseType: !480, size: 32, offset: 192)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3346, file: !3338, line: 22, baseType: !3356, size: 640, offset: 224)
!3356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 640, elements: !3357)
!3357 = !{!3358}
!3358 = !DISubrange(count: 20)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3346, file: !3338, line: 25, baseType: !480, size: 32, offset: 864)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3343, file: !3338, line: 306, baseType: !3361, size: 4096, align: 128)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3338, line: 34, size: 4096, align: 128, elements: !3362)
!3362 = !{!3363, !3364, !3365, !3366, !3367, !3382, !3383, !3384, !3386, !3388, !3392}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3361, file: !3338, line: 35, baseType: !977, size: 16)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3361, file: !3338, line: 36, baseType: !977, size: 16, offset: 16)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3361, file: !3338, line: 37, baseType: !977, size: 16, offset: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3361, file: !3338, line: 38, baseType: !977, size: 16, offset: 48)
!3367 = !DIDerivedType(tag: DW_TAG_member, scope: !3361, file: !3338, line: 39, baseType: !3368, size: 128, offset: 64)
!3368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3361, file: !3338, line: 39, size: 128, elements: !3369)
!3369 = !{!3370, !3375}
!3370 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3338, line: 40, baseType: !3371, size: 128)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3368, file: !3338, line: 40, size: 128, elements: !3372)
!3372 = !{!3373, !3374}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3371, file: !3338, line: 41, baseType: !486, size: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3371, file: !3338, line: 42, baseType: !486, size: 64, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3338, line: 44, baseType: !3376, size: 128)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3368, file: !3338, line: 44, size: 128, elements: !3377)
!3377 = !{!3378, !3379, !3380, !3381}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3376, file: !3338, line: 45, baseType: !480, size: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3376, file: !3338, line: 46, baseType: !480, size: 32, offset: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3376, file: !3338, line: 47, baseType: !480, size: 32, offset: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3376, file: !3338, line: 48, baseType: !480, size: 32, offset: 96)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3361, file: !3338, line: 51, baseType: !480, size: 32, offset: 192)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3361, file: !3338, line: 52, baseType: !480, size: 32, offset: 224)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3361, file: !3338, line: 55, baseType: !3385, size: 1024, offset: 256)
!3385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 1024, elements: !2108)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3361, file: !3338, line: 58, baseType: !3387, size: 2048, offset: 1280)
!3387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 2048, elements: !345)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3361, file: !3338, line: 60, baseType: !3389, size: 384, offset: 3328)
!3389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 384, elements: !3390)
!3390 = !{!3391}
!3391 = !DISubrange(count: 12)
!3392 = !DIDerivedType(tag: DW_TAG_member, scope: !3361, file: !3338, line: 62, baseType: !3393, size: 384, offset: 3712)
!3393 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3361, file: !3338, line: 62, size: 384, elements: !3394)
!3394 = !{!3395, !3396}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3393, file: !3338, line: 63, baseType: !3389, size: 384)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3393, file: !3338, line: 64, baseType: !3389, size: 384)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3343, file: !3338, line: 307, baseType: !3398, size: 1088)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3338, line: 79, size: 1088, elements: !3399)
!3399 = !{!3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3446}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3398, file: !3338, line: 80, baseType: !480, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3398, file: !3338, line: 81, baseType: !480, size: 32, offset: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3398, file: !3338, line: 82, baseType: !480, size: 32, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3398, file: !3338, line: 83, baseType: !480, size: 32, offset: 96)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3398, file: !3338, line: 84, baseType: !480, size: 32, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3398, file: !3338, line: 85, baseType: !480, size: 32, offset: 160)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3398, file: !3338, line: 86, baseType: !480, size: 32, offset: 192)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3398, file: !3338, line: 88, baseType: !3356, size: 640, offset: 224)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3398, file: !3338, line: 89, baseType: !1526, size: 8, offset: 864)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3398, file: !3338, line: 90, baseType: !1526, size: 8, offset: 872)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3398, file: !3338, line: 91, baseType: !1526, size: 8, offset: 880)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3398, file: !3338, line: 92, baseType: !1526, size: 8, offset: 888)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3398, file: !3338, line: 93, baseType: !1526, size: 8, offset: 896)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3398, file: !3338, line: 94, baseType: !1526, size: 8, offset: 904)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3398, file: !3338, line: 95, baseType: !3415, size: 64, offset: 960)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3417, line: 11, size: 128, elements: !3418)
!3417 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3418 = !{!3419, !3420}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3416, file: !3417, line: 12, baseType: !184, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3416, file: !3417, line: 13, baseType: !3421, size: 64, offset: 64)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3423, line: 56, size: 1344, elements: !3424)
!3423 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3424 = !{!3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3422, file: !3423, line: 61, baseType: !389, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3422, file: !3423, line: 62, baseType: !389, size: 64, offset: 64)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3422, file: !3423, line: 63, baseType: !389, size: 64, offset: 128)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3422, file: !3423, line: 64, baseType: !389, size: 64, offset: 192)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3422, file: !3423, line: 65, baseType: !389, size: 64, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3422, file: !3423, line: 66, baseType: !389, size: 64, offset: 320)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3422, file: !3423, line: 68, baseType: !389, size: 64, offset: 384)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3422, file: !3423, line: 69, baseType: !389, size: 64, offset: 448)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3422, file: !3423, line: 70, baseType: !389, size: 64, offset: 512)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3422, file: !3423, line: 71, baseType: !389, size: 64, offset: 576)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3422, file: !3423, line: 72, baseType: !389, size: 64, offset: 640)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3422, file: !3423, line: 73, baseType: !389, size: 64, offset: 704)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3422, file: !3423, line: 74, baseType: !389, size: 64, offset: 768)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3422, file: !3423, line: 75, baseType: !389, size: 64, offset: 832)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3422, file: !3423, line: 76, baseType: !389, size: 64, offset: 896)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3422, file: !3423, line: 81, baseType: !389, size: 64, offset: 960)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3422, file: !3423, line: 83, baseType: !389, size: 64, offset: 1024)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3422, file: !3423, line: 84, baseType: !389, size: 64, offset: 1088)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3422, file: !3423, line: 85, baseType: !389, size: 64, offset: 1152)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3422, file: !3423, line: 86, baseType: !389, size: 64, offset: 1216)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3422, file: !3423, line: 87, baseType: !389, size: 64, offset: 1280)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3398, file: !3338, line: 96, baseType: !480, size: 32, offset: 1024)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3343, file: !3338, line: 308, baseType: !3448, size: 4608, align: 512)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3338, line: 289, size: 4608, align: 512, elements: !3449)
!3449 = !{!3450, !3451, !3458}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3448, file: !3338, line: 290, baseType: !3361, size: 4096, align: 128)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3448, file: !3338, line: 291, baseType: !3452, size: 512, offset: 4096)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3338, line: 268, size: 512, elements: !3453)
!3453 = !{!3454, !3455, !3456}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3452, file: !3338, line: 269, baseType: !486, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3452, file: !3338, line: 270, baseType: !486, size: 64, offset: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3452, file: !3338, line: 271, baseType: !3457, size: 384, offset: 128)
!3457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 384, elements: !1798)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3448, file: !3338, line: 292, baseType: !3459, offset: 4608)
!3459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, elements: !1896)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3343, file: !3338, line: 309, baseType: !3461, size: 32768)
!3461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 32768, elements: !3462)
!3462 = !{!3463}
!3463 = !DISubrange(count: 4096)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1388, file: !840, line: 378, baseType: !3465, size: 64, offset: 64)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1384, file: !840, line: 384, baseType: !1675, size: 192, offset: 192)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1159, file: !840, line: 500, baseType: !298, offset: 6656)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1159, file: !840, line: 501, baseType: !3469, size: 64, offset: 6656)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !840, line: 387, flags: DIFlagFwdDecl)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1159, file: !840, line: 516, baseType: !1886, size: 64, offset: 6720)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1159, file: !840, line: 519, baseType: !417, size: 64, offset: 6784)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1159, file: !840, line: 521, baseType: !3474, size: 64, offset: 6848)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !840, line: 521, flags: DIFlagFwdDecl)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1159, file: !840, line: 545, baseType: !865, size: 32, offset: 6912)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1159, file: !840, line: 548, baseType: !555, size: 8, offset: 6944)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1159, file: !840, line: 550, baseType: !3479, offset: 6952)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3480, line: 142, elements: !312)
!3480 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1159, file: !840, line: 554, baseType: !2167, size: 256, offset: 6976)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1159, file: !840, line: 557, baseType: !480, size: 32, offset: 7232)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1156, file: !840, line: 565, baseType: !3484, offset: 7296)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, elements: !2183)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1152, file: !840, line: 151, baseType: !865, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1144, file: !840, line: 156, baseType: !298, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !840, line: 159, baseType: !3488, size: 128)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !844, file: !840, line: 159, size: 128, elements: !3489)
!3489 = !{!3490, !3534}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3488, file: !840, line: 161, baseType: !3491, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !72, line: 110, size: 1152, elements: !3493)
!3493 = !{!3494, !3504, !3505, !3506, !3507, !3508, !3509, !3521, !3522, !3523}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3492, file: !72, line: 111, baseType: !3495, size: 384)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !72, line: 19, size: 384, elements: !3496)
!3496 = !{!3497, !3499, !3500, !3501, !3502, !3503}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3495, file: !72, line: 20, baseType: !3498, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3495, file: !72, line: 21, baseType: !3498, size: 64, offset: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3495, file: !72, line: 22, baseType: !3498, size: 64, offset: 128)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3495, file: !72, line: 23, baseType: !389, size: 64, offset: 192)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3495, file: !72, line: 24, baseType: !389, size: 64, offset: 256)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3495, file: !72, line: 25, baseType: !389, size: 64, offset: 320)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3492, file: !72, line: 112, baseType: !2143, size: 64, offset: 384)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3492, file: !72, line: 113, baseType: !2129, size: 128, offset: 448)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3492, file: !72, line: 114, baseType: !1675, size: 192, offset: 576)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3492, file: !72, line: 115, baseType: !71, size: 32, offset: 768)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3492, file: !72, line: 116, baseType: !7, size: 32, offset: 800)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3492, file: !72, line: 117, baseType: !3510, size: 64, offset: 832)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3512)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !72, line: 67, size: 256, elements: !3513)
!3513 = !{!3514, !3515, !3519, !3520}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3512, file: !72, line: 73, baseType: !958, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3512, file: !72, line: 78, baseType: !3516, size: 64, offset: 64)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{null, !3491}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3512, file: !72, line: 83, baseType: !3516, size: 64, offset: 128)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3512, file: !72, line: 89, baseType: !1208, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3492, file: !72, line: 118, baseType: !257, size: 64, offset: 896)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3492, file: !72, line: 119, baseType: !324, size: 32, offset: 960)
!3523 = !DIDerivedType(tag: DW_TAG_member, scope: !3492, file: !72, line: 120, baseType: !3524, size: 128, offset: 1024)
!3524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3492, file: !72, line: 120, size: 128, elements: !3525)
!3525 = !{!3526, !3532}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3524, file: !72, line: 121, baseType: !3527, size: 128)
!3527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3528, line: 6, size: 128, elements: !3529)
!3528 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3529 = !{!3530, !3531}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3527, file: !3528, line: 7, baseType: !486, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3527, file: !3528, line: 8, baseType: !486, size: 64, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3524, file: !72, line: 122, baseType: !3533)
!3533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3527, elements: !1896)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3488, file: !840, line: 162, baseType: !257, size: 64, offset: 64)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !844, file: !840, line: 176, baseType: !430, size: 128, align: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, scope: !839, file: !840, line: 179, baseType: !3537, size: 32, offset: 384)
!3537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !839, file: !840, line: 179, size: 32, elements: !3538)
!3538 = !{!3539, !3540, !3541, !3542}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3537, file: !840, line: 184, baseType: !865, size: 32)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3537, file: !840, line: 192, baseType: !7, size: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3537, file: !840, line: 194, baseType: !7, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3537, file: !840, line: 195, baseType: !324, size: 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !839, file: !840, line: 199, baseType: !865, size: 32, offset: 416)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !725, file: !85, line: 1964, baseType: !3545, size: 64, offset: 1344)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!184, !664, !3548}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3550, line: 12, size: 256, elements: !3551)
!3550 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3551 = !{!3552, !3553, !3554, !3555, !3556}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3549, file: !3550, line: 13, baseType: !861, size: 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3549, file: !3550, line: 16, baseType: !324, size: 32, offset: 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3549, file: !3550, line: 23, baseType: !389, size: 64, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3549, file: !3550, line: 30, baseType: !389, size: 64, offset: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3549, file: !3550, line: 33, baseType: !3557, size: 64, offset: 192)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !840, line: 27, flags: DIFlagFwdDecl)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !725, file: !85, line: 1966, baseType: !3545, size: 64, offset: 1408)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !665, file: !85, line: 1424, baseType: !3561, size: 64, offset: 448)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3563)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !79, line: 322, size: 704, elements: !3564)
!3564 = !{!3565, !3611, !3615, !3619, !3620, !3621, !3622, !3623, !3628, !3633, !3637}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3563, file: !79, line: 323, baseType: !3566, size: 64)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!324, !3569}
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !79, line: 294, size: 1600, elements: !3571)
!3571 = !{!3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3596, !3597, !3598}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3570, file: !79, line: 295, baseType: !707, size: 128)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3570, file: !79, line: 296, baseType: !284, size: 128, offset: 128)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3570, file: !79, line: 297, baseType: !284, size: 128, offset: 256)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3570, file: !79, line: 298, baseType: !284, size: 128, offset: 384)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3570, file: !79, line: 299, baseType: !791, size: 192, offset: 512)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3570, file: !79, line: 300, baseType: !298, offset: 704)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3570, file: !79, line: 301, baseType: !865, size: 32, offset: 704)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3570, file: !79, line: 302, baseType: !664, size: 64, offset: 768)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3570, file: !79, line: 303, baseType: !3581, size: 64, offset: 832)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !79, line: 68, size: 64, elements: !3582)
!3582 = !{!3583, !3595}
!3583 = !DIDerivedType(tag: DW_TAG_member, scope: !3581, file: !79, line: 69, baseType: !3584, size: 32)
!3584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3581, file: !79, line: 69, size: 32, elements: !3585)
!3585 = !{!3586, !3587, !3588}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3584, file: !79, line: 70, baseType: !500, size: 32)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3584, file: !79, line: 71, baseType: !508, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3584, file: !79, line: 72, baseType: !3589, size: 32)
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3590, line: 24, baseType: !3591)
!3590 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3590, line: 22, size: 32, elements: !3592)
!3592 = !{!3593}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3591, file: !3590, line: 23, baseType: !3594, size: 32)
!3594 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3590, line: 20, baseType: !506)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3581, file: !79, line: 74, baseType: !78, size: 32, offset: 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3570, file: !79, line: 304, baseType: !596, size: 64, offset: 896)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3570, file: !79, line: 305, baseType: !389, size: 64, offset: 960)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3570, file: !79, line: 306, baseType: !3599, size: 576, offset: 1024)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !79, line: 205, size: 576, elements: !3600)
!3600 = !{!3601, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3599, file: !79, line: 206, baseType: !3602, size: 64)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !79, line: 66, baseType: !598)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3599, file: !79, line: 207, baseType: !3602, size: 64, offset: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3599, file: !79, line: 208, baseType: !3602, size: 64, offset: 128)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3599, file: !79, line: 209, baseType: !3602, size: 64, offset: 192)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3599, file: !79, line: 210, baseType: !3602, size: 64, offset: 256)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3599, file: !79, line: 211, baseType: !3602, size: 64, offset: 320)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3599, file: !79, line: 212, baseType: !3602, size: 64, offset: 384)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3599, file: !79, line: 213, baseType: !604, size: 64, offset: 448)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3599, file: !79, line: 214, baseType: !604, size: 64, offset: 512)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3563, file: !79, line: 324, baseType: !3612, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!3569, !664, !324}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3563, file: !79, line: 325, baseType: !3616, size: 64, offset: 128)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{null, !3569}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3563, file: !79, line: 326, baseType: !3566, size: 64, offset: 192)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3563, file: !79, line: 327, baseType: !3566, size: 64, offset: 256)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3563, file: !79, line: 328, baseType: !3566, size: 64, offset: 320)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3563, file: !79, line: 329, baseType: !753, size: 64, offset: 384)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3563, file: !79, line: 332, baseType: !3624, size: 64, offset: 448)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!3627, !494}
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3563, file: !79, line: 333, baseType: !3629, size: 64, offset: 512)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!324, !494, !3632}
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3563, file: !79, line: 335, baseType: !3634, size: 64, offset: 576)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!324, !494, !3627}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3563, file: !79, line: 337, baseType: !3638, size: 64, offset: 640)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = !DISubroutineType(types: !3640)
!3640 = !{!324, !664, !3641}
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !665, file: !85, line: 1425, baseType: !3643, size: 64, offset: 512)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3645)
!3645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !79, line: 428, size: 704, elements: !3646)
!3646 = !{!3647, !3651, !3652, !3656, !3657, !3658, !3673, !3696, !3700, !3701, !3724}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3645, file: !79, line: 429, baseType: !3648, size: 64)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = !DISubroutineType(types: !3650)
!3650 = !{!324, !664, !324, !324, !614}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3645, file: !79, line: 430, baseType: !753, size: 64, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3645, file: !79, line: 431, baseType: !3653, size: 64, offset: 128)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!324, !664, !7}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3645, file: !79, line: 432, baseType: !3653, size: 64, offset: 192)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3645, file: !79, line: 433, baseType: !753, size: 64, offset: 256)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3645, file: !79, line: 434, baseType: !3659, size: 64, offset: 320)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!324, !664, !324, !3662}
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !79, line: 415, size: 256, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3663, file: !79, line: 416, baseType: !324, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3663, file: !79, line: 417, baseType: !7, size: 32, offset: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3663, file: !79, line: 418, baseType: !7, size: 32, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3663, file: !79, line: 420, baseType: !7, size: 32, offset: 96)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3663, file: !79, line: 421, baseType: !7, size: 32, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3663, file: !79, line: 422, baseType: !7, size: 32, offset: 160)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3663, file: !79, line: 423, baseType: !7, size: 32, offset: 192)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3663, file: !79, line: 424, baseType: !7, size: 32, offset: 224)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3645, file: !79, line: 435, baseType: !3674, size: 64, offset: 384)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!324, !664, !3581, !3677}
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !79, line: 343, size: 960, elements: !3679)
!3679 = !{!3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3678, file: !79, line: 344, baseType: !324, size: 32)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3678, file: !79, line: 345, baseType: !486, size: 64, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3678, file: !79, line: 346, baseType: !486, size: 64, offset: 128)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3678, file: !79, line: 347, baseType: !486, size: 64, offset: 192)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3678, file: !79, line: 348, baseType: !486, size: 64, offset: 256)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3678, file: !79, line: 349, baseType: !486, size: 64, offset: 320)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3678, file: !79, line: 350, baseType: !486, size: 64, offset: 384)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3678, file: !79, line: 351, baseType: !801, size: 64, offset: 448)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3678, file: !79, line: 353, baseType: !801, size: 64, offset: 512)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3678, file: !79, line: 354, baseType: !324, size: 32, offset: 576)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3678, file: !79, line: 355, baseType: !324, size: 32, offset: 608)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3678, file: !79, line: 356, baseType: !486, size: 64, offset: 640)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3678, file: !79, line: 357, baseType: !486, size: 64, offset: 704)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3678, file: !79, line: 358, baseType: !486, size: 64, offset: 768)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3678, file: !79, line: 359, baseType: !801, size: 64, offset: 832)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3678, file: !79, line: 360, baseType: !324, size: 32, offset: 896)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3645, file: !79, line: 436, baseType: !3697, size: 64, offset: 448)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!324, !664, !3641, !3677}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3645, file: !79, line: 438, baseType: !3674, size: 64, offset: 512)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3645, file: !79, line: 439, baseType: !3702, size: 64, offset: 576)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!324, !664, !3705}
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !79, line: 409, size: 1408, elements: !3707)
!3707 = !{!3708, !3709}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3706, file: !79, line: 410, baseType: !7, size: 32)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3706, file: !79, line: 411, baseType: !3710, size: 1344, offset: 64)
!3710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3711, size: 1344, elements: !341)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !79, line: 395, size: 448, elements: !3712)
!3712 = !{!3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721, !3723}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3711, file: !79, line: 396, baseType: !7, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3711, file: !79, line: 397, baseType: !7, size: 32, offset: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3711, file: !79, line: 399, baseType: !7, size: 32, offset: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3711, file: !79, line: 400, baseType: !7, size: 32, offset: 96)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3711, file: !79, line: 401, baseType: !7, size: 32, offset: 128)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3711, file: !79, line: 402, baseType: !7, size: 32, offset: 160)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3711, file: !79, line: 403, baseType: !7, size: 32, offset: 192)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3711, file: !79, line: 404, baseType: !488, size: 64, offset: 256)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3711, file: !79, line: 405, baseType: !3722, size: 64, offset: 320)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !285, line: 126, baseType: !486)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3711, file: !79, line: 406, baseType: !3722, size: 64, offset: 384)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3645, file: !79, line: 440, baseType: !3653, size: 64, offset: 640)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !665, file: !85, line: 1426, baseType: !3726, size: 64, offset: 576)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3728)
!3728 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !85, line: 49, flags: DIFlagFwdDecl)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !665, file: !85, line: 1427, baseType: !389, size: 64, offset: 640)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !665, file: !85, line: 1428, baseType: !389, size: 64, offset: 704)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !665, file: !85, line: 1429, baseType: !389, size: 64, offset: 768)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !665, file: !85, line: 1430, baseType: !447, size: 64, offset: 832)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !665, file: !85, line: 1431, baseType: !885, size: 256, offset: 896)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !665, file: !85, line: 1432, baseType: !324, size: 32, offset: 1152)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !665, file: !85, line: 1433, baseType: !865, size: 32, offset: 1184)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !665, file: !85, line: 1437, baseType: !3737, size: 64, offset: 1216)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3740)
!3740 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !85, line: 1437, flags: DIFlagFwdDecl)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !665, file: !85, line: 1449, baseType: !3742, size: 64, offset: 1280)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !463, line: 34, size: 64, elements: !3743)
!3743 = !{!3744}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3742, file: !463, line: 35, baseType: !466, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !665, file: !85, line: 1450, baseType: !284, size: 128, offset: 1344)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !665, file: !85, line: 1451, baseType: !2200, size: 64, offset: 1472)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !665, file: !85, line: 1452, baseType: !2220, size: 64, offset: 1536)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !665, file: !85, line: 1453, baseType: !3749, size: 64, offset: 1600)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !85, line: 1453, flags: DIFlagFwdDecl)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !665, file: !85, line: 1454, baseType: !707, size: 128, offset: 1664)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !665, file: !85, line: 1455, baseType: !7, size: 32, offset: 1792)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !665, file: !85, line: 1456, baseType: !3754, size: 2432, offset: 1856)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !79, line: 518, size: 2432, elements: !3755)
!3755 = !{!3756, !3757, !3758, !3760, !3792}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3754, file: !79, line: 519, baseType: !7, size: 32)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3754, file: !79, line: 520, baseType: !885, size: 256, offset: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3754, file: !79, line: 521, baseType: !3759, size: 192, offset: 320)
!3759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 192, elements: !341)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3754, file: !79, line: 522, baseType: !3761, size: 1728, offset: 512)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3762, size: 1728, elements: !341)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !79, line: 222, size: 576, elements: !3763)
!3763 = !{!3764, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3762, file: !79, line: 223, baseType: !3765, size: 64)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !79, line: 443, size: 256, elements: !3767)
!3767 = !{!3768, !3769, !3782, !3783}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3766, file: !79, line: 444, baseType: !324, size: 32)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3766, file: !79, line: 445, baseType: !3770, size: 64, offset: 64)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3772)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !79, line: 310, size: 512, elements: !3773)
!3773 = !{!3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3772, file: !79, line: 311, baseType: !753, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3772, file: !79, line: 312, baseType: !753, size: 64, offset: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3772, file: !79, line: 313, baseType: !753, size: 64, offset: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3772, file: !79, line: 314, baseType: !753, size: 64, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3772, file: !79, line: 315, baseType: !3566, size: 64, offset: 256)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3772, file: !79, line: 316, baseType: !3566, size: 64, offset: 320)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3772, file: !79, line: 317, baseType: !3566, size: 64, offset: 384)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3772, file: !79, line: 318, baseType: !3638, size: 64, offset: 448)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3766, file: !79, line: 446, baseType: !698, size: 64, offset: 128)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3766, file: !79, line: 447, baseType: !3765, size: 64, offset: 192)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3762, file: !79, line: 224, baseType: !324, size: 32, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3762, file: !79, line: 226, baseType: !284, size: 128, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3762, file: !79, line: 227, baseType: !389, size: 64, offset: 256)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3762, file: !79, line: 228, baseType: !7, size: 32, offset: 320)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3762, file: !79, line: 229, baseType: !7, size: 32, offset: 352)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3762, file: !79, line: 230, baseType: !3602, size: 64, offset: 384)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3762, file: !79, line: 231, baseType: !3602, size: 64, offset: 448)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3762, file: !79, line: 232, baseType: !257, size: 64, offset: 512)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3754, file: !79, line: 523, baseType: !3793, size: 192, offset: 2240)
!3793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3770, size: 192, elements: !341)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !665, file: !85, line: 1458, baseType: !3795, size: 2112, offset: 4288)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !85, line: 1410, size: 2112, elements: !3796)
!3796 = !{!3797, !3798, !3799}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3795, file: !85, line: 1411, baseType: !324, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3795, file: !85, line: 1412, baseType: !1655, size: 128, offset: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3795, file: !85, line: 1413, baseType: !3800, size: 1920, offset: 192)
!3800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3801, size: 1920, elements: !341)
!3801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3802, line: 12, size: 640, elements: !3803)
!3802 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3803 = !{!3804, !3812, !3813, !3818, !3819}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3801, file: !3802, line: 13, baseType: !3805, size: 320)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3806, line: 17, size: 320, elements: !3807)
!3806 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3807 = !{!3808, !3809, !3810, !3811}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3805, file: !3806, line: 18, baseType: !324, size: 32)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3805, file: !3806, line: 19, baseType: !324, size: 32, offset: 32)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3805, file: !3806, line: 20, baseType: !1655, size: 128, offset: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3805, file: !3806, line: 22, baseType: !430, size: 128, align: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3801, file: !3802, line: 14, baseType: !2775, size: 64, offset: 320)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3801, file: !3802, line: 15, baseType: !3814, size: 64, offset: 384)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3815, line: 16, size: 64, elements: !3816)
!3815 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3816 = !{!3817}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3814, file: !3815, line: 17, baseType: !1391, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3801, file: !3802, line: 16, baseType: !1655, size: 128, offset: 448)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3801, file: !3802, line: 17, baseType: !865, size: 32, offset: 576)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !665, file: !85, line: 1465, baseType: !257, size: 64, offset: 6400)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !665, file: !85, line: 1468, baseType: !480, size: 32, offset: 6464)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !665, file: !85, line: 1470, baseType: !604, size: 64, offset: 6528)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !665, file: !85, line: 1471, baseType: !604, size: 64, offset: 6592)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !665, file: !85, line: 1473, baseType: !482, size: 32, offset: 6656)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !665, file: !85, line: 1474, baseType: !3826, size: 64, offset: 6720)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !85, line: 603, flags: DIFlagFwdDecl)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !665, file: !85, line: 1477, baseType: !2107, size: 256, offset: 6784)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !665, file: !85, line: 1478, baseType: !3830, size: 128, offset: 7040)
!3830 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3831, line: 18, baseType: !3832)
!3831 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3831, line: 16, size: 128, elements: !3833)
!3833 = !{!3834}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3832, file: !3831, line: 17, baseType: !3835, size: 128)
!3835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 128, elements: !1908)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !665, file: !85, line: 1480, baseType: !7, size: 32, offset: 7168)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !665, file: !85, line: 1481, baseType: !2303, size: 32, offset: 7200)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !665, file: !85, line: 1487, baseType: !791, size: 192, offset: 7232)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !665, file: !85, line: 1493, baseType: !280, size: 64, offset: 7424)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !665, file: !85, line: 1495, baseType: !3841, size: 64, offset: 7488)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3843)
!3843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !445, line: 135, size: 1024, align: 512, elements: !3844)
!3844 = !{!3845, !3849, !3850, !3857, !3863, !3867, !3871, !3875, !3876, !3880, !3884, !3889, !3893}
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3843, file: !445, line: 136, baseType: !3846, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!324, !447, !7}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3843, file: !445, line: 137, baseType: !3846, size: 64, offset: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3843, file: !445, line: 138, baseType: !3851, size: 64, offset: 128)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!324, !3854, !3856}
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3843, file: !445, line: 139, baseType: !3858, size: 64, offset: 192)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!324, !3854, !7, !280, !3861}
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3843, file: !445, line: 141, baseType: !3864, size: 64, offset: 256)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!324, !3854}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3843, file: !445, line: 142, baseType: !3868, size: 64, offset: 320)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!324, !447}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3843, file: !445, line: 143, baseType: !3872, size: 64, offset: 384)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{null, !447}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3843, file: !445, line: 144, baseType: !3872, size: 64, offset: 448)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3843, file: !445, line: 145, baseType: !3877, size: 64, offset: 512)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{null, !447, !494}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3843, file: !445, line: 146, baseType: !3881, size: 64, offset: 576)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!340, !447, !340, !324}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3843, file: !445, line: 147, baseType: !3885, size: 64, offset: 640)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!443, !3888}
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3843, file: !445, line: 148, baseType: !3890, size: 64, offset: 704)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!324, !614, !555}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3843, file: !445, line: 149, baseType: !3894, size: 64, offset: 768)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DISubroutineType(types: !3896)
!3896 = !{!447, !447, !3897}
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !495)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !665, file: !85, line: 1500, baseType: !324, size: 32, offset: 7552)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !665, file: !85, line: 1502, baseType: !3901, size: 448, offset: 7616)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3550, line: 60, size: 448, elements: !3902)
!3902 = !{!3903, !3908, !3909, !3910, !3911, !3912, !3913}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3901, file: !3550, line: 61, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!389, !3907, !3548}
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3901, file: !3550, line: 63, baseType: !3904, size: 64, offset: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3901, file: !3550, line: 66, baseType: !184, size: 64, offset: 128)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3901, file: !3550, line: 67, baseType: !324, size: 32, offset: 192)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3901, file: !3550, line: 68, baseType: !7, size: 32, offset: 224)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3901, file: !3550, line: 71, baseType: !284, size: 128, offset: 256)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3901, file: !3550, line: 77, baseType: !3914, size: 64, offset: 384)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !665, file: !85, line: 1505, baseType: !795, size: 64, offset: 8064)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !665, file: !85, line: 1508, baseType: !795, size: 64, offset: 8128)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !665, file: !85, line: 1511, baseType: !324, size: 32, offset: 8192)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !665, file: !85, line: 1514, baseType: !1089, size: 32, offset: 8224)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !665, file: !85, line: 1517, baseType: !2179, size: 64, offset: 8256)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !665, file: !85, line: 1518, baseType: !703, size: 64, offset: 8320)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !665, file: !85, line: 1525, baseType: !1886, size: 64, offset: 8384)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !665, file: !85, line: 1532, baseType: !3923, size: 64, offset: 8448)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3924, line: 52, size: 64, elements: !3925)
!3924 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3925 = !{!3926}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3923, file: !3924, line: 53, baseType: !3927, size: 64)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3924, line: 40, size: 256, elements: !3929)
!3929 = !{!3930, !3931, !3936}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3928, file: !3924, line: 42, baseType: !298)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3928, file: !3924, line: 44, baseType: !3932, size: 192)
!3932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3924, line: 28, size: 192, elements: !3933)
!3933 = !{!3934, !3935}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3932, file: !3924, line: 29, baseType: !284, size: 128)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3932, file: !3924, line: 31, baseType: !184, size: 64, offset: 128)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3928, file: !3924, line: 49, baseType: !184, size: 64, offset: 192)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !665, file: !85, line: 1533, baseType: !3923, size: 64, offset: 8512)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !665, file: !85, line: 1534, baseType: !430, size: 128, align: 64, offset: 8576)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !665, file: !85, line: 1535, baseType: !2167, size: 256, offset: 8704)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !665, file: !85, line: 1537, baseType: !791, size: 192, offset: 8960)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !665, file: !85, line: 1542, baseType: !324, size: 32, offset: 9152)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !665, file: !85, line: 1545, baseType: !298, offset: 9184)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !665, file: !85, line: 1546, baseType: !284, size: 128, offset: 9216)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !665, file: !85, line: 1548, baseType: !298, offset: 9344)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !665, file: !85, line: 1549, baseType: !284, size: 128, offset: 9344)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !495, file: !85, line: 624, baseType: !851, size: 64, offset: 256)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !495, file: !85, line: 631, baseType: !389, size: 64, offset: 320)
!3948 = !DIDerivedType(tag: DW_TAG_member, scope: !495, file: !85, line: 639, baseType: !3949, size: 32, offset: 384)
!3949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !495, file: !85, line: 639, size: 32, elements: !3950)
!3950 = !{!3951, !3952}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3949, file: !85, line: 640, baseType: !2705, size: 32)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3949, file: !85, line: 641, baseType: !7, size: 32)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !495, file: !85, line: 643, baseType: !578, size: 32, offset: 416)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !495, file: !85, line: 644, baseType: !596, size: 64, offset: 448)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !495, file: !85, line: 645, baseType: !600, size: 128, offset: 512)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !495, file: !85, line: 646, baseType: !600, size: 128, offset: 640)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !495, file: !85, line: 647, baseType: !600, size: 128, offset: 768)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !495, file: !85, line: 648, baseType: !298, offset: 896)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !495, file: !85, line: 649, baseType: !381, size: 16, offset: 896)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !495, file: !85, line: 650, baseType: !1526, size: 8, offset: 912)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !495, file: !85, line: 651, baseType: !1526, size: 8, offset: 920)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !495, file: !85, line: 652, baseType: !3722, size: 64, offset: 960)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !495, file: !85, line: 659, baseType: !389, size: 64, offset: 1024)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !495, file: !85, line: 660, baseType: !885, size: 256, offset: 1088)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !495, file: !85, line: 662, baseType: !389, size: 64, offset: 1344)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !495, file: !85, line: 663, baseType: !389, size: 64, offset: 1408)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !495, file: !85, line: 665, baseType: !707, size: 128, offset: 1472)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !495, file: !85, line: 666, baseType: !284, size: 128, offset: 1600)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !495, file: !85, line: 675, baseType: !284, size: 128, offset: 1728)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !495, file: !85, line: 676, baseType: !284, size: 128, offset: 1856)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !495, file: !85, line: 677, baseType: !284, size: 128, offset: 1984)
!3972 = !DIDerivedType(tag: DW_TAG_member, scope: !495, file: !85, line: 678, baseType: !3973, size: 128, offset: 2112)
!3973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !495, file: !85, line: 678, size: 128, elements: !3974)
!3974 = !{!3975, !3976}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3973, file: !85, line: 679, baseType: !703, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3973, file: !85, line: 680, baseType: !430, size: 128, align: 64)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !495, file: !85, line: 682, baseType: !797, size: 64, offset: 2240)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !495, file: !85, line: 683, baseType: !797, size: 64, offset: 2304)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !495, file: !85, line: 684, baseType: !865, size: 32, offset: 2368)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !495, file: !85, line: 685, baseType: !865, size: 32, offset: 2400)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !495, file: !85, line: 686, baseType: !865, size: 32, offset: 2432)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !495, file: !85, line: 688, baseType: !865, size: 32, offset: 2464)
!3983 = !DIDerivedType(tag: DW_TAG_member, scope: !495, file: !85, line: 690, baseType: !3984, size: 64, offset: 2496)
!3984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !495, file: !85, line: 690, size: 64, elements: !3985)
!3985 = !{!3986, !4208}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3984, file: !85, line: 691, baseType: !3987, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3989)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !85, line: 1822, size: 2048, elements: !3990)
!3990 = !{!3991, !3992, !3996, !4000, !4004, !4005, !4006, !4010, !4023, !4024, !4032, !4036, !4037, !4041, !4042, !4046, !4051, !4052, !4056, !4060, !4168, !4172, !4173, !4177, !4178, !4182, !4186, !4191, !4195, !4199, !4203, !4207}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3989, file: !85, line: 1823, baseType: !698, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3989, file: !85, line: 1824, baseType: !3993, size: 64, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!596, !417, !596, !324}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3989, file: !85, line: 1825, baseType: !3997, size: 64, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!371, !417, !340, !386, !813}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3989, file: !85, line: 1826, baseType: !4001, size: 64, offset: 192)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!371, !417, !280, !386, !813}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3989, file: !85, line: 1827, baseType: !962, size: 64, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3989, file: !85, line: 1828, baseType: !962, size: 64, offset: 320)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3989, file: !85, line: 1829, baseType: !4007, size: 64, offset: 384)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!324, !965, !555}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3989, file: !85, line: 1830, baseType: !4011, size: 64, offset: 448)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!324, !417, !4014}
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !85, line: 1776, size: 128, elements: !4016)
!4016 = !{!4017, !4022}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4015, file: !85, line: 1777, baseType: !4018, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !85, line: 1773, baseType: !4019)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!324, !4014, !280, !324, !596, !486, !7}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4015, file: !85, line: 1778, baseType: !596, size: 64, offset: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3989, file: !85, line: 1831, baseType: !4011, size: 64, offset: 512)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3989, file: !85, line: 1832, baseType: !4025, size: 64, offset: 576)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{!4028, !417, !4030}
!4028 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4029, line: 52, baseType: !7)
!4029 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !684, line: 27, flags: DIFlagFwdDecl)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3989, file: !85, line: 1833, baseType: !4033, size: 64, offset: 640)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!184, !417, !7, !389}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3989, file: !85, line: 1834, baseType: !4033, size: 64, offset: 704)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3989, file: !85, line: 1835, baseType: !4038, size: 64, offset: 768)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!324, !417, !1162}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3989, file: !85, line: 1836, baseType: !389, size: 64, offset: 832)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3989, file: !85, line: 1837, baseType: !4043, size: 64, offset: 896)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!324, !494, !417}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3989, file: !85, line: 1838, baseType: !4047, size: 64, offset: 960)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!324, !417, !4050}
!4050 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !85, line: 1007, baseType: !257)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3989, file: !85, line: 1839, baseType: !4043, size: 64, offset: 1024)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3989, file: !85, line: 1840, baseType: !4053, size: 64, offset: 1088)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!324, !417, !596, !596, !324}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3989, file: !85, line: 1841, baseType: !4057, size: 64, offset: 1152)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 64)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{!324, !324, !417, !324}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3989, file: !85, line: 1842, baseType: !4061, size: 64, offset: 1216)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!324, !417, !324, !4064}
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !85, line: 1062, size: 1664, elements: !4066)
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4098, !4099, !4100, !4113, !4144}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4065, file: !85, line: 1063, baseType: !4064, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4065, file: !85, line: 1064, baseType: !284, size: 128, offset: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4065, file: !85, line: 1065, baseType: !707, size: 128, offset: 192)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4065, file: !85, line: 1066, baseType: !284, size: 128, offset: 320)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4065, file: !85, line: 1069, baseType: !284, size: 128, offset: 448)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4065, file: !85, line: 1072, baseType: !4050, size: 64, offset: 576)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4065, file: !85, line: 1073, baseType: !7, size: 32, offset: 640)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4065, file: !85, line: 1074, baseType: !492, size: 8, offset: 672)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4065, file: !85, line: 1075, baseType: !7, size: 32, offset: 704)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4065, file: !85, line: 1076, baseType: !324, size: 32, offset: 736)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4065, file: !85, line: 1077, baseType: !1655, size: 128, offset: 768)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4065, file: !85, line: 1078, baseType: !417, size: 64, offset: 896)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4065, file: !85, line: 1079, baseType: !596, size: 64, offset: 960)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4065, file: !85, line: 1080, baseType: !596, size: 64, offset: 1024)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4065, file: !85, line: 1082, baseType: !4082, size: 64, offset: 1088)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !85, line: 1314, size: 320, elements: !4084)
!4084 = !{!4085, !4093, !4094, !4095, !4096, !4097}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4083, file: !85, line: 1315, baseType: !4086)
!4086 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4087, line: 20, baseType: !4088)
!4087 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4087, line: 11, elements: !4089)
!4089 = !{!4090}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4088, file: !4087, line: 12, baseType: !4091)
!4091 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !310, line: 33, baseType: !4092)
!4092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !310, line: 31, elements: !312)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4083, file: !85, line: 1316, baseType: !324, size: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4083, file: !85, line: 1317, baseType: !324, size: 32, offset: 32)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4083, file: !85, line: 1318, baseType: !4082, size: 64, offset: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4083, file: !85, line: 1319, baseType: !417, size: 64, offset: 128)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4083, file: !85, line: 1320, baseType: !430, size: 128, align: 64, offset: 192)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4065, file: !85, line: 1084, baseType: !389, size: 64, offset: 1152)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4065, file: !85, line: 1085, baseType: !389, size: 64, offset: 1216)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4065, file: !85, line: 1087, baseType: !4101, size: 64, offset: 1280)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4103)
!4103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !85, line: 1011, size: 128, elements: !4104)
!4104 = !{!4105, !4109}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4103, file: !85, line: 1012, baseType: !4106, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{null, !4064, !4064}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4103, file: !85, line: 1013, baseType: !4110, size: 64, offset: 64)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{null, !4064}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4065, file: !85, line: 1088, baseType: !4114, size: 64, offset: 1344)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4116)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !85, line: 1016, size: 512, elements: !4117)
!4117 = !{!4118, !4122, !4126, !4127, !4131, !4135, !4139, !4143}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4116, file: !85, line: 1017, baseType: !4119, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!4050, !4050}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4116, file: !85, line: 1018, baseType: !4123, size: 64, offset: 64)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{null, !4050}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4116, file: !85, line: 1019, baseType: !4110, size: 64, offset: 128)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4116, file: !85, line: 1020, baseType: !4128, size: 64, offset: 192)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!324, !4064, !324}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4116, file: !85, line: 1021, baseType: !4132, size: 64, offset: 256)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!555, !4064}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4116, file: !85, line: 1022, baseType: !4136, size: 64, offset: 320)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!324, !4064, !324, !288}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4116, file: !85, line: 1023, baseType: !4140, size: 64, offset: 384)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{null, !4064, !939}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4116, file: !85, line: 1024, baseType: !4132, size: 64, offset: 448)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4065, file: !85, line: 1097, baseType: !4145, size: 256, offset: 1408)
!4145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4065, file: !85, line: 1089, size: 256, elements: !4146)
!4146 = !{!4147, !4156, !4162}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4145, file: !85, line: 1090, baseType: !4148, size: 256)
!4148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4149, line: 10, size: 256, elements: !4150)
!4149 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4150 = !{!4151, !4152, !4155}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4148, file: !4149, line: 11, baseType: !480, size: 32)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4148, file: !4149, line: 12, baseType: !4153, size: 64, offset: 64)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4149, line: 5, flags: DIFlagFwdDecl)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4148, file: !4149, line: 13, baseType: !284, size: 128, offset: 128)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4145, file: !85, line: 1091, baseType: !4157, size: 64)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4149, line: 17, size: 64, elements: !4158)
!4158 = !{!4159}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4157, file: !4149, line: 18, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4149, line: 16, flags: DIFlagFwdDecl)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4145, file: !85, line: 1096, baseType: !4163, size: 192)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4145, file: !85, line: 1092, size: 192, elements: !4164)
!4164 = !{!4165, !4166, !4167}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4163, file: !85, line: 1093, baseType: !284, size: 128)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4163, file: !85, line: 1094, baseType: !324, size: 32, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4163, file: !85, line: 1095, baseType: !7, size: 32, offset: 160)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3989, file: !85, line: 1843, baseType: !4169, size: 64, offset: 1280)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!371, !417, !838, !324, !386, !813, !324}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3989, file: !85, line: 1844, baseType: !1282, size: 64, offset: 1344)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3989, file: !85, line: 1845, baseType: !4174, size: 64, offset: 1408)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!324, !324}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3989, file: !85, line: 1846, baseType: !4061, size: 64, offset: 1472)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3989, file: !85, line: 1847, baseType: !4179, size: 64, offset: 1536)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!371, !1039, !417, !813, !386, !7}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3989, file: !85, line: 1848, baseType: !4183, size: 64, offset: 1600)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!371, !417, !813, !1039, !386, !7}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3989, file: !85, line: 1849, baseType: !4187, size: 64, offset: 1664)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!324, !417, !184, !4190, !939}
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3989, file: !85, line: 1850, baseType: !4192, size: 64, offset: 1728)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!184, !417, !324, !596, !596}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3989, file: !85, line: 1852, baseType: !4196, size: 64, offset: 1792)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{null, !779, !417}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3989, file: !85, line: 1856, baseType: !4200, size: 64, offset: 1856)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!371, !417, !596, !417, !596, !386, !7}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3989, file: !85, line: 1858, baseType: !4204, size: 64, offset: 1920)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!596, !417, !596, !417, !596, !596, !7}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3989, file: !85, line: 1861, baseType: !4053, size: 64, offset: 1984)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3984, file: !85, line: 692, baseType: !732, size: 64)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !495, file: !85, line: 694, baseType: !4210, size: 64, offset: 2560)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !85, line: 1100, size: 384, elements: !4212)
!4212 = !{!4213, !4214, !4215, !4216}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4211, file: !85, line: 1101, baseType: !298)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4211, file: !85, line: 1102, baseType: !284, size: 128)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4211, file: !85, line: 1103, baseType: !284, size: 128, offset: 128)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4211, file: !85, line: 1104, baseType: !284, size: 128, offset: 256)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !495, file: !85, line: 695, baseType: !852, size: 1216, align: 64, offset: 2624)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !495, file: !85, line: 696, baseType: !284, size: 128, offset: 3840)
!4219 = !DIDerivedType(tag: DW_TAG_member, scope: !495, file: !85, line: 697, baseType: !4220, size: 64, offset: 3968)
!4220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !495, file: !85, line: 697, size: 64, elements: !4221)
!4221 = !{!4222, !4223, !4224, !4235, !4236}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4220, file: !85, line: 698, baseType: !1039, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4220, file: !85, line: 699, baseType: !2200, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4220, file: !85, line: 700, baseType: !4225, size: 64)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4226, size: 64)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !4227, line: 14, size: 832, elements: !4228)
!4227 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!4228 = !{!4229, !4230, !4231, !4232, !4233, !4234}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4226, file: !4227, line: 15, baseType: !276, size: 512)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4226, file: !4227, line: 16, baseType: !698, size: 64, offset: 512)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4226, file: !4227, line: 17, baseType: !3987, size: 64, offset: 576)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4226, file: !4227, line: 18, baseType: !284, size: 128, offset: 640)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4226, file: !4227, line: 19, baseType: !578, size: 32, offset: 768)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4226, file: !4227, line: 20, baseType: !7, size: 32, offset: 800)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4220, file: !85, line: 701, baseType: !340, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4220, file: !85, line: 702, baseType: !7, size: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !495, file: !85, line: 705, baseType: !482, size: 32, offset: 4032)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !495, file: !85, line: 708, baseType: !482, size: 32, offset: 4064)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !495, file: !85, line: 709, baseType: !3826, size: 64, offset: 4096)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !495, file: !85, line: 720, baseType: !257, size: 64, offset: 4160)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !448, file: !445, line: 98, baseType: !4242, size: 256, offset: 448)
!4242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 256, elements: !2108)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !448, file: !445, line: 101, baseType: !4244, size: 32, offset: 704)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4245, line: 25, size: 32, elements: !4246)
!4245 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4246 = !{!4247}
!4247 = !DIDerivedType(tag: DW_TAG_member, scope: !4244, file: !4245, line: 26, baseType: !4248, size: 32)
!4248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4244, file: !4245, line: 26, size: 32, elements: !4249)
!4249 = !{!4250}
!4250 = !DIDerivedType(tag: DW_TAG_member, scope: !4248, file: !4245, line: 30, baseType: !4251, size: 32)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4248, file: !4245, line: 30, size: 32, elements: !4252)
!4252 = !{!4253, !4254}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4251, file: !4245, line: 31, baseType: !298)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4251, file: !4245, line: 32, baseType: !324, size: 32)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !448, file: !445, line: 102, baseType: !3841, size: 64, offset: 768)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !448, file: !445, line: 103, baseType: !664, size: 64, offset: 832)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !448, file: !445, line: 104, baseType: !389, size: 64, offset: 896)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !448, file: !445, line: 105, baseType: !257, size: 64, offset: 960)
!4259 = !DIDerivedType(tag: DW_TAG_member, scope: !448, file: !445, line: 107, baseType: !4260, size: 128, offset: 1024)
!4260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !445, line: 107, size: 128, elements: !4261)
!4261 = !{!4262, !4263}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4260, file: !445, line: 108, baseType: !284, size: 128)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4260, file: !445, line: 109, baseType: !4264, size: 64)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !448, file: !445, line: 111, baseType: !284, size: 128, offset: 1152)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !448, file: !445, line: 112, baseType: !284, size: 128, offset: 1280)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !448, file: !445, line: 120, baseType: !4268, size: 128, offset: 1408)
!4268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !445, line: 116, size: 128, elements: !4269)
!4269 = !{!4270, !4271, !4272}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4268, file: !445, line: 117, baseType: !707, size: 128)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4268, file: !445, line: 118, baseType: !462, size: 128)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4268, file: !445, line: 119, baseType: !430, size: 128, align: 64)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !418, file: !85, line: 922, baseType: !494, size: 64, offset: 256)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !418, file: !85, line: 923, baseType: !3987, size: 64, offset: 320)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !418, file: !85, line: 929, baseType: !298, offset: 384)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !418, file: !85, line: 930, baseType: !84, size: 32, offset: 384)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !418, file: !85, line: 931, baseType: !795, size: 64, offset: 448)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !418, file: !85, line: 932, baseType: !7, size: 32, offset: 512)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !418, file: !85, line: 933, baseType: !2303, size: 32, offset: 544)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !418, file: !85, line: 934, baseType: !791, size: 192, offset: 576)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !418, file: !85, line: 935, baseType: !596, size: 64, offset: 768)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !418, file: !85, line: 936, baseType: !4283, size: 192, offset: 832)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !85, line: 885, size: 192, elements: !4284)
!4284 = !{!4285, !4286, !4287, !4288, !4289, !4290}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4283, file: !85, line: 886, baseType: !4086)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4283, file: !85, line: 887, baseType: !1645, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4283, file: !85, line: 888, baseType: !93, size: 32, offset: 64)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4283, file: !85, line: 889, baseType: !500, size: 32, offset: 96)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4283, file: !85, line: 889, baseType: !500, size: 32, offset: 128)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4283, file: !85, line: 890, baseType: !324, size: 32, offset: 160)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !418, file: !85, line: 937, baseType: !1720, size: 64, offset: 1024)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !418, file: !85, line: 938, baseType: !4293, size: 256, offset: 1088)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !85, line: 896, size: 256, elements: !4294)
!4294 = !{!4295, !4296, !4297, !4298, !4299, !4300}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4293, file: !85, line: 897, baseType: !389, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4293, file: !85, line: 898, baseType: !7, size: 32, offset: 64)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4293, file: !85, line: 899, baseType: !7, size: 32, offset: 96)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4293, file: !85, line: 902, baseType: !7, size: 32, offset: 128)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4293, file: !85, line: 903, baseType: !7, size: 32, offset: 160)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4293, file: !85, line: 904, baseType: !596, size: 64, offset: 192)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !418, file: !85, line: 940, baseType: !486, size: 64, offset: 1344)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !418, file: !85, line: 945, baseType: !257, size: 64, offset: 1408)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !418, file: !85, line: 949, baseType: !284, size: 128, offset: 1472)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !418, file: !85, line: 950, baseType: !284, size: 128, offset: 1600)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !418, file: !85, line: 952, baseType: !851, size: 64, offset: 1728)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !418, file: !85, line: 953, baseType: !1089, size: 32, offset: 1792)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !418, file: !85, line: 954, baseType: !1089, size: 32, offset: 1824)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !408, file: !365, line: 174, baseType: !414, size: 64, offset: 320)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !408, file: !365, line: 176, baseType: !4310, size: 64, offset: 384)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!324, !417, !291, !407, !1162}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !396, file: !365, line: 90, baseType: !391, size: 64, offset: 192)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !396, file: !365, line: 91, baseType: !4315, size: 64, offset: 256)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !355, file: !277, line: 143, baseType: !4317, size: 64, offset: 256)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!4320, !291}
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4322)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !102, line: 39, size: 384, elements: !4323)
!4323 = !{!4324, !4325, !4329, !4333, !4339, !4343}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4322, file: !102, line: 40, baseType: !101, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4322, file: !102, line: 41, baseType: !4326, size: 64, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!555}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4322, file: !102, line: 42, baseType: !4330, size: 64, offset: 128)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!257}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4322, file: !102, line: 43, baseType: !4334, size: 64, offset: 192)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DISubroutineType(types: !4336)
!4336 = !{!3283, !4337}
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !102, line: 19, flags: DIFlagFwdDecl)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4322, file: !102, line: 44, baseType: !4340, size: 64, offset: 256)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!3283}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4322, file: !102, line: 45, baseType: !533, size: 64, offset: 320)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !355, file: !277, line: 144, baseType: !4345, size: 64, offset: 320)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!3283, !291}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !355, file: !277, line: 145, baseType: !4349, size: 64, offset: 384)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{null, !291, !4352, !4353}
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !276, file: !277, line: 70, baseType: !4355, size: 64, offset: 384)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !684, line: 123, size: 1024, elements: !4357)
!4357 = !{!4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4474, !4475, !4476, !4477, !4478}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4356, file: !684, line: 124, baseType: !865, size: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4356, file: !684, line: 125, baseType: !865, size: 32, offset: 32)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4356, file: !684, line: 135, baseType: !4355, size: 64, offset: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4356, file: !684, line: 136, baseType: !280, size: 64, offset: 128)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4356, file: !684, line: 138, baseType: !878, size: 192, align: 64, offset: 192)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4356, file: !684, line: 140, baseType: !3283, size: 64, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4356, file: !684, line: 141, baseType: !7, size: 32, offset: 448)
!4365 = !DIDerivedType(tag: DW_TAG_member, scope: !4356, file: !684, line: 142, baseType: !4366, size: 256, offset: 512)
!4366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4356, file: !684, line: 142, size: 256, elements: !4367)
!4367 = !{!4368, !4414, !4418}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4366, file: !684, line: 143, baseType: !4369, size: 192)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !684, line: 91, size: 192, elements: !4370)
!4370 = !{!4371, !4372, !4373}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4369, file: !684, line: 92, baseType: !389, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4369, file: !684, line: 94, baseType: !874, size: 64, offset: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4369, file: !684, line: 100, baseType: !4374, size: 64, offset: 128)
!4374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !684, line: 180, size: 704, elements: !4376)
!4376 = !{!4377, !4378, !4379, !4386, !4387, !4388, !4412, !4413}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4375, file: !684, line: 182, baseType: !4355, size: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4375, file: !684, line: 183, baseType: !7, size: 32, offset: 64)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4375, file: !684, line: 186, baseType: !4380, size: 192, offset: 128)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4381, line: 19, size: 192, elements: !4382)
!4381 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4382 = !{!4383, !4384, !4385}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4380, file: !4381, line: 20, baseType: !856, size: 128)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4380, file: !4381, line: 21, baseType: !7, size: 32, offset: 128)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4380, file: !4381, line: 22, baseType: !7, size: 32, offset: 160)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4375, file: !684, line: 187, baseType: !480, size: 32, offset: 320)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4375, file: !684, line: 188, baseType: !480, size: 32, offset: 352)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4375, file: !684, line: 189, baseType: !4389, size: 64, offset: 384)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !684, line: 168, size: 320, elements: !4391)
!4391 = !{!4392, !4396, !4400, !4404, !4408}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4390, file: !684, line: 169, baseType: !4393, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!324, !779, !4374}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4390, file: !684, line: 171, baseType: !4397, size: 64, offset: 64)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!324, !4355, !280, !380}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4390, file: !684, line: 173, baseType: !4401, size: 64, offset: 128)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!324, !4355}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4390, file: !684, line: 174, baseType: !4405, size: 64, offset: 192)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!324, !4355, !4355, !280}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4390, file: !684, line: 176, baseType: !4409, size: 64, offset: 256)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!324, !779, !4355, !4374}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4375, file: !684, line: 192, baseType: !284, size: 128, offset: 448)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4375, file: !684, line: 194, baseType: !1655, size: 128, offset: 576)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4366, file: !684, line: 144, baseType: !4415, size: 64)
!4415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !684, line: 103, size: 64, elements: !4416)
!4416 = !{!4417}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4415, file: !684, line: 104, baseType: !4355, size: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4366, file: !684, line: 145, baseType: !4419, size: 256)
!4419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !684, line: 107, size: 256, elements: !4420)
!4420 = !{!4421, !4469, !4472, !4473}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4419, file: !684, line: 108, baseType: !4422, size: 64)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4424)
!4424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !684, line: 217, size: 768, elements: !4425)
!4425 = !{!4426, !4446, !4450, !4451, !4452, !4453, !4454, !4458, !4459, !4460, !4461, !4465}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4424, file: !684, line: 222, baseType: !4427, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!324, !4430}
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !684, line: 197, size: 1088, elements: !4432)
!4432 = !{!4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4431, file: !684, line: 199, baseType: !4355, size: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4431, file: !684, line: 200, baseType: !417, size: 64, offset: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4431, file: !684, line: 201, baseType: !779, size: 64, offset: 128)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4431, file: !684, line: 202, baseType: !257, size: 64, offset: 192)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4431, file: !684, line: 205, baseType: !791, size: 192, offset: 256)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4431, file: !684, line: 206, baseType: !791, size: 192, offset: 448)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4431, file: !684, line: 207, baseType: !324, size: 32, offset: 640)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4431, file: !684, line: 208, baseType: !284, size: 128, offset: 704)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4431, file: !684, line: 209, baseType: !340, size: 64, offset: 832)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4431, file: !684, line: 211, baseType: !386, size: 64, offset: 896)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4431, file: !684, line: 212, baseType: !555, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4431, file: !684, line: 213, baseType: !555, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4431, file: !684, line: 214, baseType: !1190, size: 64, offset: 1024)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4424, file: !684, line: 223, baseType: !4447, size: 64, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{null, !4430}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4424, file: !684, line: 236, baseType: !823, size: 64, offset: 128)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4424, file: !684, line: 238, baseType: !810, size: 64, offset: 192)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4424, file: !684, line: 239, baseType: !819, size: 64, offset: 256)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4424, file: !684, line: 240, baseType: !815, size: 64, offset: 320)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4424, file: !684, line: 242, baseType: !4455, size: 64, offset: 384)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DISubroutineType(types: !4457)
!4457 = !{!371, !4430, !340, !386, !596}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4424, file: !684, line: 252, baseType: !386, size: 64, offset: 448)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4424, file: !684, line: 259, baseType: !555, size: 8, offset: 512)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4424, file: !684, line: 260, baseType: !4455, size: 64, offset: 576)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4424, file: !684, line: 263, baseType: !4462, size: 64, offset: 640)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!4028, !4430, !4030}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4424, file: !684, line: 266, baseType: !4466, size: 64, offset: 704)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!324, !4430, !1162}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4419, file: !684, line: 109, baseType: !4470, size: 64, offset: 64)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !684, line: 31, flags: DIFlagFwdDecl)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4419, file: !684, line: 110, baseType: !596, size: 64, offset: 128)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4419, file: !684, line: 111, baseType: !4355, size: 64, offset: 192)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4356, file: !684, line: 148, baseType: !257, size: 64, offset: 768)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4356, file: !684, line: 154, baseType: !486, size: 64, offset: 832)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4356, file: !684, line: 156, baseType: !381, size: 16, offset: 896)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4356, file: !684, line: 157, baseType: !380, size: 16, offset: 912)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4356, file: !684, line: 158, baseType: !4479, size: 64, offset: 960)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !684, line: 32, flags: DIFlagFwdDecl)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !276, file: !277, line: 71, baseType: !2229, size: 32, offset: 448)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !276, file: !277, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !276, file: !277, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !276, file: !277, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !276, file: !277, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !276, file: !277, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !273, file: !114, line: 463, baseType: !272, size: 64, offset: 512)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !273, file: !114, line: 465, baseType: !4489, size: 64, offset: 576)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4490, size: 64)
!4490 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !114, line: 36, flags: DIFlagFwdDecl)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !273, file: !114, line: 467, baseType: !280, size: 64, offset: 640)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !273, file: !114, line: 468, baseType: !4493, size: 64, offset: 704)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4495)
!4495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !114, line: 87, size: 384, elements: !4496)
!4496 = !{!4497, !4498, !4499, !4503, !4507, !4511}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4495, file: !114, line: 88, baseType: !280, size: 64)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4495, file: !114, line: 89, baseType: !393, size: 64, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4495, file: !114, line: 90, baseType: !4500, size: 64, offset: 128)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!324, !272, !335}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4495, file: !114, line: 91, baseType: !4504, size: 64, offset: 192)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!340, !272, !2375, !4352, !4353}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4495, file: !114, line: 93, baseType: !4508, size: 64, offset: 256)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{null, !272}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4495, file: !114, line: 95, baseType: !4512, size: 64, offset: 320)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4514)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !60, line: 278, size: 1472, elements: !4515)
!4515 = !{!4516, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4514, file: !60, line: 279, baseType: !4517, size: 64)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!324, !272}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4514, file: !60, line: 280, baseType: !4508, size: 64, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4514, file: !60, line: 281, baseType: !4517, size: 64, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4514, file: !60, line: 282, baseType: !4517, size: 64, offset: 192)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4514, file: !60, line: 283, baseType: !4517, size: 64, offset: 256)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4514, file: !60, line: 284, baseType: !4517, size: 64, offset: 320)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4514, file: !60, line: 285, baseType: !4517, size: 64, offset: 384)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4514, file: !60, line: 286, baseType: !4517, size: 64, offset: 448)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4514, file: !60, line: 287, baseType: !4517, size: 64, offset: 512)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4514, file: !60, line: 288, baseType: !4517, size: 64, offset: 576)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4514, file: !60, line: 289, baseType: !4517, size: 64, offset: 640)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4514, file: !60, line: 290, baseType: !4517, size: 64, offset: 704)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4514, file: !60, line: 291, baseType: !4517, size: 64, offset: 768)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4514, file: !60, line: 292, baseType: !4517, size: 64, offset: 832)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4514, file: !60, line: 293, baseType: !4517, size: 64, offset: 896)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4514, file: !60, line: 294, baseType: !4517, size: 64, offset: 960)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4514, file: !60, line: 295, baseType: !4517, size: 64, offset: 1024)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4514, file: !60, line: 296, baseType: !4517, size: 64, offset: 1088)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4514, file: !60, line: 297, baseType: !4517, size: 64, offset: 1152)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4514, file: !60, line: 298, baseType: !4517, size: 64, offset: 1216)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4514, file: !60, line: 299, baseType: !4517, size: 64, offset: 1280)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4514, file: !60, line: 300, baseType: !4517, size: 64, offset: 1344)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4514, file: !60, line: 301, baseType: !4517, size: 64, offset: 1408)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !273, file: !114, line: 470, baseType: !4543, size: 64, offset: 768)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4545, line: 82, size: 1408, elements: !4546)
!4545 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4546 = !{!4547, !4548, !4549, !4550, !4551, !4552, !4553, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4628, !4631, !4632}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4544, file: !4545, line: 83, baseType: !280, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4544, file: !4545, line: 84, baseType: !280, size: 64, offset: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4544, file: !4545, line: 85, baseType: !272, size: 64, offset: 128)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4544, file: !4545, line: 86, baseType: !393, size: 64, offset: 192)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4544, file: !4545, line: 87, baseType: !393, size: 64, offset: 256)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4544, file: !4545, line: 88, baseType: !393, size: 64, offset: 320)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4544, file: !4545, line: 90, baseType: !4554, size: 64, offset: 384)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{!324, !272, !4557}
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !108, line: 95, size: 1152, elements: !4559)
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565, !4566, !4579, !4592, !4593, !4594, !4595, !4596, !4604, !4605, !4606, !4607, !4608, !4609}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4558, file: !108, line: 96, baseType: !280, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4558, file: !108, line: 97, baseType: !4543, size: 64, offset: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4558, file: !108, line: 99, baseType: !698, size: 64, offset: 128)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4558, file: !108, line: 100, baseType: !280, size: 64, offset: 192)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4558, file: !108, line: 102, baseType: !555, size: 8, offset: 256)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4558, file: !108, line: 103, baseType: !107, size: 32, offset: 288)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4558, file: !108, line: 105, baseType: !4567, size: 64, offset: 320)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4570, line: 262, size: 1600, elements: !4571)
!4570 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4571 = !{!4572, !4573, !4574, !4578}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4569, file: !4570, line: 263, baseType: !2107, size: 256)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4569, file: !4570, line: 264, baseType: !2107, size: 256, offset: 256)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4569, file: !4570, line: 265, baseType: !4575, size: 1024, offset: 512)
!4575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 1024, elements: !4576)
!4576 = !{!4577}
!4577 = !DISubrange(count: 128)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4569, file: !4570, line: 266, baseType: !3283, size: 64, offset: 1536)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4558, file: !108, line: 106, baseType: !4580, size: 64, offset: 384)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4582)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4570, line: 210, size: 256, elements: !4583)
!4583 = !{!4584, !4588, !4590, !4591}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4582, file: !4570, line: 211, baseType: !4585, size: 72)
!4585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 72, elements: !4586)
!4586 = !{!4587}
!4587 = !DISubrange(count: 9)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4582, file: !4570, line: 212, baseType: !4589, size: 64, offset: 128)
!4589 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4570, line: 14, baseType: !389)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4582, file: !4570, line: 213, baseType: !482, size: 32, offset: 192)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4582, file: !4570, line: 214, baseType: !482, size: 32, offset: 224)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4558, file: !108, line: 108, baseType: !4517, size: 64, offset: 448)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4558, file: !108, line: 109, baseType: !4508, size: 64, offset: 512)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4558, file: !108, line: 110, baseType: !4517, size: 64, offset: 576)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4558, file: !108, line: 111, baseType: !4508, size: 64, offset: 640)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4558, file: !108, line: 112, baseType: !4597, size: 64, offset: 704)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!324, !272, !4600}
!4600 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !60, line: 52, baseType: !4601)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !60, line: 50, size: 32, elements: !4602)
!4602 = !{!4603}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4601, file: !60, line: 51, baseType: !324, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4558, file: !108, line: 113, baseType: !4517, size: 64, offset: 768)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4558, file: !108, line: 114, baseType: !393, size: 64, offset: 832)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4558, file: !108, line: 115, baseType: !393, size: 64, offset: 896)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4558, file: !108, line: 117, baseType: !4512, size: 64, offset: 960)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4558, file: !108, line: 118, baseType: !4508, size: 64, offset: 1024)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4558, file: !108, line: 120, baseType: !4610, size: 64, offset: 1088)
!4610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4611, size: 64)
!4611 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !108, line: 120, flags: DIFlagFwdDecl)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4544, file: !4545, line: 91, baseType: !4500, size: 64, offset: 448)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4544, file: !4545, line: 92, baseType: !4517, size: 64, offset: 512)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4544, file: !4545, line: 93, baseType: !4508, size: 64, offset: 576)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4544, file: !4545, line: 94, baseType: !4517, size: 64, offset: 640)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4544, file: !4545, line: 95, baseType: !4508, size: 64, offset: 704)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4544, file: !4545, line: 97, baseType: !4517, size: 64, offset: 768)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4544, file: !4545, line: 98, baseType: !4517, size: 64, offset: 832)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4544, file: !4545, line: 100, baseType: !4597, size: 64, offset: 896)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4544, file: !4545, line: 101, baseType: !4517, size: 64, offset: 960)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4544, file: !4545, line: 103, baseType: !4517, size: 64, offset: 1024)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4544, file: !4545, line: 105, baseType: !4517, size: 64, offset: 1088)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4544, file: !4545, line: 107, baseType: !4512, size: 64, offset: 1152)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4544, file: !4545, line: 109, baseType: !4625, size: 64, offset: 1216)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4627)
!4627 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4545, line: 109, flags: DIFlagFwdDecl)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4544, file: !4545, line: 111, baseType: !4629, size: 64, offset: 1280)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4545, line: 111, flags: DIFlagFwdDecl)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4544, file: !4545, line: 112, baseType: !713, offset: 1344)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4544, file: !4545, line: 114, baseType: !555, size: 8, offset: 1344)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !273, file: !114, line: 471, baseType: !4557, size: 64, offset: 832)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !273, file: !114, line: 473, baseType: !257, size: 64, offset: 896)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !273, file: !114, line: 475, baseType: !257, size: 64, offset: 960)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !273, file: !114, line: 480, baseType: !791, size: 192, offset: 1024)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !273, file: !114, line: 484, baseType: !4638, size: 576, offset: 1216)
!4638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !114, line: 361, size: 576, elements: !4639)
!4639 = !{!4640, !4641, !4642, !4643, !4644, !4645}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4638, file: !114, line: 362, baseType: !284, size: 128)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4638, file: !114, line: 363, baseType: !284, size: 128, offset: 128)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4638, file: !114, line: 364, baseType: !284, size: 128, offset: 256)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4638, file: !114, line: 365, baseType: !284, size: 128, offset: 384)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4638, file: !114, line: 366, baseType: !555, size: 8, offset: 512)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4638, file: !114, line: 367, baseType: !113, size: 32, offset: 544)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !273, file: !114, line: 485, baseType: !4647, size: 2304, offset: 1792)
!4647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !60, line: 565, size: 2304, elements: !4648)
!4648 = !{!4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4733, !4737}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4647, file: !60, line: 566, baseType: !4600, size: 32)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4647, file: !60, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4647, file: !60, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4647, file: !60, line: 569, baseType: !555, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4647, file: !60, line: 570, baseType: !555, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4647, file: !60, line: 571, baseType: !555, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4647, file: !60, line: 572, baseType: !555, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4647, file: !60, line: 573, baseType: !555, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4647, file: !60, line: 574, baseType: !555, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4647, file: !60, line: 575, baseType: !555, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4647, file: !60, line: 576, baseType: !555, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4647, file: !60, line: 577, baseType: !480, size: 32, offset: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4647, file: !60, line: 578, baseType: !298, offset: 96)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4647, file: !60, line: 580, baseType: !284, size: 128, offset: 128)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4647, file: !60, line: 581, baseType: !1675, size: 192, offset: 256)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4647, file: !60, line: 582, baseType: !4665, size: 64, offset: 448)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4667, line: 43, size: 1472, elements: !4668)
!4667 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4668 = !{!4669, !4670, !4671, !4672, !4673, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4666, file: !4667, line: 44, baseType: !280, size: 64)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4666, file: !4667, line: 45, baseType: !324, size: 32, offset: 64)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4666, file: !4667, line: 46, baseType: !284, size: 128, offset: 128)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4666, file: !4667, line: 47, baseType: !298, offset: 256)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4666, file: !4667, line: 48, baseType: !4674, size: 64, offset: 256)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !60, line: 533, flags: DIFlagFwdDecl)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4666, file: !4667, line: 49, baseType: !2279, size: 320, offset: 320)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4666, file: !4667, line: 50, baseType: !389, size: 64, offset: 640)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4666, file: !4667, line: 51, baseType: !1474, size: 64, offset: 704)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4666, file: !4667, line: 52, baseType: !1474, size: 64, offset: 768)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4666, file: !4667, line: 53, baseType: !1474, size: 64, offset: 832)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4666, file: !4667, line: 54, baseType: !1474, size: 64, offset: 896)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4666, file: !4667, line: 55, baseType: !1474, size: 64, offset: 960)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4666, file: !4667, line: 56, baseType: !389, size: 64, offset: 1024)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4666, file: !4667, line: 57, baseType: !389, size: 64, offset: 1088)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4666, file: !4667, line: 58, baseType: !389, size: 64, offset: 1152)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4666, file: !4667, line: 59, baseType: !389, size: 64, offset: 1216)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4666, file: !4667, line: 60, baseType: !389, size: 64, offset: 1280)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4666, file: !4667, line: 61, baseType: !272, size: 64, offset: 1344)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4666, file: !4667, line: 62, baseType: !555, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4666, file: !4667, line: 63, baseType: !555, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4647, file: !60, line: 583, baseType: !555, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4647, file: !60, line: 584, baseType: !555, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4647, file: !60, line: 585, baseType: !555, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4647, file: !60, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4647, file: !60, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4647, file: !60, line: 592, baseType: !1466, size: 512, offset: 576)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4647, file: !60, line: 593, baseType: !486, size: 64, offset: 1088)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4647, file: !60, line: 594, baseType: !2167, size: 256, offset: 1152)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4647, file: !60, line: 595, baseType: !1655, size: 128, offset: 1408)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4647, file: !60, line: 596, baseType: !4674, size: 64, offset: 1536)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4647, file: !60, line: 597, baseType: !865, size: 32, offset: 1600)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4647, file: !60, line: 598, baseType: !865, size: 32, offset: 1632)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4647, file: !60, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4647, file: !60, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4647, file: !60, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4647, file: !60, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4647, file: !60, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4647, file: !60, line: 604, baseType: !555, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4647, file: !60, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4647, file: !60, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4647, file: !60, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4647, file: !60, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4647, file: !60, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4647, file: !60, line: 610, baseType: !7, size: 32, offset: 1696)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4647, file: !60, line: 611, baseType: !120, size: 32, offset: 1728)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4647, file: !60, line: 612, baseType: !59, size: 32, offset: 1760)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4647, file: !60, line: 613, baseType: !324, size: 32, offset: 1792)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4647, file: !60, line: 614, baseType: !324, size: 32, offset: 1824)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4647, file: !60, line: 615, baseType: !486, size: 64, offset: 1856)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4647, file: !60, line: 616, baseType: !486, size: 64, offset: 1920)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4647, file: !60, line: 617, baseType: !486, size: 64, offset: 1984)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4647, file: !60, line: 618, baseType: !486, size: 64, offset: 2048)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4647, file: !60, line: 620, baseType: !4724, size: 64, offset: 2112)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !60, line: 536, size: 256, elements: !4726)
!4726 = !{!4727, !4728, !4729, !4730}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4725, file: !60, line: 537, baseType: !298)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4725, file: !60, line: 538, baseType: !7, size: 32)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4725, file: !60, line: 540, baseType: !284, size: 128, offset: 64)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4725, file: !60, line: 543, baseType: !4731, size: 64, offset: 192)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !60, line: 534, flags: DIFlagFwdDecl)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4647, file: !60, line: 621, baseType: !4734, size: 64, offset: 2176)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{null, !272, !1618}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4647, file: !60, line: 622, baseType: !4738, size: 64, offset: 2240)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !60, line: 622, flags: DIFlagFwdDecl)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !273, file: !114, line: 486, baseType: !4741, size: 64, offset: 4096)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !60, line: 642, size: 1792, elements: !4743)
!4743 = !{!4744, !4745, !4746, !4750, !4751, !4752}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4742, file: !60, line: 643, baseType: !4514, size: 1472)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4742, file: !60, line: 644, baseType: !4517, size: 64, offset: 1472)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4742, file: !60, line: 645, baseType: !4747, size: 64, offset: 1536)
!4747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4748, size: 64)
!4748 = !DISubroutineType(types: !4749)
!4749 = !{null, !272, !555}
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4742, file: !60, line: 646, baseType: !4517, size: 64, offset: 1600)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4742, file: !60, line: 647, baseType: !4508, size: 64, offset: 1664)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4742, file: !60, line: 648, baseType: !4508, size: 64, offset: 1728)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !273, file: !114, line: 493, baseType: !4754, size: 64, offset: 4160)
!4754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4755, size: 64)
!4755 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4756, line: 13, flags: DIFlagFwdDecl)
!4756 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !273, file: !114, line: 499, baseType: !284, size: 128, offset: 4224)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !273, file: !114, line: 502, baseType: !4759, size: 64, offset: 4352)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4761)
!4761 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !114, line: 502, flags: DIFlagFwdDecl)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !273, file: !114, line: 504, baseType: !4763, size: 64, offset: 4416)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !273, file: !114, line: 505, baseType: !486, size: 64, offset: 4480)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !273, file: !114, line: 510, baseType: !486, size: 64, offset: 4544)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !273, file: !114, line: 511, baseType: !4767, size: 64, offset: 4608)
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4769)
!4769 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !114, line: 511, flags: DIFlagFwdDecl)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !273, file: !114, line: 513, baseType: !4771, size: 64, offset: 4672)
!4771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4772, size: 64)
!4772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !114, line: 288, size: 128, elements: !4773)
!4773 = !{!4774, !4775}
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4772, file: !114, line: 293, baseType: !7, size: 32)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4772, file: !114, line: 294, baseType: !389, size: 64, offset: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !273, file: !114, line: 515, baseType: !284, size: 128, offset: 4736)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !273, file: !114, line: 526, baseType: !4778, offset: 4864)
!4778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4779, line: 5, elements: !312)
!4779 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !273, file: !114, line: 528, baseType: !4781, size: 64, offset: 4864)
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4782 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4783, line: 14, flags: DIFlagFwdDecl)
!4783 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !273, file: !114, line: 529, baseType: !4785, size: 64, offset: 4928)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 64)
!4786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4787, line: 17, size: 192, elements: !4788)
!4787 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4788 = !{!4789, !4790, !4873}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4786, file: !4787, line: 18, baseType: !4785, size: 64)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4786, file: !4787, line: 19, baseType: !4791, size: 64, offset: 64)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4793)
!4793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4787, line: 110, size: 1152, elements: !4794)
!4794 = !{!4795, !4799, !4803, !4809, !4815, !4819, !4823, !4828, !4832, !4833, !4837, !4841, !4845, !4856, !4857, !4858, !4859, !4869}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4793, file: !4787, line: 111, baseType: !4796, size: 64)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{!4785, !4785}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4793, file: !4787, line: 112, baseType: !4800, size: 64, offset: 64)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4801, size: 64)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{null, !4785}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4793, file: !4787, line: 113, baseType: !4804, size: 64, offset: 128)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{!555, !4807}
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4786)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4793, file: !4787, line: 114, baseType: !4810, size: 64, offset: 192)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!3283, !4807, !4813}
!4813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 64)
!4814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4793, file: !4787, line: 116, baseType: !4816, size: 64, offset: 256)
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 64)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!555, !4807, !280}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4793, file: !4787, line: 118, baseType: !4820, size: 64, offset: 320)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!324, !4807, !280, !7, !257, !386}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4793, file: !4787, line: 123, baseType: !4824, size: 64, offset: 384)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DISubroutineType(types: !4826)
!4826 = !{!324, !4807, !280, !4827, !386}
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4793, file: !4787, line: 126, baseType: !4829, size: 64, offset: 448)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!280, !4807}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4793, file: !4787, line: 127, baseType: !4829, size: 64, offset: 512)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4793, file: !4787, line: 128, baseType: !4834, size: 64, offset: 576)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DISubroutineType(types: !4836)
!4836 = !{!4785, !4807}
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4793, file: !4787, line: 130, baseType: !4838, size: 64, offset: 640)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DISubroutineType(types: !4840)
!4840 = !{!4785, !4807, !4785}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4793, file: !4787, line: 133, baseType: !4842, size: 64, offset: 704)
!4842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4843, size: 64)
!4843 = !DISubroutineType(types: !4844)
!4844 = !{!4785, !4807, !280}
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4793, file: !4787, line: 135, baseType: !4846, size: 64, offset: 768)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!324, !4807, !280, !280, !7, !7, !4849}
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4787, line: 43, size: 640, elements: !4851)
!4851 = !{!4852, !4853, !4854}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4850, file: !4787, line: 44, baseType: !4785, size: 64)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4850, file: !4787, line: 45, baseType: !7, size: 32, offset: 64)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4850, file: !4787, line: 46, baseType: !4855, size: 512, offset: 128)
!4855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 512, elements: !1504)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4793, file: !4787, line: 140, baseType: !4838, size: 64, offset: 832)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4793, file: !4787, line: 143, baseType: !4834, size: 64, offset: 896)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4793, file: !4787, line: 145, baseType: !4796, size: 64, offset: 960)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4793, file: !4787, line: 146, baseType: !4860, size: 64, offset: 1024)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!324, !4807, !4863}
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4787, line: 29, size: 128, elements: !4865)
!4865 = !{!4866, !4867, !4868}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4864, file: !4787, line: 30, baseType: !7, size: 32)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4864, file: !4787, line: 31, baseType: !7, size: 32, offset: 32)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4864, file: !4787, line: 32, baseType: !4807, size: 64, offset: 64)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4793, file: !4787, line: 148, baseType: !4870, size: 64, offset: 1088)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DISubroutineType(types: !4872)
!4872 = !{!324, !4807, !272}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4786, file: !4787, line: 20, baseType: !272, size: 64, offset: 128)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !273, file: !114, line: 534, baseType: !578, size: 32, offset: 4992)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !273, file: !114, line: 535, baseType: !480, size: 32, offset: 5024)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !273, file: !114, line: 537, baseType: !298, offset: 5056)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !273, file: !114, line: 538, baseType: !284, size: 128, offset: 5056)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !273, file: !114, line: 540, baseType: !4879, size: 64, offset: 5184)
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4880, size: 64)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4881, line: 54, size: 960, elements: !4882)
!4881 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4882 = !{!4883, !4884, !4885, !4886, !4887, !4888, !4889, !4893, !4897, !4898, !4899, !4900, !4904, !4908, !4909}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4880, file: !4881, line: 55, baseType: !280, size: 64)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4880, file: !4881, line: 56, baseType: !698, size: 64, offset: 64)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4880, file: !4881, line: 58, baseType: !393, size: 64, offset: 128)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4880, file: !4881, line: 59, baseType: !393, size: 64, offset: 192)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4880, file: !4881, line: 60, baseType: !291, size: 64, offset: 256)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4880, file: !4881, line: 62, baseType: !4500, size: 64, offset: 320)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4880, file: !4881, line: 63, baseType: !4890, size: 64, offset: 384)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!340, !272, !2375}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4880, file: !4881, line: 65, baseType: !4894, size: 64, offset: 448)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{null, !4879}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4880, file: !4881, line: 66, baseType: !4508, size: 64, offset: 512)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4880, file: !4881, line: 68, baseType: !4517, size: 64, offset: 576)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4880, file: !4881, line: 70, baseType: !4320, size: 64, offset: 640)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4880, file: !4881, line: 71, baseType: !4901, size: 64, offset: 704)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = !DISubroutineType(types: !4903)
!4903 = !{!3283, !272}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4880, file: !4881, line: 73, baseType: !4905, size: 64, offset: 768)
!4905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4906, size: 64)
!4906 = !DISubroutineType(types: !4907)
!4907 = !{null, !272, !4352, !4353}
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4880, file: !4881, line: 75, baseType: !4512, size: 64, offset: 832)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4880, file: !4881, line: 77, baseType: !4629, size: 64, offset: 896)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !273, file: !114, line: 541, baseType: !393, size: 64, offset: 5248)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !273, file: !114, line: 543, baseType: !4508, size: 64, offset: 5312)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !273, file: !114, line: 544, baseType: !4913, size: 64, offset: 5376)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !114, line: 45, flags: DIFlagFwdDecl)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !273, file: !114, line: 545, baseType: !4916, size: 64, offset: 5440)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !114, line: 47, flags: DIFlagFwdDecl)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !273, file: !114, line: 547, baseType: !555, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !273, file: !114, line: 548, baseType: !555, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !273, file: !114, line: 549, baseType: !555, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !273, file: !114, line: 550, baseType: !555, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !268, file: !269, line: 277, baseType: !273, size: 5568, offset: 64)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !268, file: !269, line: 278, baseType: !324, size: 32, offset: 5632)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !268, file: !269, line: 279, baseType: !4925, size: 64, offset: 5696)
!4925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4926, size: 64)
!4926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4927)
!4927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host_ops", file: !269, line: 82, size: 1408, elements: !4928)
!4928 = !{!4929, !4990, !4994, !4995, !4999, !5017, !5021, !5022, !5026, !5030, !5034, !5038, !5039, !5043, !5044, !5045, !5046, !5047, !5048, !5052, !5053, !5054}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "post_req", scope: !4927, file: !269, line: 91, baseType: !4930, size: 64)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{null, !267, !4933, !324}
!4933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 64)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_request", file: !4935, line: 144, size: 896, elements: !4936)
!4935 = !DIFile(filename: "./include/linux/mmc/core.h", directory: "/home/lizy2001/genbc/linux")
!4936 = !{!4937, !4977, !4978, !4979, !4980, !4981, !4982, !4986, !4987, !4988, !4989}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "sbc", scope: !4934, file: !4935, line: 145, baseType: !4938, size: 64)
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 64)
!4939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_command", file: !4935, line: 26, size: 448, elements: !4940)
!4940 = !{!4941, !4942, !4943, !4945, !4946, !4947, !4948, !4949, !4976}
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4939, file: !4935, line: 27, baseType: !480, size: 32)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4939, file: !4935, line: 28, baseType: !480, size: 32, offset: 32)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "resp", scope: !4939, file: !4935, line: 32, baseType: !4944, size: 128, offset: 64)
!4944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 128, elements: !1336)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4939, file: !4935, line: 33, baseType: !7, size: 32, offset: 192)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4939, file: !4935, line: 92, baseType: !7, size: 32, offset: 224)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4939, file: !4935, line: 93, baseType: !324, size: 32, offset: 256)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "busy_timeout", scope: !4939, file: !4935, line: 109, baseType: !7, size: 32, offset: 288)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4939, file: !4935, line: 110, baseType: !4950, size: 64, offset: 320)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_data", file: !4935, line: 114, size: 576, elements: !4952)
!4952 = !{!4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4975}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_ns", scope: !4951, file: !4935, line: 115, baseType: !7, size: 32)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_clks", scope: !4951, file: !4935, line: 116, baseType: !7, size: 32, offset: 32)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "blksz", scope: !4951, file: !4935, line: 117, baseType: !7, size: 32, offset: 64)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4951, file: !4935, line: 118, baseType: !7, size: 32, offset: 96)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "blk_addr", scope: !4951, file: !4935, line: 119, baseType: !7, size: 32, offset: 128)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4951, file: !4935, line: 120, baseType: !324, size: 32, offset: 160)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4951, file: !4935, line: 121, baseType: !7, size: 32, offset: 192)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_xfered", scope: !4951, file: !4935, line: 132, baseType: !7, size: 32, offset: 224)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4951, file: !4935, line: 134, baseType: !4938, size: 64, offset: 256)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !4951, file: !4935, line: 135, baseType: !4933, size: 64, offset: 320)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !4951, file: !4935, line: 137, baseType: !7, size: 32, offset: 384)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !4951, file: !4935, line: 138, baseType: !324, size: 32, offset: 416)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4951, file: !4935, line: 139, baseType: !4966, size: 64, offset: 448)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4968, line: 11, size: 256, elements: !4969)
!4968 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4969 = !{!4970, !4971, !4972, !4973, !4974}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4967, file: !4968, line: 12, baseType: !389, size: 64)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4967, file: !4968, line: 13, baseType: !7, size: 32, offset: 64)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4967, file: !4968, line: 14, baseType: !7, size: 32, offset: 96)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4967, file: !4968, line: 15, baseType: !1100, size: 64, offset: 128)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4967, file: !4968, line: 17, baseType: !7, size: 32, offset: 192)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "host_cookie", scope: !4951, file: !4935, line: 140, baseType: !1618, size: 32, offset: 512)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !4939, file: !4935, line: 111, baseType: !4933, size: 64, offset: 384)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4934, file: !4935, line: 146, baseType: !4938, size: 64, offset: 64)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4934, file: !4935, line: 147, baseType: !4950, size: 64, offset: 128)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4934, file: !4935, line: 148, baseType: !4938, size: 64, offset: 192)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4934, file: !4935, line: 150, baseType: !1675, size: 192, offset: 256)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_completion", scope: !4934, file: !4935, line: 151, baseType: !1675, size: 192, offset: 448)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4934, file: !4935, line: 152, baseType: !4983, size: 64, offset: 640)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !4933}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_notifier", scope: !4934, file: !4935, line: 158, baseType: !4983, size: 64, offset: 704)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !4934, file: !4935, line: 159, baseType: !267, size: 64, offset: 768)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "cap_cmd_during_tfr", scope: !4934, file: !4935, line: 162, baseType: !555, size: 8, offset: 832)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4934, file: !4935, line: 164, baseType: !324, size: 32, offset: 864)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "pre_req", scope: !4927, file: !269, line: 93, baseType: !4991, size: 64, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{null, !267, !4933}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4927, file: !269, line: 94, baseType: !4991, size: 64, offset: 128)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "request_atomic", scope: !4927, file: !269, line: 96, baseType: !4996, size: 64, offset: 192)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!324, !267, !4933}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "set_ios", scope: !4927, file: !269, line: 113, baseType: !5000, size: 64, offset: 256)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{null, !267, !5003}
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ios", file: !269, line: 19, size: 160, elements: !5005)
!5005 = !{!5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !5004, file: !269, line: 20, baseType: !7, size: 32)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "vdd", scope: !5004, file: !269, line: 21, baseType: !381, size: 16, offset: 32)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "power_delay_ms", scope: !5004, file: !269, line: 22, baseType: !7, size: 32, offset: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mode", scope: !5004, file: !269, line: 26, baseType: !492, size: 8, offset: 96)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !5004, file: !269, line: 31, baseType: !492, size: 8, offset: 104)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "power_mode", scope: !5004, file: !269, line: 37, baseType: !492, size: 8, offset: 112)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !5004, file: !269, line: 44, baseType: !492, size: 8, offset: 120)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "timing", scope: !5004, file: !269, line: 50, baseType: !492, size: 8, offset: 128)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "signal_voltage", scope: !5004, file: !269, line: 64, baseType: !492, size: 8, offset: 136)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "drv_type", scope: !5004, file: !269, line: 70, baseType: !492, size: 8, offset: 144)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_strobe", scope: !5004, file: !269, line: 77, baseType: !555, size: 8, offset: 152)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "get_ro", scope: !4927, file: !269, line: 122, baseType: !5018, size: 64, offset: 320)
!5018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5019, size: 64)
!5019 = !DISubroutineType(types: !5020)
!5020 = !{!324, !267}
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "get_cd", scope: !4927, file: !269, line: 131, baseType: !5018, size: 64, offset: 384)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "enable_sdio_irq", scope: !4927, file: !269, line: 133, baseType: !5023, size: 64, offset: 448)
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64)
!5024 = !DISubroutineType(types: !5025)
!5025 = !{null, !267, !324}
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "ack_sdio_irq", scope: !4927, file: !269, line: 135, baseType: !5027, size: 64, offset: 512)
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{null, !267}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "init_card", scope: !4927, file: !269, line: 138, baseType: !5031, size: 64, offset: 576)
!5031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5032, size: 64)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{null, !267, !262}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "start_signal_voltage_switch", scope: !4927, file: !269, line: 140, baseType: !5035, size: 64, offset: 640)
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 64)
!5036 = !DISubroutineType(types: !5037)
!5037 = !{!324, !267, !5003}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "card_busy", scope: !4927, file: !269, line: 143, baseType: !5018, size: 64, offset: 704)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "execute_tuning", scope: !4927, file: !269, line: 146, baseType: !5040, size: 64, offset: 768)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!324, !267, !480}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_hs400_tuning", scope: !4927, file: !269, line: 149, baseType: !5035, size: 64, offset: 832)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_prepare_ddr", scope: !4927, file: !269, line: 152, baseType: !5018, size: 64, offset: 896)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_downgrade", scope: !4927, file: !269, line: 155, baseType: !5027, size: 64, offset: 960)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_complete", scope: !4927, file: !269, line: 158, baseType: !5027, size: 64, offset: 1024)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_enhanced_strobe", scope: !4927, file: !269, line: 161, baseType: !5000, size: 64, offset: 1088)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "select_drive_strength", scope: !4927, file: !269, line: 163, baseType: !5049, size: 64, offset: 1152)
!5049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5050, size: 64)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!324, !262, !7, !324, !324, !773}
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !4927, file: !269, line: 167, baseType: !5027, size: 64, offset: 1216)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "card_event", scope: !4927, file: !269, line: 168, baseType: !5027, size: 64, offset: 1280)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "multi_io_quirk", scope: !4927, file: !269, line: 174, baseType: !5055, size: 64, offset: 1344)
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!324, !262, !7, !324}
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq", scope: !268, file: !269, line: 280, baseType: !5059, size: 64, offset: 5760)
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq", file: !269, line: 264, flags: DIFlagFwdDecl)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "f_min", scope: !268, file: !269, line: 281, baseType: !7, size: 32, offset: 5824)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "f_max", scope: !268, file: !269, line: 282, baseType: !7, size: 32, offset: 5856)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "f_init", scope: !268, file: !269, line: 283, baseType: !7, size: 32, offset: 5888)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail", scope: !268, file: !269, line: 284, baseType: !480, size: 32, offset: 5920)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sdio", scope: !268, file: !269, line: 285, baseType: !480, size: 32, offset: 5952)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sd", scope: !268, file: !269, line: 286, baseType: !480, size: 32, offset: 5984)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_mmc", scope: !268, file: !269, line: 287, baseType: !480, size: 32, offset: 6016)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "pm_notify", scope: !268, file: !269, line: 289, baseType: !5069, size: 192, offset: 6080)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !5070, line: 54, size: 192, elements: !5071)
!5070 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!5071 = !{!5072, !5078, !5079}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !5069, file: !5070, line: 55, baseType: !5073, size: 64)
!5073 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !5070, line: 51, baseType: !5074)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!324, !5077, !389, !257}
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5069, file: !5070, line: 56, baseType: !5077, size: 64, offset: 64)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !5069, file: !5070, line: 57, baseType: !324, size: 32, offset: 128)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !268, file: !269, line: 291, baseType: !4665, size: 64, offset: 6272)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_330", scope: !268, file: !269, line: 292, baseType: !480, size: 32, offset: 6336)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_300", scope: !268, file: !269, line: 293, baseType: !480, size: 32, offset: 6368)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_180", scope: !268, file: !269, line: 294, baseType: !480, size: 32, offset: 6400)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !268, file: !269, line: 314, baseType: !480, size: 32, offset: 6432)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "caps2", scope: !268, file: !269, line: 352, baseType: !480, size: 32, offset: 6464)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_drv_type", scope: !268, file: !269, line: 381, baseType: !324, size: 32, offset: 6496)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "pm_caps", scope: !268, file: !269, line: 383, baseType: !5088, size: 32, offset: 6528)
!5088 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmc_pm_flag_t", file: !5089, line: 22, baseType: !7)
!5089 = !DIFile(filename: "./include/linux/mmc/pm.h", directory: "/home/lizy2001/genbc/linux")
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "max_seg_size", scope: !268, file: !269, line: 386, baseType: !7, size: 32, offset: 6560)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "max_segs", scope: !268, file: !269, line: 387, baseType: !381, size: 16, offset: 6592)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !268, file: !269, line: 388, baseType: !381, size: 16, offset: 6608)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "max_req_size", scope: !268, file: !269, line: 389, baseType: !7, size: 32, offset: 6624)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_size", scope: !268, file: !269, line: 390, baseType: !7, size: 32, offset: 6656)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_count", scope: !268, file: !269, line: 391, baseType: !7, size: 32, offset: 6688)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "max_busy_timeout", scope: !268, file: !269, line: 392, baseType: !7, size: 32, offset: 6720)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !268, file: !269, line: 395, baseType: !298, offset: 6752)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "ios", scope: !268, file: !269, line: 397, baseType: !5004, size: 160, offset: 6752)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "use_spi_crc", scope: !268, file: !269, line: 400, baseType: !7, size: 1, offset: 6912, flags: DIFlagBitField, extraData: i64 6912)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !268, file: !269, line: 401, baseType: !7, size: 1, offset: 6913, flags: DIFlagBitField, extraData: i64 6912)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dead", scope: !268, file: !269, line: 402, baseType: !7, size: 1, offset: 6914, flags: DIFlagBitField, extraData: i64 6912)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "doing_init_tune", scope: !268, file: !269, line: 403, baseType: !7, size: 1, offset: 6915, flags: DIFlagBitField, extraData: i64 6912)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "can_retune", scope: !268, file: !269, line: 404, baseType: !7, size: 1, offset: 6916, flags: DIFlagBitField, extraData: i64 6912)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "doing_retune", scope: !268, file: !269, line: 405, baseType: !7, size: 1, offset: 6917, flags: DIFlagBitField, extraData: i64 6912)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "retune_now", scope: !268, file: !269, line: 406, baseType: !7, size: 1, offset: 6918, flags: DIFlagBitField, extraData: i64 6912)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "retune_paused", scope: !268, file: !269, line: 407, baseType: !7, size: 1, offset: 6919, flags: DIFlagBitField, extraData: i64 6912)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "use_blk_mq", scope: !268, file: !269, line: 408, baseType: !7, size: 1, offset: 6920, flags: DIFlagBitField, extraData: i64 6912)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "retune_crc_disable", scope: !268, file: !269, line: 409, baseType: !7, size: 1, offset: 6921, flags: DIFlagBitField, extraData: i64 6912)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma_map_merge", scope: !268, file: !269, line: 410, baseType: !7, size: 1, offset: 6922, flags: DIFlagBitField, extraData: i64 6912)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_disable", scope: !268, file: !269, line: 412, baseType: !324, size: 32, offset: 6944)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_entered", scope: !268, file: !269, line: 413, baseType: !324, size: 32, offset: 6976)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "need_retune", scope: !268, file: !269, line: 415, baseType: !324, size: 32, offset: 7008)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "hold_retune", scope: !268, file: !269, line: 416, baseType: !324, size: 32, offset: 7040)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "retune_period", scope: !268, file: !269, line: 417, baseType: !7, size: 32, offset: 7072)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "retune_timer", scope: !268, file: !269, line: 418, baseType: !2279, size: 320, offset: 7104)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_card_event", scope: !268, file: !269, line: 420, baseType: !555, size: 8, offset: 7424)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !268, file: !269, line: 422, baseType: !262, size: 64, offset: 7488)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !268, file: !269, line: 424, baseType: !1655, size: 128, offset: 7552)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "claimer", scope: !268, file: !269, line: 425, baseType: !5120, size: 64, offset: 7680)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ctx", file: !269, line: 271, size: 64, elements: !5122)
!5122 = !{!5123}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5121, file: !269, line: 272, baseType: !1391, size: 64)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "claim_cnt", scope: !268, file: !269, line: 426, baseType: !324, size: 32, offset: 7744)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "default_ctx", scope: !268, file: !269, line: 427, baseType: !5121, size: 64, offset: 7808)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !268, file: !269, line: 429, baseType: !2275, size: 704, offset: 7872)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "detect_change", scope: !268, file: !269, line: 430, baseType: !324, size: 32, offset: 8576)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !268, file: !269, line: 431, baseType: !5129, size: 128, offset: 8640)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_slot", file: !269, line: 243, size: 128, elements: !5130)
!5130 = !{!5131, !5132, !5133}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "cd_irq", scope: !5129, file: !269, line: 244, baseType: !324, size: 32)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "cd_wake_enabled", scope: !5129, file: !269, line: 245, baseType: !555, size: 8, offset: 32)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "handler_priv", scope: !5129, file: !269, line: 246, baseType: !257, size: 64, offset: 64)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "bus_ops", scope: !268, file: !269, line: 433, baseType: !5135, size: 64, offset: 8768)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5137)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_bus_ops", file: !5138, line: 20, size: 704, elements: !5139)
!5138 = !DIFile(filename: "drivers/mmc/core/core.h", directory: "/home/lizy2001/genbc/linux")
!5139 = !{!5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5137, file: !5138, line: 21, baseType: !5027, size: 64)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !5137, file: !5138, line: 22, baseType: !5027, size: 64, offset: 64)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "pre_suspend", scope: !5137, file: !5138, line: 23, baseType: !5018, size: 64, offset: 128)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5137, file: !5138, line: 24, baseType: !5018, size: 64, offset: 192)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5137, file: !5138, line: 25, baseType: !5018, size: 64, offset: 256)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5137, file: !5138, line: 26, baseType: !5018, size: 64, offset: 320)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5137, file: !5138, line: 27, baseType: !5018, size: 64, offset: 384)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !5137, file: !5138, line: 28, baseType: !5018, size: 64, offset: 448)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5137, file: !5138, line: 29, baseType: !5018, size: 64, offset: 512)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !5137, file: !5138, line: 30, baseType: !5018, size: 64, offset: 576)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reset", scope: !5137, file: !5138, line: 31, baseType: !5018, size: 64, offset: 640)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "bus_refs", scope: !268, file: !269, line: 434, baseType: !7, size: 32, offset: 8832)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irqs", scope: !268, file: !269, line: 436, baseType: !7, size: 32, offset: 8864)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread", scope: !268, file: !269, line: 437, baseType: !1391, size: 64, offset: 8896)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_work", scope: !268, file: !269, line: 438, baseType: !2275, size: 704, offset: 8960)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_pending", scope: !268, file: !269, line: 439, baseType: !555, size: 8, offset: 9664)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread_abort", scope: !268, file: !269, line: 440, baseType: !865, size: 32, offset: 9696)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "pm_flags", scope: !268, file: !269, line: 442, baseType: !5088, size: 32, offset: 9728)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !268, file: !269, line: 444, baseType: !5159, size: 64, offset: 9792)
!5159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5160, size: 64)
!5160 = !DICompositeType(tag: DW_TAG_structure_type, name: "led_trigger", file: !269, line: 444, flags: DIFlagFwdDecl)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "supply", scope: !268, file: !269, line: 449, baseType: !5162, size: 128, offset: 9856)
!5162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_supply", file: !269, line: 266, size: 128, elements: !5163)
!5163 = !{!5164, !5167}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "vmmc", scope: !5162, file: !269, line: 267, baseType: !5165, size: 64)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !269, line: 263, flags: DIFlagFwdDecl)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "vqmmc", scope: !5162, file: !269, line: 268, baseType: !5165, size: 64, offset: 64)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !268, file: !269, line: 451, baseType: !447, size: 64, offset: 9984)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "ongoing_mrq", scope: !268, file: !269, line: 454, baseType: !4933, size: 64, offset: 10048)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "actual_clock", scope: !268, file: !269, line: 460, baseType: !7, size: 32, offset: 10112)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "slotno", scope: !268, file: !269, line: 462, baseType: !7, size: 32, offset: 10144)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_req", scope: !268, file: !269, line: 464, baseType: !324, size: 32, offset: 10176)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !268, file: !269, line: 465, baseType: !480, size: 32, offset: 10208)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_ops", scope: !268, file: !269, line: 468, baseType: !5175, size: 64, offset: 10240)
!5175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5176, size: 64)
!5176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5177)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cqe_ops", file: !269, line: 178, size: 576, elements: !5178)
!5178 = !{!5179, !5183, !5184, !5185, !5186, !5187, !5188, !5192, !5193}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enable", scope: !5177, file: !269, line: 180, baseType: !5180, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!324, !267, !262}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_disable", scope: !5177, file: !269, line: 182, baseType: !5027, size: 64, offset: 64)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_request", scope: !5177, file: !269, line: 187, baseType: !4996, size: 64, offset: 128)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_post_req", scope: !5177, file: !269, line: 189, baseType: !4991, size: 64, offset: 192)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_off", scope: !5177, file: !269, line: 195, baseType: !5027, size: 64, offset: 256)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_wait_for_idle", scope: !5177, file: !269, line: 200, baseType: !5018, size: 64, offset: 320)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_timeout", scope: !5177, file: !269, line: 206, baseType: !5189, size: 64, offset: 384)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!555, !267, !4933, !1071}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_start", scope: !5177, file: !269, line: 212, baseType: !5027, size: 64, offset: 448)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_finish", scope: !5177, file: !269, line: 219, baseType: !5027, size: 64, offset: 512)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_private", scope: !268, file: !269, line: 469, baseType: !257, size: 64, offset: 10304)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_qdepth", scope: !268, file: !269, line: 470, baseType: !324, size: 32, offset: 10368)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enabled", scope: !268, file: !269, line: 471, baseType: !555, size: 8, offset: 10400)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_on", scope: !268, file: !269, line: 472, baseType: !555, size: 8, offset: 10408)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "hsq_enabled", scope: !268, file: !269, line: 475, baseType: !555, size: 8, offset: 10416)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !268, file: !269, line: 477, baseType: !3484, align: 512, offset: 10752)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !263, file: !264, line: 246, baseType: !273, size: 5568, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "ocr", scope: !263, file: !264, line: 247, baseType: !480, size: 32, offset: 5632)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "rca", scope: !263, file: !264, line: 248, baseType: !7, size: 32, offset: 5664)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !263, file: !264, line: 249, baseType: !7, size: 32, offset: 5696)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !263, file: !264, line: 254, baseType: !7, size: 32, offset: 5728)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !263, file: !264, line: 255, baseType: !7, size: 32, offset: 5760)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_max_rate", scope: !263, file: !264, line: 256, baseType: !7, size: 32, offset: 5792)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "reenable_cmdq", scope: !263, file: !264, line: 274, baseType: !555, size: 8, offset: 5824)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !263, file: !264, line: 276, baseType: !7, size: 32, offset: 5856)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "erase_shift", scope: !263, file: !264, line: 277, baseType: !7, size: 32, offset: 5888)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "pref_erase", scope: !263, file: !264, line: 278, baseType: !7, size: 32, offset: 5920)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "eg_boundary", scope: !263, file: !264, line: 279, baseType: !7, size: 32, offset: 5952)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "erase_arg", scope: !263, file: !264, line: 280, baseType: !7, size: 32, offset: 5984)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "erased_byte", scope: !263, file: !264, line: 281, baseType: !1526, size: 8, offset: 6016)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "raw_cid", scope: !263, file: !264, line: 283, baseType: !4944, size: 128, offset: 6048)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "raw_csd", scope: !263, file: !264, line: 284, baseType: !4944, size: 128, offset: 6176)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scr", scope: !263, file: !264, line: 285, baseType: !5217, size: 64, offset: 6304)
!5217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 64, elements: !1742)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ssr", scope: !263, file: !264, line: 286, baseType: !5219, size: 512, offset: 6368)
!5219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 512, elements: !1908)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !263, file: !264, line: 287, baseType: !5221, size: 224, offset: 6880)
!5221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cid", file: !264, line: 13, size: 224, elements: !5222)
!5222 = !{!5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !5221, file: !264, line: 14, baseType: !7, size: 32)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "prod_name", scope: !5221, file: !264, line: 15, baseType: !3190, size: 64, offset: 32)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !5221, file: !264, line: 16, baseType: !492, size: 8, offset: 96)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !5221, file: !264, line: 17, baseType: !7, size: 32, offset: 128)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !5221, file: !264, line: 18, baseType: !381, size: 16, offset: 160)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !5221, file: !264, line: 19, baseType: !381, size: 16, offset: 176)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "hwrev", scope: !5221, file: !264, line: 20, baseType: !492, size: 8, offset: 192)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !5221, file: !264, line: 21, baseType: !492, size: 8, offset: 200)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !5221, file: !264, line: 22, baseType: !492, size: 8, offset: 208)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !263, file: !264, line: 288, baseType: !5233, size: 352, offset: 7104)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_csd", file: !264, line: 25, size: 352, elements: !5234)
!5234 = !{!5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "structure", scope: !5233, file: !264, line: 26, baseType: !492, size: 8)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "mmca_vsn", scope: !5233, file: !264, line: 27, baseType: !492, size: 8, offset: 8)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "cmdclass", scope: !5233, file: !264, line: 28, baseType: !381, size: 16, offset: 16)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "taac_clks", scope: !5233, file: !264, line: 29, baseType: !381, size: 16, offset: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "taac_ns", scope: !5233, file: !264, line: 30, baseType: !7, size: 32, offset: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "c_size", scope: !5233, file: !264, line: 31, baseType: !7, size: 32, offset: 96)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "r2w_factor", scope: !5233, file: !264, line: 32, baseType: !7, size: 32, offset: 128)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !5233, file: !264, line: 33, baseType: !7, size: 32, offset: 160)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !5233, file: !264, line: 34, baseType: !7, size: 32, offset: 192)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "read_blkbits", scope: !5233, file: !264, line: 35, baseType: !7, size: 32, offset: 224)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "write_blkbits", scope: !5233, file: !264, line: 36, baseType: !7, size: 32, offset: 256)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5233, file: !264, line: 37, baseType: !7, size: 32, offset: 288)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "read_partial", scope: !5233, file: !264, line: 38, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "read_misalign", scope: !5233, file: !264, line: 39, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "write_partial", scope: !5233, file: !264, line: 40, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "write_misalign", scope: !5233, file: !264, line: 41, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_imp", scope: !5233, file: !264, line: 42, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd", scope: !263, file: !264, line: 289, baseType: !5253, size: 1344, offset: 7488)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ext_csd", file: !264, line: 45, size: 1344, elements: !5254)
!5254 = !{!5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5329, !5330, !5331, !5332}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5253, file: !264, line: 46, baseType: !1526, size: 8)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "erase_group_def", scope: !5253, file: !264, line: 47, baseType: !1526, size: 8, offset: 8)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "sec_feature_support", scope: !5253, file: !264, line: 48, baseType: !1526, size: 8, offset: 16)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "rel_sectors", scope: !5253, file: !264, line: 49, baseType: !1526, size: 8, offset: 24)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "rel_param", scope: !5253, file: !264, line: 50, baseType: !1526, size: 8, offset: 32)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_rpmb_supported", scope: !5253, file: !264, line: 51, baseType: !555, size: 8, offset: 40)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "part_config", scope: !5253, file: !264, line: 52, baseType: !1526, size: 8, offset: 48)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ctrl", scope: !5253, file: !264, line: 53, baseType: !1526, size: 8, offset: 56)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "rst_n_function", scope: !5253, file: !264, line: 54, baseType: !1526, size: 8, offset: 64)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_writes", scope: !5253, file: !264, line: 55, baseType: !1526, size: 8, offset: 72)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_reads", scope: !5253, file: !264, line: 56, baseType: !1526, size: 8, offset: 80)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "packed_event_en", scope: !5253, file: !264, line: 57, baseType: !1526, size: 8, offset: 88)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "part_time", scope: !5253, file: !264, line: 58, baseType: !7, size: 32, offset: 96)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "sa_timeout", scope: !5253, file: !264, line: 59, baseType: !7, size: 32, offset: 128)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "generic_cmd6_time", scope: !5253, file: !264, line: 60, baseType: !7, size: 32, offset: 160)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_longtime", scope: !5253, file: !264, line: 61, baseType: !7, size: 32, offset: 192)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_notification", scope: !5253, file: !264, line: 62, baseType: !1526, size: 8, offset: 224)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !5253, file: !264, line: 63, baseType: !7, size: 32, offset: 256)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "hs200_max_dtr", scope: !5253, file: !264, line: 64, baseType: !7, size: 32, offset: 288)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !5253, file: !264, line: 69, baseType: !7, size: 32, offset: 320)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_size", scope: !5253, file: !264, line: 70, baseType: !7, size: 32, offset: 352)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_timeout", scope: !5253, file: !264, line: 71, baseType: !7, size: 32, offset: 384)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "sec_trim_mult", scope: !5253, file: !264, line: 72, baseType: !7, size: 32, offset: 416)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "sec_erase_mult", scope: !5253, file: !264, line: 73, baseType: !7, size: 32, offset: 448)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "trim_timeout", scope: !5253, file: !264, line: 74, baseType: !7, size: 32, offset: 480)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "partition_setting_completed", scope: !5253, file: !264, line: 75, baseType: !555, size: 8, offset: 512)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_offset", scope: !5253, file: !264, line: 76, baseType: !488, size: 64, offset: 576)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_size", scope: !5253, file: !264, line: 77, baseType: !7, size: 32, offset: 640)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !5253, file: !264, line: 78, baseType: !7, size: 32, offset: 672)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_en", scope: !5253, file: !264, line: 79, baseType: !555, size: 8, offset: 704)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "hpi", scope: !5253, file: !264, line: 80, baseType: !555, size: 8, offset: 712)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_cmd", scope: !5253, file: !264, line: 81, baseType: !7, size: 32, offset: 736)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "bkops", scope: !5253, file: !264, line: 82, baseType: !555, size: 8, offset: 768)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "man_bkops_en", scope: !5253, file: !264, line: 83, baseType: !555, size: 8, offset: 776)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bkops_en", scope: !5253, file: !264, line: 84, baseType: !555, size: 8, offset: 784)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "data_sector_size", scope: !5253, file: !264, line: 85, baseType: !7, size: 32, offset: 800)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "data_tag_unit_size", scope: !5253, file: !264, line: 86, baseType: !7, size: 32, offset: 832)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lock", scope: !5253, file: !264, line: 87, baseType: !7, size: 32, offset: 864)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lockable", scope: !5253, file: !264, line: 88, baseType: !555, size: 8, offset: 896)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "ffu_capable", scope: !5253, file: !264, line: 89, baseType: !555, size: 8, offset: 904)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_en", scope: !5253, file: !264, line: 90, baseType: !555, size: 8, offset: 912)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_support", scope: !5253, file: !264, line: 91, baseType: !555, size: 8, offset: 920)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_depth", scope: !5253, file: !264, line: 92, baseType: !7, size: 32, offset: 928)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !5253, file: !264, line: 94, baseType: !5299, size: 64, offset: 960)
!5299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 64, elements: !1504)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "raw_exception_status", scope: !5253, file: !264, line: 95, baseType: !1526, size: 8, offset: 1024)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "raw_partition_support", scope: !5253, file: !264, line: 96, baseType: !1526, size: 8, offset: 1032)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "raw_rpmb_size_mult", scope: !5253, file: !264, line: 97, baseType: !1526, size: 8, offset: 1040)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erased_mem_count", scope: !5253, file: !264, line: 98, baseType: !1526, size: 8, offset: 1048)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "strobe_support", scope: !5253, file: !264, line: 99, baseType: !1526, size: 8, offset: 1056)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ext_csd_structure", scope: !5253, file: !264, line: 100, baseType: !1526, size: 8, offset: 1064)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "raw_card_type", scope: !5253, file: !264, line: 101, baseType: !1526, size: 8, offset: 1072)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "raw_driver_strength", scope: !5253, file: !264, line: 102, baseType: !1526, size: 8, offset: 1080)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_int_time", scope: !5253, file: !264, line: 103, baseType: !1526, size: 8, offset: 1088)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_195", scope: !5253, file: !264, line: 104, baseType: !1526, size: 8, offset: 1096)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_195", scope: !5253, file: !264, line: 105, baseType: !1526, size: 8, offset: 1104)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_360", scope: !5253, file: !264, line: 106, baseType: !1526, size: 8, offset: 1112)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_360", scope: !5253, file: !264, line: 107, baseType: !1526, size: 8, offset: 1120)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "raw_s_a_timeout", scope: !5253, file: !264, line: 108, baseType: !1526, size: 8, offset: 1128)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_gap_size", scope: !5253, file: !264, line: 109, baseType: !1526, size: 8, offset: 1136)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erase_timeout_mult", scope: !5253, file: !264, line: 110, baseType: !1526, size: 8, offset: 1144)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_grp_size", scope: !5253, file: !264, line: 111, baseType: !1526, size: 8, offset: 1152)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_trim_mult", scope: !5253, file: !264, line: 112, baseType: !1526, size: 8, offset: 1160)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_erase_mult", scope: !5253, file: !264, line: 113, baseType: !1526, size: 8, offset: 1168)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_feature_support", scope: !5253, file: !264, line: 114, baseType: !1526, size: 8, offset: 1176)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "raw_trim_mult", scope: !5253, file: !264, line: 115, baseType: !1526, size: 8, offset: 1184)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_195", scope: !5253, file: !264, line: 116, baseType: !1526, size: 8, offset: 1192)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_360", scope: !5253, file: !264, line: 117, baseType: !1526, size: 8, offset: 1200)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_195", scope: !5253, file: !264, line: 118, baseType: !1526, size: 8, offset: 1208)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_360", scope: !5253, file: !264, line: 119, baseType: !1526, size: 8, offset: 1216)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_200_360", scope: !5253, file: !264, line: 120, baseType: !1526, size: 8, offset: 1224)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "raw_bkops_status", scope: !5253, file: !264, line: 121, baseType: !1526, size: 8, offset: 1232)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sectors", scope: !5253, file: !264, line: 122, baseType: !5328, size: 32, offset: 1240)
!5328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1526, size: 32, elements: !1336)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "pre_eol_info", scope: !5253, file: !264, line: 123, baseType: !1526, size: 8, offset: 1272)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_a", scope: !5253, file: !264, line: 124, baseType: !1526, size: 8, offset: 1280)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_b", scope: !5253, file: !264, line: 125, baseType: !1526, size: 8, offset: 1288)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "feature_support", scope: !5253, file: !264, line: 127, baseType: !7, size: 32, offset: 1312)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !263, file: !264, line: 290, baseType: !5334, size: 48, offset: 8832)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_scr", file: !264, line: 131, size: 48, elements: !5335)
!5335 = !{!5336, !5337, !5338, !5339, !5340, !5341}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "sda_vsn", scope: !5334, file: !264, line: 132, baseType: !492, size: 8)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec3", scope: !5334, file: !264, line: 133, baseType: !492, size: 8, offset: 8)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec4", scope: !5334, file: !264, line: 134, baseType: !492, size: 8, offset: 16)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "sda_specx", scope: !5334, file: !264, line: 135, baseType: !492, size: 8, offset: 24)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "bus_widths", scope: !5334, file: !264, line: 136, baseType: !492, size: 8, offset: 32)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !5334, file: !264, line: 139, baseType: !492, size: 8, offset: 40)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "ssr", scope: !263, file: !264, line: 291, baseType: !5343, size: 96, offset: 8896)
!5343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_ssr", file: !264, line: 144, size: 96, elements: !5344)
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "au", scope: !5343, file: !264, line: 145, baseType: !7, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "erase_timeout", scope: !5343, file: !264, line: 146, baseType: !7, size: 32, offset: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "erase_offset", scope: !5343, file: !264, line: 147, baseType: !7, size: 32, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "sw_caps", scope: !263, file: !264, line: 292, baseType: !5349, size: 160, offset: 8992)
!5349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_switch_caps", file: !264, line: 150, size: 160, elements: !5350)
!5350 = !{!5351, !5352, !5353, !5354, !5355}
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !5349, file: !264, line: 151, baseType: !7, size: 32)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "uhs_max_dtr", scope: !5349, file: !264, line: 152, baseType: !7, size: 32, offset: 32)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_bus_mode", scope: !5349, file: !264, line: 160, baseType: !7, size: 32, offset: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_drv_type", scope: !5349, file: !264, line: 174, baseType: !7, size: 32, offset: 96)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_curr_limit", scope: !5349, file: !264, line: 179, baseType: !7, size: 32, offset: 128)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs", scope: !263, file: !264, line: 294, baseType: !7, size: 32, offset: 9152)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs_probed", scope: !263, file: !264, line: 295, baseType: !865, size: 32, offset: 9184)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !263, file: !264, line: 296, baseType: !5359, size: 96, offset: 9216)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cccr", file: !264, line: 192, size: 96, elements: !5360)
!5360 = !{!5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_vsn", scope: !5359, file: !264, line: 193, baseType: !7, size: 32)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "sd_vsn", scope: !5359, file: !264, line: 194, baseType: !7, size: 32, offset: 32)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "multi_block", scope: !5359, file: !264, line: 195, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed", scope: !5359, file: !264, line: 196, baseType: !7, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "wide_bus", scope: !5359, file: !264, line: 197, baseType: !7, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "high_power", scope: !5359, file: !264, line: 198, baseType: !7, size: 1, offset: 67, flags: DIFlagBitField, extraData: i64 64)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "high_speed", scope: !5359, file: !264, line: 199, baseType: !7, size: 1, offset: 68, flags: DIFlagBitField, extraData: i64 64)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "disable_cd", scope: !5359, file: !264, line: 200, baseType: !7, size: 1, offset: 69, flags: DIFlagBitField, extraData: i64 64)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "cis", scope: !263, file: !264, line: 297, baseType: !5370, size: 96, offset: 9312)
!5370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cis", file: !264, line: 203, size: 96, elements: !5371)
!5371 = !{!5372, !5373, !5374, !5375}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5370, file: !264, line: 204, baseType: !381, size: 16)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5370, file: !264, line: 205, baseType: !381, size: 16, offset: 16)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !5370, file: !264, line: 206, baseType: !381, size: 16, offset: 32)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !5370, file: !264, line: 207, baseType: !7, size: 32, offset: 64)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_func", scope: !263, file: !264, line: 298, baseType: !5377, size: 448, offset: 9408)
!5377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5378, size: 448, elements: !2449)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func", file: !264, line: 211, flags: DIFlagFwdDecl)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_single_irq", scope: !263, file: !264, line: 299, baseType: !5378, size: 64, offset: 9856)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "major_rev", scope: !263, file: !264, line: 300, baseType: !1526, size: 8, offset: 9920)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "minor_rev", scope: !263, file: !264, line: 301, baseType: !1526, size: 8, offset: 9928)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "num_info", scope: !263, file: !264, line: 302, baseType: !7, size: 32, offset: 9952)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !263, file: !264, line: 303, baseType: !4827, size: 64, offset: 9984)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "tuples", scope: !263, file: !264, line: 304, baseType: !5386, size: 64, offset: 10048)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func_tuple", file: !264, line: 212, flags: DIFlagFwdDecl)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "sd_bus_speed", scope: !263, file: !264, line: 306, baseType: !7, size: 32, offset: 10112)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "mmc_avail_type", scope: !263, file: !264, line: 307, baseType: !7, size: 32, offset: 10144)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !263, file: !264, line: 308, baseType: !7, size: 32, offset: 10176)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !263, file: !264, line: 310, baseType: !447, size: 64, offset: 10240)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !263, file: !264, line: 311, baseType: !5393, size: 2240, offset: 10304)
!5393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5394, size: 2240, elements: !2449)
!5394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_part", file: !264, line: 229, size: 320, elements: !5395)
!5395 = !{!5396, !5397, !5398, !5400, !5401}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5394, file: !264, line: 230, baseType: !486, size: 64)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "part_cfg", scope: !5394, file: !264, line: 231, baseType: !7, size: 32, offset: 64)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5394, file: !264, line: 232, baseType: !5399, size: 160, offset: 96)
!5399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 160, elements: !3357)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "force_ro", scope: !5394, file: !264, line: 233, baseType: !555, size: 8, offset: 256)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "area_type", scope: !5394, file: !264, line: 234, baseType: !7, size: 32, offset: 288)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "nr_parts", scope: !263, file: !264, line: 312, baseType: !7, size: 32, offset: 12544)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "bouncesz", scope: !263, file: !264, line: 314, baseType: !7, size: 32, offset: 12576)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "complete_wq", scope: !263, file: !264, line: 315, baseType: !2179, size: 64, offset: 12608)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !259, file: !128, line: 76, baseType: !5121, size: 64, offset: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !259, file: !128, line: 77, baseType: !2768, size: 2304, offset: 128)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "blkdata", scope: !259, file: !128, line: 78, baseType: !5408, size: 64, offset: 2432)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_blk_data", file: !3, line: 101, size: 4992, elements: !5410)
!5410 = !{!5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5435, !5436, !5437, !5438}
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5409, file: !3, line: 102, baseType: !272, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "disk", scope: !5409, file: !3, line: 103, baseType: !2099, size: 64, offset: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5409, file: !3, line: 104, baseType: !259, size: 3712, offset: 128)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5409, file: !3, line: 105, baseType: !284, size: 128, offset: 3840)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "rpmbs", scope: !5409, file: !3, line: 106, baseType: !284, size: 128, offset: 3968)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5409, file: !3, line: 108, baseType: !7, size: 32, offset: 4096)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !5409, file: !3, line: 112, baseType: !7, size: 32, offset: 4128)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "read_only", scope: !5409, file: !3, line: 113, baseType: !7, size: 32, offset: 4160)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "part_type", scope: !5409, file: !3, line: 114, baseType: !7, size: 32, offset: 4192)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5409, file: !3, line: 115, baseType: !7, size: 32, offset: 4224)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "part_curr", scope: !5409, file: !3, line: 127, baseType: !7, size: 32, offset: 4256)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "force_ro", scope: !5409, file: !3, line: 128, baseType: !5423, size: 256, offset: 4288)
!5423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !114, line: 99, size: 256, elements: !5424)
!5424 = !{!5425, !5426, !5431}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5423, file: !114, line: 100, baseType: !376, size: 128)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5423, file: !114, line: 101, baseType: !5427, size: 64, offset: 128)
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!371, !272, !5430, !340}
!5430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5423, file: !114, line: 103, baseType: !5432, size: 64, offset: 192)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{!371, !272, !5430, !280, !386}
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "power_ro_lock", scope: !5409, file: !3, line: 129, baseType: !5423, size: 256, offset: 4544)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "area_type", scope: !5409, file: !3, line: 130, baseType: !324, size: 32, offset: 4800)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "status_dentry", scope: !5409, file: !3, line: 133, baseType: !447, size: 64, offset: 4864)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd_dentry", scope: !5409, file: !3, line: 134, baseType: !447, size: 64, offset: 4928)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !259, file: !128, line: 79, baseType: !2382, size: 64, offset: 2496)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !259, file: !128, line: 80, baseType: !298, offset: 2560)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight", scope: !259, file: !128, line: 81, baseType: !5442, size: 96, offset: 2560)
!5442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 96, elements: !341)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_busy", scope: !259, file: !128, line: 82, baseType: !7, size: 32, offset: 2656)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !259, file: !128, line: 85, baseType: !555, size: 8, offset: 2688)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "use_cqe", scope: !259, file: !128, line: 86, baseType: !555, size: 8, offset: 2696)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_needed", scope: !259, file: !128, line: 87, baseType: !555, size: 8, offset: 2704)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "in_recovery", scope: !259, file: !128, line: 88, baseType: !555, size: 8, offset: 2712)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "rw_wait", scope: !259, file: !128, line: 89, baseType: !555, size: 8, offset: 2720)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "waiting", scope: !259, file: !128, line: 90, baseType: !555, size: 8, offset: 2728)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_work", scope: !259, file: !128, line: 91, baseType: !2167, size: 256, offset: 2752)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !259, file: !128, line: 92, baseType: !1655, size: 128, offset: 3008)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_req", scope: !259, file: !128, line: 93, baseType: !2386, size: 64, offset: 3136)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "complete_req", scope: !259, file: !128, line: 94, baseType: !2386, size: 64, offset: 3200)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "complete_lock", scope: !259, file: !128, line: 95, baseType: !791, size: 192, offset: 3264)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "complete_work", scope: !259, file: !128, line: 96, baseType: !2167, size: 256, offset: 3456)
!5456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !4029, line: 32, baseType: !482)
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5458, size: 64)
!5458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_queue_req", file: !128, line: 64, size: 3072, elements: !5459)
!5459 = !{!5460, !5468, !5469, !5470, !5471, !5472, !5473}
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "brq", scope: !5458, file: !128, line: 65, baseType: !5461, size: 2816)
!5461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_blk_request", file: !128, line: 40, size: 2816, elements: !5462)
!5462 = !{!5463, !5464, !5465, !5466, !5467}
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !5461, file: !128, line: 41, baseType: !4934, size: 896)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "sbc", scope: !5461, file: !128, line: 42, baseType: !4939, size: 448, offset: 896)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5461, file: !128, line: 43, baseType: !4939, size: 448, offset: 1344)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5461, file: !128, line: 44, baseType: !4939, size: 448, offset: 1792)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5461, file: !128, line: 45, baseType: !4951, size: 576, offset: 2240)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !5458, file: !128, line: 66, baseType: !4966, size: 64, offset: 2816)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "drv_op", scope: !5458, file: !128, line: 67, baseType: !127, size: 32, offset: 2880)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "drv_op_result", scope: !5458, file: !128, line: 68, baseType: !324, size: 32, offset: 2912)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "drv_op_data", scope: !5458, file: !128, line: 69, baseType: !257, size: 64, offset: 2944)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_count", scope: !5458, file: !128, line: 70, baseType: !7, size: 32, offset: 3008)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5458, file: !128, line: 71, baseType: !324, size: 32, offset: 3040)
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5475, size: 64)
!5475 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!5476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5477, size: 64)
!5477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ioc_cmd", file: !5478, line: 8, size: 576, elements: !5479)
!5478 = !DIFile(filename: "./include/uapi/linux/mmc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!5479 = !{!5480, !5481, !5482, !5483, !5484, !5486, !5487, !5488, !5489, !5490, !5491, !5492, !5493, !5494}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "write_flag", scope: !5477, file: !5478, line: 13, baseType: !324, size: 32)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "is_acmd", scope: !5477, file: !5478, line: 16, baseType: !324, size: 32, offset: 32)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !5477, file: !5478, line: 18, baseType: !482, size: 32, offset: 64)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5477, file: !5478, line: 19, baseType: !482, size: 32, offset: 96)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5477, file: !5478, line: 20, baseType: !5485, size: 128, offset: 128)
!5485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 128, elements: !1336)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5477, file: !5478, line: 21, baseType: !7, size: 32, offset: 256)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "blksz", scope: !5477, file: !5478, line: 22, baseType: !7, size: 32, offset: 288)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !5477, file: !5478, line: 23, baseType: !7, size: 32, offset: 320)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "postsleep_min_us", scope: !5477, file: !5478, line: 32, baseType: !7, size: 32, offset: 352)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "postsleep_max_us", scope: !5477, file: !5478, line: 33, baseType: !7, size: 32, offset: 384)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "data_timeout_ns", scope: !5477, file: !5478, line: 38, baseType: !7, size: 32, offset: 416)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timeout_ms", scope: !5477, file: !5478, line: 39, baseType: !7, size: 32, offset: 448)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !5477, file: !5478, line: 46, baseType: !482, size: 32, offset: 480)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !5477, file: !5478, line: 49, baseType: !487, size: 64, offset: 512)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ioc_multi_cmd", file: !5478, line: 59, size: 64, elements: !5497)
!5497 = !{!5498, !5499}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_cmds", scope: !5496, file: !5478, line: 60, baseType: !487, size: 64)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !5496, file: !5478, line: 61, baseType: !5500, offset: 64)
!5500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5477, elements: !1896)
!5501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5502, size: 64)
!5502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_rpmb_data", file: !3, line: 154, size: 6656, elements: !5503)
!5503 = !{!5504, !5505, !5506, !5507, !5508, !5509}
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5502, file: !3, line: 155, baseType: !273, size: 5568)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "chrdev", scope: !5502, file: !3, line: 156, baseType: !4226, size: 832, offset: 5568)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5502, file: !3, line: 157, baseType: !324, size: 32, offset: 6400)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "part_index", scope: !5502, file: !3, line: 158, baseType: !7, size: 32, offset: 6432)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "md", scope: !5502, file: !3, line: 159, baseType: !5408, size: 64, offset: 6464)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5502, file: !3, line: 160, baseType: !284, size: 128, offset: 6528)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5512, size: 64)
!5512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5513)
!5513 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !324)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !480)
!5516 = !{!0, !5517, !5569, !5572, !5577, !5579, !5584, !5589, !5592, !5595, !5597, !5602, !5604, !5619, !5621, !5644, !5649, !5654, !5656, !5658, !5660, !5662, !5664, !5666}
!5517 = !DIGlobalVariableExpression(var: !5518, expr: !DIExpression())
!5518 = distinct !DIGlobalVariable(name: "__param_perdev_minors", scope: !2, file: !3, line: 165, type: !5519, isLocal: true, isDefinition: true, align: 64)
!5519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5520)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5521, line: 69, size: 320, elements: !5522)
!5521 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5522 = !{!5523, !5524, !5525, !5541, !5543, !5547, !5548}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5520, file: !5521, line: 70, baseType: !280, size: 64)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5520, file: !5521, line: 71, baseType: !698, size: 64, offset: 64)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5520, file: !5521, line: 72, baseType: !5526, size: 64, offset: 128)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 64)
!5527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5528)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5521, line: 47, size: 256, elements: !5529)
!5529 = !{!5530, !5531, !5536, !5540}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5528, file: !5521, line: 49, baseType: !7, size: 32)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5528, file: !5521, line: 51, baseType: !5532, size: 64, offset: 64)
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5533, size: 64)
!5533 = !DISubroutineType(types: !5534)
!5534 = !{!324, !280, !5535}
!5535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5528, file: !5521, line: 53, baseType: !5537, size: 64, offset: 128)
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{!324, !340, !5535}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5528, file: !5521, line: 55, baseType: !533, size: 64, offset: 192)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5520, file: !5521, line: 73, baseType: !5542, size: 16, offset: 192)
!5542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !977)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5520, file: !5521, line: 74, baseType: !5544, size: 8, offset: 208)
!5544 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !481, line: 16, baseType: !5545)
!5545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !483, line: 20, baseType: !5546)
!5546 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5520, file: !5521, line: 75, baseType: !1526, size: 8, offset: 216)
!5548 = !DIDerivedType(tag: DW_TAG_member, scope: !5520, file: !5521, line: 76, baseType: !5549, size: 64, offset: 256)
!5549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5520, file: !5521, line: 76, size: 64, elements: !5550)
!5550 = !{!5551, !5552, !5559}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5549, file: !5521, line: 77, baseType: !257, size: 64)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5549, file: !5521, line: 78, baseType: !5553, size: 64)
!5553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5554, size: 64)
!5554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5555)
!5555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5521, line: 86, size: 128, elements: !5556)
!5556 = !{!5557, !5558}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5555, file: !5521, line: 87, baseType: !7, size: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5555, file: !5521, line: 88, baseType: !340, size: 64, offset: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5549, file: !5521, line: 79, baseType: !5560, size: 64)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5562)
!5562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5521, line: 92, size: 256, elements: !5563)
!5563 = !{!5564, !5565, !5566, !5567, !5568}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5562, file: !5521, line: 94, baseType: !7, size: 32)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5562, file: !5521, line: 95, baseType: !7, size: 32, offset: 32)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5562, file: !5521, line: 96, baseType: !2775, size: 64, offset: 64)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5562, file: !5521, line: 97, baseType: !5526, size: 64, offset: 128)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5562, file: !5521, line: 98, baseType: !257, size: 64, offset: 192)
!5569 = !DIGlobalVariableExpression(var: !5570, expr: !DIExpression())
!5570 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_perdev_minorstype292", scope: !2, file: !3, line: 165, type: !5571, isLocal: true, isDefinition: true, align: 8)
!5571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 296, elements: !2159)
!5572 = !DIGlobalVariableExpression(var: !5573, expr: !DIExpression())
!5573 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_perdev_minors293", scope: !2, file: !3, line: 166, type: !5574, isLocal: true, isDefinition: true, align: 8)
!5574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 536, elements: !5575)
!5575 = !{!5576}
!5576 = !DISubrange(count: 67)
!5577 = !DIGlobalVariableExpression(var: !5578, expr: !DIExpression())
!5578 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mmc_blk_init323", scope: !2, file: !3, line: 3065, type: !257, isLocal: true, isDefinition: true)
!5579 = !DIGlobalVariableExpression(var: !5580, expr: !DIExpression())
!5580 = distinct !DIGlobalVariable(name: "__exitcall_mmc_blk_exit", scope: !2, file: !3, line: 3066, type: !5581, isLocal: true, isDefinition: true)
!5581 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !5582, line: 117, baseType: !5583)
!5582 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!5584 = !DIGlobalVariableExpression(var: !5585, expr: !DIExpression())
!5585 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file324", scope: !2, file: !3, line: 3068, type: !5586, isLocal: true, isDefinition: true, align: 8)
!5586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 336, elements: !5587)
!5587 = !{!5588}
!5588 = !DISubrange(count: 42)
!5589 = !DIGlobalVariableExpression(var: !5590, expr: !DIExpression())
!5590 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license325", scope: !2, file: !3, line: 3068, type: !5591, isLocal: true, isDefinition: true, align: 8)
!5591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 176, elements: !2709)
!5592 = !DIGlobalVariableExpression(var: !5593, expr: !DIExpression())
!5593 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description326", scope: !2, file: !3, line: 3069, type: !5594, isLocal: true, isDefinition: true, align: 8)
!5594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 512, elements: !345)
!5595 = !DIGlobalVariableExpression(var: !5596, expr: !DIExpression())
!5596 = distinct !DIGlobalVariable(name: "mmc_rpmb_devt", scope: !2, file: !3, line: 138, type: !578, isLocal: true, isDefinition: true)
!5597 = !DIGlobalVariableExpression(var: !5598, expr: !DIExpression())
!5598 = distinct !DIGlobalVariable(name: "__param_str_perdev_minors", scope: !2, file: !3, line: 165, type: !5599, isLocal: true, isDefinition: true)
!5599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 168, elements: !5600)
!5600 = !{!5601}
!5601 = !DISubrange(count: 21)
!5602 = !DIGlobalVariableExpression(var: !5603, expr: !DIExpression())
!5603 = distinct !DIGlobalVariable(name: "perdev_minors", scope: !2, file: !3, line: 84, type: !324, isLocal: true, isDefinition: true)
!5604 = !DIGlobalVariableExpression(var: !5605, expr: !DIExpression())
!5605 = distinct !DIGlobalVariable(name: "mmc_driver", scope: !2, file: !3, line: 3008, type: !5606, isLocal: true, isDefinition: true)
!5606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_driver", file: !5607, line: 32, size: 1344, elements: !5608)
!5607 = !DIFile(filename: "drivers/mmc/core/bus.h", directory: "/home/lizy2001/genbc/linux")
!5608 = !{!5609, !5610, !5614, !5618}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !5606, file: !5607, line: 33, baseType: !4558, size: 1152)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5606, file: !5607, line: 34, baseType: !5611, size: 64, offset: 1152)
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5612, size: 64)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{!324, !262}
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5606, file: !5607, line: 35, baseType: !5615, size: 64, offset: 1216)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{null, !262}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5606, file: !5607, line: 36, baseType: !5615, size: 64, offset: 1280)
!5619 = !DIGlobalVariableExpression(var: !5620, expr: !DIExpression())
!5620 = distinct !DIGlobalVariable(name: "mmc_blk_pm_ops", scope: !2, file: !3, line: 3006, type: !4513, isLocal: true, isDefinition: true)
!5621 = !DIGlobalVariableExpression(var: !5622, expr: !DIExpression())
!5622 = distinct !DIGlobalVariable(name: "mmc_blk_fixups", scope: !2, file: !5623, line: 17, type: !5624, isLocal: true, isDefinition: true)
!5623 = !DIFile(filename: "drivers/mmc/core/quirks.h", directory: "/home/lizy2001/genbc/linux")
!5624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5625, size: 11200, elements: !5642)
!5625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5626)
!5626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_fixup", file: !5627, line: 46, size: 448, elements: !5628)
!5627 = !DIFile(filename: "drivers/mmc/core/card.h", directory: "/home/lizy2001/genbc/linux")
!5628 = !{!5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5641}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5626, file: !5627, line: 48, baseType: !280, size: 64)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "rev_start", scope: !5626, file: !5627, line: 51, baseType: !486, size: 64, offset: 64)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "rev_end", scope: !5626, file: !5627, line: 51, baseType: !486, size: 64, offset: 128)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !5626, file: !5627, line: 53, baseType: !7, size: 32, offset: 192)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !5626, file: !5627, line: 54, baseType: !381, size: 16, offset: 224)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "cis_vendor", scope: !5626, file: !5627, line: 57, baseType: !977, size: 16, offset: 240)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "cis_device", scope: !5626, file: !5627, line: 57, baseType: !977, size: 16, offset: 256)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd_rev", scope: !5626, file: !5627, line: 60, baseType: !7, size: 32, offset: 288)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_fixup", scope: !5626, file: !5627, line: 62, baseType: !5638, size: 64, offset: 320)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{null, !262, !324}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5626, file: !5627, line: 63, baseType: !324, size: 32, offset: 384)
!5642 = !{!5643}
!5643 = !DISubrange(count: 25)
!5644 = !DIGlobalVariableExpression(var: !5645, expr: !DIExpression())
!5645 = distinct !DIGlobalVariable(name: "__key", scope: !5646, file: !3, line: 2292, type: !713, isLocal: true, isDefinition: true)
!5646 = distinct !DISubprogram(name: "mmc_blk_alloc_req", scope: !3, file: !3, line: 2252, type: !5647, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{!5408, !262, !272, !948, !555, !280, !324}
!5649 = !DIGlobalVariableExpression(var: !5650, expr: !DIExpression())
!5650 = distinct !DIGlobalVariable(name: "mmc_blk_ida", scope: !2, file: !3, line: 95, type: !5651, isLocal: true, isDefinition: true)
!5651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !4381, line: 244, size: 128, elements: !5652)
!5652 = !{!5653}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !5651, file: !4381, line: 245, baseType: !856, size: 128)
!5654 = !DIGlobalVariableExpression(var: !5655, expr: !DIExpression())
!5655 = distinct !DIGlobalVariable(name: "max_devices", scope: !2, file: !3, line: 91, type: !324, isLocal: true, isDefinition: true)
!5656 = !DIGlobalVariableExpression(var: !5657, expr: !DIExpression())
!5657 = distinct !DIGlobalVariable(name: "mmc_bdops", scope: !2, file: !3, line: 775, type: !2188, isLocal: true, isDefinition: true)
!5658 = !DIGlobalVariableExpression(var: !5659, expr: !DIExpression())
!5659 = distinct !DIGlobalVariable(name: "open_lock", scope: !2, file: !3, line: 163, type: !791, isLocal: true, isDefinition: true)
!5660 = !DIGlobalVariableExpression(var: !5661, expr: !DIExpression())
!5661 = distinct !DIGlobalVariable(name: "block_mutex", scope: !2, file: !3, line: 78, type: !791, isLocal: true, isDefinition: true)
!5662 = !DIGlobalVariableExpression(var: !5663, expr: !DIExpression())
!5663 = distinct !DIGlobalVariable(name: "mmc_rpmb_ida", scope: !2, file: !3, line: 96, type: !5651, isLocal: true, isDefinition: true)
!5664 = !DIGlobalVariableExpression(var: !5665, expr: !DIExpression())
!5665 = distinct !DIGlobalVariable(name: "mmc_rpmb_fileops", scope: !2, file: !3, line: 2490, type: !3988, isLocal: true, isDefinition: true)
!5666 = !DIGlobalVariableExpression(var: !5667, expr: !DIExpression())
!5667 = distinct !DIGlobalVariable(name: "mmc_rpmb_bus_type", scope: !2, file: !3, line: 141, type: !4544, isLocal: true, isDefinition: true)
!5668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 208, elements: !5669)
!5669 = !{!5670}
!5670 = !DISubrange(count: 26)
!5671 = !{!"rsp"}
!5672 = !{i32 7, !"Dwarf Version", i32 4}
!5673 = !{i32 2, !"Debug Info Version", i32 3}
!5674 = !{i32 1, !"wchar_size", i32 2}
!5675 = !{i32 1, !"Code Model", i32 2}
!5676 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5677 = distinct !DISubprogram(name: "mmc_blk_cqe_recovery", scope: !3, file: !3, line: 1415, type: !5678, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{null, !258}
!5680 = !DILocalVariable(name: "mq", arg: 1, scope: !5677, file: !3, line: 1415, type: !258)
!5681 = !DILocation(line: 1415, column: 45, scope: !5677)
!5682 = !DILocalVariable(name: "card", scope: !5677, file: !3, line: 1417, type: !262)
!5683 = !DILocation(line: 1417, column: 19, scope: !5677)
!5684 = !DILocation(line: 1417, column: 26, scope: !5677)
!5685 = !DILocation(line: 1417, column: 30, scope: !5677)
!5686 = !DILocalVariable(name: "host", scope: !5677, file: !3, line: 1418, type: !267)
!5687 = !DILocation(line: 1418, column: 19, scope: !5677)
!5688 = !DILocation(line: 1418, column: 26, scope: !5677)
!5689 = !DILocation(line: 1418, column: 32, scope: !5677)
!5690 = !DILocalVariable(name: "err", scope: !5677, file: !3, line: 1419, type: !324)
!5691 = !DILocation(line: 1419, column: 6, scope: !5677)
!5692 = !DILocation(line: 1421, column: 2, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 1421, column: 2)
!5694 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1421, column: 2)
!5695 = !DILocation(line: 1421, column: 2, scope: !5694)
!5696 = !DILocation(line: 1423, column: 25, scope: !5677)
!5697 = !DILocation(line: 1423, column: 8, scope: !5677)
!5698 = !DILocation(line: 1423, column: 6, scope: !5677)
!5699 = !DILocation(line: 1424, column: 6, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1424, column: 6)
!5701 = !DILocation(line: 1424, column: 6, scope: !5677)
!5702 = !DILocation(line: 1425, column: 17, scope: !5700)
!5703 = !DILocation(line: 1425, column: 21, scope: !5700)
!5704 = !DILocation(line: 1425, column: 30, scope: !5700)
!5705 = !DILocation(line: 1425, column: 3, scope: !5700)
!5706 = !DILocation(line: 1427, column: 25, scope: !5700)
!5707 = !DILocation(line: 1427, column: 29, scope: !5700)
!5708 = !DILocation(line: 1427, column: 3, scope: !5700)
!5709 = !DILocation(line: 1429, column: 2, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1429, column: 2)
!5711 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 1429, column: 2)
!5712 = !DILocation(line: 1429, column: 2, scope: !5711)
!5713 = !DILocation(line: 1430, column: 1, scope: !5677)
!5714 = distinct !DISubprogram(name: "mmc_blk_reset", scope: !3, file: !3, line: 938, type: !5715, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5715 = !DISubroutineType(types: !5716)
!5716 = !{!324, !5408, !267, !324}
!5717 = !DILocalVariable(name: "md", arg: 1, scope: !5714, file: !3, line: 938, type: !5408)
!5718 = !DILocation(line: 938, column: 47, scope: !5714)
!5719 = !DILocalVariable(name: "host", arg: 2, scope: !5714, file: !3, line: 938, type: !267)
!5720 = !DILocation(line: 938, column: 68, scope: !5714)
!5721 = !DILocalVariable(name: "type", arg: 3, scope: !5714, file: !3, line: 939, type: !324)
!5722 = !DILocation(line: 939, column: 9, scope: !5714)
!5723 = !DILocalVariable(name: "err", scope: !5714, file: !3, line: 941, type: !324)
!5724 = !DILocation(line: 941, column: 6, scope: !5714)
!5725 = !DILocation(line: 943, column: 6, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 943, column: 6)
!5727 = !DILocation(line: 943, column: 10, scope: !5726)
!5728 = !DILocation(line: 943, column: 23, scope: !5726)
!5729 = !DILocation(line: 943, column: 21, scope: !5726)
!5730 = !DILocation(line: 943, column: 6, scope: !5714)
!5731 = !DILocation(line: 944, column: 3, scope: !5726)
!5732 = !DILocation(line: 946, column: 20, scope: !5714)
!5733 = !DILocation(line: 946, column: 2, scope: !5714)
!5734 = !DILocation(line: 946, column: 6, scope: !5714)
!5735 = !DILocation(line: 946, column: 17, scope: !5714)
!5736 = !DILocation(line: 947, column: 21, scope: !5714)
!5737 = !DILocation(line: 947, column: 8, scope: !5714)
!5738 = !DILocation(line: 947, column: 6, scope: !5714)
!5739 = !DILocation(line: 949, column: 6, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 949, column: 6)
!5741 = !DILocation(line: 949, column: 10, scope: !5740)
!5742 = !DILocation(line: 949, column: 6, scope: !5714)
!5743 = !DILocalVariable(name: "main_md", scope: !5744, file: !3, line: 950, type: !5408)
!5744 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 949, column: 26)
!5745 = !DILocation(line: 950, column: 24, scope: !5744)
!5746 = !DILocation(line: 951, column: 21, scope: !5744)
!5747 = !DILocation(line: 951, column: 27, scope: !5744)
!5748 = !DILocation(line: 951, column: 33, scope: !5744)
!5749 = !DILocation(line: 951, column: 4, scope: !5744)
!5750 = !DILocalVariable(name: "part_err", scope: !5744, file: !3, line: 952, type: !324)
!5751 = !DILocation(line: 952, column: 7, scope: !5744)
!5752 = !DILocation(line: 954, column: 24, scope: !5744)
!5753 = !DILocation(line: 954, column: 33, scope: !5744)
!5754 = !DILocation(line: 954, column: 3, scope: !5744)
!5755 = !DILocation(line: 954, column: 12, scope: !5744)
!5756 = !DILocation(line: 954, column: 22, scope: !5744)
!5757 = !DILocation(line: 955, column: 34, scope: !5744)
!5758 = !DILocation(line: 955, column: 40, scope: !5744)
!5759 = !DILocation(line: 955, column: 46, scope: !5744)
!5760 = !DILocation(line: 955, column: 50, scope: !5744)
!5761 = !DILocation(line: 955, column: 14, scope: !5744)
!5762 = !DILocation(line: 955, column: 12, scope: !5744)
!5763 = !DILocation(line: 956, column: 7, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 956, column: 7)
!5765 = !DILocation(line: 956, column: 7, scope: !5744)
!5766 = !DILocation(line: 961, column: 4, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5764, file: !3, line: 956, column: 17)
!5768 = !DILocation(line: 963, column: 2, scope: !5744)
!5769 = !DILocation(line: 964, column: 9, scope: !5714)
!5770 = !DILocation(line: 964, column: 2, scope: !5714)
!5771 = !DILocation(line: 965, column: 1, scope: !5714)
!5772 = distinct !DISubprogram(name: "mmc_blk_reset_success", scope: !3, file: !3, line: 967, type: !5773, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{null, !5408, !324}
!5775 = !DILocalVariable(name: "md", arg: 1, scope: !5772, file: !3, line: 967, type: !5408)
!5776 = !DILocation(line: 967, column: 63, scope: !5772)
!5777 = !DILocalVariable(name: "type", arg: 2, scope: !5772, file: !3, line: 967, type: !324)
!5778 = !DILocation(line: 967, column: 71, scope: !5772)
!5779 = !DILocation(line: 969, column: 21, scope: !5772)
!5780 = !DILocation(line: 969, column: 20, scope: !5772)
!5781 = !DILocation(line: 969, column: 2, scope: !5772)
!5782 = !DILocation(line: 969, column: 6, scope: !5772)
!5783 = !DILocation(line: 969, column: 17, scope: !5772)
!5784 = !DILocation(line: 970, column: 1, scope: !5772)
!5785 = distinct !DISubprogram(name: "mmc_blk_mq_complete", scope: !3, file: !3, line: 1930, type: !2657, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5786 = !DILocalVariable(name: "req", arg: 1, scope: !5785, file: !3, line: 1930, type: !2386)
!5787 = !DILocation(line: 1930, column: 42, scope: !5785)
!5788 = !DILocalVariable(name: "mq", scope: !5785, file: !3, line: 1932, type: !258)
!5789 = !DILocation(line: 1932, column: 20, scope: !5785)
!5790 = !DILocation(line: 1932, column: 25, scope: !5785)
!5791 = !DILocation(line: 1932, column: 30, scope: !5785)
!5792 = !DILocation(line: 1932, column: 33, scope: !5785)
!5793 = !DILocation(line: 1934, column: 6, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1934, column: 6)
!5795 = !DILocation(line: 1934, column: 10, scope: !5794)
!5796 = !DILocation(line: 1934, column: 6, scope: !5785)
!5797 = !DILocation(line: 1935, column: 27, scope: !5794)
!5798 = !DILocation(line: 1935, column: 31, scope: !5794)
!5799 = !DILocation(line: 1935, column: 3, scope: !5794)
!5800 = !DILocation(line: 1936, column: 11, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1936, column: 11)
!5802 = !DILocation(line: 1936, column: 11, scope: !5794)
!5803 = !DILocation(line: 1937, column: 26, scope: !5801)
!5804 = !DILocation(line: 1937, column: 30, scope: !5801)
!5805 = !DILocation(line: 1937, column: 3, scope: !5801)
!5806 = !DILocation(line: 1938, column: 1, scope: !5785)
!5807 = distinct !DISubprogram(name: "mmc_blk_cqe_complete_rq", scope: !3, file: !3, line: 1364, type: !5808, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{null, !258, !2386}
!5810 = !DILocalVariable(name: "lock", arg: 1, scope: !5811, file: !5812, line: 407, type: !1245)
!5811 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5812, file: !5812, line: 407, type: !5813, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5812 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5813 = !DISubroutineType(types: !5814)
!5814 = !{null, !1245, !389}
!5815 = !DILocation(line: 407, column: 64, scope: !5811, inlinedAt: !5816)
!5816 = distinct !DILocation(line: 1406, column: 2, scope: !5807)
!5817 = !DILocalVariable(name: "flags", arg: 2, scope: !5811, file: !5812, line: 407, type: !389)
!5818 = !DILocation(line: 407, column: 84, scope: !5811, inlinedAt: !5816)
!5819 = !DILocalVariable(name: "lock", arg: 1, scope: !5820, file: !5812, line: 327, type: !1245)
!5820 = distinct !DISubprogram(name: "spinlock_check", scope: !5812, file: !5812, line: 327, type: !5821, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{!5823, !1245}
!5823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!5824 = !DILocation(line: 327, column: 67, scope: !5820, inlinedAt: !5825)
!5825 = distinct !DILocation(line: 1398, column: 2, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 1398, column: 2)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1398, column: 2)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1398, column: 2)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1398, column: 2)
!5830 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1398, column: 2)
!5831 = !DILocalVariable(name: "mq", arg: 1, scope: !5807, file: !3, line: 1364, type: !258)
!5832 = !DILocation(line: 1364, column: 55, scope: !5807)
!5833 = !DILocalVariable(name: "req", arg: 2, scope: !5807, file: !3, line: 1364, type: !2386)
!5834 = !DILocation(line: 1364, column: 75, scope: !5807)
!5835 = !DILocalVariable(name: "mqrq", scope: !5807, file: !3, line: 1366, type: !5457)
!5836 = !DILocation(line: 1366, column: 24, scope: !5807)
!5837 = !DILocation(line: 1366, column: 52, scope: !5807)
!5838 = !DILocation(line: 1366, column: 31, scope: !5807)
!5839 = !DILocalVariable(name: "mrq", scope: !5807, file: !3, line: 1367, type: !4933)
!5840 = !DILocation(line: 1367, column: 22, scope: !5807)
!5841 = !DILocation(line: 1367, column: 29, scope: !5807)
!5842 = !DILocation(line: 1367, column: 35, scope: !5807)
!5843 = !DILocation(line: 1367, column: 39, scope: !5807)
!5844 = !DILocalVariable(name: "q", scope: !5807, file: !3, line: 1368, type: !2382)
!5845 = !DILocation(line: 1368, column: 24, scope: !5807)
!5846 = !DILocation(line: 1368, column: 28, scope: !5807)
!5847 = !DILocation(line: 1368, column: 33, scope: !5807)
!5848 = !DILocalVariable(name: "host", scope: !5807, file: !3, line: 1369, type: !267)
!5849 = !DILocation(line: 1369, column: 19, scope: !5807)
!5850 = !DILocation(line: 1369, column: 26, scope: !5807)
!5851 = !DILocation(line: 1369, column: 30, scope: !5807)
!5852 = !DILocation(line: 1369, column: 36, scope: !5807)
!5853 = !DILocalVariable(name: "issue_type", scope: !5807, file: !3, line: 1370, type: !146)
!5854 = !DILocation(line: 1370, column: 22, scope: !5807)
!5855 = !DILocation(line: 1370, column: 50, scope: !5807)
!5856 = !DILocation(line: 1370, column: 54, scope: !5807)
!5857 = !DILocation(line: 1370, column: 35, scope: !5807)
!5858 = !DILocalVariable(name: "flags", scope: !5807, file: !3, line: 1371, type: !389)
!5859 = !DILocation(line: 1371, column: 16, scope: !5807)
!5860 = !DILocalVariable(name: "put_card", scope: !5807, file: !3, line: 1372, type: !555)
!5861 = !DILocation(line: 1372, column: 7, scope: !5807)
!5862 = !DILocalVariable(name: "err", scope: !5807, file: !3, line: 1373, type: !324)
!5863 = !DILocation(line: 1373, column: 6, scope: !5807)
!5864 = !DILocation(line: 1375, column: 19, scope: !5807)
!5865 = !DILocation(line: 1375, column: 25, scope: !5807)
!5866 = !DILocation(line: 1375, column: 2, scope: !5807)
!5867 = !DILocation(line: 1377, column: 6, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1377, column: 6)
!5869 = !DILocation(line: 1377, column: 11, scope: !5868)
!5870 = !DILocation(line: 1377, column: 15, scope: !5868)
!5871 = !DILocation(line: 1377, column: 18, scope: !5868)
!5872 = !DILocation(line: 1377, column: 23, scope: !5868)
!5873 = !DILocation(line: 1377, column: 28, scope: !5868)
!5874 = !DILocation(line: 1377, column: 6, scope: !5807)
!5875 = !DILocation(line: 1378, column: 9, scope: !5868)
!5876 = !DILocation(line: 1378, column: 14, scope: !5868)
!5877 = !DILocation(line: 1378, column: 19, scope: !5868)
!5878 = !DILocation(line: 1378, column: 7, scope: !5868)
!5879 = !DILocation(line: 1378, column: 3, scope: !5868)
!5880 = !DILocation(line: 1379, column: 11, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 1379, column: 11)
!5882 = !DILocation(line: 1379, column: 16, scope: !5881)
!5883 = !DILocation(line: 1379, column: 21, scope: !5881)
!5884 = !DILocation(line: 1379, column: 24, scope: !5881)
!5885 = !DILocation(line: 1379, column: 29, scope: !5881)
!5886 = !DILocation(line: 1379, column: 35, scope: !5881)
!5887 = !DILocation(line: 1379, column: 11, scope: !5868)
!5888 = !DILocation(line: 1380, column: 9, scope: !5881)
!5889 = !DILocation(line: 1380, column: 14, scope: !5881)
!5890 = !DILocation(line: 1380, column: 20, scope: !5881)
!5891 = !DILocation(line: 1380, column: 7, scope: !5881)
!5892 = !DILocation(line: 1380, column: 3, scope: !5881)
!5893 = !DILocation(line: 1382, column: 7, scope: !5881)
!5894 = !DILocation(line: 1384, column: 6, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1384, column: 6)
!5896 = !DILocation(line: 1384, column: 6, scope: !5807)
!5897 = !DILocation(line: 1385, column: 7, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 1385, column: 7)
!5899 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1384, column: 11)
!5900 = !DILocation(line: 1385, column: 13, scope: !5898)
!5901 = !DILocation(line: 1385, column: 20, scope: !5898)
!5902 = !DILocation(line: 1385, column: 23, scope: !5898)
!5903 = !DILocation(line: 1385, column: 7, scope: !5899)
!5904 = !DILocation(line: 1386, column: 27, scope: !5898)
!5905 = !DILocation(line: 1386, column: 4, scope: !5898)
!5906 = !DILocation(line: 1388, column: 23, scope: !5898)
!5907 = !DILocation(line: 1388, column: 4, scope: !5898)
!5908 = !DILocation(line: 1389, column: 2, scope: !5899)
!5909 = !DILocation(line: 1389, column: 13, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1389, column: 13)
!5911 = !DILocation(line: 1389, column: 18, scope: !5910)
!5912 = !DILocation(line: 1389, column: 13, scope: !5895)
!5913 = !DILocation(line: 1390, column: 26, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5915, file: !3, line: 1390, column: 7)
!5915 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1389, column: 24)
!5916 = !DILocation(line: 1390, column: 43, scope: !5914)
!5917 = !DILocation(line: 1390, column: 48, scope: !5914)
!5918 = !DILocation(line: 1390, column: 54, scope: !5914)
!5919 = !DILocation(line: 1390, column: 7, scope: !5914)
!5920 = !DILocation(line: 1390, column: 7, scope: !5915)
!5921 = !DILocation(line: 1391, column: 27, scope: !5914)
!5922 = !DILocation(line: 1391, column: 4, scope: !5914)
!5923 = !DILocation(line: 1393, column: 25, scope: !5914)
!5924 = !DILocation(line: 1393, column: 4, scope: !5914)
!5925 = !DILocation(line: 1394, column: 2, scope: !5915)
!5926 = !DILocation(line: 1395, column: 22, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1394, column: 9)
!5928 = !DILocation(line: 1395, column: 3, scope: !5927)
!5929 = !DILocation(line: 1398, column: 2, scope: !5807)
!5930 = !DILocation(line: 1398, column: 2, scope: !5830)
!5931 = !DILocalVariable(name: "__dummy", scope: !5932, file: !3, line: 1398, type: !389)
!5932 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1398, column: 2)
!5933 = !DILocation(line: 1398, column: 2, scope: !5932)
!5934 = !DILocalVariable(name: "__dummy2", scope: !5932, file: !3, line: 1398, type: !389)
!5935 = !DILocation(line: 1398, column: 2, scope: !5829)
!5936 = !DILocation(line: 1398, column: 2, scope: !5828)
!5937 = !DILocation(line: 1398, column: 2, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 1398, column: 2)
!5939 = !DILocalVariable(name: "__dummy", scope: !5940, file: !3, line: 1398, type: !389)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 1398, column: 2)
!5941 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 1398, column: 2)
!5942 = !DILocation(line: 1398, column: 2, scope: !5940)
!5943 = !DILocalVariable(name: "__dummy2", scope: !5940, file: !3, line: 1398, type: !389)
!5944 = !DILocation(line: 1398, column: 2, scope: !5941)
!5945 = !DILocation(line: 1398, column: 2, scope: !5827)
!5946 = !{i32 -2141145570}
!5947 = !DILocation(line: 1398, column: 2, scope: !5826)
!5948 = !DILocation(line: 329, column: 10, scope: !5820, inlinedAt: !5825)
!5949 = !DILocation(line: 329, column: 16, scope: !5820, inlinedAt: !5825)
!5950 = !DILocation(line: 1400, column: 2, scope: !5807)
!5951 = !DILocation(line: 1400, column: 6, scope: !5807)
!5952 = !DILocation(line: 1400, column: 16, scope: !5807)
!5953 = !DILocation(line: 1400, column: 28, scope: !5807)
!5954 = !DILocation(line: 1402, column: 32, scope: !5807)
!5955 = !DILocation(line: 1402, column: 14, scope: !5807)
!5956 = !DILocation(line: 1402, column: 36, scope: !5807)
!5957 = !DILocation(line: 1402, column: 11, scope: !5807)
!5958 = !DILocation(line: 1404, column: 21, scope: !5807)
!5959 = !DILocation(line: 1404, column: 2, scope: !5807)
!5960 = !DILocation(line: 1406, column: 26, scope: !5807)
!5961 = !DILocation(line: 1406, column: 30, scope: !5807)
!5962 = !DILocation(line: 1406, column: 36, scope: !5807)
!5963 = !DILocalVariable(name: "__dummy", scope: !5964, file: !5812, line: 409, type: !389)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !5812, line: 409, column: 2)
!5965 = distinct !DILexicalBlock(scope: !5811, file: !5812, line: 409, column: 2)
!5966 = !DILocation(line: 409, column: 2, scope: !5964, inlinedAt: !5816)
!5967 = !DILocalVariable(name: "__dummy2", scope: !5964, file: !5812, line: 409, type: !389)
!5968 = !DILocalVariable(name: "__dummy", scope: !5969, file: !5812, line: 409, type: !389)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !5812, line: 409, column: 2)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !5812, line: 409, column: 2)
!5971 = distinct !DILexicalBlock(scope: !5972, file: !5812, line: 409, column: 2)
!5972 = distinct !DILexicalBlock(scope: !5965, file: !5812, line: 409, column: 2)
!5973 = !DILocation(line: 409, column: 2, scope: !5969, inlinedAt: !5816)
!5974 = !DILocalVariable(name: "__dummy2", scope: !5969, file: !5812, line: 409, type: !389)
!5975 = !DILocation(line: 409, column: 2, scope: !5970, inlinedAt: !5816)
!5976 = !DILocation(line: 409, column: 2, scope: !5977, inlinedAt: !5816)
!5977 = distinct !DILexicalBlock(scope: !5972, file: !5812, line: 409, column: 2)
!5978 = !{i32 -2145377542}
!5979 = !DILocation(line: 409, column: 2, scope: !5980, inlinedAt: !5816)
!5980 = distinct !DILexicalBlock(scope: !5977, file: !5812, line: 409, column: 2)
!5981 = !DILocation(line: 1408, column: 7, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1408, column: 6)
!5983 = !DILocation(line: 1408, column: 11, scope: !5982)
!5984 = !DILocation(line: 1408, column: 6, scope: !5807)
!5985 = !DILocation(line: 1409, column: 24, scope: !5982)
!5986 = !DILocation(line: 1409, column: 3, scope: !5982)
!5987 = !DILocation(line: 1411, column: 6, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1411, column: 6)
!5989 = !DILocation(line: 1411, column: 6, scope: !5807)
!5990 = !DILocation(line: 1412, column: 16, scope: !5988)
!5991 = !DILocation(line: 1412, column: 20, scope: !5988)
!5992 = !DILocation(line: 1412, column: 27, scope: !5988)
!5993 = !DILocation(line: 1412, column: 31, scope: !5988)
!5994 = !DILocation(line: 1412, column: 3, scope: !5988)
!5995 = !DILocation(line: 1413, column: 1, scope: !5807)
!5996 = distinct !DISubprogram(name: "blk_should_fake_timeout", scope: !2396, file: !2396, line: 536, type: !2743, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!5997 = !DILocalVariable(name: "q", arg: 1, scope: !5996, file: !2396, line: 536, type: !2382)
!5998 = !DILocation(line: 536, column: 66, scope: !5996)
!5999 = !DILocation(line: 541, column: 2, scope: !5996)
!6000 = distinct !DISubprogram(name: "mmc_blk_mq_complete_rq", scope: !3, file: !3, line: 1859, type: !5808, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6001 = !DILocalVariable(name: "mq", arg: 1, scope: !6000, file: !3, line: 1859, type: !258)
!6002 = !DILocation(line: 1859, column: 54, scope: !6000)
!6003 = !DILocalVariable(name: "req", arg: 2, scope: !6000, file: !3, line: 1859, type: !2386)
!6004 = !DILocation(line: 1859, column: 74, scope: !6000)
!6005 = !DILocalVariable(name: "mqrq", scope: !6000, file: !3, line: 1861, type: !5457)
!6006 = !DILocation(line: 1861, column: 24, scope: !6000)
!6007 = !DILocation(line: 1861, column: 52, scope: !6000)
!6008 = !DILocation(line: 1861, column: 31, scope: !6000)
!6009 = !DILocalVariable(name: "nr_bytes", scope: !6000, file: !3, line: 1862, type: !7)
!6010 = !DILocation(line: 1862, column: 15, scope: !6000)
!6011 = !DILocation(line: 1862, column: 26, scope: !6000)
!6012 = !DILocation(line: 1862, column: 32, scope: !6000)
!6013 = !DILocation(line: 1862, column: 36, scope: !6000)
!6014 = !DILocation(line: 1862, column: 41, scope: !6000)
!6015 = !DILocation(line: 1864, column: 6, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1864, column: 6)
!6017 = !DILocation(line: 1864, column: 6, scope: !6000)
!6018 = !DILocation(line: 1865, column: 26, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 1865, column: 7)
!6020 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1864, column: 16)
!6021 = !DILocation(line: 1865, column: 43, scope: !6019)
!6022 = !DILocation(line: 1865, column: 7, scope: !6019)
!6023 = !DILocation(line: 1865, column: 7, scope: !6020)
!6024 = !DILocation(line: 1866, column: 27, scope: !6019)
!6025 = !DILocation(line: 1866, column: 4, scope: !6019)
!6026 = !DILocation(line: 1868, column: 25, scope: !6019)
!6027 = !DILocation(line: 1868, column: 4, scope: !6019)
!6028 = !DILocation(line: 1869, column: 2, scope: !6020)
!6029 = !DILocation(line: 1869, column: 27, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6016, file: !3, line: 1869, column: 13)
!6031 = !DILocation(line: 1869, column: 14, scope: !6030)
!6032 = !DILocation(line: 1869, column: 13, scope: !6016)
!6033 = !DILocation(line: 1870, column: 24, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1869, column: 33)
!6035 = !DILocation(line: 1870, column: 3, scope: !6034)
!6036 = !DILocation(line: 1871, column: 2, scope: !6034)
!6037 = !DILocation(line: 1871, column: 13, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 1871, column: 13)
!6039 = !DILocation(line: 1871, column: 19, scope: !6038)
!6040 = !DILocation(line: 1871, column: 26, scope: !6038)
!6041 = !DILocation(line: 1871, column: 29, scope: !6038)
!6042 = !DILocation(line: 1871, column: 13, scope: !6030)
!6043 = !DILocation(line: 1872, column: 26, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1871, column: 48)
!6045 = !DILocation(line: 1872, column: 3, scope: !6044)
!6046 = !DILocation(line: 1873, column: 2, scope: !6044)
!6047 = !DILocation(line: 1874, column: 7, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 1874, column: 7)
!6049 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1873, column: 9)
!6050 = !DILocation(line: 1874, column: 7, scope: !6049)
!6051 = !DILocation(line: 1875, column: 4, scope: !6048)
!6052 = !DILocation(line: 1875, column: 9, scope: !6048)
!6053 = !DILocation(line: 1875, column: 18, scope: !6048)
!6054 = !DILocation(line: 1876, column: 22, scope: !6049)
!6055 = !DILocation(line: 1876, column: 3, scope: !6049)
!6056 = !DILocation(line: 1878, column: 1, scope: !6000)
!6057 = distinct !DISubprogram(name: "mmc_blk_mq_recovery", scope: !3, file: !3, line: 1994, type: !5678, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6058 = !DILocalVariable(name: "mq", arg: 1, scope: !6057, file: !3, line: 1994, type: !258)
!6059 = !DILocation(line: 1994, column: 44, scope: !6057)
!6060 = !DILocalVariable(name: "req", scope: !6057, file: !3, line: 1996, type: !2386)
!6061 = !DILocation(line: 1996, column: 18, scope: !6057)
!6062 = !DILocation(line: 1996, column: 24, scope: !6057)
!6063 = !DILocation(line: 1996, column: 28, scope: !6057)
!6064 = !DILocalVariable(name: "host", scope: !6057, file: !3, line: 1997, type: !267)
!6065 = !DILocation(line: 1997, column: 19, scope: !6057)
!6066 = !DILocation(line: 1997, column: 26, scope: !6057)
!6067 = !DILocation(line: 1997, column: 30, scope: !6057)
!6068 = !DILocation(line: 1997, column: 36, scope: !6057)
!6069 = !DILocalVariable(name: "mqrq", scope: !6057, file: !3, line: 1998, type: !5457)
!6070 = !DILocation(line: 1998, column: 24, scope: !6057)
!6071 = !DILocation(line: 1998, column: 52, scope: !6057)
!6072 = !DILocation(line: 1998, column: 31, scope: !6057)
!6073 = !DILocation(line: 2000, column: 2, scope: !6057)
!6074 = !DILocation(line: 2000, column: 6, scope: !6057)
!6075 = !DILocation(line: 2000, column: 19, scope: !6057)
!6076 = !DILocation(line: 2001, column: 2, scope: !6057)
!6077 = !DILocation(line: 2001, column: 6, scope: !6057)
!6078 = !DILocation(line: 2001, column: 14, scope: !6057)
!6079 = !DILocation(line: 2003, column: 24, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 2003, column: 6)
!6081 = !DILocation(line: 2003, column: 30, scope: !6080)
!6082 = !DILocation(line: 2003, column: 6, scope: !6080)
!6083 = !DILocation(line: 2003, column: 6, scope: !6057)
!6084 = !DILocation(line: 2004, column: 23, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 2003, column: 36)
!6086 = !DILocation(line: 2004, column: 3, scope: !6085)
!6087 = !DILocation(line: 2005, column: 26, scope: !6085)
!6088 = !DILocation(line: 2005, column: 30, scope: !6085)
!6089 = !DILocation(line: 2005, column: 3, scope: !6085)
!6090 = !DILocation(line: 2006, column: 2, scope: !6085)
!6091 = !DILocation(line: 2008, column: 23, scope: !6057)
!6092 = !DILocation(line: 2008, column: 27, scope: !6057)
!6093 = !DILocation(line: 2008, column: 2, scope: !6057)
!6094 = !DILocation(line: 2010, column: 22, scope: !6057)
!6095 = !DILocation(line: 2010, column: 26, scope: !6057)
!6096 = !DILocation(line: 2010, column: 2, scope: !6057)
!6097 = !DILocation(line: 2011, column: 1, scope: !6057)
!6098 = distinct !DISubprogram(name: "req_to_mmc_queue_req", scope: !128, file: !128, line: 25, type: !6099, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6099 = !DISubroutineType(types: !6100)
!6100 = !{!5457, !2386}
!6101 = !DILocalVariable(name: "rq", arg: 1, scope: !6098, file: !128, line: 25, type: !2386)
!6102 = !DILocation(line: 25, column: 74, scope: !6098)
!6103 = !DILocation(line: 27, column: 26, scope: !6098)
!6104 = !DILocation(line: 27, column: 9, scope: !6098)
!6105 = !DILocation(line: 27, column: 2, scope: !6098)
!6106 = distinct !DISubprogram(name: "mmc_blk_rq_error", scope: !3, file: !3, line: 1816, type: !6107, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!555, !6109}
!6109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!6110 = !DILocalVariable(name: "brq", arg: 1, scope: !6106, file: !3, line: 1816, type: !6109)
!6111 = !DILocation(line: 1816, column: 61, scope: !6106)
!6112 = !DILocation(line: 1818, column: 26, scope: !6106)
!6113 = !DILocation(line: 1818, column: 2, scope: !6106)
!6114 = !DILocation(line: 1820, column: 9, scope: !6106)
!6115 = !DILocation(line: 1820, column: 14, scope: !6106)
!6116 = !DILocation(line: 1820, column: 18, scope: !6106)
!6117 = !DILocation(line: 1820, column: 24, scope: !6106)
!6118 = !DILocation(line: 1820, column: 27, scope: !6106)
!6119 = !DILocation(line: 1820, column: 32, scope: !6106)
!6120 = !DILocation(line: 1820, column: 36, scope: !6106)
!6121 = !DILocation(line: 1820, column: 42, scope: !6106)
!6122 = !DILocation(line: 1820, column: 45, scope: !6106)
!6123 = !DILocation(line: 1820, column: 50, scope: !6106)
!6124 = !DILocation(line: 1820, column: 55, scope: !6106)
!6125 = !DILocation(line: 1820, column: 61, scope: !6106)
!6126 = !DILocation(line: 1821, column: 9, scope: !6106)
!6127 = !DILocation(line: 1821, column: 14, scope: !6106)
!6128 = !DILocation(line: 1821, column: 19, scope: !6106)
!6129 = !DILocation(line: 1821, column: 25, scope: !6106)
!6130 = !DILocation(line: 1821, column: 28, scope: !6106)
!6131 = !DILocation(line: 1821, column: 33, scope: !6106)
!6132 = !DILocation(line: 1821, column: 37, scope: !6106)
!6133 = !DILocation(line: 1821, column: 45, scope: !6106)
!6134 = !DILocation(line: 1820, column: 2, scope: !6106)
!6135 = distinct !DISubprogram(name: "mmc_retune_hold_now", scope: !6136, file: !6136, line: 24, type: !5028, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6136 = !DIFile(filename: "drivers/mmc/core/host.h", directory: "/home/lizy2001/genbc/linux")
!6137 = !DILocalVariable(name: "host", arg: 1, scope: !6135, file: !6136, line: 24, type: !267)
!6138 = !DILocation(line: 24, column: 57, scope: !6135)
!6139 = !DILocation(line: 26, column: 2, scope: !6135)
!6140 = !DILocation(line: 26, column: 8, scope: !6135)
!6141 = !DILocation(line: 26, column: 19, scope: !6135)
!6142 = !DILocation(line: 27, column: 2, scope: !6135)
!6143 = !DILocation(line: 27, column: 8, scope: !6135)
!6144 = !DILocation(line: 27, column: 20, scope: !6135)
!6145 = !DILocation(line: 28, column: 1, scope: !6135)
!6146 = distinct !DISubprogram(name: "mmc_blk_mq_rw_recovery", scope: !3, file: !3, line: 1726, type: !5808, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6147 = !DILocalVariable(name: "mq", arg: 1, scope: !6146, file: !3, line: 1726, type: !258)
!6148 = !DILocation(line: 1726, column: 54, scope: !6146)
!6149 = !DILocalVariable(name: "req", arg: 2, scope: !6146, file: !3, line: 1726, type: !2386)
!6150 = !DILocation(line: 1726, column: 74, scope: !6146)
!6151 = !DILocalVariable(name: "type", scope: !6146, file: !3, line: 1728, type: !324)
!6152 = !DILocation(line: 1728, column: 6, scope: !6146)
!6153 = !DILocation(line: 1728, column: 13, scope: !6146)
!6154 = !DILocation(line: 1728, column: 30, scope: !6146)
!6155 = !DILocalVariable(name: "mqrq", scope: !6146, file: !3, line: 1729, type: !5457)
!6156 = !DILocation(line: 1729, column: 24, scope: !6146)
!6157 = !DILocation(line: 1729, column: 52, scope: !6146)
!6158 = !DILocation(line: 1729, column: 31, scope: !6146)
!6159 = !DILocalVariable(name: "brq", scope: !6146, file: !3, line: 1730, type: !6109)
!6160 = !DILocation(line: 1730, column: 26, scope: !6146)
!6161 = !DILocation(line: 1730, column: 33, scope: !6146)
!6162 = !DILocation(line: 1730, column: 39, scope: !6146)
!6163 = !DILocalVariable(name: "md", scope: !6146, file: !3, line: 1731, type: !5408)
!6164 = !DILocation(line: 1731, column: 23, scope: !6146)
!6165 = !DILocation(line: 1731, column: 28, scope: !6146)
!6166 = !DILocation(line: 1731, column: 32, scope: !6146)
!6167 = !DILocalVariable(name: "card", scope: !6146, file: !3, line: 1732, type: !262)
!6168 = !DILocation(line: 1732, column: 19, scope: !6146)
!6169 = !DILocation(line: 1732, column: 26, scope: !6146)
!6170 = !DILocation(line: 1732, column: 30, scope: !6146)
!6171 = !DILocalVariable(name: "status", scope: !6146, file: !3, line: 1733, type: !480)
!6172 = !DILocation(line: 1733, column: 6, scope: !6146)
!6173 = !DILocalVariable(name: "blocks", scope: !6146, file: !3, line: 1734, type: !480)
!6174 = !DILocation(line: 1734, column: 6, scope: !6146)
!6175 = !DILocalVariable(name: "err", scope: !6146, file: !3, line: 1735, type: !324)
!6176 = !DILocation(line: 1735, column: 6, scope: !6146)
!6177 = !DILocation(line: 1741, column: 26, scope: !6146)
!6178 = !DILocation(line: 1741, column: 8, scope: !6146)
!6179 = !DILocation(line: 1741, column: 6, scope: !6146)
!6180 = !DILocation(line: 1742, column: 6, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1742, column: 6)
!6182 = !DILocation(line: 1742, column: 10, scope: !6181)
!6183 = !DILocation(line: 1742, column: 34, scope: !6181)
!6184 = !DILocation(line: 1742, column: 39, scope: !6181)
!6185 = !DILocation(line: 1742, column: 13, scope: !6181)
!6186 = !DILocation(line: 1742, column: 6, scope: !6146)
!6187 = !DILocation(line: 1743, column: 3, scope: !6181)
!6188 = !DILocation(line: 1743, column: 8, scope: !6181)
!6189 = !DILocation(line: 1743, column: 13, scope: !6181)
!6190 = !DILocation(line: 1743, column: 26, scope: !6181)
!6191 = !DILocation(line: 1745, column: 21, scope: !6146)
!6192 = !DILocation(line: 1745, column: 27, scope: !6146)
!6193 = !DILocation(line: 1745, column: 2, scope: !6146)
!6194 = !DILocation(line: 1751, column: 6, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1751, column: 6)
!6196 = !DILocation(line: 1751, column: 6, scope: !6146)
!6197 = !DILocation(line: 1752, column: 27, scope: !6195)
!6198 = !DILocation(line: 1752, column: 9, scope: !6195)
!6199 = !DILocation(line: 1752, column: 7, scope: !6195)
!6200 = !DILocation(line: 1752, column: 3, scope: !6195)
!6201 = !DILocation(line: 1758, column: 6, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1758, column: 6)
!6203 = !DILocation(line: 1758, column: 10, scope: !6202)
!6204 = !DILocation(line: 1758, column: 37, scope: !6202)
!6205 = !DILocation(line: 1758, column: 43, scope: !6202)
!6206 = !DILocation(line: 1758, column: 13, scope: !6202)
!6207 = !DILocation(line: 1758, column: 6, scope: !6146)
!6208 = !DILocation(line: 1759, column: 3, scope: !6202)
!6209 = !DILocation(line: 1762, column: 7, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1762, column: 6)
!6211 = !DILocation(line: 1762, column: 39, scope: !6210)
!6212 = !DILocation(line: 1763, column: 7, scope: !6210)
!6213 = !DILocation(line: 1763, column: 11, scope: !6210)
!6214 = !DILocation(line: 1763, column: 34, scope: !6210)
!6215 = !DILocation(line: 1763, column: 15, scope: !6210)
!6216 = !DILocation(line: 1762, column: 6, scope: !6146)
!6217 = !DILocation(line: 1764, column: 27, scope: !6210)
!6218 = !DILocation(line: 1764, column: 31, scope: !6210)
!6219 = !DILocation(line: 1764, column: 37, scope: !6210)
!6220 = !DILocation(line: 1764, column: 9, scope: !6210)
!6221 = !DILocation(line: 1764, column: 7, scope: !6210)
!6222 = !DILocation(line: 1764, column: 3, scope: !6210)
!6223 = !DILocation(line: 1770, column: 7, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1770, column: 6)
!6225 = !DILocation(line: 1770, column: 11, scope: !6224)
!6226 = !DILocation(line: 1770, column: 34, scope: !6224)
!6227 = !DILocation(line: 1770, column: 14, scope: !6224)
!6228 = !DILocation(line: 1770, column: 39, scope: !6224)
!6229 = !DILocation(line: 1770, column: 42, scope: !6224)
!6230 = !DILocation(line: 1770, column: 60, scope: !6224)
!6231 = !DILocation(line: 1771, column: 6, scope: !6224)
!6232 = !DILocation(line: 1771, column: 23, scope: !6224)
!6233 = !DILocation(line: 1770, column: 6, scope: !6146)
!6234 = !DILocation(line: 1772, column: 28, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 1772, column: 7)
!6236 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1771, column: 33)
!6237 = !DILocation(line: 1772, column: 7, scope: !6235)
!6238 = !DILocation(line: 1772, column: 7, scope: !6236)
!6239 = !DILocation(line: 1773, column: 4, scope: !6235)
!6240 = !DILocation(line: 1773, column: 9, scope: !6235)
!6241 = !DILocation(line: 1773, column: 14, scope: !6235)
!6242 = !DILocation(line: 1773, column: 27, scope: !6235)
!6243 = !DILocation(line: 1775, column: 29, scope: !6235)
!6244 = !DILocation(line: 1775, column: 36, scope: !6235)
!6245 = !DILocation(line: 1775, column: 4, scope: !6235)
!6246 = !DILocation(line: 1775, column: 9, scope: !6235)
!6247 = !DILocation(line: 1775, column: 14, scope: !6235)
!6248 = !DILocation(line: 1775, column: 27, scope: !6235)
!6249 = !DILocation(line: 1776, column: 2, scope: !6236)
!6250 = !DILocation(line: 1779, column: 7, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1779, column: 6)
!6252 = !DILocation(line: 1779, column: 39, scope: !6251)
!6253 = !DILocation(line: 1780, column: 6, scope: !6251)
!6254 = !DILocation(line: 1780, column: 10, scope: !6251)
!6255 = !DILocation(line: 1780, column: 27, scope: !6251)
!6256 = !DILocation(line: 1780, column: 31, scope: !6251)
!6257 = !DILocation(line: 1780, column: 37, scope: !6251)
!6258 = !DILocation(line: 1780, column: 43, scope: !6251)
!6259 = !DILocation(line: 1780, column: 13, scope: !6251)
!6260 = !DILocation(line: 1779, column: 6, scope: !6146)
!6261 = !DILocation(line: 1781, column: 3, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6251, file: !3, line: 1780, column: 50)
!6263 = !DILocation(line: 1782, column: 3, scope: !6262)
!6264 = !DILocation(line: 1782, column: 9, scope: !6262)
!6265 = !DILocation(line: 1782, column: 17, scope: !6262)
!6266 = !DILocation(line: 1783, column: 3, scope: !6262)
!6267 = !DILocation(line: 1790, column: 6, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1790, column: 6)
!6269 = !DILocation(line: 1790, column: 11, scope: !6268)
!6270 = !DILocation(line: 1790, column: 16, scope: !6268)
!6271 = !DILocation(line: 1790, column: 6, scope: !6146)
!6272 = !DILocation(line: 1791, column: 3, scope: !6268)
!6273 = !DILocation(line: 1794, column: 6, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1794, column: 6)
!6275 = !DILocation(line: 1794, column: 12, scope: !6274)
!6276 = !DILocation(line: 1794, column: 20, scope: !6274)
!6277 = !DILocation(line: 1794, column: 24, scope: !6274)
!6278 = !DILocation(line: 1794, column: 6, scope: !6146)
!6279 = !DILocation(line: 1795, column: 17, scope: !6274)
!6280 = !DILocation(line: 1795, column: 21, scope: !6274)
!6281 = !DILocation(line: 1795, column: 27, scope: !6274)
!6282 = !DILocation(line: 1795, column: 33, scope: !6274)
!6283 = !DILocation(line: 1795, column: 3, scope: !6274)
!6284 = !DILocation(line: 1798, column: 6, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1798, column: 6)
!6286 = !DILocation(line: 1798, column: 11, scope: !6285)
!6287 = !DILocation(line: 1798, column: 15, scope: !6285)
!6288 = !DILocation(line: 1798, column: 21, scope: !6285)
!6289 = !DILocation(line: 1798, column: 24, scope: !6285)
!6290 = !DILocation(line: 1798, column: 29, scope: !6285)
!6291 = !DILocation(line: 1798, column: 33, scope: !6285)
!6292 = !DILocation(line: 1798, column: 6, scope: !6146)
!6293 = !DILocation(line: 1799, column: 3, scope: !6285)
!6294 = !DILocation(line: 1802, column: 6, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1802, column: 6)
!6296 = !DILocation(line: 1802, column: 12, scope: !6295)
!6297 = !DILocation(line: 1802, column: 20, scope: !6295)
!6298 = !DILocation(line: 1802, column: 6, scope: !6146)
!6299 = !DILocation(line: 1803, column: 3, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 1802, column: 58)
!6301 = !DILocation(line: 1803, column: 9, scope: !6300)
!6302 = !DILocation(line: 1803, column: 17, scope: !6300)
!6303 = !DILocation(line: 1804, column: 3, scope: !6300)
!6304 = !DILocation(line: 1808, column: 24, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1808, column: 6)
!6306 = !DILocation(line: 1808, column: 7, scope: !6305)
!6307 = !DILocation(line: 1808, column: 30, scope: !6305)
!6308 = !DILocation(line: 1808, column: 33, scope: !6305)
!6309 = !DILocation(line: 1808, column: 50, scope: !6305)
!6310 = !DILocation(line: 1808, column: 58, scope: !6305)
!6311 = !DILocation(line: 1809, column: 6, scope: !6305)
!6312 = !DILocation(line: 1809, column: 11, scope: !6305)
!6313 = !DILocation(line: 1809, column: 16, scope: !6305)
!6314 = !DILocation(line: 1809, column: 23, scope: !6305)
!6315 = !DILocation(line: 1808, column: 6, scope: !6146)
!6316 = !DILocation(line: 1811, column: 23, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 1809, column: 28)
!6318 = !DILocation(line: 1811, column: 27, scope: !6317)
!6319 = !DILocation(line: 1811, column: 3, scope: !6317)
!6320 = !DILocation(line: 1812, column: 3, scope: !6317)
!6321 = !DILocation(line: 1814, column: 1, scope: !6146)
!6322 = distinct !DISubprogram(name: "mmc_blk_urgent_bkops", scope: !3, file: !3, line: 1888, type: !6323, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{null, !258, !5457}
!6325 = !DILocalVariable(name: "mq", arg: 1, scope: !6322, file: !3, line: 1888, type: !258)
!6326 = !DILocation(line: 1888, column: 52, scope: !6322)
!6327 = !DILocalVariable(name: "mqrq", arg: 2, scope: !6322, file: !3, line: 1889, type: !5457)
!6328 = !DILocation(line: 1889, column: 28, scope: !6322)
!6329 = !DILocation(line: 1891, column: 34, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 1891, column: 6)
!6331 = !DILocation(line: 1891, column: 38, scope: !6330)
!6332 = !DILocation(line: 1891, column: 6, scope: !6330)
!6333 = !DILocation(line: 1891, column: 6, scope: !6322)
!6334 = !DILocation(line: 1892, column: 17, scope: !6330)
!6335 = !DILocation(line: 1892, column: 21, scope: !6330)
!6336 = !DILocation(line: 1892, column: 3, scope: !6330)
!6337 = !DILocation(line: 1893, column: 1, scope: !6322)
!6338 = distinct !DISubprogram(name: "mmc_blk_mq_post_req", scope: !3, file: !3, line: 1974, type: !5808, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6339 = !DILocalVariable(name: "mq", arg: 1, scope: !6338, file: !3, line: 1974, type: !258)
!6340 = !DILocation(line: 1974, column: 51, scope: !6338)
!6341 = !DILocalVariable(name: "req", arg: 2, scope: !6338, file: !3, line: 1974, type: !2386)
!6342 = !DILocation(line: 1974, column: 71, scope: !6338)
!6343 = !DILocalVariable(name: "mqrq", scope: !6338, file: !3, line: 1976, type: !5457)
!6344 = !DILocation(line: 1976, column: 24, scope: !6338)
!6345 = !DILocation(line: 1976, column: 52, scope: !6338)
!6346 = !DILocation(line: 1976, column: 31, scope: !6338)
!6347 = !DILocalVariable(name: "mrq", scope: !6338, file: !3, line: 1977, type: !4933)
!6348 = !DILocation(line: 1977, column: 22, scope: !6338)
!6349 = !DILocation(line: 1977, column: 29, scope: !6338)
!6350 = !DILocation(line: 1977, column: 35, scope: !6338)
!6351 = !DILocation(line: 1977, column: 39, scope: !6338)
!6352 = !DILocalVariable(name: "host", scope: !6338, file: !3, line: 1978, type: !267)
!6353 = !DILocation(line: 1978, column: 19, scope: !6338)
!6354 = !DILocation(line: 1978, column: 26, scope: !6338)
!6355 = !DILocation(line: 1978, column: 30, scope: !6338)
!6356 = !DILocation(line: 1978, column: 36, scope: !6338)
!6357 = !DILocation(line: 1980, column: 15, scope: !6338)
!6358 = !DILocation(line: 1980, column: 21, scope: !6338)
!6359 = !DILocation(line: 1980, column: 2, scope: !6338)
!6360 = !DILocation(line: 1986, column: 6, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1986, column: 6)
!6362 = !DILocation(line: 1986, column: 10, scope: !6361)
!6363 = !DILocation(line: 1986, column: 6, scope: !6338)
!6364 = !DILocation(line: 1987, column: 26, scope: !6361)
!6365 = !DILocation(line: 1987, column: 30, scope: !6361)
!6366 = !DILocation(line: 1987, column: 3, scope: !6361)
!6367 = !DILocation(line: 1988, column: 11, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 1988, column: 11)
!6369 = !DILocation(line: 1988, column: 11, scope: !6361)
!6370 = !DILocation(line: 1989, column: 27, scope: !6368)
!6371 = !DILocation(line: 1989, column: 3, scope: !6368)
!6372 = !DILocation(line: 1991, column: 27, scope: !6338)
!6373 = !DILocation(line: 1991, column: 31, scope: !6338)
!6374 = !DILocation(line: 1991, column: 2, scope: !6338)
!6375 = !DILocation(line: 1992, column: 1, scope: !6338)
!6376 = distinct !DISubprogram(name: "mmc_blk_mq_complete_work", scope: !3, file: !3, line: 2037, type: !2174, scopeLine: 2038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6377 = !DILocalVariable(name: "work", arg: 1, scope: !6376, file: !3, line: 2037, type: !2176)
!6378 = !DILocation(line: 2037, column: 51, scope: !6376)
!6379 = !DILocalVariable(name: "mq", scope: !6376, file: !3, line: 2039, type: !258)
!6380 = !DILocation(line: 2039, column: 20, scope: !6376)
!6381 = !DILocalVariable(name: "__mptr", scope: !6382, file: !3, line: 2039, type: !257)
!6382 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 2039, column: 25)
!6383 = !DILocation(line: 2039, column: 25, scope: !6382)
!6384 = !DILocation(line: 2039, column: 25, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 2039, column: 25)
!6386 = !DILocation(line: 2042, column: 31, scope: !6376)
!6387 = !DILocation(line: 2042, column: 2, scope: !6376)
!6388 = !DILocation(line: 2043, column: 1, scope: !6376)
!6389 = distinct !DISubprogram(name: "mmc_blk_mq_complete_prev_req", scope: !3, file: !3, line: 2013, type: !6390, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6390 = !DISubroutineType(types: !6391)
!6391 = !{null, !258, !2640}
!6392 = !DILocalVariable(name: "mq", arg: 1, scope: !6389, file: !3, line: 2013, type: !258)
!6393 = !DILocation(line: 2013, column: 60, scope: !6389)
!6394 = !DILocalVariable(name: "prev_req", arg: 2, scope: !6389, file: !3, line: 2014, type: !2640)
!6395 = !DILocation(line: 2014, column: 24, scope: !6389)
!6396 = !DILocation(line: 2016, column: 29, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 2016, column: 6)
!6398 = !DILocation(line: 2016, column: 33, scope: !6397)
!6399 = !DILocation(line: 2016, column: 39, scope: !6397)
!6400 = !DILocation(line: 2016, column: 6, scope: !6397)
!6401 = !DILocation(line: 2016, column: 6, scope: !6389)
!6402 = !DILocation(line: 2017, column: 3, scope: !6397)
!6403 = !DILocation(line: 2019, column: 14, scope: !6389)
!6404 = !DILocation(line: 2019, column: 18, scope: !6389)
!6405 = !DILocation(line: 2019, column: 2, scope: !6389)
!6406 = !DILocation(line: 2021, column: 7, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 2021, column: 6)
!6408 = !DILocation(line: 2021, column: 11, scope: !6407)
!6409 = !DILocation(line: 2021, column: 6, scope: !6389)
!6410 = !DILocation(line: 2022, column: 3, scope: !6407)
!6411 = !DILocation(line: 2024, column: 29, scope: !6389)
!6412 = !DILocation(line: 2024, column: 33, scope: !6389)
!6413 = !DILocation(line: 2024, column: 37, scope: !6389)
!6414 = !DILocation(line: 2024, column: 2, scope: !6389)
!6415 = !DILocation(line: 2026, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 2026, column: 6)
!6417 = !DILocation(line: 2026, column: 6, scope: !6389)
!6418 = !DILocation(line: 2027, column: 15, scope: !6416)
!6419 = !DILocation(line: 2027, column: 19, scope: !6416)
!6420 = !DILocation(line: 2027, column: 4, scope: !6416)
!6421 = !DILocation(line: 2027, column: 13, scope: !6416)
!6422 = !DILocation(line: 2027, column: 3, scope: !6416)
!6423 = !DILocation(line: 2029, column: 23, scope: !6416)
!6424 = !DILocation(line: 2029, column: 27, scope: !6416)
!6425 = !DILocation(line: 2029, column: 31, scope: !6416)
!6426 = !DILocation(line: 2029, column: 3, scope: !6416)
!6427 = !DILocation(line: 2031, column: 2, scope: !6389)
!6428 = !DILocation(line: 2031, column: 6, scope: !6389)
!6429 = !DILocation(line: 2031, column: 19, scope: !6389)
!6430 = !DILabel(scope: !6389, name: "out_unlock", file: !3, line: 2033)
!6431 = !DILocation(line: 2033, column: 1, scope: !6389)
!6432 = !DILocation(line: 2034, column: 16, scope: !6389)
!6433 = !DILocation(line: 2034, column: 20, scope: !6389)
!6434 = !DILocation(line: 2034, column: 2, scope: !6389)
!6435 = !DILocation(line: 2035, column: 1, scope: !6389)
!6436 = distinct !DISubprogram(name: "mmc_blk_mq_issue_rq", scope: !3, file: !3, line: 2185, type: !6437, scopeLine: 2186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!140, !258, !2386}
!6439 = !DILocalVariable(name: "mq", arg: 1, scope: !6436, file: !3, line: 2185, type: !258)
!6440 = !DILocation(line: 2185, column: 55, scope: !6436)
!6441 = !DILocalVariable(name: "req", arg: 2, scope: !6436, file: !3, line: 2185, type: !2386)
!6442 = !DILocation(line: 2185, column: 75, scope: !6436)
!6443 = !DILocalVariable(name: "md", scope: !6436, file: !3, line: 2187, type: !5408)
!6444 = !DILocation(line: 2187, column: 23, scope: !6436)
!6445 = !DILocation(line: 2187, column: 28, scope: !6436)
!6446 = !DILocation(line: 2187, column: 32, scope: !6436)
!6447 = !DILocalVariable(name: "card", scope: !6436, file: !3, line: 2188, type: !262)
!6448 = !DILocation(line: 2188, column: 19, scope: !6436)
!6449 = !DILocation(line: 2188, column: 26, scope: !6436)
!6450 = !DILocation(line: 2188, column: 30, scope: !6436)
!6451 = !DILocation(line: 2188, column: 36, scope: !6436)
!6452 = !DILocalVariable(name: "host", scope: !6436, file: !3, line: 2189, type: !267)
!6453 = !DILocation(line: 2189, column: 19, scope: !6436)
!6454 = !DILocation(line: 2189, column: 26, scope: !6436)
!6455 = !DILocation(line: 2189, column: 32, scope: !6436)
!6456 = !DILocalVariable(name: "ret", scope: !6436, file: !3, line: 2190, type: !324)
!6457 = !DILocation(line: 2190, column: 6, scope: !6436)
!6458 = !DILocation(line: 2192, column: 28, scope: !6436)
!6459 = !DILocation(line: 2192, column: 34, scope: !6436)
!6460 = !DILocation(line: 2192, column: 38, scope: !6436)
!6461 = !DILocation(line: 2192, column: 8, scope: !6436)
!6462 = !DILocation(line: 2192, column: 6, scope: !6436)
!6463 = !DILocation(line: 2193, column: 6, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2193, column: 6)
!6465 = !DILocation(line: 2193, column: 6, scope: !6436)
!6466 = !DILocation(line: 2194, column: 3, scope: !6464)
!6467 = !DILocation(line: 2196, column: 25, scope: !6436)
!6468 = !DILocation(line: 2196, column: 29, scope: !6436)
!6469 = !DILocation(line: 2196, column: 10, scope: !6436)
!6470 = !DILocation(line: 2196, column: 2, scope: !6436)
!6471 = !DILocation(line: 2198, column: 31, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2196, column: 35)
!6473 = !DILocation(line: 2198, column: 35, scope: !6472)
!6474 = !DILocation(line: 2198, column: 9, scope: !6472)
!6475 = !DILocation(line: 2198, column: 7, scope: !6472)
!6476 = !DILocation(line: 2199, column: 7, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2199, column: 7)
!6478 = !DILocation(line: 2199, column: 7, scope: !6472)
!6479 = !DILocation(line: 2200, column: 4, scope: !6477)
!6480 = !DILocation(line: 2201, column: 11, scope: !6472)
!6481 = !DILocation(line: 2201, column: 3, scope: !6472)
!6482 = !DILocation(line: 2204, column: 25, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2201, column: 24)
!6484 = !DILocation(line: 2204, column: 29, scope: !6483)
!6485 = !DILocation(line: 2204, column: 4, scope: !6483)
!6486 = !DILocation(line: 2205, column: 4, scope: !6483)
!6487 = !DILocation(line: 2207, column: 29, scope: !6483)
!6488 = !DILocation(line: 2207, column: 33, scope: !6483)
!6489 = !DILocation(line: 2207, column: 4, scope: !6483)
!6490 = !DILocation(line: 2208, column: 4, scope: !6483)
!6491 = !DILocation(line: 2210, column: 32, scope: !6483)
!6492 = !DILocation(line: 2210, column: 36, scope: !6483)
!6493 = !DILocation(line: 2210, column: 4, scope: !6483)
!6494 = !DILocation(line: 2211, column: 4, scope: !6483)
!6495 = !DILocation(line: 2213, column: 24, scope: !6483)
!6496 = !DILocation(line: 2213, column: 28, scope: !6483)
!6497 = !DILocation(line: 2213, column: 4, scope: !6483)
!6498 = !DILocation(line: 2214, column: 4, scope: !6483)
!6499 = !DILocalVariable(name: "__ret_warn_on", scope: !6500, file: !3, line: 2216, type: !324)
!6500 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 2216, column: 4)
!6501 = !DILocation(line: 2216, column: 4, scope: !6500)
!6502 = !DILocation(line: 2216, column: 4, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2216, column: 4)
!6504 = !DILocation(line: 2216, column: 4, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6503, file: !3, line: 2216, column: 4)
!6506 = !DILocation(line: 2216, column: 4, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2216, column: 4)
!6508 = !DILocation(line: 2216, column: 4, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2216, column: 4)
!6510 = !{i32 -2141124854, i32 -2141124825, i32 -2141124779, i32 -2141124721, i32 -2141124667, i32 -2141124613, i32 -2141124558, i32 -2141124527}
!6511 = !DILocation(line: 2216, column: 4, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2216, column: 4)
!6513 = !{i32 -2141124109, i32 -2141124102, i32 -2141124050, i32 -2141124019, i32 -2141123989}
!6514 = !DILocation(line: 2216, column: 4, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2216, column: 4)
!6516 = !DILocation(line: 2217, column: 4, scope: !6483)
!6517 = !DILocation(line: 2219, column: 3, scope: !6472)
!6518 = !DILocation(line: 2222, column: 11, scope: !6472)
!6519 = !DILocation(line: 2222, column: 3, scope: !6472)
!6520 = !DILocation(line: 2224, column: 34, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2222, column: 24)
!6522 = !DILocation(line: 2224, column: 38, scope: !6521)
!6523 = !DILocation(line: 2224, column: 10, scope: !6521)
!6524 = !DILocation(line: 2224, column: 8, scope: !6521)
!6525 = !DILocation(line: 2225, column: 4, scope: !6521)
!6526 = !DILocation(line: 2228, column: 8, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2228, column: 8)
!6528 = !DILocation(line: 2228, column: 12, scope: !6527)
!6529 = !DILocation(line: 2228, column: 8, scope: !6521)
!6530 = !DILocation(line: 2229, column: 35, scope: !6527)
!6531 = !DILocation(line: 2229, column: 39, scope: !6527)
!6532 = !DILocation(line: 2229, column: 11, scope: !6527)
!6533 = !DILocation(line: 2229, column: 9, scope: !6527)
!6534 = !DILocation(line: 2229, column: 5, scope: !6527)
!6535 = !DILocation(line: 2231, column: 34, scope: !6527)
!6536 = !DILocation(line: 2231, column: 38, scope: !6527)
!6537 = !DILocation(line: 2231, column: 11, scope: !6527)
!6538 = !DILocation(line: 2231, column: 9, scope: !6527)
!6539 = !DILocation(line: 2232, column: 4, scope: !6521)
!6540 = !DILocalVariable(name: "__ret_warn_on", scope: !6541, file: !3, line: 2234, type: !324)
!6541 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2234, column: 4)
!6542 = !DILocation(line: 2234, column: 4, scope: !6541)
!6543 = !DILocation(line: 2234, column: 4, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2234, column: 4)
!6545 = !DILocation(line: 2234, column: 4, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 2234, column: 4)
!6547 = !DILocation(line: 2234, column: 4, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2234, column: 4)
!6549 = !DILocation(line: 2234, column: 4, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2234, column: 4)
!6551 = !{i32 -2141123324, i32 -2141123295, i32 -2141123249, i32 -2141123191, i32 -2141123137, i32 -2141123083, i32 -2141123028, i32 -2141122997}
!6552 = !DILocation(line: 2234, column: 4, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2234, column: 4)
!6554 = !{i32 -2141122579, i32 -2141122572, i32 -2141122520, i32 -2141122489, i32 -2141122459}
!6555 = !DILocation(line: 2234, column: 4, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2234, column: 4)
!6557 = !DILocation(line: 2235, column: 8, scope: !6521)
!6558 = !DILocation(line: 2236, column: 3, scope: !6521)
!6559 = !DILocation(line: 2237, column: 8, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2237, column: 7)
!6561 = !DILocation(line: 2237, column: 7, scope: !6472)
!6562 = !DILocation(line: 2238, column: 4, scope: !6560)
!6563 = !DILocation(line: 2239, column: 10, scope: !6472)
!6564 = !DILocation(line: 2239, column: 14, scope: !6472)
!6565 = !DILocation(line: 2239, column: 3, scope: !6472)
!6566 = !DILocalVariable(name: "__ret_warn_on", scope: !6567, file: !3, line: 2241, type: !324)
!6567 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2241, column: 3)
!6568 = !DILocation(line: 2241, column: 3, scope: !6567)
!6569 = !DILocation(line: 2241, column: 3, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 2241, column: 3)
!6571 = !DILocation(line: 2241, column: 3, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 2241, column: 3)
!6573 = !DILocation(line: 2241, column: 3, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2241, column: 3)
!6575 = !DILocation(line: 2241, column: 3, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2241, column: 3)
!6577 = !{i32 -2141121852, i32 -2141121823, i32 -2141121777, i32 -2141121719, i32 -2141121665, i32 -2141121611, i32 -2141121556, i32 -2141121525}
!6578 = !DILocation(line: 2241, column: 3, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2241, column: 3)
!6580 = !{i32 -2141121107, i32 -2141121100, i32 -2141121048, i32 -2141121017, i32 -2141120987}
!6581 = !DILocation(line: 2241, column: 3, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 2241, column: 3)
!6583 = !DILocation(line: 2242, column: 3, scope: !6472)
!6584 = !DILocation(line: 2244, column: 1, scope: !6436)
!6585 = distinct !DISubprogram(name: "mmc_blk_part_switch", scope: !3, file: !3, line: 817, type: !6586, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!324, !262, !7}
!6588 = !DILocalVariable(name: "card", arg: 1, scope: !6585, file: !3, line: 817, type: !262)
!6589 = !DILocation(line: 817, column: 56, scope: !6585)
!6590 = !DILocalVariable(name: "part_type", arg: 2, scope: !6585, file: !3, line: 818, type: !7)
!6591 = !DILocation(line: 818, column: 24, scope: !6585)
!6592 = !DILocalVariable(name: "ret", scope: !6585, file: !3, line: 820, type: !324)
!6593 = !DILocation(line: 820, column: 6, scope: !6585)
!6594 = !DILocalVariable(name: "main_md", scope: !6585, file: !3, line: 821, type: !5408)
!6595 = !DILocation(line: 821, column: 23, scope: !6585)
!6596 = !DILocation(line: 821, column: 50, scope: !6585)
!6597 = !DILocation(line: 821, column: 56, scope: !6585)
!6598 = !DILocation(line: 821, column: 33, scope: !6585)
!6599 = !DILocation(line: 823, column: 6, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 823, column: 6)
!6601 = !DILocation(line: 823, column: 15, scope: !6600)
!6602 = !DILocation(line: 823, column: 28, scope: !6600)
!6603 = !DILocation(line: 823, column: 25, scope: !6600)
!6604 = !DILocation(line: 823, column: 6, scope: !6585)
!6605 = !DILocation(line: 824, column: 3, scope: !6600)
!6606 = !DILocation(line: 826, column: 6, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 826, column: 6)
!6608 = !DILocation(line: 826, column: 6, scope: !6585)
!6609 = !DILocalVariable(name: "part_config", scope: !6610, file: !3, line: 827, type: !1526)
!6610 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 826, column: 26)
!6611 = !DILocation(line: 827, column: 6, scope: !6610)
!6612 = !DILocation(line: 827, column: 20, scope: !6610)
!6613 = !DILocation(line: 827, column: 26, scope: !6610)
!6614 = !DILocation(line: 827, column: 34, scope: !6610)
!6615 = !DILocation(line: 829, column: 33, scope: !6610)
!6616 = !DILocation(line: 829, column: 39, scope: !6610)
!6617 = !DILocation(line: 829, column: 9, scope: !6610)
!6618 = !DILocation(line: 829, column: 7, scope: !6610)
!6619 = !DILocation(line: 830, column: 7, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 830, column: 7)
!6621 = !DILocation(line: 830, column: 7, scope: !6610)
!6622 = !DILocation(line: 831, column: 11, scope: !6620)
!6623 = !DILocation(line: 831, column: 4, scope: !6620)
!6624 = !DILocation(line: 833, column: 15, scope: !6610)
!6625 = !DILocation(line: 834, column: 18, scope: !6610)
!6626 = !DILocation(line: 834, column: 15, scope: !6610)
!6627 = !DILocation(line: 836, column: 20, scope: !6610)
!6628 = !DILocation(line: 837, column: 27, scope: !6610)
!6629 = !DILocation(line: 838, column: 6, scope: !6610)
!6630 = !DILocation(line: 838, column: 12, scope: !6610)
!6631 = !DILocation(line: 838, column: 20, scope: !6610)
!6632 = !DILocation(line: 836, column: 9, scope: !6610)
!6633 = !DILocation(line: 836, column: 7, scope: !6610)
!6634 = !DILocation(line: 839, column: 7, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 839, column: 7)
!6636 = !DILocation(line: 839, column: 7, scope: !6610)
!6637 = !DILocation(line: 840, column: 29, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 839, column: 12)
!6639 = !DILocation(line: 840, column: 35, scope: !6638)
!6640 = !DILocation(line: 840, column: 4, scope: !6638)
!6641 = !DILocation(line: 841, column: 11, scope: !6638)
!6642 = !DILocation(line: 841, column: 4, scope: !6638)
!6643 = !DILocation(line: 844, column: 31, scope: !6610)
!6644 = !DILocation(line: 844, column: 3, scope: !6610)
!6645 = !DILocation(line: 844, column: 9, scope: !6610)
!6646 = !DILocation(line: 844, column: 17, scope: !6610)
!6647 = !DILocation(line: 844, column: 29, scope: !6610)
!6648 = !DILocation(line: 846, column: 34, scope: !6610)
!6649 = !DILocation(line: 846, column: 40, scope: !6610)
!6650 = !DILocation(line: 846, column: 49, scope: !6610)
!6651 = !DILocation(line: 846, column: 9, scope: !6610)
!6652 = !DILocation(line: 846, column: 7, scope: !6610)
!6653 = !DILocation(line: 847, column: 2, scope: !6610)
!6654 = !DILocation(line: 849, column: 23, scope: !6585)
!6655 = !DILocation(line: 849, column: 2, scope: !6585)
!6656 = !DILocation(line: 849, column: 11, scope: !6585)
!6657 = !DILocation(line: 849, column: 21, scope: !6585)
!6658 = !DILocation(line: 850, column: 9, scope: !6585)
!6659 = !DILocation(line: 850, column: 2, scope: !6585)
!6660 = !DILocation(line: 851, column: 1, scope: !6585)
!6661 = distinct !DISubprogram(name: "mmc_blk_wait_for_idle", scope: !3, file: !3, line: 2177, type: !6662, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6662 = !DISubroutineType(types: !6663)
!6663 = !{!324, !258, !267}
!6664 = !DILocalVariable(name: "mq", arg: 1, scope: !6661, file: !3, line: 2177, type: !258)
!6665 = !DILocation(line: 2177, column: 52, scope: !6661)
!6666 = !DILocalVariable(name: "host", arg: 2, scope: !6661, file: !3, line: 2177, type: !267)
!6667 = !DILocation(line: 2177, column: 73, scope: !6661)
!6668 = !DILocation(line: 2179, column: 6, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 2179, column: 6)
!6670 = !DILocation(line: 2179, column: 10, scope: !6669)
!6671 = !DILocation(line: 2179, column: 6, scope: !6661)
!6672 = !DILocation(line: 2180, column: 10, scope: !6669)
!6673 = !DILocation(line: 2180, column: 16, scope: !6669)
!6674 = !DILocation(line: 2180, column: 25, scope: !6669)
!6675 = !DILocation(line: 2180, column: 43, scope: !6669)
!6676 = !DILocation(line: 2180, column: 3, scope: !6669)
!6677 = !DILocation(line: 2182, column: 25, scope: !6661)
!6678 = !DILocation(line: 2182, column: 9, scope: !6661)
!6679 = !DILocation(line: 2182, column: 2, scope: !6661)
!6680 = !DILocation(line: 2183, column: 1, scope: !6661)
!6681 = distinct !DISubprogram(name: "mmc_blk_issue_drv_op", scope: !3, file: !3, line: 977, type: !5808, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6682 = !DILocalVariable(name: "mq", arg: 1, scope: !6681, file: !3, line: 977, type: !258)
!6683 = !DILocation(line: 977, column: 52, scope: !6681)
!6684 = !DILocalVariable(name: "req", arg: 2, scope: !6681, file: !3, line: 977, type: !2386)
!6685 = !DILocation(line: 977, column: 72, scope: !6681)
!6686 = !DILocalVariable(name: "mq_rq", scope: !6681, file: !3, line: 979, type: !5457)
!6687 = !DILocation(line: 979, column: 24, scope: !6681)
!6688 = !DILocalVariable(name: "card", scope: !6681, file: !3, line: 980, type: !262)
!6689 = !DILocation(line: 980, column: 19, scope: !6681)
!6690 = !DILocation(line: 980, column: 26, scope: !6681)
!6691 = !DILocation(line: 980, column: 30, scope: !6681)
!6692 = !DILocalVariable(name: "md", scope: !6681, file: !3, line: 981, type: !5408)
!6693 = !DILocation(line: 981, column: 23, scope: !6681)
!6694 = !DILocation(line: 981, column: 28, scope: !6681)
!6695 = !DILocation(line: 981, column: 32, scope: !6681)
!6696 = !DILocalVariable(name: "idata", scope: !6681, file: !3, line: 982, type: !6697)
!6697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6698, size: 64)
!6698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6699, size: 64)
!6699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_blk_ioc_data", file: !3, line: 344, size: 768, elements: !6700)
!6700 = !{!6701, !6702, !6704, !6705}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "ic", scope: !6699, file: !3, line: 345, baseType: !5477, size: 576)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6699, file: !3, line: 346, baseType: !6703, size: 64, offset: 576)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "buf_bytes", scope: !6699, file: !3, line: 347, baseType: !486, size: 64, offset: 640)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "rpmb", scope: !6699, file: !3, line: 348, baseType: !5501, size: 64, offset: 704)
!6706 = !DILocation(line: 982, column: 28, scope: !6681)
!6707 = !DILocalVariable(name: "rpmb_ioctl", scope: !6681, file: !3, line: 983, type: !555)
!6708 = !DILocation(line: 983, column: 7, scope: !6681)
!6709 = !DILocalVariable(name: "ext_csd", scope: !6681, file: !3, line: 984, type: !6710)
!6710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6711, size: 64)
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!6712 = !DILocation(line: 984, column: 7, scope: !6681)
!6713 = !DILocalVariable(name: "status", scope: !6681, file: !3, line: 985, type: !480)
!6714 = !DILocation(line: 985, column: 6, scope: !6681)
!6715 = !DILocalVariable(name: "ret", scope: !6681, file: !3, line: 986, type: !324)
!6716 = !DILocation(line: 986, column: 6, scope: !6681)
!6717 = !DILocalVariable(name: "i", scope: !6681, file: !3, line: 987, type: !324)
!6718 = !DILocation(line: 987, column: 6, scope: !6681)
!6719 = !DILocation(line: 989, column: 31, scope: !6681)
!6720 = !DILocation(line: 989, column: 10, scope: !6681)
!6721 = !DILocation(line: 989, column: 8, scope: !6681)
!6722 = !DILocation(line: 990, column: 16, scope: !6681)
!6723 = !DILocation(line: 990, column: 23, scope: !6681)
!6724 = !DILocation(line: 990, column: 30, scope: !6681)
!6725 = !DILocation(line: 990, column: 13, scope: !6681)
!6726 = !DILocation(line: 992, column: 10, scope: !6681)
!6727 = !DILocation(line: 992, column: 17, scope: !6681)
!6728 = !DILocation(line: 992, column: 2, scope: !6681)
!6729 = !DILocation(line: 995, column: 11, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 992, column: 25)
!6731 = !DILocation(line: 995, column: 18, scope: !6730)
!6732 = !DILocation(line: 995, column: 9, scope: !6730)
!6733 = !DILocation(line: 996, column: 10, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 996, column: 3)
!6735 = !DILocation(line: 996, column: 19, scope: !6734)
!6736 = !DILocation(line: 996, column: 8, scope: !6734)
!6737 = !DILocation(line: 996, column: 24, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 996, column: 3)
!6739 = !DILocation(line: 996, column: 28, scope: !6738)
!6740 = !DILocation(line: 996, column: 35, scope: !6738)
!6741 = !DILocation(line: 996, column: 26, scope: !6738)
!6742 = !DILocation(line: 996, column: 3, scope: !6734)
!6743 = !DILocation(line: 997, column: 30, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6738, file: !3, line: 996, column: 51)
!6745 = !DILocation(line: 997, column: 36, scope: !6744)
!6746 = !DILocation(line: 997, column: 40, scope: !6744)
!6747 = !DILocation(line: 997, column: 46, scope: !6744)
!6748 = !DILocation(line: 997, column: 10, scope: !6744)
!6749 = !DILocation(line: 997, column: 8, scope: !6744)
!6750 = !DILocation(line: 998, column: 8, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 998, column: 8)
!6752 = !DILocation(line: 998, column: 8, scope: !6744)
!6753 = !DILocation(line: 999, column: 5, scope: !6751)
!6754 = !DILocation(line: 1000, column: 3, scope: !6744)
!6755 = !DILocation(line: 996, column: 47, scope: !6738)
!6756 = !DILocation(line: 996, column: 3, scope: !6738)
!6757 = distinct !{!6757, !6742, !6758}
!6758 = !DILocation(line: 1000, column: 3, scope: !6734)
!6759 = !DILocation(line: 1002, column: 7, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1002, column: 7)
!6761 = !DILocation(line: 1002, column: 7, scope: !6730)
!6762 = !DILocation(line: 1003, column: 24, scope: !6760)
!6763 = !DILocation(line: 1003, column: 4, scope: !6760)
!6764 = !DILocation(line: 1004, column: 3, scope: !6730)
!6765 = !DILocation(line: 1006, column: 20, scope: !6730)
!6766 = !DILocation(line: 1007, column: 6, scope: !6730)
!6767 = !DILocation(line: 1007, column: 12, scope: !6730)
!6768 = !DILocation(line: 1007, column: 20, scope: !6730)
!6769 = !DILocation(line: 1007, column: 33, scope: !6730)
!6770 = !DILocation(line: 1009, column: 6, scope: !6730)
!6771 = !DILocation(line: 1009, column: 12, scope: !6730)
!6772 = !DILocation(line: 1009, column: 20, scope: !6730)
!6773 = !DILocation(line: 1006, column: 9, scope: !6730)
!6774 = !DILocation(line: 1006, column: 7, scope: !6730)
!6775 = !DILocation(line: 1010, column: 7, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1010, column: 7)
!6777 = !DILocation(line: 1010, column: 7, scope: !6730)
!6778 = !DILocation(line: 1011, column: 4, scope: !6776)
!6779 = !DILocation(line: 1014, column: 4, scope: !6776)
!6780 = !DILocation(line: 1014, column: 10, scope: !6776)
!6781 = !DILocation(line: 1014, column: 18, scope: !6776)
!6782 = !DILocation(line: 1014, column: 31, scope: !6776)
!6783 = !DILocation(line: 1016, column: 3, scope: !6730)
!6784 = !DILocation(line: 1018, column: 25, scope: !6730)
!6785 = !DILocation(line: 1018, column: 9, scope: !6730)
!6786 = !DILocation(line: 1018, column: 7, scope: !6730)
!6787 = !DILocation(line: 1019, column: 8, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1019, column: 7)
!6789 = !DILocation(line: 1019, column: 7, scope: !6730)
!6790 = !DILocation(line: 1020, column: 10, scope: !6788)
!6791 = !DILocation(line: 1020, column: 8, scope: !6788)
!6792 = !DILocation(line: 1020, column: 4, scope: !6788)
!6793 = !DILocation(line: 1021, column: 3, scope: !6730)
!6794 = !DILocation(line: 1023, column: 13, scope: !6730)
!6795 = !DILocation(line: 1023, column: 20, scope: !6730)
!6796 = !DILocation(line: 1023, column: 11, scope: !6730)
!6797 = !DILocation(line: 1024, column: 25, scope: !6730)
!6798 = !DILocation(line: 1024, column: 31, scope: !6730)
!6799 = !DILocation(line: 1024, column: 9, scope: !6730)
!6800 = !DILocation(line: 1024, column: 7, scope: !6730)
!6801 = !DILocation(line: 1025, column: 3, scope: !6730)
!6802 = !DILocation(line: 1027, column: 3, scope: !6730)
!6803 = !DILocation(line: 1029, column: 7, scope: !6730)
!6804 = !DILocation(line: 1030, column: 3, scope: !6730)
!6805 = !DILocation(line: 1032, column: 25, scope: !6681)
!6806 = !DILocation(line: 1032, column: 2, scope: !6681)
!6807 = !DILocation(line: 1032, column: 9, scope: !6681)
!6808 = !DILocation(line: 1032, column: 23, scope: !6681)
!6809 = !DILocation(line: 1033, column: 21, scope: !6681)
!6810 = !DILocation(line: 1033, column: 26, scope: !6681)
!6811 = !DILocation(line: 1033, column: 2, scope: !6681)
!6812 = !DILocation(line: 1034, column: 1, scope: !6681)
!6813 = distinct !DISubprogram(name: "mmc_blk_issue_discard_rq", scope: !3, file: !3, line: 1036, type: !5808, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6814 = !DILocalVariable(name: "mq", arg: 1, scope: !6813, file: !3, line: 1036, type: !258)
!6815 = !DILocation(line: 1036, column: 56, scope: !6813)
!6816 = !DILocalVariable(name: "req", arg: 2, scope: !6813, file: !3, line: 1036, type: !2386)
!6817 = !DILocation(line: 1036, column: 76, scope: !6813)
!6818 = !DILocalVariable(name: "md", scope: !6813, file: !3, line: 1038, type: !5408)
!6819 = !DILocation(line: 1038, column: 23, scope: !6813)
!6820 = !DILocation(line: 1038, column: 28, scope: !6813)
!6821 = !DILocation(line: 1038, column: 32, scope: !6813)
!6822 = !DILocalVariable(name: "card", scope: !6813, file: !3, line: 1039, type: !262)
!6823 = !DILocation(line: 1039, column: 19, scope: !6813)
!6824 = !DILocation(line: 1039, column: 26, scope: !6813)
!6825 = !DILocation(line: 1039, column: 30, scope: !6813)
!6826 = !DILocation(line: 1039, column: 36, scope: !6813)
!6827 = !DILocalVariable(name: "from", scope: !6813, file: !3, line: 1040, type: !7)
!6828 = !DILocation(line: 1040, column: 15, scope: !6813)
!6829 = !DILocalVariable(name: "nr", scope: !6813, file: !3, line: 1040, type: !7)
!6830 = !DILocation(line: 1040, column: 21, scope: !6813)
!6831 = !DILocalVariable(name: "err", scope: !6813, file: !3, line: 1041, type: !324)
!6832 = !DILocation(line: 1041, column: 6, scope: !6813)
!6833 = !DILocalVariable(name: "type", scope: !6813, file: !3, line: 1041, type: !324)
!6834 = !DILocation(line: 1041, column: 15, scope: !6813)
!6835 = !DILocalVariable(name: "status", scope: !6813, file: !3, line: 1042, type: !2547)
!6836 = !DILocation(line: 1042, column: 15, scope: !6813)
!6837 = !DILocation(line: 1044, column: 21, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1044, column: 6)
!6839 = !DILocation(line: 1044, column: 7, scope: !6838)
!6840 = !DILocation(line: 1044, column: 6, scope: !6813)
!6841 = !DILocation(line: 1045, column: 10, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 1044, column: 28)
!6843 = !DILocation(line: 1046, column: 3, scope: !6842)
!6844 = !DILocation(line: 1049, column: 20, scope: !6813)
!6845 = !DILocation(line: 1049, column: 9, scope: !6813)
!6846 = !DILocation(line: 1049, column: 7, scope: !6813)
!6847 = !DILocation(line: 1050, column: 22, scope: !6813)
!6848 = !DILocation(line: 1050, column: 7, scope: !6813)
!6849 = !DILocation(line: 1050, column: 5, scope: !6813)
!6850 = !DILocation(line: 1052, column: 2, scope: !6813)
!6851 = !DILocation(line: 1053, column: 7, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1052, column: 5)
!6853 = !DILocation(line: 1054, column: 7, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 1054, column: 7)
!6855 = !DILocation(line: 1054, column: 13, scope: !6854)
!6856 = !DILocation(line: 1054, column: 20, scope: !6854)
!6857 = !DILocation(line: 1054, column: 7, scope: !6852)
!6858 = !DILocation(line: 1055, column: 21, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 1054, column: 45)
!6860 = !DILocation(line: 1057, column: 7, scope: !6859)
!6861 = !DILocation(line: 1057, column: 13, scope: !6859)
!6862 = !DILocation(line: 1057, column: 23, scope: !6859)
!6863 = !DILocation(line: 1060, column: 7, scope: !6859)
!6864 = !DILocation(line: 1060, column: 13, scope: !6859)
!6865 = !DILocation(line: 1060, column: 21, scope: !6859)
!6866 = !DILocation(line: 1055, column: 10, scope: !6859)
!6867 = !DILocation(line: 1055, column: 8, scope: !6859)
!6868 = !DILocation(line: 1061, column: 3, scope: !6859)
!6869 = !DILocation(line: 1062, column: 8, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 1062, column: 7)
!6871 = !DILocation(line: 1062, column: 7, scope: !6852)
!6872 = !DILocation(line: 1063, column: 20, scope: !6870)
!6873 = !DILocation(line: 1063, column: 26, scope: !6870)
!6874 = !DILocation(line: 1063, column: 32, scope: !6870)
!6875 = !DILocation(line: 1063, column: 36, scope: !6870)
!6876 = !DILocation(line: 1063, column: 42, scope: !6870)
!6877 = !DILocation(line: 1063, column: 10, scope: !6870)
!6878 = !DILocation(line: 1063, column: 8, scope: !6870)
!6879 = !DILocation(line: 1063, column: 4, scope: !6870)
!6880 = !DILocation(line: 1064, column: 2, scope: !6852)
!6881 = !DILocation(line: 1064, column: 11, scope: !6813)
!6882 = !DILocation(line: 1064, column: 15, scope: !6813)
!6883 = !DILocation(line: 1064, column: 23, scope: !6813)
!6884 = !DILocation(line: 1064, column: 41, scope: !6813)
!6885 = !DILocation(line: 1064, column: 45, scope: !6813)
!6886 = !DILocation(line: 1064, column: 51, scope: !6813)
!6887 = !DILocation(line: 1064, column: 57, scope: !6813)
!6888 = !DILocation(line: 1064, column: 27, scope: !6813)
!6889 = !DILocation(line: 1064, column: 26, scope: !6813)
!6890 = !DILocation(line: 0, scope: !6813)
!6891 = distinct !{!6891, !6850, !6892}
!6892 = !DILocation(line: 1064, column: 62, scope: !6813)
!6893 = !DILocation(line: 1065, column: 6, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 1065, column: 6)
!6895 = !DILocation(line: 1065, column: 6, scope: !6813)
!6896 = !DILocation(line: 1066, column: 10, scope: !6894)
!6897 = !DILocation(line: 1066, column: 3, scope: !6894)
!6898 = !DILocation(line: 1068, column: 25, scope: !6894)
!6899 = !DILocation(line: 1068, column: 29, scope: !6894)
!6900 = !DILocation(line: 1068, column: 3, scope: !6894)
!6901 = !DILabel(scope: !6813, name: "fail", file: !3, line: 1069)
!6902 = !DILocation(line: 1069, column: 1, scope: !6813)
!6903 = !DILocation(line: 1070, column: 21, scope: !6813)
!6904 = !DILocation(line: 1070, column: 26, scope: !6813)
!6905 = !DILocation(line: 1070, column: 2, scope: !6813)
!6906 = !DILocation(line: 1071, column: 1, scope: !6813)
!6907 = distinct !DISubprogram(name: "mmc_blk_issue_secdiscard_rq", scope: !3, file: !3, line: 1073, type: !5808, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!6908 = !DILocalVariable(name: "mq", arg: 1, scope: !6907, file: !3, line: 1073, type: !258)
!6909 = !DILocation(line: 1073, column: 59, scope: !6907)
!6910 = !DILocalVariable(name: "req", arg: 2, scope: !6907, file: !3, line: 1074, type: !2386)
!6911 = !DILocation(line: 1074, column: 28, scope: !6907)
!6912 = !DILocalVariable(name: "md", scope: !6907, file: !3, line: 1076, type: !5408)
!6913 = !DILocation(line: 1076, column: 23, scope: !6907)
!6914 = !DILocation(line: 1076, column: 28, scope: !6907)
!6915 = !DILocation(line: 1076, column: 32, scope: !6907)
!6916 = !DILocalVariable(name: "card", scope: !6907, file: !3, line: 1077, type: !262)
!6917 = !DILocation(line: 1077, column: 19, scope: !6907)
!6918 = !DILocation(line: 1077, column: 26, scope: !6907)
!6919 = !DILocation(line: 1077, column: 30, scope: !6907)
!6920 = !DILocation(line: 1077, column: 36, scope: !6907)
!6921 = !DILocalVariable(name: "from", scope: !6907, file: !3, line: 1078, type: !7)
!6922 = !DILocation(line: 1078, column: 15, scope: !6907)
!6923 = !DILocalVariable(name: "nr", scope: !6907, file: !3, line: 1078, type: !7)
!6924 = !DILocation(line: 1078, column: 21, scope: !6907)
!6925 = !DILocalVariable(name: "arg", scope: !6907, file: !3, line: 1078, type: !7)
!6926 = !DILocation(line: 1078, column: 25, scope: !6907)
!6927 = !DILocalVariable(name: "err", scope: !6907, file: !3, line: 1079, type: !324)
!6928 = !DILocation(line: 1079, column: 6, scope: !6907)
!6929 = !DILocalVariable(name: "type", scope: !6907, file: !3, line: 1079, type: !324)
!6930 = !DILocation(line: 1079, column: 15, scope: !6907)
!6931 = !DILocalVariable(name: "status", scope: !6907, file: !3, line: 1080, type: !2547)
!6932 = !DILocation(line: 1080, column: 15, scope: !6907)
!6933 = !DILocation(line: 1082, column: 34, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1082, column: 6)
!6935 = !DILocation(line: 1082, column: 8, scope: !6934)
!6936 = !DILocation(line: 1082, column: 6, scope: !6907)
!6937 = !DILocation(line: 1083, column: 10, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 1082, column: 42)
!6939 = !DILocation(line: 1084, column: 3, scope: !6938)
!6940 = !DILocation(line: 1087, column: 20, scope: !6907)
!6941 = !DILocation(line: 1087, column: 9, scope: !6907)
!6942 = !DILocation(line: 1087, column: 7, scope: !6907)
!6943 = !DILocation(line: 1088, column: 22, scope: !6907)
!6944 = !DILocation(line: 1088, column: 7, scope: !6907)
!6945 = !DILocation(line: 1088, column: 5, scope: !6907)
!6946 = !DILocation(line: 1090, column: 19, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1090, column: 6)
!6948 = !DILocation(line: 1090, column: 6, scope: !6947)
!6949 = !DILocation(line: 1090, column: 25, scope: !6947)
!6950 = !DILocation(line: 1090, column: 53, scope: !6947)
!6951 = !DILocation(line: 1090, column: 59, scope: !6947)
!6952 = !DILocation(line: 1090, column: 65, scope: !6947)
!6953 = !DILocation(line: 1090, column: 29, scope: !6947)
!6954 = !DILocation(line: 1090, column: 6, scope: !6907)
!6955 = !DILocation(line: 1091, column: 7, scope: !6947)
!6956 = !DILocation(line: 1091, column: 3, scope: !6947)
!6957 = !DILocation(line: 1093, column: 7, scope: !6947)
!6958 = !DILocation(line: 1090, column: 67, scope: !6947)
!6959 = !DILabel(scope: !6907, name: "retry", file: !3, line: 1095)
!6960 = !DILocation(line: 1095, column: 1, scope: !6907)
!6961 = !DILocation(line: 1096, column: 6, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1096, column: 6)
!6963 = !DILocation(line: 1096, column: 12, scope: !6962)
!6964 = !DILocation(line: 1096, column: 19, scope: !6962)
!6965 = !DILocation(line: 1096, column: 6, scope: !6907)
!6966 = !DILocation(line: 1097, column: 20, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 1096, column: 44)
!6968 = !DILocation(line: 1099, column: 6, scope: !6967)
!6969 = !DILocation(line: 1099, column: 10, scope: !6967)
!6970 = !DILocation(line: 1102, column: 6, scope: !6967)
!6971 = !DILocation(line: 1102, column: 12, scope: !6967)
!6972 = !DILocation(line: 1102, column: 20, scope: !6967)
!6973 = !DILocation(line: 1097, column: 9, scope: !6967)
!6974 = !DILocation(line: 1097, column: 7, scope: !6967)
!6975 = !DILocation(line: 1103, column: 7, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 1103, column: 7)
!6977 = !DILocation(line: 1103, column: 7, scope: !6967)
!6978 = !DILocation(line: 1104, column: 4, scope: !6976)
!6979 = !DILocation(line: 1105, column: 2, scope: !6967)
!6980 = !DILocation(line: 1107, column: 18, scope: !6907)
!6981 = !DILocation(line: 1107, column: 24, scope: !6907)
!6982 = !DILocation(line: 1107, column: 30, scope: !6907)
!6983 = !DILocation(line: 1107, column: 34, scope: !6907)
!6984 = !DILocation(line: 1107, column: 8, scope: !6907)
!6985 = !DILocation(line: 1107, column: 6, scope: !6907)
!6986 = !DILocation(line: 1108, column: 6, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1108, column: 6)
!6988 = !DILocation(line: 1108, column: 10, scope: !6987)
!6989 = !DILocation(line: 1108, column: 6, scope: !6907)
!6990 = !DILocation(line: 1109, column: 3, scope: !6987)
!6991 = !DILocation(line: 1110, column: 6, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1110, column: 6)
!6993 = !DILocation(line: 1110, column: 6, scope: !6907)
!6994 = !DILocation(line: 1111, column: 10, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6992, file: !3, line: 1110, column: 11)
!6996 = !DILocation(line: 1112, column: 3, scope: !6995)
!6997 = !DILocation(line: 1115, column: 6, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1115, column: 6)
!6999 = !DILocation(line: 1115, column: 10, scope: !6998)
!7000 = !DILocation(line: 1115, column: 6, scope: !6907)
!7001 = !DILocation(line: 1116, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1116, column: 7)
!7003 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 1115, column: 35)
!7004 = !DILocation(line: 1116, column: 13, scope: !7002)
!7005 = !DILocation(line: 1116, column: 20, scope: !7002)
!7006 = !DILocation(line: 1116, column: 7, scope: !7003)
!7007 = !DILocation(line: 1117, column: 21, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 1116, column: 45)
!7009 = !DILocation(line: 1120, column: 7, scope: !7008)
!7010 = !DILocation(line: 1120, column: 13, scope: !7008)
!7011 = !DILocation(line: 1120, column: 21, scope: !7008)
!7012 = !DILocation(line: 1117, column: 10, scope: !7008)
!7013 = !DILocation(line: 1117, column: 8, scope: !7008)
!7014 = !DILocation(line: 1121, column: 8, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1121, column: 8)
!7016 = !DILocation(line: 1121, column: 8, scope: !7008)
!7017 = !DILocation(line: 1122, column: 5, scope: !7015)
!7018 = !DILocation(line: 1123, column: 3, scope: !7008)
!7019 = !DILocation(line: 1125, column: 19, scope: !7003)
!7020 = !DILocation(line: 1125, column: 25, scope: !7003)
!7021 = !DILocation(line: 1125, column: 31, scope: !7003)
!7022 = !DILocation(line: 1125, column: 9, scope: !7003)
!7023 = !DILocation(line: 1125, column: 7, scope: !7003)
!7024 = !DILocation(line: 1126, column: 7, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1126, column: 7)
!7026 = !DILocation(line: 1126, column: 11, scope: !7025)
!7027 = !DILocation(line: 1126, column: 7, scope: !7003)
!7028 = !DILocation(line: 1127, column: 4, scope: !7025)
!7029 = !DILocation(line: 1128, column: 7, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1128, column: 7)
!7031 = !DILocation(line: 1128, column: 7, scope: !7003)
!7032 = !DILocation(line: 1129, column: 11, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 1128, column: 12)
!7034 = !DILocation(line: 1130, column: 4, scope: !7033)
!7035 = !DILocation(line: 1132, column: 2, scope: !7003)
!7036 = !DILocation(line: 1115, column: 13, scope: !6998)
!7037 = !DILabel(scope: !6907, name: "out_retry", file: !3, line: 1134)
!7038 = !DILocation(line: 1134, column: 1, scope: !6907)
!7039 = !DILocation(line: 1135, column: 6, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1135, column: 6)
!7041 = !DILocation(line: 1135, column: 10, scope: !7040)
!7042 = !DILocation(line: 1135, column: 28, scope: !7040)
!7043 = !DILocation(line: 1135, column: 32, scope: !7040)
!7044 = !DILocation(line: 1135, column: 38, scope: !7040)
!7045 = !DILocation(line: 1135, column: 44, scope: !7040)
!7046 = !DILocation(line: 1135, column: 14, scope: !7040)
!7047 = !DILocation(line: 1135, column: 6, scope: !6907)
!7048 = !DILocation(line: 1136, column: 3, scope: !7040)
!7049 = !DILocation(line: 1137, column: 7, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1137, column: 6)
!7051 = !DILocation(line: 1137, column: 6, scope: !6907)
!7052 = !DILocation(line: 1138, column: 25, scope: !7050)
!7053 = !DILocation(line: 1138, column: 29, scope: !7050)
!7054 = !DILocation(line: 1138, column: 3, scope: !7050)
!7055 = !DILabel(scope: !6907, name: "out", file: !3, line: 1139)
!7056 = !DILocation(line: 1139, column: 1, scope: !6907)
!7057 = !DILocation(line: 1140, column: 21, scope: !6907)
!7058 = !DILocation(line: 1140, column: 26, scope: !6907)
!7059 = !DILocation(line: 1140, column: 2, scope: !6907)
!7060 = !DILocation(line: 1141, column: 1, scope: !6907)
!7061 = distinct !DISubprogram(name: "mmc_blk_issue_flush", scope: !3, file: !3, line: 1143, type: !5808, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7062 = !DILocalVariable(name: "mq", arg: 1, scope: !7061, file: !3, line: 1143, type: !258)
!7063 = !DILocation(line: 1143, column: 51, scope: !7061)
!7064 = !DILocalVariable(name: "req", arg: 2, scope: !7061, file: !3, line: 1143, type: !2386)
!7065 = !DILocation(line: 1143, column: 71, scope: !7061)
!7066 = !DILocalVariable(name: "md", scope: !7061, file: !3, line: 1145, type: !5408)
!7067 = !DILocation(line: 1145, column: 23, scope: !7061)
!7068 = !DILocation(line: 1145, column: 28, scope: !7061)
!7069 = !DILocation(line: 1145, column: 32, scope: !7061)
!7070 = !DILocalVariable(name: "card", scope: !7061, file: !3, line: 1146, type: !262)
!7071 = !DILocation(line: 1146, column: 19, scope: !7061)
!7072 = !DILocation(line: 1146, column: 26, scope: !7061)
!7073 = !DILocation(line: 1146, column: 30, scope: !7061)
!7074 = !DILocation(line: 1146, column: 36, scope: !7061)
!7075 = !DILocalVariable(name: "ret", scope: !7061, file: !3, line: 1147, type: !324)
!7076 = !DILocation(line: 1147, column: 6, scope: !7061)
!7077 = !DILocation(line: 1149, column: 24, scope: !7061)
!7078 = !DILocation(line: 1149, column: 8, scope: !7061)
!7079 = !DILocation(line: 1149, column: 6, scope: !7061)
!7080 = !DILocation(line: 1150, column: 21, scope: !7061)
!7081 = !DILocation(line: 1150, column: 26, scope: !7061)
!7082 = !DILocation(line: 1150, column: 2, scope: !7061)
!7083 = !DILocation(line: 1151, column: 1, scope: !7061)
!7084 = distinct !DISubprogram(name: "mmc_blk_cqe_issue_flush", scope: !3, file: !3, line: 1471, type: !7085, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{!324, !258, !2386}
!7087 = !DILocalVariable(name: "mq", arg: 1, scope: !7084, file: !3, line: 1471, type: !258)
!7088 = !DILocation(line: 1471, column: 54, scope: !7084)
!7089 = !DILocalVariable(name: "req", arg: 2, scope: !7084, file: !3, line: 1471, type: !2386)
!7090 = !DILocation(line: 1471, column: 74, scope: !7084)
!7091 = !DILocalVariable(name: "mqrq", scope: !7084, file: !3, line: 1473, type: !5457)
!7092 = !DILocation(line: 1473, column: 24, scope: !7084)
!7093 = !DILocation(line: 1473, column: 52, scope: !7084)
!7094 = !DILocation(line: 1473, column: 31, scope: !7084)
!7095 = !DILocalVariable(name: "mrq", scope: !7084, file: !3, line: 1474, type: !4933)
!7096 = !DILocation(line: 1474, column: 22, scope: !7084)
!7097 = !DILocation(line: 1474, column: 50, scope: !7084)
!7098 = !DILocation(line: 1474, column: 56, scope: !7084)
!7099 = !DILocation(line: 1474, column: 28, scope: !7084)
!7100 = !DILocation(line: 1476, column: 2, scope: !7084)
!7101 = !DILocation(line: 1476, column: 7, scope: !7084)
!7102 = !DILocation(line: 1476, column: 12, scope: !7084)
!7103 = !DILocation(line: 1476, column: 19, scope: !7084)
!7104 = !DILocation(line: 1477, column: 2, scope: !7084)
!7105 = !DILocation(line: 1477, column: 7, scope: !7084)
!7106 = !DILocation(line: 1477, column: 12, scope: !7084)
!7107 = !DILocation(line: 1477, column: 16, scope: !7084)
!7108 = !DILocation(line: 1481, column: 2, scope: !7084)
!7109 = !DILocation(line: 1481, column: 7, scope: !7084)
!7110 = !DILocation(line: 1481, column: 12, scope: !7084)
!7111 = !DILocation(line: 1481, column: 18, scope: !7084)
!7112 = !DILocation(line: 1483, column: 31, scope: !7084)
!7113 = !DILocation(line: 1483, column: 35, scope: !7084)
!7114 = !DILocation(line: 1483, column: 41, scope: !7084)
!7115 = !DILocation(line: 1483, column: 47, scope: !7084)
!7116 = !DILocation(line: 1483, column: 9, scope: !7084)
!7117 = !DILocation(line: 1483, column: 2, scope: !7084)
!7118 = distinct !DISubprogram(name: "mmc_blk_cqe_issue_rw_rq", scope: !3, file: !3, line: 1503, type: !7085, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7119 = !DILocalVariable(name: "mq", arg: 1, scope: !7118, file: !3, line: 1503, type: !258)
!7120 = !DILocation(line: 1503, column: 54, scope: !7118)
!7121 = !DILocalVariable(name: "req", arg: 2, scope: !7118, file: !3, line: 1503, type: !2386)
!7122 = !DILocation(line: 1503, column: 74, scope: !7118)
!7123 = !DILocalVariable(name: "mqrq", scope: !7118, file: !3, line: 1505, type: !5457)
!7124 = !DILocation(line: 1505, column: 24, scope: !7118)
!7125 = !DILocation(line: 1505, column: 52, scope: !7118)
!7126 = !DILocation(line: 1505, column: 31, scope: !7118)
!7127 = !DILocalVariable(name: "host", scope: !7118, file: !3, line: 1506, type: !267)
!7128 = !DILocation(line: 1506, column: 19, scope: !7118)
!7129 = !DILocation(line: 1506, column: 26, scope: !7118)
!7130 = !DILocation(line: 1506, column: 30, scope: !7118)
!7131 = !DILocation(line: 1506, column: 36, scope: !7118)
!7132 = !DILocation(line: 1508, column: 6, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 1508, column: 6)
!7134 = !DILocation(line: 1508, column: 12, scope: !7133)
!7135 = !DILocation(line: 1508, column: 6, scope: !7118)
!7136 = !DILocation(line: 1509, column: 34, scope: !7133)
!7137 = !DILocation(line: 1509, column: 38, scope: !7133)
!7138 = !DILocation(line: 1509, column: 10, scope: !7133)
!7139 = !DILocation(line: 1509, column: 3, scope: !7133)
!7140 = !DILocation(line: 1511, column: 20, scope: !7118)
!7141 = !DILocation(line: 1511, column: 24, scope: !7118)
!7142 = !DILocation(line: 1511, column: 2, scope: !7118)
!7143 = !DILocation(line: 1513, column: 31, scope: !7118)
!7144 = !DILocation(line: 1513, column: 35, scope: !7118)
!7145 = !DILocation(line: 1513, column: 41, scope: !7118)
!7146 = !DILocation(line: 1513, column: 48, scope: !7118)
!7147 = !DILocation(line: 1513, column: 54, scope: !7118)
!7148 = !DILocation(line: 1513, column: 58, scope: !7118)
!7149 = !DILocation(line: 1513, column: 9, scope: !7118)
!7150 = !DILocation(line: 1513, column: 2, scope: !7118)
!7151 = !DILocation(line: 1514, column: 1, scope: !7118)
!7152 = distinct !DISubprogram(name: "mmc_blk_mq_issue_rw_rq", scope: !3, file: !3, line: 2138, type: !7085, scopeLine: 2140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7153 = !DILocalVariable(name: "mq", arg: 1, scope: !7152, file: !3, line: 2138, type: !258)
!7154 = !DILocation(line: 2138, column: 53, scope: !7152)
!7155 = !DILocalVariable(name: "req", arg: 2, scope: !7152, file: !3, line: 2139, type: !2386)
!7156 = !DILocation(line: 2139, column: 23, scope: !7152)
!7157 = !DILocalVariable(name: "mqrq", scope: !7152, file: !3, line: 2141, type: !5457)
!7158 = !DILocation(line: 2141, column: 24, scope: !7152)
!7159 = !DILocation(line: 2141, column: 52, scope: !7152)
!7160 = !DILocation(line: 2141, column: 31, scope: !7152)
!7161 = !DILocalVariable(name: "host", scope: !7152, file: !3, line: 2142, type: !267)
!7162 = !DILocation(line: 2142, column: 19, scope: !7152)
!7163 = !DILocation(line: 2142, column: 26, scope: !7152)
!7164 = !DILocation(line: 2142, column: 30, scope: !7152)
!7165 = !DILocation(line: 2142, column: 36, scope: !7152)
!7166 = !DILocalVariable(name: "prev_req", scope: !7152, file: !3, line: 2143, type: !2386)
!7167 = !DILocation(line: 2143, column: 18, scope: !7152)
!7168 = !DILocalVariable(name: "err", scope: !7152, file: !3, line: 2144, type: !324)
!7169 = !DILocation(line: 2144, column: 6, scope: !7152)
!7170 = !DILocation(line: 2146, column: 21, scope: !7152)
!7171 = !DILocation(line: 2146, column: 27, scope: !7152)
!7172 = !DILocation(line: 2146, column: 31, scope: !7152)
!7173 = !DILocation(line: 2146, column: 40, scope: !7152)
!7174 = !DILocation(line: 2146, column: 2, scope: !7152)
!7175 = !DILocation(line: 2148, column: 2, scope: !7152)
!7176 = !DILocation(line: 2148, column: 8, scope: !7152)
!7177 = !DILocation(line: 2148, column: 12, scope: !7152)
!7178 = !DILocation(line: 2148, column: 16, scope: !7152)
!7179 = !DILocation(line: 2148, column: 21, scope: !7152)
!7180 = !DILocation(line: 2150, column: 14, scope: !7152)
!7181 = !DILocation(line: 2150, column: 21, scope: !7152)
!7182 = !DILocation(line: 2150, column: 27, scope: !7152)
!7183 = !DILocation(line: 2150, column: 31, scope: !7152)
!7184 = !DILocation(line: 2150, column: 2, scope: !7152)
!7185 = !DILocation(line: 2152, column: 24, scope: !7152)
!7186 = !DILocation(line: 2152, column: 8, scope: !7152)
!7187 = !DILocation(line: 2152, column: 6, scope: !7152)
!7188 = !DILocation(line: 2153, column: 6, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2153, column: 6)
!7190 = !DILocation(line: 2153, column: 6, scope: !7152)
!7191 = !DILocation(line: 2154, column: 3, scope: !7189)
!7192 = !DILocation(line: 2156, column: 2, scope: !7152)
!7193 = !DILocation(line: 2156, column: 6, scope: !7152)
!7194 = !DILocation(line: 2156, column: 14, scope: !7152)
!7195 = !DILocation(line: 2158, column: 26, scope: !7152)
!7196 = !DILocation(line: 2158, column: 33, scope: !7152)
!7197 = !DILocation(line: 2158, column: 39, scope: !7152)
!7198 = !DILocation(line: 2158, column: 43, scope: !7152)
!7199 = !DILocation(line: 2158, column: 8, scope: !7152)
!7200 = !DILocation(line: 2158, column: 6, scope: !7152)
!7201 = !DILocation(line: 2160, column: 6, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2160, column: 6)
!7203 = !DILocation(line: 2160, column: 6, scope: !7152)
!7204 = !DILocation(line: 2161, column: 23, scope: !7202)
!7205 = !DILocation(line: 2161, column: 27, scope: !7202)
!7206 = !DILocation(line: 2161, column: 3, scope: !7202)
!7207 = !DILocation(line: 2163, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2163, column: 6)
!7209 = !DILocation(line: 2163, column: 6, scope: !7152)
!7210 = !DILocation(line: 2164, column: 3, scope: !7208)
!7211 = !DILocation(line: 2164, column: 7, scope: !7208)
!7212 = !DILocation(line: 2164, column: 15, scope: !7208)
!7213 = !DILocation(line: 2167, column: 6, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2167, column: 6)
!7215 = !DILocation(line: 2167, column: 10, scope: !7214)
!7216 = !DILocation(line: 2167, column: 36, scope: !7214)
!7217 = !DILocation(line: 2167, column: 13, scope: !7214)
!7218 = !DILocation(line: 2167, column: 6, scope: !7152)
!7219 = !DILocation(line: 2168, column: 22, scope: !7214)
!7220 = !DILocation(line: 2168, column: 3, scope: !7214)
!7221 = !DILocation(line: 2167, column: 40, scope: !7214)
!7222 = !DILabel(scope: !7152, name: "out_post_req", file: !3, line: 2170)
!7223 = !DILocation(line: 2170, column: 1, scope: !7152)
!7224 = !DILocation(line: 2171, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 2171, column: 6)
!7226 = !DILocation(line: 2171, column: 6, scope: !7152)
!7227 = !DILocation(line: 2172, column: 16, scope: !7225)
!7228 = !DILocation(line: 2172, column: 23, scope: !7225)
!7229 = !DILocation(line: 2172, column: 29, scope: !7225)
!7230 = !DILocation(line: 2172, column: 33, scope: !7225)
!7231 = !DILocation(line: 2172, column: 38, scope: !7225)
!7232 = !DILocation(line: 2172, column: 3, scope: !7225)
!7233 = !DILocation(line: 2174, column: 9, scope: !7152)
!7234 = !DILocation(line: 2174, column: 2, scope: !7152)
!7235 = distinct !DISubprogram(name: "mmc_blk_exit", scope: !3, file: !3, line: 3057, type: !2053, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7236 = !DILocation(line: 3059, column: 2, scope: !7235)
!7237 = !DILocation(line: 3060, column: 2, scope: !7235)
!7238 = !DILocation(line: 3061, column: 27, scope: !7235)
!7239 = !DILocation(line: 3061, column: 2, scope: !7235)
!7240 = !DILocation(line: 3062, column: 2, scope: !7235)
!7241 = !DILocation(line: 3063, column: 1, scope: !7235)
!7242 = distinct !DISubprogram(name: "mmc_blk_init", scope: !3, file: !3, line: 3018, type: !7243, scopeLine: 3019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7243 = !DISubroutineType(types: !7244)
!7244 = !{!324}
!7245 = !DILocalVariable(name: "res", scope: !7242, file: !3, line: 3020, type: !324)
!7246 = !DILocation(line: 3020, column: 6, scope: !7242)
!7247 = !DILocation(line: 3022, column: 9, scope: !7242)
!7248 = !DILocation(line: 3022, column: 7, scope: !7242)
!7249 = !DILocation(line: 3023, column: 6, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3023, column: 6)
!7251 = !DILocation(line: 3023, column: 10, scope: !7250)
!7252 = !DILocation(line: 3023, column: 6, scope: !7242)
!7253 = !DILocation(line: 3024, column: 3, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 3023, column: 15)
!7255 = !DILocation(line: 3025, column: 10, scope: !7254)
!7256 = !DILocation(line: 3025, column: 3, scope: !7254)
!7257 = !DILocation(line: 3027, column: 8, scope: !7242)
!7258 = !DILocation(line: 3027, column: 6, scope: !7242)
!7259 = !DILocation(line: 3028, column: 6, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3028, column: 6)
!7261 = !DILocation(line: 3028, column: 10, scope: !7260)
!7262 = !DILocation(line: 3028, column: 6, scope: !7242)
!7263 = !DILocation(line: 3029, column: 3, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 3028, column: 15)
!7265 = !DILocation(line: 3030, column: 3, scope: !7264)
!7266 = !DILocation(line: 3033, column: 6, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3033, column: 6)
!7268 = !DILocation(line: 3033, column: 20, scope: !7267)
!7269 = !DILocation(line: 3033, column: 6, scope: !7242)
!7270 = !DILocation(line: 3034, column: 3, scope: !7267)
!7271 = !DILocalVariable(name: "__UNIQUE_ID___x321", scope: !7272, file: !3, line: 3036, type: !324)
!7272 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3036, column: 16)
!7273 = !DILocation(line: 3036, column: 16, scope: !7272)
!7274 = !DILocalVariable(name: "__UNIQUE_ID___y322", scope: !7272, file: !3, line: 3036, type: !324)
!7275 = !DILocation(line: 3036, column: 14, scope: !7242)
!7276 = !DILocation(line: 3038, column: 8, scope: !7242)
!7277 = !DILocation(line: 3038, column: 6, scope: !7242)
!7278 = !DILocation(line: 3039, column: 6, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3039, column: 6)
!7280 = !DILocation(line: 3039, column: 6, scope: !7242)
!7281 = !DILocation(line: 3040, column: 3, scope: !7279)
!7282 = !DILocation(line: 3042, column: 8, scope: !7242)
!7283 = !DILocation(line: 3042, column: 6, scope: !7242)
!7284 = !DILocation(line: 3043, column: 6, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 3043, column: 6)
!7286 = !DILocation(line: 3043, column: 6, scope: !7242)
!7287 = !DILocation(line: 3044, column: 3, scope: !7285)
!7288 = !DILocation(line: 3046, column: 2, scope: !7242)
!7289 = !DILabel(scope: !7242, name: "out_blkdev_unreg", file: !3, line: 3048)
!7290 = !DILocation(line: 3048, column: 1, scope: !7242)
!7291 = !DILocation(line: 3049, column: 2, scope: !7242)
!7292 = !DILabel(scope: !7242, name: "out_chrdev_unreg", file: !3, line: 3050)
!7293 = !DILocation(line: 3050, column: 1, scope: !7242)
!7294 = !DILocation(line: 3051, column: 27, scope: !7242)
!7295 = !DILocation(line: 3051, column: 2, scope: !7242)
!7296 = !DILabel(scope: !7242, name: "out_bus_unreg", file: !3, line: 3052)
!7297 = !DILocation(line: 3052, column: 1, scope: !7242)
!7298 = !DILocation(line: 3053, column: 2, scope: !7242)
!7299 = !DILocation(line: 3054, column: 9, scope: !7242)
!7300 = !DILocation(line: 3054, column: 2, scope: !7242)
!7301 = !DILocation(line: 3055, column: 1, scope: !7242)
!7302 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !114, file: !114, line: 655, type: !7303, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{!257, !4813}
!7305 = !DILocalVariable(name: "dev", arg: 1, scope: !7302, file: !114, line: 655, type: !4813)
!7306 = !DILocation(line: 655, column: 58, scope: !7302)
!7307 = !DILocation(line: 657, column: 9, scope: !7302)
!7308 = !DILocation(line: 657, column: 14, scope: !7302)
!7309 = !DILocation(line: 657, column: 2, scope: !7302)
!7310 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7311, file: !7311, line: 666, type: !7312, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7311 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!389}
!7314 = !DILocalVariable(name: "f", scope: !7310, file: !7311, line: 668, type: !389)
!7315 = !DILocation(line: 668, column: 16, scope: !7310)
!7316 = !DILocation(line: 670, column: 6, scope: !7310)
!7317 = !DILocation(line: 670, column: 4, scope: !7310)
!7318 = !DILocation(line: 671, column: 2, scope: !7310)
!7319 = !DILocation(line: 672, column: 9, scope: !7310)
!7320 = !DILocation(line: 672, column: 2, scope: !7310)
!7321 = distinct !DISubprogram(name: "mmc_tot_in_flight", scope: !128, file: !128, line: 111, type: !7322, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{!324, !258}
!7324 = !DILocalVariable(name: "mq", arg: 1, scope: !7321, file: !128, line: 111, type: !258)
!7325 = !DILocation(line: 111, column: 55, scope: !7321)
!7326 = !DILocation(line: 113, column: 9, scope: !7321)
!7327 = !DILocation(line: 113, column: 13, scope: !7321)
!7328 = !DILocation(line: 114, column: 9, scope: !7321)
!7329 = !DILocation(line: 114, column: 13, scope: !7321)
!7330 = !DILocation(line: 113, column: 39, scope: !7321)
!7331 = !DILocation(line: 115, column: 9, scope: !7321)
!7332 = !DILocation(line: 115, column: 13, scope: !7321)
!7333 = !DILocation(line: 114, column: 39, scope: !7321)
!7334 = !DILocation(line: 113, column: 2, scope: !7321)
!7335 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7311, file: !7311, line: 646, type: !7312, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7336 = !DILocalVariable(name: "__ret", scope: !7337, file: !7311, line: 648, type: !389)
!7337 = distinct !DILexicalBlock(scope: !7335, file: !7311, line: 648, column: 9)
!7338 = !DILocation(line: 648, column: 9, scope: !7337)
!7339 = !DILocalVariable(name: "__edi", scope: !7337, file: !7311, line: 648, type: !389)
!7340 = !DILocalVariable(name: "__esi", scope: !7337, file: !7311, line: 648, type: !389)
!7341 = !DILocalVariable(name: "__edx", scope: !7337, file: !7311, line: 648, type: !389)
!7342 = !DILocalVariable(name: "__ecx", scope: !7337, file: !7311, line: 648, type: !389)
!7343 = !DILocalVariable(name: "__eax", scope: !7337, file: !7311, line: 648, type: !389)
!7344 = !DILocation(line: 648, column: 9, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7346, file: !7311, line: 648, column: 9)
!7346 = distinct !DILexicalBlock(scope: !7337, file: !7311, line: 648, column: 9)
!7347 = !{i32 -2145691111, i32 -2145688796, i32 -2145688562, i32 -2145688511, i32 -2145688483, i32 -2145688458, i32 -2145688774, i32 -2145688761, i32 -2145688323, i32 -2145688204, i32 -2145688669, i32 -2145688642, i32 -2145688614, i32 -2145688584}
!7348 = !DILocalVariable(name: "__mask", scope: !7349, file: !7311, line: 648, type: !389)
!7349 = distinct !DILexicalBlock(scope: !7345, file: !7311, line: 648, column: 9)
!7350 = !DILocation(line: 648, column: 9, scope: !7349)
!7351 = !DILocation(line: 648, column: 9, scope: !7346)
!7352 = !DILocation(line: 648, column: 2, scope: !7335)
!7353 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7311, file: !7311, line: 656, type: !2053, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7354 = !DILocalVariable(name: "__edi", scope: !7355, file: !7311, line: 658, type: !389)
!7355 = distinct !DILexicalBlock(scope: !7353, file: !7311, line: 658, column: 2)
!7356 = !DILocation(line: 658, column: 2, scope: !7355)
!7357 = !DILocalVariable(name: "__esi", scope: !7355, file: !7311, line: 658, type: !389)
!7358 = !DILocalVariable(name: "__edx", scope: !7355, file: !7311, line: 658, type: !389)
!7359 = !DILocalVariable(name: "__ecx", scope: !7355, file: !7311, line: 658, type: !389)
!7360 = !DILocalVariable(name: "__eax", scope: !7355, file: !7311, line: 658, type: !389)
!7361 = !{i32 -2145684017, i32 -2145683285, i32 -2145683051, i32 -2145683000, i32 -2145682972, i32 -2145682947, i32 -2145683263, i32 -2145683250, i32 -2145682812, i32 -2145682693, i32 -2145683158, i32 -2145683131, i32 -2145683103, i32 -2145683073}
!7362 = !DILocation(line: 659, column: 1, scope: !7353)
!7363 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7311, file: !7311, line: 651, type: !7364, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{null, !389}
!7366 = !DILocalVariable(name: "f", arg: 1, scope: !7363, file: !7311, line: 651, type: !389)
!7367 = !DILocation(line: 651, column: 65, scope: !7363)
!7368 = !DILocalVariable(name: "__edi", scope: !7369, file: !7311, line: 653, type: !389)
!7369 = distinct !DILexicalBlock(scope: !7363, file: !7311, line: 653, column: 2)
!7370 = !DILocation(line: 653, column: 2, scope: !7369)
!7371 = !DILocalVariable(name: "__esi", scope: !7369, file: !7311, line: 653, type: !389)
!7372 = !DILocalVariable(name: "__edx", scope: !7369, file: !7311, line: 653, type: !389)
!7373 = !DILocalVariable(name: "__ecx", scope: !7369, file: !7311, line: 653, type: !389)
!7374 = !DILocalVariable(name: "__eax", scope: !7369, file: !7311, line: 653, type: !389)
!7375 = !{i32 -2145686644, i32 -2145685894, i32 -2145685660, i32 -2145685609, i32 -2145685581, i32 -2145685556, i32 -2145685872, i32 -2145685859, i32 -2145685421, i32 -2145685302, i32 -2145685767, i32 -2145685740, i32 -2145685712, i32 -2145685682}
!7376 = !DILocation(line: 654, column: 1, scope: !7363)
!7377 = distinct !DISubprogram(name: "blk_rq_bytes", scope: !43, file: !43, line: 988, type: !7378, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7378 = !DISubroutineType(types: !7379)
!7379 = !{!7, !7380}
!7380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7381, size: 64)
!7381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2387)
!7382 = !DILocalVariable(name: "rq", arg: 1, scope: !7377, file: !43, line: 988, type: !7380)
!7383 = !DILocation(line: 988, column: 63, scope: !7377)
!7384 = !DILocation(line: 990, column: 9, scope: !7377)
!7385 = !DILocation(line: 990, column: 13, scope: !7377)
!7386 = !DILocation(line: 990, column: 2, scope: !7377)
!7387 = distinct !DISubprogram(name: "blk_mq_rq_to_pdu", scope: !2396, file: !2396, line: 567, type: !7388, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7388 = !DISubroutineType(types: !7389)
!7389 = !{!257, !2386}
!7390 = !DILocalVariable(name: "rq", arg: 1, scope: !7387, file: !2396, line: 567, type: !2386)
!7391 = !DILocation(line: 567, column: 54, scope: !7387)
!7392 = !DILocation(line: 569, column: 9, scope: !7387)
!7393 = !DILocation(line: 569, column: 12, scope: !7387)
!7394 = !DILocation(line: 569, column: 2, scope: !7387)
!7395 = distinct !DISubprogram(name: "mmc_blk_eval_resp_error", scope: !3, file: !3, line: 1188, type: !7396, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{null, !6109}
!7398 = !DILocalVariable(name: "brq", arg: 1, scope: !7395, file: !3, line: 1188, type: !6109)
!7399 = !DILocation(line: 1188, column: 61, scope: !7395)
!7400 = !DILocalVariable(name: "val", scope: !7395, file: !3, line: 1190, type: !480)
!7401 = !DILocation(line: 1190, column: 6, scope: !7395)
!7402 = !DILocation(line: 1218, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 1218, column: 6)
!7404 = !DILocation(line: 1218, column: 12, scope: !7403)
!7405 = !DILocation(line: 1218, column: 17, scope: !7403)
!7406 = !DILocation(line: 1218, column: 6, scope: !7395)
!7407 = !DILocalVariable(name: "oor_with_open_end", scope: !7408, file: !3, line: 1219, type: !555)
!7408 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 1218, column: 24)
!7409 = !DILocation(line: 1219, column: 8, scope: !7408)
!7410 = !DILocation(line: 1222, column: 9, scope: !7408)
!7411 = !DILocation(line: 1222, column: 14, scope: !7408)
!7412 = !DILocation(line: 1222, column: 19, scope: !7408)
!7413 = !DILocation(line: 1222, column: 27, scope: !7408)
!7414 = !DILocation(line: 1222, column: 7, scope: !7408)
!7415 = !DILocation(line: 1223, column: 23, scope: !7408)
!7416 = !DILocation(line: 1223, column: 27, scope: !7408)
!7417 = !DILocation(line: 1223, column: 45, scope: !7408)
!7418 = !DILocation(line: 1223, column: 49, scope: !7408)
!7419 = !DILocation(line: 1223, column: 54, scope: !7408)
!7420 = !DILocation(line: 1223, column: 58, scope: !7408)
!7421 = !DILocation(line: 1223, column: 48, scope: !7408)
!7422 = !DILocation(line: 0, scope: !7408)
!7423 = !DILocation(line: 1223, column: 21, scope: !7408)
!7424 = !DILocation(line: 1225, column: 7, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 1225, column: 7)
!7426 = !DILocation(line: 1225, column: 11, scope: !7425)
!7427 = !DILocation(line: 1225, column: 15, scope: !7425)
!7428 = !DILocation(line: 1225, column: 7, scope: !7408)
!7429 = !DILocation(line: 1226, column: 4, scope: !7425)
!7430 = !DILocation(line: 1226, column: 9, scope: !7425)
!7431 = !DILocation(line: 1226, column: 14, scope: !7425)
!7432 = !DILocation(line: 1226, column: 20, scope: !7425)
!7433 = !DILocation(line: 1227, column: 2, scope: !7408)
!7434 = !DILocation(line: 1228, column: 1, scope: !7395)
!7435 = distinct !DISubprogram(name: "op_is_write", scope: !160, file: !160, line: 459, type: !7436, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!555, !7}
!7438 = !DILocalVariable(name: "op", arg: 1, scope: !7435, file: !160, line: 459, type: !7)
!7439 = !DILocation(line: 459, column: 45, scope: !7435)
!7440 = !DILocation(line: 461, column: 10, scope: !7435)
!7441 = !DILocation(line: 461, column: 13, scope: !7435)
!7442 = !DILocation(line: 461, column: 9, scope: !7435)
!7443 = !DILocation(line: 461, column: 2, scope: !7435)
!7444 = distinct !DISubprogram(name: "mmc_blk_status_error", scope: !3, file: !3, line: 1686, type: !7445, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{!555, !2386, !480}
!7447 = !DILocalVariable(name: "req", arg: 1, scope: !7444, file: !3, line: 1686, type: !2386)
!7448 = !DILocation(line: 1686, column: 50, scope: !7444)
!7449 = !DILocalVariable(name: "status", arg: 2, scope: !7444, file: !3, line: 1686, type: !480)
!7450 = !DILocation(line: 1686, column: 59, scope: !7444)
!7451 = !DILocalVariable(name: "mqrq", scope: !7444, file: !3, line: 1688, type: !5457)
!7452 = !DILocation(line: 1688, column: 24, scope: !7444)
!7453 = !DILocation(line: 1688, column: 52, scope: !7444)
!7454 = !DILocation(line: 1688, column: 31, scope: !7444)
!7455 = !DILocalVariable(name: "brq", scope: !7444, file: !3, line: 1689, type: !6109)
!7456 = !DILocation(line: 1689, column: 26, scope: !7444)
!7457 = !DILocation(line: 1689, column: 33, scope: !7444)
!7458 = !DILocation(line: 1689, column: 39, scope: !7444)
!7459 = !DILocalVariable(name: "mq", scope: !7444, file: !3, line: 1690, type: !258)
!7460 = !DILocation(line: 1690, column: 20, scope: !7444)
!7461 = !DILocation(line: 1690, column: 25, scope: !7444)
!7462 = !DILocation(line: 1690, column: 30, scope: !7444)
!7463 = !DILocation(line: 1690, column: 33, scope: !7444)
!7464 = !DILocalVariable(name: "stop_err_bits", scope: !7444, file: !3, line: 1691, type: !480)
!7465 = !DILocation(line: 1691, column: 6, scope: !7444)
!7466 = !DILocation(line: 1693, column: 6, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 1693, column: 6)
!7468 = !DILocation(line: 1693, column: 6, scope: !7444)
!7469 = !DILocation(line: 1694, column: 3, scope: !7467)
!7470 = !DILocation(line: 1696, column: 40, scope: !7444)
!7471 = !DILocation(line: 1696, column: 18, scope: !7444)
!7472 = !DILocation(line: 1696, column: 16, scope: !7444)
!7473 = !DILocation(line: 1698, column: 9, scope: !7444)
!7474 = !DILocation(line: 1698, column: 14, scope: !7444)
!7475 = !DILocation(line: 1698, column: 18, scope: !7444)
!7476 = !DILocation(line: 1698, column: 27, scope: !7444)
!7477 = !DILocation(line: 1698, column: 43, scope: !7444)
!7478 = !DILocation(line: 1699, column: 9, scope: !7444)
!7479 = !DILocation(line: 1699, column: 14, scope: !7444)
!7480 = !DILocation(line: 1699, column: 19, scope: !7444)
!7481 = !DILocation(line: 1699, column: 29, scope: !7444)
!7482 = !DILocation(line: 1699, column: 27, scope: !7444)
!7483 = !DILocation(line: 1699, column: 43, scope: !7444)
!7484 = !DILocation(line: 1700, column: 9, scope: !7444)
!7485 = !DILocation(line: 1700, column: 29, scope: !7444)
!7486 = !DILocation(line: 1700, column: 27, scope: !7444)
!7487 = !DILocation(line: 1700, column: 43, scope: !7444)
!7488 = !DILocation(line: 1701, column: 10, scope: !7444)
!7489 = !DILocation(line: 1701, column: 27, scope: !7444)
!7490 = !DILocation(line: 1701, column: 36, scope: !7444)
!7491 = !DILocation(line: 1701, column: 59, scope: !7444)
!7492 = !DILocation(line: 1701, column: 40, scope: !7444)
!7493 = !DILocation(line: 1701, column: 39, scope: !7444)
!7494 = !DILocation(line: 0, scope: !7444)
!7495 = !DILocation(line: 1698, column: 2, scope: !7444)
!7496 = !DILocation(line: 1702, column: 1, scope: !7444)
!7497 = distinct !DISubprogram(name: "mmc_ready_for_data", scope: !7498, file: !7498, line: 164, type: !7499, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7498 = !DIFile(filename: "./include/linux/mmc/mmc.h", directory: "/home/lizy2001/genbc/linux")
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!555, !480}
!7501 = !DILocalVariable(name: "status", arg: 1, scope: !7497, file: !7498, line: 164, type: !480)
!7502 = !DILocation(line: 164, column: 43, scope: !7497)
!7503 = !DILocation(line: 170, column: 9, scope: !7497)
!7504 = !DILocation(line: 170, column: 16, scope: !7497)
!7505 = !DILocation(line: 170, column: 36, scope: !7497)
!7506 = !DILocation(line: 171, column: 9, scope: !7497)
!7507 = !DILocation(line: 171, column: 34, scope: !7497)
!7508 = !DILocation(line: 0, scope: !7497)
!7509 = !DILocation(line: 170, column: 2, scope: !7497)
!7510 = distinct !DISubprogram(name: "mmc_blk_fix_state", scope: !3, file: !3, line: 1598, type: !7511, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{!324, !262, !2386}
!7513 = !DILocalVariable(name: "card", arg: 1, scope: !7510, file: !3, line: 1598, type: !262)
!7514 = !DILocation(line: 1598, column: 47, scope: !7510)
!7515 = !DILocalVariable(name: "req", arg: 2, scope: !7510, file: !3, line: 1598, type: !2386)
!7516 = !DILocation(line: 1598, column: 69, scope: !7510)
!7517 = !DILocalVariable(name: "mqrq", scope: !7510, file: !3, line: 1600, type: !5457)
!7518 = !DILocation(line: 1600, column: 24, scope: !7510)
!7519 = !DILocation(line: 1600, column: 52, scope: !7510)
!7520 = !DILocation(line: 1600, column: 31, scope: !7510)
!7521 = !DILocalVariable(name: "brq", scope: !7510, file: !3, line: 1601, type: !6109)
!7522 = !DILocation(line: 1601, column: 26, scope: !7510)
!7523 = !DILocation(line: 1601, column: 33, scope: !7510)
!7524 = !DILocation(line: 1601, column: 39, scope: !7510)
!7525 = !DILocalVariable(name: "timeout", scope: !7510, file: !3, line: 1602, type: !7)
!7526 = !DILocation(line: 1602, column: 15, scope: !7510)
!7527 = !DILocation(line: 1602, column: 49, scope: !7510)
!7528 = !DILocation(line: 1602, column: 55, scope: !7510)
!7529 = !DILocation(line: 1602, column: 62, scope: !7510)
!7530 = !DILocation(line: 1602, column: 67, scope: !7510)
!7531 = !DILocation(line: 1602, column: 25, scope: !7510)
!7532 = !DILocalVariable(name: "err", scope: !7510, file: !3, line: 1603, type: !324)
!7533 = !DILocation(line: 1603, column: 6, scope: !7510)
!7534 = !DILocation(line: 1605, column: 22, scope: !7510)
!7535 = !DILocation(line: 1605, column: 28, scope: !7510)
!7536 = !DILocation(line: 1605, column: 2, scope: !7510)
!7537 = !DILocation(line: 1607, column: 20, scope: !7510)
!7538 = !DILocation(line: 1607, column: 26, scope: !7510)
!7539 = !DILocation(line: 1607, column: 2, scope: !7510)
!7540 = !DILocation(line: 1609, column: 25, scope: !7510)
!7541 = !DILocation(line: 1609, column: 31, scope: !7510)
!7542 = !DILocation(line: 1609, column: 8, scope: !7510)
!7543 = !DILocation(line: 1609, column: 6, scope: !7510)
!7544 = !DILocation(line: 1611, column: 21, scope: !7510)
!7545 = !DILocation(line: 1611, column: 27, scope: !7510)
!7546 = !DILocation(line: 1611, column: 2, scope: !7510)
!7547 = !DILocation(line: 1613, column: 9, scope: !7510)
!7548 = !DILocation(line: 1613, column: 2, scope: !7510)
!7549 = distinct !DISubprogram(name: "mmc_blk_cmd_started", scope: !3, file: !3, line: 1704, type: !6107, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7550 = !DILocalVariable(name: "brq", arg: 1, scope: !7549, file: !3, line: 1704, type: !6109)
!7551 = !DILocation(line: 1704, column: 64, scope: !7549)
!7552 = !DILocation(line: 1706, column: 10, scope: !7549)
!7553 = !DILocation(line: 1706, column: 15, scope: !7549)
!7554 = !DILocation(line: 1706, column: 19, scope: !7549)
!7555 = !DILocation(line: 1706, column: 25, scope: !7549)
!7556 = !DILocation(line: 1706, column: 29, scope: !7549)
!7557 = !DILocation(line: 1706, column: 34, scope: !7549)
!7558 = !DILocation(line: 1706, column: 38, scope: !7549)
!7559 = !DILocation(line: 1706, column: 44, scope: !7549)
!7560 = !DILocation(line: 1707, column: 11, scope: !7549)
!7561 = !DILocation(line: 1707, column: 16, scope: !7549)
!7562 = !DILocation(line: 1707, column: 20, scope: !7549)
!7563 = !DILocation(line: 1707, column: 28, scope: !7549)
!7564 = !DILocation(line: 1707, column: 9, scope: !7549)
!7565 = !DILocation(line: 0, scope: !7549)
!7566 = !DILocation(line: 1706, column: 2, scope: !7549)
!7567 = distinct !DISubprogram(name: "mmc_sd_num_wr_blocks", scope: !3, file: !3, line: 853, type: !7568, scopeLine: 854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{!324, !262, !1589}
!7570 = !DILocalVariable(name: "s", arg: 1, scope: !7571, file: !153, line: 445, type: !1115)
!7571 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !153, file: !153, line: 445, type: !7572, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!257, !1115, !861, !386}
!7574 = !DILocation(line: 445, column: 72, scope: !7571, inlinedAt: !7575)
!7575 = distinct !DILocation(line: 552, column: 10, scope: !7576, inlinedAt: !7581)
!7576 = distinct !DILexicalBlock(scope: !7577, file: !153, line: 540, column: 34)
!7577 = distinct !DILexicalBlock(scope: !7578, file: !153, line: 540, column: 6)
!7578 = distinct !DISubprogram(name: "kmalloc", scope: !153, file: !153, line: 538, type: !7579, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7579 = !DISubroutineType(types: !7580)
!7580 = !{!257, !386, !861}
!7581 = distinct !DILocation(line: 891, column: 11, scope: !7567)
!7582 = !DILocalVariable(name: "flags", arg: 2, scope: !7571, file: !153, line: 446, type: !861)
!7583 = !DILocation(line: 446, column: 9, scope: !7571, inlinedAt: !7575)
!7584 = !DILocalVariable(name: "size", arg: 3, scope: !7571, file: !153, line: 446, type: !386)
!7585 = !DILocation(line: 446, column: 23, scope: !7571, inlinedAt: !7575)
!7586 = !DILocalVariable(name: "ret", scope: !7571, file: !153, line: 448, type: !257)
!7587 = !DILocation(line: 448, column: 8, scope: !7571, inlinedAt: !7575)
!7588 = !DILocalVariable(name: "flags", arg: 1, scope: !7589, file: !153, line: 318, type: !861)
!7589 = distinct !DISubprogram(name: "kmalloc_type", scope: !153, file: !153, line: 318, type: !7590, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7590 = !DISubroutineType(types: !7591)
!7591 = !{!152, !861}
!7592 = !DILocation(line: 318, column: 67, scope: !7589, inlinedAt: !7593)
!7593 = distinct !DILocation(line: 553, column: 20, scope: !7576, inlinedAt: !7581)
!7594 = !DILocalVariable(name: "size", arg: 1, scope: !7595, file: !153, line: 346, type: !386)
!7595 = distinct !DISubprogram(name: "kmalloc_index", scope: !153, file: !153, line: 346, type: !7596, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7596 = !DISubroutineType(types: !7597)
!7597 = !{!7, !386}
!7598 = !DILocation(line: 346, column: 58, scope: !7595, inlinedAt: !7599)
!7599 = distinct !DILocation(line: 547, column: 11, scope: !7576, inlinedAt: !7581)
!7600 = !DILocalVariable(name: "size", arg: 1, scope: !7601, file: !153, line: 472, type: !386)
!7601 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !153, file: !153, line: 472, type: !7602, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7602 = !DISubroutineType(types: !7603)
!7603 = !{!257, !386, !861, !7}
!7604 = !DILocation(line: 472, column: 28, scope: !7601, inlinedAt: !7605)
!7605 = distinct !DILocation(line: 481, column: 9, scope: !7606, inlinedAt: !7607)
!7606 = distinct !DISubprogram(name: "kmalloc_large", scope: !153, file: !153, line: 478, type: !7579, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7607 = distinct !DILocation(line: 545, column: 11, scope: !7608, inlinedAt: !7581)
!7608 = distinct !DILexicalBlock(scope: !7576, file: !153, line: 544, column: 7)
!7609 = !DILocalVariable(name: "flags", arg: 2, scope: !7601, file: !153, line: 472, type: !861)
!7610 = !DILocation(line: 472, column: 40, scope: !7601, inlinedAt: !7605)
!7611 = !DILocalVariable(name: "order", arg: 3, scope: !7601, file: !153, line: 472, type: !7)
!7612 = !DILocation(line: 472, column: 60, scope: !7601, inlinedAt: !7605)
!7613 = !DILocalVariable(name: "size", arg: 1, scope: !7606, file: !153, line: 478, type: !386)
!7614 = !DILocation(line: 478, column: 51, scope: !7606, inlinedAt: !7607)
!7615 = !DILocalVariable(name: "flags", arg: 2, scope: !7606, file: !153, line: 478, type: !861)
!7616 = !DILocation(line: 478, column: 63, scope: !7606, inlinedAt: !7607)
!7617 = !DILocalVariable(name: "order", scope: !7606, file: !153, line: 480, type: !7)
!7618 = !DILocation(line: 480, column: 15, scope: !7606, inlinedAt: !7607)
!7619 = !DILocalVariable(name: "size", arg: 1, scope: !7578, file: !153, line: 538, type: !386)
!7620 = !DILocation(line: 538, column: 45, scope: !7578, inlinedAt: !7581)
!7621 = !DILocalVariable(name: "flags", arg: 2, scope: !7578, file: !153, line: 538, type: !861)
!7622 = !DILocation(line: 538, column: 57, scope: !7578, inlinedAt: !7581)
!7623 = !DILocalVariable(name: "index", scope: !7576, file: !153, line: 542, type: !7)
!7624 = !DILocation(line: 542, column: 16, scope: !7576, inlinedAt: !7581)
!7625 = !DILocalVariable(name: "card", arg: 1, scope: !7567, file: !3, line: 853, type: !262)
!7626 = !DILocation(line: 853, column: 50, scope: !7567)
!7627 = !DILocalVariable(name: "written_blocks", arg: 2, scope: !7567, file: !3, line: 853, type: !1589)
!7628 = !DILocation(line: 853, column: 61, scope: !7567)
!7629 = !DILocalVariable(name: "err", scope: !7567, file: !3, line: 855, type: !324)
!7630 = !DILocation(line: 855, column: 6, scope: !7567)
!7631 = !DILocalVariable(name: "result", scope: !7567, file: !3, line: 856, type: !480)
!7632 = !DILocation(line: 856, column: 6, scope: !7567)
!7633 = !DILocalVariable(name: "blocks", scope: !7567, file: !3, line: 857, type: !7634)
!7634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!7635 = !DILocation(line: 857, column: 10, scope: !7567)
!7636 = !DILocalVariable(name: "mrq", scope: !7567, file: !3, line: 859, type: !4934)
!7637 = !DILocation(line: 859, column: 21, scope: !7567)
!7638 = !DILocalVariable(name: "cmd", scope: !7567, file: !3, line: 860, type: !4939)
!7639 = !DILocation(line: 860, column: 21, scope: !7567)
!7640 = !DILocalVariable(name: "data", scope: !7567, file: !3, line: 861, type: !4951)
!7641 = !DILocation(line: 861, column: 18, scope: !7567)
!7642 = !DILocalVariable(name: "sg", scope: !7567, file: !3, line: 863, type: !4967)
!7643 = !DILocation(line: 863, column: 21, scope: !7567)
!7644 = !DILocation(line: 865, column: 6, scope: !7567)
!7645 = !DILocation(line: 865, column: 13, scope: !7567)
!7646 = !DILocation(line: 866, column: 12, scope: !7567)
!7647 = !DILocation(line: 866, column: 18, scope: !7567)
!7648 = !DILocation(line: 866, column: 22, scope: !7567)
!7649 = !DILocation(line: 866, column: 6, scope: !7567)
!7650 = !DILocation(line: 866, column: 10, scope: !7567)
!7651 = !DILocation(line: 867, column: 6, scope: !7567)
!7652 = !DILocation(line: 867, column: 12, scope: !7567)
!7653 = !DILocation(line: 869, column: 25, scope: !7567)
!7654 = !DILocation(line: 869, column: 31, scope: !7567)
!7655 = !DILocation(line: 869, column: 8, scope: !7567)
!7656 = !DILocation(line: 869, column: 6, scope: !7567)
!7657 = !DILocation(line: 870, column: 6, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 870, column: 6)
!7659 = !DILocation(line: 870, column: 6, scope: !7567)
!7660 = !DILocation(line: 871, column: 10, scope: !7658)
!7661 = !DILocation(line: 871, column: 3, scope: !7658)
!7662 = !DILocation(line: 872, column: 7, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 872, column: 6)
!7664 = !DILocation(line: 872, column: 35, scope: !7663)
!7665 = !DILocation(line: 872, column: 44, scope: !7663)
!7666 = !DILocation(line: 872, column: 40, scope: !7663)
!7667 = !DILocation(line: 872, column: 52, scope: !7663)
!7668 = !DILocation(line: 872, column: 6, scope: !7567)
!7669 = !DILocation(line: 873, column: 3, scope: !7663)
!7670 = !DILocation(line: 875, column: 2, scope: !7567)
!7671 = !DILocation(line: 877, column: 6, scope: !7567)
!7672 = !DILocation(line: 877, column: 13, scope: !7567)
!7673 = !DILocation(line: 878, column: 6, scope: !7567)
!7674 = !DILocation(line: 878, column: 10, scope: !7567)
!7675 = !DILocation(line: 879, column: 6, scope: !7567)
!7676 = !DILocation(line: 879, column: 12, scope: !7567)
!7677 = !DILocation(line: 881, column: 7, scope: !7567)
!7678 = !DILocation(line: 881, column: 13, scope: !7567)
!7679 = !DILocation(line: 882, column: 7, scope: !7567)
!7680 = !DILocation(line: 882, column: 14, scope: !7567)
!7681 = !DILocation(line: 883, column: 7, scope: !7567)
!7682 = !DILocation(line: 883, column: 13, scope: !7567)
!7683 = !DILocation(line: 884, column: 7, scope: !7567)
!7684 = !DILocation(line: 884, column: 10, scope: !7567)
!7685 = !DILocation(line: 885, column: 7, scope: !7567)
!7686 = !DILocation(line: 885, column: 14, scope: !7567)
!7687 = !DILocation(line: 886, column: 30, scope: !7567)
!7688 = !DILocation(line: 886, column: 2, scope: !7567)
!7689 = !DILocation(line: 888, column: 6, scope: !7567)
!7690 = !DILocation(line: 888, column: 10, scope: !7567)
!7691 = !DILocation(line: 889, column: 6, scope: !7567)
!7692 = !DILocation(line: 889, column: 11, scope: !7567)
!7693 = !DILocation(line: 540, column: 27, scope: !7577, inlinedAt: !7581)
!7694 = !DILocation(line: 540, column: 6, scope: !7577, inlinedAt: !7581)
!7695 = !DILocation(line: 540, column: 6, scope: !7578, inlinedAt: !7581)
!7696 = !DILocation(line: 544, column: 7, scope: !7608, inlinedAt: !7581)
!7697 = !DILocation(line: 544, column: 12, scope: !7608, inlinedAt: !7581)
!7698 = !DILocation(line: 544, column: 7, scope: !7576, inlinedAt: !7581)
!7699 = !DILocation(line: 545, column: 25, scope: !7608, inlinedAt: !7581)
!7700 = !DILocation(line: 545, column: 31, scope: !7608, inlinedAt: !7581)
!7701 = !DILocation(line: 480, column: 33, scope: !7606, inlinedAt: !7607)
!7702 = !DILocation(line: 480, column: 23, scope: !7606, inlinedAt: !7607)
!7703 = !DILocation(line: 481, column: 29, scope: !7606, inlinedAt: !7607)
!7704 = !DILocation(line: 481, column: 35, scope: !7606, inlinedAt: !7607)
!7705 = !DILocation(line: 481, column: 42, scope: !7606, inlinedAt: !7607)
!7706 = !DILocation(line: 474, column: 23, scope: !7601, inlinedAt: !7605)
!7707 = !DILocation(line: 474, column: 29, scope: !7601, inlinedAt: !7605)
!7708 = !DILocation(line: 474, column: 36, scope: !7601, inlinedAt: !7605)
!7709 = !DILocation(line: 474, column: 9, scope: !7601, inlinedAt: !7605)
!7710 = !DILocation(line: 545, column: 4, scope: !7608, inlinedAt: !7581)
!7711 = !DILocation(line: 547, column: 25, scope: !7576, inlinedAt: !7581)
!7712 = !DILocation(line: 348, column: 7, scope: !7713, inlinedAt: !7599)
!7713 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 348, column: 6)
!7714 = !DILocation(line: 348, column: 6, scope: !7595, inlinedAt: !7599)
!7715 = !DILocation(line: 349, column: 3, scope: !7713, inlinedAt: !7599)
!7716 = !DILocation(line: 351, column: 6, scope: !7717, inlinedAt: !7599)
!7717 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 351, column: 6)
!7718 = !DILocation(line: 351, column: 11, scope: !7717, inlinedAt: !7599)
!7719 = !DILocation(line: 351, column: 6, scope: !7595, inlinedAt: !7599)
!7720 = !DILocation(line: 352, column: 3, scope: !7717, inlinedAt: !7599)
!7721 = !DILocation(line: 354, column: 32, scope: !7722, inlinedAt: !7599)
!7722 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 354, column: 6)
!7723 = !DILocation(line: 354, column: 37, scope: !7722, inlinedAt: !7599)
!7724 = !DILocation(line: 354, column: 42, scope: !7722, inlinedAt: !7599)
!7725 = !DILocation(line: 354, column: 45, scope: !7722, inlinedAt: !7599)
!7726 = !DILocation(line: 354, column: 50, scope: !7722, inlinedAt: !7599)
!7727 = !DILocation(line: 354, column: 6, scope: !7595, inlinedAt: !7599)
!7728 = !DILocation(line: 355, column: 3, scope: !7722, inlinedAt: !7599)
!7729 = !DILocation(line: 356, column: 32, scope: !7730, inlinedAt: !7599)
!7730 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 356, column: 6)
!7731 = !DILocation(line: 356, column: 37, scope: !7730, inlinedAt: !7599)
!7732 = !DILocation(line: 356, column: 43, scope: !7730, inlinedAt: !7599)
!7733 = !DILocation(line: 356, column: 46, scope: !7730, inlinedAt: !7599)
!7734 = !DILocation(line: 356, column: 51, scope: !7730, inlinedAt: !7599)
!7735 = !DILocation(line: 356, column: 6, scope: !7595, inlinedAt: !7599)
!7736 = !DILocation(line: 357, column: 3, scope: !7730, inlinedAt: !7599)
!7737 = !DILocation(line: 358, column: 6, scope: !7738, inlinedAt: !7599)
!7738 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 358, column: 6)
!7739 = !DILocation(line: 358, column: 11, scope: !7738, inlinedAt: !7599)
!7740 = !DILocation(line: 358, column: 6, scope: !7595, inlinedAt: !7599)
!7741 = !DILocation(line: 358, column: 26, scope: !7738, inlinedAt: !7599)
!7742 = !DILocation(line: 359, column: 6, scope: !7743, inlinedAt: !7599)
!7743 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 359, column: 6)
!7744 = !DILocation(line: 359, column: 11, scope: !7743, inlinedAt: !7599)
!7745 = !DILocation(line: 359, column: 6, scope: !7595, inlinedAt: !7599)
!7746 = !DILocation(line: 359, column: 26, scope: !7743, inlinedAt: !7599)
!7747 = !DILocation(line: 360, column: 6, scope: !7748, inlinedAt: !7599)
!7748 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 360, column: 6)
!7749 = !DILocation(line: 360, column: 11, scope: !7748, inlinedAt: !7599)
!7750 = !DILocation(line: 360, column: 6, scope: !7595, inlinedAt: !7599)
!7751 = !DILocation(line: 360, column: 26, scope: !7748, inlinedAt: !7599)
!7752 = !DILocation(line: 361, column: 6, scope: !7753, inlinedAt: !7599)
!7753 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 361, column: 6)
!7754 = !DILocation(line: 361, column: 11, scope: !7753, inlinedAt: !7599)
!7755 = !DILocation(line: 361, column: 6, scope: !7595, inlinedAt: !7599)
!7756 = !DILocation(line: 361, column: 26, scope: !7753, inlinedAt: !7599)
!7757 = !DILocation(line: 362, column: 6, scope: !7758, inlinedAt: !7599)
!7758 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 362, column: 6)
!7759 = !DILocation(line: 362, column: 11, scope: !7758, inlinedAt: !7599)
!7760 = !DILocation(line: 362, column: 6, scope: !7595, inlinedAt: !7599)
!7761 = !DILocation(line: 362, column: 26, scope: !7758, inlinedAt: !7599)
!7762 = !DILocation(line: 363, column: 6, scope: !7763, inlinedAt: !7599)
!7763 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 363, column: 6)
!7764 = !DILocation(line: 363, column: 11, scope: !7763, inlinedAt: !7599)
!7765 = !DILocation(line: 363, column: 6, scope: !7595, inlinedAt: !7599)
!7766 = !DILocation(line: 363, column: 26, scope: !7763, inlinedAt: !7599)
!7767 = !DILocation(line: 364, column: 6, scope: !7768, inlinedAt: !7599)
!7768 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 364, column: 6)
!7769 = !DILocation(line: 364, column: 11, scope: !7768, inlinedAt: !7599)
!7770 = !DILocation(line: 364, column: 6, scope: !7595, inlinedAt: !7599)
!7771 = !DILocation(line: 364, column: 26, scope: !7768, inlinedAt: !7599)
!7772 = !DILocation(line: 365, column: 6, scope: !7773, inlinedAt: !7599)
!7773 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 365, column: 6)
!7774 = !DILocation(line: 365, column: 11, scope: !7773, inlinedAt: !7599)
!7775 = !DILocation(line: 365, column: 6, scope: !7595, inlinedAt: !7599)
!7776 = !DILocation(line: 365, column: 26, scope: !7773, inlinedAt: !7599)
!7777 = !DILocation(line: 366, column: 6, scope: !7778, inlinedAt: !7599)
!7778 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 366, column: 6)
!7779 = !DILocation(line: 366, column: 11, scope: !7778, inlinedAt: !7599)
!7780 = !DILocation(line: 366, column: 6, scope: !7595, inlinedAt: !7599)
!7781 = !DILocation(line: 366, column: 26, scope: !7778, inlinedAt: !7599)
!7782 = !DILocation(line: 367, column: 6, scope: !7783, inlinedAt: !7599)
!7783 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 367, column: 6)
!7784 = !DILocation(line: 367, column: 11, scope: !7783, inlinedAt: !7599)
!7785 = !DILocation(line: 367, column: 6, scope: !7595, inlinedAt: !7599)
!7786 = !DILocation(line: 367, column: 26, scope: !7783, inlinedAt: !7599)
!7787 = !DILocation(line: 368, column: 6, scope: !7788, inlinedAt: !7599)
!7788 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 368, column: 6)
!7789 = !DILocation(line: 368, column: 11, scope: !7788, inlinedAt: !7599)
!7790 = !DILocation(line: 368, column: 6, scope: !7595, inlinedAt: !7599)
!7791 = !DILocation(line: 368, column: 26, scope: !7788, inlinedAt: !7599)
!7792 = !DILocation(line: 369, column: 6, scope: !7793, inlinedAt: !7599)
!7793 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 369, column: 6)
!7794 = !DILocation(line: 369, column: 11, scope: !7793, inlinedAt: !7599)
!7795 = !DILocation(line: 369, column: 6, scope: !7595, inlinedAt: !7599)
!7796 = !DILocation(line: 369, column: 26, scope: !7793, inlinedAt: !7599)
!7797 = !DILocation(line: 370, column: 6, scope: !7798, inlinedAt: !7599)
!7798 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 370, column: 6)
!7799 = !DILocation(line: 370, column: 11, scope: !7798, inlinedAt: !7599)
!7800 = !DILocation(line: 370, column: 6, scope: !7595, inlinedAt: !7599)
!7801 = !DILocation(line: 370, column: 26, scope: !7798, inlinedAt: !7599)
!7802 = !DILocation(line: 371, column: 6, scope: !7803, inlinedAt: !7599)
!7803 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 371, column: 6)
!7804 = !DILocation(line: 371, column: 11, scope: !7803, inlinedAt: !7599)
!7805 = !DILocation(line: 371, column: 6, scope: !7595, inlinedAt: !7599)
!7806 = !DILocation(line: 371, column: 26, scope: !7803, inlinedAt: !7599)
!7807 = !DILocation(line: 372, column: 6, scope: !7808, inlinedAt: !7599)
!7808 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 372, column: 6)
!7809 = !DILocation(line: 372, column: 11, scope: !7808, inlinedAt: !7599)
!7810 = !DILocation(line: 372, column: 6, scope: !7595, inlinedAt: !7599)
!7811 = !DILocation(line: 372, column: 26, scope: !7808, inlinedAt: !7599)
!7812 = !DILocation(line: 373, column: 6, scope: !7813, inlinedAt: !7599)
!7813 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 373, column: 6)
!7814 = !DILocation(line: 373, column: 11, scope: !7813, inlinedAt: !7599)
!7815 = !DILocation(line: 373, column: 6, scope: !7595, inlinedAt: !7599)
!7816 = !DILocation(line: 373, column: 26, scope: !7813, inlinedAt: !7599)
!7817 = !DILocation(line: 374, column: 6, scope: !7818, inlinedAt: !7599)
!7818 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 374, column: 6)
!7819 = !DILocation(line: 374, column: 11, scope: !7818, inlinedAt: !7599)
!7820 = !DILocation(line: 374, column: 6, scope: !7595, inlinedAt: !7599)
!7821 = !DILocation(line: 374, column: 26, scope: !7818, inlinedAt: !7599)
!7822 = !DILocation(line: 375, column: 6, scope: !7823, inlinedAt: !7599)
!7823 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 375, column: 6)
!7824 = !DILocation(line: 375, column: 11, scope: !7823, inlinedAt: !7599)
!7825 = !DILocation(line: 375, column: 6, scope: !7595, inlinedAt: !7599)
!7826 = !DILocation(line: 375, column: 27, scope: !7823, inlinedAt: !7599)
!7827 = !DILocation(line: 376, column: 6, scope: !7828, inlinedAt: !7599)
!7828 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 376, column: 6)
!7829 = !DILocation(line: 376, column: 11, scope: !7828, inlinedAt: !7599)
!7830 = !DILocation(line: 376, column: 6, scope: !7595, inlinedAt: !7599)
!7831 = !DILocation(line: 376, column: 32, scope: !7828, inlinedAt: !7599)
!7832 = !DILocation(line: 377, column: 6, scope: !7833, inlinedAt: !7599)
!7833 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 377, column: 6)
!7834 = !DILocation(line: 377, column: 11, scope: !7833, inlinedAt: !7599)
!7835 = !DILocation(line: 377, column: 6, scope: !7595, inlinedAt: !7599)
!7836 = !DILocation(line: 377, column: 32, scope: !7833, inlinedAt: !7599)
!7837 = !DILocation(line: 378, column: 6, scope: !7838, inlinedAt: !7599)
!7838 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 378, column: 6)
!7839 = !DILocation(line: 378, column: 11, scope: !7838, inlinedAt: !7599)
!7840 = !DILocation(line: 378, column: 6, scope: !7595, inlinedAt: !7599)
!7841 = !DILocation(line: 378, column: 32, scope: !7838, inlinedAt: !7599)
!7842 = !DILocation(line: 379, column: 6, scope: !7843, inlinedAt: !7599)
!7843 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 379, column: 6)
!7844 = !DILocation(line: 379, column: 11, scope: !7843, inlinedAt: !7599)
!7845 = !DILocation(line: 379, column: 6, scope: !7595, inlinedAt: !7599)
!7846 = !DILocation(line: 379, column: 33, scope: !7843, inlinedAt: !7599)
!7847 = !DILocation(line: 380, column: 6, scope: !7848, inlinedAt: !7599)
!7848 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 380, column: 6)
!7849 = !DILocation(line: 380, column: 11, scope: !7848, inlinedAt: !7599)
!7850 = !DILocation(line: 380, column: 6, scope: !7595, inlinedAt: !7599)
!7851 = !DILocation(line: 380, column: 33, scope: !7848, inlinedAt: !7599)
!7852 = !DILocation(line: 381, column: 6, scope: !7853, inlinedAt: !7599)
!7853 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 381, column: 6)
!7854 = !DILocation(line: 381, column: 11, scope: !7853, inlinedAt: !7599)
!7855 = !DILocation(line: 381, column: 6, scope: !7595, inlinedAt: !7599)
!7856 = !DILocation(line: 381, column: 33, scope: !7853, inlinedAt: !7599)
!7857 = !DILocation(line: 382, column: 2, scope: !7858, inlinedAt: !7599)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !153, line: 382, column: 2)
!7859 = distinct !DILexicalBlock(scope: !7595, file: !153, line: 382, column: 2)
!7860 = !{i32 -2143036931, i32 -2143036902, i32 -2143036856, i32 -2143036798, i32 -2143036744, i32 -2143036690, i32 -2143036635, i32 -2143036604}
!7861 = !DILocation(line: 382, column: 2, scope: !7862, inlinedAt: !7599)
!7862 = distinct !DILexicalBlock(scope: !7863, file: !153, line: 382, column: 2)
!7863 = distinct !DILexicalBlock(scope: !7859, file: !153, line: 382, column: 2)
!7864 = !{i32 -2143036161, i32 -2143036154, i32 -2143036100, i32 -2143036069, i32 -2143036039}
!7865 = !DILocation(line: 382, column: 2, scope: !7863, inlinedAt: !7599)
!7866 = !DILocation(line: 386, column: 1, scope: !7595, inlinedAt: !7599)
!7867 = !DILocation(line: 547, column: 9, scope: !7576, inlinedAt: !7581)
!7868 = !DILocation(line: 549, column: 8, scope: !7869, inlinedAt: !7581)
!7869 = distinct !DILexicalBlock(scope: !7576, file: !153, line: 549, column: 7)
!7870 = !DILocation(line: 549, column: 7, scope: !7576, inlinedAt: !7581)
!7871 = !DILocation(line: 550, column: 4, scope: !7869, inlinedAt: !7581)
!7872 = !DILocation(line: 553, column: 33, scope: !7576, inlinedAt: !7581)
!7873 = !DILocation(line: 325, column: 6, scope: !7874, inlinedAt: !7593)
!7874 = distinct !DILexicalBlock(scope: !7589, file: !153, line: 325, column: 6)
!7875 = !DILocation(line: 325, column: 6, scope: !7589, inlinedAt: !7593)
!7876 = !DILocation(line: 326, column: 3, scope: !7874, inlinedAt: !7593)
!7877 = !DILocation(line: 332, column: 9, scope: !7589, inlinedAt: !7593)
!7878 = !DILocation(line: 332, column: 15, scope: !7589, inlinedAt: !7593)
!7879 = !DILocation(line: 332, column: 2, scope: !7589, inlinedAt: !7593)
!7880 = !DILocation(line: 336, column: 1, scope: !7589, inlinedAt: !7593)
!7881 = !DILocation(line: 553, column: 5, scope: !7576, inlinedAt: !7581)
!7882 = !DILocation(line: 553, column: 41, scope: !7576, inlinedAt: !7581)
!7883 = !DILocation(line: 554, column: 5, scope: !7576, inlinedAt: !7581)
!7884 = !DILocation(line: 554, column: 12, scope: !7576, inlinedAt: !7581)
!7885 = !DILocation(line: 448, column: 31, scope: !7571, inlinedAt: !7575)
!7886 = !DILocation(line: 448, column: 34, scope: !7571, inlinedAt: !7575)
!7887 = !DILocation(line: 448, column: 14, scope: !7571, inlinedAt: !7575)
!7888 = !DILocation(line: 450, column: 22, scope: !7571, inlinedAt: !7575)
!7889 = !DILocation(line: 450, column: 25, scope: !7571, inlinedAt: !7575)
!7890 = !DILocation(line: 450, column: 30, scope: !7571, inlinedAt: !7575)
!7891 = !DILocation(line: 450, column: 36, scope: !7571, inlinedAt: !7575)
!7892 = !DILocation(line: 450, column: 8, scope: !7571, inlinedAt: !7575)
!7893 = !DILocation(line: 450, column: 6, scope: !7571, inlinedAt: !7575)
!7894 = !DILocation(line: 451, column: 9, scope: !7571, inlinedAt: !7575)
!7895 = !DILocation(line: 552, column: 3, scope: !7576, inlinedAt: !7581)
!7896 = !DILocation(line: 557, column: 19, scope: !7578, inlinedAt: !7581)
!7897 = !DILocation(line: 557, column: 25, scope: !7578, inlinedAt: !7581)
!7898 = !DILocation(line: 557, column: 9, scope: !7578, inlinedAt: !7581)
!7899 = !DILocation(line: 557, column: 2, scope: !7578, inlinedAt: !7581)
!7900 = !DILocation(line: 558, column: 1, scope: !7578, inlinedAt: !7581)
!7901 = !DILocation(line: 891, column: 11, scope: !7567)
!7902 = !DILocation(line: 891, column: 9, scope: !7567)
!7903 = !DILocation(line: 892, column: 7, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 892, column: 6)
!7905 = !DILocation(line: 892, column: 6, scope: !7567)
!7906 = !DILocation(line: 893, column: 3, scope: !7904)
!7907 = !DILocation(line: 895, column: 19, scope: !7567)
!7908 = !DILocation(line: 895, column: 2, scope: !7567)
!7909 = !DILocation(line: 897, column: 19, scope: !7567)
!7910 = !DILocation(line: 897, column: 25, scope: !7567)
!7911 = !DILocation(line: 897, column: 2, scope: !7567)
!7912 = !DILocation(line: 899, column: 11, scope: !7567)
!7913 = !DILocation(line: 899, column: 9, scope: !7567)
!7914 = !DILocation(line: 900, column: 8, scope: !7567)
!7915 = !DILocation(line: 900, column: 2, scope: !7567)
!7916 = !DILocation(line: 902, column: 10, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 902, column: 6)
!7918 = !DILocation(line: 902, column: 6, scope: !7917)
!7919 = !DILocation(line: 902, column: 16, scope: !7917)
!7920 = !DILocation(line: 902, column: 24, scope: !7917)
!7921 = !DILocation(line: 902, column: 19, scope: !7917)
!7922 = !DILocation(line: 902, column: 6, scope: !7567)
!7923 = !DILocation(line: 903, column: 3, scope: !7917)
!7924 = !DILocation(line: 905, column: 20, scope: !7567)
!7925 = !DILocation(line: 905, column: 3, scope: !7567)
!7926 = !DILocation(line: 905, column: 18, scope: !7567)
!7927 = !DILocation(line: 907, column: 2, scope: !7567)
!7928 = !DILocation(line: 908, column: 1, scope: !7567)
!7929 = distinct !DISubprogram(name: "mmc_large_sector", scope: !264, file: !264, line: 318, type: !7930, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7930 = !DISubroutineType(types: !7931)
!7931 = !{!555, !262}
!7932 = !DILocalVariable(name: "card", arg: 1, scope: !7929, file: !264, line: 318, type: !262)
!7933 = !DILocation(line: 318, column: 54, scope: !7929)
!7934 = !DILocation(line: 320, column: 9, scope: !7929)
!7935 = !DILocation(line: 320, column: 15, scope: !7929)
!7936 = !DILocation(line: 320, column: 23, scope: !7929)
!7937 = !DILocation(line: 320, column: 40, scope: !7929)
!7938 = !DILocation(line: 320, column: 2, scope: !7929)
!7939 = distinct !DISubprogram(name: "mmc_blk_read_single", scope: !3, file: !3, line: 1619, type: !5808, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!7940 = !DILocalVariable(name: "mq", arg: 1, scope: !7939, file: !3, line: 1619, type: !258)
!7941 = !DILocation(line: 1619, column: 51, scope: !7939)
!7942 = !DILocalVariable(name: "req", arg: 2, scope: !7939, file: !3, line: 1619, type: !2386)
!7943 = !DILocation(line: 1619, column: 71, scope: !7939)
!7944 = !DILocalVariable(name: "mqrq", scope: !7939, file: !3, line: 1621, type: !5457)
!7945 = !DILocation(line: 1621, column: 24, scope: !7939)
!7946 = !DILocation(line: 1621, column: 52, scope: !7939)
!7947 = !DILocation(line: 1621, column: 31, scope: !7939)
!7948 = !DILocalVariable(name: "mrq", scope: !7939, file: !3, line: 1622, type: !4933)
!7949 = !DILocation(line: 1622, column: 22, scope: !7939)
!7950 = !DILocation(line: 1622, column: 29, scope: !7939)
!7951 = !DILocation(line: 1622, column: 35, scope: !7939)
!7952 = !DILocation(line: 1622, column: 39, scope: !7939)
!7953 = !DILocalVariable(name: "card", scope: !7939, file: !3, line: 1623, type: !262)
!7954 = !DILocation(line: 1623, column: 19, scope: !7939)
!7955 = !DILocation(line: 1623, column: 26, scope: !7939)
!7956 = !DILocation(line: 1623, column: 30, scope: !7939)
!7957 = !DILocalVariable(name: "host", scope: !7939, file: !3, line: 1624, type: !267)
!7958 = !DILocation(line: 1624, column: 19, scope: !7939)
!7959 = !DILocation(line: 1624, column: 26, scope: !7939)
!7960 = !DILocation(line: 1624, column: 32, scope: !7939)
!7961 = !DILocalVariable(name: "error", scope: !7939, file: !3, line: 1625, type: !2547)
!7962 = !DILocation(line: 1625, column: 15, scope: !7939)
!7963 = !DILocalVariable(name: "retries", scope: !7939, file: !3, line: 1626, type: !324)
!7964 = !DILocation(line: 1626, column: 6, scope: !7939)
!7965 = !DILocation(line: 1628, column: 2, scope: !7939)
!7966 = !DILocalVariable(name: "status", scope: !7967, file: !3, line: 1629, type: !480)
!7967 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1628, column: 5)
!7968 = !DILocation(line: 1629, column: 7, scope: !7967)
!7969 = !DILocalVariable(name: "err", scope: !7967, file: !3, line: 1630, type: !324)
!7970 = !DILocation(line: 1630, column: 7, scope: !7967)
!7971 = !DILocation(line: 1632, column: 22, scope: !7967)
!7972 = !DILocation(line: 1632, column: 28, scope: !7967)
!7973 = !DILocation(line: 1632, column: 37, scope: !7967)
!7974 = !DILocation(line: 1632, column: 3, scope: !7967)
!7975 = !DILocation(line: 1634, column: 20, scope: !7967)
!7976 = !DILocation(line: 1634, column: 26, scope: !7967)
!7977 = !DILocation(line: 1634, column: 3, scope: !7967)
!7978 = !DILocation(line: 1636, column: 25, scope: !7967)
!7979 = !DILocation(line: 1636, column: 9, scope: !7967)
!7980 = !DILocation(line: 1636, column: 7, scope: !7967)
!7981 = !DILocation(line: 1637, column: 7, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1637, column: 7)
!7983 = !DILocation(line: 1637, column: 7, scope: !7967)
!7984 = !DILocation(line: 1638, column: 4, scope: !7982)
!7985 = !DILocation(line: 1640, column: 8, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1640, column: 7)
!7987 = !DILocation(line: 1640, column: 30, scope: !7986)
!7988 = !DILocation(line: 1641, column: 27, scope: !7986)
!7989 = !DILocation(line: 1641, column: 8, scope: !7986)
!7990 = !DILocation(line: 1640, column: 7, scope: !7967)
!7991 = !DILocation(line: 1642, column: 28, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 1641, column: 36)
!7993 = !DILocation(line: 1642, column: 34, scope: !7992)
!7994 = !DILocation(line: 1642, column: 10, scope: !7992)
!7995 = !DILocation(line: 1642, column: 8, scope: !7992)
!7996 = !DILocation(line: 1643, column: 8, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1643, column: 8)
!7998 = !DILocation(line: 1643, column: 8, scope: !7992)
!7999 = !DILocation(line: 1644, column: 5, scope: !7997)
!8000 = !DILocation(line: 1645, column: 3, scope: !7992)
!8001 = !DILocation(line: 1647, column: 7, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1647, column: 7)
!8003 = !DILocation(line: 1647, column: 12, scope: !8002)
!8004 = !DILocation(line: 1647, column: 17, scope: !8002)
!8005 = !DILocation(line: 1647, column: 23, scope: !8002)
!8006 = !DILocation(line: 1647, column: 33, scope: !8002)
!8007 = !DILocation(line: 1647, column: 36, scope: !8002)
!8008 = !DILocation(line: 1647, column: 7, scope: !7967)
!8009 = !DILocation(line: 1648, column: 4, scope: !8002)
!8010 = !DILocation(line: 1650, column: 11, scope: !7967)
!8011 = !DILocation(line: 1652, column: 7, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1652, column: 7)
!8013 = !DILocation(line: 1652, column: 12, scope: !8012)
!8014 = !DILocation(line: 1652, column: 17, scope: !8012)
!8015 = !DILocation(line: 1652, column: 23, scope: !8012)
!8016 = !DILocation(line: 1653, column: 7, scope: !8012)
!8017 = !DILocation(line: 1653, column: 12, scope: !8012)
!8018 = !DILocation(line: 1653, column: 18, scope: !8012)
!8019 = !DILocation(line: 1653, column: 24, scope: !8012)
!8020 = !DILocation(line: 1654, column: 9, scope: !8012)
!8021 = !DILocation(line: 1654, column: 31, scope: !8012)
!8022 = !DILocation(line: 1655, column: 9, scope: !8012)
!8023 = !DILocation(line: 1655, column: 14, scope: !8012)
!8024 = !DILocation(line: 1655, column: 19, scope: !8012)
!8025 = !DILocation(line: 1655, column: 27, scope: !8012)
!8026 = !DILocation(line: 1655, column: 40, scope: !8012)
!8027 = !DILocation(line: 1655, column: 43, scope: !8012)
!8028 = !DILocation(line: 1655, column: 50, scope: !8012)
!8029 = !DILocation(line: 1652, column: 7, scope: !7967)
!8030 = !DILocation(line: 1656, column: 10, scope: !8012)
!8031 = !DILocation(line: 1656, column: 4, scope: !8012)
!8032 = !DILocation(line: 1658, column: 10, scope: !8012)
!8033 = !DILocation(line: 1660, column: 2, scope: !7967)
!8034 = !DILocation(line: 1660, column: 30, scope: !7939)
!8035 = !DILocation(line: 1660, column: 35, scope: !7939)
!8036 = !DILocation(line: 1660, column: 11, scope: !7939)
!8037 = distinct !{!8037, !7965, !8038}
!8038 = !DILocation(line: 1660, column: 46, scope: !7939)
!8039 = !DILocation(line: 1662, column: 2, scope: !7939)
!8040 = !DILabel(scope: !7939, name: "error_exit", file: !3, line: 1664)
!8041 = !DILocation(line: 1664, column: 1, scope: !7939)
!8042 = !DILocation(line: 1665, column: 2, scope: !7939)
!8043 = !DILocation(line: 1665, column: 7, scope: !7939)
!8044 = !DILocation(line: 1665, column: 13, scope: !7939)
!8045 = !DILocation(line: 1665, column: 26, scope: !7939)
!8046 = !DILocation(line: 1666, column: 21, scope: !7939)
!8047 = !DILocation(line: 1666, column: 2, scope: !7939)
!8048 = !DILocation(line: 1668, column: 6, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1668, column: 6)
!8050 = !DILocation(line: 1668, column: 12, scope: !8049)
!8051 = !DILocation(line: 1668, column: 20, scope: !8049)
!8052 = !DILocation(line: 1668, column: 6, scope: !7939)
!8053 = !DILocation(line: 1669, column: 3, scope: !8049)
!8054 = !DILocation(line: 1669, column: 9, scope: !8049)
!8055 = !DILocation(line: 1669, column: 17, scope: !8049)
!8056 = !DILocation(line: 1670, column: 1, scope: !7939)
!8057 = distinct !DISubprogram(name: "mmc_blk_stop_err_bits", scope: !3, file: !3, line: 1677, type: !8058, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8058 = !DISubroutineType(types: !8059)
!8059 = !{!480, !6109}
!8060 = !DILocalVariable(name: "brq", arg: 1, scope: !8057, file: !3, line: 1677, type: !6109)
!8061 = !DILocation(line: 1677, column: 65, scope: !8057)
!8062 = !DILocation(line: 1679, column: 27, scope: !8057)
!8063 = !DILocation(line: 1679, column: 9, scope: !8057)
!8064 = !DILocation(line: 1679, column: 2, scope: !8057)
!8065 = distinct !DISubprogram(name: "mmc_blk_oor_valid", scope: !3, file: !3, line: 1672, type: !6107, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8066 = !DILocalVariable(name: "brq", arg: 1, scope: !8065, file: !3, line: 1672, type: !6109)
!8067 = !DILocation(line: 1672, column: 62, scope: !8065)
!8068 = !DILocation(line: 1674, column: 11, scope: !8065)
!8069 = !DILocation(line: 1674, column: 16, scope: !8065)
!8070 = !DILocation(line: 1674, column: 20, scope: !8065)
!8071 = !DILocation(line: 1674, column: 10, scope: !8065)
!8072 = !DILocation(line: 1674, column: 9, scope: !8065)
!8073 = !DILocation(line: 1674, column: 2, scope: !8065)
!8074 = distinct !DISubprogram(name: "mmc_blk_data_timeout_ms", scope: !3, file: !3, line: 924, type: !8075, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!7, !267, !4950}
!8077 = !DILocalVariable(name: "host", arg: 1, scope: !8074, file: !3, line: 924, type: !267)
!8078 = !DILocation(line: 924, column: 62, scope: !8074)
!8079 = !DILocalVariable(name: "data", arg: 2, scope: !8074, file: !3, line: 925, type: !4950)
!8080 = !DILocation(line: 925, column: 27, scope: !8074)
!8081 = !DILocalVariable(name: "ms", scope: !8074, file: !3, line: 927, type: !7)
!8082 = !DILocation(line: 927, column: 15, scope: !8074)
!8083 = !DILocation(line: 927, column: 20, scope: !8074)
!8084 = !DILocalVariable(name: "khz", scope: !8074, file: !3, line: 928, type: !7)
!8085 = !DILocation(line: 928, column: 15, scope: !8074)
!8086 = !DILocation(line: 930, column: 6, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 930, column: 6)
!8088 = !DILocation(line: 930, column: 12, scope: !8087)
!8089 = !DILocation(line: 930, column: 6, scope: !8074)
!8090 = !DILocation(line: 931, column: 27, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 930, column: 26)
!8092 = !DILocation(line: 931, column: 9, scope: !8091)
!8093 = !DILocation(line: 931, column: 7, scope: !8091)
!8094 = !DILocation(line: 932, column: 9, scope: !8091)
!8095 = !DILocation(line: 932, column: 6, scope: !8091)
!8096 = !DILocation(line: 933, column: 2, scope: !8091)
!8097 = !DILocation(line: 935, column: 9, scope: !8074)
!8098 = !DILocation(line: 935, column: 2, scope: !8074)
!8099 = distinct !DISubprogram(name: "mmc_blk_send_stop", scope: !3, file: !3, line: 1586, type: !6586, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8100 = !DILocalVariable(name: "card", arg: 1, scope: !8099, file: !3, line: 1586, type: !262)
!8101 = !DILocation(line: 1586, column: 47, scope: !8099)
!8102 = !DILocalVariable(name: "timeout", arg: 2, scope: !8099, file: !3, line: 1586, type: !7)
!8103 = !DILocation(line: 1586, column: 66, scope: !8099)
!8104 = !DILocalVariable(name: "cmd", scope: !8099, file: !3, line: 1588, type: !4939)
!8105 = !DILocation(line: 1588, column: 21, scope: !8099)
!8106 = !DILocation(line: 1588, column: 27, scope: !8099)
!8107 = !DILocation(line: 1592, column: 19, scope: !8099)
!8108 = !DILocation(line: 1595, column: 26, scope: !8099)
!8109 = !DILocation(line: 1595, column: 32, scope: !8099)
!8110 = !DILocation(line: 1595, column: 9, scope: !8099)
!8111 = !DILocation(line: 1595, column: 2, scope: !8099)
!8112 = distinct !DISubprogram(name: "card_busy_detect", scope: !3, file: !3, line: 412, type: !8113, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8113 = !DISubroutineType(types: !8114)
!8114 = !{!324, !262, !7, !1589}
!8115 = !DILocalVariable(name: "m", arg: 1, scope: !8116, file: !8117, line: 363, type: !2705)
!8116 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !8117, file: !8117, line: 363, type: !8118, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8117 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!389, !2705}
!8120 = !DILocation(line: 363, column: 74, scope: !8116, inlinedAt: !8121)
!8121 = distinct !DILocation(line: 415, column: 36, scope: !8112)
!8122 = !DILocalVariable(name: "card", arg: 1, scope: !8112, file: !3, line: 412, type: !262)
!8123 = !DILocation(line: 412, column: 46, scope: !8112)
!8124 = !DILocalVariable(name: "timeout_ms", arg: 2, scope: !8112, file: !3, line: 412, type: !7)
!8125 = !DILocation(line: 412, column: 65, scope: !8112)
!8126 = !DILocalVariable(name: "resp_errs", arg: 3, scope: !8112, file: !3, line: 413, type: !1589)
!8127 = !DILocation(line: 413, column: 13, scope: !8112)
!8128 = !DILocalVariable(name: "timeout", scope: !8112, file: !3, line: 415, type: !389)
!8129 = !DILocation(line: 415, column: 16, scope: !8112)
!8130 = !DILocation(line: 415, column: 26, scope: !8112)
!8131 = !DILocation(line: 415, column: 53, scope: !8112)
!8132 = !DILocation(line: 365, column: 27, scope: !8133, inlinedAt: !8121)
!8133 = distinct !DILexicalBlock(scope: !8116, file: !8117, line: 365, column: 6)
!8134 = !DILocation(line: 365, column: 6, scope: !8133, inlinedAt: !8121)
!8135 = !DILocation(line: 365, column: 6, scope: !8116, inlinedAt: !8121)
!8136 = !DILocation(line: 366, column: 12, scope: !8137, inlinedAt: !8121)
!8137 = distinct !DILexicalBlock(scope: !8138, file: !8117, line: 366, column: 7)
!8138 = distinct !DILexicalBlock(scope: !8133, file: !8117, line: 365, column: 31)
!8139 = !DILocation(line: 366, column: 14, scope: !8137, inlinedAt: !8121)
!8140 = !DILocation(line: 366, column: 7, scope: !8138, inlinedAt: !8121)
!8141 = !DILocation(line: 367, column: 4, scope: !8137, inlinedAt: !8121)
!8142 = !DILocation(line: 368, column: 28, scope: !8138, inlinedAt: !8121)
!8143 = !DILocation(line: 368, column: 10, scope: !8138, inlinedAt: !8121)
!8144 = !DILocation(line: 368, column: 3, scope: !8138, inlinedAt: !8121)
!8145 = !DILocation(line: 370, column: 29, scope: !8146, inlinedAt: !8121)
!8146 = distinct !DILexicalBlock(scope: !8133, file: !8117, line: 369, column: 9)
!8147 = !DILocation(line: 370, column: 10, scope: !8146, inlinedAt: !8121)
!8148 = !DILocation(line: 370, column: 3, scope: !8146, inlinedAt: !8121)
!8149 = !DILocation(line: 372, column: 1, scope: !8116, inlinedAt: !8121)
!8150 = !DILocation(line: 415, column: 34, scope: !8112)
!8151 = !DILocalVariable(name: "err", scope: !8112, file: !3, line: 416, type: !324)
!8152 = !DILocation(line: 416, column: 6, scope: !8112)
!8153 = !DILocalVariable(name: "status", scope: !8112, file: !3, line: 417, type: !480)
!8154 = !DILocation(line: 417, column: 6, scope: !8112)
!8155 = !DILocation(line: 419, column: 2, scope: !8112)
!8156 = !DILocalVariable(name: "done", scope: !8157, file: !3, line: 420, type: !555)
!8157 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 419, column: 5)
!8158 = !DILocation(line: 420, column: 8, scope: !8157)
!8159 = !DILocation(line: 420, column: 15, scope: !8157)
!8160 = !DILocation(line: 422, column: 27, scope: !8157)
!8161 = !DILocation(line: 422, column: 9, scope: !8157)
!8162 = !DILocation(line: 422, column: 7, scope: !8157)
!8163 = !DILocation(line: 423, column: 7, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 423, column: 7)
!8165 = !DILocation(line: 423, column: 7, scope: !8157)
!8166 = !DILocation(line: 424, column: 4, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 423, column: 12)
!8168 = !DILocation(line: 426, column: 11, scope: !8167)
!8169 = !DILocation(line: 426, column: 4, scope: !8167)
!8170 = !DILocation(line: 430, column: 7, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 430, column: 7)
!8172 = !DILocation(line: 430, column: 7, scope: !8157)
!8173 = !DILocation(line: 431, column: 18, scope: !8171)
!8174 = !DILocation(line: 431, column: 5, scope: !8171)
!8175 = !DILocation(line: 431, column: 15, scope: !8171)
!8176 = !DILocation(line: 431, column: 4, scope: !8171)
!8177 = !DILocation(line: 437, column: 7, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 437, column: 7)
!8179 = !DILocation(line: 437, column: 7, scope: !8157)
!8180 = !DILocation(line: 438, column: 4, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 437, column: 13)
!8182 = !DILocation(line: 441, column: 4, scope: !8181)
!8183 = !DILocation(line: 443, column: 2, scope: !8157)
!8184 = !DILocation(line: 443, column: 31, scope: !8112)
!8185 = !DILocation(line: 443, column: 12, scope: !8112)
!8186 = !DILocation(line: 443, column: 11, scope: !8112)
!8187 = distinct !{!8187, !8155, !8188}
!8188 = !DILocation(line: 443, column: 38, scope: !8112)
!8189 = !DILocation(line: 445, column: 9, scope: !8112)
!8190 = !DILocation(line: 445, column: 2, scope: !8112)
!8191 = !DILocation(line: 446, column: 1, scope: !8112)
!8192 = distinct !DISubprogram(name: "mmc_blk_clock_khz", scope: !3, file: !3, line: 910, type: !8193, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!7, !267}
!8195 = !DILocalVariable(name: "host", arg: 1, scope: !8192, file: !3, line: 910, type: !267)
!8196 = !DILocation(line: 910, column: 56, scope: !8192)
!8197 = !DILocation(line: 912, column: 6, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 912, column: 6)
!8199 = !DILocation(line: 912, column: 12, scope: !8198)
!8200 = !DILocation(line: 912, column: 6, scope: !8192)
!8201 = !DILocation(line: 913, column: 10, scope: !8198)
!8202 = !DILocation(line: 913, column: 16, scope: !8198)
!8203 = !DILocation(line: 913, column: 29, scope: !8198)
!8204 = !DILocation(line: 913, column: 3, scope: !8198)
!8205 = !DILocation(line: 916, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 916, column: 6)
!8207 = !DILocation(line: 916, column: 12, scope: !8206)
!8208 = !DILocation(line: 916, column: 16, scope: !8206)
!8209 = !DILocation(line: 916, column: 6, scope: !8192)
!8210 = !DILocation(line: 917, column: 10, scope: !8206)
!8211 = !DILocation(line: 917, column: 16, scope: !8206)
!8212 = !DILocation(line: 917, column: 20, scope: !8206)
!8213 = !DILocation(line: 917, column: 26, scope: !8206)
!8214 = !DILocation(line: 917, column: 3, scope: !8206)
!8215 = !DILocalVariable(name: "__ret_warn_on", scope: !8216, file: !3, line: 920, type: !324)
!8216 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 920, column: 2)
!8217 = !DILocation(line: 920, column: 2, scope: !8216)
!8218 = !DILocation(line: 920, column: 2, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 920, column: 2)
!8220 = !DILocation(line: 920, column: 2, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8219, file: !3, line: 920, column: 2)
!8222 = !DILocation(line: 920, column: 2, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 920, column: 2)
!8224 = !DILocation(line: 920, column: 2, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 920, column: 2)
!8226 = !{i32 -2141150927, i32 -2141150898, i32 -2141150852, i32 -2141150794, i32 -2141150740, i32 -2141150686, i32 -2141150631, i32 -2141150600}
!8227 = !DILocation(line: 920, column: 2, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 920, column: 2)
!8229 = !{i32 -2141150183, i32 -2141150176, i32 -2141150124, i32 -2141150093, i32 -2141150063}
!8230 = !DILocation(line: 920, column: 2, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8221, file: !3, line: 920, column: 2)
!8232 = !DILocation(line: 921, column: 2, scope: !8192)
!8233 = !DILocation(line: 922, column: 1, scope: !8192)
!8234 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !8117, file: !8117, line: 308, type: !8118, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8235 = !DILocalVariable(name: "m", arg: 1, scope: !8234, file: !8117, line: 308, type: !2705)
!8236 = !DILocation(line: 308, column: 66, scope: !8234)
!8237 = !DILocation(line: 310, column: 10, scope: !8234)
!8238 = !DILocation(line: 310, column: 12, scope: !8234)
!8239 = !DILocation(line: 310, column: 34, scope: !8234)
!8240 = !DILocation(line: 310, column: 39, scope: !8234)
!8241 = !DILocation(line: 310, column: 2, scope: !8234)
!8242 = distinct !DISubprogram(name: "__fswab32", scope: !8243, file: !8243, line: 57, type: !8244, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8243 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!482, !482}
!8246 = !DILocalVariable(name: "val", arg: 1, scope: !8242, file: !8243, line: 57, type: !482)
!8247 = !DILocation(line: 57, column: 57, scope: !8242)
!8248 = !DILocation(line: 60, column: 23, scope: !8242)
!8249 = !DILocation(line: 60, column: 9, scope: !8242)
!8250 = !DILocation(line: 60, column: 2, scope: !8242)
!8251 = distinct !DISubprogram(name: "get_order", scope: !8252, file: !8252, line: 29, type: !8253, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8252 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8253 = !DISubroutineType(types: !8254)
!8254 = !{!324, !389}
!8255 = !DILocalVariable(name: "x", arg: 1, scope: !8256, file: !8257, line: 366, type: !487)
!8256 = distinct !DISubprogram(name: "fls64", scope: !8257, file: !8257, line: 366, type: !8258, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8257 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!324, !487}
!8260 = !DILocation(line: 366, column: 40, scope: !8256, inlinedAt: !8261)
!8261 = distinct !DILocation(line: 46, column: 9, scope: !8251)
!8262 = !DILocalVariable(name: "bitpos", scope: !8256, file: !8257, line: 368, type: !324)
!8263 = !DILocation(line: 368, column: 6, scope: !8256, inlinedAt: !8261)
!8264 = !DILocalVariable(name: "size", arg: 1, scope: !8251, file: !8252, line: 29, type: !389)
!8265 = !DILocation(line: 29, column: 63, scope: !8251)
!8266 = !DILocation(line: 31, column: 27, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8251, file: !8252, line: 31, column: 6)
!8268 = !DILocation(line: 31, column: 6, scope: !8267)
!8269 = !DILocation(line: 31, column: 6, scope: !8251)
!8270 = !DILocation(line: 32, column: 8, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !8252, line: 32, column: 7)
!8272 = distinct !DILexicalBlock(scope: !8267, file: !8252, line: 31, column: 34)
!8273 = !DILocation(line: 32, column: 7, scope: !8272)
!8274 = !DILocation(line: 33, column: 4, scope: !8271)
!8275 = !DILocation(line: 35, column: 7, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8272, file: !8252, line: 35, column: 7)
!8277 = !DILocation(line: 35, column: 12, scope: !8276)
!8278 = !DILocation(line: 35, column: 7, scope: !8272)
!8279 = !DILocation(line: 36, column: 4, scope: !8276)
!8280 = !DILocation(line: 38, column: 10, scope: !8272)
!8281 = !DILocation(line: 38, column: 28, scope: !8272)
!8282 = !DILocation(line: 38, column: 41, scope: !8272)
!8283 = !DILocation(line: 38, column: 3, scope: !8272)
!8284 = !DILocation(line: 41, column: 6, scope: !8251)
!8285 = !DILocation(line: 42, column: 7, scope: !8251)
!8286 = !DILocation(line: 46, column: 15, scope: !8251)
!8287 = !DILocation(line: 374, column: 2, scope: !8256, inlinedAt: !8261)
!8288 = !DILocation(line: 376, column: 14, scope: !8256, inlinedAt: !8261)
!8289 = !{i32 349434}
!8290 = !DILocation(line: 377, column: 9, scope: !8256, inlinedAt: !8261)
!8291 = !DILocation(line: 377, column: 16, scope: !8256, inlinedAt: !8261)
!8292 = !DILocation(line: 46, column: 2, scope: !8251)
!8293 = !DILocation(line: 48, column: 1, scope: !8251)
!8294 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8295, file: !8295, line: 30, type: !8296, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8295 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8296 = !DISubroutineType(types: !8297)
!8297 = !{!324, !486}
!8298 = !DILocation(line: 366, column: 40, scope: !8256, inlinedAt: !8299)
!8299 = distinct !DILocation(line: 32, column: 9, scope: !8294)
!8300 = !DILocation(line: 368, column: 6, scope: !8256, inlinedAt: !8299)
!8301 = !DILocalVariable(name: "n", arg: 1, scope: !8294, file: !8295, line: 30, type: !486)
!8302 = !DILocation(line: 30, column: 21, scope: !8294)
!8303 = !DILocation(line: 32, column: 15, scope: !8294)
!8304 = !DILocation(line: 374, column: 2, scope: !8256, inlinedAt: !8299)
!8305 = !DILocation(line: 376, column: 14, scope: !8256, inlinedAt: !8299)
!8306 = !DILocation(line: 377, column: 9, scope: !8256, inlinedAt: !8299)
!8307 = !DILocation(line: 377, column: 16, scope: !8256, inlinedAt: !8299)
!8308 = !DILocation(line: 32, column: 18, scope: !8294)
!8309 = !DILocation(line: 32, column: 2, scope: !8294)
!8310 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8311, file: !8311, line: 137, type: !8312, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8311 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8312 = !DISubroutineType(types: !8313)
!8313 = !{!257, !1115, !3283, !386, !861}
!8314 = !DILocalVariable(name: "s", arg: 1, scope: !8310, file: !8311, line: 137, type: !1115)
!8315 = !DILocation(line: 137, column: 54, scope: !8310)
!8316 = !DILocalVariable(name: "object", arg: 2, scope: !8310, file: !8311, line: 137, type: !3283)
!8317 = !DILocation(line: 137, column: 69, scope: !8310)
!8318 = !DILocalVariable(name: "size", arg: 3, scope: !8310, file: !8311, line: 138, type: !386)
!8319 = !DILocation(line: 138, column: 12, scope: !8310)
!8320 = !DILocalVariable(name: "flags", arg: 4, scope: !8310, file: !8311, line: 138, type: !861)
!8321 = !DILocation(line: 138, column: 24, scope: !8310)
!8322 = !DILocation(line: 140, column: 17, scope: !8310)
!8323 = !DILocation(line: 140, column: 2, scope: !8310)
!8324 = distinct !DISubprogram(name: "__arch_swab32", scope: !8325, file: !8325, line: 8, type: !8244, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8325 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!8326 = !DILocalVariable(name: "val", arg: 1, scope: !8324, file: !8325, line: 8, type: !482)
!8327 = !DILocation(line: 8, column: 61, scope: !8324)
!8328 = !DILocation(line: 10, column: 38, scope: !8324)
!8329 = !DILocation(line: 10, column: 2, scope: !8324)
!8330 = !{i32 469658}
!8331 = !DILocation(line: 11, column: 9, scope: !8324)
!8332 = !DILocation(line: 11, column: 2, scope: !8324)
!8333 = distinct !DISubprogram(name: "mmc_blk_rw_rq_prep", scope: !3, file: !3, line: 1516, type: !8334, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8334 = !DISubroutineType(types: !8335)
!8335 = !{null, !5457, !262, !324, !258}
!8336 = !DILocalVariable(name: "mqrq", arg: 1, scope: !8333, file: !3, line: 1516, type: !5457)
!8337 = !DILocation(line: 1516, column: 54, scope: !8333)
!8338 = !DILocalVariable(name: "card", arg: 2, scope: !8333, file: !3, line: 1517, type: !262)
!8339 = !DILocation(line: 1517, column: 28, scope: !8333)
!8340 = !DILocalVariable(name: "disable_multi", arg: 3, scope: !8333, file: !3, line: 1518, type: !324)
!8341 = !DILocation(line: 1518, column: 15, scope: !8333)
!8342 = !DILocalVariable(name: "mq", arg: 4, scope: !8333, file: !3, line: 1519, type: !258)
!8343 = !DILocation(line: 1519, column: 29, scope: !8333)
!8344 = !DILocalVariable(name: "readcmd", scope: !8333, file: !3, line: 1521, type: !480)
!8345 = !DILocation(line: 1521, column: 6, scope: !8333)
!8346 = !DILocalVariable(name: "writecmd", scope: !8333, file: !3, line: 1521, type: !480)
!8347 = !DILocation(line: 1521, column: 15, scope: !8333)
!8348 = !DILocalVariable(name: "brq", scope: !8333, file: !3, line: 1522, type: !6109)
!8349 = !DILocation(line: 1522, column: 26, scope: !8333)
!8350 = !DILocation(line: 1522, column: 33, scope: !8333)
!8351 = !DILocation(line: 1522, column: 39, scope: !8333)
!8352 = !DILocalVariable(name: "req", scope: !8333, file: !3, line: 1523, type: !2386)
!8353 = !DILocation(line: 1523, column: 18, scope: !8333)
!8354 = !DILocation(line: 1523, column: 45, scope: !8333)
!8355 = !DILocation(line: 1523, column: 24, scope: !8333)
!8356 = !DILocalVariable(name: "md", scope: !8333, file: !3, line: 1524, type: !5408)
!8357 = !DILocation(line: 1524, column: 23, scope: !8333)
!8358 = !DILocation(line: 1524, column: 28, scope: !8333)
!8359 = !DILocation(line: 1524, column: 32, scope: !8333)
!8360 = !DILocalVariable(name: "do_rel_wr", scope: !8333, file: !3, line: 1525, type: !555)
!8361 = !DILocation(line: 1525, column: 7, scope: !8333)
!8362 = !DILocalVariable(name: "do_data_tag", scope: !8333, file: !3, line: 1525, type: !555)
!8363 = !DILocation(line: 1525, column: 18, scope: !8333)
!8364 = !DILocation(line: 1527, column: 20, scope: !8333)
!8365 = !DILocation(line: 1527, column: 24, scope: !8333)
!8366 = !DILocation(line: 1527, column: 30, scope: !8333)
!8367 = !DILocation(line: 1527, column: 2, scope: !8333)
!8368 = !DILocation(line: 1529, column: 18, scope: !8333)
!8369 = !DILocation(line: 1529, column: 23, scope: !8333)
!8370 = !DILocation(line: 1529, column: 2, scope: !8333)
!8371 = !DILocation(line: 1529, column: 7, scope: !8333)
!8372 = !DILocation(line: 1529, column: 11, scope: !8333)
!8373 = !DILocation(line: 1529, column: 15, scope: !8333)
!8374 = !DILocation(line: 1531, column: 28, scope: !8333)
!8375 = !DILocation(line: 1531, column: 17, scope: !8333)
!8376 = !DILocation(line: 1531, column: 2, scope: !8333)
!8377 = !DILocation(line: 1531, column: 7, scope: !8333)
!8378 = !DILocation(line: 1531, column: 11, scope: !8333)
!8379 = !DILocation(line: 1531, column: 15, scope: !8333)
!8380 = !DILocation(line: 1532, column: 7, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 1532, column: 6)
!8382 = !DILocation(line: 1532, column: 6, scope: !8333)
!8383 = !DILocation(line: 1533, column: 3, scope: !8381)
!8384 = !DILocation(line: 1533, column: 8, scope: !8381)
!8385 = !DILocation(line: 1533, column: 12, scope: !8381)
!8386 = !DILocation(line: 1533, column: 16, scope: !8381)
!8387 = !DILocation(line: 1534, column: 2, scope: !8333)
!8388 = !DILocation(line: 1534, column: 7, scope: !8333)
!8389 = !DILocation(line: 1534, column: 11, scope: !8333)
!8390 = !DILocation(line: 1534, column: 17, scope: !8333)
!8391 = !DILocation(line: 1536, column: 6, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 1536, column: 6)
!8393 = !DILocation(line: 1536, column: 11, scope: !8392)
!8394 = !DILocation(line: 1536, column: 16, scope: !8392)
!8395 = !DILocation(line: 1536, column: 23, scope: !8392)
!8396 = !DILocation(line: 1536, column: 27, scope: !8392)
!8397 = !DILocation(line: 1536, column: 30, scope: !8392)
!8398 = !DILocation(line: 1536, column: 6, scope: !8333)
!8399 = !DILocation(line: 1540, column: 8, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 1540, column: 7)
!8401 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1536, column: 41)
!8402 = !DILocation(line: 1540, column: 36, scope: !8400)
!8403 = !DILocation(line: 1541, column: 7, scope: !8400)
!8404 = !DILocation(line: 1541, column: 24, scope: !8400)
!8405 = !DILocation(line: 1540, column: 7, scope: !8401)
!8406 = !DILocation(line: 1542, column: 21, scope: !8400)
!8407 = !DILocation(line: 1542, column: 26, scope: !8400)
!8408 = !DILocation(line: 1542, column: 4, scope: !8400)
!8409 = !DILocation(line: 1542, column: 9, scope: !8400)
!8410 = !DILocation(line: 1542, column: 13, scope: !8400)
!8411 = !DILocation(line: 1542, column: 18, scope: !8400)
!8412 = !DILocation(line: 1543, column: 11, scope: !8401)
!8413 = !DILocation(line: 1544, column: 12, scope: !8401)
!8414 = !DILocation(line: 1545, column: 2, scope: !8401)
!8415 = !DILocation(line: 1546, column: 3, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1545, column: 9)
!8417 = !DILocation(line: 1546, column: 8, scope: !8416)
!8418 = !DILocation(line: 1546, column: 12, scope: !8416)
!8419 = !DILocation(line: 1546, column: 17, scope: !8416)
!8420 = !DILocation(line: 1547, column: 11, scope: !8416)
!8421 = !DILocation(line: 1548, column: 12, scope: !8416)
!8422 = !DILocation(line: 1550, column: 20, scope: !8333)
!8423 = !DILocation(line: 1550, column: 37, scope: !8333)
!8424 = !DILocation(line: 1550, column: 47, scope: !8333)
!8425 = !DILocation(line: 1550, column: 57, scope: !8333)
!8426 = !DILocation(line: 1550, column: 2, scope: !8333)
!8427 = !DILocation(line: 1550, column: 7, scope: !8333)
!8428 = !DILocation(line: 1550, column: 11, scope: !8333)
!8429 = !DILocation(line: 1550, column: 18, scope: !8333)
!8430 = !DILocation(line: 1570, column: 7, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8333, file: !3, line: 1570, column: 6)
!8432 = !DILocation(line: 1570, column: 11, scope: !8431)
!8433 = !DILocation(line: 1570, column: 17, scope: !8431)
!8434 = !DILocation(line: 1570, column: 34, scope: !8431)
!8435 = !DILocation(line: 1570, column: 50, scope: !8431)
!8436 = !DILocation(line: 1570, column: 55, scope: !8431)
!8437 = !DILocation(line: 1570, column: 59, scope: !8431)
!8438 = !DILocation(line: 1570, column: 37, scope: !8431)
!8439 = !DILocation(line: 1570, column: 67, scope: !8431)
!8440 = !DILocation(line: 1571, column: 7, scope: !8431)
!8441 = !DILocation(line: 1571, column: 17, scope: !8431)
!8442 = !DILocation(line: 1571, column: 22, scope: !8431)
!8443 = !DILocation(line: 1571, column: 28, scope: !8431)
!8444 = !DILocation(line: 1571, column: 35, scope: !8431)
!8445 = !DILocation(line: 1571, column: 61, scope: !8431)
!8446 = !DILocation(line: 1572, column: 7, scope: !8431)
!8447 = !DILocation(line: 1570, column: 6, scope: !8333)
!8448 = !DILocation(line: 1573, column: 3, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 1572, column: 21)
!8450 = !DILocation(line: 1573, column: 8, scope: !8449)
!8451 = !DILocation(line: 1573, column: 12, scope: !8449)
!8452 = !DILocation(line: 1573, column: 19, scope: !8449)
!8453 = !DILocation(line: 1574, column: 18, scope: !8449)
!8454 = !DILocation(line: 1574, column: 23, scope: !8449)
!8455 = !DILocation(line: 1574, column: 28, scope: !8449)
!8456 = !DILocation(line: 1575, column: 5, scope: !8449)
!8457 = !DILocation(line: 1574, column: 35, scope: !8449)
!8458 = !DILocation(line: 1576, column: 5, scope: !8449)
!8459 = !DILocation(line: 1575, column: 32, scope: !8449)
!8460 = !DILocation(line: 1574, column: 3, scope: !8449)
!8461 = !DILocation(line: 1574, column: 8, scope: !8449)
!8462 = !DILocation(line: 1574, column: 12, scope: !8449)
!8463 = !DILocation(line: 1574, column: 16, scope: !8449)
!8464 = !DILocation(line: 1577, column: 3, scope: !8449)
!8465 = !DILocation(line: 1577, column: 8, scope: !8449)
!8466 = !DILocation(line: 1577, column: 12, scope: !8449)
!8467 = !DILocation(line: 1577, column: 18, scope: !8449)
!8468 = !DILocation(line: 1578, column: 19, scope: !8449)
!8469 = !DILocation(line: 1578, column: 24, scope: !8449)
!8470 = !DILocation(line: 1578, column: 3, scope: !8449)
!8471 = !DILocation(line: 1578, column: 8, scope: !8449)
!8472 = !DILocation(line: 1578, column: 12, scope: !8449)
!8473 = !DILocation(line: 1578, column: 16, scope: !8449)
!8474 = !DILocation(line: 1579, column: 2, scope: !8449)
!8475 = !DILocation(line: 1580, column: 1, scope: !8333)
!8476 = distinct !DISubprogram(name: "mmc_queue_req_to_req", scope: !128, file: !128, line: 32, type: !8477, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8477 = !DISubroutineType(types: !8478)
!8478 = !{!2386, !5457}
!8479 = !DILocalVariable(name: "mqr", arg: 1, scope: !8476, file: !128, line: 32, type: !5457)
!8480 = !DILocation(line: 32, column: 74, scope: !8476)
!8481 = !DILocation(line: 34, column: 28, scope: !8476)
!8482 = !DILocation(line: 34, column: 9, scope: !8476)
!8483 = !DILocation(line: 34, column: 2, scope: !8476)
!8484 = distinct !DISubprogram(name: "mmc_blk_data_prep", scope: !3, file: !3, line: 1230, type: !8485, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8485 = !DISubroutineType(types: !8486)
!8486 = !{null, !258, !5457, !324, !1071, !1071}
!8487 = !DILocalVariable(name: "mq", arg: 1, scope: !8484, file: !3, line: 1230, type: !258)
!8488 = !DILocation(line: 1230, column: 49, scope: !8484)
!8489 = !DILocalVariable(name: "mqrq", arg: 2, scope: !8484, file: !3, line: 1230, type: !5457)
!8490 = !DILocation(line: 1230, column: 75, scope: !8484)
!8491 = !DILocalVariable(name: "disable_multi", arg: 3, scope: !8484, file: !3, line: 1231, type: !324)
!8492 = !DILocation(line: 1231, column: 14, scope: !8484)
!8493 = !DILocalVariable(name: "do_rel_wr_p", arg: 4, scope: !8484, file: !3, line: 1231, type: !1071)
!8494 = !DILocation(line: 1231, column: 35, scope: !8484)
!8495 = !DILocalVariable(name: "do_data_tag_p", arg: 5, scope: !8484, file: !3, line: 1232, type: !1071)
!8496 = !DILocation(line: 1232, column: 16, scope: !8484)
!8497 = !DILocalVariable(name: "md", scope: !8484, file: !3, line: 1234, type: !5408)
!8498 = !DILocation(line: 1234, column: 23, scope: !8484)
!8499 = !DILocation(line: 1234, column: 28, scope: !8484)
!8500 = !DILocation(line: 1234, column: 32, scope: !8484)
!8501 = !DILocalVariable(name: "card", scope: !8484, file: !3, line: 1235, type: !262)
!8502 = !DILocation(line: 1235, column: 19, scope: !8484)
!8503 = !DILocation(line: 1235, column: 26, scope: !8484)
!8504 = !DILocation(line: 1235, column: 30, scope: !8484)
!8505 = !DILocation(line: 1235, column: 36, scope: !8484)
!8506 = !DILocalVariable(name: "brq", scope: !8484, file: !3, line: 1236, type: !6109)
!8507 = !DILocation(line: 1236, column: 26, scope: !8484)
!8508 = !DILocation(line: 1236, column: 33, scope: !8484)
!8509 = !DILocation(line: 1236, column: 39, scope: !8484)
!8510 = !DILocalVariable(name: "req", scope: !8484, file: !3, line: 1237, type: !2386)
!8511 = !DILocation(line: 1237, column: 18, scope: !8484)
!8512 = !DILocation(line: 1237, column: 45, scope: !8484)
!8513 = !DILocation(line: 1237, column: 24, scope: !8484)
!8514 = !DILocalVariable(name: "do_rel_wr", scope: !8484, file: !3, line: 1238, type: !555)
!8515 = !DILocation(line: 1238, column: 7, scope: !8484)
!8516 = !DILocalVariable(name: "do_data_tag", scope: !8484, file: !3, line: 1238, type: !555)
!8517 = !DILocation(line: 1238, column: 18, scope: !8484)
!8518 = !DILocation(line: 1244, column: 15, scope: !8484)
!8519 = !DILocation(line: 1244, column: 20, scope: !8484)
!8520 = !DILocation(line: 1244, column: 30, scope: !8484)
!8521 = !DILocation(line: 1244, column: 41, scope: !8484)
!8522 = !DILocation(line: 1245, column: 7, scope: !8484)
!8523 = !DILocation(line: 1245, column: 24, scope: !8484)
!8524 = !DILocation(line: 1245, column: 33, scope: !8484)
!8525 = !DILocation(line: 1246, column: 8, scope: !8484)
!8526 = !DILocation(line: 1246, column: 12, scope: !8484)
!8527 = !DILocation(line: 1246, column: 18, scope: !8484)
!8528 = !DILocation(line: 0, scope: !8484)
!8529 = !DILocation(line: 1244, column: 12, scope: !8484)
!8530 = !DILocation(line: 1248, column: 9, scope: !8484)
!8531 = !DILocation(line: 1248, column: 2, scope: !8484)
!8532 = !DILocation(line: 1250, column: 19, scope: !8484)
!8533 = !DILocation(line: 1250, column: 24, scope: !8484)
!8534 = !DILocation(line: 1250, column: 2, scope: !8484)
!8535 = !DILocation(line: 1250, column: 7, scope: !8484)
!8536 = !DILocation(line: 1250, column: 11, scope: !8484)
!8537 = !DILocation(line: 1250, column: 16, scope: !8484)
!8538 = !DILocation(line: 1251, column: 17, scope: !8484)
!8539 = !DILocation(line: 1251, column: 22, scope: !8484)
!8540 = !DILocation(line: 1251, column: 2, scope: !8484)
!8541 = !DILocation(line: 1251, column: 7, scope: !8484)
!8542 = !DILocation(line: 1251, column: 11, scope: !8484)
!8543 = !DILocation(line: 1251, column: 15, scope: !8484)
!8544 = !DILocation(line: 1253, column: 2, scope: !8484)
!8545 = !DILocation(line: 1253, column: 7, scope: !8484)
!8546 = !DILocation(line: 1253, column: 12, scope: !8484)
!8547 = !DILocation(line: 1253, column: 19, scope: !8484)
!8548 = !DILocation(line: 1254, column: 2, scope: !8484)
!8549 = !DILocation(line: 1254, column: 7, scope: !8484)
!8550 = !DILocation(line: 1254, column: 12, scope: !8484)
!8551 = !DILocation(line: 1254, column: 16, scope: !8484)
!8552 = !DILocation(line: 1256, column: 6, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1256, column: 6)
!8554 = !DILocation(line: 1256, column: 23, scope: !8553)
!8555 = !DILocation(line: 1256, column: 6, scope: !8484)
!8556 = !DILocation(line: 1257, column: 3, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 1256, column: 32)
!8558 = !DILocation(line: 1257, column: 8, scope: !8557)
!8559 = !DILocation(line: 1257, column: 13, scope: !8557)
!8560 = !DILocation(line: 1257, column: 19, scope: !8557)
!8561 = !DILocation(line: 1258, column: 3, scope: !8557)
!8562 = !DILocation(line: 1258, column: 8, scope: !8557)
!8563 = !DILocation(line: 1258, column: 13, scope: !8557)
!8564 = !DILocation(line: 1258, column: 19, scope: !8557)
!8565 = !DILocation(line: 1259, column: 2, scope: !8557)
!8566 = !DILocation(line: 1260, column: 3, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 1259, column: 9)
!8568 = !DILocation(line: 1260, column: 8, scope: !8567)
!8569 = !DILocation(line: 1260, column: 13, scope: !8567)
!8570 = !DILocation(line: 1260, column: 19, scope: !8567)
!8571 = !DILocation(line: 1261, column: 3, scope: !8567)
!8572 = !DILocation(line: 1261, column: 8, scope: !8567)
!8573 = !DILocation(line: 1261, column: 13, scope: !8567)
!8574 = !DILocation(line: 1261, column: 19, scope: !8567)
!8575 = !DILocation(line: 1264, column: 2, scope: !8484)
!8576 = !DILocation(line: 1264, column: 7, scope: !8484)
!8577 = !DILocation(line: 1264, column: 12, scope: !8484)
!8578 = !DILocation(line: 1264, column: 18, scope: !8484)
!8579 = !DILocation(line: 1265, column: 36, scope: !8484)
!8580 = !DILocation(line: 1265, column: 21, scope: !8484)
!8581 = !DILocation(line: 1265, column: 2, scope: !8484)
!8582 = !DILocation(line: 1265, column: 7, scope: !8484)
!8583 = !DILocation(line: 1265, column: 12, scope: !8484)
!8584 = !DILocation(line: 1265, column: 19, scope: !8484)
!8585 = !DILocation(line: 1266, column: 34, scope: !8484)
!8586 = !DILocation(line: 1266, column: 23, scope: !8484)
!8587 = !DILocation(line: 1266, column: 2, scope: !8484)
!8588 = !DILocation(line: 1266, column: 7, scope: !8484)
!8589 = !DILocation(line: 1266, column: 12, scope: !8484)
!8590 = !DILocation(line: 1266, column: 21, scope: !8484)
!8591 = !DILocation(line: 1280, column: 6, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1280, column: 6)
!8593 = !DILocation(line: 1280, column: 11, scope: !8592)
!8594 = !DILocation(line: 1280, column: 16, scope: !8592)
!8595 = !DILocation(line: 1280, column: 25, scope: !8592)
!8596 = !DILocation(line: 1280, column: 31, scope: !8592)
!8597 = !DILocation(line: 1280, column: 37, scope: !8592)
!8598 = !DILocation(line: 1280, column: 23, scope: !8592)
!8599 = !DILocation(line: 1280, column: 6, scope: !8484)
!8600 = !DILocation(line: 1281, column: 22, scope: !8592)
!8601 = !DILocation(line: 1281, column: 28, scope: !8592)
!8602 = !DILocation(line: 1281, column: 34, scope: !8592)
!8603 = !DILocation(line: 1281, column: 3, scope: !8592)
!8604 = !DILocation(line: 1281, column: 8, scope: !8592)
!8605 = !DILocation(line: 1281, column: 13, scope: !8592)
!8606 = !DILocation(line: 1281, column: 20, scope: !8592)
!8607 = !DILocation(line: 1283, column: 6, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1283, column: 6)
!8609 = !DILocation(line: 1283, column: 11, scope: !8608)
!8610 = !DILocation(line: 1283, column: 16, scope: !8608)
!8611 = !DILocation(line: 1283, column: 23, scope: !8608)
!8612 = !DILocation(line: 1283, column: 6, scope: !8484)
!8613 = !DILocation(line: 1289, column: 7, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1289, column: 7)
!8615 = distinct !DILexicalBlock(scope: !8608, file: !3, line: 1283, column: 28)
!8616 = !DILocation(line: 1289, column: 35, scope: !8614)
!8617 = !DILocation(line: 1289, column: 39, scope: !8614)
!8618 = !DILocation(line: 1289, column: 56, scope: !8614)
!8619 = !DILocation(line: 1289, column: 65, scope: !8614)
!8620 = !DILocation(line: 1290, column: 19, scope: !8614)
!8621 = !DILocation(line: 1290, column: 8, scope: !8614)
!8622 = !DILocation(line: 1290, column: 41, scope: !8614)
!8623 = !DILocation(line: 1290, column: 26, scope: !8614)
!8624 = !DILocation(line: 1290, column: 24, scope: !8614)
!8625 = !DILocation(line: 1291, column: 21, scope: !8614)
!8626 = !DILocation(line: 1291, column: 25, scope: !8614)
!8627 = !DILocation(line: 1291, column: 8, scope: !8614)
!8628 = !DILocation(line: 1290, column: 46, scope: !8614)
!8629 = !DILocation(line: 1289, column: 7, scope: !8615)
!8630 = !DILocation(line: 1292, column: 4, scope: !8614)
!8631 = !DILocation(line: 1292, column: 9, scope: !8614)
!8632 = !DILocation(line: 1292, column: 14, scope: !8614)
!8633 = !DILocation(line: 1292, column: 20, scope: !8614)
!8634 = !DILocation(line: 1299, column: 7, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1299, column: 7)
!8636 = !DILocation(line: 1299, column: 7, scope: !8615)
!8637 = !DILocation(line: 1300, column: 4, scope: !8635)
!8638 = !DILocation(line: 1300, column: 9, scope: !8635)
!8639 = !DILocation(line: 1300, column: 14, scope: !8635)
!8640 = !DILocation(line: 1300, column: 21, scope: !8635)
!8641 = !DILocation(line: 1306, column: 7, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8615, file: !3, line: 1306, column: 7)
!8643 = !DILocation(line: 1306, column: 13, scope: !8642)
!8644 = !DILocation(line: 1306, column: 19, scope: !8642)
!8645 = !DILocation(line: 1306, column: 24, scope: !8642)
!8646 = !DILocation(line: 1306, column: 7, scope: !8615)
!8647 = !DILocation(line: 1307, column: 23, scope: !8642)
!8648 = !DILocation(line: 1307, column: 29, scope: !8642)
!8649 = !DILocation(line: 1307, column: 35, scope: !8642)
!8650 = !DILocation(line: 1307, column: 40, scope: !8642)
!8651 = !DILocation(line: 1307, column: 55, scope: !8642)
!8652 = !DILocation(line: 1308, column: 8, scope: !8642)
!8653 = !DILocation(line: 1308, column: 25, scope: !8642)
!8654 = !DILocation(line: 1308, column: 7, scope: !8642)
!8655 = !DILocation(line: 1310, column: 7, scope: !8642)
!8656 = !DILocation(line: 1310, column: 12, scope: !8642)
!8657 = !DILocation(line: 1310, column: 17, scope: !8642)
!8658 = !DILocation(line: 1307, column: 4, scope: !8642)
!8659 = !DILocation(line: 1307, column: 9, scope: !8642)
!8660 = !DILocation(line: 1307, column: 14, scope: !8642)
!8661 = !DILocation(line: 1307, column: 21, scope: !8642)
!8662 = !DILocation(line: 1311, column: 2, scope: !8615)
!8663 = !DILocation(line: 1313, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1313, column: 6)
!8665 = !DILocation(line: 1313, column: 6, scope: !8484)
!8666 = !DILocation(line: 1314, column: 20, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1313, column: 17)
!8668 = !DILocation(line: 1314, column: 25, scope: !8667)
!8669 = !DILocation(line: 1314, column: 31, scope: !8667)
!8670 = !DILocation(line: 1314, column: 3, scope: !8667)
!8671 = !DILocation(line: 1315, column: 3, scope: !8667)
!8672 = !DILocation(line: 1315, column: 8, scope: !8667)
!8673 = !DILocation(line: 1315, column: 13, scope: !8667)
!8674 = !DILocation(line: 1315, column: 19, scope: !8667)
!8675 = !DILocation(line: 1316, column: 2, scope: !8667)
!8676 = !DILocation(line: 1322, column: 16, scope: !8484)
!8677 = !DILocation(line: 1322, column: 22, scope: !8484)
!8678 = !DILocation(line: 1322, column: 30, scope: !8484)
!8679 = !DILocation(line: 1322, column: 49, scope: !8484)
!8680 = !DILocation(line: 1323, column: 10, scope: !8484)
!8681 = !DILocation(line: 1323, column: 15, scope: !8484)
!8682 = !DILocation(line: 1323, column: 25, scope: !8484)
!8683 = !DILocation(line: 1323, column: 37, scope: !8484)
!8684 = !DILocation(line: 1324, column: 10, scope: !8484)
!8685 = !DILocation(line: 1324, column: 27, scope: !8484)
!8686 = !DILocation(line: 1324, column: 37, scope: !8484)
!8687 = !DILocation(line: 1325, column: 11, scope: !8484)
!8688 = !DILocation(line: 1325, column: 16, scope: !8484)
!8689 = !DILocation(line: 1325, column: 21, scope: !8484)
!8690 = !DILocation(line: 1325, column: 30, scope: !8484)
!8691 = !DILocation(line: 1325, column: 35, scope: !8484)
!8692 = !DILocation(line: 1325, column: 40, scope: !8484)
!8693 = !DILocation(line: 1325, column: 28, scope: !8484)
!8694 = !DILocation(line: 1326, column: 10, scope: !8484)
!8695 = !DILocation(line: 1326, column: 16, scope: !8484)
!8696 = !DILocation(line: 1326, column: 24, scope: !8484)
!8697 = !DILocation(line: 1325, column: 47, scope: !8484)
!8698 = !DILocation(line: 1322, column: 14, scope: !8484)
!8699 = !DILocation(line: 1328, column: 6, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1328, column: 6)
!8701 = !DILocation(line: 1328, column: 6, scope: !8484)
!8702 = !DILocation(line: 1329, column: 3, scope: !8700)
!8703 = !DILocation(line: 1329, column: 8, scope: !8700)
!8704 = !DILocation(line: 1329, column: 13, scope: !8700)
!8705 = !DILocation(line: 1329, column: 19, scope: !8700)
!8706 = !DILocation(line: 1331, column: 24, scope: !8484)
!8707 = !DILocation(line: 1331, column: 29, scope: !8484)
!8708 = !DILocation(line: 1331, column: 35, scope: !8484)
!8709 = !DILocation(line: 1331, column: 2, scope: !8484)
!8710 = !DILocation(line: 1333, column: 17, scope: !8484)
!8711 = !DILocation(line: 1333, column: 23, scope: !8484)
!8712 = !DILocation(line: 1333, column: 2, scope: !8484)
!8713 = !DILocation(line: 1333, column: 7, scope: !8484)
!8714 = !DILocation(line: 1333, column: 12, scope: !8484)
!8715 = !DILocation(line: 1333, column: 15, scope: !8484)
!8716 = !DILocation(line: 1334, column: 38, scope: !8484)
!8717 = !DILocation(line: 1334, column: 42, scope: !8484)
!8718 = !DILocation(line: 1334, column: 21, scope: !8484)
!8719 = !DILocation(line: 1334, column: 2, scope: !8484)
!8720 = !DILocation(line: 1334, column: 7, scope: !8484)
!8721 = !DILocation(line: 1334, column: 12, scope: !8484)
!8722 = !DILocation(line: 1334, column: 19, scope: !8484)
!8723 = !DILocation(line: 1340, column: 6, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1340, column: 6)
!8725 = !DILocation(line: 1340, column: 11, scope: !8724)
!8726 = !DILocation(line: 1340, column: 16, scope: !8724)
!8727 = !DILocation(line: 1340, column: 41, scope: !8724)
!8728 = !DILocation(line: 1340, column: 26, scope: !8724)
!8729 = !DILocation(line: 1340, column: 23, scope: !8724)
!8730 = !DILocation(line: 1340, column: 6, scope: !8484)
!8731 = !DILocalVariable(name: "i", scope: !8732, file: !3, line: 1341, type: !324)
!8732 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 1340, column: 47)
!8733 = !DILocation(line: 1341, column: 7, scope: !8732)
!8734 = !DILocalVariable(name: "data_size", scope: !8732, file: !3, line: 1341, type: !324)
!8735 = !DILocation(line: 1341, column: 10, scope: !8732)
!8736 = !DILocation(line: 1341, column: 22, scope: !8732)
!8737 = !DILocation(line: 1341, column: 27, scope: !8732)
!8738 = !DILocation(line: 1341, column: 32, scope: !8732)
!8739 = !DILocation(line: 1341, column: 39, scope: !8732)
!8740 = !DILocalVariable(name: "sg", scope: !8732, file: !3, line: 1342, type: !4966)
!8741 = !DILocation(line: 1342, column: 23, scope: !8732)
!8742 = !DILocation(line: 1344, column: 3, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 1344, column: 3)
!8744 = !DILocation(line: 1344, column: 3, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1344, column: 3)
!8746 = !DILocation(line: 1345, column: 17, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 1344, column: 54)
!8748 = !DILocation(line: 1345, column: 21, scope: !8747)
!8749 = !DILocation(line: 1345, column: 14, scope: !8747)
!8750 = !DILocation(line: 1346, column: 8, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 1346, column: 8)
!8752 = !DILocation(line: 1346, column: 18, scope: !8751)
!8753 = !DILocation(line: 1346, column: 8, scope: !8747)
!8754 = !DILocation(line: 1347, column: 19, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 1346, column: 24)
!8756 = !DILocation(line: 1347, column: 5, scope: !8755)
!8757 = !DILocation(line: 1347, column: 9, scope: !8755)
!8758 = !DILocation(line: 1347, column: 16, scope: !8755)
!8759 = !DILocation(line: 1348, column: 6, scope: !8755)
!8760 = !DILocation(line: 1349, column: 5, scope: !8755)
!8761 = !DILocation(line: 1351, column: 3, scope: !8747)
!8762 = distinct !{!8762, !8742, !8763}
!8763 = !DILocation(line: 1351, column: 3, scope: !8743)
!8764 = !DILocation(line: 1352, column: 22, scope: !8732)
!8765 = !DILocation(line: 1352, column: 3, scope: !8732)
!8766 = !DILocation(line: 1352, column: 8, scope: !8732)
!8767 = !DILocation(line: 1352, column: 13, scope: !8732)
!8768 = !DILocation(line: 1352, column: 20, scope: !8732)
!8769 = !DILocation(line: 1353, column: 2, scope: !8732)
!8770 = !DILocation(line: 1355, column: 6, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1355, column: 6)
!8772 = !DILocation(line: 1355, column: 6, scope: !8484)
!8773 = !DILocation(line: 1356, column: 18, scope: !8771)
!8774 = !DILocation(line: 1356, column: 4, scope: !8771)
!8775 = !DILocation(line: 1356, column: 16, scope: !8771)
!8776 = !DILocation(line: 1356, column: 3, scope: !8771)
!8777 = !DILocation(line: 1358, column: 6, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1358, column: 6)
!8779 = !DILocation(line: 1358, column: 6, scope: !8484)
!8780 = !DILocation(line: 1359, column: 20, scope: !8778)
!8781 = !DILocation(line: 1359, column: 4, scope: !8778)
!8782 = !DILocation(line: 1359, column: 18, scope: !8778)
!8783 = !DILocation(line: 1359, column: 3, scope: !8778)
!8784 = !DILocation(line: 1360, column: 1, scope: !8484)
!8785 = distinct !DISubprogram(name: "blk_rq_pos", scope: !43, file: !43, line: 983, type: !8786, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{!948, !7380}
!8788 = !DILocalVariable(name: "rq", arg: 1, scope: !8785, file: !43, line: 983, type: !7380)
!8789 = !DILocation(line: 983, column: 57, scope: !8785)
!8790 = !DILocation(line: 985, column: 9, scope: !8785)
!8791 = !DILocation(line: 985, column: 13, scope: !8785)
!8792 = !DILocation(line: 985, column: 2, scope: !8785)
!8793 = distinct !DISubprogram(name: "mmc_op_multi", scope: !7498, file: !7498, line: 96, type: !7499, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8794 = !DILocalVariable(name: "opcode", arg: 1, scope: !8793, file: !7498, line: 96, type: !480)
!8795 = !DILocation(line: 96, column: 37, scope: !8793)
!8796 = !DILocation(line: 98, column: 9, scope: !8793)
!8797 = !DILocation(line: 98, column: 16, scope: !8793)
!8798 = !DILocation(line: 98, column: 44, scope: !8793)
!8799 = !DILocation(line: 99, column: 9, scope: !8793)
!8800 = !DILocation(line: 99, column: 16, scope: !8793)
!8801 = !DILocation(line: 98, column: 2, scope: !8793)
!8802 = distinct !DISubprogram(name: "blk_mq_rq_from_pdu", scope: !2396, file: !2396, line: 553, type: !8803, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8803 = !DISubroutineType(types: !8804)
!8804 = !{!2386, !257}
!8805 = !DILocalVariable(name: "pdu", arg: 1, scope: !8802, file: !2396, line: 553, type: !257)
!8806 = !DILocation(line: 553, column: 56, scope: !8802)
!8807 = !DILocation(line: 555, column: 9, scope: !8802)
!8808 = !DILocation(line: 555, column: 13, scope: !8802)
!8809 = !DILocation(line: 555, column: 2, scope: !8802)
!8810 = distinct !DISubprogram(name: "blk_rq_sectors", scope: !43, file: !43, line: 1000, type: !7378, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8811 = !DILocalVariable(name: "rq", arg: 1, scope: !8810, file: !43, line: 1000, type: !7380)
!8812 = !DILocation(line: 1000, column: 65, scope: !8810)
!8813 = !DILocation(line: 1002, column: 22, scope: !8810)
!8814 = !DILocation(line: 1002, column: 9, scope: !8810)
!8815 = !DILocation(line: 1002, column: 26, scope: !8810)
!8816 = !DILocation(line: 1002, column: 2, scope: !8810)
!8817 = distinct !DISubprogram(name: "get_capacity", scope: !2101, file: !2101, line: 329, type: !8818, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{!948, !2099}
!8820 = !DILocalVariable(name: "disk", arg: 1, scope: !8817, file: !2101, line: 329, type: !2099)
!8821 = !DILocation(line: 329, column: 53, scope: !8817)
!8822 = !DILocation(line: 331, column: 9, scope: !8817)
!8823 = !DILocation(line: 331, column: 15, scope: !8817)
!8824 = !DILocation(line: 331, column: 21, scope: !8817)
!8825 = !DILocation(line: 331, column: 2, scope: !8817)
!8826 = distinct !DISubprogram(name: "mmc_apply_rel_rw", scope: !3, file: !3, line: 1160, type: !8827, scopeLine: 1163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{null, !6109, !262, !2386}
!8829 = !DILocalVariable(name: "brq", arg: 1, scope: !8826, file: !3, line: 1160, type: !6109)
!8830 = !DILocation(line: 1160, column: 61, scope: !8826)
!8831 = !DILocalVariable(name: "card", arg: 2, scope: !8826, file: !3, line: 1161, type: !262)
!8832 = !DILocation(line: 1161, column: 26, scope: !8826)
!8833 = !DILocalVariable(name: "req", arg: 3, scope: !8826, file: !3, line: 1162, type: !2386)
!8834 = !DILocation(line: 1162, column: 25, scope: !8826)
!8835 = !DILocation(line: 1164, column: 8, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1164, column: 6)
!8837 = !DILocation(line: 1164, column: 14, scope: !8836)
!8838 = !DILocation(line: 1164, column: 22, scope: !8836)
!8839 = !DILocation(line: 1164, column: 32, scope: !8836)
!8840 = !DILocation(line: 1164, column: 6, scope: !8826)
!8841 = !DILocation(line: 1166, column: 8, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 1166, column: 7)
!8843 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1164, column: 60)
!8844 = !DILocation(line: 1166, column: 7, scope: !8843)
!8845 = !DILocation(line: 1167, column: 4, scope: !8842)
!8846 = !DILocation(line: 1167, column: 9, scope: !8842)
!8847 = !DILocation(line: 1167, column: 14, scope: !8842)
!8848 = !DILocation(line: 1167, column: 21, scope: !8842)
!8849 = !DILocation(line: 1169, column: 7, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 1169, column: 7)
!8851 = !DILocation(line: 1169, column: 12, scope: !8850)
!8852 = !DILocation(line: 1169, column: 17, scope: !8850)
!8853 = !DILocation(line: 1169, column: 26, scope: !8850)
!8854 = !DILocation(line: 1169, column: 32, scope: !8850)
!8855 = !DILocation(line: 1169, column: 40, scope: !8850)
!8856 = !DILocation(line: 1169, column: 24, scope: !8850)
!8857 = !DILocation(line: 1169, column: 7, scope: !8843)
!8858 = !DILocation(line: 1170, column: 23, scope: !8850)
!8859 = !DILocation(line: 1170, column: 29, scope: !8850)
!8860 = !DILocation(line: 1170, column: 37, scope: !8850)
!8861 = !DILocation(line: 1170, column: 4, scope: !8850)
!8862 = !DILocation(line: 1170, column: 9, scope: !8850)
!8863 = !DILocation(line: 1170, column: 14, scope: !8850)
!8864 = !DILocation(line: 1170, column: 21, scope: !8850)
!8865 = !DILocation(line: 1171, column: 12, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 1171, column: 12)
!8867 = !DILocation(line: 1171, column: 17, scope: !8866)
!8868 = !DILocation(line: 1171, column: 22, scope: !8866)
!8869 = !DILocation(line: 1171, column: 31, scope: !8866)
!8870 = !DILocation(line: 1171, column: 37, scope: !8866)
!8871 = !DILocation(line: 1171, column: 45, scope: !8866)
!8872 = !DILocation(line: 1171, column: 29, scope: !8866)
!8873 = !DILocation(line: 1171, column: 12, scope: !8850)
!8874 = !DILocation(line: 1172, column: 4, scope: !8866)
!8875 = !DILocation(line: 1172, column: 9, scope: !8866)
!8876 = !DILocation(line: 1172, column: 14, scope: !8866)
!8877 = !DILocation(line: 1172, column: 21, scope: !8866)
!8878 = !DILocation(line: 1173, column: 2, scope: !8843)
!8879 = !DILocation(line: 1174, column: 1, scope: !8826)
!8880 = distinct !DISubprogram(name: "mmc_blk_urgent_bkops_needed", scope: !3, file: !3, line: 1880, type: !8881, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8881 = !DISubroutineType(types: !8882)
!8882 = !{!555, !258, !5457}
!8883 = !DILocalVariable(name: "mq", arg: 1, scope: !8880, file: !3, line: 1880, type: !258)
!8884 = !DILocation(line: 1880, column: 59, scope: !8880)
!8885 = !DILocalVariable(name: "mqrq", arg: 2, scope: !8880, file: !3, line: 1881, type: !5457)
!8886 = !DILocation(line: 1881, column: 28, scope: !8880)
!8887 = !DILocation(line: 1883, column: 9, scope: !8880)
!8888 = !DILocation(line: 1883, column: 32, scope: !8880)
!8889 = !DILocation(line: 1883, column: 36, scope: !8880)
!8890 = !DILocation(line: 1883, column: 68, scope: !8880)
!8891 = !DILocation(line: 1884, column: 10, scope: !8880)
!8892 = !DILocation(line: 1884, column: 16, scope: !8880)
!8893 = !DILocation(line: 1884, column: 20, scope: !8880)
!8894 = !DILocation(line: 1884, column: 24, scope: !8880)
!8895 = !DILocation(line: 1884, column: 32, scope: !8880)
!8896 = !DILocation(line: 1884, column: 53, scope: !8880)
!8897 = !DILocation(line: 1885, column: 3, scope: !8880)
!8898 = !DILocation(line: 1885, column: 9, scope: !8880)
!8899 = !DILocation(line: 1885, column: 13, scope: !8880)
!8900 = !DILocation(line: 1885, column: 18, scope: !8880)
!8901 = !DILocation(line: 1885, column: 26, scope: !8880)
!8902 = !DILocation(line: 0, scope: !8880)
!8903 = !DILocation(line: 1883, column: 2, scope: !8880)
!8904 = distinct !DISubprogram(name: "mmc_post_req", scope: !5138, file: !5138, line: 167, type: !4931, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8905 = !DILocalVariable(name: "host", arg: 1, scope: !8904, file: !5138, line: 167, type: !267)
!8906 = !DILocation(line: 167, column: 50, scope: !8904)
!8907 = !DILocalVariable(name: "mrq", arg: 2, scope: !8904, file: !5138, line: 167, type: !4933)
!8908 = !DILocation(line: 167, column: 76, scope: !8904)
!8909 = !DILocalVariable(name: "err", arg: 3, scope: !8904, file: !5138, line: 168, type: !324)
!8910 = !DILocation(line: 168, column: 9, scope: !8904)
!8911 = !DILocation(line: 170, column: 6, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8904, file: !5138, line: 170, column: 6)
!8913 = !DILocation(line: 170, column: 12, scope: !8912)
!8914 = !DILocation(line: 170, column: 17, scope: !8912)
!8915 = !DILocation(line: 170, column: 6, scope: !8904)
!8916 = !DILocation(line: 171, column: 3, scope: !8912)
!8917 = !DILocation(line: 171, column: 9, scope: !8912)
!8918 = !DILocation(line: 171, column: 14, scope: !8912)
!8919 = !DILocation(line: 171, column: 23, scope: !8912)
!8920 = !DILocation(line: 171, column: 29, scope: !8912)
!8921 = !DILocation(line: 171, column: 34, scope: !8912)
!8922 = !DILocation(line: 172, column: 1, scope: !8904)
!8923 = distinct !DISubprogram(name: "mmc_blk_mq_dec_in_flight", scope: !3, file: !3, line: 1957, type: !5808, scopeLine: 1958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8924 = !DILocation(line: 407, column: 64, scope: !5811, inlinedAt: !8925)
!8925 = distinct !DILocation(line: 1968, column: 2, scope: !8923)
!8926 = !DILocation(line: 407, column: 84, scope: !5811, inlinedAt: !8925)
!8927 = !DILocation(line: 327, column: 67, scope: !5820, inlinedAt: !8928)
!8928 = distinct !DILocation(line: 1962, column: 2, scope: !8929)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1962, column: 2)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 1962, column: 2)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 1962, column: 2)
!8932 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 1962, column: 2)
!8933 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1962, column: 2)
!8934 = !DILocalVariable(name: "mq", arg: 1, scope: !8923, file: !3, line: 1957, type: !258)
!8935 = !DILocation(line: 1957, column: 56, scope: !8923)
!8936 = !DILocalVariable(name: "req", arg: 2, scope: !8923, file: !3, line: 1957, type: !2386)
!8937 = !DILocation(line: 1957, column: 76, scope: !8923)
!8938 = !DILocalVariable(name: "flags", scope: !8923, file: !3, line: 1959, type: !389)
!8939 = !DILocation(line: 1959, column: 16, scope: !8923)
!8940 = !DILocalVariable(name: "put_card", scope: !8923, file: !3, line: 1960, type: !555)
!8941 = !DILocation(line: 1960, column: 7, scope: !8923)
!8942 = !DILocation(line: 1962, column: 2, scope: !8923)
!8943 = !DILocation(line: 1962, column: 2, scope: !8933)
!8944 = !DILocalVariable(name: "__dummy", scope: !8945, file: !3, line: 1962, type: !389)
!8945 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 1962, column: 2)
!8946 = !DILocation(line: 1962, column: 2, scope: !8945)
!8947 = !DILocalVariable(name: "__dummy2", scope: !8945, file: !3, line: 1962, type: !389)
!8948 = !DILocation(line: 1962, column: 2, scope: !8932)
!8949 = !DILocation(line: 1962, column: 2, scope: !8931)
!8950 = !DILocation(line: 1962, column: 2, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 1962, column: 2)
!8952 = !DILocalVariable(name: "__dummy", scope: !8953, file: !3, line: 1962, type: !389)
!8953 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 1962, column: 2)
!8954 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 1962, column: 2)
!8955 = !DILocation(line: 1962, column: 2, scope: !8953)
!8956 = !DILocalVariable(name: "__dummy2", scope: !8953, file: !3, line: 1962, type: !389)
!8957 = !DILocation(line: 1962, column: 2, scope: !8954)
!8958 = !DILocation(line: 1962, column: 2, scope: !8930)
!8959 = !{i32 -2141133287}
!8960 = !DILocation(line: 1962, column: 2, scope: !8929)
!8961 = !DILocation(line: 329, column: 10, scope: !5820, inlinedAt: !8928)
!8962 = !DILocation(line: 329, column: 16, scope: !5820, inlinedAt: !8928)
!8963 = !DILocation(line: 1964, column: 2, scope: !8923)
!8964 = !DILocation(line: 1964, column: 6, scope: !8923)
!8965 = !DILocation(line: 1964, column: 31, scope: !8923)
!8966 = !DILocation(line: 1964, column: 35, scope: !8923)
!8967 = !DILocation(line: 1964, column: 16, scope: !8923)
!8968 = !DILocation(line: 1964, column: 41, scope: !8923)
!8969 = !DILocation(line: 1966, column: 32, scope: !8923)
!8970 = !DILocation(line: 1966, column: 14, scope: !8923)
!8971 = !DILocation(line: 1966, column: 36, scope: !8923)
!8972 = !DILocation(line: 1966, column: 11, scope: !8923)
!8973 = !DILocation(line: 1968, column: 26, scope: !8923)
!8974 = !DILocation(line: 1968, column: 30, scope: !8923)
!8975 = !DILocation(line: 1968, column: 36, scope: !8923)
!8976 = !DILocation(line: 409, column: 2, scope: !5964, inlinedAt: !8925)
!8977 = !DILocation(line: 409, column: 2, scope: !5969, inlinedAt: !8925)
!8978 = !DILocation(line: 409, column: 2, scope: !5970, inlinedAt: !8925)
!8979 = !DILocation(line: 409, column: 2, scope: !5977, inlinedAt: !8925)
!8980 = !DILocation(line: 409, column: 2, scope: !5980, inlinedAt: !8925)
!8981 = !DILocation(line: 1970, column: 6, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1970, column: 6)
!8983 = !DILocation(line: 1970, column: 6, scope: !8923)
!8984 = !DILocation(line: 1971, column: 16, scope: !8982)
!8985 = !DILocation(line: 1971, column: 20, scope: !8982)
!8986 = !DILocation(line: 1971, column: 27, scope: !8982)
!8987 = !DILocation(line: 1971, column: 31, scope: !8982)
!8988 = !DILocation(line: 1971, column: 3, scope: !8982)
!8989 = !DILocation(line: 1972, column: 1, scope: !8923)
!8990 = distinct !DISubprogram(name: "mmc_host_done_complete", scope: !6136, file: !6136, line: 41, type: !8991, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!8991 = !DISubroutineType(types: !8992)
!8992 = !{!555, !267}
!8993 = !DILocalVariable(name: "host", arg: 1, scope: !8990, file: !6136, line: 41, type: !267)
!8994 = !DILocation(line: 41, column: 60, scope: !8990)
!8995 = !DILocation(line: 43, column: 9, scope: !8990)
!8996 = !DILocation(line: 43, column: 15, scope: !8990)
!8997 = !DILocation(line: 43, column: 20, scope: !8990)
!8998 = !DILocation(line: 43, column: 2, scope: !8990)
!8999 = distinct !DISubprogram(name: "mmc_blk_mq_poll_completion", scope: !3, file: !3, line: 1940, type: !5808, scopeLine: 1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9000 = !DILocalVariable(name: "mq", arg: 1, scope: !8999, file: !3, line: 1940, type: !258)
!9001 = !DILocation(line: 1940, column: 58, scope: !8999)
!9002 = !DILocalVariable(name: "req", arg: 2, scope: !8999, file: !3, line: 1941, type: !2386)
!9003 = !DILocation(line: 1941, column: 28, scope: !8999)
!9004 = !DILocalVariable(name: "mqrq", scope: !8999, file: !3, line: 1943, type: !5457)
!9005 = !DILocation(line: 1943, column: 24, scope: !8999)
!9006 = !DILocation(line: 1943, column: 52, scope: !8999)
!9007 = !DILocation(line: 1943, column: 31, scope: !8999)
!9008 = !DILocalVariable(name: "host", scope: !8999, file: !3, line: 1944, type: !267)
!9009 = !DILocation(line: 1944, column: 19, scope: !8999)
!9010 = !DILocation(line: 1944, column: 26, scope: !8999)
!9011 = !DILocation(line: 1944, column: 30, scope: !8999)
!9012 = !DILocation(line: 1944, column: 36, scope: !8999)
!9013 = !DILocation(line: 1946, column: 24, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1946, column: 6)
!9015 = !DILocation(line: 1946, column: 30, scope: !9014)
!9016 = !DILocation(line: 1946, column: 6, scope: !9014)
!9017 = !DILocation(line: 1946, column: 35, scope: !9014)
!9018 = !DILocation(line: 1947, column: 24, scope: !9014)
!9019 = !DILocation(line: 1947, column: 28, scope: !9014)
!9020 = !DILocation(line: 1947, column: 34, scope: !9014)
!9021 = !DILocation(line: 1947, column: 6, scope: !9014)
!9022 = !DILocation(line: 1946, column: 6, scope: !8999)
!9023 = !DILocation(line: 1948, column: 26, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1947, column: 40)
!9025 = !DILocation(line: 1948, column: 30, scope: !9024)
!9026 = !DILocation(line: 1948, column: 3, scope: !9024)
!9027 = !DILocation(line: 1949, column: 2, scope: !9024)
!9028 = !DILocation(line: 1950, column: 28, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 1949, column: 9)
!9030 = !DILocation(line: 1950, column: 32, scope: !9029)
!9031 = !DILocation(line: 1950, column: 3, scope: !9029)
!9032 = !DILocation(line: 1951, column: 22, scope: !9029)
!9033 = !DILocation(line: 1951, column: 3, scope: !9029)
!9034 = !DILocation(line: 1954, column: 23, scope: !8999)
!9035 = !DILocation(line: 1954, column: 27, scope: !8999)
!9036 = !DILocation(line: 1954, column: 2, scope: !8999)
!9037 = !DILocation(line: 1955, column: 1, scope: !8999)
!9038 = distinct !DISubprogram(name: "mmc_blk_card_busy", scope: !3, file: !3, line: 1824, type: !7511, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9039 = !DILocalVariable(name: "card", arg: 1, scope: !9038, file: !3, line: 1824, type: !262)
!9040 = !DILocation(line: 1824, column: 47, scope: !9038)
!9041 = !DILocalVariable(name: "req", arg: 2, scope: !9038, file: !3, line: 1824, type: !2386)
!9042 = !DILocation(line: 1824, column: 69, scope: !9038)
!9043 = !DILocalVariable(name: "mqrq", scope: !9038, file: !3, line: 1826, type: !5457)
!9044 = !DILocation(line: 1826, column: 24, scope: !9038)
!9045 = !DILocation(line: 1826, column: 52, scope: !9038)
!9046 = !DILocation(line: 1826, column: 31, scope: !9038)
!9047 = !DILocalVariable(name: "status", scope: !9038, file: !3, line: 1827, type: !480)
!9048 = !DILocation(line: 1827, column: 6, scope: !9038)
!9049 = !DILocalVariable(name: "err", scope: !9038, file: !3, line: 1828, type: !324)
!9050 = !DILocation(line: 1828, column: 6, scope: !9038)
!9051 = !DILocation(line: 1830, column: 6, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 1830, column: 6)
!9053 = !DILocation(line: 1830, column: 34, scope: !9052)
!9054 = !DILocation(line: 1830, column: 37, scope: !9052)
!9055 = !DILocation(line: 1830, column: 54, scope: !9052)
!9056 = !DILocation(line: 1830, column: 6, scope: !9038)
!9057 = !DILocation(line: 1831, column: 3, scope: !9052)
!9058 = !DILocation(line: 1833, column: 25, scope: !9038)
!9059 = !DILocation(line: 1833, column: 8, scope: !9038)
!9060 = !DILocation(line: 1833, column: 6, scope: !9038)
!9061 = !DILocation(line: 1839, column: 6, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 1839, column: 6)
!9063 = !DILocation(line: 1839, column: 38, scope: !9062)
!9064 = !DILocation(line: 1839, column: 44, scope: !9062)
!9065 = !DILocation(line: 1839, column: 15, scope: !9062)
!9066 = !DILocation(line: 1839, column: 13, scope: !9062)
!9067 = !DILocation(line: 1839, column: 6, scope: !9038)
!9068 = !DILocation(line: 1840, column: 3, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1839, column: 50)
!9070 = !DILocation(line: 1840, column: 9, scope: !9069)
!9071 = !DILocation(line: 1840, column: 13, scope: !9069)
!9072 = !DILocation(line: 1840, column: 18, scope: !9069)
!9073 = !DILocation(line: 1840, column: 31, scope: !9069)
!9074 = !DILocation(line: 1841, column: 9, scope: !9069)
!9075 = !DILocation(line: 1841, column: 15, scope: !9069)
!9076 = !DILocation(line: 1841, column: 7, scope: !9069)
!9077 = !DILocation(line: 1842, column: 2, scope: !9069)
!9078 = !DILocation(line: 1845, column: 6, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 1845, column: 6)
!9080 = !DILocation(line: 1845, column: 25, scope: !9079)
!9081 = !DILocation(line: 1845, column: 28, scope: !9079)
!9082 = !DILocation(line: 1845, column: 35, scope: !9079)
!9083 = !DILocation(line: 1845, column: 6, scope: !9038)
!9084 = !DILocation(line: 1846, column: 3, scope: !9079)
!9085 = !DILocation(line: 1846, column: 9, scope: !9079)
!9086 = !DILocation(line: 1846, column: 13, scope: !9079)
!9087 = !DILocation(line: 1846, column: 17, scope: !9079)
!9088 = !DILocation(line: 1846, column: 25, scope: !9079)
!9089 = !DILocation(line: 1848, column: 9, scope: !9038)
!9090 = !DILocation(line: 1848, column: 2, scope: !9038)
!9091 = !DILocation(line: 1849, column: 1, scope: !9038)
!9092 = distinct !DISubprogram(name: "mmc_blk_rw_reset_success", scope: !3, file: !3, line: 1851, type: !5808, scopeLine: 1853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9093 = !DILocalVariable(name: "mq", arg: 1, scope: !9092, file: !3, line: 1851, type: !258)
!9094 = !DILocation(line: 1851, column: 63, scope: !9092)
!9095 = !DILocalVariable(name: "req", arg: 2, scope: !9092, file: !3, line: 1852, type: !2386)
!9096 = !DILocation(line: 1852, column: 26, scope: !9092)
!9097 = !DILocalVariable(name: "type", scope: !9092, file: !3, line: 1854, type: !324)
!9098 = !DILocation(line: 1854, column: 6, scope: !9092)
!9099 = !DILocation(line: 1854, column: 13, scope: !9092)
!9100 = !DILocation(line: 1854, column: 30, scope: !9092)
!9101 = !DILocation(line: 1856, column: 24, scope: !9092)
!9102 = !DILocation(line: 1856, column: 28, scope: !9092)
!9103 = !DILocation(line: 1856, column: 37, scope: !9092)
!9104 = !DILocation(line: 1856, column: 2, scope: !9092)
!9105 = !DILocation(line: 1857, column: 1, scope: !9092)
!9106 = distinct !DISubprogram(name: "mmc_blk_part_switch_pre", scope: !3, file: !3, line: 786, type: !6586, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9107 = !DILocalVariable(name: "card", arg: 1, scope: !9106, file: !3, line: 786, type: !262)
!9108 = !DILocation(line: 786, column: 53, scope: !9106)
!9109 = !DILocalVariable(name: "part_type", arg: 2, scope: !9106, file: !3, line: 787, type: !7)
!9110 = !DILocation(line: 787, column: 21, scope: !9106)
!9111 = !DILocalVariable(name: "ret", scope: !9106, file: !3, line: 789, type: !324)
!9112 = !DILocation(line: 789, column: 6, scope: !9106)
!9113 = !DILocation(line: 791, column: 6, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 791, column: 6)
!9115 = !DILocation(line: 791, column: 16, scope: !9114)
!9116 = !DILocation(line: 791, column: 6, scope: !9106)
!9117 = !DILocation(line: 792, column: 7, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 792, column: 7)
!9119 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 791, column: 49)
!9120 = !DILocation(line: 792, column: 13, scope: !9118)
!9121 = !DILocation(line: 792, column: 21, scope: !9118)
!9122 = !DILocation(line: 792, column: 7, scope: !9119)
!9123 = !DILocation(line: 793, column: 27, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 792, column: 30)
!9125 = !DILocation(line: 793, column: 10, scope: !9124)
!9126 = !DILocation(line: 793, column: 8, scope: !9124)
!9127 = !DILocation(line: 794, column: 8, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 794, column: 8)
!9129 = !DILocation(line: 794, column: 8, scope: !9124)
!9130 = !DILocation(line: 795, column: 12, scope: !9128)
!9131 = !DILocation(line: 795, column: 5, scope: !9128)
!9132 = !DILocation(line: 796, column: 3, scope: !9124)
!9133 = !DILocation(line: 797, column: 20, scope: !9119)
!9134 = !DILocation(line: 797, column: 26, scope: !9119)
!9135 = !DILocation(line: 797, column: 3, scope: !9119)
!9136 = !DILocation(line: 798, column: 2, scope: !9119)
!9137 = !DILocation(line: 800, column: 9, scope: !9106)
!9138 = !DILocation(line: 800, column: 2, scope: !9106)
!9139 = !DILocation(line: 801, column: 1, scope: !9106)
!9140 = distinct !DISubprogram(name: "mmc_blk_part_switch_post", scope: !3, file: !3, line: 803, type: !6586, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9141 = !DILocalVariable(name: "card", arg: 1, scope: !9140, file: !3, line: 803, type: !262)
!9142 = !DILocation(line: 803, column: 54, scope: !9140)
!9143 = !DILocalVariable(name: "part_type", arg: 2, scope: !9140, file: !3, line: 804, type: !7)
!9144 = !DILocation(line: 804, column: 22, scope: !9140)
!9145 = !DILocalVariable(name: "ret", scope: !9140, file: !3, line: 806, type: !324)
!9146 = !DILocation(line: 806, column: 6, scope: !9140)
!9147 = !DILocation(line: 808, column: 6, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 808, column: 6)
!9149 = !DILocation(line: 808, column: 16, scope: !9148)
!9150 = !DILocation(line: 808, column: 6, scope: !9140)
!9151 = !DILocation(line: 809, column: 22, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 808, column: 49)
!9153 = !DILocation(line: 809, column: 28, scope: !9152)
!9154 = !DILocation(line: 809, column: 3, scope: !9152)
!9155 = !DILocation(line: 810, column: 7, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 810, column: 7)
!9157 = !DILocation(line: 810, column: 13, scope: !9156)
!9158 = !DILocation(line: 810, column: 27, scope: !9156)
!9159 = !DILocation(line: 810, column: 31, scope: !9156)
!9160 = !DILocation(line: 810, column: 37, scope: !9156)
!9161 = !DILocation(line: 810, column: 45, scope: !9156)
!9162 = !DILocation(line: 810, column: 7, scope: !9152)
!9163 = !DILocation(line: 811, column: 26, scope: !9156)
!9164 = !DILocation(line: 811, column: 10, scope: !9156)
!9165 = !DILocation(line: 811, column: 8, scope: !9156)
!9166 = !DILocation(line: 811, column: 4, scope: !9156)
!9167 = !DILocation(line: 812, column: 2, scope: !9152)
!9168 = !DILocation(line: 814, column: 9, scope: !9140)
!9169 = !DILocation(line: 814, column: 2, scope: !9140)
!9170 = distinct !DISubprogram(name: "mmc_blk_rw_wait", scope: !3, file: !3, line: 2126, type: !9171, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9171 = !DISubroutineType(types: !9172)
!9172 = !{!324, !258, !2640}
!9173 = !DILocalVariable(name: "mq", arg: 1, scope: !9170, file: !3, line: 2126, type: !258)
!9174 = !DILocation(line: 2126, column: 46, scope: !9170)
!9175 = !DILocalVariable(name: "prev_req", arg: 2, scope: !9170, file: !3, line: 2126, type: !2640)
!9176 = !DILocation(line: 2126, column: 67, scope: !9170)
!9177 = !DILocalVariable(name: "err", scope: !9170, file: !3, line: 2128, type: !324)
!9178 = !DILocation(line: 2128, column: 6, scope: !9170)
!9179 = !DILocation(line: 2130, column: 2, scope: !9170)
!9180 = !DILocation(line: 2130, column: 2, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 2130, column: 2)
!9182 = !DILocation(line: 2130, column: 2, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2130, column: 2)
!9184 = !DILocation(line: 2130, column: 2, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 2130, column: 2)
!9186 = !DILocation(line: 2130, column: 2, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2130, column: 2)
!9188 = !DILocalVariable(name: "__wq_entry", scope: !9189, file: !3, line: 2130, type: !993)
!9189 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2130, column: 2)
!9190 = !DILocation(line: 2130, column: 2, scope: !9189)
!9191 = !DILocalVariable(name: "__ret", scope: !9189, file: !3, line: 2130, type: !184)
!9192 = !DILocalVariable(name: "__int", scope: !9193, file: !3, line: 2130, type: !184)
!9193 = distinct !DILexicalBlock(scope: !9194, file: !3, line: 2130, column: 2)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 2130, column: 2)
!9195 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 2130, column: 2)
!9196 = !DILocation(line: 2130, column: 2, scope: !9193)
!9197 = !DILocation(line: 2130, column: 2, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 2130, column: 2)
!9199 = !DILocation(line: 2130, column: 2, scope: !9194)
!9200 = distinct !{!9200, !9201, !9201}
!9201 = !DILocation(line: 2130, column: 2, scope: !9195)
!9202 = !DILabel(scope: !9189, name: "__out", file: !3, line: 2130)
!9203 = !DILocation(line: 2133, column: 31, scope: !9170)
!9204 = !DILocation(line: 2133, column: 35, scope: !9170)
!9205 = !DILocation(line: 2133, column: 2, scope: !9170)
!9206 = !DILocation(line: 2135, column: 9, scope: !9170)
!9207 = !DILocation(line: 2135, column: 2, scope: !9170)
!9208 = distinct !DISubprogram(name: "mmc_blk_rw_wait_cond", scope: !3, file: !3, line: 2104, type: !9209, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{!555, !258, !773}
!9211 = !DILocation(line: 407, column: 64, scope: !5811, inlinedAt: !9212)
!9212 = distinct !DILocation(line: 2121, column: 2, scope: !9208)
!9213 = !DILocation(line: 407, column: 84, scope: !5811, inlinedAt: !9212)
!9214 = !DILocation(line: 327, column: 67, scope: !5820, inlinedAt: !9215)
!9215 = distinct !DILocation(line: 2113, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 2113, column: 2)
!9217 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 2113, column: 2)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2113, column: 2)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 2113, column: 2)
!9220 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 2113, column: 2)
!9221 = !DILocalVariable(name: "mq", arg: 1, scope: !9208, file: !3, line: 2104, type: !258)
!9222 = !DILocation(line: 2104, column: 52, scope: !9208)
!9223 = !DILocalVariable(name: "err", arg: 2, scope: !9208, file: !3, line: 2104, type: !773)
!9224 = !DILocation(line: 2104, column: 61, scope: !9208)
!9225 = !DILocalVariable(name: "flags", scope: !9208, file: !3, line: 2106, type: !389)
!9226 = !DILocation(line: 2106, column: 16, scope: !9208)
!9227 = !DILocalVariable(name: "done", scope: !9208, file: !3, line: 2107, type: !555)
!9228 = !DILocation(line: 2107, column: 7, scope: !9208)
!9229 = !DILocation(line: 2113, column: 2, scope: !9208)
!9230 = !DILocation(line: 2113, column: 2, scope: !9220)
!9231 = !DILocalVariable(name: "__dummy", scope: !9232, file: !3, line: 2113, type: !389)
!9232 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2113, column: 2)
!9233 = !DILocation(line: 2113, column: 2, scope: !9232)
!9234 = !DILocalVariable(name: "__dummy2", scope: !9232, file: !3, line: 2113, type: !389)
!9235 = !DILocation(line: 2113, column: 2, scope: !9219)
!9236 = !DILocation(line: 2113, column: 2, scope: !9218)
!9237 = !DILocation(line: 2113, column: 2, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 2113, column: 2)
!9239 = !DILocalVariable(name: "__dummy", scope: !9240, file: !3, line: 2113, type: !389)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 2113, column: 2)
!9241 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 2113, column: 2)
!9242 = !DILocation(line: 2113, column: 2, scope: !9240)
!9243 = !DILocalVariable(name: "__dummy2", scope: !9240, file: !3, line: 2113, type: !389)
!9244 = !DILocation(line: 2113, column: 2, scope: !9241)
!9245 = !DILocation(line: 2113, column: 2, scope: !9217)
!9246 = !{i32 -2141126830}
!9247 = !DILocation(line: 2113, column: 2, scope: !9216)
!9248 = !DILocation(line: 329, column: 10, scope: !5820, inlinedAt: !9215)
!9249 = !DILocation(line: 329, column: 16, scope: !5820, inlinedAt: !9215)
!9250 = !DILocation(line: 2114, column: 6, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 2114, column: 6)
!9252 = !DILocation(line: 2114, column: 10, scope: !9251)
!9253 = !DILocation(line: 2114, column: 6, scope: !9208)
!9254 = !DILocation(line: 2115, column: 4, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 2114, column: 27)
!9256 = !DILocation(line: 2115, column: 8, scope: !9255)
!9257 = !DILocation(line: 2116, column: 8, scope: !9255)
!9258 = !DILocation(line: 2117, column: 2, scope: !9255)
!9259 = !DILocation(line: 2118, column: 11, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 2117, column: 9)
!9261 = !DILocation(line: 2118, column: 15, scope: !9260)
!9262 = !DILocation(line: 2118, column: 10, scope: !9260)
!9263 = !DILocation(line: 2118, column: 8, scope: !9260)
!9264 = !DILocation(line: 2120, column: 17, scope: !9208)
!9265 = !DILocation(line: 2120, column: 16, scope: !9208)
!9266 = !DILocation(line: 2120, column: 2, scope: !9208)
!9267 = !DILocation(line: 2120, column: 6, scope: !9208)
!9268 = !DILocation(line: 2120, column: 14, scope: !9208)
!9269 = !DILocation(line: 2121, column: 26, scope: !9208)
!9270 = !DILocation(line: 2121, column: 30, scope: !9208)
!9271 = !DILocation(line: 2121, column: 36, scope: !9208)
!9272 = !DILocation(line: 409, column: 2, scope: !5964, inlinedAt: !9212)
!9273 = !DILocation(line: 409, column: 2, scope: !5969, inlinedAt: !9212)
!9274 = !DILocation(line: 409, column: 2, scope: !5970, inlinedAt: !9212)
!9275 = !DILocation(line: 409, column: 2, scope: !5977, inlinedAt: !9212)
!9276 = !DILocation(line: 409, column: 2, scope: !5980, inlinedAt: !9212)
!9277 = !DILocation(line: 2123, column: 9, scope: !9208)
!9278 = !DILocation(line: 2123, column: 2, scope: !9208)
!9279 = distinct !DISubprogram(name: "__mmc_blk_ioctl_cmd", scope: !3, file: !3, line: 448, type: !9280, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9280 = !DISubroutineType(types: !9281)
!9281 = !{!324, !262, !5408, !6698}
!9282 = !DILocalVariable(name: "card", arg: 1, scope: !9279, file: !3, line: 448, type: !262)
!9283 = !DILocation(line: 448, column: 49, scope: !9279)
!9284 = !DILocalVariable(name: "md", arg: 2, scope: !9279, file: !3, line: 448, type: !5408)
!9285 = !DILocation(line: 448, column: 76, scope: !9279)
!9286 = !DILocalVariable(name: "idata", arg: 3, scope: !9279, file: !3, line: 449, type: !6698)
!9287 = !DILocation(line: 449, column: 36, scope: !9279)
!9288 = !DILocalVariable(name: "cmd", scope: !9279, file: !3, line: 451, type: !4939)
!9289 = !DILocation(line: 451, column: 21, scope: !9279)
!9290 = !DILocalVariable(name: "sbc", scope: !9279, file: !3, line: 451, type: !4939)
!9291 = !DILocation(line: 451, column: 31, scope: !9279)
!9292 = !DILocalVariable(name: "data", scope: !9279, file: !3, line: 452, type: !4951)
!9293 = !DILocation(line: 452, column: 18, scope: !9279)
!9294 = !DILocalVariable(name: "mrq", scope: !9279, file: !3, line: 453, type: !4934)
!9295 = !DILocation(line: 453, column: 21, scope: !9279)
!9296 = !DILocalVariable(name: "sg", scope: !9279, file: !3, line: 454, type: !4967)
!9297 = !DILocation(line: 454, column: 21, scope: !9279)
!9298 = !DILocalVariable(name: "err", scope: !9279, file: !3, line: 455, type: !324)
!9299 = !DILocation(line: 455, column: 6, scope: !9279)
!9300 = !DILocalVariable(name: "target_part", scope: !9279, file: !3, line: 456, type: !7)
!9301 = !DILocation(line: 456, column: 15, scope: !9279)
!9302 = !DILocation(line: 458, column: 7, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 458, column: 6)
!9304 = !DILocation(line: 458, column: 12, scope: !9303)
!9305 = !DILocation(line: 458, column: 16, scope: !9303)
!9306 = !DILocation(line: 458, column: 19, scope: !9303)
!9307 = !DILocation(line: 458, column: 23, scope: !9303)
!9308 = !DILocation(line: 458, column: 6, scope: !9279)
!9309 = !DILocation(line: 459, column: 3, scope: !9303)
!9310 = !DILocation(line: 467, column: 6, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 467, column: 6)
!9312 = !DILocation(line: 467, column: 13, scope: !9311)
!9313 = !DILocation(line: 467, column: 6, scope: !9279)
!9314 = !DILocation(line: 469, column: 17, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 467, column: 19)
!9316 = !DILocation(line: 469, column: 24, scope: !9315)
!9317 = !DILocation(line: 469, column: 30, scope: !9315)
!9318 = !DILocation(line: 469, column: 15, scope: !9315)
!9319 = !DILocation(line: 470, column: 15, scope: !9315)
!9320 = !DILocation(line: 471, column: 2, scope: !9315)
!9321 = !DILocation(line: 472, column: 17, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 471, column: 9)
!9323 = !DILocation(line: 472, column: 21, scope: !9322)
!9324 = !DILocation(line: 472, column: 15, scope: !9322)
!9325 = !DILocation(line: 475, column: 15, scope: !9279)
!9326 = !DILocation(line: 475, column: 22, scope: !9279)
!9327 = !DILocation(line: 475, column: 25, scope: !9279)
!9328 = !DILocation(line: 475, column: 6, scope: !9279)
!9329 = !DILocation(line: 475, column: 13, scope: !9279)
!9330 = !DILocation(line: 476, column: 12, scope: !9279)
!9331 = !DILocation(line: 476, column: 19, scope: !9279)
!9332 = !DILocation(line: 476, column: 22, scope: !9279)
!9333 = !DILocation(line: 476, column: 6, scope: !9279)
!9334 = !DILocation(line: 476, column: 10, scope: !9279)
!9335 = !DILocation(line: 477, column: 14, scope: !9279)
!9336 = !DILocation(line: 477, column: 21, scope: !9279)
!9337 = !DILocation(line: 477, column: 24, scope: !9279)
!9338 = !DILocation(line: 477, column: 6, scope: !9279)
!9339 = !DILocation(line: 477, column: 12, scope: !9279)
!9340 = !DILocation(line: 479, column: 6, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 479, column: 6)
!9342 = !DILocation(line: 479, column: 13, scope: !9341)
!9343 = !DILocation(line: 479, column: 6, scope: !9279)
!9344 = !DILocation(line: 480, column: 8, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 479, column: 24)
!9346 = !DILocation(line: 480, column: 11, scope: !9345)
!9347 = !DILocation(line: 481, column: 8, scope: !9345)
!9348 = !DILocation(line: 481, column: 15, scope: !9345)
!9349 = !DILocation(line: 482, column: 16, scope: !9345)
!9350 = !DILocation(line: 482, column: 23, scope: !9345)
!9351 = !DILocation(line: 482, column: 26, scope: !9345)
!9352 = !DILocation(line: 482, column: 8, scope: !9345)
!9353 = !DILocation(line: 482, column: 14, scope: !9345)
!9354 = !DILocation(line: 483, column: 17, scope: !9345)
!9355 = !DILocation(line: 483, column: 24, scope: !9345)
!9356 = !DILocation(line: 483, column: 27, scope: !9345)
!9357 = !DILocation(line: 483, column: 8, scope: !9345)
!9358 = !DILocation(line: 483, column: 15, scope: !9345)
!9359 = !DILocation(line: 485, column: 20, scope: !9345)
!9360 = !DILocation(line: 485, column: 24, scope: !9345)
!9361 = !DILocation(line: 485, column: 31, scope: !9345)
!9362 = !DILocation(line: 485, column: 36, scope: !9345)
!9363 = !DILocation(line: 485, column: 43, scope: !9345)
!9364 = !DILocation(line: 485, column: 3, scope: !9345)
!9365 = !DILocation(line: 487, column: 7, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 487, column: 7)
!9367 = !DILocation(line: 487, column: 14, scope: !9366)
!9368 = !DILocation(line: 487, column: 17, scope: !9366)
!9369 = !DILocation(line: 487, column: 7, scope: !9345)
!9370 = !DILocation(line: 488, column: 9, scope: !9366)
!9371 = !DILocation(line: 488, column: 15, scope: !9366)
!9372 = !DILocation(line: 488, column: 4, scope: !9366)
!9373 = !DILocation(line: 490, column: 9, scope: !9366)
!9374 = !DILocation(line: 490, column: 15, scope: !9366)
!9375 = !DILocation(line: 493, column: 31, scope: !9345)
!9376 = !DILocation(line: 493, column: 3, scope: !9345)
!9377 = !DILocation(line: 496, column: 7, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 496, column: 7)
!9379 = !DILocation(line: 496, column: 14, scope: !9378)
!9380 = !DILocation(line: 496, column: 17, scope: !9378)
!9381 = !DILocation(line: 496, column: 7, scope: !9345)
!9382 = !DILocation(line: 497, column: 22, scope: !9378)
!9383 = !DILocation(line: 497, column: 29, scope: !9378)
!9384 = !DILocation(line: 497, column: 32, scope: !9378)
!9385 = !DILocation(line: 497, column: 9, scope: !9378)
!9386 = !DILocation(line: 497, column: 20, scope: !9378)
!9387 = !DILocation(line: 497, column: 4, scope: !9378)
!9388 = !DILocation(line: 499, column: 12, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 499, column: 7)
!9390 = !DILocation(line: 499, column: 18, scope: !9389)
!9391 = !DILocation(line: 499, column: 33, scope: !9389)
!9392 = !DILocation(line: 499, column: 7, scope: !9345)
!9393 = !DILocation(line: 509, column: 22, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 499, column: 49)
!9395 = !DILocation(line: 509, column: 29, scope: !9394)
!9396 = !DILocation(line: 509, column: 32, scope: !9394)
!9397 = !DILocation(line: 509, column: 47, scope: !9394)
!9398 = !DILocation(line: 509, column: 9, scope: !9394)
!9399 = !DILocation(line: 509, column: 20, scope: !9394)
!9400 = !DILocation(line: 510, column: 3, scope: !9394)
!9401 = !DILocation(line: 512, column: 7, scope: !9345)
!9402 = !DILocation(line: 512, column: 12, scope: !9345)
!9403 = !DILocation(line: 513, column: 2, scope: !9345)
!9404 = !DILocation(line: 515, column: 6, scope: !9279)
!9405 = !DILocation(line: 515, column: 10, scope: !9279)
!9406 = !DILocation(line: 517, column: 28, scope: !9279)
!9407 = !DILocation(line: 517, column: 34, scope: !9279)
!9408 = !DILocation(line: 517, column: 8, scope: !9279)
!9409 = !DILocation(line: 517, column: 6, scope: !9279)
!9410 = !DILocation(line: 518, column: 6, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 518, column: 6)
!9412 = !DILocation(line: 518, column: 6, scope: !9279)
!9413 = !DILocation(line: 519, column: 10, scope: !9411)
!9414 = !DILocation(line: 519, column: 3, scope: !9411)
!9415 = !DILocation(line: 521, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 521, column: 6)
!9417 = !DILocation(line: 521, column: 13, scope: !9416)
!9418 = !DILocation(line: 521, column: 16, scope: !9416)
!9419 = !DILocation(line: 521, column: 6, scope: !9279)
!9420 = !DILocation(line: 522, column: 21, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 521, column: 25)
!9422 = !DILocation(line: 522, column: 27, scope: !9421)
!9423 = !DILocation(line: 522, column: 33, scope: !9421)
!9424 = !DILocation(line: 522, column: 9, scope: !9421)
!9425 = !DILocation(line: 522, column: 7, scope: !9421)
!9426 = !DILocation(line: 523, column: 7, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 523, column: 7)
!9428 = !DILocation(line: 523, column: 7, scope: !9421)
!9429 = !DILocation(line: 524, column: 11, scope: !9427)
!9430 = !DILocation(line: 524, column: 4, scope: !9427)
!9431 = !DILocation(line: 525, column: 2, scope: !9421)
!9432 = !DILocation(line: 527, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 527, column: 6)
!9434 = !DILocation(line: 527, column: 13, scope: !9433)
!9435 = !DILocation(line: 527, column: 6, scope: !9279)
!9436 = !DILocation(line: 528, column: 7, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9433, file: !3, line: 527, column: 19)
!9438 = !DILocation(line: 528, column: 14, scope: !9437)
!9439 = !DILocation(line: 534, column: 18, scope: !9437)
!9440 = !DILocation(line: 534, column: 13, scope: !9437)
!9441 = !DILocation(line: 534, column: 28, scope: !9437)
!9442 = !DILocation(line: 534, column: 35, scope: !9437)
!9443 = !DILocation(line: 534, column: 38, scope: !9437)
!9444 = !DILocation(line: 534, column: 49, scope: !9437)
!9445 = !DILocation(line: 534, column: 25, scope: !9437)
!9446 = !DILocation(line: 534, column: 7, scope: !9437)
!9447 = !DILocation(line: 534, column: 11, scope: !9437)
!9448 = !DILocation(line: 535, column: 7, scope: !9437)
!9449 = !DILocation(line: 535, column: 13, scope: !9437)
!9450 = !DILocation(line: 536, column: 7, scope: !9437)
!9451 = !DILocation(line: 536, column: 11, scope: !9437)
!9452 = !DILocation(line: 537, column: 2, scope: !9437)
!9453 = !DILocation(line: 539, column: 7, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 539, column: 6)
!9455 = !DILocation(line: 539, column: 43, scope: !9454)
!9456 = !DILocation(line: 539, column: 70, scope: !9454)
!9457 = !DILocation(line: 540, column: 11, scope: !9454)
!9458 = !DILocation(line: 540, column: 18, scope: !9454)
!9459 = !DILocation(line: 539, column: 6, scope: !9279)
!9460 = !DILocation(line: 541, column: 23, scope: !9454)
!9461 = !DILocation(line: 541, column: 10, scope: !9454)
!9462 = !DILocation(line: 541, column: 3, scope: !9454)
!9463 = !DILocation(line: 543, column: 19, scope: !9279)
!9464 = !DILocation(line: 543, column: 25, scope: !9279)
!9465 = !DILocation(line: 543, column: 2, scope: !9279)
!9466 = !DILocation(line: 545, column: 10, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 545, column: 6)
!9468 = !DILocation(line: 545, column: 6, scope: !9467)
!9469 = !DILocation(line: 545, column: 6, scope: !9279)
!9470 = !DILocation(line: 546, column: 3, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 545, column: 17)
!9472 = !DILocation(line: 548, column: 14, scope: !9471)
!9473 = !DILocation(line: 548, column: 3, scope: !9471)
!9474 = !DILocation(line: 550, column: 11, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 550, column: 6)
!9476 = !DILocation(line: 550, column: 6, scope: !9475)
!9477 = !DILocation(line: 550, column: 6, scope: !9279)
!9478 = !DILocation(line: 551, column: 3, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 550, column: 18)
!9480 = !DILocation(line: 553, column: 15, scope: !9479)
!9481 = !DILocation(line: 553, column: 3, scope: !9479)
!9482 = !DILocation(line: 561, column: 7, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 561, column: 6)
!9484 = !DILocation(line: 561, column: 43, scope: !9483)
!9485 = !DILocation(line: 561, column: 67, scope: !9483)
!9486 = !DILocation(line: 562, column: 11, scope: !9483)
!9487 = !DILocation(line: 562, column: 18, scope: !9483)
!9488 = !DILocation(line: 561, column: 6, scope: !9279)
!9489 = !DILocalVariable(name: "main_md", scope: !9490, file: !3, line: 563, type: !5408)
!9490 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 562, column: 34)
!9491 = !DILocation(line: 563, column: 24, scope: !9490)
!9492 = !DILocation(line: 563, column: 51, scope: !9490)
!9493 = !DILocation(line: 563, column: 57, scope: !9490)
!9494 = !DILocation(line: 563, column: 34, scope: !9490)
!9495 = !DILocalVariable(name: "value", scope: !9490, file: !3, line: 564, type: !1526)
!9496 = !DILocation(line: 564, column: 6, scope: !9490)
!9497 = !DILocation(line: 564, column: 14, scope: !9490)
!9498 = !DILocation(line: 570, column: 31, scope: !9490)
!9499 = !DILocation(line: 570, column: 3, scope: !9490)
!9500 = !DILocation(line: 570, column: 9, scope: !9490)
!9501 = !DILocation(line: 570, column: 17, scope: !9490)
!9502 = !DILocation(line: 570, column: 29, scope: !9490)
!9503 = !DILocation(line: 571, column: 24, scope: !9490)
!9504 = !DILocation(line: 571, column: 30, scope: !9490)
!9505 = !DILocation(line: 571, column: 3, scope: !9490)
!9506 = !DILocation(line: 571, column: 12, scope: !9490)
!9507 = !DILocation(line: 571, column: 22, scope: !9490)
!9508 = !DILocation(line: 572, column: 2, scope: !9490)
!9509 = !DILocation(line: 578, column: 6, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 578, column: 6)
!9511 = !DILocation(line: 578, column: 13, scope: !9510)
!9512 = !DILocation(line: 578, column: 16, scope: !9510)
!9513 = !DILocation(line: 578, column: 6, scope: !9279)
!9514 = !DILocation(line: 579, column: 16, scope: !9510)
!9515 = !DILocation(line: 579, column: 23, scope: !9510)
!9516 = !DILocation(line: 579, column: 26, scope: !9510)
!9517 = !DILocation(line: 579, column: 44, scope: !9510)
!9518 = !DILocation(line: 579, column: 51, scope: !9510)
!9519 = !DILocation(line: 579, column: 54, scope: !9510)
!9520 = !DILocation(line: 579, column: 3, scope: !9510)
!9521 = !DILocation(line: 581, column: 11, scope: !9279)
!9522 = !DILocation(line: 581, column: 18, scope: !9279)
!9523 = !DILocation(line: 581, column: 21, scope: !9279)
!9524 = !DILocation(line: 581, column: 2, scope: !9279)
!9525 = !DILocation(line: 581, column: 36, scope: !9279)
!9526 = !DILocation(line: 583, column: 6, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 583, column: 6)
!9528 = !DILocation(line: 583, column: 13, scope: !9527)
!9529 = !DILocation(line: 583, column: 18, scope: !9527)
!9530 = !DILocation(line: 583, column: 26, scope: !9527)
!9531 = !DILocation(line: 583, column: 32, scope: !9527)
!9532 = !DILocation(line: 583, column: 47, scope: !9527)
!9533 = !DILocation(line: 583, column: 6, scope: !9279)
!9534 = !DILocation(line: 588, column: 26, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9527, file: !3, line: 583, column: 63)
!9536 = !DILocation(line: 588, column: 9, scope: !9535)
!9537 = !DILocation(line: 588, column: 7, scope: !9535)
!9538 = !DILocation(line: 589, column: 2, scope: !9535)
!9539 = !DILocation(line: 591, column: 9, scope: !9279)
!9540 = !DILocation(line: 591, column: 2, scope: !9279)
!9541 = !DILocation(line: 592, column: 1, scope: !9279)
!9542 = distinct !DISubprogram(name: "mmc_blk_cqe_prep_dcmd", scope: !3, file: !3, line: 1458, type: !9543, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9543 = !DISubroutineType(types: !9544)
!9544 = !{!4933, !5457, !2386}
!9545 = !DILocalVariable(name: "mqrq", arg: 1, scope: !9542, file: !3, line: 1458, type: !5457)
!9546 = !DILocation(line: 1458, column: 72, scope: !9542)
!9547 = !DILocalVariable(name: "req", arg: 2, scope: !9542, file: !3, line: 1459, type: !2386)
!9548 = !DILocation(line: 1459, column: 24, scope: !9542)
!9549 = !DILocalVariable(name: "brq", scope: !9542, file: !3, line: 1461, type: !6109)
!9550 = !DILocation(line: 1461, column: 26, scope: !9542)
!9551 = !DILocation(line: 1461, column: 33, scope: !9542)
!9552 = !DILocation(line: 1461, column: 39, scope: !9542)
!9553 = !DILocation(line: 1463, column: 9, scope: !9542)
!9554 = !DILocation(line: 1463, column: 2, scope: !9542)
!9555 = !DILocation(line: 1465, column: 18, scope: !9542)
!9556 = !DILocation(line: 1465, column: 23, scope: !9542)
!9557 = !DILocation(line: 1465, column: 2, scope: !9542)
!9558 = !DILocation(line: 1465, column: 7, scope: !9542)
!9559 = !DILocation(line: 1465, column: 11, scope: !9542)
!9560 = !DILocation(line: 1465, column: 15, scope: !9542)
!9561 = !DILocation(line: 1466, column: 17, scope: !9542)
!9562 = !DILocation(line: 1466, column: 22, scope: !9542)
!9563 = !DILocation(line: 1466, column: 2, scope: !9542)
!9564 = !DILocation(line: 1466, column: 7, scope: !9542)
!9565 = !DILocation(line: 1466, column: 11, scope: !9542)
!9566 = !DILocation(line: 1466, column: 15, scope: !9542)
!9567 = !DILocation(line: 1468, column: 10, scope: !9542)
!9568 = !DILocation(line: 1468, column: 15, scope: !9542)
!9569 = !DILocation(line: 1468, column: 2, scope: !9542)
!9570 = distinct !DISubprogram(name: "mmc_blk_cqe_start_req", scope: !3, file: !3, line: 1450, type: !4997, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9571 = !DILocalVariable(name: "host", arg: 1, scope: !9570, file: !3, line: 1450, type: !267)
!9572 = !DILocation(line: 1450, column: 51, scope: !9570)
!9573 = !DILocalVariable(name: "mrq", arg: 2, scope: !9570, file: !3, line: 1450, type: !4933)
!9574 = !DILocation(line: 1450, column: 77, scope: !9570)
!9575 = !DILocation(line: 1452, column: 2, scope: !9570)
!9576 = !DILocation(line: 1452, column: 7, scope: !9570)
!9577 = !DILocation(line: 1452, column: 13, scope: !9570)
!9578 = !DILocation(line: 1453, column: 2, scope: !9570)
!9579 = !DILocation(line: 1453, column: 7, scope: !9570)
!9580 = !DILocation(line: 1453, column: 25, scope: !9570)
!9581 = !DILocation(line: 1455, column: 27, scope: !9570)
!9582 = !DILocation(line: 1455, column: 33, scope: !9570)
!9583 = !DILocation(line: 1455, column: 9, scope: !9570)
!9584 = !DILocation(line: 1455, column: 2, scope: !9570)
!9585 = distinct !DISubprogram(name: "mmc_blk_cqe_req_done", scope: !3, file: !3, line: 1432, type: !4984, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9586 = !DILocalVariable(name: "mrq", arg: 1, scope: !9585, file: !3, line: 1432, type: !4933)
!9587 = !DILocation(line: 1432, column: 54, scope: !9585)
!9588 = !DILocalVariable(name: "mqrq", scope: !9585, file: !3, line: 1434, type: !5457)
!9589 = !DILocation(line: 1434, column: 24, scope: !9585)
!9590 = !DILocalVariable(name: "__mptr", scope: !9591, file: !3, line: 1434, type: !257)
!9591 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 1434, column: 31)
!9592 = !DILocation(line: 1434, column: 31, scope: !9591)
!9593 = !DILocation(line: 1434, column: 31, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 1434, column: 31)
!9595 = !DILocalVariable(name: "req", scope: !9585, file: !3, line: 1436, type: !2386)
!9596 = !DILocation(line: 1436, column: 18, scope: !9585)
!9597 = !DILocation(line: 1436, column: 45, scope: !9585)
!9598 = !DILocation(line: 1436, column: 24, scope: !9585)
!9599 = !DILocalVariable(name: "q", scope: !9585, file: !3, line: 1437, type: !2382)
!9600 = !DILocation(line: 1437, column: 24, scope: !9585)
!9601 = !DILocation(line: 1437, column: 28, scope: !9585)
!9602 = !DILocation(line: 1437, column: 33, scope: !9585)
!9603 = !DILocalVariable(name: "mq", scope: !9585, file: !3, line: 1438, type: !258)
!9604 = !DILocation(line: 1438, column: 20, scope: !9585)
!9605 = !DILocation(line: 1438, column: 25, scope: !9585)
!9606 = !DILocation(line: 1438, column: 28, scope: !9585)
!9607 = !DILocation(line: 1444, column: 6, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 1444, column: 6)
!9609 = !DILocation(line: 1444, column: 10, scope: !9608)
!9610 = !DILocation(line: 1444, column: 6, scope: !9585)
!9611 = !DILocation(line: 1445, column: 27, scope: !9608)
!9612 = !DILocation(line: 1445, column: 31, scope: !9608)
!9613 = !DILocation(line: 1445, column: 3, scope: !9608)
!9614 = !DILocation(line: 1446, column: 11, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9608, file: !3, line: 1446, column: 11)
!9616 = !DILocation(line: 1446, column: 11, scope: !9608)
!9617 = !DILocation(line: 1447, column: 27, scope: !9615)
!9618 = !DILocation(line: 1447, column: 3, scope: !9615)
!9619 = !DILocation(line: 1448, column: 1, scope: !9585)
!9620 = distinct !DISubprogram(name: "mmc_blk_hsq_issue_rw_rq", scope: !3, file: !3, line: 1486, type: !7085, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9621 = !DILocalVariable(name: "mq", arg: 1, scope: !9620, file: !3, line: 1486, type: !258)
!9622 = !DILocation(line: 1486, column: 54, scope: !9620)
!9623 = !DILocalVariable(name: "req", arg: 2, scope: !9620, file: !3, line: 1486, type: !2386)
!9624 = !DILocation(line: 1486, column: 74, scope: !9620)
!9625 = !DILocalVariable(name: "mqrq", scope: !9620, file: !3, line: 1488, type: !5457)
!9626 = !DILocation(line: 1488, column: 24, scope: !9620)
!9627 = !DILocation(line: 1488, column: 52, scope: !9620)
!9628 = !DILocation(line: 1488, column: 31, scope: !9620)
!9629 = !DILocalVariable(name: "host", scope: !9620, file: !3, line: 1489, type: !267)
!9630 = !DILocation(line: 1489, column: 19, scope: !9620)
!9631 = !DILocation(line: 1489, column: 26, scope: !9620)
!9632 = !DILocation(line: 1489, column: 30, scope: !9620)
!9633 = !DILocation(line: 1489, column: 36, scope: !9620)
!9634 = !DILocalVariable(name: "err", scope: !9620, file: !3, line: 1490, type: !324)
!9635 = !DILocation(line: 1490, column: 6, scope: !9620)
!9636 = !DILocation(line: 1492, column: 21, scope: !9620)
!9637 = !DILocation(line: 1492, column: 27, scope: !9620)
!9638 = !DILocation(line: 1492, column: 31, scope: !9620)
!9639 = !DILocation(line: 1492, column: 40, scope: !9620)
!9640 = !DILocation(line: 1492, column: 2, scope: !9620)
!9641 = !DILocation(line: 1493, column: 2, scope: !9620)
!9642 = !DILocation(line: 1493, column: 8, scope: !9620)
!9643 = !DILocation(line: 1493, column: 12, scope: !9620)
!9644 = !DILocation(line: 1493, column: 16, scope: !9620)
!9645 = !DILocation(line: 1493, column: 21, scope: !9620)
!9646 = !DILocation(line: 1494, column: 14, scope: !9620)
!9647 = !DILocation(line: 1494, column: 21, scope: !9620)
!9648 = !DILocation(line: 1494, column: 27, scope: !9620)
!9649 = !DILocation(line: 1494, column: 31, scope: !9620)
!9650 = !DILocation(line: 1494, column: 2, scope: !9620)
!9651 = !DILocation(line: 1496, column: 26, scope: !9620)
!9652 = !DILocation(line: 1496, column: 33, scope: !9620)
!9653 = !DILocation(line: 1496, column: 39, scope: !9620)
!9654 = !DILocation(line: 1496, column: 43, scope: !9620)
!9655 = !DILocation(line: 1496, column: 8, scope: !9620)
!9656 = !DILocation(line: 1496, column: 6, scope: !9620)
!9657 = !DILocation(line: 1497, column: 6, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 1497, column: 6)
!9659 = !DILocation(line: 1497, column: 6, scope: !9620)
!9660 = !DILocation(line: 1498, column: 16, scope: !9658)
!9661 = !DILocation(line: 1498, column: 23, scope: !9658)
!9662 = !DILocation(line: 1498, column: 29, scope: !9658)
!9663 = !DILocation(line: 1498, column: 33, scope: !9658)
!9664 = !DILocation(line: 1498, column: 38, scope: !9658)
!9665 = !DILocation(line: 1498, column: 3, scope: !9658)
!9666 = !DILocation(line: 1500, column: 9, scope: !9620)
!9667 = !DILocation(line: 1500, column: 2, scope: !9620)
!9668 = distinct !DISubprogram(name: "mmc_blk_hsq_req_done", scope: !3, file: !3, line: 1895, type: !4984, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9669 = !DILocation(line: 407, column: 64, scope: !5811, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 1910, column: 3, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1906, column: 45)
!9672 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 1905, column: 6)
!9673 = !DILocation(line: 407, column: 84, scope: !5811, inlinedAt: !9670)
!9674 = !DILocation(line: 327, column: 67, scope: !5820, inlinedAt: !9675)
!9675 = distinct !DILocation(line: 1907, column: 3, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 1907, column: 3)
!9677 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 1907, column: 3)
!9678 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 1907, column: 3)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 1907, column: 3)
!9680 = distinct !DILexicalBlock(scope: !9671, file: !3, line: 1907, column: 3)
!9681 = !DILocalVariable(name: "mrq", arg: 1, scope: !9668, file: !3, line: 1895, type: !4933)
!9682 = !DILocation(line: 1895, column: 54, scope: !9668)
!9683 = !DILocalVariable(name: "mqrq", scope: !9668, file: !3, line: 1897, type: !5457)
!9684 = !DILocation(line: 1897, column: 24, scope: !9668)
!9685 = !DILocalVariable(name: "__mptr", scope: !9686, file: !3, line: 1898, type: !257)
!9686 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 1898, column: 3)
!9687 = !DILocation(line: 1898, column: 3, scope: !9686)
!9688 = !DILocation(line: 1898, column: 3, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9686, file: !3, line: 1898, column: 3)
!9690 = !DILocalVariable(name: "req", scope: !9668, file: !3, line: 1899, type: !2386)
!9691 = !DILocation(line: 1899, column: 18, scope: !9668)
!9692 = !DILocation(line: 1899, column: 45, scope: !9668)
!9693 = !DILocation(line: 1899, column: 24, scope: !9668)
!9694 = !DILocalVariable(name: "q", scope: !9668, file: !3, line: 1900, type: !2382)
!9695 = !DILocation(line: 1900, column: 24, scope: !9668)
!9696 = !DILocation(line: 1900, column: 28, scope: !9668)
!9697 = !DILocation(line: 1900, column: 33, scope: !9668)
!9698 = !DILocalVariable(name: "mq", scope: !9668, file: !3, line: 1901, type: !258)
!9699 = !DILocation(line: 1901, column: 20, scope: !9668)
!9700 = !DILocation(line: 1901, column: 25, scope: !9668)
!9701 = !DILocation(line: 1901, column: 28, scope: !9668)
!9702 = !DILocalVariable(name: "host", scope: !9668, file: !3, line: 1902, type: !267)
!9703 = !DILocation(line: 1902, column: 19, scope: !9668)
!9704 = !DILocation(line: 1902, column: 26, scope: !9668)
!9705 = !DILocation(line: 1902, column: 30, scope: !9668)
!9706 = !DILocation(line: 1902, column: 36, scope: !9668)
!9707 = !DILocalVariable(name: "flags", scope: !9668, file: !3, line: 1903, type: !389)
!9708 = !DILocation(line: 1903, column: 16, scope: !9668)
!9709 = !DILocation(line: 1905, column: 24, scope: !9672)
!9710 = !DILocation(line: 1905, column: 30, scope: !9672)
!9711 = !DILocation(line: 1905, column: 6, scope: !9672)
!9712 = !DILocation(line: 1905, column: 35, scope: !9672)
!9713 = !DILocation(line: 1906, column: 34, scope: !9672)
!9714 = !DILocation(line: 1906, column: 38, scope: !9672)
!9715 = !DILocation(line: 1906, column: 6, scope: !9672)
!9716 = !DILocation(line: 1905, column: 6, scope: !9668)
!9717 = !DILocation(line: 1907, column: 3, scope: !9671)
!9718 = !DILocation(line: 1907, column: 3, scope: !9680)
!9719 = !DILocalVariable(name: "__dummy", scope: !9720, file: !3, line: 1907, type: !389)
!9720 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 1907, column: 3)
!9721 = !DILocation(line: 1907, column: 3, scope: !9720)
!9722 = !DILocalVariable(name: "__dummy2", scope: !9720, file: !3, line: 1907, type: !389)
!9723 = !DILocation(line: 1907, column: 3, scope: !9679)
!9724 = !DILocation(line: 1907, column: 3, scope: !9678)
!9725 = !DILocation(line: 1907, column: 3, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9678, file: !3, line: 1907, column: 3)
!9727 = !DILocalVariable(name: "__dummy", scope: !9728, file: !3, line: 1907, type: !389)
!9728 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 1907, column: 3)
!9729 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 1907, column: 3)
!9730 = !DILocation(line: 1907, column: 3, scope: !9728)
!9731 = !DILocalVariable(name: "__dummy2", scope: !9728, file: !3, line: 1907, type: !389)
!9732 = !DILocation(line: 1907, column: 3, scope: !9729)
!9733 = !DILocation(line: 1907, column: 3, scope: !9677)
!9734 = !{i32 -2141134412}
!9735 = !DILocation(line: 1907, column: 3, scope: !9676)
!9736 = !DILocation(line: 329, column: 10, scope: !5820, inlinedAt: !9675)
!9737 = !DILocation(line: 329, column: 16, scope: !5820, inlinedAt: !9675)
!9738 = !DILocation(line: 1908, column: 3, scope: !9671)
!9739 = !DILocation(line: 1908, column: 7, scope: !9671)
!9740 = !DILocation(line: 1908, column: 23, scope: !9671)
!9741 = !DILocation(line: 1909, column: 22, scope: !9671)
!9742 = !DILocation(line: 1909, column: 3, scope: !9671)
!9743 = !DILocation(line: 1909, column: 7, scope: !9671)
!9744 = !DILocation(line: 1909, column: 20, scope: !9671)
!9745 = !DILocation(line: 1910, column: 27, scope: !9671)
!9746 = !DILocation(line: 1910, column: 31, scope: !9671)
!9747 = !DILocation(line: 1910, column: 37, scope: !9671)
!9748 = !DILocation(line: 409, column: 2, scope: !5964, inlinedAt: !9670)
!9749 = !DILocation(line: 409, column: 2, scope: !5969, inlinedAt: !9670)
!9750 = !DILocation(line: 409, column: 2, scope: !5970, inlinedAt: !9670)
!9751 = !DILocation(line: 409, column: 2, scope: !5977, inlinedAt: !9670)
!9752 = !DILocation(line: 409, column: 2, scope: !5980, inlinedAt: !9670)
!9753 = !DILocation(line: 1912, column: 3, scope: !9671)
!9754 = !DILocation(line: 1912, column: 9, scope: !9671)
!9755 = !DILocation(line: 1912, column: 18, scope: !9671)
!9756 = !DILocation(line: 1912, column: 37, scope: !9671)
!9757 = !DILocation(line: 1914, column: 18, scope: !9671)
!9758 = !DILocation(line: 1914, column: 22, scope: !9671)
!9759 = !DILocation(line: 1914, column: 3, scope: !9671)
!9760 = !DILocation(line: 1915, column: 3, scope: !9671)
!9761 = !DILocation(line: 1918, column: 27, scope: !9668)
!9762 = !DILocation(line: 1918, column: 31, scope: !9668)
!9763 = !DILocation(line: 1918, column: 2, scope: !9668)
!9764 = !DILocation(line: 1924, column: 6, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 1924, column: 6)
!9766 = !DILocation(line: 1924, column: 10, scope: !9765)
!9767 = !DILocation(line: 1924, column: 6, scope: !9668)
!9768 = !DILocation(line: 1925, column: 27, scope: !9765)
!9769 = !DILocation(line: 1925, column: 31, scope: !9765)
!9770 = !DILocation(line: 1925, column: 3, scope: !9765)
!9771 = !DILocation(line: 1926, column: 11, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 1926, column: 11)
!9773 = !DILocation(line: 1926, column: 11, scope: !9765)
!9774 = !DILocation(line: 1927, column: 27, scope: !9772)
!9775 = !DILocation(line: 1927, column: 3, scope: !9772)
!9776 = !DILocation(line: 1928, column: 1, scope: !9668)
!9777 = distinct !DISubprogram(name: "mmc_pre_req", scope: !5138, file: !5138, line: 152, type: !4992, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9778 = !DILocalVariable(name: "host", arg: 1, scope: !9777, file: !5138, line: 152, type: !267)
!9779 = !DILocation(line: 152, column: 49, scope: !9777)
!9780 = !DILocalVariable(name: "mrq", arg: 2, scope: !9777, file: !5138, line: 152, type: !4933)
!9781 = !DILocation(line: 152, column: 75, scope: !9777)
!9782 = !DILocation(line: 154, column: 6, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9777, file: !5138, line: 154, column: 6)
!9784 = !DILocation(line: 154, column: 12, scope: !9783)
!9785 = !DILocation(line: 154, column: 17, scope: !9783)
!9786 = !DILocation(line: 154, column: 6, scope: !9777)
!9787 = !DILocation(line: 155, column: 3, scope: !9783)
!9788 = !DILocation(line: 155, column: 9, scope: !9783)
!9789 = !DILocation(line: 155, column: 14, scope: !9783)
!9790 = !DILocation(line: 155, column: 22, scope: !9783)
!9791 = !DILocation(line: 155, column: 28, scope: !9783)
!9792 = !DILocation(line: 156, column: 1, scope: !9777)
!9793 = distinct !DISubprogram(name: "schedule_work", scope: !183, file: !183, line: 566, type: !9794, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!555, !2176}
!9796 = !DILocalVariable(name: "work", arg: 1, scope: !9793, file: !183, line: 566, type: !2176)
!9797 = !DILocation(line: 566, column: 54, scope: !9793)
!9798 = !DILocation(line: 568, column: 20, scope: !9793)
!9799 = !DILocation(line: 568, column: 31, scope: !9793)
!9800 = !DILocation(line: 568, column: 9, scope: !9793)
!9801 = !DILocation(line: 568, column: 2, scope: !9793)
!9802 = distinct !DISubprogram(name: "queue_work", scope: !183, file: !183, line: 504, type: !9803, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9803 = !DISubroutineType(types: !9804)
!9804 = !{!555, !2179, !2176}
!9805 = !DILocalVariable(name: "wq", arg: 1, scope: !9802, file: !183, line: 504, type: !2179)
!9806 = !DILocation(line: 504, column: 56, scope: !9802)
!9807 = !DILocalVariable(name: "work", arg: 2, scope: !9802, file: !183, line: 505, type: !2176)
!9808 = !DILocation(line: 505, column: 30, scope: !9802)
!9809 = !DILocation(line: 507, column: 41, scope: !9802)
!9810 = !DILocation(line: 507, column: 45, scope: !9802)
!9811 = !DILocation(line: 507, column: 9, scope: !9802)
!9812 = !DILocation(line: 507, column: 2, scope: !9802)
!9813 = distinct !DISubprogram(name: "mmc_blk_mq_req_done", scope: !3, file: !3, line: 2045, type: !4984, scopeLine: 2046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9814 = !DILocation(line: 407, column: 64, scope: !5811, inlinedAt: !9815)
!9815 = distinct !DILocation(line: 2090, column: 3, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 2086, column: 45)
!9817 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2085, column: 6)
!9818 = !DILocation(line: 407, column: 84, scope: !5811, inlinedAt: !9815)
!9819 = !DILocation(line: 327, column: 67, scope: !5820, inlinedAt: !9820)
!9820 = distinct !DILocation(line: 2087, column: 3, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 2087, column: 3)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 2087, column: 3)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 2087, column: 3)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 2087, column: 3)
!9825 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 2087, column: 3)
!9826 = !DILocation(line: 407, column: 64, scope: !5811, inlinedAt: !9827)
!9827 = distinct !DILocation(line: 2068, column: 3, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 2055, column: 37)
!9829 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2055, column: 6)
!9830 = !DILocation(line: 407, column: 84, scope: !5811, inlinedAt: !9827)
!9831 = !DILocation(line: 327, column: 67, scope: !5820, inlinedAt: !9832)
!9832 = distinct !DILocation(line: 2064, column: 3, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 2064, column: 3)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2064, column: 3)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 2064, column: 3)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 2064, column: 3)
!9837 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 2064, column: 3)
!9838 = !DILocalVariable(name: "mrq", arg: 1, scope: !9813, file: !3, line: 2045, type: !4933)
!9839 = !DILocation(line: 2045, column: 53, scope: !9813)
!9840 = !DILocalVariable(name: "mqrq", scope: !9813, file: !3, line: 2047, type: !5457)
!9841 = !DILocation(line: 2047, column: 24, scope: !9813)
!9842 = !DILocalVariable(name: "__mptr", scope: !9843, file: !3, line: 2047, type: !257)
!9843 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2047, column: 31)
!9844 = !DILocation(line: 2047, column: 31, scope: !9843)
!9845 = !DILocation(line: 2047, column: 31, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 2047, column: 31)
!9847 = !DILocalVariable(name: "req", scope: !9813, file: !3, line: 2049, type: !2386)
!9848 = !DILocation(line: 2049, column: 18, scope: !9813)
!9849 = !DILocation(line: 2049, column: 45, scope: !9813)
!9850 = !DILocation(line: 2049, column: 24, scope: !9813)
!9851 = !DILocalVariable(name: "q", scope: !9813, file: !3, line: 2050, type: !2382)
!9852 = !DILocation(line: 2050, column: 24, scope: !9813)
!9853 = !DILocation(line: 2050, column: 28, scope: !9813)
!9854 = !DILocation(line: 2050, column: 33, scope: !9813)
!9855 = !DILocalVariable(name: "mq", scope: !9813, file: !3, line: 2051, type: !258)
!9856 = !DILocation(line: 2051, column: 20, scope: !9813)
!9857 = !DILocation(line: 2051, column: 25, scope: !9813)
!9858 = !DILocation(line: 2051, column: 28, scope: !9813)
!9859 = !DILocalVariable(name: "host", scope: !9813, file: !3, line: 2052, type: !267)
!9860 = !DILocation(line: 2052, column: 19, scope: !9813)
!9861 = !DILocation(line: 2052, column: 26, scope: !9813)
!9862 = !DILocation(line: 2052, column: 30, scope: !9813)
!9863 = !DILocation(line: 2052, column: 36, scope: !9813)
!9864 = !DILocalVariable(name: "flags", scope: !9813, file: !3, line: 2053, type: !389)
!9865 = !DILocation(line: 2053, column: 16, scope: !9813)
!9866 = !DILocation(line: 2055, column: 30, scope: !9829)
!9867 = !DILocation(line: 2055, column: 7, scope: !9829)
!9868 = !DILocation(line: 2055, column: 6, scope: !9813)
!9869 = !DILocalVariable(name: "waiting", scope: !9828, file: !3, line: 2056, type: !555)
!9870 = !DILocation(line: 2056, column: 8, scope: !9828)
!9871 = !DILocation(line: 2064, column: 3, scope: !9828)
!9872 = !DILocation(line: 2064, column: 3, scope: !9837)
!9873 = !DILocalVariable(name: "__dummy", scope: !9874, file: !3, line: 2064, type: !389)
!9874 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 2064, column: 3)
!9875 = !DILocation(line: 2064, column: 3, scope: !9874)
!9876 = !DILocalVariable(name: "__dummy2", scope: !9874, file: !3, line: 2064, type: !389)
!9877 = !DILocation(line: 2064, column: 3, scope: !9836)
!9878 = !DILocation(line: 2064, column: 3, scope: !9835)
!9879 = !DILocation(line: 2064, column: 3, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2064, column: 3)
!9881 = !DILocalVariable(name: "__dummy", scope: !9882, file: !3, line: 2064, type: !389)
!9882 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 2064, column: 3)
!9883 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 2064, column: 3)
!9884 = !DILocation(line: 2064, column: 3, scope: !9882)
!9885 = !DILocalVariable(name: "__dummy2", scope: !9882, file: !3, line: 2064, type: !389)
!9886 = !DILocation(line: 2064, column: 3, scope: !9883)
!9887 = !DILocation(line: 2064, column: 3, scope: !9834)
!9888 = !{i32 -2141129185}
!9889 = !DILocation(line: 2064, column: 3, scope: !9833)
!9890 = !DILocation(line: 329, column: 10, scope: !5820, inlinedAt: !9832)
!9891 = !DILocation(line: 329, column: 16, scope: !5820, inlinedAt: !9832)
!9892 = !DILocation(line: 2065, column: 22, scope: !9828)
!9893 = !DILocation(line: 2065, column: 3, scope: !9828)
!9894 = !DILocation(line: 2065, column: 7, scope: !9828)
!9895 = !DILocation(line: 2065, column: 20, scope: !9828)
!9896 = !DILocation(line: 2066, column: 3, scope: !9828)
!9897 = !DILocation(line: 2066, column: 7, scope: !9828)
!9898 = !DILocation(line: 2066, column: 15, scope: !9828)
!9899 = !DILocation(line: 2067, column: 13, scope: !9828)
!9900 = !DILocation(line: 2067, column: 17, scope: !9828)
!9901 = !DILocation(line: 2067, column: 11, scope: !9828)
!9902 = !DILocation(line: 2068, column: 27, scope: !9828)
!9903 = !DILocation(line: 2068, column: 31, scope: !9828)
!9904 = !DILocation(line: 2068, column: 37, scope: !9828)
!9905 = !DILocation(line: 409, column: 2, scope: !5964, inlinedAt: !9827)
!9906 = !DILocation(line: 409, column: 2, scope: !5969, inlinedAt: !9827)
!9907 = !DILocation(line: 409, column: 2, scope: !5970, inlinedAt: !9827)
!9908 = !DILocation(line: 409, column: 2, scope: !5977, inlinedAt: !9827)
!9909 = !DILocation(line: 409, column: 2, scope: !5980, inlinedAt: !9827)
!9910 = !DILocation(line: 2076, column: 7, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 2076, column: 7)
!9912 = !DILocation(line: 2076, column: 7, scope: !9828)
!9913 = !DILocation(line: 2077, column: 4, scope: !9911)
!9914 = !DILocation(line: 2079, column: 15, scope: !9911)
!9915 = !DILocation(line: 2079, column: 19, scope: !9911)
!9916 = !DILocation(line: 2079, column: 25, scope: !9911)
!9917 = !DILocation(line: 2079, column: 39, scope: !9911)
!9918 = !DILocation(line: 2079, column: 43, scope: !9911)
!9919 = !DILocation(line: 2079, column: 4, scope: !9911)
!9920 = !DILocation(line: 2081, column: 3, scope: !9828)
!9921 = !DILocation(line: 2085, column: 24, scope: !9817)
!9922 = !DILocation(line: 2085, column: 30, scope: !9817)
!9923 = !DILocation(line: 2085, column: 6, scope: !9817)
!9924 = !DILocation(line: 2085, column: 35, scope: !9817)
!9925 = !DILocation(line: 2086, column: 34, scope: !9817)
!9926 = !DILocation(line: 2086, column: 38, scope: !9817)
!9927 = !DILocation(line: 2086, column: 6, scope: !9817)
!9928 = !DILocation(line: 2085, column: 6, scope: !9813)
!9929 = !DILocation(line: 2087, column: 3, scope: !9816)
!9930 = !DILocation(line: 2087, column: 3, scope: !9825)
!9931 = !DILocalVariable(name: "__dummy", scope: !9932, file: !3, line: 2087, type: !389)
!9932 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 2087, column: 3)
!9933 = !DILocation(line: 2087, column: 3, scope: !9932)
!9934 = !DILocalVariable(name: "__dummy2", scope: !9932, file: !3, line: 2087, type: !389)
!9935 = !DILocation(line: 2087, column: 3, scope: !9824)
!9936 = !DILocation(line: 2087, column: 3, scope: !9823)
!9937 = !DILocation(line: 2087, column: 3, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 2087, column: 3)
!9939 = !DILocalVariable(name: "__dummy", scope: !9940, file: !3, line: 2087, type: !389)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 2087, column: 3)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !3, line: 2087, column: 3)
!9942 = !DILocation(line: 2087, column: 3, scope: !9940)
!9943 = !DILocalVariable(name: "__dummy2", scope: !9940, file: !3, line: 2087, type: !389)
!9944 = !DILocation(line: 2087, column: 3, scope: !9941)
!9945 = !DILocation(line: 2087, column: 3, scope: !9822)
!9946 = !{i32 -2141128065}
!9947 = !DILocation(line: 2087, column: 3, scope: !9821)
!9948 = !DILocation(line: 329, column: 10, scope: !5820, inlinedAt: !9820)
!9949 = !DILocation(line: 329, column: 16, scope: !5820, inlinedAt: !9820)
!9950 = !DILocation(line: 2088, column: 3, scope: !9816)
!9951 = !DILocation(line: 2088, column: 7, scope: !9816)
!9952 = !DILocation(line: 2088, column: 23, scope: !9816)
!9953 = !DILocation(line: 2089, column: 22, scope: !9816)
!9954 = !DILocation(line: 2089, column: 3, scope: !9816)
!9955 = !DILocation(line: 2089, column: 7, scope: !9816)
!9956 = !DILocation(line: 2089, column: 20, scope: !9816)
!9957 = !DILocation(line: 2090, column: 27, scope: !9816)
!9958 = !DILocation(line: 2090, column: 31, scope: !9816)
!9959 = !DILocation(line: 2090, column: 37, scope: !9816)
!9960 = !DILocation(line: 409, column: 2, scope: !5964, inlinedAt: !9815)
!9961 = !DILocation(line: 409, column: 2, scope: !5969, inlinedAt: !9815)
!9962 = !DILocation(line: 409, column: 2, scope: !5970, inlinedAt: !9815)
!9963 = !DILocation(line: 409, column: 2, scope: !5977, inlinedAt: !9815)
!9964 = !DILocation(line: 409, column: 2, scope: !5980, inlinedAt: !9815)
!9965 = !DILocation(line: 2091, column: 3, scope: !9816)
!9966 = !DILocation(line: 2092, column: 18, scope: !9816)
!9967 = !DILocation(line: 2092, column: 22, scope: !9816)
!9968 = !DILocation(line: 2092, column: 3, scope: !9816)
!9969 = !DILocation(line: 2093, column: 3, scope: !9816)
!9970 = !DILocation(line: 2096, column: 27, scope: !9813)
!9971 = !DILocation(line: 2096, column: 31, scope: !9813)
!9972 = !DILocation(line: 2096, column: 2, scope: !9813)
!9973 = !DILocation(line: 2098, column: 2, scope: !9813)
!9974 = !DILocation(line: 2098, column: 6, scope: !9813)
!9975 = !DILocation(line: 2098, column: 14, scope: !9813)
!9976 = !DILocation(line: 2099, column: 2, scope: !9813)
!9977 = !DILocation(line: 2101, column: 22, scope: !9813)
!9978 = !DILocation(line: 2101, column: 26, scope: !9813)
!9979 = !DILocation(line: 2101, column: 2, scope: !9813)
!9980 = !DILocation(line: 2102, column: 1, scope: !9813)
!9981 = distinct !DISubprogram(name: "mmc_blk_probe", scope: !3, file: !3, line: 2873, type: !5612, scopeLine: 2874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!9982 = !DILocalVariable(name: "card", arg: 1, scope: !9981, file: !3, line: 2873, type: !262)
!9983 = !DILocation(line: 2873, column: 43, scope: !9981)
!9984 = !DILocalVariable(name: "md", scope: !9981, file: !3, line: 2875, type: !5408)
!9985 = !DILocation(line: 2875, column: 23, scope: !9981)
!9986 = !DILocalVariable(name: "part_md", scope: !9981, file: !3, line: 2875, type: !5408)
!9987 = !DILocation(line: 2875, column: 28, scope: !9981)
!9988 = !DILocalVariable(name: "cap_str", scope: !9981, file: !3, line: 2876, type: !9989)
!9989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 80, elements: !9990)
!9990 = !{!9991}
!9991 = !DISubrange(count: 10)
!9992 = !DILocation(line: 2876, column: 7, scope: !9981)
!9993 = !DILocation(line: 2881, column: 8, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2881, column: 6)
!9995 = !DILocation(line: 2881, column: 14, scope: !9994)
!9996 = !DILocation(line: 2881, column: 18, scope: !9994)
!9997 = !DILocation(line: 2881, column: 27, scope: !9994)
!9998 = !DILocation(line: 2881, column: 6, scope: !9981)
!9999 = !DILocation(line: 2882, column: 3, scope: !9994)
!10000 = !DILocation(line: 2884, column: 19, scope: !9981)
!10001 = !DILocation(line: 2884, column: 2, scope: !9981)
!10002 = !DILocation(line: 2886, column: 22, scope: !9981)
!10003 = !DILocation(line: 2886, column: 2, scope: !9981)
!10004 = !DILocation(line: 2886, column: 8, scope: !9981)
!10005 = !DILocation(line: 2886, column: 20, scope: !9981)
!10006 = !DILocation(line: 2888, column: 6, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2888, column: 6)
!10008 = !DILocation(line: 2888, column: 6, scope: !9981)
!10009 = !DILocation(line: 2889, column: 3, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10007, file: !3, line: 2888, column: 36)
!10011 = !DILocation(line: 2890, column: 3, scope: !10010)
!10012 = !DILocation(line: 2893, column: 21, scope: !9981)
!10013 = !DILocation(line: 2893, column: 7, scope: !9981)
!10014 = !DILocation(line: 2893, column: 5, scope: !9981)
!10015 = !DILocation(line: 2894, column: 13, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2894, column: 6)
!10017 = !DILocation(line: 2894, column: 6, scope: !10016)
!10018 = !DILocation(line: 2894, column: 6, scope: !9981)
!10019 = !DILocation(line: 2895, column: 18, scope: !10016)
!10020 = !DILocation(line: 2895, column: 10, scope: !10016)
!10021 = !DILocation(line: 2895, column: 3, scope: !10016)
!10022 = !DILocation(line: 2897, column: 36, scope: !9981)
!10023 = !DILocation(line: 2897, column: 40, scope: !9981)
!10024 = !DILocation(line: 2897, column: 23, scope: !9981)
!10025 = !DILocation(line: 2898, column: 4, scope: !9981)
!10026 = !DILocation(line: 2897, column: 2, scope: !9981)
!10027 = !DILocation(line: 2899, column: 2, scope: !9981)
!10028 = !DILocation(line: 2903, column: 26, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2903, column: 6)
!10030 = !DILocation(line: 2903, column: 32, scope: !10029)
!10031 = !DILocation(line: 2903, column: 6, scope: !10029)
!10032 = !DILocation(line: 2903, column: 6, scope: !9981)
!10033 = !DILocation(line: 2904, column: 3, scope: !10029)
!10034 = !DILocation(line: 2906, column: 19, scope: !9981)
!10035 = !DILocation(line: 2906, column: 25, scope: !9981)
!10036 = !DILocation(line: 2906, column: 30, scope: !9981)
!10037 = !DILocation(line: 2906, column: 2, scope: !9981)
!10038 = !DILocation(line: 2908, column: 19, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2908, column: 6)
!10040 = !DILocation(line: 2908, column: 6, scope: !10039)
!10041 = !DILocation(line: 2908, column: 6, scope: !9981)
!10042 = !DILocation(line: 2909, column: 3, scope: !10039)
!10043 = !DILocalVariable(name: "__mptr", scope: !10044, file: !3, line: 2911, type: !257)
!10044 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 2911, column: 2)
!10045 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2911, column: 2)
!10046 = !DILocation(line: 2911, column: 2, scope: !10044)
!10047 = !DILocation(line: 2911, column: 2, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10044, file: !3, line: 2911, column: 2)
!10049 = !DILocation(line: 2911, column: 2, scope: !10045)
!10050 = !DILocation(line: 2911, column: 2, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10045, file: !3, line: 2911, column: 2)
!10052 = !DILocation(line: 2912, column: 20, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 2912, column: 7)
!10054 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 2911, column: 48)
!10055 = !DILocation(line: 2912, column: 7, scope: !10053)
!10056 = !DILocation(line: 2912, column: 7, scope: !10054)
!10057 = !DILocation(line: 2913, column: 4, scope: !10053)
!10058 = !DILocation(line: 2914, column: 2, scope: !10054)
!10059 = !DILocalVariable(name: "__mptr", scope: !10060, file: !3, line: 2911, type: !257)
!10060 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 2911, column: 2)
!10061 = !DILocation(line: 2911, column: 2, scope: !10060)
!10062 = !DILocation(line: 2911, column: 2, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 2911, column: 2)
!10064 = distinct !{!10064, !10049, !10065}
!10065 = !DILocation(line: 2914, column: 2, scope: !10045)
!10066 = !DILocation(line: 2917, column: 22, scope: !9981)
!10067 = !DILocation(line: 2917, column: 28, scope: !9981)
!10068 = !DILocation(line: 2917, column: 2, scope: !9981)
!10069 = !DILocation(line: 2919, column: 36, scope: !9981)
!10070 = !DILocation(line: 2919, column: 42, scope: !9981)
!10071 = !DILocation(line: 2919, column: 2, scope: !9981)
!10072 = !DILocation(line: 2920, column: 30, scope: !9981)
!10073 = !DILocation(line: 2920, column: 36, scope: !9981)
!10074 = !DILocation(line: 2920, column: 2, scope: !9981)
!10075 = !DILocation(line: 2926, column: 6, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2926, column: 6)
!10077 = !DILocation(line: 2926, column: 12, scope: !10076)
!10078 = !DILocation(line: 2926, column: 17, scope: !10076)
!10079 = !DILocation(line: 2926, column: 6, scope: !9981)
!10080 = !DILocation(line: 2927, column: 26, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10076, file: !3, line: 2926, column: 39)
!10082 = !DILocation(line: 2927, column: 32, scope: !10081)
!10083 = !DILocation(line: 2927, column: 3, scope: !10081)
!10084 = !DILocation(line: 2928, column: 22, scope: !10081)
!10085 = !DILocation(line: 2928, column: 28, scope: !10081)
!10086 = !DILocation(line: 2928, column: 3, scope: !10081)
!10087 = !DILocation(line: 2929, column: 2, scope: !10081)
!10088 = !DILocation(line: 2931, column: 2, scope: !9981)
!10089 = !DILabel(scope: !9981, name: "out", file: !3, line: 2933)
!10090 = !DILocation(line: 2933, column: 2, scope: !9981)
!10091 = !DILocation(line: 2934, column: 23, scope: !9981)
!10092 = !DILocation(line: 2934, column: 29, scope: !9981)
!10093 = !DILocation(line: 2934, column: 2, scope: !9981)
!10094 = !DILocation(line: 2935, column: 21, scope: !9981)
!10095 = !DILocation(line: 2935, column: 2, scope: !9981)
!10096 = !DILocation(line: 2936, column: 2, scope: !9981)
!10097 = !DILocation(line: 2937, column: 1, scope: !9981)
!10098 = distinct !DISubprogram(name: "mmc_blk_remove", scope: !3, file: !3, line: 2939, type: !5616, scopeLine: 2940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10099 = !DILocalVariable(name: "card", arg: 1, scope: !10098, file: !3, line: 2939, type: !262)
!10100 = !DILocation(line: 2939, column: 45, scope: !10098)
!10101 = !DILocalVariable(name: "md", scope: !10098, file: !3, line: 2941, type: !5408)
!10102 = !DILocation(line: 2941, column: 23, scope: !10098)
!10103 = !DILocation(line: 2941, column: 45, scope: !10098)
!10104 = !DILocation(line: 2941, column: 51, scope: !10098)
!10105 = !DILocation(line: 2941, column: 28, scope: !10098)
!10106 = !DILocation(line: 2943, column: 25, scope: !10098)
!10107 = !DILocation(line: 2943, column: 31, scope: !10098)
!10108 = !DILocation(line: 2943, column: 2, scope: !10098)
!10109 = !DILocation(line: 2944, column: 23, scope: !10098)
!10110 = !DILocation(line: 2944, column: 29, scope: !10098)
!10111 = !DILocation(line: 2944, column: 2, scope: !10098)
!10112 = !DILocation(line: 2945, column: 23, scope: !10098)
!10113 = !DILocation(line: 2945, column: 29, scope: !10098)
!10114 = !DILocation(line: 2945, column: 2, scope: !10098)
!10115 = !DILocation(line: 2946, column: 6, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 2946, column: 6)
!10117 = !DILocation(line: 2946, column: 10, scope: !10116)
!10118 = !DILocation(line: 2946, column: 23, scope: !10116)
!10119 = !DILocation(line: 2946, column: 27, scope: !10116)
!10120 = !DILocation(line: 2946, column: 20, scope: !10116)
!10121 = !DILocation(line: 2946, column: 6, scope: !10098)
!10122 = !DILocation(line: 2947, column: 18, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 2946, column: 38)
!10124 = !DILocation(line: 2947, column: 24, scope: !10123)
!10125 = !DILocation(line: 2947, column: 3, scope: !10123)
!10126 = !DILocation(line: 2948, column: 23, scope: !10123)
!10127 = !DILocation(line: 2948, column: 29, scope: !10123)
!10128 = !DILocation(line: 2948, column: 33, scope: !10123)
!10129 = !DILocation(line: 2948, column: 3, scope: !10123)
!10130 = !DILocation(line: 2949, column: 20, scope: !10123)
!10131 = !DILocation(line: 2949, column: 26, scope: !10123)
!10132 = !DILocation(line: 2949, column: 3, scope: !10123)
!10133 = !DILocation(line: 2950, column: 2, scope: !10123)
!10134 = !DILocation(line: 2951, column: 6, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 2951, column: 6)
!10136 = !DILocation(line: 2951, column: 12, scope: !10135)
!10137 = !DILocation(line: 2951, column: 17, scope: !10135)
!10138 = !DILocation(line: 2951, column: 6, scope: !10098)
!10139 = !DILocation(line: 2952, column: 23, scope: !10135)
!10140 = !DILocation(line: 2952, column: 29, scope: !10135)
!10141 = !DILocation(line: 2952, column: 3, scope: !10135)
!10142 = !DILocation(line: 2953, column: 25, scope: !10098)
!10143 = !DILocation(line: 2953, column: 31, scope: !10098)
!10144 = !DILocation(line: 2953, column: 2, scope: !10098)
!10145 = !DILocation(line: 2954, column: 21, scope: !10098)
!10146 = !DILocation(line: 2954, column: 2, scope: !10098)
!10147 = !DILocation(line: 2955, column: 19, scope: !10098)
!10148 = !DILocation(line: 2955, column: 25, scope: !10098)
!10149 = !DILocation(line: 2955, column: 2, scope: !10098)
!10150 = !DILocation(line: 2956, column: 20, scope: !10098)
!10151 = !DILocation(line: 2956, column: 26, scope: !10098)
!10152 = !DILocation(line: 2956, column: 2, scope: !10098)
!10153 = !DILocation(line: 2957, column: 1, scope: !10098)
!10154 = distinct !DISubprogram(name: "mmc_blk_shutdown", scope: !3, file: !3, line: 2973, type: !5616, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10155 = !DILocalVariable(name: "card", arg: 1, scope: !10154, file: !3, line: 2973, type: !262)
!10156 = !DILocation(line: 2973, column: 47, scope: !10154)
!10157 = !DILocation(line: 2975, column: 19, scope: !10154)
!10158 = !DILocation(line: 2975, column: 2, scope: !10154)
!10159 = !DILocation(line: 2976, column: 1, scope: !10154)
!10160 = distinct !DISubprogram(name: "mmc_blk_suspend", scope: !3, file: !3, line: 2979, type: !4518, scopeLine: 2980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10161 = !DILocalVariable(name: "dev", arg: 1, scope: !10160, file: !3, line: 2979, type: !272)
!10162 = !DILocation(line: 2979, column: 43, scope: !10160)
!10163 = !DILocalVariable(name: "card", scope: !10160, file: !3, line: 2981, type: !262)
!10164 = !DILocation(line: 2981, column: 19, scope: !10160)
!10165 = !DILocalVariable(name: "__mptr", scope: !10166, file: !3, line: 2981, type: !257)
!10166 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 2981, column: 26)
!10167 = !DILocation(line: 2981, column: 26, scope: !10166)
!10168 = !DILocation(line: 2981, column: 26, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 2981, column: 26)
!10170 = !DILocation(line: 2983, column: 26, scope: !10160)
!10171 = !DILocation(line: 2983, column: 9, scope: !10160)
!10172 = !DILocation(line: 2983, column: 2, scope: !10160)
!10173 = distinct !DISubprogram(name: "mmc_blk_resume", scope: !3, file: !3, line: 2986, type: !4518, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10174 = !DILocalVariable(name: "dev", arg: 1, scope: !10173, file: !3, line: 2986, type: !272)
!10175 = !DILocation(line: 2986, column: 42, scope: !10173)
!10176 = !DILocalVariable(name: "part_md", scope: !10173, file: !3, line: 2988, type: !5408)
!10177 = !DILocation(line: 2988, column: 23, scope: !10173)
!10178 = !DILocalVariable(name: "md", scope: !10173, file: !3, line: 2989, type: !5408)
!10179 = !DILocation(line: 2989, column: 23, scope: !10173)
!10180 = !DILocation(line: 2989, column: 44, scope: !10173)
!10181 = !DILocation(line: 2989, column: 28, scope: !10173)
!10182 = !DILocation(line: 2991, column: 6, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 2991, column: 6)
!10184 = !DILocation(line: 2991, column: 6, scope: !10173)
!10185 = !DILocation(line: 2996, column: 19, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 2991, column: 10)
!10187 = !DILocation(line: 2996, column: 23, scope: !10186)
!10188 = !DILocation(line: 2996, column: 3, scope: !10186)
!10189 = !DILocation(line: 2996, column: 7, scope: !10186)
!10190 = !DILocation(line: 2996, column: 17, scope: !10186)
!10191 = !DILocation(line: 2997, column: 21, scope: !10186)
!10192 = !DILocation(line: 2997, column: 25, scope: !10186)
!10193 = !DILocation(line: 2997, column: 3, scope: !10186)
!10194 = !DILocalVariable(name: "__mptr", scope: !10195, file: !3, line: 2998, type: !257)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 2998, column: 3)
!10196 = distinct !DILexicalBlock(scope: !10186, file: !3, line: 2998, column: 3)
!10197 = !DILocation(line: 2998, column: 3, scope: !10195)
!10198 = !DILocation(line: 2998, column: 3, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 2998, column: 3)
!10200 = !DILocation(line: 2998, column: 3, scope: !10196)
!10201 = !DILocation(line: 2998, column: 3, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 2998, column: 3)
!10203 = !DILocation(line: 2999, column: 22, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 2998, column: 49)
!10205 = !DILocation(line: 2999, column: 31, scope: !10204)
!10206 = !DILocation(line: 2999, column: 4, scope: !10204)
!10207 = !DILocation(line: 3000, column: 3, scope: !10204)
!10208 = !DILocalVariable(name: "__mptr", scope: !10209, file: !3, line: 2998, type: !257)
!10209 = distinct !DILexicalBlock(scope: !10202, file: !3, line: 2998, column: 3)
!10210 = !DILocation(line: 2998, column: 3, scope: !10209)
!10211 = !DILocation(line: 2998, column: 3, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 2998, column: 3)
!10213 = distinct !{!10213, !10200, !10214}
!10214 = !DILocation(line: 3000, column: 3, scope: !10196)
!10215 = !DILocation(line: 3001, column: 2, scope: !10186)
!10216 = !DILocation(line: 3002, column: 2, scope: !10173)
!10217 = distinct !DISubprogram(name: "_mmc_blk_suspend", scope: !3, file: !3, line: 2959, type: !5612, scopeLine: 2960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10218 = !DILocalVariable(name: "card", arg: 1, scope: !10217, file: !3, line: 2959, type: !262)
!10219 = !DILocation(line: 2959, column: 46, scope: !10217)
!10220 = !DILocalVariable(name: "part_md", scope: !10217, file: !3, line: 2961, type: !5408)
!10221 = !DILocation(line: 2961, column: 23, scope: !10217)
!10222 = !DILocalVariable(name: "md", scope: !10217, file: !3, line: 2962, type: !5408)
!10223 = !DILocation(line: 2962, column: 23, scope: !10217)
!10224 = !DILocation(line: 2962, column: 45, scope: !10217)
!10225 = !DILocation(line: 2962, column: 51, scope: !10217)
!10226 = !DILocation(line: 2962, column: 28, scope: !10217)
!10227 = !DILocation(line: 2964, column: 6, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 2964, column: 6)
!10229 = !DILocation(line: 2964, column: 6, scope: !10217)
!10230 = !DILocation(line: 2965, column: 22, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 2964, column: 10)
!10232 = !DILocation(line: 2965, column: 26, scope: !10231)
!10233 = !DILocation(line: 2965, column: 3, scope: !10231)
!10234 = !DILocalVariable(name: "__mptr", scope: !10235, file: !3, line: 2966, type: !257)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 2966, column: 3)
!10236 = distinct !DILexicalBlock(scope: !10231, file: !3, line: 2966, column: 3)
!10237 = !DILocation(line: 2966, column: 3, scope: !10235)
!10238 = !DILocation(line: 2966, column: 3, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 2966, column: 3)
!10240 = !DILocation(line: 2966, column: 3, scope: !10236)
!10241 = !DILocation(line: 2966, column: 3, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10236, file: !3, line: 2966, column: 3)
!10243 = !DILocation(line: 2967, column: 23, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 2966, column: 49)
!10245 = !DILocation(line: 2967, column: 32, scope: !10244)
!10246 = !DILocation(line: 2967, column: 4, scope: !10244)
!10247 = !DILocation(line: 2968, column: 3, scope: !10244)
!10248 = !DILocalVariable(name: "__mptr", scope: !10249, file: !3, line: 2966, type: !257)
!10249 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 2966, column: 3)
!10250 = !DILocation(line: 2966, column: 3, scope: !10249)
!10251 = !DILocation(line: 2966, column: 3, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 2966, column: 3)
!10253 = distinct !{!10253, !10240, !10254}
!10254 = !DILocation(line: 2968, column: 3, scope: !10236)
!10255 = !DILocation(line: 2969, column: 2, scope: !10231)
!10256 = !DILocation(line: 2970, column: 2, scope: !10217)
!10257 = distinct !DISubprogram(name: "mmc_fixup_device", scope: !5623, file: !5623, line: 148, type: !10258, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{null, !262, !10260}
!10260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5625, size: 64)
!10261 = !DILocalVariable(name: "card", arg: 1, scope: !10257, file: !5623, line: 148, type: !262)
!10262 = !DILocation(line: 148, column: 54, scope: !10257)
!10263 = !DILocalVariable(name: "table", arg: 2, scope: !10257, file: !5623, line: 149, type: !10260)
!10264 = !DILocation(line: 149, column: 33, scope: !10257)
!10265 = !DILocalVariable(name: "f", scope: !10257, file: !5623, line: 151, type: !10260)
!10266 = !DILocation(line: 151, column: 26, scope: !10257)
!10267 = !DILocalVariable(name: "rev", scope: !10257, file: !5623, line: 152, type: !486)
!10268 = !DILocation(line: 152, column: 6, scope: !10257)
!10269 = !DILocation(line: 152, column: 12, scope: !10257)
!10270 = !DILocation(line: 154, column: 11, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10257, file: !5623, line: 154, column: 2)
!10272 = !DILocation(line: 154, column: 9, scope: !10271)
!10273 = !DILocation(line: 154, column: 7, scope: !10271)
!10274 = !DILocation(line: 154, column: 18, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10271, file: !5623, line: 154, column: 2)
!10276 = !DILocation(line: 154, column: 21, scope: !10275)
!10277 = !DILocation(line: 154, column: 2, scope: !10271)
!10278 = !DILocation(line: 155, column: 8, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !5623, line: 155, column: 7)
!10280 = distinct !DILexicalBlock(scope: !10275, file: !5623, line: 154, column: 40)
!10281 = !DILocation(line: 155, column: 11, scope: !10279)
!10282 = !DILocation(line: 155, column: 18, scope: !10279)
!10283 = !DILocation(line: 155, column: 36, scope: !10279)
!10284 = !DILocation(line: 156, column: 8, scope: !10279)
!10285 = !DILocation(line: 156, column: 11, scope: !10279)
!10286 = !DILocation(line: 156, column: 21, scope: !10279)
!10287 = !DILocation(line: 156, column: 27, scope: !10279)
!10288 = !DILocation(line: 156, column: 31, scope: !10279)
!10289 = !DILocation(line: 156, column: 18, scope: !10279)
!10290 = !DILocation(line: 156, column: 39, scope: !10279)
!10291 = !DILocation(line: 157, column: 8, scope: !10279)
!10292 = !DILocation(line: 157, column: 11, scope: !10279)
!10293 = !DILocation(line: 157, column: 17, scope: !10279)
!10294 = !DILocation(line: 157, column: 34, scope: !10279)
!10295 = !DILocation(line: 158, column: 8, scope: !10279)
!10296 = !DILocation(line: 158, column: 11, scope: !10279)
!10297 = !DILocation(line: 158, column: 20, scope: !10279)
!10298 = !DILocation(line: 158, column: 26, scope: !10279)
!10299 = !DILocation(line: 158, column: 30, scope: !10279)
!10300 = !DILocation(line: 158, column: 17, scope: !10279)
!10301 = !DILocation(line: 158, column: 37, scope: !10279)
!10302 = !DILocation(line: 159, column: 8, scope: !10279)
!10303 = !DILocation(line: 159, column: 11, scope: !10279)
!10304 = !DILocation(line: 159, column: 16, scope: !10279)
!10305 = !DILocation(line: 159, column: 32, scope: !10279)
!10306 = !DILocation(line: 160, column: 17, scope: !10279)
!10307 = !DILocation(line: 160, column: 20, scope: !10279)
!10308 = !DILocation(line: 160, column: 26, scope: !10279)
!10309 = !DILocation(line: 160, column: 32, scope: !10279)
!10310 = !DILocation(line: 160, column: 36, scope: !10279)
!10311 = !DILocation(line: 160, column: 9, scope: !10279)
!10312 = !DILocation(line: 161, column: 40, scope: !10279)
!10313 = !DILocation(line: 162, column: 8, scope: !10279)
!10314 = !DILocation(line: 162, column: 11, scope: !10279)
!10315 = !DILocation(line: 162, column: 25, scope: !10279)
!10316 = !DILocation(line: 162, column: 31, scope: !10279)
!10317 = !DILocation(line: 162, column: 35, scope: !10279)
!10318 = !DILocation(line: 162, column: 22, scope: !10279)
!10319 = !DILocation(line: 162, column: 42, scope: !10279)
!10320 = !DILocation(line: 163, column: 8, scope: !10279)
!10321 = !DILocation(line: 163, column: 11, scope: !10279)
!10322 = !DILocation(line: 163, column: 22, scope: !10279)
!10323 = !DILocation(line: 163, column: 44, scope: !10279)
!10324 = !DILocation(line: 164, column: 8, scope: !10279)
!10325 = !DILocation(line: 164, column: 11, scope: !10279)
!10326 = !DILocation(line: 164, column: 25, scope: !10279)
!10327 = !DILocation(line: 164, column: 31, scope: !10279)
!10328 = !DILocation(line: 164, column: 35, scope: !10279)
!10329 = !DILocation(line: 164, column: 22, scope: !10279)
!10330 = !DILocation(line: 164, column: 42, scope: !10279)
!10331 = !DILocation(line: 165, column: 8, scope: !10279)
!10332 = !DILocation(line: 165, column: 11, scope: !10279)
!10333 = !DILocation(line: 165, column: 22, scope: !10279)
!10334 = !DILocation(line: 165, column: 44, scope: !10279)
!10335 = !DILocation(line: 166, column: 8, scope: !10279)
!10336 = !DILocation(line: 166, column: 11, scope: !10279)
!10337 = !DILocation(line: 166, column: 23, scope: !10279)
!10338 = !DILocation(line: 166, column: 42, scope: !10279)
!10339 = !DILocation(line: 167, column: 8, scope: !10279)
!10340 = !DILocation(line: 167, column: 11, scope: !10279)
!10341 = !DILocation(line: 167, column: 26, scope: !10279)
!10342 = !DILocation(line: 167, column: 32, scope: !10279)
!10343 = !DILocation(line: 167, column: 40, scope: !10279)
!10344 = !DILocation(line: 167, column: 23, scope: !10279)
!10345 = !DILocation(line: 167, column: 45, scope: !10279)
!10346 = !DILocation(line: 168, column: 7, scope: !10279)
!10347 = !DILocation(line: 168, column: 14, scope: !10279)
!10348 = !DILocation(line: 168, column: 17, scope: !10279)
!10349 = !DILocation(line: 168, column: 11, scope: !10279)
!10350 = !DILocation(line: 168, column: 27, scope: !10279)
!10351 = !DILocation(line: 168, column: 30, scope: !10279)
!10352 = !DILocation(line: 168, column: 37, scope: !10279)
!10353 = !DILocation(line: 168, column: 40, scope: !10279)
!10354 = !DILocation(line: 168, column: 34, scope: !10279)
!10355 = !DILocation(line: 155, column: 7, scope: !10280)
!10356 = !DILocation(line: 170, column: 4, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10279, file: !5623, line: 168, column: 49)
!10358 = !DILocation(line: 170, column: 7, scope: !10357)
!10359 = !DILocation(line: 170, column: 20, scope: !10357)
!10360 = !DILocation(line: 170, column: 26, scope: !10357)
!10361 = !DILocation(line: 170, column: 29, scope: !10357)
!10362 = !DILocation(line: 171, column: 3, scope: !10357)
!10363 = !DILocation(line: 172, column: 2, scope: !10280)
!10364 = !DILocation(line: 154, column: 36, scope: !10275)
!10365 = !DILocation(line: 154, column: 2, scope: !10275)
!10366 = distinct !{!10366, !10277, !10367}
!10367 = !DILocation(line: 172, column: 2, scope: !10271)
!10368 = !DILocation(line: 173, column: 1, scope: !10257)
!10369 = distinct !DISubprogram(name: "mmc_blk_alloc", scope: !3, file: !3, line: 2376, type: !10370, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10370 = !DISubroutineType(types: !10371)
!10371 = !{!5408, !262}
!10372 = !DILocalVariable(name: "card", arg: 1, scope: !10369, file: !3, line: 2376, type: !262)
!10373 = !DILocation(line: 2376, column: 60, scope: !10369)
!10374 = !DILocalVariable(name: "size", scope: !10369, file: !3, line: 2378, type: !948)
!10375 = !DILocation(line: 2378, column: 11, scope: !10369)
!10376 = !DILocation(line: 2380, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 2380, column: 6)
!10378 = !DILocation(line: 2380, column: 25, scope: !10377)
!10379 = !DILocation(line: 2380, column: 28, scope: !10377)
!10380 = !DILocation(line: 2380, column: 6, scope: !10369)
!10381 = !DILocation(line: 2385, column: 10, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 2380, column: 54)
!10383 = !DILocation(line: 2385, column: 16, scope: !10382)
!10384 = !DILocation(line: 2385, column: 24, scope: !10382)
!10385 = !DILocation(line: 2385, column: 8, scope: !10382)
!10386 = !DILocation(line: 2386, column: 2, scope: !10382)
!10387 = !DILocation(line: 2391, column: 28, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 2386, column: 9)
!10389 = !DILocation(line: 2391, column: 34, scope: !10388)
!10390 = !DILocation(line: 2391, column: 38, scope: !10388)
!10391 = !DILocation(line: 2391, column: 10, scope: !10388)
!10392 = !DILocation(line: 2392, column: 8, scope: !10388)
!10393 = !DILocation(line: 2392, column: 14, scope: !10388)
!10394 = !DILocation(line: 2392, column: 18, scope: !10388)
!10395 = !DILocation(line: 2392, column: 31, scope: !10388)
!10396 = !DILocation(line: 2392, column: 4, scope: !10388)
!10397 = !DILocation(line: 2391, column: 8, scope: !10388)
!10398 = !DILocation(line: 2395, column: 27, scope: !10369)
!10399 = !DILocation(line: 2395, column: 34, scope: !10369)
!10400 = !DILocation(line: 2395, column: 40, scope: !10369)
!10401 = !DILocation(line: 2395, column: 45, scope: !10369)
!10402 = !DILocation(line: 2395, column: 9, scope: !10369)
!10403 = !DILocation(line: 2395, column: 2, scope: !10369)
!10404 = distinct !DISubprogram(name: "IS_ERR", scope: !10405, file: !10405, line: 34, type: !10406, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10405 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10406 = !DISubroutineType(types: !10407)
!10407 = !{!555, !3283}
!10408 = !DILocalVariable(name: "ptr", arg: 1, scope: !10404, file: !10405, line: 34, type: !3283)
!10409 = !DILocation(line: 34, column: 60, scope: !10404)
!10410 = !DILocation(line: 36, column: 9, scope: !10404)
!10411 = !DILocation(line: 36, column: 2, scope: !10404)
!10412 = distinct !DISubprogram(name: "PTR_ERR", scope: !10405, file: !10405, line: 29, type: !10413, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10413 = !DISubroutineType(types: !10414)
!10414 = !{!184, !3283}
!10415 = !DILocalVariable(name: "ptr", arg: 1, scope: !10412, file: !10405, line: 29, type: !3283)
!10416 = !DILocation(line: 29, column: 61, scope: !10412)
!10417 = !DILocation(line: 31, column: 16, scope: !10412)
!10418 = !DILocation(line: 31, column: 9, scope: !10412)
!10419 = !DILocation(line: 31, column: 2, scope: !10412)
!10420 = distinct !DISubprogram(name: "dev_name", scope: !114, file: !114, line: 609, type: !10421, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10421 = !DISubroutineType(types: !10422)
!10422 = !{!280, !4813}
!10423 = !DILocalVariable(name: "dev", arg: 1, scope: !10420, file: !114, line: 609, type: !4813)
!10424 = !DILocation(line: 609, column: 57, scope: !10420)
!10425 = !DILocation(line: 612, column: 6, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10420, file: !114, line: 612, column: 6)
!10427 = !DILocation(line: 612, column: 11, scope: !10426)
!10428 = !DILocation(line: 612, column: 6, scope: !10420)
!10429 = !DILocation(line: 613, column: 10, scope: !10426)
!10430 = !DILocation(line: 613, column: 15, scope: !10426)
!10431 = !DILocation(line: 613, column: 3, scope: !10426)
!10432 = !DILocation(line: 615, column: 23, scope: !10420)
!10433 = !DILocation(line: 615, column: 28, scope: !10420)
!10434 = !DILocation(line: 615, column: 9, scope: !10420)
!10435 = !DILocation(line: 615, column: 2, scope: !10420)
!10436 = !DILocation(line: 616, column: 1, scope: !10420)
!10437 = distinct !DISubprogram(name: "mmc_blk_alloc_parts", scope: !3, file: !3, line: 2583, type: !10438, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{!324, !262, !5408}
!10440 = !DILocalVariable(name: "card", arg: 1, scope: !10437, file: !3, line: 2583, type: !262)
!10441 = !DILocation(line: 2583, column: 49, scope: !10437)
!10442 = !DILocalVariable(name: "md", arg: 2, scope: !10437, file: !3, line: 2583, type: !5408)
!10443 = !DILocation(line: 2583, column: 76, scope: !10437)
!10444 = !DILocalVariable(name: "idx", scope: !10437, file: !3, line: 2585, type: !324)
!10445 = !DILocation(line: 2585, column: 6, scope: !10437)
!10446 = !DILocalVariable(name: "ret", scope: !10437, file: !3, line: 2585, type: !324)
!10447 = !DILocation(line: 2585, column: 11, scope: !10437)
!10448 = !DILocation(line: 2587, column: 7, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2587, column: 6)
!10450 = !DILocation(line: 2587, column: 6, scope: !10437)
!10451 = !DILocation(line: 2588, column: 3, scope: !10449)
!10452 = !DILocation(line: 2590, column: 11, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2590, column: 2)
!10454 = !DILocation(line: 2590, column: 7, scope: !10453)
!10455 = !DILocation(line: 2590, column: 16, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 2590, column: 2)
!10457 = !DILocation(line: 2590, column: 22, scope: !10456)
!10458 = !DILocation(line: 2590, column: 28, scope: !10456)
!10459 = !DILocation(line: 2590, column: 20, scope: !10456)
!10460 = !DILocation(line: 2590, column: 2, scope: !10453)
!10461 = !DILocation(line: 2591, column: 7, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10463, file: !3, line: 2591, column: 7)
!10463 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 2590, column: 45)
!10464 = !DILocation(line: 2591, column: 13, scope: !10462)
!10465 = !DILocation(line: 2591, column: 18, scope: !10462)
!10466 = !DILocation(line: 2591, column: 23, scope: !10462)
!10467 = !DILocation(line: 2591, column: 33, scope: !10462)
!10468 = !DILocation(line: 2591, column: 7, scope: !10463)
!10469 = !DILocation(line: 2598, column: 34, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 2591, column: 59)
!10471 = !DILocation(line: 2598, column: 40, scope: !10470)
!10472 = !DILocation(line: 2599, column: 5, scope: !10470)
!10473 = !DILocation(line: 2599, column: 11, scope: !10470)
!10474 = !DILocation(line: 2599, column: 16, scope: !10470)
!10475 = !DILocation(line: 2599, column: 21, scope: !10470)
!10476 = !DILocation(line: 2600, column: 5, scope: !10470)
!10477 = !DILocation(line: 2600, column: 11, scope: !10470)
!10478 = !DILocation(line: 2600, column: 16, scope: !10470)
!10479 = !DILocation(line: 2600, column: 21, scope: !10470)
!10480 = !DILocation(line: 2600, column: 26, scope: !10470)
!10481 = !DILocation(line: 2601, column: 5, scope: !10470)
!10482 = !DILocation(line: 2601, column: 11, scope: !10470)
!10483 = !DILocation(line: 2601, column: 16, scope: !10470)
!10484 = !DILocation(line: 2601, column: 21, scope: !10470)
!10485 = !DILocation(line: 2598, column: 10, scope: !10470)
!10486 = !DILocation(line: 2598, column: 8, scope: !10470)
!10487 = !DILocation(line: 2602, column: 8, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 2602, column: 8)
!10489 = !DILocation(line: 2602, column: 8, scope: !10470)
!10490 = !DILocation(line: 2603, column: 12, scope: !10488)
!10491 = !DILocation(line: 2603, column: 5, scope: !10488)
!10492 = !DILocation(line: 2604, column: 3, scope: !10470)
!10493 = !DILocation(line: 2604, column: 14, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 2604, column: 14)
!10495 = !DILocation(line: 2604, column: 20, scope: !10494)
!10496 = !DILocation(line: 2604, column: 25, scope: !10494)
!10497 = !DILocation(line: 2604, column: 30, scope: !10494)
!10498 = !DILocation(line: 2604, column: 14, scope: !10462)
!10499 = !DILocation(line: 2605, column: 29, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2604, column: 36)
!10501 = !DILocation(line: 2605, column: 35, scope: !10500)
!10502 = !DILocation(line: 2606, column: 5, scope: !10500)
!10503 = !DILocation(line: 2606, column: 11, scope: !10500)
!10504 = !DILocation(line: 2606, column: 16, scope: !10500)
!10505 = !DILocation(line: 2606, column: 21, scope: !10500)
!10506 = !DILocation(line: 2607, column: 5, scope: !10500)
!10507 = !DILocation(line: 2607, column: 11, scope: !10500)
!10508 = !DILocation(line: 2607, column: 16, scope: !10500)
!10509 = !DILocation(line: 2607, column: 21, scope: !10500)
!10510 = !DILocation(line: 2607, column: 26, scope: !10500)
!10511 = !DILocation(line: 2608, column: 5, scope: !10500)
!10512 = !DILocation(line: 2608, column: 11, scope: !10500)
!10513 = !DILocation(line: 2608, column: 16, scope: !10500)
!10514 = !DILocation(line: 2608, column: 21, scope: !10500)
!10515 = !DILocation(line: 2609, column: 5, scope: !10500)
!10516 = !DILocation(line: 2609, column: 11, scope: !10500)
!10517 = !DILocation(line: 2609, column: 16, scope: !10500)
!10518 = !DILocation(line: 2609, column: 21, scope: !10500)
!10519 = !DILocation(line: 2610, column: 5, scope: !10500)
!10520 = !DILocation(line: 2610, column: 11, scope: !10500)
!10521 = !DILocation(line: 2610, column: 16, scope: !10500)
!10522 = !DILocation(line: 2610, column: 21, scope: !10500)
!10523 = !DILocation(line: 2605, column: 10, scope: !10500)
!10524 = !DILocation(line: 2605, column: 8, scope: !10500)
!10525 = !DILocation(line: 2611, column: 8, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10500, file: !3, line: 2611, column: 8)
!10527 = !DILocation(line: 2611, column: 8, scope: !10500)
!10528 = !DILocation(line: 2612, column: 12, scope: !10526)
!10529 = !DILocation(line: 2612, column: 5, scope: !10526)
!10530 = !DILocation(line: 2613, column: 3, scope: !10500)
!10531 = !DILocation(line: 2614, column: 2, scope: !10463)
!10532 = !DILocation(line: 2590, column: 41, scope: !10456)
!10533 = !DILocation(line: 2590, column: 2, scope: !10456)
!10534 = distinct !{!10534, !10460, !10535}
!10535 = !DILocation(line: 2614, column: 2, scope: !10453)
!10536 = !DILocation(line: 2616, column: 2, scope: !10437)
!10537 = !DILocation(line: 2617, column: 1, scope: !10437)
!10538 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !114, file: !114, line: 660, type: !10539, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{null, !272, !257}
!10541 = !DILocalVariable(name: "dev", arg: 1, scope: !10538, file: !114, line: 660, type: !272)
!10542 = !DILocation(line: 660, column: 51, scope: !10538)
!10543 = !DILocalVariable(name: "data", arg: 2, scope: !10538, file: !114, line: 660, type: !257)
!10544 = !DILocation(line: 660, column: 62, scope: !10538)
!10545 = !DILocation(line: 662, column: 21, scope: !10538)
!10546 = !DILocation(line: 662, column: 2, scope: !10538)
!10547 = !DILocation(line: 662, column: 7, scope: !10538)
!10548 = !DILocation(line: 662, column: 19, scope: !10538)
!10549 = !DILocation(line: 663, column: 1, scope: !10538)
!10550 = distinct !DISubprogram(name: "mmc_add_disk", scope: !3, file: !3, line: 2665, type: !10551, scopeLine: 2666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10551 = !DISubroutineType(types: !10552)
!10552 = !{!324, !5408}
!10553 = !DILocalVariable(name: "md", arg: 1, scope: !10550, file: !3, line: 2665, type: !5408)
!10554 = !DILocation(line: 2665, column: 46, scope: !10550)
!10555 = !DILocalVariable(name: "ret", scope: !10550, file: !3, line: 2667, type: !324)
!10556 = !DILocation(line: 2667, column: 6, scope: !10550)
!10557 = !DILocalVariable(name: "card", scope: !10550, file: !3, line: 2668, type: !262)
!10558 = !DILocation(line: 2668, column: 19, scope: !10550)
!10559 = !DILocation(line: 2668, column: 26, scope: !10550)
!10560 = !DILocation(line: 2668, column: 30, scope: !10550)
!10561 = !DILocation(line: 2668, column: 36, scope: !10550)
!10562 = !DILocation(line: 2670, column: 18, scope: !10550)
!10563 = !DILocation(line: 2670, column: 22, scope: !10550)
!10564 = !DILocation(line: 2670, column: 30, scope: !10550)
!10565 = !DILocation(line: 2670, column: 34, scope: !10550)
!10566 = !DILocation(line: 2670, column: 2, scope: !10550)
!10567 = !DILocation(line: 2671, column: 2, scope: !10550)
!10568 = !DILocation(line: 2671, column: 6, scope: !10550)
!10569 = !DILocation(line: 2671, column: 15, scope: !10550)
!10570 = !DILocation(line: 2671, column: 20, scope: !10550)
!10571 = !DILocation(line: 2672, column: 2, scope: !10550)
!10572 = !DILocation(line: 2672, column: 6, scope: !10550)
!10573 = !DILocation(line: 2672, column: 15, scope: !10550)
!10574 = !DILocation(line: 2672, column: 21, scope: !10550)
!10575 = !DILocation(line: 2673, column: 2, scope: !10550)
!10576 = !DILocation(line: 2673, column: 2, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 2673, column: 2)
!10578 = !DILocation(line: 2674, column: 2, scope: !10550)
!10579 = !DILocation(line: 2674, column: 6, scope: !10550)
!10580 = !DILocation(line: 2674, column: 15, scope: !10550)
!10581 = !DILocation(line: 2674, column: 20, scope: !10550)
!10582 = !DILocation(line: 2674, column: 25, scope: !10550)
!10583 = !DILocation(line: 2675, column: 2, scope: !10550)
!10584 = !DILocation(line: 2675, column: 6, scope: !10550)
!10585 = !DILocation(line: 2675, column: 15, scope: !10550)
!10586 = !DILocation(line: 2675, column: 20, scope: !10550)
!10587 = !DILocation(line: 2675, column: 25, scope: !10550)
!10588 = !DILocation(line: 2676, column: 27, scope: !10550)
!10589 = !DILocation(line: 2676, column: 51, scope: !10550)
!10590 = !DILocation(line: 2676, column: 55, scope: !10550)
!10591 = !DILocation(line: 2676, column: 8, scope: !10550)
!10592 = !DILocation(line: 2676, column: 6, scope: !10550)
!10593 = !DILocation(line: 2677, column: 6, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 2677, column: 6)
!10595 = !DILocation(line: 2677, column: 6, scope: !10550)
!10596 = !DILocation(line: 2678, column: 3, scope: !10594)
!10597 = !DILocation(line: 2680, column: 7, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 2680, column: 6)
!10599 = !DILocation(line: 2680, column: 11, scope: !10598)
!10600 = !DILocation(line: 2680, column: 21, scope: !10598)
!10601 = !DILocation(line: 2680, column: 47, scope: !10598)
!10602 = !DILocation(line: 2681, column: 7, scope: !10598)
!10603 = !DILocation(line: 2681, column: 13, scope: !10598)
!10604 = !DILocation(line: 2681, column: 21, scope: !10598)
!10605 = !DILocation(line: 2680, column: 6, scope: !10550)
!10606 = !DILocalVariable(name: "mode", scope: !10607, file: !3, line: 2682, type: !380)
!10607 = distinct !DILexicalBlock(scope: !10598, file: !3, line: 2681, column: 39)
!10608 = !DILocation(line: 2682, column: 11, scope: !10607)
!10609 = !DILocation(line: 2684, column: 7, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 2684, column: 7)
!10611 = !DILocation(line: 2684, column: 13, scope: !10610)
!10612 = !DILocation(line: 2684, column: 21, scope: !10610)
!10613 = !DILocation(line: 2684, column: 34, scope: !10610)
!10614 = !DILocation(line: 2684, column: 7, scope: !10607)
!10615 = !DILocation(line: 2685, column: 9, scope: !10610)
!10616 = !DILocation(line: 2685, column: 4, scope: !10610)
!10617 = !DILocation(line: 2687, column: 9, scope: !10610)
!10618 = !DILocation(line: 2689, column: 3, scope: !10607)
!10619 = !DILocation(line: 2689, column: 7, scope: !10607)
!10620 = !DILocation(line: 2689, column: 21, scope: !10607)
!10621 = !DILocation(line: 2689, column: 26, scope: !10607)
!10622 = !DILocation(line: 2690, column: 3, scope: !10607)
!10623 = !DILocation(line: 2690, column: 7, scope: !10607)
!10624 = !DILocation(line: 2690, column: 21, scope: !10607)
!10625 = !DILocation(line: 2690, column: 27, scope: !10607)
!10626 = !DILocation(line: 2691, column: 3, scope: !10607)
!10627 = !DILocation(line: 2691, column: 3, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 2691, column: 3)
!10629 = !DILocation(line: 2692, column: 33, scope: !10607)
!10630 = !DILocation(line: 2692, column: 3, scope: !10607)
!10631 = !DILocation(line: 2692, column: 7, scope: !10607)
!10632 = !DILocation(line: 2692, column: 21, scope: !10607)
!10633 = !DILocation(line: 2692, column: 26, scope: !10607)
!10634 = !DILocation(line: 2692, column: 31, scope: !10607)
!10635 = !DILocation(line: 2693, column: 3, scope: !10607)
!10636 = !DILocation(line: 2693, column: 7, scope: !10607)
!10637 = !DILocation(line: 2693, column: 21, scope: !10607)
!10638 = !DILocation(line: 2693, column: 26, scope: !10607)
!10639 = !DILocation(line: 2693, column: 31, scope: !10607)
!10640 = !DILocation(line: 2695, column: 28, scope: !10607)
!10641 = !DILocation(line: 2696, column: 6, scope: !10607)
!10642 = !DILocation(line: 2696, column: 10, scope: !10607)
!10643 = !DILocation(line: 2695, column: 9, scope: !10607)
!10644 = !DILocation(line: 2695, column: 7, scope: !10607)
!10645 = !DILocation(line: 2697, column: 7, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 2697, column: 7)
!10647 = !DILocation(line: 2697, column: 7, scope: !10607)
!10648 = !DILocation(line: 2698, column: 4, scope: !10646)
!10649 = !DILocation(line: 2699, column: 2, scope: !10607)
!10650 = !DILocation(line: 2700, column: 9, scope: !10550)
!10651 = !DILocation(line: 2700, column: 2, scope: !10550)
!10652 = !DILabel(scope: !10550, name: "power_ro_lock_fail", file: !3, line: 2702)
!10653 = !DILocation(line: 2702, column: 1, scope: !10550)
!10654 = !DILocation(line: 2703, column: 21, scope: !10550)
!10655 = !DILocation(line: 2703, column: 45, scope: !10550)
!10656 = !DILocation(line: 2703, column: 49, scope: !10550)
!10657 = !DILocation(line: 2703, column: 2, scope: !10550)
!10658 = !DILabel(scope: !10550, name: "force_ro_fail", file: !3, line: 2704)
!10659 = !DILocation(line: 2704, column: 1, scope: !10550)
!10660 = !DILocation(line: 2705, column: 14, scope: !10550)
!10661 = !DILocation(line: 2705, column: 18, scope: !10550)
!10662 = !DILocation(line: 2705, column: 2, scope: !10550)
!10663 = !DILocation(line: 2707, column: 9, scope: !10550)
!10664 = !DILocation(line: 2707, column: 2, scope: !10550)
!10665 = !DILocation(line: 2708, column: 1, scope: !10550)
!10666 = distinct !DISubprogram(name: "mmc_blk_add_debugfs", scope: !3, file: !3, line: 2861, type: !10438, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10667 = !DILocalVariable(name: "card", arg: 1, scope: !10666, file: !3, line: 2861, type: !262)
!10668 = !DILocation(line: 2861, column: 49, scope: !10666)
!10669 = !DILocalVariable(name: "md", arg: 2, scope: !10666, file: !3, line: 2861, type: !5408)
!10670 = !DILocation(line: 2861, column: 76, scope: !10666)
!10671 = !DILocation(line: 2863, column: 2, scope: !10666)
!10672 = distinct !DISubprogram(name: "pm_runtime_use_autosuspend", scope: !10673, file: !10673, line: 537, type: !4509, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10673 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!10674 = !DILocalVariable(name: "dev", arg: 1, scope: !10672, file: !10673, line: 537, type: !272)
!10675 = !DILocation(line: 537, column: 62, scope: !10672)
!10676 = !DILocation(line: 539, column: 31, scope: !10672)
!10677 = !DILocation(line: 539, column: 2, scope: !10672)
!10678 = !DILocation(line: 540, column: 1, scope: !10672)
!10679 = distinct !DISubprogram(name: "pm_runtime_set_active", scope: !10673, file: !10673, line: 495, type: !4518, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10680 = !DILocalVariable(name: "dev", arg: 1, scope: !10679, file: !10673, line: 495, type: !272)
!10681 = !DILocation(line: 495, column: 56, scope: !10679)
!10682 = !DILocation(line: 497, column: 33, scope: !10679)
!10683 = !DILocation(line: 497, column: 9, scope: !10679)
!10684 = !DILocation(line: 497, column: 2, scope: !10679)
!10685 = distinct !DISubprogram(name: "mmc_blk_remove_parts", scope: !3, file: !3, line: 2644, type: !10686, scopeLine: 2646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10686 = !DISubroutineType(types: !10687)
!10687 = !{null, !262, !5408}
!10688 = !DILocalVariable(name: "card", arg: 1, scope: !10685, file: !3, line: 2644, type: !262)
!10689 = !DILocation(line: 2644, column: 51, scope: !10685)
!10690 = !DILocalVariable(name: "md", arg: 2, scope: !10685, file: !3, line: 2645, type: !5408)
!10691 = !DILocation(line: 2645, column: 27, scope: !10685)
!10692 = !DILocalVariable(name: "pos", scope: !10685, file: !3, line: 2647, type: !288)
!10693 = !DILocation(line: 2647, column: 20, scope: !10685)
!10694 = !DILocalVariable(name: "q", scope: !10685, file: !3, line: 2647, type: !288)
!10695 = !DILocation(line: 2647, column: 26, scope: !10685)
!10696 = !DILocalVariable(name: "part_md", scope: !10685, file: !3, line: 2648, type: !5408)
!10697 = !DILocation(line: 2648, column: 23, scope: !10685)
!10698 = !DILocalVariable(name: "rpmb", scope: !10685, file: !3, line: 2649, type: !5501)
!10699 = !DILocation(line: 2649, column: 24, scope: !10685)
!10700 = !DILocation(line: 2652, column: 2, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2652, column: 2)
!10702 = !DILocation(line: 2652, column: 2, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 2652, column: 2)
!10704 = !DILocalVariable(name: "__mptr", scope: !10705, file: !3, line: 2653, type: !257)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2653, column: 10)
!10706 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 2652, column: 41)
!10707 = !DILocation(line: 2653, column: 10, scope: !10705)
!10708 = !DILocation(line: 2653, column: 10, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 2653, column: 10)
!10710 = !DILocation(line: 2653, column: 8, scope: !10706)
!10711 = !DILocation(line: 2654, column: 12, scope: !10706)
!10712 = !DILocation(line: 2654, column: 3, scope: !10706)
!10713 = !DILocation(line: 2655, column: 28, scope: !10706)
!10714 = !DILocation(line: 2655, column: 3, scope: !10706)
!10715 = !DILocation(line: 2656, column: 2, scope: !10706)
!10716 = distinct !{!10716, !10700, !10717}
!10717 = !DILocation(line: 2656, column: 2, scope: !10701)
!10718 = !DILocation(line: 2658, column: 2, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2658, column: 2)
!10720 = !DILocation(line: 2658, column: 2, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 2658, column: 2)
!10722 = !DILocalVariable(name: "__mptr", scope: !10723, file: !3, line: 2659, type: !257)
!10723 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 2659, column: 13)
!10724 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 2658, column: 40)
!10725 = !DILocation(line: 2659, column: 13, scope: !10723)
!10726 = !DILocation(line: 2659, column: 13, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 2659, column: 13)
!10728 = !DILocation(line: 2659, column: 11, scope: !10724)
!10729 = !DILocation(line: 2660, column: 12, scope: !10724)
!10730 = !DILocation(line: 2660, column: 3, scope: !10724)
!10731 = !DILocation(line: 2661, column: 22, scope: !10724)
!10732 = !DILocation(line: 2661, column: 3, scope: !10724)
!10733 = !DILocation(line: 2662, column: 2, scope: !10724)
!10734 = distinct !{!10734, !10718, !10735}
!10735 = !DILocation(line: 2662, column: 2, scope: !10719)
!10736 = !DILocation(line: 2663, column: 1, scope: !10685)
!10737 = distinct !DISubprogram(name: "mmc_blk_remove_req", scope: !3, file: !3, line: 2619, type: !10738, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10738 = !DISubroutineType(types: !10739)
!10739 = !{null, !5408}
!10740 = !DILocalVariable(name: "md", arg: 1, scope: !10737, file: !3, line: 2619, type: !5408)
!10741 = !DILocation(line: 2619, column: 53, scope: !10737)
!10742 = !DILocalVariable(name: "card", scope: !10737, file: !3, line: 2621, type: !262)
!10743 = !DILocation(line: 2621, column: 19, scope: !10737)
!10744 = !DILocation(line: 2623, column: 6, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 2623, column: 6)
!10746 = !DILocation(line: 2623, column: 6, scope: !10737)
!10747 = !DILocation(line: 2629, column: 10, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 2623, column: 10)
!10749 = !DILocation(line: 2629, column: 14, scope: !10748)
!10750 = !DILocation(line: 2629, column: 20, scope: !10748)
!10751 = !DILocation(line: 2629, column: 8, scope: !10748)
!10752 = !DILocation(line: 2630, column: 7, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 2630, column: 7)
!10754 = !DILocation(line: 2630, column: 11, scope: !10753)
!10755 = !DILocation(line: 2630, column: 17, scope: !10753)
!10756 = !DILocation(line: 2630, column: 23, scope: !10753)
!10757 = !DILocation(line: 2630, column: 7, scope: !10748)
!10758 = !DILocation(line: 2631, column: 23, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10753, file: !3, line: 2630, column: 38)
!10760 = !DILocation(line: 2631, column: 47, scope: !10759)
!10761 = !DILocation(line: 2631, column: 51, scope: !10759)
!10762 = !DILocation(line: 2631, column: 4, scope: !10759)
!10763 = !DILocation(line: 2632, column: 9, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 2632, column: 8)
!10765 = !DILocation(line: 2632, column: 13, scope: !10764)
!10766 = !DILocation(line: 2632, column: 23, scope: !10764)
!10767 = !DILocation(line: 2632, column: 49, scope: !10764)
!10768 = !DILocation(line: 2633, column: 6, scope: !10764)
!10769 = !DILocation(line: 2633, column: 12, scope: !10764)
!10770 = !DILocation(line: 2633, column: 20, scope: !10764)
!10771 = !DILocation(line: 2632, column: 8, scope: !10759)
!10772 = !DILocation(line: 2634, column: 24, scope: !10764)
!10773 = !DILocation(line: 2635, column: 7, scope: !10764)
!10774 = !DILocation(line: 2635, column: 11, scope: !10764)
!10775 = !DILocation(line: 2634, column: 5, scope: !10764)
!10776 = !DILocation(line: 2637, column: 16, scope: !10759)
!10777 = !DILocation(line: 2637, column: 20, scope: !10759)
!10778 = !DILocation(line: 2637, column: 4, scope: !10759)
!10779 = !DILocation(line: 2638, column: 3, scope: !10759)
!10780 = !DILocation(line: 2639, column: 22, scope: !10748)
!10781 = !DILocation(line: 2639, column: 26, scope: !10748)
!10782 = !DILocation(line: 2639, column: 3, scope: !10748)
!10783 = !DILocation(line: 2640, column: 15, scope: !10748)
!10784 = !DILocation(line: 2640, column: 3, scope: !10748)
!10785 = !DILocation(line: 2641, column: 2, scope: !10748)
!10786 = !DILocation(line: 2642, column: 1, scope: !10737)
!10787 = distinct !DISubprogram(name: "add_quirk", scope: !5627, file: !5627, line: 137, type: !5639, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10788 = !DILocalVariable(name: "card", arg: 1, scope: !10787, file: !5627, line: 137, type: !262)
!10789 = !DILocation(line: 137, column: 62, scope: !10787)
!10790 = !DILocalVariable(name: "data", arg: 2, scope: !10787, file: !5627, line: 137, type: !324)
!10791 = !DILocation(line: 137, column: 72, scope: !10787)
!10792 = !DILocation(line: 139, column: 18, scope: !10787)
!10793 = !DILocation(line: 139, column: 2, scope: !10787)
!10794 = !DILocation(line: 139, column: 8, scope: !10787)
!10795 = !DILocation(line: 139, column: 15, scope: !10787)
!10796 = !DILocation(line: 140, column: 1, scope: !10787)
!10797 = distinct !DISubprogram(name: "add_quirk_mmc", scope: !5627, file: !5627, line: 156, type: !5639, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10798 = !DILocalVariable(name: "card", arg: 1, scope: !10797, file: !5627, line: 156, type: !262)
!10799 = !DILocation(line: 156, column: 66, scope: !10797)
!10800 = !DILocalVariable(name: "data", arg: 2, scope: !10797, file: !5627, line: 156, type: !324)
!10801 = !DILocation(line: 156, column: 76, scope: !10797)
!10802 = !DILocation(line: 158, column: 6, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10797, file: !5627, line: 158, column: 6)
!10804 = !DILocation(line: 158, column: 6, scope: !10797)
!10805 = !DILocation(line: 159, column: 19, scope: !10803)
!10806 = !DILocation(line: 159, column: 3, scope: !10803)
!10807 = !DILocation(line: 159, column: 9, scope: !10803)
!10808 = !DILocation(line: 159, column: 16, scope: !10803)
!10809 = !DILocation(line: 160, column: 1, scope: !10797)
!10810 = distinct !DISubprogram(name: "add_quirk_sd", scope: !5627, file: !5627, line: 172, type: !5639, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!10811 = !DILocalVariable(name: "card", arg: 1, scope: !10810, file: !5627, line: 172, type: !262)
!10812 = !DILocation(line: 172, column: 65, scope: !10810)
!10813 = !DILocalVariable(name: "data", arg: 2, scope: !10810, file: !5627, line: 172, type: !324)
!10814 = !DILocation(line: 172, column: 75, scope: !10810)
!10815 = !DILocation(line: 174, column: 6, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10810, file: !5627, line: 174, column: 6)
!10817 = !DILocation(line: 174, column: 6, scope: !10810)
!10818 = !DILocation(line: 175, column: 19, scope: !10816)
!10819 = !DILocation(line: 175, column: 3, scope: !10816)
!10820 = !DILocation(line: 175, column: 9, scope: !10816)
!10821 = !DILocation(line: 175, column: 16, scope: !10816)
!10822 = !DILocation(line: 176, column: 1, scope: !10810)
!10823 = !DILocalVariable(name: "card", arg: 1, scope: !5646, file: !3, line: 2252, type: !262)
!10824 = !DILocation(line: 2252, column: 64, scope: !5646)
!10825 = !DILocalVariable(name: "parent", arg: 2, scope: !5646, file: !3, line: 2253, type: !272)
!10826 = !DILocation(line: 2253, column: 27, scope: !5646)
!10827 = !DILocalVariable(name: "size", arg: 3, scope: !5646, file: !3, line: 2254, type: !948)
!10828 = !DILocation(line: 2254, column: 21, scope: !5646)
!10829 = !DILocalVariable(name: "default_ro", arg: 4, scope: !5646, file: !3, line: 2255, type: !555)
!10830 = !DILocation(line: 2255, column: 17, scope: !5646)
!10831 = !DILocalVariable(name: "subname", arg: 5, scope: !5646, file: !3, line: 2256, type: !280)
!10832 = !DILocation(line: 2256, column: 24, scope: !5646)
!10833 = !DILocalVariable(name: "area_type", arg: 6, scope: !5646, file: !3, line: 2257, type: !324)
!10834 = !DILocation(line: 2257, column: 16, scope: !5646)
!10835 = !DILocalVariable(name: "md", scope: !5646, file: !3, line: 2259, type: !5408)
!10836 = !DILocation(line: 2259, column: 23, scope: !5646)
!10837 = !DILocalVariable(name: "devidx", scope: !5646, file: !3, line: 2260, type: !324)
!10838 = !DILocation(line: 2260, column: 6, scope: !5646)
!10839 = !DILocalVariable(name: "ret", scope: !5646, file: !3, line: 2260, type: !324)
!10840 = !DILocation(line: 2260, column: 14, scope: !5646)
!10841 = !DILocation(line: 2262, column: 11, scope: !5646)
!10842 = !DILocation(line: 2262, column: 9, scope: !5646)
!10843 = !DILocation(line: 2263, column: 6, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2263, column: 6)
!10845 = !DILocation(line: 2263, column: 13, scope: !10844)
!10846 = !DILocation(line: 2263, column: 6, scope: !5646)
!10847 = !DILocation(line: 2271, column: 7, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 2271, column: 7)
!10849 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 2263, column: 18)
!10850 = !DILocation(line: 2271, column: 14, scope: !10848)
!10851 = !DILocation(line: 2271, column: 7, scope: !10849)
!10852 = !DILocation(line: 2272, column: 4, scope: !10848)
!10853 = !DILocation(line: 2275, column: 18, scope: !10849)
!10854 = !DILocation(line: 2275, column: 10, scope: !10849)
!10855 = !DILocation(line: 2275, column: 3, scope: !10849)
!10856 = !DILocation(line: 2278, column: 7, scope: !5646)
!10857 = !DILocation(line: 2278, column: 5, scope: !5646)
!10858 = !DILocation(line: 2279, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2279, column: 6)
!10860 = !DILocation(line: 2279, column: 6, scope: !5646)
!10861 = !DILocation(line: 2280, column: 7, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 2279, column: 11)
!10863 = !DILocation(line: 2281, column: 3, scope: !10862)
!10864 = !DILocation(line: 2284, column: 18, scope: !5646)
!10865 = !DILocation(line: 2284, column: 2, scope: !5646)
!10866 = !DILocation(line: 2284, column: 6, scope: !5646)
!10867 = !DILocation(line: 2284, column: 16, scope: !5646)
!10868 = !DILocation(line: 2290, column: 35, scope: !5646)
!10869 = !DILocation(line: 2290, column: 18, scope: !5646)
!10870 = !DILocation(line: 2290, column: 2, scope: !5646)
!10871 = !DILocation(line: 2290, column: 6, scope: !5646)
!10872 = !DILocation(line: 2290, column: 16, scope: !5646)
!10873 = !DILocalVariable(name: "__name", scope: !10874, file: !3, line: 2292, type: !280)
!10874 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2292, column: 13)
!10875 = !DILocation(line: 2292, column: 13, scope: !10874)
!10876 = !DILocalVariable(name: "__disk", scope: !10874, file: !3, line: 2292, type: !2099)
!10877 = !DILocation(line: 2292, column: 13, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 2292, column: 13)
!10879 = !DILocation(line: 2292, column: 13, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 2292, column: 13)
!10881 = !DILocation(line: 2292, column: 2, scope: !5646)
!10882 = !DILocation(line: 2292, column: 6, scope: !5646)
!10883 = !DILocation(line: 2292, column: 11, scope: !5646)
!10884 = !DILocation(line: 2293, column: 6, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2293, column: 6)
!10886 = !DILocation(line: 2293, column: 10, scope: !10885)
!10887 = !DILocation(line: 2293, column: 15, scope: !10885)
!10888 = !DILocation(line: 2293, column: 6, scope: !5646)
!10889 = !DILocation(line: 2294, column: 7, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10885, file: !3, line: 2293, column: 24)
!10891 = !DILocation(line: 2295, column: 3, scope: !10890)
!10892 = !DILocation(line: 2298, column: 18, scope: !5646)
!10893 = !DILocation(line: 2298, column: 22, scope: !5646)
!10894 = !DILocation(line: 2298, column: 2, scope: !5646)
!10895 = !DILocation(line: 2299, column: 18, scope: !5646)
!10896 = !DILocation(line: 2299, column: 22, scope: !5646)
!10897 = !DILocation(line: 2299, column: 2, scope: !5646)
!10898 = !DILocation(line: 2300, column: 2, scope: !5646)
!10899 = !DILocation(line: 2300, column: 6, scope: !5646)
!10900 = !DILocation(line: 2300, column: 12, scope: !5646)
!10901 = !DILocation(line: 2302, column: 24, scope: !5646)
!10902 = !DILocation(line: 2302, column: 28, scope: !5646)
!10903 = !DILocation(line: 2302, column: 35, scope: !5646)
!10904 = !DILocation(line: 2302, column: 8, scope: !5646)
!10905 = !DILocation(line: 2302, column: 6, scope: !5646)
!10906 = !DILocation(line: 2303, column: 6, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2303, column: 6)
!10908 = !DILocation(line: 2303, column: 6, scope: !5646)
!10909 = !DILocation(line: 2304, column: 3, scope: !10907)
!10910 = !DILocation(line: 2306, column: 22, scope: !5646)
!10911 = !DILocation(line: 2306, column: 2, scope: !5646)
!10912 = !DILocation(line: 2306, column: 6, scope: !5646)
!10913 = !DILocation(line: 2306, column: 12, scope: !5646)
!10914 = !DILocation(line: 2306, column: 20, scope: !5646)
!10915 = !DILocation(line: 2314, column: 21, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2314, column: 6)
!10917 = !DILocation(line: 2314, column: 25, scope: !10916)
!10918 = !DILocation(line: 2314, column: 31, scope: !10916)
!10919 = !DILocation(line: 2314, column: 7, scope: !10916)
!10920 = !DILocation(line: 2314, column: 6, scope: !5646)
!10921 = !DILocation(line: 2315, column: 22, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 2314, column: 39)
!10923 = !DILocation(line: 2315, column: 26, scope: !10922)
!10924 = !DILocation(line: 2315, column: 3, scope: !10922)
!10925 = !DILocation(line: 2316, column: 7, scope: !10922)
!10926 = !DILocation(line: 2317, column: 3, scope: !10922)
!10927 = !DILocation(line: 2320, column: 2, scope: !5646)
!10928 = !DILocation(line: 2320, column: 6, scope: !5646)
!10929 = !DILocation(line: 2320, column: 12, scope: !5646)
!10930 = !DILocation(line: 2320, column: 18, scope: !5646)
!10931 = !DILocation(line: 2321, column: 26, scope: !5646)
!10932 = !DILocation(line: 2321, column: 35, scope: !5646)
!10933 = !DILocation(line: 2321, column: 33, scope: !5646)
!10934 = !DILocation(line: 2321, column: 2, scope: !5646)
!10935 = !DILocation(line: 2321, column: 6, scope: !5646)
!10936 = !DILocation(line: 2321, column: 12, scope: !5646)
!10937 = !DILocation(line: 2321, column: 24, scope: !5646)
!10938 = !DILocation(line: 2322, column: 2, scope: !5646)
!10939 = !DILocation(line: 2322, column: 6, scope: !5646)
!10940 = !DILocation(line: 2322, column: 12, scope: !5646)
!10941 = !DILocation(line: 2322, column: 17, scope: !5646)
!10942 = !DILocation(line: 2323, column: 27, scope: !5646)
!10943 = !DILocation(line: 2323, column: 2, scope: !5646)
!10944 = !DILocation(line: 2323, column: 6, scope: !5646)
!10945 = !DILocation(line: 2323, column: 12, scope: !5646)
!10946 = !DILocation(line: 2323, column: 25, scope: !5646)
!10947 = !DILocation(line: 2324, column: 20, scope: !5646)
!10948 = !DILocation(line: 2324, column: 24, scope: !5646)
!10949 = !DILocation(line: 2324, column: 30, scope: !5646)
!10950 = !DILocation(line: 2324, column: 2, scope: !5646)
!10951 = !DILocation(line: 2324, column: 6, scope: !5646)
!10952 = !DILocation(line: 2324, column: 12, scope: !5646)
!10953 = !DILocation(line: 2324, column: 18, scope: !5646)
!10954 = !DILocation(line: 2325, column: 15, scope: !5646)
!10955 = !DILocation(line: 2325, column: 2, scope: !5646)
!10956 = !DILocation(line: 2325, column: 6, scope: !5646)
!10957 = !DILocation(line: 2325, column: 13, scope: !5646)
!10958 = !DILocation(line: 2326, column: 14, scope: !5646)
!10959 = !DILocation(line: 2326, column: 18, scope: !5646)
!10960 = !DILocation(line: 2326, column: 24, scope: !5646)
!10961 = !DILocation(line: 2326, column: 28, scope: !5646)
!10962 = !DILocation(line: 2326, column: 38, scope: !5646)
!10963 = !DILocation(line: 2326, column: 41, scope: !5646)
!10964 = !DILocation(line: 2326, column: 2, scope: !5646)
!10965 = !DILocation(line: 2327, column: 2, scope: !5646)
!10966 = !DILocation(line: 2327, column: 6, scope: !5646)
!10967 = !DILocation(line: 2327, column: 12, scope: !5646)
!10968 = !DILocation(line: 2327, column: 18, scope: !5646)
!10969 = !DILocation(line: 2328, column: 6, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2328, column: 6)
!10971 = !DILocation(line: 2328, column: 16, scope: !10970)
!10972 = !DILocation(line: 2328, column: 6, scope: !5646)
!10973 = !DILocation(line: 2329, column: 3, scope: !10970)
!10974 = !DILocation(line: 2329, column: 7, scope: !10970)
!10975 = !DILocation(line: 2329, column: 13, scope: !10970)
!10976 = !DILocation(line: 2329, column: 19, scope: !10970)
!10977 = !DILocation(line: 2344, column: 11, scope: !5646)
!10978 = !DILocation(line: 2344, column: 15, scope: !5646)
!10979 = !DILocation(line: 2344, column: 21, scope: !5646)
!10980 = !DILocation(line: 2345, column: 18, scope: !5646)
!10981 = !DILocation(line: 2345, column: 24, scope: !5646)
!10982 = !DILocation(line: 2345, column: 30, scope: !5646)
!10983 = !DILocation(line: 2345, column: 37, scope: !5646)
!10984 = !DILocation(line: 2345, column: 47, scope: !5646)
!10985 = !DILocation(line: 2344, column: 2, scope: !5646)
!10986 = !DILocation(line: 2347, column: 15, scope: !5646)
!10987 = !DILocation(line: 2347, column: 19, scope: !5646)
!10988 = !DILocation(line: 2347, column: 25, scope: !5646)
!10989 = !DILocation(line: 2347, column: 2, scope: !5646)
!10990 = !DILocation(line: 2349, column: 21, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2349, column: 6)
!10992 = !DILocation(line: 2349, column: 27, scope: !10991)
!10993 = !DILocation(line: 2349, column: 6, scope: !10991)
!10994 = !DILocation(line: 2349, column: 6, scope: !5646)
!10995 = !DILocation(line: 2350, column: 8, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 2350, column: 7)
!10997 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 2349, column: 34)
!10998 = !DILocation(line: 2350, column: 27, scope: !10996)
!10999 = !DILocation(line: 2351, column: 8, scope: !10996)
!11000 = !DILocation(line: 2351, column: 14, scope: !10996)
!11001 = !DILocation(line: 2351, column: 18, scope: !10996)
!11002 = !DILocation(line: 2351, column: 27, scope: !10996)
!11003 = !DILocation(line: 2351, column: 46, scope: !10996)
!11004 = !DILocation(line: 2352, column: 8, scope: !10996)
!11005 = !DILocation(line: 2352, column: 26, scope: !10996)
!11006 = !DILocation(line: 2353, column: 8, scope: !10996)
!11007 = !DILocation(line: 2353, column: 14, scope: !10996)
!11008 = !DILocation(line: 2353, column: 18, scope: !10996)
!11009 = !DILocation(line: 2353, column: 23, scope: !10996)
!11010 = !DILocation(line: 2350, column: 7, scope: !10997)
!11011 = !DILocation(line: 2354, column: 4, scope: !10996)
!11012 = !DILocation(line: 2354, column: 8, scope: !10996)
!11013 = !DILocation(line: 2354, column: 14, scope: !10996)
!11014 = !DILocation(line: 2355, column: 2, scope: !10997)
!11015 = !DILocation(line: 2357, column: 6, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 2357, column: 6)
!11017 = !DILocation(line: 2357, column: 25, scope: !11016)
!11018 = !DILocation(line: 2358, column: 6, scope: !11016)
!11019 = !DILocation(line: 2358, column: 10, scope: !11016)
!11020 = !DILocation(line: 2358, column: 16, scope: !11016)
!11021 = !DILocation(line: 2358, column: 32, scope: !11016)
!11022 = !DILocation(line: 2359, column: 8, scope: !11016)
!11023 = !DILocation(line: 2359, column: 14, scope: !11016)
!11024 = !DILocation(line: 2359, column: 22, scope: !11016)
!11025 = !DILocation(line: 2359, column: 32, scope: !11016)
!11026 = !DILocation(line: 2359, column: 59, scope: !11016)
!11027 = !DILocation(line: 2360, column: 7, scope: !11016)
!11028 = !DILocation(line: 2360, column: 13, scope: !11016)
!11029 = !DILocation(line: 2360, column: 21, scope: !11016)
!11030 = !DILocation(line: 2357, column: 6, scope: !5646)
!11031 = !DILocation(line: 2361, column: 3, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 2360, column: 35)
!11033 = !DILocation(line: 2361, column: 7, scope: !11032)
!11034 = !DILocation(line: 2361, column: 13, scope: !11032)
!11035 = !DILocation(line: 2362, column: 25, scope: !11032)
!11036 = !DILocation(line: 2362, column: 29, scope: !11032)
!11037 = !DILocation(line: 2362, column: 35, scope: !11032)
!11038 = !DILocation(line: 2362, column: 3, scope: !11032)
!11039 = !DILocation(line: 2363, column: 2, scope: !11032)
!11040 = !DILocation(line: 2365, column: 9, scope: !5646)
!11041 = !DILocation(line: 2365, column: 2, scope: !5646)
!11042 = !DILabel(scope: !5646, name: "err_putdisk", file: !3, line: 2367)
!11043 = !DILocation(line: 2367, column: 2, scope: !5646)
!11044 = !DILocation(line: 2368, column: 11, scope: !5646)
!11045 = !DILocation(line: 2368, column: 15, scope: !5646)
!11046 = !DILocation(line: 2368, column: 2, scope: !5646)
!11047 = !DILabel(scope: !5646, name: "err_kfree", file: !3, line: 2369)
!11048 = !DILocation(line: 2369, column: 2, scope: !5646)
!11049 = !DILocation(line: 2370, column: 8, scope: !5646)
!11050 = !DILocation(line: 2370, column: 2, scope: !5646)
!11051 = !DILabel(scope: !5646, name: "out", file: !3, line: 2371)
!11052 = !DILocation(line: 2371, column: 2, scope: !5646)
!11053 = !DILocation(line: 2372, column: 2, scope: !5646)
!11054 = !DILocation(line: 2373, column: 17, scope: !5646)
!11055 = !DILocation(line: 2373, column: 9, scope: !5646)
!11056 = !DILocation(line: 2373, column: 2, scope: !5646)
!11057 = !DILocation(line: 2374, column: 1, scope: !5646)
!11058 = distinct !DISubprogram(name: "ERR_PTR", scope: !10405, file: !10405, line: 24, type: !11059, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11059 = !DISubroutineType(types: !11060)
!11060 = !{!257, !184}
!11061 = !DILocalVariable(name: "error", arg: 1, scope: !11058, file: !10405, line: 24, type: !184)
!11062 = !DILocation(line: 24, column: 48, scope: !11058)
!11063 = !DILocation(line: 26, column: 18, scope: !11058)
!11064 = !DILocation(line: 26, column: 9, scope: !11058)
!11065 = !DILocation(line: 26, column: 2, scope: !11058)
!11066 = distinct !DISubprogram(name: "kzalloc", scope: !153, file: !153, line: 662, type: !7579, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11067 = !DILocation(line: 445, column: 72, scope: !7571, inlinedAt: !11068)
!11068 = distinct !DILocation(line: 552, column: 10, scope: !7576, inlinedAt: !11069)
!11069 = distinct !DILocation(line: 664, column: 9, scope: !11066)
!11070 = !DILocation(line: 446, column: 9, scope: !7571, inlinedAt: !11068)
!11071 = !DILocation(line: 446, column: 23, scope: !7571, inlinedAt: !11068)
!11072 = !DILocation(line: 448, column: 8, scope: !7571, inlinedAt: !11068)
!11073 = !DILocation(line: 318, column: 67, scope: !7589, inlinedAt: !11074)
!11074 = distinct !DILocation(line: 553, column: 20, scope: !7576, inlinedAt: !11069)
!11075 = !DILocation(line: 346, column: 58, scope: !7595, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 547, column: 11, scope: !7576, inlinedAt: !11069)
!11077 = !DILocation(line: 472, column: 28, scope: !7601, inlinedAt: !11078)
!11078 = distinct !DILocation(line: 481, column: 9, scope: !7606, inlinedAt: !11079)
!11079 = distinct !DILocation(line: 545, column: 11, scope: !7608, inlinedAt: !11069)
!11080 = !DILocation(line: 472, column: 40, scope: !7601, inlinedAt: !11078)
!11081 = !DILocation(line: 472, column: 60, scope: !7601, inlinedAt: !11078)
!11082 = !DILocation(line: 478, column: 51, scope: !7606, inlinedAt: !11079)
!11083 = !DILocation(line: 478, column: 63, scope: !7606, inlinedAt: !11079)
!11084 = !DILocation(line: 480, column: 15, scope: !7606, inlinedAt: !11079)
!11085 = !DILocation(line: 538, column: 45, scope: !7578, inlinedAt: !11069)
!11086 = !DILocation(line: 538, column: 57, scope: !7578, inlinedAt: !11069)
!11087 = !DILocation(line: 542, column: 16, scope: !7576, inlinedAt: !11069)
!11088 = !DILocalVariable(name: "size", arg: 1, scope: !11066, file: !153, line: 662, type: !386)
!11089 = !DILocation(line: 662, column: 36, scope: !11066)
!11090 = !DILocalVariable(name: "flags", arg: 2, scope: !11066, file: !153, line: 662, type: !861)
!11091 = !DILocation(line: 662, column: 48, scope: !11066)
!11092 = !DILocation(line: 664, column: 17, scope: !11066)
!11093 = !DILocation(line: 664, column: 23, scope: !11066)
!11094 = !DILocation(line: 664, column: 29, scope: !11066)
!11095 = !DILocation(line: 540, column: 27, scope: !7577, inlinedAt: !11069)
!11096 = !DILocation(line: 540, column: 6, scope: !7577, inlinedAt: !11069)
!11097 = !DILocation(line: 540, column: 6, scope: !7578, inlinedAt: !11069)
!11098 = !DILocation(line: 544, column: 7, scope: !7608, inlinedAt: !11069)
!11099 = !DILocation(line: 544, column: 12, scope: !7608, inlinedAt: !11069)
!11100 = !DILocation(line: 544, column: 7, scope: !7576, inlinedAt: !11069)
!11101 = !DILocation(line: 545, column: 25, scope: !7608, inlinedAt: !11069)
!11102 = !DILocation(line: 545, column: 31, scope: !7608, inlinedAt: !11069)
!11103 = !DILocation(line: 480, column: 33, scope: !7606, inlinedAt: !11079)
!11104 = !DILocation(line: 480, column: 23, scope: !7606, inlinedAt: !11079)
!11105 = !DILocation(line: 481, column: 29, scope: !7606, inlinedAt: !11079)
!11106 = !DILocation(line: 481, column: 35, scope: !7606, inlinedAt: !11079)
!11107 = !DILocation(line: 481, column: 42, scope: !7606, inlinedAt: !11079)
!11108 = !DILocation(line: 474, column: 23, scope: !7601, inlinedAt: !11078)
!11109 = !DILocation(line: 474, column: 29, scope: !7601, inlinedAt: !11078)
!11110 = !DILocation(line: 474, column: 36, scope: !7601, inlinedAt: !11078)
!11111 = !DILocation(line: 474, column: 9, scope: !7601, inlinedAt: !11078)
!11112 = !DILocation(line: 545, column: 4, scope: !7608, inlinedAt: !11069)
!11113 = !DILocation(line: 547, column: 25, scope: !7576, inlinedAt: !11069)
!11114 = !DILocation(line: 348, column: 7, scope: !7713, inlinedAt: !11076)
!11115 = !DILocation(line: 348, column: 6, scope: !7595, inlinedAt: !11076)
!11116 = !DILocation(line: 349, column: 3, scope: !7713, inlinedAt: !11076)
!11117 = !DILocation(line: 351, column: 6, scope: !7717, inlinedAt: !11076)
!11118 = !DILocation(line: 351, column: 11, scope: !7717, inlinedAt: !11076)
!11119 = !DILocation(line: 351, column: 6, scope: !7595, inlinedAt: !11076)
!11120 = !DILocation(line: 352, column: 3, scope: !7717, inlinedAt: !11076)
!11121 = !DILocation(line: 354, column: 32, scope: !7722, inlinedAt: !11076)
!11122 = !DILocation(line: 354, column: 37, scope: !7722, inlinedAt: !11076)
!11123 = !DILocation(line: 354, column: 42, scope: !7722, inlinedAt: !11076)
!11124 = !DILocation(line: 354, column: 45, scope: !7722, inlinedAt: !11076)
!11125 = !DILocation(line: 354, column: 50, scope: !7722, inlinedAt: !11076)
!11126 = !DILocation(line: 354, column: 6, scope: !7595, inlinedAt: !11076)
!11127 = !DILocation(line: 355, column: 3, scope: !7722, inlinedAt: !11076)
!11128 = !DILocation(line: 356, column: 32, scope: !7730, inlinedAt: !11076)
!11129 = !DILocation(line: 356, column: 37, scope: !7730, inlinedAt: !11076)
!11130 = !DILocation(line: 356, column: 43, scope: !7730, inlinedAt: !11076)
!11131 = !DILocation(line: 356, column: 46, scope: !7730, inlinedAt: !11076)
!11132 = !DILocation(line: 356, column: 51, scope: !7730, inlinedAt: !11076)
!11133 = !DILocation(line: 356, column: 6, scope: !7595, inlinedAt: !11076)
!11134 = !DILocation(line: 357, column: 3, scope: !7730, inlinedAt: !11076)
!11135 = !DILocation(line: 358, column: 6, scope: !7738, inlinedAt: !11076)
!11136 = !DILocation(line: 358, column: 11, scope: !7738, inlinedAt: !11076)
!11137 = !DILocation(line: 358, column: 6, scope: !7595, inlinedAt: !11076)
!11138 = !DILocation(line: 358, column: 26, scope: !7738, inlinedAt: !11076)
!11139 = !DILocation(line: 359, column: 6, scope: !7743, inlinedAt: !11076)
!11140 = !DILocation(line: 359, column: 11, scope: !7743, inlinedAt: !11076)
!11141 = !DILocation(line: 359, column: 6, scope: !7595, inlinedAt: !11076)
!11142 = !DILocation(line: 359, column: 26, scope: !7743, inlinedAt: !11076)
!11143 = !DILocation(line: 360, column: 6, scope: !7748, inlinedAt: !11076)
!11144 = !DILocation(line: 360, column: 11, scope: !7748, inlinedAt: !11076)
!11145 = !DILocation(line: 360, column: 6, scope: !7595, inlinedAt: !11076)
!11146 = !DILocation(line: 360, column: 26, scope: !7748, inlinedAt: !11076)
!11147 = !DILocation(line: 361, column: 6, scope: !7753, inlinedAt: !11076)
!11148 = !DILocation(line: 361, column: 11, scope: !7753, inlinedAt: !11076)
!11149 = !DILocation(line: 361, column: 6, scope: !7595, inlinedAt: !11076)
!11150 = !DILocation(line: 361, column: 26, scope: !7753, inlinedAt: !11076)
!11151 = !DILocation(line: 362, column: 6, scope: !7758, inlinedAt: !11076)
!11152 = !DILocation(line: 362, column: 11, scope: !7758, inlinedAt: !11076)
!11153 = !DILocation(line: 362, column: 6, scope: !7595, inlinedAt: !11076)
!11154 = !DILocation(line: 362, column: 26, scope: !7758, inlinedAt: !11076)
!11155 = !DILocation(line: 363, column: 6, scope: !7763, inlinedAt: !11076)
!11156 = !DILocation(line: 363, column: 11, scope: !7763, inlinedAt: !11076)
!11157 = !DILocation(line: 363, column: 6, scope: !7595, inlinedAt: !11076)
!11158 = !DILocation(line: 363, column: 26, scope: !7763, inlinedAt: !11076)
!11159 = !DILocation(line: 364, column: 6, scope: !7768, inlinedAt: !11076)
!11160 = !DILocation(line: 364, column: 11, scope: !7768, inlinedAt: !11076)
!11161 = !DILocation(line: 364, column: 6, scope: !7595, inlinedAt: !11076)
!11162 = !DILocation(line: 364, column: 26, scope: !7768, inlinedAt: !11076)
!11163 = !DILocation(line: 365, column: 6, scope: !7773, inlinedAt: !11076)
!11164 = !DILocation(line: 365, column: 11, scope: !7773, inlinedAt: !11076)
!11165 = !DILocation(line: 365, column: 6, scope: !7595, inlinedAt: !11076)
!11166 = !DILocation(line: 365, column: 26, scope: !7773, inlinedAt: !11076)
!11167 = !DILocation(line: 366, column: 6, scope: !7778, inlinedAt: !11076)
!11168 = !DILocation(line: 366, column: 11, scope: !7778, inlinedAt: !11076)
!11169 = !DILocation(line: 366, column: 6, scope: !7595, inlinedAt: !11076)
!11170 = !DILocation(line: 366, column: 26, scope: !7778, inlinedAt: !11076)
!11171 = !DILocation(line: 367, column: 6, scope: !7783, inlinedAt: !11076)
!11172 = !DILocation(line: 367, column: 11, scope: !7783, inlinedAt: !11076)
!11173 = !DILocation(line: 367, column: 6, scope: !7595, inlinedAt: !11076)
!11174 = !DILocation(line: 367, column: 26, scope: !7783, inlinedAt: !11076)
!11175 = !DILocation(line: 368, column: 6, scope: !7788, inlinedAt: !11076)
!11176 = !DILocation(line: 368, column: 11, scope: !7788, inlinedAt: !11076)
!11177 = !DILocation(line: 368, column: 6, scope: !7595, inlinedAt: !11076)
!11178 = !DILocation(line: 368, column: 26, scope: !7788, inlinedAt: !11076)
!11179 = !DILocation(line: 369, column: 6, scope: !7793, inlinedAt: !11076)
!11180 = !DILocation(line: 369, column: 11, scope: !7793, inlinedAt: !11076)
!11181 = !DILocation(line: 369, column: 6, scope: !7595, inlinedAt: !11076)
!11182 = !DILocation(line: 369, column: 26, scope: !7793, inlinedAt: !11076)
!11183 = !DILocation(line: 370, column: 6, scope: !7798, inlinedAt: !11076)
!11184 = !DILocation(line: 370, column: 11, scope: !7798, inlinedAt: !11076)
!11185 = !DILocation(line: 370, column: 6, scope: !7595, inlinedAt: !11076)
!11186 = !DILocation(line: 370, column: 26, scope: !7798, inlinedAt: !11076)
!11187 = !DILocation(line: 371, column: 6, scope: !7803, inlinedAt: !11076)
!11188 = !DILocation(line: 371, column: 11, scope: !7803, inlinedAt: !11076)
!11189 = !DILocation(line: 371, column: 6, scope: !7595, inlinedAt: !11076)
!11190 = !DILocation(line: 371, column: 26, scope: !7803, inlinedAt: !11076)
!11191 = !DILocation(line: 372, column: 6, scope: !7808, inlinedAt: !11076)
!11192 = !DILocation(line: 372, column: 11, scope: !7808, inlinedAt: !11076)
!11193 = !DILocation(line: 372, column: 6, scope: !7595, inlinedAt: !11076)
!11194 = !DILocation(line: 372, column: 26, scope: !7808, inlinedAt: !11076)
!11195 = !DILocation(line: 373, column: 6, scope: !7813, inlinedAt: !11076)
!11196 = !DILocation(line: 373, column: 11, scope: !7813, inlinedAt: !11076)
!11197 = !DILocation(line: 373, column: 6, scope: !7595, inlinedAt: !11076)
!11198 = !DILocation(line: 373, column: 26, scope: !7813, inlinedAt: !11076)
!11199 = !DILocation(line: 374, column: 6, scope: !7818, inlinedAt: !11076)
!11200 = !DILocation(line: 374, column: 11, scope: !7818, inlinedAt: !11076)
!11201 = !DILocation(line: 374, column: 6, scope: !7595, inlinedAt: !11076)
!11202 = !DILocation(line: 374, column: 26, scope: !7818, inlinedAt: !11076)
!11203 = !DILocation(line: 375, column: 6, scope: !7823, inlinedAt: !11076)
!11204 = !DILocation(line: 375, column: 11, scope: !7823, inlinedAt: !11076)
!11205 = !DILocation(line: 375, column: 6, scope: !7595, inlinedAt: !11076)
!11206 = !DILocation(line: 375, column: 27, scope: !7823, inlinedAt: !11076)
!11207 = !DILocation(line: 376, column: 6, scope: !7828, inlinedAt: !11076)
!11208 = !DILocation(line: 376, column: 11, scope: !7828, inlinedAt: !11076)
!11209 = !DILocation(line: 376, column: 6, scope: !7595, inlinedAt: !11076)
!11210 = !DILocation(line: 376, column: 32, scope: !7828, inlinedAt: !11076)
!11211 = !DILocation(line: 377, column: 6, scope: !7833, inlinedAt: !11076)
!11212 = !DILocation(line: 377, column: 11, scope: !7833, inlinedAt: !11076)
!11213 = !DILocation(line: 377, column: 6, scope: !7595, inlinedAt: !11076)
!11214 = !DILocation(line: 377, column: 32, scope: !7833, inlinedAt: !11076)
!11215 = !DILocation(line: 378, column: 6, scope: !7838, inlinedAt: !11076)
!11216 = !DILocation(line: 378, column: 11, scope: !7838, inlinedAt: !11076)
!11217 = !DILocation(line: 378, column: 6, scope: !7595, inlinedAt: !11076)
!11218 = !DILocation(line: 378, column: 32, scope: !7838, inlinedAt: !11076)
!11219 = !DILocation(line: 379, column: 6, scope: !7843, inlinedAt: !11076)
!11220 = !DILocation(line: 379, column: 11, scope: !7843, inlinedAt: !11076)
!11221 = !DILocation(line: 379, column: 6, scope: !7595, inlinedAt: !11076)
!11222 = !DILocation(line: 379, column: 33, scope: !7843, inlinedAt: !11076)
!11223 = !DILocation(line: 380, column: 6, scope: !7848, inlinedAt: !11076)
!11224 = !DILocation(line: 380, column: 11, scope: !7848, inlinedAt: !11076)
!11225 = !DILocation(line: 380, column: 6, scope: !7595, inlinedAt: !11076)
!11226 = !DILocation(line: 380, column: 33, scope: !7848, inlinedAt: !11076)
!11227 = !DILocation(line: 381, column: 6, scope: !7853, inlinedAt: !11076)
!11228 = !DILocation(line: 381, column: 11, scope: !7853, inlinedAt: !11076)
!11229 = !DILocation(line: 381, column: 6, scope: !7595, inlinedAt: !11076)
!11230 = !DILocation(line: 381, column: 33, scope: !7853, inlinedAt: !11076)
!11231 = !DILocation(line: 382, column: 2, scope: !7858, inlinedAt: !11076)
!11232 = !DILocation(line: 382, column: 2, scope: !7862, inlinedAt: !11076)
!11233 = !DILocation(line: 382, column: 2, scope: !7863, inlinedAt: !11076)
!11234 = !DILocation(line: 386, column: 1, scope: !7595, inlinedAt: !11076)
!11235 = !DILocation(line: 547, column: 9, scope: !7576, inlinedAt: !11069)
!11236 = !DILocation(line: 549, column: 8, scope: !7869, inlinedAt: !11069)
!11237 = !DILocation(line: 549, column: 7, scope: !7576, inlinedAt: !11069)
!11238 = !DILocation(line: 550, column: 4, scope: !7869, inlinedAt: !11069)
!11239 = !DILocation(line: 553, column: 33, scope: !7576, inlinedAt: !11069)
!11240 = !DILocation(line: 325, column: 6, scope: !7874, inlinedAt: !11074)
!11241 = !DILocation(line: 325, column: 6, scope: !7589, inlinedAt: !11074)
!11242 = !DILocation(line: 326, column: 3, scope: !7874, inlinedAt: !11074)
!11243 = !DILocation(line: 332, column: 9, scope: !7589, inlinedAt: !11074)
!11244 = !DILocation(line: 332, column: 15, scope: !7589, inlinedAt: !11074)
!11245 = !DILocation(line: 332, column: 2, scope: !7589, inlinedAt: !11074)
!11246 = !DILocation(line: 336, column: 1, scope: !7589, inlinedAt: !11074)
!11247 = !DILocation(line: 553, column: 5, scope: !7576, inlinedAt: !11069)
!11248 = !DILocation(line: 553, column: 41, scope: !7576, inlinedAt: !11069)
!11249 = !DILocation(line: 554, column: 5, scope: !7576, inlinedAt: !11069)
!11250 = !DILocation(line: 554, column: 12, scope: !7576, inlinedAt: !11069)
!11251 = !DILocation(line: 448, column: 31, scope: !7571, inlinedAt: !11068)
!11252 = !DILocation(line: 448, column: 34, scope: !7571, inlinedAt: !11068)
!11253 = !DILocation(line: 448, column: 14, scope: !7571, inlinedAt: !11068)
!11254 = !DILocation(line: 450, column: 22, scope: !7571, inlinedAt: !11068)
!11255 = !DILocation(line: 450, column: 25, scope: !7571, inlinedAt: !11068)
!11256 = !DILocation(line: 450, column: 30, scope: !7571, inlinedAt: !11068)
!11257 = !DILocation(line: 450, column: 36, scope: !7571, inlinedAt: !11068)
!11258 = !DILocation(line: 450, column: 8, scope: !7571, inlinedAt: !11068)
!11259 = !DILocation(line: 450, column: 6, scope: !7571, inlinedAt: !11068)
!11260 = !DILocation(line: 451, column: 9, scope: !7571, inlinedAt: !11068)
!11261 = !DILocation(line: 552, column: 3, scope: !7576, inlinedAt: !11069)
!11262 = !DILocation(line: 557, column: 19, scope: !7578, inlinedAt: !11069)
!11263 = !DILocation(line: 557, column: 25, scope: !7578, inlinedAt: !11069)
!11264 = !DILocation(line: 557, column: 9, scope: !7578, inlinedAt: !11069)
!11265 = !DILocation(line: 557, column: 2, scope: !7578, inlinedAt: !11069)
!11266 = !DILocation(line: 558, column: 1, scope: !7578, inlinedAt: !11069)
!11267 = !DILocation(line: 664, column: 2, scope: !11066)
!11268 = distinct !DISubprogram(name: "mmc_blk_readonly", scope: !3, file: !3, line: 2246, type: !5612, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11269 = !DILocalVariable(name: "card", arg: 1, scope: !11268, file: !3, line: 2246, type: !262)
!11270 = !DILocation(line: 2246, column: 53, scope: !11268)
!11271 = !DILocation(line: 2248, column: 9, scope: !11268)
!11272 = !DILocation(line: 2248, column: 33, scope: !11268)
!11273 = !DILocation(line: 2249, column: 11, scope: !11268)
!11274 = !DILocation(line: 2249, column: 17, scope: !11268)
!11275 = !DILocation(line: 2249, column: 21, scope: !11268)
!11276 = !DILocation(line: 2249, column: 30, scope: !11268)
!11277 = !DILocation(line: 2249, column: 9, scope: !11268)
!11278 = !DILocation(line: 2248, column: 2, scope: !11268)
!11279 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !11280, file: !11280, line: 33, type: !11281, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11280 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!11281 = !DISubroutineType(types: !11282)
!11282 = !{null, !288}
!11283 = !DILocalVariable(name: "list", arg: 1, scope: !11279, file: !11280, line: 33, type: !288)
!11284 = !DILocation(line: 33, column: 53, scope: !11279)
!11285 = !DILocation(line: 35, column: 2, scope: !11279)
!11286 = !DILocation(line: 35, column: 2, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11279, file: !11280, line: 35, column: 2)
!11288 = !DILocation(line: 35, column: 2, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11287, file: !11280, line: 35, column: 2)
!11290 = !DILocation(line: 35, column: 2, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11287, file: !11280, line: 35, column: 2)
!11292 = !DILocation(line: 36, column: 15, scope: !11279)
!11293 = !DILocation(line: 36, column: 2, scope: !11279)
!11294 = !DILocation(line: 36, column: 8, scope: !11279)
!11295 = !DILocation(line: 36, column: 13, scope: !11279)
!11296 = !DILocation(line: 37, column: 1, scope: !11279)
!11297 = distinct !DISubprogram(name: "set_capacity", scope: !2101, file: !2101, line: 333, type: !11298, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{null, !2099, !948}
!11300 = !DILocalVariable(name: "disk", arg: 1, scope: !11297, file: !2101, line: 333, type: !2099)
!11301 = !DILocation(line: 333, column: 49, scope: !11297)
!11302 = !DILocalVariable(name: "size", arg: 2, scope: !11297, file: !2101, line: 333, type: !948)
!11303 = !DILocation(line: 333, column: 64, scope: !11297)
!11304 = !DILocation(line: 335, column: 25, scope: !11297)
!11305 = !DILocation(line: 335, column: 2, scope: !11297)
!11306 = !DILocation(line: 335, column: 8, scope: !11297)
!11307 = !DILocation(line: 335, column: 14, scope: !11297)
!11308 = !DILocation(line: 335, column: 23, scope: !11297)
!11309 = !DILocation(line: 336, column: 1, scope: !11297)
!11310 = distinct !DISubprogram(name: "mmc_host_cmd23", scope: !6136, file: !6136, line: 36, type: !5019, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11311 = !DILocalVariable(name: "host", arg: 1, scope: !11310, file: !6136, line: 36, type: !267)
!11312 = !DILocation(line: 36, column: 51, scope: !11310)
!11313 = !DILocation(line: 38, column: 9, scope: !11310)
!11314 = !DILocation(line: 38, column: 15, scope: !11310)
!11315 = !DILocation(line: 38, column: 20, scope: !11310)
!11316 = !DILocation(line: 38, column: 2, scope: !11310)
!11317 = distinct !DISubprogram(name: "mmc_blk_open", scope: !3, file: !3, line: 308, type: !2198, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11318 = !DILocalVariable(name: "bdev", arg: 1, scope: !11317, file: !3, line: 308, type: !2200)
!11319 = !DILocation(line: 308, column: 46, scope: !11317)
!11320 = !DILocalVariable(name: "mode", arg: 2, scope: !11317, file: !3, line: 308, type: !2303)
!11321 = !DILocation(line: 308, column: 60, scope: !11317)
!11322 = !DILocalVariable(name: "md", scope: !11317, file: !3, line: 310, type: !5408)
!11323 = !DILocation(line: 310, column: 23, scope: !11317)
!11324 = !DILocation(line: 310, column: 40, scope: !11317)
!11325 = !DILocation(line: 310, column: 46, scope: !11317)
!11326 = !DILocation(line: 310, column: 28, scope: !11317)
!11327 = !DILocalVariable(name: "ret", scope: !11317, file: !3, line: 311, type: !324)
!11328 = !DILocation(line: 311, column: 6, scope: !11317)
!11329 = !DILocation(line: 313, column: 2, scope: !11317)
!11330 = !DILocation(line: 314, column: 6, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11317, file: !3, line: 314, column: 6)
!11332 = !DILocation(line: 314, column: 6, scope: !11317)
!11333 = !DILocation(line: 315, column: 7, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 314, column: 10)
!11335 = !DILocation(line: 316, column: 8, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 316, column: 7)
!11337 = !DILocation(line: 316, column: 13, scope: !11336)
!11338 = !DILocation(line: 316, column: 28, scope: !11336)
!11339 = !DILocation(line: 316, column: 31, scope: !11336)
!11340 = !DILocation(line: 316, column: 35, scope: !11336)
!11341 = !DILocation(line: 316, column: 7, scope: !11334)
!11342 = !DILocation(line: 317, column: 16, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 316, column: 46)
!11344 = !DILocation(line: 317, column: 4, scope: !11343)
!11345 = !DILocation(line: 318, column: 8, scope: !11343)
!11346 = !DILocation(line: 319, column: 3, scope: !11343)
!11347 = !DILocation(line: 320, column: 2, scope: !11334)
!11348 = !DILocation(line: 321, column: 2, scope: !11317)
!11349 = !DILocation(line: 323, column: 9, scope: !11317)
!11350 = !DILocation(line: 323, column: 2, scope: !11317)
!11351 = distinct !DISubprogram(name: "mmc_blk_release", scope: !3, file: !3, line: 326, type: !2306, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11352 = !DILocalVariable(name: "disk", arg: 1, scope: !11351, file: !3, line: 326, type: !2099)
!11353 = !DILocation(line: 326, column: 45, scope: !11351)
!11354 = !DILocalVariable(name: "mode", arg: 2, scope: !11351, file: !3, line: 326, type: !2303)
!11355 = !DILocation(line: 326, column: 59, scope: !11351)
!11356 = !DILocalVariable(name: "md", scope: !11351, file: !3, line: 328, type: !5408)
!11357 = !DILocation(line: 328, column: 23, scope: !11351)
!11358 = !DILocation(line: 328, column: 28, scope: !11351)
!11359 = !DILocation(line: 328, column: 34, scope: !11351)
!11360 = !DILocation(line: 330, column: 2, scope: !11351)
!11361 = !DILocation(line: 331, column: 14, scope: !11351)
!11362 = !DILocation(line: 331, column: 2, scope: !11351)
!11363 = !DILocation(line: 332, column: 2, scope: !11351)
!11364 = !DILocation(line: 333, column: 1, scope: !11351)
!11365 = distinct !DISubprogram(name: "mmc_blk_ioctl", scope: !3, file: !3, line: 731, type: !2314, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11366 = !DILocalVariable(name: "bdev", arg: 1, scope: !11365, file: !3, line: 731, type: !2200)
!11367 = !DILocation(line: 731, column: 47, scope: !11365)
!11368 = !DILocalVariable(name: "mode", arg: 2, scope: !11365, file: !3, line: 731, type: !2303)
!11369 = !DILocation(line: 731, column: 61, scope: !11365)
!11370 = !DILocalVariable(name: "cmd", arg: 3, scope: !11365, file: !3, line: 732, type: !7)
!11371 = !DILocation(line: 732, column: 15, scope: !11365)
!11372 = !DILocalVariable(name: "arg", arg: 4, scope: !11365, file: !3, line: 732, type: !389)
!11373 = !DILocation(line: 732, column: 34, scope: !11365)
!11374 = !DILocalVariable(name: "md", scope: !11365, file: !3, line: 734, type: !5408)
!11375 = !DILocation(line: 734, column: 23, scope: !11365)
!11376 = !DILocalVariable(name: "ret", scope: !11365, file: !3, line: 735, type: !324)
!11377 = !DILocation(line: 735, column: 6, scope: !11365)
!11378 = !DILocation(line: 737, column: 10, scope: !11365)
!11379 = !DILocation(line: 737, column: 2, scope: !11365)
!11380 = !DILocation(line: 739, column: 30, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 737, column: 15)
!11382 = !DILocation(line: 739, column: 9, scope: !11381)
!11383 = !DILocation(line: 739, column: 7, scope: !11381)
!11384 = !DILocation(line: 740, column: 7, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 740, column: 7)
!11386 = !DILocation(line: 740, column: 7, scope: !11381)
!11387 = !DILocation(line: 741, column: 11, scope: !11385)
!11388 = !DILocation(line: 741, column: 4, scope: !11385)
!11389 = !DILocation(line: 742, column: 20, scope: !11381)
!11390 = !DILocation(line: 742, column: 26, scope: !11381)
!11391 = !DILocation(line: 742, column: 8, scope: !11381)
!11392 = !DILocation(line: 742, column: 6, scope: !11381)
!11393 = !DILocation(line: 743, column: 8, scope: !11394)
!11394 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 743, column: 7)
!11395 = !DILocation(line: 743, column: 7, scope: !11381)
!11396 = !DILocation(line: 744, column: 4, scope: !11394)
!11397 = !DILocation(line: 745, column: 27, scope: !11381)
!11398 = !DILocation(line: 746, column: 35, scope: !11381)
!11399 = !DILocation(line: 746, column: 6, scope: !11381)
!11400 = !DILocation(line: 745, column: 9, scope: !11381)
!11401 = !DILocation(line: 745, column: 7, scope: !11381)
!11402 = !DILocation(line: 748, column: 15, scope: !11381)
!11403 = !DILocation(line: 748, column: 3, scope: !11381)
!11404 = !DILocation(line: 749, column: 10, scope: !11381)
!11405 = !DILocation(line: 749, column: 3, scope: !11381)
!11406 = !DILocation(line: 751, column: 30, scope: !11381)
!11407 = !DILocation(line: 751, column: 9, scope: !11381)
!11408 = !DILocation(line: 751, column: 7, scope: !11381)
!11409 = !DILocation(line: 752, column: 7, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 752, column: 7)
!11411 = !DILocation(line: 752, column: 7, scope: !11381)
!11412 = !DILocation(line: 753, column: 11, scope: !11410)
!11413 = !DILocation(line: 753, column: 4, scope: !11410)
!11414 = !DILocation(line: 754, column: 20, scope: !11381)
!11415 = !DILocation(line: 754, column: 26, scope: !11381)
!11416 = !DILocation(line: 754, column: 8, scope: !11381)
!11417 = !DILocation(line: 754, column: 6, scope: !11381)
!11418 = !DILocation(line: 755, column: 8, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 755, column: 7)
!11420 = !DILocation(line: 755, column: 7, scope: !11381)
!11421 = !DILocation(line: 756, column: 4, scope: !11419)
!11422 = !DILocation(line: 757, column: 33, scope: !11381)
!11423 = !DILocation(line: 758, column: 41, scope: !11381)
!11424 = !DILocation(line: 758, column: 6, scope: !11381)
!11425 = !DILocation(line: 757, column: 9, scope: !11381)
!11426 = !DILocation(line: 757, column: 7, scope: !11381)
!11427 = !DILocation(line: 760, column: 15, scope: !11381)
!11428 = !DILocation(line: 760, column: 3, scope: !11381)
!11429 = !DILocation(line: 761, column: 10, scope: !11381)
!11430 = !DILocation(line: 761, column: 3, scope: !11381)
!11431 = !DILocation(line: 763, column: 3, scope: !11381)
!11432 = !DILocation(line: 765, column: 1, scope: !11365)
!11433 = distinct !DISubprogram(name: "mmc_blk_getgeo", scope: !3, file: !3, line: 336, type: !2331, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11434 = !DILocalVariable(name: "bdev", arg: 1, scope: !11433, file: !3, line: 336, type: !2200)
!11435 = !DILocation(line: 336, column: 37, scope: !11433)
!11436 = !DILocalVariable(name: "geo", arg: 2, scope: !11433, file: !3, line: 336, type: !2333)
!11437 = !DILocation(line: 336, column: 63, scope: !11433)
!11438 = !DILocation(line: 338, column: 32, scope: !11433)
!11439 = !DILocation(line: 338, column: 38, scope: !11433)
!11440 = !DILocation(line: 338, column: 19, scope: !11433)
!11441 = !DILocation(line: 338, column: 47, scope: !11433)
!11442 = !DILocation(line: 338, column: 2, scope: !11433)
!11443 = !DILocation(line: 338, column: 7, scope: !11433)
!11444 = !DILocation(line: 338, column: 17, scope: !11433)
!11445 = !DILocation(line: 339, column: 2, scope: !11433)
!11446 = !DILocation(line: 339, column: 7, scope: !11433)
!11447 = !DILocation(line: 339, column: 13, scope: !11433)
!11448 = !DILocation(line: 340, column: 2, scope: !11433)
!11449 = !DILocation(line: 340, column: 7, scope: !11433)
!11450 = !DILocation(line: 340, column: 15, scope: !11433)
!11451 = !DILocation(line: 341, column: 2, scope: !11433)
!11452 = distinct !DISubprogram(name: "mmc_blk_get", scope: !3, file: !3, line: 176, type: !11453, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!5408, !2099}
!11455 = !DILocalVariable(name: "disk", arg: 1, scope: !11452, file: !3, line: 176, type: !2099)
!11456 = !DILocation(line: 176, column: 57, scope: !11452)
!11457 = !DILocalVariable(name: "md", scope: !11452, file: !3, line: 178, type: !5408)
!11458 = !DILocation(line: 178, column: 23, scope: !11452)
!11459 = !DILocation(line: 180, column: 2, scope: !11452)
!11460 = !DILocation(line: 181, column: 7, scope: !11452)
!11461 = !DILocation(line: 181, column: 13, scope: !11452)
!11462 = !DILocation(line: 181, column: 5, scope: !11452)
!11463 = !DILocation(line: 182, column: 6, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 182, column: 6)
!11465 = !DILocation(line: 182, column: 9, scope: !11464)
!11466 = !DILocation(line: 182, column: 12, scope: !11464)
!11467 = !DILocation(line: 182, column: 16, scope: !11464)
!11468 = !DILocation(line: 182, column: 22, scope: !11464)
!11469 = !DILocation(line: 182, column: 6, scope: !11452)
!11470 = !DILocation(line: 183, column: 6, scope: !11464)
!11471 = !DILocation(line: 183, column: 3, scope: !11464)
!11472 = !DILocation(line: 184, column: 6, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 184, column: 6)
!11474 = !DILocation(line: 184, column: 6, scope: !11452)
!11475 = !DILocation(line: 185, column: 3, scope: !11473)
!11476 = !DILocation(line: 185, column: 7, scope: !11473)
!11477 = !DILocation(line: 185, column: 12, scope: !11473)
!11478 = !DILocation(line: 186, column: 2, scope: !11452)
!11479 = !DILocation(line: 188, column: 9, scope: !11452)
!11480 = !DILocation(line: 188, column: 2, scope: !11452)
!11481 = distinct !DISubprogram(name: "mmc_blk_put", scope: !3, file: !3, line: 197, type: !10738, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11482 = !DILocalVariable(name: "md", arg: 1, scope: !11481, file: !3, line: 197, type: !5408)
!11483 = !DILocation(line: 197, column: 46, scope: !11481)
!11484 = !DILocation(line: 199, column: 2, scope: !11481)
!11485 = !DILocation(line: 200, column: 2, scope: !11481)
!11486 = !DILocation(line: 200, column: 6, scope: !11481)
!11487 = !DILocation(line: 200, column: 11, scope: !11481)
!11488 = !DILocation(line: 201, column: 6, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 201, column: 6)
!11490 = !DILocation(line: 201, column: 10, scope: !11489)
!11491 = !DILocation(line: 201, column: 16, scope: !11489)
!11492 = !DILocation(line: 201, column: 6, scope: !11481)
!11493 = !DILocalVariable(name: "devidx", scope: !11494, file: !3, line: 202, type: !324)
!11494 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 201, column: 22)
!11495 = !DILocation(line: 202, column: 7, scope: !11494)
!11496 = !DILocation(line: 202, column: 31, scope: !11494)
!11497 = !DILocation(line: 202, column: 35, scope: !11494)
!11498 = !DILocation(line: 202, column: 16, scope: !11494)
!11499 = !DILocation(line: 203, column: 17, scope: !11494)
!11500 = !DILocation(line: 203, column: 21, scope: !11494)
!11501 = !DILocation(line: 203, column: 27, scope: !11494)
!11502 = !DILocation(line: 203, column: 3, scope: !11494)
!11503 = !DILocation(line: 204, column: 3, scope: !11494)
!11504 = !DILocation(line: 205, column: 12, scope: !11494)
!11505 = !DILocation(line: 205, column: 16, scope: !11494)
!11506 = !DILocation(line: 205, column: 3, scope: !11494)
!11507 = !DILocation(line: 206, column: 9, scope: !11494)
!11508 = !DILocation(line: 206, column: 3, scope: !11494)
!11509 = !DILocation(line: 207, column: 2, scope: !11494)
!11510 = !DILocation(line: 208, column: 2, scope: !11481)
!11511 = !DILocation(line: 209, column: 1, scope: !11481)
!11512 = distinct !DISubprogram(name: "mmc_get_devidx", scope: !3, file: !3, line: 191, type: !2327, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11513 = !DILocalVariable(name: "disk", arg: 1, scope: !11512, file: !3, line: 191, type: !2099)
!11514 = !DILocation(line: 191, column: 50, scope: !11512)
!11515 = !DILocalVariable(name: "devidx", scope: !11512, file: !3, line: 193, type: !324)
!11516 = !DILocation(line: 193, column: 6, scope: !11512)
!11517 = !DILocation(line: 193, column: 15, scope: !11512)
!11518 = !DILocation(line: 193, column: 21, scope: !11512)
!11519 = !DILocation(line: 193, column: 35, scope: !11512)
!11520 = !DILocation(line: 193, column: 33, scope: !11512)
!11521 = !DILocation(line: 194, column: 9, scope: !11512)
!11522 = !DILocation(line: 194, column: 2, scope: !11512)
!11523 = distinct !DISubprogram(name: "mmc_blk_check_blkdev", scope: !3, file: !3, line: 719, type: !11524, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{!324, !2200}
!11526 = !DILocalVariable(name: "bdev", arg: 1, scope: !11523, file: !3, line: 719, type: !2200)
!11527 = !DILocation(line: 719, column: 54, scope: !11523)
!11528 = !DILocation(line: 726, column: 7, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 726, column: 6)
!11530 = !DILocation(line: 726, column: 30, scope: !11529)
!11531 = !DILocation(line: 726, column: 51, scope: !11529)
!11532 = !DILocation(line: 726, column: 33, scope: !11529)
!11533 = !DILocation(line: 726, column: 6, scope: !11523)
!11534 = !DILocation(line: 727, column: 3, scope: !11529)
!11535 = !DILocation(line: 728, column: 2, scope: !11523)
!11536 = !DILocation(line: 729, column: 1, scope: !11523)
!11537 = distinct !DISubprogram(name: "mmc_blk_ioctl_cmd", scope: !3, file: !3, line: 594, type: !11538, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{!324, !5408, !5476, !5501}
!11540 = !DILocalVariable(name: "md", arg: 1, scope: !11537, file: !3, line: 594, type: !5408)
!11541 = !DILocation(line: 594, column: 51, scope: !11537)
!11542 = !DILocalVariable(name: "ic_ptr", arg: 2, scope: !11537, file: !3, line: 595, type: !5476)
!11543 = !DILocation(line: 595, column: 36, scope: !11537)
!11544 = !DILocalVariable(name: "rpmb", arg: 3, scope: !11537, file: !3, line: 596, type: !5501)
!11545 = !DILocation(line: 596, column: 31, scope: !11537)
!11546 = !DILocalVariable(name: "idata", scope: !11537, file: !3, line: 598, type: !6698)
!11547 = !DILocation(line: 598, column: 27, scope: !11537)
!11548 = !DILocalVariable(name: "idatas", scope: !11537, file: !3, line: 599, type: !11549)
!11549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6698, size: 64, elements: !1545)
!11550 = !DILocation(line: 599, column: 27, scope: !11537)
!11551 = !DILocalVariable(name: "mq", scope: !11537, file: !3, line: 600, type: !258)
!11552 = !DILocation(line: 600, column: 20, scope: !11537)
!11553 = !DILocalVariable(name: "card", scope: !11537, file: !3, line: 601, type: !262)
!11554 = !DILocation(line: 601, column: 19, scope: !11537)
!11555 = !DILocalVariable(name: "err", scope: !11537, file: !3, line: 602, type: !324)
!11556 = !DILocation(line: 602, column: 6, scope: !11537)
!11557 = !DILocalVariable(name: "ioc_err", scope: !11537, file: !3, line: 602, type: !324)
!11558 = !DILocation(line: 602, column: 15, scope: !11537)
!11559 = !DILocalVariable(name: "req", scope: !11537, file: !3, line: 603, type: !2386)
!11560 = !DILocation(line: 603, column: 18, scope: !11537)
!11561 = !DILocation(line: 605, column: 39, scope: !11537)
!11562 = !DILocation(line: 605, column: 10, scope: !11537)
!11563 = !DILocation(line: 605, column: 8, scope: !11537)
!11564 = !DILocation(line: 606, column: 13, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 606, column: 6)
!11566 = !DILocation(line: 606, column: 6, scope: !11565)
!11567 = !DILocation(line: 606, column: 6, scope: !11537)
!11568 = !DILocation(line: 607, column: 18, scope: !11565)
!11569 = !DILocation(line: 607, column: 10, scope: !11565)
!11570 = !DILocation(line: 607, column: 3, scope: !11565)
!11571 = !DILocation(line: 609, column: 16, scope: !11537)
!11572 = !DILocation(line: 609, column: 2, scope: !11537)
!11573 = !DILocation(line: 609, column: 9, scope: !11537)
!11574 = !DILocation(line: 609, column: 14, scope: !11537)
!11575 = !DILocation(line: 611, column: 9, scope: !11537)
!11576 = !DILocation(line: 611, column: 13, scope: !11537)
!11577 = !DILocation(line: 611, column: 19, scope: !11537)
!11578 = !DILocation(line: 611, column: 7, scope: !11537)
!11579 = !DILocation(line: 612, column: 13, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 612, column: 6)
!11581 = !DILocation(line: 612, column: 6, scope: !11580)
!11582 = !DILocation(line: 612, column: 6, scope: !11537)
!11583 = !DILocation(line: 613, column: 17, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 612, column: 20)
!11585 = !DILocation(line: 613, column: 9, scope: !11584)
!11586 = !DILocation(line: 613, column: 7, scope: !11584)
!11587 = !DILocation(line: 614, column: 3, scope: !11584)
!11588 = !DILocation(line: 620, column: 8, scope: !11537)
!11589 = !DILocation(line: 620, column: 12, scope: !11537)
!11590 = !DILocation(line: 620, column: 5, scope: !11537)
!11591 = !DILocation(line: 621, column: 24, scope: !11537)
!11592 = !DILocation(line: 621, column: 28, scope: !11537)
!11593 = !DILocation(line: 622, column: 3, scope: !11537)
!11594 = !DILocation(line: 622, column: 10, scope: !11537)
!11595 = !DILocation(line: 622, column: 13, scope: !11537)
!11596 = !DILocation(line: 621, column: 8, scope: !11537)
!11597 = !DILocation(line: 621, column: 6, scope: !11537)
!11598 = !DILocation(line: 623, column: 13, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 623, column: 6)
!11600 = !DILocation(line: 623, column: 6, scope: !11599)
!11601 = !DILocation(line: 623, column: 6, scope: !11537)
!11602 = !DILocation(line: 624, column: 17, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11599, file: !3, line: 623, column: 19)
!11604 = !DILocation(line: 624, column: 9, scope: !11603)
!11605 = !DILocation(line: 624, column: 7, scope: !11603)
!11606 = !DILocation(line: 625, column: 3, scope: !11603)
!11607 = !DILocation(line: 627, column: 14, scope: !11537)
!11608 = !DILocation(line: 627, column: 2, scope: !11537)
!11609 = !DILocation(line: 627, column: 12, scope: !11537)
!11610 = !DILocation(line: 629, column: 3, scope: !11537)
!11611 = !DILocation(line: 628, column: 23, scope: !11537)
!11612 = !DILocation(line: 628, column: 2, scope: !11537)
!11613 = !DILocation(line: 628, column: 29, scope: !11537)
!11614 = !DILocation(line: 628, column: 36, scope: !11537)
!11615 = !DILocation(line: 630, column: 43, scope: !11537)
!11616 = !DILocation(line: 630, column: 23, scope: !11537)
!11617 = !DILocation(line: 630, column: 2, scope: !11537)
!11618 = !DILocation(line: 630, column: 29, scope: !11537)
!11619 = !DILocation(line: 630, column: 41, scope: !11537)
!11620 = !DILocation(line: 631, column: 23, scope: !11537)
!11621 = !DILocation(line: 631, column: 2, scope: !11537)
!11622 = !DILocation(line: 631, column: 29, scope: !11537)
!11623 = !DILocation(line: 631, column: 39, scope: !11537)
!11624 = !DILocation(line: 632, column: 17, scope: !11537)
!11625 = !DILocation(line: 632, column: 21, scope: !11537)
!11626 = !DILocation(line: 632, column: 34, scope: !11537)
!11627 = !DILocation(line: 632, column: 2, scope: !11537)
!11628 = !DILocation(line: 633, column: 33, scope: !11537)
!11629 = !DILocation(line: 633, column: 12, scope: !11537)
!11630 = !DILocation(line: 633, column: 39, scope: !11537)
!11631 = !DILocation(line: 633, column: 10, scope: !11537)
!11632 = !DILocation(line: 634, column: 35, scope: !11537)
!11633 = !DILocation(line: 634, column: 43, scope: !11537)
!11634 = !DILocation(line: 634, column: 8, scope: !11537)
!11635 = !DILocation(line: 634, column: 6, scope: !11537)
!11636 = !DILocation(line: 635, column: 18, scope: !11537)
!11637 = !DILocation(line: 635, column: 2, scope: !11537)
!11638 = !DILabel(scope: !11537, name: "cmd_done", file: !3, line: 637)
!11639 = !DILocation(line: 637, column: 1, scope: !11537)
!11640 = !DILocation(line: 638, column: 8, scope: !11537)
!11641 = !DILocation(line: 638, column: 15, scope: !11537)
!11642 = !DILocation(line: 638, column: 2, scope: !11537)
!11643 = !DILocation(line: 639, column: 8, scope: !11537)
!11644 = !DILocation(line: 639, column: 2, scope: !11537)
!11645 = !DILocation(line: 640, column: 9, scope: !11537)
!11646 = !DILocation(line: 640, column: 19, scope: !11537)
!11647 = !DILocation(line: 640, column: 29, scope: !11537)
!11648 = !DILocation(line: 640, column: 2, scope: !11537)
!11649 = !DILocation(line: 641, column: 1, scope: !11537)
!11650 = distinct !DISubprogram(name: "mmc_blk_ioctl_multi_cmd", scope: !3, file: !3, line: 643, type: !11651, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11651 = !DISubroutineType(types: !11652)
!11652 = !{!324, !5408, !5495, !5501}
!11653 = !DILocalVariable(name: "addr", arg: 1, scope: !11654, file: !11655, line: 138, type: !3283)
!11654 = distinct !DISubprogram(name: "check_copy_size", scope: !11655, file: !11655, line: 138, type: !11656, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11655 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!11656 = !DISubroutineType(types: !11657)
!11657 = !{!555, !3283, !386, !555}
!11658 = !DILocation(line: 138, column: 29, scope: !11654, inlinedAt: !11659)
!11659 = distinct !DILocation(line: 191, column: 6, scope: !11660, inlinedAt: !11665)
!11660 = distinct !DILexicalBlock(scope: !11662, file: !11661, line: 191, column: 6)
!11661 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!11662 = distinct !DISubprogram(name: "copy_from_user", scope: !11661, file: !11661, line: 189, type: !11663, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11663 = !DISubroutineType(types: !11664)
!11664 = !{!389, !257, !3283, !389}
!11665 = distinct !DILocation(line: 655, column: 6, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 655, column: 6)
!11667 = !DILocalVariable(name: "bytes", arg: 2, scope: !11654, file: !11655, line: 138, type: !386)
!11668 = !DILocation(line: 138, column: 42, scope: !11654, inlinedAt: !11659)
!11669 = !DILocalVariable(name: "is_source", arg: 3, scope: !11654, file: !11655, line: 138, type: !555)
!11670 = !DILocation(line: 138, column: 54, scope: !11654, inlinedAt: !11659)
!11671 = !DILocalVariable(name: "sz", scope: !11654, file: !11655, line: 140, type: !324)
!11672 = !DILocation(line: 140, column: 6, scope: !11654, inlinedAt: !11659)
!11673 = !DILocalVariable(name: "__ret_warn_on", scope: !11674, file: !11655, line: 150, type: !324)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !11655, line: 150, column: 6)
!11675 = distinct !DILexicalBlock(scope: !11654, file: !11655, line: 150, column: 6)
!11676 = !DILocation(line: 150, column: 6, scope: !11674, inlinedAt: !11659)
!11677 = !DILocalVariable(name: "to", arg: 1, scope: !11662, file: !11661, line: 189, type: !257)
!11678 = !DILocation(line: 189, column: 22, scope: !11662, inlinedAt: !11665)
!11679 = !DILocalVariable(name: "from", arg: 2, scope: !11662, file: !11661, line: 189, type: !3283)
!11680 = !DILocation(line: 189, column: 45, scope: !11662, inlinedAt: !11665)
!11681 = !DILocalVariable(name: "n", arg: 3, scope: !11662, file: !11661, line: 189, type: !389)
!11682 = !DILocation(line: 189, column: 65, scope: !11662, inlinedAt: !11665)
!11683 = !DILocalVariable(name: "md", arg: 1, scope: !11650, file: !3, line: 643, type: !5408)
!11684 = !DILocation(line: 643, column: 57, scope: !11650)
!11685 = !DILocalVariable(name: "user", arg: 2, scope: !11650, file: !3, line: 644, type: !5495)
!11686 = !DILocation(line: 644, column: 41, scope: !11650)
!11687 = !DILocalVariable(name: "rpmb", arg: 3, scope: !11650, file: !3, line: 645, type: !5501)
!11688 = !DILocation(line: 645, column: 30, scope: !11650)
!11689 = !DILocalVariable(name: "idata", scope: !11650, file: !3, line: 647, type: !6697)
!11690 = !DILocation(line: 647, column: 28, scope: !11650)
!11691 = !DILocalVariable(name: "cmds", scope: !11650, file: !3, line: 648, type: !5476)
!11692 = !DILocation(line: 648, column: 29, scope: !11650)
!11693 = !DILocation(line: 648, column: 36, scope: !11650)
!11694 = !DILocation(line: 648, column: 42, scope: !11650)
!11695 = !DILocalVariable(name: "card", scope: !11650, file: !3, line: 649, type: !262)
!11696 = !DILocation(line: 649, column: 19, scope: !11650)
!11697 = !DILocalVariable(name: "mq", scope: !11650, file: !3, line: 650, type: !258)
!11698 = !DILocation(line: 650, column: 20, scope: !11650)
!11699 = !DILocalVariable(name: "i", scope: !11650, file: !3, line: 651, type: !324)
!11700 = !DILocation(line: 651, column: 6, scope: !11650)
!11701 = !DILocalVariable(name: "err", scope: !11650, file: !3, line: 651, type: !324)
!11702 = !DILocation(line: 651, column: 9, scope: !11650)
!11703 = !DILocalVariable(name: "ioc_err", scope: !11650, file: !3, line: 651, type: !324)
!11704 = !DILocation(line: 651, column: 18, scope: !11650)
!11705 = !DILocalVariable(name: "num_of_cmds", scope: !11650, file: !3, line: 652, type: !487)
!11706 = !DILocation(line: 652, column: 8, scope: !11650)
!11707 = !DILocalVariable(name: "req", scope: !11650, file: !3, line: 653, type: !2386)
!11708 = !DILocation(line: 653, column: 18, scope: !11650)
!11709 = !DILocation(line: 655, column: 21, scope: !11666)
!11710 = !DILocation(line: 655, column: 36, scope: !11666)
!11711 = !DILocation(line: 655, column: 42, scope: !11666)
!11712 = !DILocation(line: 655, column: 35, scope: !11666)
!11713 = !DILocation(line: 191, column: 6, scope: !11660, inlinedAt: !11665)
!11714 = !DILocation(line: 141, column: 6, scope: !11715, inlinedAt: !11659)
!11715 = distinct !DILexicalBlock(scope: !11654, file: !11655, line: 141, column: 6)
!11716 = !DILocation(line: 0, scope: !11715, inlinedAt: !11659)
!11717 = !DILocation(line: 141, column: 6, scope: !11654, inlinedAt: !11659)
!11718 = !DILocation(line: 142, column: 29, scope: !11719, inlinedAt: !11659)
!11719 = distinct !DILexicalBlock(scope: !11720, file: !11655, line: 142, column: 7)
!11720 = distinct !DILexicalBlock(scope: !11715, file: !11655, line: 141, column: 39)
!11721 = !DILocation(line: 142, column: 8, scope: !11719, inlinedAt: !11659)
!11722 = !DILocation(line: 142, column: 7, scope: !11720, inlinedAt: !11659)
!11723 = !DILocation(line: 143, column: 18, scope: !11719, inlinedAt: !11659)
!11724 = !DILocation(line: 143, column: 22, scope: !11719, inlinedAt: !11659)
!11725 = !DILocation(line: 143, column: 4, scope: !11719, inlinedAt: !11659)
!11726 = !DILocation(line: 144, column: 12, scope: !11727, inlinedAt: !11659)
!11727 = distinct !DILexicalBlock(scope: !11719, file: !11655, line: 144, column: 12)
!11728 = !DILocation(line: 144, column: 12, scope: !11719, inlinedAt: !11659)
!11729 = !DILocation(line: 145, column: 4, scope: !11727, inlinedAt: !11659)
!11730 = !DILocation(line: 147, column: 4, scope: !11727, inlinedAt: !11659)
!11731 = !DILocation(line: 148, column: 3, scope: !11720, inlinedAt: !11659)
!11732 = !DILocation(line: 150, column: 6, scope: !11733, inlinedAt: !11659)
!11733 = distinct !DILexicalBlock(scope: !11674, file: !11655, line: 150, column: 6)
!11734 = !DILocation(line: 150, column: 6, scope: !11735, inlinedAt: !11659)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !11655, line: 150, column: 6)
!11736 = distinct !DILexicalBlock(scope: !11733, file: !11655, line: 150, column: 6)
!11737 = !{i32 -2145459984, i32 -2145459955, i32 -2145459909, i32 -2145459851, i32 -2145459797, i32 -2145459743, i32 -2145459688, i32 -2145459657}
!11738 = !DILocation(line: 150, column: 6, scope: !11739, inlinedAt: !11659)
!11739 = distinct !DILexicalBlock(scope: !11736, file: !11655, line: 150, column: 6)
!11740 = !{i32 -2145459237, i32 -2145459230, i32 -2145459178, i32 -2145459147, i32 -2145459117}
!11741 = !DILocation(line: 150, column: 6, scope: !11736, inlinedAt: !11659)
!11742 = !DILocation(line: 150, column: 6, scope: !11675, inlinedAt: !11659)
!11743 = !DILocation(line: 150, column: 6, scope: !11654, inlinedAt: !11659)
!11744 = !DILocation(line: 151, column: 3, scope: !11675, inlinedAt: !11659)
!11745 = !DILocation(line: 152, column: 20, scope: !11654, inlinedAt: !11659)
!11746 = !DILocation(line: 152, column: 26, scope: !11654, inlinedAt: !11659)
!11747 = !DILocation(line: 152, column: 33, scope: !11654, inlinedAt: !11659)
!11748 = !DILocation(line: 152, column: 2, scope: !11654, inlinedAt: !11659)
!11749 = !DILocation(line: 153, column: 2, scope: !11654, inlinedAt: !11659)
!11750 = !DILocation(line: 154, column: 1, scope: !11654, inlinedAt: !11659)
!11751 = !DILocation(line: 191, column: 6, scope: !11662, inlinedAt: !11665)
!11752 = !DILocation(line: 192, column: 23, scope: !11660, inlinedAt: !11665)
!11753 = !DILocation(line: 192, column: 27, scope: !11660, inlinedAt: !11665)
!11754 = !DILocation(line: 192, column: 33, scope: !11660, inlinedAt: !11665)
!11755 = !DILocation(line: 192, column: 7, scope: !11660, inlinedAt: !11665)
!11756 = !DILocation(line: 192, column: 5, scope: !11660, inlinedAt: !11665)
!11757 = !DILocation(line: 192, column: 3, scope: !11660, inlinedAt: !11665)
!11758 = !DILocation(line: 193, column: 9, scope: !11662, inlinedAt: !11665)
!11759 = !DILocation(line: 655, column: 6, scope: !11666)
!11760 = !DILocation(line: 655, column: 6, scope: !11650)
!11761 = !DILocation(line: 657, column: 3, scope: !11666)
!11762 = !DILocation(line: 659, column: 7, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 659, column: 6)
!11764 = !DILocation(line: 659, column: 6, scope: !11650)
!11765 = !DILocation(line: 660, column: 3, scope: !11763)
!11766 = !DILocation(line: 662, column: 6, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 662, column: 6)
!11768 = !DILocation(line: 662, column: 18, scope: !11767)
!11769 = !DILocation(line: 662, column: 6, scope: !11650)
!11770 = !DILocation(line: 663, column: 3, scope: !11767)
!11771 = !DILocation(line: 665, column: 18, scope: !11650)
!11772 = !DILocation(line: 665, column: 10, scope: !11650)
!11773 = !DILocation(line: 665, column: 8, scope: !11650)
!11774 = !DILocation(line: 666, column: 7, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 666, column: 6)
!11776 = !DILocation(line: 666, column: 6, scope: !11650)
!11777 = !DILocation(line: 667, column: 3, scope: !11775)
!11778 = !DILocation(line: 669, column: 9, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 669, column: 2)
!11780 = !DILocation(line: 669, column: 7, scope: !11779)
!11781 = !DILocation(line: 669, column: 14, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 669, column: 2)
!11783 = !DILocation(line: 669, column: 18, scope: !11782)
!11784 = !DILocation(line: 669, column: 16, scope: !11782)
!11785 = !DILocation(line: 669, column: 2, scope: !11779)
!11786 = !DILocation(line: 670, column: 44, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 669, column: 36)
!11788 = !DILocation(line: 670, column: 49, scope: !11787)
!11789 = !DILocation(line: 670, column: 14, scope: !11787)
!11790 = !DILocation(line: 670, column: 3, scope: !11787)
!11791 = !DILocation(line: 670, column: 9, scope: !11787)
!11792 = !DILocation(line: 670, column: 12, scope: !11787)
!11793 = !DILocation(line: 671, column: 14, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11787, file: !3, line: 671, column: 7)
!11795 = !DILocation(line: 671, column: 20, scope: !11794)
!11796 = !DILocation(line: 671, column: 7, scope: !11794)
!11797 = !DILocation(line: 671, column: 7, scope: !11787)
!11798 = !DILocation(line: 672, column: 18, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 671, column: 25)
!11800 = !DILocation(line: 672, column: 24, scope: !11799)
!11801 = !DILocation(line: 672, column: 10, scope: !11799)
!11802 = !DILocation(line: 672, column: 8, scope: !11799)
!11803 = !DILocation(line: 673, column: 18, scope: !11799)
!11804 = !DILocation(line: 673, column: 16, scope: !11799)
!11805 = !DILocation(line: 674, column: 4, scope: !11799)
!11806 = !DILocation(line: 677, column: 20, scope: !11787)
!11807 = !DILocation(line: 677, column: 3, scope: !11787)
!11808 = !DILocation(line: 677, column: 9, scope: !11787)
!11809 = !DILocation(line: 677, column: 13, scope: !11787)
!11810 = !DILocation(line: 677, column: 18, scope: !11787)
!11811 = !DILocation(line: 678, column: 2, scope: !11787)
!11812 = !DILocation(line: 669, column: 32, scope: !11782)
!11813 = !DILocation(line: 669, column: 2, scope: !11782)
!11814 = distinct !{!11814, !11785, !11815}
!11815 = !DILocation(line: 678, column: 2, scope: !11779)
!11816 = !DILocation(line: 680, column: 9, scope: !11650)
!11817 = !DILocation(line: 680, column: 13, scope: !11650)
!11818 = !DILocation(line: 680, column: 19, scope: !11650)
!11819 = !DILocation(line: 680, column: 7, scope: !11650)
!11820 = !DILocation(line: 681, column: 13, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 681, column: 6)
!11822 = !DILocation(line: 681, column: 6, scope: !11821)
!11823 = !DILocation(line: 681, column: 6, scope: !11650)
!11824 = !DILocation(line: 682, column: 17, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 681, column: 20)
!11826 = !DILocation(line: 682, column: 9, scope: !11825)
!11827 = !DILocation(line: 682, column: 7, scope: !11825)
!11828 = !DILocation(line: 683, column: 3, scope: !11825)
!11829 = !DILocation(line: 690, column: 8, scope: !11650)
!11830 = !DILocation(line: 690, column: 12, scope: !11650)
!11831 = !DILocation(line: 690, column: 5, scope: !11650)
!11832 = !DILocation(line: 691, column: 24, scope: !11650)
!11833 = !DILocation(line: 691, column: 28, scope: !11650)
!11834 = !DILocation(line: 692, column: 3, scope: !11650)
!11835 = !DILocation(line: 692, column: 13, scope: !11650)
!11836 = !DILocation(line: 692, column: 16, scope: !11650)
!11837 = !DILocation(line: 691, column: 8, scope: !11650)
!11838 = !DILocation(line: 691, column: 6, scope: !11650)
!11839 = !DILocation(line: 693, column: 13, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 693, column: 6)
!11841 = !DILocation(line: 693, column: 6, scope: !11840)
!11842 = !DILocation(line: 693, column: 6, scope: !11650)
!11843 = !DILocation(line: 694, column: 17, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11840, file: !3, line: 693, column: 19)
!11845 = !DILocation(line: 694, column: 9, scope: !11844)
!11846 = !DILocation(line: 694, column: 7, scope: !11844)
!11847 = !DILocation(line: 695, column: 3, scope: !11844)
!11848 = !DILocation(line: 698, column: 3, scope: !11650)
!11849 = !DILocation(line: 697, column: 23, scope: !11650)
!11850 = !DILocation(line: 697, column: 2, scope: !11650)
!11851 = !DILocation(line: 697, column: 29, scope: !11650)
!11852 = !DILocation(line: 697, column: 36, scope: !11650)
!11853 = !DILocation(line: 699, column: 43, scope: !11650)
!11854 = !DILocation(line: 699, column: 23, scope: !11650)
!11855 = !DILocation(line: 699, column: 2, scope: !11650)
!11856 = !DILocation(line: 699, column: 29, scope: !11650)
!11857 = !DILocation(line: 699, column: 41, scope: !11650)
!11858 = !DILocation(line: 700, column: 41, scope: !11650)
!11859 = !DILocation(line: 700, column: 23, scope: !11650)
!11860 = !DILocation(line: 700, column: 2, scope: !11650)
!11861 = !DILocation(line: 700, column: 29, scope: !11650)
!11862 = !DILocation(line: 700, column: 39, scope: !11650)
!11863 = !DILocation(line: 701, column: 17, scope: !11650)
!11864 = !DILocation(line: 701, column: 21, scope: !11650)
!11865 = !DILocation(line: 701, column: 34, scope: !11650)
!11866 = !DILocation(line: 701, column: 2, scope: !11650)
!11867 = !DILocation(line: 702, column: 33, scope: !11650)
!11868 = !DILocation(line: 702, column: 12, scope: !11650)
!11869 = !DILocation(line: 702, column: 39, scope: !11650)
!11870 = !DILocation(line: 702, column: 10, scope: !11650)
!11871 = !DILocation(line: 705, column: 9, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 705, column: 2)
!11873 = !DILocation(line: 705, column: 7, scope: !11872)
!11874 = !DILocation(line: 705, column: 14, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 705, column: 2)
!11876 = !DILocation(line: 705, column: 18, scope: !11875)
!11877 = !DILocation(line: 705, column: 16, scope: !11875)
!11878 = !DILocation(line: 705, column: 30, scope: !11875)
!11879 = !DILocation(line: 705, column: 34, scope: !11875)
!11880 = !DILocation(line: 705, column: 33, scope: !11875)
!11881 = !DILocation(line: 0, scope: !11875)
!11882 = !DILocation(line: 705, column: 2, scope: !11872)
!11883 = !DILocation(line: 706, column: 37, scope: !11875)
!11884 = !DILocation(line: 706, column: 42, scope: !11875)
!11885 = !DILocation(line: 706, column: 46, scope: !11875)
!11886 = !DILocation(line: 706, column: 52, scope: !11875)
!11887 = !DILocation(line: 706, column: 9, scope: !11875)
!11888 = !DILocation(line: 706, column: 7, scope: !11875)
!11889 = !DILocation(line: 706, column: 3, scope: !11875)
!11890 = !DILocation(line: 705, column: 40, scope: !11875)
!11891 = !DILocation(line: 705, column: 2, scope: !11875)
!11892 = distinct !{!11892, !11882, !11893}
!11893 = !DILocation(line: 706, column: 54, scope: !11872)
!11894 = !DILocation(line: 708, column: 18, scope: !11650)
!11895 = !DILocation(line: 708, column: 2, scope: !11650)
!11896 = !DILabel(scope: !11650, name: "cmd_err", file: !3, line: 710)
!11897 = !DILocation(line: 710, column: 1, scope: !11650)
!11898 = !DILocation(line: 711, column: 9, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 711, column: 2)
!11900 = !DILocation(line: 711, column: 7, scope: !11899)
!11901 = !DILocation(line: 711, column: 14, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 711, column: 2)
!11903 = !DILocation(line: 711, column: 18, scope: !11902)
!11904 = !DILocation(line: 711, column: 16, scope: !11902)
!11905 = !DILocation(line: 711, column: 2, scope: !11899)
!11906 = !DILocation(line: 712, column: 9, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 711, column: 36)
!11908 = !DILocation(line: 712, column: 15, scope: !11907)
!11909 = !DILocation(line: 712, column: 19, scope: !11907)
!11910 = !DILocation(line: 712, column: 3, scope: !11907)
!11911 = !DILocation(line: 713, column: 9, scope: !11907)
!11912 = !DILocation(line: 713, column: 15, scope: !11907)
!11913 = !DILocation(line: 713, column: 3, scope: !11907)
!11914 = !DILocation(line: 714, column: 2, scope: !11907)
!11915 = !DILocation(line: 711, column: 32, scope: !11902)
!11916 = !DILocation(line: 711, column: 2, scope: !11902)
!11917 = distinct !{!11917, !11905, !11918}
!11918 = !DILocation(line: 714, column: 2, scope: !11899)
!11919 = !DILocation(line: 715, column: 8, scope: !11650)
!11920 = !DILocation(line: 715, column: 2, scope: !11650)
!11921 = !DILocation(line: 716, column: 9, scope: !11650)
!11922 = !DILocation(line: 716, column: 19, scope: !11650)
!11923 = !DILocation(line: 716, column: 29, scope: !11650)
!11924 = !DILocation(line: 716, column: 2, scope: !11650)
!11925 = !DILocation(line: 717, column: 1, scope: !11650)
!11926 = distinct !DISubprogram(name: "bdev_is_partition", scope: !43, file: !43, line: 1368, type: !11927, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11927 = !DISubroutineType(types: !11928)
!11928 = !{!555, !2200}
!11929 = !DILocalVariable(name: "bdev", arg: 1, scope: !11926, file: !43, line: 1368, type: !2200)
!11930 = !DILocation(line: 1368, column: 59, scope: !11926)
!11931 = !DILocation(line: 1370, column: 9, scope: !11926)
!11932 = !DILocation(line: 1370, column: 15, scope: !11926)
!11933 = !DILocation(line: 1370, column: 2, scope: !11926)
!11934 = distinct !DISubprogram(name: "mmc_blk_ioctl_copy_from_user", scope: !3, file: !3, line: 351, type: !11935, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!11935 = !DISubroutineType(types: !11936)
!11936 = !{!6698, !5476}
!11937 = !DILocation(line: 138, column: 29, scope: !11654, inlinedAt: !11938)
!11938 = distinct !DILocation(line: 191, column: 6, scope: !11660, inlinedAt: !11939)
!11939 = distinct !DILocation(line: 363, column: 6, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 363, column: 6)
!11941 = !DILocation(line: 138, column: 42, scope: !11654, inlinedAt: !11938)
!11942 = !DILocation(line: 138, column: 54, scope: !11654, inlinedAt: !11938)
!11943 = !DILocation(line: 140, column: 6, scope: !11654, inlinedAt: !11938)
!11944 = !DILocation(line: 150, column: 6, scope: !11674, inlinedAt: !11938)
!11945 = !DILocation(line: 189, column: 22, scope: !11662, inlinedAt: !11939)
!11946 = !DILocation(line: 189, column: 45, scope: !11662, inlinedAt: !11939)
!11947 = !DILocation(line: 189, column: 65, scope: !11662, inlinedAt: !11939)
!11948 = !DILocation(line: 445, column: 72, scope: !7571, inlinedAt: !11949)
!11949 = distinct !DILocation(line: 552, column: 10, scope: !7576, inlinedAt: !11950)
!11950 = distinct !DILocation(line: 357, column: 10, scope: !11934)
!11951 = !DILocation(line: 446, column: 9, scope: !7571, inlinedAt: !11949)
!11952 = !DILocation(line: 446, column: 23, scope: !7571, inlinedAt: !11949)
!11953 = !DILocation(line: 448, column: 8, scope: !7571, inlinedAt: !11949)
!11954 = !DILocation(line: 318, column: 67, scope: !7589, inlinedAt: !11955)
!11955 = distinct !DILocation(line: 553, column: 20, scope: !7576, inlinedAt: !11950)
!11956 = !DILocation(line: 346, column: 58, scope: !7595, inlinedAt: !11957)
!11957 = distinct !DILocation(line: 547, column: 11, scope: !7576, inlinedAt: !11950)
!11958 = !DILocation(line: 472, column: 28, scope: !7601, inlinedAt: !11959)
!11959 = distinct !DILocation(line: 481, column: 9, scope: !7606, inlinedAt: !11960)
!11960 = distinct !DILocation(line: 545, column: 11, scope: !7608, inlinedAt: !11950)
!11961 = !DILocation(line: 472, column: 40, scope: !7601, inlinedAt: !11959)
!11962 = !DILocation(line: 472, column: 60, scope: !7601, inlinedAt: !11959)
!11963 = !DILocation(line: 478, column: 51, scope: !7606, inlinedAt: !11960)
!11964 = !DILocation(line: 478, column: 63, scope: !7606, inlinedAt: !11960)
!11965 = !DILocation(line: 480, column: 15, scope: !7606, inlinedAt: !11960)
!11966 = !DILocation(line: 538, column: 45, scope: !7578, inlinedAt: !11950)
!11967 = !DILocation(line: 538, column: 57, scope: !7578, inlinedAt: !11950)
!11968 = !DILocation(line: 542, column: 16, scope: !7576, inlinedAt: !11950)
!11969 = !DILocalVariable(name: "user", arg: 1, scope: !11934, file: !3, line: 352, type: !5476)
!11970 = !DILocation(line: 352, column: 29, scope: !11934)
!11971 = !DILocalVariable(name: "idata", scope: !11934, file: !3, line: 354, type: !6698)
!11972 = !DILocation(line: 354, column: 27, scope: !11934)
!11973 = !DILocalVariable(name: "err", scope: !11934, file: !3, line: 355, type: !324)
!11974 = !DILocation(line: 355, column: 6, scope: !11934)
!11975 = !DILocation(line: 540, column: 27, scope: !7577, inlinedAt: !11950)
!11976 = !DILocation(line: 540, column: 6, scope: !7577, inlinedAt: !11950)
!11977 = !DILocation(line: 540, column: 6, scope: !7578, inlinedAt: !11950)
!11978 = !DILocation(line: 544, column: 7, scope: !7608, inlinedAt: !11950)
!11979 = !DILocation(line: 544, column: 12, scope: !7608, inlinedAt: !11950)
!11980 = !DILocation(line: 544, column: 7, scope: !7576, inlinedAt: !11950)
!11981 = !DILocation(line: 545, column: 25, scope: !7608, inlinedAt: !11950)
!11982 = !DILocation(line: 545, column: 31, scope: !7608, inlinedAt: !11950)
!11983 = !DILocation(line: 480, column: 33, scope: !7606, inlinedAt: !11960)
!11984 = !DILocation(line: 480, column: 23, scope: !7606, inlinedAt: !11960)
!11985 = !DILocation(line: 481, column: 29, scope: !7606, inlinedAt: !11960)
!11986 = !DILocation(line: 481, column: 35, scope: !7606, inlinedAt: !11960)
!11987 = !DILocation(line: 481, column: 42, scope: !7606, inlinedAt: !11960)
!11988 = !DILocation(line: 474, column: 23, scope: !7601, inlinedAt: !11959)
!11989 = !DILocation(line: 474, column: 29, scope: !7601, inlinedAt: !11959)
!11990 = !DILocation(line: 474, column: 36, scope: !7601, inlinedAt: !11959)
!11991 = !DILocation(line: 474, column: 9, scope: !7601, inlinedAt: !11959)
!11992 = !DILocation(line: 545, column: 4, scope: !7608, inlinedAt: !11950)
!11993 = !DILocation(line: 547, column: 25, scope: !7576, inlinedAt: !11950)
!11994 = !DILocation(line: 348, column: 7, scope: !7713, inlinedAt: !11957)
!11995 = !DILocation(line: 348, column: 6, scope: !7595, inlinedAt: !11957)
!11996 = !DILocation(line: 349, column: 3, scope: !7713, inlinedAt: !11957)
!11997 = !DILocation(line: 351, column: 6, scope: !7717, inlinedAt: !11957)
!11998 = !DILocation(line: 351, column: 11, scope: !7717, inlinedAt: !11957)
!11999 = !DILocation(line: 351, column: 6, scope: !7595, inlinedAt: !11957)
!12000 = !DILocation(line: 352, column: 3, scope: !7717, inlinedAt: !11957)
!12001 = !DILocation(line: 354, column: 32, scope: !7722, inlinedAt: !11957)
!12002 = !DILocation(line: 354, column: 37, scope: !7722, inlinedAt: !11957)
!12003 = !DILocation(line: 354, column: 42, scope: !7722, inlinedAt: !11957)
!12004 = !DILocation(line: 354, column: 45, scope: !7722, inlinedAt: !11957)
!12005 = !DILocation(line: 354, column: 50, scope: !7722, inlinedAt: !11957)
!12006 = !DILocation(line: 354, column: 6, scope: !7595, inlinedAt: !11957)
!12007 = !DILocation(line: 355, column: 3, scope: !7722, inlinedAt: !11957)
!12008 = !DILocation(line: 356, column: 32, scope: !7730, inlinedAt: !11957)
!12009 = !DILocation(line: 356, column: 37, scope: !7730, inlinedAt: !11957)
!12010 = !DILocation(line: 356, column: 43, scope: !7730, inlinedAt: !11957)
!12011 = !DILocation(line: 356, column: 46, scope: !7730, inlinedAt: !11957)
!12012 = !DILocation(line: 356, column: 51, scope: !7730, inlinedAt: !11957)
!12013 = !DILocation(line: 356, column: 6, scope: !7595, inlinedAt: !11957)
!12014 = !DILocation(line: 357, column: 3, scope: !7730, inlinedAt: !11957)
!12015 = !DILocation(line: 358, column: 6, scope: !7738, inlinedAt: !11957)
!12016 = !DILocation(line: 358, column: 11, scope: !7738, inlinedAt: !11957)
!12017 = !DILocation(line: 358, column: 6, scope: !7595, inlinedAt: !11957)
!12018 = !DILocation(line: 358, column: 26, scope: !7738, inlinedAt: !11957)
!12019 = !DILocation(line: 359, column: 6, scope: !7743, inlinedAt: !11957)
!12020 = !DILocation(line: 359, column: 11, scope: !7743, inlinedAt: !11957)
!12021 = !DILocation(line: 359, column: 6, scope: !7595, inlinedAt: !11957)
!12022 = !DILocation(line: 359, column: 26, scope: !7743, inlinedAt: !11957)
!12023 = !DILocation(line: 360, column: 6, scope: !7748, inlinedAt: !11957)
!12024 = !DILocation(line: 360, column: 11, scope: !7748, inlinedAt: !11957)
!12025 = !DILocation(line: 360, column: 6, scope: !7595, inlinedAt: !11957)
!12026 = !DILocation(line: 360, column: 26, scope: !7748, inlinedAt: !11957)
!12027 = !DILocation(line: 361, column: 6, scope: !7753, inlinedAt: !11957)
!12028 = !DILocation(line: 361, column: 11, scope: !7753, inlinedAt: !11957)
!12029 = !DILocation(line: 361, column: 6, scope: !7595, inlinedAt: !11957)
!12030 = !DILocation(line: 361, column: 26, scope: !7753, inlinedAt: !11957)
!12031 = !DILocation(line: 362, column: 6, scope: !7758, inlinedAt: !11957)
!12032 = !DILocation(line: 362, column: 11, scope: !7758, inlinedAt: !11957)
!12033 = !DILocation(line: 362, column: 6, scope: !7595, inlinedAt: !11957)
!12034 = !DILocation(line: 362, column: 26, scope: !7758, inlinedAt: !11957)
!12035 = !DILocation(line: 363, column: 6, scope: !7763, inlinedAt: !11957)
!12036 = !DILocation(line: 363, column: 11, scope: !7763, inlinedAt: !11957)
!12037 = !DILocation(line: 363, column: 6, scope: !7595, inlinedAt: !11957)
!12038 = !DILocation(line: 363, column: 26, scope: !7763, inlinedAt: !11957)
!12039 = !DILocation(line: 364, column: 6, scope: !7768, inlinedAt: !11957)
!12040 = !DILocation(line: 364, column: 11, scope: !7768, inlinedAt: !11957)
!12041 = !DILocation(line: 364, column: 6, scope: !7595, inlinedAt: !11957)
!12042 = !DILocation(line: 364, column: 26, scope: !7768, inlinedAt: !11957)
!12043 = !DILocation(line: 365, column: 6, scope: !7773, inlinedAt: !11957)
!12044 = !DILocation(line: 365, column: 11, scope: !7773, inlinedAt: !11957)
!12045 = !DILocation(line: 365, column: 6, scope: !7595, inlinedAt: !11957)
!12046 = !DILocation(line: 365, column: 26, scope: !7773, inlinedAt: !11957)
!12047 = !DILocation(line: 366, column: 6, scope: !7778, inlinedAt: !11957)
!12048 = !DILocation(line: 366, column: 11, scope: !7778, inlinedAt: !11957)
!12049 = !DILocation(line: 366, column: 6, scope: !7595, inlinedAt: !11957)
!12050 = !DILocation(line: 366, column: 26, scope: !7778, inlinedAt: !11957)
!12051 = !DILocation(line: 367, column: 6, scope: !7783, inlinedAt: !11957)
!12052 = !DILocation(line: 367, column: 11, scope: !7783, inlinedAt: !11957)
!12053 = !DILocation(line: 367, column: 6, scope: !7595, inlinedAt: !11957)
!12054 = !DILocation(line: 367, column: 26, scope: !7783, inlinedAt: !11957)
!12055 = !DILocation(line: 368, column: 6, scope: !7788, inlinedAt: !11957)
!12056 = !DILocation(line: 368, column: 11, scope: !7788, inlinedAt: !11957)
!12057 = !DILocation(line: 368, column: 6, scope: !7595, inlinedAt: !11957)
!12058 = !DILocation(line: 368, column: 26, scope: !7788, inlinedAt: !11957)
!12059 = !DILocation(line: 369, column: 6, scope: !7793, inlinedAt: !11957)
!12060 = !DILocation(line: 369, column: 11, scope: !7793, inlinedAt: !11957)
!12061 = !DILocation(line: 369, column: 6, scope: !7595, inlinedAt: !11957)
!12062 = !DILocation(line: 369, column: 26, scope: !7793, inlinedAt: !11957)
!12063 = !DILocation(line: 370, column: 6, scope: !7798, inlinedAt: !11957)
!12064 = !DILocation(line: 370, column: 11, scope: !7798, inlinedAt: !11957)
!12065 = !DILocation(line: 370, column: 6, scope: !7595, inlinedAt: !11957)
!12066 = !DILocation(line: 370, column: 26, scope: !7798, inlinedAt: !11957)
!12067 = !DILocation(line: 371, column: 6, scope: !7803, inlinedAt: !11957)
!12068 = !DILocation(line: 371, column: 11, scope: !7803, inlinedAt: !11957)
!12069 = !DILocation(line: 371, column: 6, scope: !7595, inlinedAt: !11957)
!12070 = !DILocation(line: 371, column: 26, scope: !7803, inlinedAt: !11957)
!12071 = !DILocation(line: 372, column: 6, scope: !7808, inlinedAt: !11957)
!12072 = !DILocation(line: 372, column: 11, scope: !7808, inlinedAt: !11957)
!12073 = !DILocation(line: 372, column: 6, scope: !7595, inlinedAt: !11957)
!12074 = !DILocation(line: 372, column: 26, scope: !7808, inlinedAt: !11957)
!12075 = !DILocation(line: 373, column: 6, scope: !7813, inlinedAt: !11957)
!12076 = !DILocation(line: 373, column: 11, scope: !7813, inlinedAt: !11957)
!12077 = !DILocation(line: 373, column: 6, scope: !7595, inlinedAt: !11957)
!12078 = !DILocation(line: 373, column: 26, scope: !7813, inlinedAt: !11957)
!12079 = !DILocation(line: 374, column: 6, scope: !7818, inlinedAt: !11957)
!12080 = !DILocation(line: 374, column: 11, scope: !7818, inlinedAt: !11957)
!12081 = !DILocation(line: 374, column: 6, scope: !7595, inlinedAt: !11957)
!12082 = !DILocation(line: 374, column: 26, scope: !7818, inlinedAt: !11957)
!12083 = !DILocation(line: 375, column: 6, scope: !7823, inlinedAt: !11957)
!12084 = !DILocation(line: 375, column: 11, scope: !7823, inlinedAt: !11957)
!12085 = !DILocation(line: 375, column: 6, scope: !7595, inlinedAt: !11957)
!12086 = !DILocation(line: 375, column: 27, scope: !7823, inlinedAt: !11957)
!12087 = !DILocation(line: 376, column: 6, scope: !7828, inlinedAt: !11957)
!12088 = !DILocation(line: 376, column: 11, scope: !7828, inlinedAt: !11957)
!12089 = !DILocation(line: 376, column: 6, scope: !7595, inlinedAt: !11957)
!12090 = !DILocation(line: 376, column: 32, scope: !7828, inlinedAt: !11957)
!12091 = !DILocation(line: 377, column: 6, scope: !7833, inlinedAt: !11957)
!12092 = !DILocation(line: 377, column: 11, scope: !7833, inlinedAt: !11957)
!12093 = !DILocation(line: 377, column: 6, scope: !7595, inlinedAt: !11957)
!12094 = !DILocation(line: 377, column: 32, scope: !7833, inlinedAt: !11957)
!12095 = !DILocation(line: 378, column: 6, scope: !7838, inlinedAt: !11957)
!12096 = !DILocation(line: 378, column: 11, scope: !7838, inlinedAt: !11957)
!12097 = !DILocation(line: 378, column: 6, scope: !7595, inlinedAt: !11957)
!12098 = !DILocation(line: 378, column: 32, scope: !7838, inlinedAt: !11957)
!12099 = !DILocation(line: 379, column: 6, scope: !7843, inlinedAt: !11957)
!12100 = !DILocation(line: 379, column: 11, scope: !7843, inlinedAt: !11957)
!12101 = !DILocation(line: 379, column: 6, scope: !7595, inlinedAt: !11957)
!12102 = !DILocation(line: 379, column: 33, scope: !7843, inlinedAt: !11957)
!12103 = !DILocation(line: 380, column: 6, scope: !7848, inlinedAt: !11957)
!12104 = !DILocation(line: 380, column: 11, scope: !7848, inlinedAt: !11957)
!12105 = !DILocation(line: 380, column: 6, scope: !7595, inlinedAt: !11957)
!12106 = !DILocation(line: 380, column: 33, scope: !7848, inlinedAt: !11957)
!12107 = !DILocation(line: 381, column: 6, scope: !7853, inlinedAt: !11957)
!12108 = !DILocation(line: 381, column: 11, scope: !7853, inlinedAt: !11957)
!12109 = !DILocation(line: 381, column: 6, scope: !7595, inlinedAt: !11957)
!12110 = !DILocation(line: 381, column: 33, scope: !7853, inlinedAt: !11957)
!12111 = !DILocation(line: 382, column: 2, scope: !7858, inlinedAt: !11957)
!12112 = !DILocation(line: 382, column: 2, scope: !7862, inlinedAt: !11957)
!12113 = !DILocation(line: 382, column: 2, scope: !7863, inlinedAt: !11957)
!12114 = !DILocation(line: 386, column: 1, scope: !7595, inlinedAt: !11957)
!12115 = !DILocation(line: 547, column: 9, scope: !7576, inlinedAt: !11950)
!12116 = !DILocation(line: 549, column: 8, scope: !7869, inlinedAt: !11950)
!12117 = !DILocation(line: 549, column: 7, scope: !7576, inlinedAt: !11950)
!12118 = !DILocation(line: 550, column: 4, scope: !7869, inlinedAt: !11950)
!12119 = !DILocation(line: 553, column: 33, scope: !7576, inlinedAt: !11950)
!12120 = !DILocation(line: 325, column: 6, scope: !7874, inlinedAt: !11955)
!12121 = !DILocation(line: 325, column: 6, scope: !7589, inlinedAt: !11955)
!12122 = !DILocation(line: 326, column: 3, scope: !7874, inlinedAt: !11955)
!12123 = !DILocation(line: 332, column: 9, scope: !7589, inlinedAt: !11955)
!12124 = !DILocation(line: 332, column: 15, scope: !7589, inlinedAt: !11955)
!12125 = !DILocation(line: 332, column: 2, scope: !7589, inlinedAt: !11955)
!12126 = !DILocation(line: 336, column: 1, scope: !7589, inlinedAt: !11955)
!12127 = !DILocation(line: 553, column: 5, scope: !7576, inlinedAt: !11950)
!12128 = !DILocation(line: 553, column: 41, scope: !7576, inlinedAt: !11950)
!12129 = !DILocation(line: 554, column: 5, scope: !7576, inlinedAt: !11950)
!12130 = !DILocation(line: 554, column: 12, scope: !7576, inlinedAt: !11950)
!12131 = !DILocation(line: 448, column: 31, scope: !7571, inlinedAt: !11949)
!12132 = !DILocation(line: 448, column: 34, scope: !7571, inlinedAt: !11949)
!12133 = !DILocation(line: 448, column: 14, scope: !7571, inlinedAt: !11949)
!12134 = !DILocation(line: 450, column: 22, scope: !7571, inlinedAt: !11949)
!12135 = !DILocation(line: 450, column: 25, scope: !7571, inlinedAt: !11949)
!12136 = !DILocation(line: 450, column: 30, scope: !7571, inlinedAt: !11949)
!12137 = !DILocation(line: 450, column: 36, scope: !7571, inlinedAt: !11949)
!12138 = !DILocation(line: 450, column: 8, scope: !7571, inlinedAt: !11949)
!12139 = !DILocation(line: 450, column: 6, scope: !7571, inlinedAt: !11949)
!12140 = !DILocation(line: 451, column: 9, scope: !7571, inlinedAt: !11949)
!12141 = !DILocation(line: 552, column: 3, scope: !7576, inlinedAt: !11950)
!12142 = !DILocation(line: 557, column: 19, scope: !7578, inlinedAt: !11950)
!12143 = !DILocation(line: 557, column: 25, scope: !7578, inlinedAt: !11950)
!12144 = !DILocation(line: 557, column: 9, scope: !7578, inlinedAt: !11950)
!12145 = !DILocation(line: 557, column: 2, scope: !7578, inlinedAt: !11950)
!12146 = !DILocation(line: 558, column: 1, scope: !7578, inlinedAt: !11950)
!12147 = !DILocation(line: 357, column: 10, scope: !11934)
!12148 = !DILocation(line: 357, column: 8, scope: !11934)
!12149 = !DILocation(line: 358, column: 7, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 358, column: 6)
!12151 = !DILocation(line: 358, column: 6, scope: !11934)
!12152 = !DILocation(line: 359, column: 7, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12150, file: !3, line: 358, column: 14)
!12154 = !DILocation(line: 360, column: 3, scope: !12153)
!12155 = !DILocation(line: 363, column: 22, scope: !11940)
!12156 = !DILocation(line: 363, column: 29, scope: !11940)
!12157 = !DILocation(line: 363, column: 21, scope: !11940)
!12158 = !DILocation(line: 363, column: 33, scope: !11940)
!12159 = !DILocation(line: 191, column: 6, scope: !11660, inlinedAt: !11939)
!12160 = !DILocation(line: 141, column: 6, scope: !11715, inlinedAt: !11938)
!12161 = !DILocation(line: 0, scope: !11715, inlinedAt: !11938)
!12162 = !DILocation(line: 141, column: 6, scope: !11654, inlinedAt: !11938)
!12163 = !DILocation(line: 142, column: 29, scope: !11719, inlinedAt: !11938)
!12164 = !DILocation(line: 142, column: 8, scope: !11719, inlinedAt: !11938)
!12165 = !DILocation(line: 142, column: 7, scope: !11720, inlinedAt: !11938)
!12166 = !DILocation(line: 143, column: 18, scope: !11719, inlinedAt: !11938)
!12167 = !DILocation(line: 143, column: 22, scope: !11719, inlinedAt: !11938)
!12168 = !DILocation(line: 143, column: 4, scope: !11719, inlinedAt: !11938)
!12169 = !DILocation(line: 144, column: 12, scope: !11727, inlinedAt: !11938)
!12170 = !DILocation(line: 144, column: 12, scope: !11719, inlinedAt: !11938)
!12171 = !DILocation(line: 145, column: 4, scope: !11727, inlinedAt: !11938)
!12172 = !DILocation(line: 147, column: 4, scope: !11727, inlinedAt: !11938)
!12173 = !DILocation(line: 148, column: 3, scope: !11720, inlinedAt: !11938)
!12174 = !DILocation(line: 150, column: 6, scope: !11733, inlinedAt: !11938)
!12175 = !DILocation(line: 150, column: 6, scope: !11735, inlinedAt: !11938)
!12176 = !DILocation(line: 150, column: 6, scope: !11739, inlinedAt: !11938)
!12177 = !DILocation(line: 150, column: 6, scope: !11736, inlinedAt: !11938)
!12178 = !DILocation(line: 150, column: 6, scope: !11675, inlinedAt: !11938)
!12179 = !DILocation(line: 150, column: 6, scope: !11654, inlinedAt: !11938)
!12180 = !DILocation(line: 151, column: 3, scope: !11675, inlinedAt: !11938)
!12181 = !DILocation(line: 152, column: 20, scope: !11654, inlinedAt: !11938)
!12182 = !DILocation(line: 152, column: 26, scope: !11654, inlinedAt: !11938)
!12183 = !DILocation(line: 152, column: 33, scope: !11654, inlinedAt: !11938)
!12184 = !DILocation(line: 152, column: 2, scope: !11654, inlinedAt: !11938)
!12185 = !DILocation(line: 153, column: 2, scope: !11654, inlinedAt: !11938)
!12186 = !DILocation(line: 154, column: 1, scope: !11654, inlinedAt: !11938)
!12187 = !DILocation(line: 191, column: 6, scope: !11662, inlinedAt: !11939)
!12188 = !DILocation(line: 192, column: 23, scope: !11660, inlinedAt: !11939)
!12189 = !DILocation(line: 192, column: 27, scope: !11660, inlinedAt: !11939)
!12190 = !DILocation(line: 192, column: 33, scope: !11660, inlinedAt: !11939)
!12191 = !DILocation(line: 192, column: 7, scope: !11660, inlinedAt: !11939)
!12192 = !DILocation(line: 192, column: 5, scope: !11660, inlinedAt: !11939)
!12193 = !DILocation(line: 192, column: 3, scope: !11660, inlinedAt: !11939)
!12194 = !DILocation(line: 193, column: 9, scope: !11662, inlinedAt: !11939)
!12195 = !DILocation(line: 363, column: 6, scope: !11940)
!12196 = !DILocation(line: 363, column: 6, scope: !11934)
!12197 = !DILocation(line: 364, column: 7, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 363, column: 59)
!12199 = !DILocation(line: 365, column: 3, scope: !12198)
!12200 = !DILocation(line: 368, column: 27, scope: !11934)
!12201 = !DILocation(line: 368, column: 34, scope: !11934)
!12202 = !DILocation(line: 368, column: 37, scope: !11934)
!12203 = !DILocation(line: 368, column: 21, scope: !11934)
!12204 = !DILocation(line: 368, column: 45, scope: !11934)
!12205 = !DILocation(line: 368, column: 52, scope: !11934)
!12206 = !DILocation(line: 368, column: 55, scope: !11934)
!12207 = !DILocation(line: 368, column: 43, scope: !11934)
!12208 = !DILocation(line: 368, column: 2, scope: !11934)
!12209 = !DILocation(line: 368, column: 9, scope: !11934)
!12210 = !DILocation(line: 368, column: 19, scope: !11934)
!12211 = !DILocation(line: 369, column: 6, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 369, column: 6)
!12213 = !DILocation(line: 369, column: 13, scope: !12212)
!12214 = !DILocation(line: 369, column: 23, scope: !12212)
!12215 = !DILocation(line: 369, column: 6, scope: !11934)
!12216 = !DILocation(line: 370, column: 7, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 369, column: 44)
!12218 = !DILocation(line: 371, column: 3, scope: !12217)
!12219 = !DILocation(line: 374, column: 7, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 374, column: 6)
!12221 = !DILocation(line: 374, column: 14, scope: !12220)
!12222 = !DILocation(line: 374, column: 6, scope: !11934)
!12223 = !DILocation(line: 375, column: 3, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12220, file: !3, line: 374, column: 25)
!12225 = !DILocation(line: 375, column: 10, scope: !12224)
!12226 = !DILocation(line: 375, column: 14, scope: !12224)
!12227 = !DILocation(line: 376, column: 10, scope: !12224)
!12228 = !DILocation(line: 376, column: 3, scope: !12224)
!12229 = !DILocation(line: 380, column: 6, scope: !11934)
!12230 = !DILocation(line: 380, column: 13, scope: !11934)
!12231 = !DILocation(line: 380, column: 16, scope: !11934)
!12232 = !DILocation(line: 379, column: 27, scope: !11934)
!12233 = !DILocation(line: 380, column: 26, scope: !11934)
!12234 = !DILocation(line: 380, column: 33, scope: !11934)
!12235 = !DILocation(line: 379, column: 15, scope: !11934)
!12236 = !DILocation(line: 379, column: 2, scope: !11934)
!12237 = !DILocation(line: 379, column: 9, scope: !11934)
!12238 = !DILocation(line: 379, column: 13, scope: !11934)
!12239 = !DILocation(line: 381, column: 13, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 381, column: 6)
!12241 = !DILocation(line: 381, column: 20, scope: !12240)
!12242 = !DILocation(line: 381, column: 6, scope: !12240)
!12243 = !DILocation(line: 381, column: 6, scope: !11934)
!12244 = !DILocation(line: 382, column: 17, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12240, file: !3, line: 381, column: 26)
!12246 = !DILocation(line: 382, column: 24, scope: !12245)
!12247 = !DILocation(line: 382, column: 9, scope: !12245)
!12248 = !DILocation(line: 382, column: 7, scope: !12245)
!12249 = !DILocation(line: 383, column: 3, scope: !12245)
!12250 = !DILocation(line: 386, column: 9, scope: !11934)
!12251 = !DILocation(line: 386, column: 2, scope: !11934)
!12252 = !DILabel(scope: !11934, name: "idata_err", file: !3, line: 388)
!12253 = !DILocation(line: 388, column: 1, scope: !11934)
!12254 = !DILocation(line: 389, column: 8, scope: !11934)
!12255 = !DILocation(line: 389, column: 2, scope: !11934)
!12256 = !DILabel(scope: !11934, name: "out", file: !3, line: 390)
!12257 = !DILocation(line: 390, column: 1, scope: !11934)
!12258 = !DILocation(line: 391, column: 17, scope: !11934)
!12259 = !DILocation(line: 391, column: 9, scope: !11934)
!12260 = !DILocation(line: 391, column: 2, scope: !11934)
!12261 = !DILocation(line: 392, column: 1, scope: !11934)
!12262 = distinct !DISubprogram(name: "mmc_blk_ioctl_copy_to_user", scope: !3, file: !3, line: 394, type: !12263, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12263 = !DISubroutineType(types: !12264)
!12264 = !{!324, !5476, !6698}
!12265 = !DILocation(line: 138, column: 29, scope: !11654, inlinedAt: !12266)
!12266 = distinct !DILocation(line: 199, column: 6, scope: !12267, inlinedAt: !12269)
!12267 = distinct !DILexicalBlock(scope: !12268, file: !11661, line: 199, column: 6)
!12268 = distinct !DISubprogram(name: "copy_to_user", scope: !11661, file: !11661, line: 197, type: !11663, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12269 = distinct !DILocation(line: 404, column: 7, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 404, column: 7)
!12271 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 403, column: 29)
!12272 = distinct !DILexicalBlock(scope: !12262, file: !3, line: 403, column: 6)
!12273 = !DILocation(line: 138, column: 42, scope: !11654, inlinedAt: !12266)
!12274 = !DILocation(line: 138, column: 54, scope: !11654, inlinedAt: !12266)
!12275 = !DILocation(line: 140, column: 6, scope: !11654, inlinedAt: !12266)
!12276 = !DILocation(line: 150, column: 6, scope: !11674, inlinedAt: !12266)
!12277 = !DILocalVariable(name: "to", arg: 1, scope: !12268, file: !11661, line: 197, type: !257)
!12278 = !DILocation(line: 197, column: 27, scope: !12268, inlinedAt: !12269)
!12279 = !DILocalVariable(name: "from", arg: 2, scope: !12268, file: !11661, line: 197, type: !3283)
!12280 = !DILocation(line: 197, column: 43, scope: !12268, inlinedAt: !12269)
!12281 = !DILocalVariable(name: "n", arg: 3, scope: !12268, file: !11661, line: 197, type: !389)
!12282 = !DILocation(line: 197, column: 63, scope: !12268, inlinedAt: !12269)
!12283 = !DILocation(line: 138, column: 29, scope: !11654, inlinedAt: !12284)
!12284 = distinct !DILocation(line: 199, column: 6, scope: !12267, inlinedAt: !12285)
!12285 = distinct !DILocation(line: 399, column: 6, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12262, file: !3, line: 399, column: 6)
!12287 = !DILocation(line: 138, column: 42, scope: !11654, inlinedAt: !12284)
!12288 = !DILocation(line: 138, column: 54, scope: !11654, inlinedAt: !12284)
!12289 = !DILocation(line: 140, column: 6, scope: !11654, inlinedAt: !12284)
!12290 = !DILocation(line: 150, column: 6, scope: !11674, inlinedAt: !12284)
!12291 = !DILocation(line: 197, column: 27, scope: !12268, inlinedAt: !12285)
!12292 = !DILocation(line: 197, column: 43, scope: !12268, inlinedAt: !12285)
!12293 = !DILocation(line: 197, column: 63, scope: !12268, inlinedAt: !12285)
!12294 = !DILocalVariable(name: "ic_ptr", arg: 1, scope: !12262, file: !3, line: 394, type: !5476)
!12295 = !DILocation(line: 394, column: 66, scope: !12262)
!12296 = !DILocalVariable(name: "idata", arg: 2, scope: !12262, file: !3, line: 395, type: !6698)
!12297 = !DILocation(line: 395, column: 36, scope: !12262)
!12298 = !DILocalVariable(name: "ic", scope: !12262, file: !3, line: 397, type: !5476)
!12299 = !DILocation(line: 397, column: 22, scope: !12262)
!12300 = !DILocation(line: 397, column: 28, scope: !12262)
!12301 = !DILocation(line: 397, column: 35, scope: !12262)
!12302 = !DILocation(line: 399, column: 21, scope: !12286)
!12303 = !DILocation(line: 399, column: 29, scope: !12286)
!12304 = !DILocation(line: 399, column: 19, scope: !12286)
!12305 = !DILocation(line: 399, column: 40, scope: !12286)
!12306 = !DILocation(line: 399, column: 44, scope: !12286)
!12307 = !DILocation(line: 199, column: 6, scope: !12267, inlinedAt: !12285)
!12308 = !DILocation(line: 141, column: 6, scope: !11715, inlinedAt: !12284)
!12309 = !DILocation(line: 0, scope: !11715, inlinedAt: !12284)
!12310 = !DILocation(line: 141, column: 6, scope: !11654, inlinedAt: !12284)
!12311 = !DILocation(line: 142, column: 29, scope: !11719, inlinedAt: !12284)
!12312 = !DILocation(line: 142, column: 8, scope: !11719, inlinedAt: !12284)
!12313 = !DILocation(line: 142, column: 7, scope: !11720, inlinedAt: !12284)
!12314 = !DILocation(line: 143, column: 18, scope: !11719, inlinedAt: !12284)
!12315 = !DILocation(line: 143, column: 22, scope: !11719, inlinedAt: !12284)
!12316 = !DILocation(line: 143, column: 4, scope: !11719, inlinedAt: !12284)
!12317 = !DILocation(line: 144, column: 12, scope: !11727, inlinedAt: !12284)
!12318 = !DILocation(line: 144, column: 12, scope: !11719, inlinedAt: !12284)
!12319 = !DILocation(line: 145, column: 4, scope: !11727, inlinedAt: !12284)
!12320 = !DILocation(line: 147, column: 4, scope: !11727, inlinedAt: !12284)
!12321 = !DILocation(line: 148, column: 3, scope: !11720, inlinedAt: !12284)
!12322 = !DILocation(line: 150, column: 6, scope: !11733, inlinedAt: !12284)
!12323 = !DILocation(line: 150, column: 6, scope: !11735, inlinedAt: !12284)
!12324 = !DILocation(line: 150, column: 6, scope: !11739, inlinedAt: !12284)
!12325 = !DILocation(line: 150, column: 6, scope: !11736, inlinedAt: !12284)
!12326 = !DILocation(line: 150, column: 6, scope: !11675, inlinedAt: !12284)
!12327 = !DILocation(line: 150, column: 6, scope: !11654, inlinedAt: !12284)
!12328 = !DILocation(line: 151, column: 3, scope: !11675, inlinedAt: !12284)
!12329 = !DILocation(line: 152, column: 20, scope: !11654, inlinedAt: !12284)
!12330 = !DILocation(line: 152, column: 26, scope: !11654, inlinedAt: !12284)
!12331 = !DILocation(line: 152, column: 33, scope: !11654, inlinedAt: !12284)
!12332 = !DILocation(line: 152, column: 2, scope: !11654, inlinedAt: !12284)
!12333 = !DILocation(line: 153, column: 2, scope: !11654, inlinedAt: !12284)
!12334 = !DILocation(line: 154, column: 1, scope: !11654, inlinedAt: !12284)
!12335 = !DILocation(line: 199, column: 6, scope: !12268, inlinedAt: !12285)
!12336 = !DILocation(line: 200, column: 21, scope: !12267, inlinedAt: !12285)
!12337 = !DILocation(line: 200, column: 25, scope: !12267, inlinedAt: !12285)
!12338 = !DILocation(line: 200, column: 31, scope: !12267, inlinedAt: !12285)
!12339 = !DILocation(line: 200, column: 7, scope: !12267, inlinedAt: !12285)
!12340 = !DILocation(line: 200, column: 5, scope: !12267, inlinedAt: !12285)
!12341 = !DILocation(line: 200, column: 3, scope: !12267, inlinedAt: !12285)
!12342 = !DILocation(line: 201, column: 9, scope: !12268, inlinedAt: !12285)
!12343 = !DILocation(line: 399, column: 6, scope: !12286)
!12344 = !DILocation(line: 399, column: 6, scope: !12262)
!12345 = !DILocation(line: 401, column: 3, scope: !12286)
!12346 = !DILocation(line: 403, column: 7, scope: !12272)
!12347 = !DILocation(line: 403, column: 14, scope: !12272)
!12348 = !DILocation(line: 403, column: 17, scope: !12272)
!12349 = !DILocation(line: 403, column: 6, scope: !12262)
!12350 = !DILocation(line: 404, column: 50, scope: !12270)
!12351 = !DILocation(line: 404, column: 54, scope: !12270)
!12352 = !DILocation(line: 404, column: 20, scope: !12270)
!12353 = !DILocation(line: 405, column: 6, scope: !12270)
!12354 = !DILocation(line: 405, column: 13, scope: !12270)
!12355 = !DILocation(line: 405, column: 18, scope: !12270)
!12356 = !DILocation(line: 405, column: 25, scope: !12270)
!12357 = !DILocation(line: 199, column: 6, scope: !12267, inlinedAt: !12269)
!12358 = !DILocation(line: 141, column: 6, scope: !11715, inlinedAt: !12266)
!12359 = !DILocation(line: 0, scope: !11715, inlinedAt: !12266)
!12360 = !DILocation(line: 141, column: 6, scope: !11654, inlinedAt: !12266)
!12361 = !DILocation(line: 142, column: 29, scope: !11719, inlinedAt: !12266)
!12362 = !DILocation(line: 142, column: 8, scope: !11719, inlinedAt: !12266)
!12363 = !DILocation(line: 142, column: 7, scope: !11720, inlinedAt: !12266)
!12364 = !DILocation(line: 143, column: 18, scope: !11719, inlinedAt: !12266)
!12365 = !DILocation(line: 143, column: 22, scope: !11719, inlinedAt: !12266)
!12366 = !DILocation(line: 143, column: 4, scope: !11719, inlinedAt: !12266)
!12367 = !DILocation(line: 144, column: 12, scope: !11727, inlinedAt: !12266)
!12368 = !DILocation(line: 144, column: 12, scope: !11719, inlinedAt: !12266)
!12369 = !DILocation(line: 145, column: 4, scope: !11727, inlinedAt: !12266)
!12370 = !DILocation(line: 147, column: 4, scope: !11727, inlinedAt: !12266)
!12371 = !DILocation(line: 148, column: 3, scope: !11720, inlinedAt: !12266)
!12372 = !DILocation(line: 150, column: 6, scope: !11733, inlinedAt: !12266)
!12373 = !DILocation(line: 150, column: 6, scope: !11735, inlinedAt: !12266)
!12374 = !DILocation(line: 150, column: 6, scope: !11739, inlinedAt: !12266)
!12375 = !DILocation(line: 150, column: 6, scope: !11736, inlinedAt: !12266)
!12376 = !DILocation(line: 150, column: 6, scope: !11675, inlinedAt: !12266)
!12377 = !DILocation(line: 150, column: 6, scope: !11654, inlinedAt: !12266)
!12378 = !DILocation(line: 151, column: 3, scope: !11675, inlinedAt: !12266)
!12379 = !DILocation(line: 152, column: 20, scope: !11654, inlinedAt: !12266)
!12380 = !DILocation(line: 152, column: 26, scope: !11654, inlinedAt: !12266)
!12381 = !DILocation(line: 152, column: 33, scope: !11654, inlinedAt: !12266)
!12382 = !DILocation(line: 152, column: 2, scope: !11654, inlinedAt: !12266)
!12383 = !DILocation(line: 153, column: 2, scope: !11654, inlinedAt: !12266)
!12384 = !DILocation(line: 154, column: 1, scope: !11654, inlinedAt: !12266)
!12385 = !DILocation(line: 199, column: 6, scope: !12268, inlinedAt: !12269)
!12386 = !DILocation(line: 200, column: 21, scope: !12267, inlinedAt: !12269)
!12387 = !DILocation(line: 200, column: 25, scope: !12267, inlinedAt: !12269)
!12388 = !DILocation(line: 200, column: 31, scope: !12267, inlinedAt: !12269)
!12389 = !DILocation(line: 200, column: 7, scope: !12267, inlinedAt: !12269)
!12390 = !DILocation(line: 200, column: 5, scope: !12267, inlinedAt: !12269)
!12391 = !DILocation(line: 200, column: 3, scope: !12267, inlinedAt: !12269)
!12392 = !DILocation(line: 201, column: 9, scope: !12268, inlinedAt: !12269)
!12393 = !DILocation(line: 404, column: 7, scope: !12270)
!12394 = !DILocation(line: 404, column: 7, scope: !12271)
!12395 = !DILocation(line: 406, column: 4, scope: !12270)
!12396 = !DILocation(line: 407, column: 2, scope: !12271)
!12397 = !DILocation(line: 409, column: 2, scope: !12262)
!12398 = !DILocation(line: 410, column: 1, scope: !12262)
!12399 = distinct !DISubprogram(name: "copy_overflow", scope: !11655, file: !11655, line: 132, type: !12400, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12400 = !DISubroutineType(types: !12401)
!12401 = !{null, !324, !389}
!12402 = !DILocalVariable(name: "size", arg: 1, scope: !12399, file: !11655, line: 132, type: !324)
!12403 = !DILocation(line: 132, column: 38, scope: !12399)
!12404 = !DILocalVariable(name: "count", arg: 2, scope: !12399, file: !11655, line: 132, type: !389)
!12405 = !DILocation(line: 132, column: 58, scope: !12399)
!12406 = !DILocalVariable(name: "__ret_warn_on", scope: !12407, file: !11655, line: 134, type: !324)
!12407 = distinct !DILexicalBlock(scope: !12399, file: !11655, line: 134, column: 2)
!12408 = !DILocation(line: 134, column: 2, scope: !12407)
!12409 = !DILocation(line: 134, column: 2, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12407, file: !11655, line: 134, column: 2)
!12411 = !DILocation(line: 134, column: 2, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12410, file: !11655, line: 134, column: 2)
!12413 = !DILocation(line: 134, column: 2, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12412, file: !11655, line: 134, column: 2)
!12415 = !DILocation(line: 134, column: 2, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12412, file: !11655, line: 134, column: 2)
!12417 = !DILocation(line: 134, column: 2, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12416, file: !11655, line: 134, column: 2)
!12419 = !DILocation(line: 134, column: 2, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12416, file: !11655, line: 134, column: 2)
!12421 = !{i32 -2145461808, i32 -2145461779, i32 -2145461733, i32 -2145461675, i32 -2145461621, i32 -2145461567, i32 -2145461512, i32 -2145461481}
!12422 = !DILocation(line: 134, column: 2, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12416, file: !11655, line: 134, column: 2)
!12424 = !{i32 -2145461061, i32 -2145461054, i32 -2145461002, i32 -2145460971, i32 -2145460941}
!12425 = !DILocation(line: 134, column: 2, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12416, file: !11655, line: 134, column: 2)
!12427 = !DILocation(line: 134, column: 2, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12412, file: !11655, line: 134, column: 2)
!12429 = !DILocation(line: 135, column: 1, scope: !12399)
!12430 = distinct !DISubprogram(name: "check_object_size", scope: !11655, file: !11655, line: 122, type: !12431, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12431 = !DISubroutineType(types: !12432)
!12432 = !{null, !3283, !389, !555}
!12433 = !DILocalVariable(name: "ptr", arg: 1, scope: !12430, file: !11655, line: 122, type: !3283)
!12434 = !DILocation(line: 122, column: 50, scope: !12430)
!12435 = !DILocalVariable(name: "n", arg: 2, scope: !12430, file: !11655, line: 122, type: !389)
!12436 = !DILocation(line: 122, column: 69, scope: !12430)
!12437 = !DILocalVariable(name: "to_user", arg: 3, scope: !12430, file: !11655, line: 123, type: !555)
!12438 = !DILocation(line: 123, column: 15, scope: !12430)
!12439 = !DILocation(line: 124, column: 3, scope: !12430)
!12440 = distinct !DISubprogram(name: "kcalloc", scope: !153, file: !153, line: 601, type: !12441, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12441 = !DISubroutineType(types: !12442)
!12442 = !{!257, !386, !386, !861}
!12443 = !DILocalVariable(name: "n", arg: 1, scope: !12440, file: !153, line: 601, type: !386)
!12444 = !DILocation(line: 601, column: 36, scope: !12440)
!12445 = !DILocalVariable(name: "size", arg: 2, scope: !12440, file: !153, line: 601, type: !386)
!12446 = !DILocation(line: 601, column: 46, scope: !12440)
!12447 = !DILocalVariable(name: "flags", arg: 3, scope: !12440, file: !153, line: 601, type: !861)
!12448 = !DILocation(line: 601, column: 58, scope: !12440)
!12449 = !DILocation(line: 603, column: 23, scope: !12440)
!12450 = !DILocation(line: 603, column: 26, scope: !12440)
!12451 = !DILocation(line: 603, column: 32, scope: !12440)
!12452 = !DILocation(line: 603, column: 38, scope: !12440)
!12453 = !DILocation(line: 603, column: 9, scope: !12440)
!12454 = !DILocation(line: 603, column: 2, scope: !12440)
!12455 = distinct !DISubprogram(name: "kmalloc_array", scope: !153, file: !153, line: 584, type: !12441, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12456 = !DILocation(line: 445, column: 72, scope: !7571, inlinedAt: !12457)
!12457 = distinct !DILocation(line: 552, column: 10, scope: !7576, inlinedAt: !12458)
!12458 = distinct !DILocation(line: 591, column: 10, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12455, file: !153, line: 590, column: 6)
!12460 = !DILocation(line: 446, column: 9, scope: !7571, inlinedAt: !12457)
!12461 = !DILocation(line: 446, column: 23, scope: !7571, inlinedAt: !12457)
!12462 = !DILocation(line: 448, column: 8, scope: !7571, inlinedAt: !12457)
!12463 = !DILocation(line: 318, column: 67, scope: !7589, inlinedAt: !12464)
!12464 = distinct !DILocation(line: 553, column: 20, scope: !7576, inlinedAt: !12458)
!12465 = !DILocation(line: 346, column: 58, scope: !7595, inlinedAt: !12466)
!12466 = distinct !DILocation(line: 547, column: 11, scope: !7576, inlinedAt: !12458)
!12467 = !DILocation(line: 472, column: 28, scope: !7601, inlinedAt: !12468)
!12468 = distinct !DILocation(line: 481, column: 9, scope: !7606, inlinedAt: !12469)
!12469 = distinct !DILocation(line: 545, column: 11, scope: !7608, inlinedAt: !12458)
!12470 = !DILocation(line: 472, column: 40, scope: !7601, inlinedAt: !12468)
!12471 = !DILocation(line: 472, column: 60, scope: !7601, inlinedAt: !12468)
!12472 = !DILocation(line: 478, column: 51, scope: !7606, inlinedAt: !12469)
!12473 = !DILocation(line: 478, column: 63, scope: !7606, inlinedAt: !12469)
!12474 = !DILocation(line: 480, column: 15, scope: !7606, inlinedAt: !12469)
!12475 = !DILocation(line: 538, column: 45, scope: !7578, inlinedAt: !12458)
!12476 = !DILocation(line: 538, column: 57, scope: !7578, inlinedAt: !12458)
!12477 = !DILocation(line: 542, column: 16, scope: !7576, inlinedAt: !12458)
!12478 = !DILocalVariable(name: "n", arg: 1, scope: !12455, file: !153, line: 584, type: !386)
!12479 = !DILocation(line: 584, column: 42, scope: !12455)
!12480 = !DILocalVariable(name: "size", arg: 2, scope: !12455, file: !153, line: 584, type: !386)
!12481 = !DILocation(line: 584, column: 52, scope: !12455)
!12482 = !DILocalVariable(name: "flags", arg: 3, scope: !12455, file: !153, line: 584, type: !861)
!12483 = !DILocation(line: 584, column: 64, scope: !12455)
!12484 = !DILocalVariable(name: "bytes", scope: !12455, file: !153, line: 586, type: !386)
!12485 = !DILocation(line: 586, column: 9, scope: !12455)
!12486 = !DILocalVariable(name: "__a", scope: !12487, file: !153, line: 588, type: !386)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !153, line: 588, column: 6)
!12488 = distinct !DILexicalBlock(scope: !12455, file: !153, line: 588, column: 6)
!12489 = !DILocation(line: 588, column: 6, scope: !12487)
!12490 = !DILocalVariable(name: "__b", scope: !12487, file: !153, line: 588, type: !386)
!12491 = !DILocalVariable(name: "__d", scope: !12487, file: !153, line: 588, type: !12492)
!12492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!12493 = !DILocation(line: 588, column: 6, scope: !12488)
!12494 = !DILocation(line: 588, column: 6, scope: !12455)
!12495 = !DILocation(line: 589, column: 3, scope: !12488)
!12496 = !DILocation(line: 590, column: 27, scope: !12459)
!12497 = !DILocation(line: 590, column: 6, scope: !12459)
!12498 = !DILocation(line: 590, column: 30, scope: !12459)
!12499 = !DILocation(line: 590, column: 54, scope: !12459)
!12500 = !DILocation(line: 590, column: 33, scope: !12459)
!12501 = !DILocation(line: 590, column: 6, scope: !12455)
!12502 = !DILocation(line: 591, column: 18, scope: !12459)
!12503 = !DILocation(line: 591, column: 25, scope: !12459)
!12504 = !DILocation(line: 540, column: 27, scope: !7577, inlinedAt: !12458)
!12505 = !DILocation(line: 540, column: 6, scope: !7577, inlinedAt: !12458)
!12506 = !DILocation(line: 540, column: 6, scope: !7578, inlinedAt: !12458)
!12507 = !DILocation(line: 544, column: 7, scope: !7608, inlinedAt: !12458)
!12508 = !DILocation(line: 544, column: 12, scope: !7608, inlinedAt: !12458)
!12509 = !DILocation(line: 544, column: 7, scope: !7576, inlinedAt: !12458)
!12510 = !DILocation(line: 545, column: 25, scope: !7608, inlinedAt: !12458)
!12511 = !DILocation(line: 545, column: 31, scope: !7608, inlinedAt: !12458)
!12512 = !DILocation(line: 480, column: 33, scope: !7606, inlinedAt: !12469)
!12513 = !DILocation(line: 480, column: 23, scope: !7606, inlinedAt: !12469)
!12514 = !DILocation(line: 481, column: 29, scope: !7606, inlinedAt: !12469)
!12515 = !DILocation(line: 481, column: 35, scope: !7606, inlinedAt: !12469)
!12516 = !DILocation(line: 481, column: 42, scope: !7606, inlinedAt: !12469)
!12517 = !DILocation(line: 474, column: 23, scope: !7601, inlinedAt: !12468)
!12518 = !DILocation(line: 474, column: 29, scope: !7601, inlinedAt: !12468)
!12519 = !DILocation(line: 474, column: 36, scope: !7601, inlinedAt: !12468)
!12520 = !DILocation(line: 474, column: 9, scope: !7601, inlinedAt: !12468)
!12521 = !DILocation(line: 545, column: 4, scope: !7608, inlinedAt: !12458)
!12522 = !DILocation(line: 547, column: 25, scope: !7576, inlinedAt: !12458)
!12523 = !DILocation(line: 348, column: 7, scope: !7713, inlinedAt: !12466)
!12524 = !DILocation(line: 348, column: 6, scope: !7595, inlinedAt: !12466)
!12525 = !DILocation(line: 349, column: 3, scope: !7713, inlinedAt: !12466)
!12526 = !DILocation(line: 351, column: 6, scope: !7717, inlinedAt: !12466)
!12527 = !DILocation(line: 351, column: 11, scope: !7717, inlinedAt: !12466)
!12528 = !DILocation(line: 351, column: 6, scope: !7595, inlinedAt: !12466)
!12529 = !DILocation(line: 352, column: 3, scope: !7717, inlinedAt: !12466)
!12530 = !DILocation(line: 354, column: 32, scope: !7722, inlinedAt: !12466)
!12531 = !DILocation(line: 354, column: 37, scope: !7722, inlinedAt: !12466)
!12532 = !DILocation(line: 354, column: 42, scope: !7722, inlinedAt: !12466)
!12533 = !DILocation(line: 354, column: 45, scope: !7722, inlinedAt: !12466)
!12534 = !DILocation(line: 354, column: 50, scope: !7722, inlinedAt: !12466)
!12535 = !DILocation(line: 354, column: 6, scope: !7595, inlinedAt: !12466)
!12536 = !DILocation(line: 355, column: 3, scope: !7722, inlinedAt: !12466)
!12537 = !DILocation(line: 356, column: 32, scope: !7730, inlinedAt: !12466)
!12538 = !DILocation(line: 356, column: 37, scope: !7730, inlinedAt: !12466)
!12539 = !DILocation(line: 356, column: 43, scope: !7730, inlinedAt: !12466)
!12540 = !DILocation(line: 356, column: 46, scope: !7730, inlinedAt: !12466)
!12541 = !DILocation(line: 356, column: 51, scope: !7730, inlinedAt: !12466)
!12542 = !DILocation(line: 356, column: 6, scope: !7595, inlinedAt: !12466)
!12543 = !DILocation(line: 357, column: 3, scope: !7730, inlinedAt: !12466)
!12544 = !DILocation(line: 358, column: 6, scope: !7738, inlinedAt: !12466)
!12545 = !DILocation(line: 358, column: 11, scope: !7738, inlinedAt: !12466)
!12546 = !DILocation(line: 358, column: 6, scope: !7595, inlinedAt: !12466)
!12547 = !DILocation(line: 358, column: 26, scope: !7738, inlinedAt: !12466)
!12548 = !DILocation(line: 359, column: 6, scope: !7743, inlinedAt: !12466)
!12549 = !DILocation(line: 359, column: 11, scope: !7743, inlinedAt: !12466)
!12550 = !DILocation(line: 359, column: 6, scope: !7595, inlinedAt: !12466)
!12551 = !DILocation(line: 359, column: 26, scope: !7743, inlinedAt: !12466)
!12552 = !DILocation(line: 360, column: 6, scope: !7748, inlinedAt: !12466)
!12553 = !DILocation(line: 360, column: 11, scope: !7748, inlinedAt: !12466)
!12554 = !DILocation(line: 360, column: 6, scope: !7595, inlinedAt: !12466)
!12555 = !DILocation(line: 360, column: 26, scope: !7748, inlinedAt: !12466)
!12556 = !DILocation(line: 361, column: 6, scope: !7753, inlinedAt: !12466)
!12557 = !DILocation(line: 361, column: 11, scope: !7753, inlinedAt: !12466)
!12558 = !DILocation(line: 361, column: 6, scope: !7595, inlinedAt: !12466)
!12559 = !DILocation(line: 361, column: 26, scope: !7753, inlinedAt: !12466)
!12560 = !DILocation(line: 362, column: 6, scope: !7758, inlinedAt: !12466)
!12561 = !DILocation(line: 362, column: 11, scope: !7758, inlinedAt: !12466)
!12562 = !DILocation(line: 362, column: 6, scope: !7595, inlinedAt: !12466)
!12563 = !DILocation(line: 362, column: 26, scope: !7758, inlinedAt: !12466)
!12564 = !DILocation(line: 363, column: 6, scope: !7763, inlinedAt: !12466)
!12565 = !DILocation(line: 363, column: 11, scope: !7763, inlinedAt: !12466)
!12566 = !DILocation(line: 363, column: 6, scope: !7595, inlinedAt: !12466)
!12567 = !DILocation(line: 363, column: 26, scope: !7763, inlinedAt: !12466)
!12568 = !DILocation(line: 364, column: 6, scope: !7768, inlinedAt: !12466)
!12569 = !DILocation(line: 364, column: 11, scope: !7768, inlinedAt: !12466)
!12570 = !DILocation(line: 364, column: 6, scope: !7595, inlinedAt: !12466)
!12571 = !DILocation(line: 364, column: 26, scope: !7768, inlinedAt: !12466)
!12572 = !DILocation(line: 365, column: 6, scope: !7773, inlinedAt: !12466)
!12573 = !DILocation(line: 365, column: 11, scope: !7773, inlinedAt: !12466)
!12574 = !DILocation(line: 365, column: 6, scope: !7595, inlinedAt: !12466)
!12575 = !DILocation(line: 365, column: 26, scope: !7773, inlinedAt: !12466)
!12576 = !DILocation(line: 366, column: 6, scope: !7778, inlinedAt: !12466)
!12577 = !DILocation(line: 366, column: 11, scope: !7778, inlinedAt: !12466)
!12578 = !DILocation(line: 366, column: 6, scope: !7595, inlinedAt: !12466)
!12579 = !DILocation(line: 366, column: 26, scope: !7778, inlinedAt: !12466)
!12580 = !DILocation(line: 367, column: 6, scope: !7783, inlinedAt: !12466)
!12581 = !DILocation(line: 367, column: 11, scope: !7783, inlinedAt: !12466)
!12582 = !DILocation(line: 367, column: 6, scope: !7595, inlinedAt: !12466)
!12583 = !DILocation(line: 367, column: 26, scope: !7783, inlinedAt: !12466)
!12584 = !DILocation(line: 368, column: 6, scope: !7788, inlinedAt: !12466)
!12585 = !DILocation(line: 368, column: 11, scope: !7788, inlinedAt: !12466)
!12586 = !DILocation(line: 368, column: 6, scope: !7595, inlinedAt: !12466)
!12587 = !DILocation(line: 368, column: 26, scope: !7788, inlinedAt: !12466)
!12588 = !DILocation(line: 369, column: 6, scope: !7793, inlinedAt: !12466)
!12589 = !DILocation(line: 369, column: 11, scope: !7793, inlinedAt: !12466)
!12590 = !DILocation(line: 369, column: 6, scope: !7595, inlinedAt: !12466)
!12591 = !DILocation(line: 369, column: 26, scope: !7793, inlinedAt: !12466)
!12592 = !DILocation(line: 370, column: 6, scope: !7798, inlinedAt: !12466)
!12593 = !DILocation(line: 370, column: 11, scope: !7798, inlinedAt: !12466)
!12594 = !DILocation(line: 370, column: 6, scope: !7595, inlinedAt: !12466)
!12595 = !DILocation(line: 370, column: 26, scope: !7798, inlinedAt: !12466)
!12596 = !DILocation(line: 371, column: 6, scope: !7803, inlinedAt: !12466)
!12597 = !DILocation(line: 371, column: 11, scope: !7803, inlinedAt: !12466)
!12598 = !DILocation(line: 371, column: 6, scope: !7595, inlinedAt: !12466)
!12599 = !DILocation(line: 371, column: 26, scope: !7803, inlinedAt: !12466)
!12600 = !DILocation(line: 372, column: 6, scope: !7808, inlinedAt: !12466)
!12601 = !DILocation(line: 372, column: 11, scope: !7808, inlinedAt: !12466)
!12602 = !DILocation(line: 372, column: 6, scope: !7595, inlinedAt: !12466)
!12603 = !DILocation(line: 372, column: 26, scope: !7808, inlinedAt: !12466)
!12604 = !DILocation(line: 373, column: 6, scope: !7813, inlinedAt: !12466)
!12605 = !DILocation(line: 373, column: 11, scope: !7813, inlinedAt: !12466)
!12606 = !DILocation(line: 373, column: 6, scope: !7595, inlinedAt: !12466)
!12607 = !DILocation(line: 373, column: 26, scope: !7813, inlinedAt: !12466)
!12608 = !DILocation(line: 374, column: 6, scope: !7818, inlinedAt: !12466)
!12609 = !DILocation(line: 374, column: 11, scope: !7818, inlinedAt: !12466)
!12610 = !DILocation(line: 374, column: 6, scope: !7595, inlinedAt: !12466)
!12611 = !DILocation(line: 374, column: 26, scope: !7818, inlinedAt: !12466)
!12612 = !DILocation(line: 375, column: 6, scope: !7823, inlinedAt: !12466)
!12613 = !DILocation(line: 375, column: 11, scope: !7823, inlinedAt: !12466)
!12614 = !DILocation(line: 375, column: 6, scope: !7595, inlinedAt: !12466)
!12615 = !DILocation(line: 375, column: 27, scope: !7823, inlinedAt: !12466)
!12616 = !DILocation(line: 376, column: 6, scope: !7828, inlinedAt: !12466)
!12617 = !DILocation(line: 376, column: 11, scope: !7828, inlinedAt: !12466)
!12618 = !DILocation(line: 376, column: 6, scope: !7595, inlinedAt: !12466)
!12619 = !DILocation(line: 376, column: 32, scope: !7828, inlinedAt: !12466)
!12620 = !DILocation(line: 377, column: 6, scope: !7833, inlinedAt: !12466)
!12621 = !DILocation(line: 377, column: 11, scope: !7833, inlinedAt: !12466)
!12622 = !DILocation(line: 377, column: 6, scope: !7595, inlinedAt: !12466)
!12623 = !DILocation(line: 377, column: 32, scope: !7833, inlinedAt: !12466)
!12624 = !DILocation(line: 378, column: 6, scope: !7838, inlinedAt: !12466)
!12625 = !DILocation(line: 378, column: 11, scope: !7838, inlinedAt: !12466)
!12626 = !DILocation(line: 378, column: 6, scope: !7595, inlinedAt: !12466)
!12627 = !DILocation(line: 378, column: 32, scope: !7838, inlinedAt: !12466)
!12628 = !DILocation(line: 379, column: 6, scope: !7843, inlinedAt: !12466)
!12629 = !DILocation(line: 379, column: 11, scope: !7843, inlinedAt: !12466)
!12630 = !DILocation(line: 379, column: 6, scope: !7595, inlinedAt: !12466)
!12631 = !DILocation(line: 379, column: 33, scope: !7843, inlinedAt: !12466)
!12632 = !DILocation(line: 380, column: 6, scope: !7848, inlinedAt: !12466)
!12633 = !DILocation(line: 380, column: 11, scope: !7848, inlinedAt: !12466)
!12634 = !DILocation(line: 380, column: 6, scope: !7595, inlinedAt: !12466)
!12635 = !DILocation(line: 380, column: 33, scope: !7848, inlinedAt: !12466)
!12636 = !DILocation(line: 381, column: 6, scope: !7853, inlinedAt: !12466)
!12637 = !DILocation(line: 381, column: 11, scope: !7853, inlinedAt: !12466)
!12638 = !DILocation(line: 381, column: 6, scope: !7595, inlinedAt: !12466)
!12639 = !DILocation(line: 381, column: 33, scope: !7853, inlinedAt: !12466)
!12640 = !DILocation(line: 382, column: 2, scope: !7858, inlinedAt: !12466)
!12641 = !DILocation(line: 382, column: 2, scope: !7862, inlinedAt: !12466)
!12642 = !DILocation(line: 382, column: 2, scope: !7863, inlinedAt: !12466)
!12643 = !DILocation(line: 386, column: 1, scope: !7595, inlinedAt: !12466)
!12644 = !DILocation(line: 547, column: 9, scope: !7576, inlinedAt: !12458)
!12645 = !DILocation(line: 549, column: 8, scope: !7869, inlinedAt: !12458)
!12646 = !DILocation(line: 549, column: 7, scope: !7576, inlinedAt: !12458)
!12647 = !DILocation(line: 550, column: 4, scope: !7869, inlinedAt: !12458)
!12648 = !DILocation(line: 553, column: 33, scope: !7576, inlinedAt: !12458)
!12649 = !DILocation(line: 325, column: 6, scope: !7874, inlinedAt: !12464)
!12650 = !DILocation(line: 325, column: 6, scope: !7589, inlinedAt: !12464)
!12651 = !DILocation(line: 326, column: 3, scope: !7874, inlinedAt: !12464)
!12652 = !DILocation(line: 332, column: 9, scope: !7589, inlinedAt: !12464)
!12653 = !DILocation(line: 332, column: 15, scope: !7589, inlinedAt: !12464)
!12654 = !DILocation(line: 332, column: 2, scope: !7589, inlinedAt: !12464)
!12655 = !DILocation(line: 336, column: 1, scope: !7589, inlinedAt: !12464)
!12656 = !DILocation(line: 553, column: 5, scope: !7576, inlinedAt: !12458)
!12657 = !DILocation(line: 553, column: 41, scope: !7576, inlinedAt: !12458)
!12658 = !DILocation(line: 554, column: 5, scope: !7576, inlinedAt: !12458)
!12659 = !DILocation(line: 554, column: 12, scope: !7576, inlinedAt: !12458)
!12660 = !DILocation(line: 448, column: 31, scope: !7571, inlinedAt: !12457)
!12661 = !DILocation(line: 448, column: 34, scope: !7571, inlinedAt: !12457)
!12662 = !DILocation(line: 448, column: 14, scope: !7571, inlinedAt: !12457)
!12663 = !DILocation(line: 450, column: 22, scope: !7571, inlinedAt: !12457)
!12664 = !DILocation(line: 450, column: 25, scope: !7571, inlinedAt: !12457)
!12665 = !DILocation(line: 450, column: 30, scope: !7571, inlinedAt: !12457)
!12666 = !DILocation(line: 450, column: 36, scope: !7571, inlinedAt: !12457)
!12667 = !DILocation(line: 450, column: 8, scope: !7571, inlinedAt: !12457)
!12668 = !DILocation(line: 450, column: 6, scope: !7571, inlinedAt: !12457)
!12669 = !DILocation(line: 451, column: 9, scope: !7571, inlinedAt: !12457)
!12670 = !DILocation(line: 552, column: 3, scope: !7576, inlinedAt: !12458)
!12671 = !DILocation(line: 557, column: 19, scope: !7578, inlinedAt: !12458)
!12672 = !DILocation(line: 557, column: 25, scope: !7578, inlinedAt: !12458)
!12673 = !DILocation(line: 557, column: 9, scope: !7578, inlinedAt: !12458)
!12674 = !DILocation(line: 557, column: 2, scope: !7578, inlinedAt: !12458)
!12675 = !DILocation(line: 558, column: 1, scope: !7578, inlinedAt: !12458)
!12676 = !DILocation(line: 591, column: 3, scope: !12459)
!12677 = !DILocation(line: 592, column: 19, scope: !12455)
!12678 = !DILocation(line: 592, column: 26, scope: !12455)
!12679 = !DILocation(line: 592, column: 9, scope: !12455)
!12680 = !DILocation(line: 592, column: 2, scope: !12455)
!12681 = !DILocation(line: 593, column: 1, scope: !12455)
!12682 = distinct !DISubprogram(name: "__must_check_overflow", scope: !12683, file: !12683, line: 52, type: !12684, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12683 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!12684 = !DISubroutineType(types: !12685)
!12685 = !{!555, !555}
!12686 = !DILocalVariable(name: "overflow", arg: 1, scope: !12682, file: !12683, line: 52, type: !555)
!12687 = !DILocation(line: 52, column: 60, scope: !12682)
!12688 = !DILocation(line: 54, column: 9, scope: !12682)
!12689 = !DILocation(line: 54, column: 2, scope: !12682)
!12690 = distinct !DISubprogram(name: "kobject_name", scope: !277, file: !277, line: 88, type: !12691, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12691 = !DISubroutineType(types: !12692)
!12692 = !{!280, !12693}
!12693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12694, size: 64)
!12694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!12695 = !DILocalVariable(name: "kobj", arg: 1, scope: !12690, file: !277, line: 88, type: !12693)
!12696 = !DILocation(line: 88, column: 62, scope: !12690)
!12697 = !DILocation(line: 90, column: 9, scope: !12690)
!12698 = !DILocation(line: 90, column: 15, scope: !12690)
!12699 = !DILocation(line: 90, column: 2, scope: !12690)
!12700 = distinct !DISubprogram(name: "mmc_blk_alloc_rpmb_part", scope: !3, file: !3, line: 2509, type: !12701, scopeLine: 2514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!324, !262, !5408, !7, !948, !280}
!12703 = !DILocalVariable(name: "card", arg: 1, scope: !12700, file: !3, line: 2509, type: !262)
!12704 = !DILocation(line: 2509, column: 53, scope: !12700)
!12705 = !DILocalVariable(name: "md", arg: 2, scope: !12700, file: !3, line: 2510, type: !5408)
!12706 = !DILocation(line: 2510, column: 29, scope: !12700)
!12707 = !DILocalVariable(name: "part_index", arg: 3, scope: !12700, file: !3, line: 2511, type: !7)
!12708 = !DILocation(line: 2511, column: 21, scope: !12700)
!12709 = !DILocalVariable(name: "size", arg: 4, scope: !12700, file: !3, line: 2512, type: !948)
!12710 = !DILocation(line: 2512, column: 17, scope: !12700)
!12711 = !DILocalVariable(name: "subname", arg: 5, scope: !12700, file: !3, line: 2513, type: !280)
!12712 = !DILocation(line: 2513, column: 20, scope: !12700)
!12713 = !DILocalVariable(name: "devidx", scope: !12700, file: !3, line: 2515, type: !324)
!12714 = !DILocation(line: 2515, column: 6, scope: !12700)
!12715 = !DILocalVariable(name: "ret", scope: !12700, file: !3, line: 2515, type: !324)
!12716 = !DILocation(line: 2515, column: 14, scope: !12700)
!12717 = !DILocalVariable(name: "rpmb_name", scope: !12700, file: !3, line: 2516, type: !2107)
!12718 = !DILocation(line: 2516, column: 7, scope: !12700)
!12719 = !DILocalVariable(name: "cap_str", scope: !12700, file: !3, line: 2517, type: !9989)
!12720 = !DILocation(line: 2517, column: 7, scope: !12700)
!12721 = !DILocalVariable(name: "rpmb", scope: !12700, file: !3, line: 2518, type: !5501)
!12722 = !DILocation(line: 2518, column: 24, scope: !12700)
!12723 = !DILocation(line: 2521, column: 11, scope: !12700)
!12724 = !DILocation(line: 2521, column: 9, scope: !12700)
!12725 = !DILocation(line: 2522, column: 6, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 2522, column: 6)
!12727 = !DILocation(line: 2522, column: 13, scope: !12726)
!12728 = !DILocation(line: 2522, column: 6, scope: !12700)
!12729 = !DILocation(line: 2523, column: 10, scope: !12726)
!12730 = !DILocation(line: 2523, column: 3, scope: !12726)
!12731 = !DILocation(line: 2525, column: 9, scope: !12700)
!12732 = !DILocation(line: 2525, column: 7, scope: !12700)
!12733 = !DILocation(line: 2526, column: 7, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 2526, column: 6)
!12735 = !DILocation(line: 2526, column: 6, scope: !12700)
!12736 = !DILocation(line: 2527, column: 3, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 2526, column: 13)
!12738 = !DILocation(line: 2528, column: 3, scope: !12737)
!12739 = !DILocation(line: 2531, column: 11, scope: !12700)
!12740 = !DILocation(line: 2532, column: 18, scope: !12700)
!12741 = !DILocation(line: 2532, column: 24, scope: !12700)
!12742 = !DILocation(line: 2532, column: 30, scope: !12700)
!12743 = !DILocation(line: 2532, column: 37, scope: !12700)
!12744 = !DILocation(line: 2532, column: 47, scope: !12700)
!12745 = !DILocation(line: 2531, column: 2, scope: !12700)
!12746 = !DILocation(line: 2534, column: 13, scope: !12700)
!12747 = !DILocation(line: 2534, column: 2, scope: !12700)
!12748 = !DILocation(line: 2534, column: 8, scope: !12700)
!12749 = !DILocation(line: 2534, column: 11, scope: !12700)
!12750 = !DILocation(line: 2535, column: 21, scope: !12700)
!12751 = !DILocation(line: 2535, column: 2, scope: !12700)
!12752 = !DILocation(line: 2535, column: 8, scope: !12700)
!12753 = !DILocation(line: 2535, column: 19, scope: !12700)
!12754 = !DILocation(line: 2536, column: 24, scope: !12700)
!12755 = !DILocation(line: 2536, column: 2, scope: !12700)
!12756 = !DILocation(line: 2536, column: 8, scope: !12700)
!12757 = !DILocation(line: 2536, column: 12, scope: !12700)
!12758 = !DILocation(line: 2536, column: 22, scope: !12700)
!12759 = !DILocation(line: 2537, column: 2, scope: !12700)
!12760 = !DILocation(line: 2537, column: 8, scope: !12700)
!12761 = !DILocation(line: 2537, column: 12, scope: !12700)
!12762 = !DILocation(line: 2537, column: 16, scope: !12700)
!12763 = !DILocation(line: 2538, column: 19, scope: !12700)
!12764 = !DILocation(line: 2538, column: 2, scope: !12700)
!12765 = !DILocation(line: 2538, column: 8, scope: !12700)
!12766 = !DILocation(line: 2538, column: 12, scope: !12700)
!12767 = !DILocation(line: 2538, column: 17, scope: !12700)
!12768 = !DILocation(line: 2539, column: 22, scope: !12700)
!12769 = !DILocation(line: 2539, column: 28, scope: !12700)
!12770 = !DILocation(line: 2539, column: 2, scope: !12700)
!12771 = !DILocation(line: 2539, column: 8, scope: !12700)
!12772 = !DILocation(line: 2539, column: 12, scope: !12700)
!12773 = !DILocation(line: 2539, column: 19, scope: !12700)
!12774 = !DILocation(line: 2540, column: 2, scope: !12700)
!12775 = !DILocation(line: 2540, column: 8, scope: !12700)
!12776 = !DILocation(line: 2540, column: 12, scope: !12700)
!12777 = !DILocation(line: 2540, column: 20, scope: !12700)
!12778 = !DILocation(line: 2541, column: 21, scope: !12700)
!12779 = !DILocation(line: 2541, column: 27, scope: !12700)
!12780 = !DILocation(line: 2541, column: 2, scope: !12700)
!12781 = !DILocation(line: 2542, column: 19, scope: !12700)
!12782 = !DILocation(line: 2542, column: 25, scope: !12700)
!12783 = !DILocation(line: 2542, column: 30, scope: !12700)
!12784 = !DILocation(line: 2542, column: 2, scope: !12700)
!12785 = !DILocation(line: 2543, column: 13, scope: !12700)
!12786 = !DILocation(line: 2543, column: 2, scope: !12700)
!12787 = !DILocation(line: 2543, column: 8, scope: !12700)
!12788 = !DILocation(line: 2543, column: 11, scope: !12700)
!12789 = !DILocation(line: 2545, column: 13, scope: !12700)
!12790 = !DILocation(line: 2545, column: 19, scope: !12700)
!12791 = !DILocation(line: 2545, column: 2, scope: !12700)
!12792 = !DILocation(line: 2546, column: 2, scope: !12700)
!12793 = !DILocation(line: 2546, column: 8, scope: !12700)
!12794 = !DILocation(line: 2546, column: 15, scope: !12700)
!12795 = !DILocation(line: 2546, column: 21, scope: !12700)
!12796 = !DILocation(line: 2547, column: 25, scope: !12700)
!12797 = !DILocation(line: 2547, column: 31, scope: !12700)
!12798 = !DILocation(line: 2547, column: 40, scope: !12700)
!12799 = !DILocation(line: 2547, column: 46, scope: !12700)
!12800 = !DILocation(line: 2547, column: 8, scope: !12700)
!12801 = !DILocation(line: 2547, column: 6, scope: !12700)
!12802 = !DILocation(line: 2548, column: 6, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 2548, column: 6)
!12804 = !DILocation(line: 2548, column: 6, scope: !12700)
!12805 = !DILocation(line: 2549, column: 3, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12803, file: !3, line: 2548, column: 11)
!12807 = !DILocation(line: 2550, column: 3, scope: !12806)
!12808 = !DILocation(line: 2553, column: 12, scope: !12700)
!12809 = !DILocation(line: 2553, column: 18, scope: !12700)
!12810 = !DILocation(line: 2553, column: 25, scope: !12700)
!12811 = !DILocation(line: 2553, column: 29, scope: !12700)
!12812 = !DILocation(line: 2553, column: 2, scope: !12700)
!12813 = !DILocation(line: 2555, column: 23, scope: !12700)
!12814 = !DILocation(line: 2556, column: 4, scope: !12700)
!12815 = !DILocation(line: 2555, column: 2, scope: !12700)
!12816 = !DILocation(line: 2558, column: 2, scope: !12700)
!12817 = !DILocation(line: 2563, column: 2, scope: !12700)
!12818 = !DILabel(scope: !12700, name: "out_put_device", file: !3, line: 2565)
!12819 = !DILocation(line: 2565, column: 1, scope: !12700)
!12820 = !DILocation(line: 2566, column: 14, scope: !12700)
!12821 = !DILocation(line: 2566, column: 20, scope: !12700)
!12822 = !DILocation(line: 2566, column: 2, scope: !12700)
!12823 = !DILocation(line: 2567, column: 9, scope: !12700)
!12824 = !DILocation(line: 2567, column: 2, scope: !12700)
!12825 = !DILocation(line: 2568, column: 1, scope: !12700)
!12826 = distinct !DISubprogram(name: "mmc_blk_alloc_part", scope: !3, file: !3, line: 2399, type: !12827, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12827 = !DISubroutineType(types: !12828)
!12828 = !{!324, !262, !5408, !7, !948, !555, !280, !324}
!12829 = !DILocalVariable(name: "card", arg: 1, scope: !12826, file: !3, line: 2399, type: !262)
!12830 = !DILocation(line: 2399, column: 48, scope: !12826)
!12831 = !DILocalVariable(name: "md", arg: 2, scope: !12826, file: !3, line: 2400, type: !5408)
!12832 = !DILocation(line: 2400, column: 31, scope: !12826)
!12833 = !DILocalVariable(name: "part_type", arg: 3, scope: !12826, file: !3, line: 2401, type: !7)
!12834 = !DILocation(line: 2401, column: 23, scope: !12826)
!12835 = !DILocalVariable(name: "size", arg: 4, scope: !12826, file: !3, line: 2402, type: !948)
!12836 = !DILocation(line: 2402, column: 19, scope: !12826)
!12837 = !DILocalVariable(name: "default_ro", arg: 5, scope: !12826, file: !3, line: 2403, type: !555)
!12838 = !DILocation(line: 2403, column: 15, scope: !12826)
!12839 = !DILocalVariable(name: "subname", arg: 6, scope: !12826, file: !3, line: 2404, type: !280)
!12840 = !DILocation(line: 2404, column: 22, scope: !12826)
!12841 = !DILocalVariable(name: "area_type", arg: 7, scope: !12826, file: !3, line: 2405, type: !324)
!12842 = !DILocation(line: 2405, column: 14, scope: !12826)
!12843 = !DILocalVariable(name: "cap_str", scope: !12826, file: !3, line: 2407, type: !9989)
!12844 = !DILocation(line: 2407, column: 7, scope: !12826)
!12845 = !DILocalVariable(name: "part_md", scope: !12826, file: !3, line: 2408, type: !5408)
!12846 = !DILocation(line: 2408, column: 23, scope: !12826)
!12847 = !DILocation(line: 2410, column: 30, scope: !12826)
!12848 = !DILocation(line: 2410, column: 36, scope: !12826)
!12849 = !DILocation(line: 2410, column: 59, scope: !12826)
!12850 = !DILocation(line: 2410, column: 65, scope: !12826)
!12851 = !DILocation(line: 2411, column: 9, scope: !12826)
!12852 = !DILocation(line: 2411, column: 18, scope: !12826)
!12853 = !DILocation(line: 2410, column: 12, scope: !12826)
!12854 = !DILocation(line: 2410, column: 10, scope: !12826)
!12855 = !DILocation(line: 2412, column: 13, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12826, file: !3, line: 2412, column: 6)
!12857 = !DILocation(line: 2412, column: 6, scope: !12856)
!12858 = !DILocation(line: 2412, column: 6, scope: !12826)
!12859 = !DILocation(line: 2413, column: 18, scope: !12856)
!12860 = !DILocation(line: 2413, column: 10, scope: !12856)
!12861 = !DILocation(line: 2413, column: 3, scope: !12856)
!12862 = !DILocation(line: 2414, column: 23, scope: !12826)
!12863 = !DILocation(line: 2414, column: 2, scope: !12826)
!12864 = !DILocation(line: 2414, column: 11, scope: !12826)
!12865 = !DILocation(line: 2414, column: 21, scope: !12826)
!12866 = !DILocation(line: 2415, column: 12, scope: !12826)
!12867 = !DILocation(line: 2415, column: 21, scope: !12826)
!12868 = !DILocation(line: 2415, column: 28, scope: !12826)
!12869 = !DILocation(line: 2415, column: 32, scope: !12826)
!12870 = !DILocation(line: 2415, column: 2, scope: !12826)
!12871 = !DILocation(line: 2417, column: 36, scope: !12826)
!12872 = !DILocation(line: 2417, column: 45, scope: !12826)
!12873 = !DILocation(line: 2417, column: 23, scope: !12826)
!12874 = !DILocation(line: 2418, column: 4, scope: !12826)
!12875 = !DILocation(line: 2417, column: 2, scope: !12826)
!12876 = !DILocation(line: 2419, column: 2, scope: !12826)
!12877 = !DILocation(line: 2422, column: 2, scope: !12826)
!12878 = !DILocation(line: 2423, column: 1, scope: !12826)
!12879 = distinct !DISubprogram(name: "mmc_blk_rpmb_device_release", scope: !3, file: !3, line: 2501, type: !4509, scopeLine: 2502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12880 = !DILocalVariable(name: "dev", arg: 1, scope: !12879, file: !3, line: 2501, type: !272)
!12881 = !DILocation(line: 2501, column: 56, scope: !12879)
!12882 = !DILocalVariable(name: "rpmb", scope: !12879, file: !3, line: 2503, type: !5501)
!12883 = !DILocation(line: 2503, column: 24, scope: !12879)
!12884 = !DILocation(line: 2503, column: 47, scope: !12879)
!12885 = !DILocation(line: 2503, column: 31, scope: !12879)
!12886 = !DILocation(line: 2505, column: 2, scope: !12879)
!12887 = !DILocation(line: 2506, column: 8, scope: !12879)
!12888 = !DILocation(line: 2506, column: 2, scope: !12879)
!12889 = !DILocation(line: 2507, column: 1, scope: !12879)
!12890 = distinct !DISubprogram(name: "list_add", scope: !11280, file: !11280, line: 84, type: !12891, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12891 = !DISubroutineType(types: !12892)
!12892 = !{null, !288, !288}
!12893 = !DILocalVariable(name: "new", arg: 1, scope: !12890, file: !11280, line: 84, type: !288)
!12894 = !DILocation(line: 84, column: 47, scope: !12890)
!12895 = !DILocalVariable(name: "head", arg: 2, scope: !12890, file: !11280, line: 84, type: !288)
!12896 = !DILocation(line: 84, column: 70, scope: !12890)
!12897 = !DILocation(line: 86, column: 13, scope: !12890)
!12898 = !DILocation(line: 86, column: 18, scope: !12890)
!12899 = !DILocation(line: 86, column: 24, scope: !12890)
!12900 = !DILocation(line: 86, column: 30, scope: !12890)
!12901 = !DILocation(line: 86, column: 2, scope: !12890)
!12902 = !DILocation(line: 87, column: 1, scope: !12890)
!12903 = distinct !DISubprogram(name: "mmc_rpmb_ioctl", scope: !3, file: !3, line: 2434, type: !4034, scopeLine: 2436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12904 = !DILocalVariable(name: "filp", arg: 1, scope: !12903, file: !3, line: 2434, type: !417)
!12905 = !DILocation(line: 2434, column: 41, scope: !12903)
!12906 = !DILocalVariable(name: "cmd", arg: 2, scope: !12903, file: !3, line: 2434, type: !7)
!12907 = !DILocation(line: 2434, column: 60, scope: !12903)
!12908 = !DILocalVariable(name: "arg", arg: 3, scope: !12903, file: !3, line: 2435, type: !389)
!12909 = !DILocation(line: 2435, column: 21, scope: !12903)
!12910 = !DILocalVariable(name: "rpmb", scope: !12903, file: !3, line: 2437, type: !5501)
!12911 = !DILocation(line: 2437, column: 24, scope: !12903)
!12912 = !DILocation(line: 2437, column: 31, scope: !12903)
!12913 = !DILocation(line: 2437, column: 37, scope: !12903)
!12914 = !DILocalVariable(name: "ret", scope: !12903, file: !3, line: 2438, type: !324)
!12915 = !DILocation(line: 2438, column: 6, scope: !12903)
!12916 = !DILocation(line: 2440, column: 10, scope: !12903)
!12917 = !DILocation(line: 2440, column: 2, scope: !12903)
!12918 = !DILocation(line: 2442, column: 27, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 2440, column: 15)
!12920 = !DILocation(line: 2442, column: 33, scope: !12919)
!12921 = !DILocation(line: 2443, column: 35, scope: !12919)
!12922 = !DILocation(line: 2443, column: 6, scope: !12919)
!12923 = !DILocation(line: 2444, column: 6, scope: !12919)
!12924 = !DILocation(line: 2442, column: 9, scope: !12919)
!12925 = !DILocation(line: 2442, column: 7, scope: !12919)
!12926 = !DILocation(line: 2445, column: 3, scope: !12919)
!12927 = !DILocation(line: 2447, column: 33, scope: !12919)
!12928 = !DILocation(line: 2447, column: 39, scope: !12919)
!12929 = !DILocation(line: 2448, column: 41, scope: !12919)
!12930 = !DILocation(line: 2448, column: 6, scope: !12919)
!12931 = !DILocation(line: 2449, column: 6, scope: !12919)
!12932 = !DILocation(line: 2447, column: 9, scope: !12919)
!12933 = !DILocation(line: 2447, column: 7, scope: !12919)
!12934 = !DILocation(line: 2450, column: 3, scope: !12919)
!12935 = !DILocation(line: 2452, column: 7, scope: !12919)
!12936 = !DILocation(line: 2453, column: 3, scope: !12919)
!12937 = !DILocation(line: 2456, column: 9, scope: !12903)
!12938 = !DILocation(line: 2456, column: 2, scope: !12903)
!12939 = distinct !DISubprogram(name: "mmc_rpmb_chrdev_open", scope: !3, file: !3, line: 2467, type: !4044, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12940 = !DILocalVariable(name: "inode", arg: 1, scope: !12939, file: !3, line: 2467, type: !494)
!12941 = !DILocation(line: 2467, column: 47, scope: !12939)
!12942 = !DILocalVariable(name: "filp", arg: 2, scope: !12939, file: !3, line: 2467, type: !417)
!12943 = !DILocation(line: 2467, column: 67, scope: !12939)
!12944 = !DILocalVariable(name: "rpmb", scope: !12939, file: !3, line: 2469, type: !5501)
!12945 = !DILocation(line: 2469, column: 24, scope: !12939)
!12946 = !DILocalVariable(name: "__mptr", scope: !12947, file: !3, line: 2469, type: !257)
!12947 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 2469, column: 31)
!12948 = !DILocation(line: 2469, column: 31, scope: !12947)
!12949 = !DILocation(line: 2469, column: 31, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 2469, column: 31)
!12951 = !DILocation(line: 2472, column: 14, scope: !12939)
!12952 = !DILocation(line: 2472, column: 20, scope: !12939)
!12953 = !DILocation(line: 2472, column: 2, scope: !12939)
!12954 = !DILocation(line: 2473, column: 23, scope: !12939)
!12955 = !DILocation(line: 2473, column: 2, scope: !12939)
!12956 = !DILocation(line: 2473, column: 8, scope: !12939)
!12957 = !DILocation(line: 2473, column: 21, scope: !12939)
!12958 = !DILocation(line: 2474, column: 14, scope: !12939)
!12959 = !DILocation(line: 2474, column: 20, scope: !12939)
!12960 = !DILocation(line: 2474, column: 24, scope: !12939)
!12961 = !DILocation(line: 2474, column: 2, scope: !12939)
!12962 = !DILocation(line: 2476, column: 26, scope: !12939)
!12963 = !DILocation(line: 2476, column: 33, scope: !12939)
!12964 = !DILocation(line: 2476, column: 9, scope: !12939)
!12965 = !DILocation(line: 2476, column: 2, scope: !12939)
!12966 = distinct !DISubprogram(name: "mmc_rpmb_chrdev_release", scope: !3, file: !3, line: 2479, type: !4044, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12967 = !DILocalVariable(name: "inode", arg: 1, scope: !12966, file: !3, line: 2479, type: !494)
!12968 = !DILocation(line: 2479, column: 50, scope: !12966)
!12969 = !DILocalVariable(name: "filp", arg: 2, scope: !12966, file: !3, line: 2479, type: !417)
!12970 = !DILocation(line: 2479, column: 70, scope: !12966)
!12971 = !DILocalVariable(name: "rpmb", scope: !12966, file: !3, line: 2481, type: !5501)
!12972 = !DILocation(line: 2481, column: 24, scope: !12966)
!12973 = !DILocalVariable(name: "__mptr", scope: !12974, file: !3, line: 2481, type: !257)
!12974 = distinct !DILexicalBlock(scope: !12966, file: !3, line: 2481, column: 31)
!12975 = !DILocation(line: 2481, column: 31, scope: !12974)
!12976 = !DILocation(line: 2481, column: 31, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 2481, column: 31)
!12978 = !DILocation(line: 2484, column: 14, scope: !12966)
!12979 = !DILocation(line: 2484, column: 20, scope: !12966)
!12980 = !DILocation(line: 2484, column: 2, scope: !12966)
!12981 = !DILocation(line: 2485, column: 14, scope: !12966)
!12982 = !DILocation(line: 2485, column: 20, scope: !12966)
!12983 = !DILocation(line: 2485, column: 2, scope: !12966)
!12984 = !DILocation(line: 2487, column: 2, scope: !12966)
!12985 = distinct !DISubprogram(name: "__list_add", scope: !11280, file: !11280, line: 63, type: !12986, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{null, !288, !288, !288}
!12988 = !DILocalVariable(name: "new", arg: 1, scope: !12985, file: !11280, line: 63, type: !288)
!12989 = !DILocation(line: 63, column: 49, scope: !12985)
!12990 = !DILocalVariable(name: "prev", arg: 2, scope: !12985, file: !11280, line: 64, type: !288)
!12991 = !DILocation(line: 64, column: 28, scope: !12985)
!12992 = !DILocalVariable(name: "next", arg: 3, scope: !12985, file: !11280, line: 65, type: !288)
!12993 = !DILocation(line: 65, column: 28, scope: !12985)
!12994 = !DILocation(line: 67, column: 24, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12985, file: !11280, line: 67, column: 6)
!12996 = !DILocation(line: 67, column: 29, scope: !12995)
!12997 = !DILocation(line: 67, column: 35, scope: !12995)
!12998 = !DILocation(line: 67, column: 7, scope: !12995)
!12999 = !DILocation(line: 67, column: 6, scope: !12985)
!13000 = !DILocation(line: 68, column: 3, scope: !12995)
!13001 = !DILocation(line: 70, column: 15, scope: !12985)
!13002 = !DILocation(line: 70, column: 2, scope: !12985)
!13003 = !DILocation(line: 70, column: 8, scope: !12985)
!13004 = !DILocation(line: 70, column: 13, scope: !12985)
!13005 = !DILocation(line: 71, column: 14, scope: !12985)
!13006 = !DILocation(line: 71, column: 2, scope: !12985)
!13007 = !DILocation(line: 71, column: 7, scope: !12985)
!13008 = !DILocation(line: 71, column: 12, scope: !12985)
!13009 = !DILocation(line: 72, column: 14, scope: !12985)
!13010 = !DILocation(line: 72, column: 2, scope: !12985)
!13011 = !DILocation(line: 72, column: 7, scope: !12985)
!13012 = !DILocation(line: 72, column: 12, scope: !12985)
!13013 = !DILocation(line: 73, column: 2, scope: !12985)
!13014 = !DILocation(line: 73, column: 2, scope: !13015)
!13015 = distinct !DILexicalBlock(scope: !12985, file: !11280, line: 73, column: 2)
!13016 = !DILocation(line: 73, column: 2, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13015, file: !11280, line: 73, column: 2)
!13018 = !DILocation(line: 73, column: 2, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13015, file: !11280, line: 73, column: 2)
!13020 = !DILocation(line: 74, column: 1, scope: !12985)
!13021 = distinct !DISubprogram(name: "__list_add_valid", scope: !11280, file: !11280, line: 45, type: !13022, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13022 = !DISubroutineType(types: !13023)
!13023 = !{!555, !288, !288, !288}
!13024 = !DILocalVariable(name: "new", arg: 1, scope: !13021, file: !11280, line: 45, type: !288)
!13025 = !DILocation(line: 45, column: 55, scope: !13021)
!13026 = !DILocalVariable(name: "prev", arg: 2, scope: !13021, file: !11280, line: 46, type: !288)
!13027 = !DILocation(line: 46, column: 23, scope: !13021)
!13028 = !DILocalVariable(name: "next", arg: 3, scope: !13021, file: !11280, line: 47, type: !288)
!13029 = !DILocation(line: 47, column: 23, scope: !13021)
!13030 = !DILocation(line: 49, column: 2, scope: !13021)
!13031 = distinct !DISubprogram(name: "force_ro_show", scope: !3, file: !3, line: 276, type: !5428, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13032 = !DILocalVariable(name: "dev", arg: 1, scope: !13031, file: !3, line: 276, type: !272)
!13033 = !DILocation(line: 276, column: 45, scope: !13031)
!13034 = !DILocalVariable(name: "attr", arg: 2, scope: !13031, file: !3, line: 276, type: !5430)
!13035 = !DILocation(line: 276, column: 75, scope: !13031)
!13036 = !DILocalVariable(name: "buf", arg: 3, scope: !13031, file: !3, line: 277, type: !340)
!13037 = !DILocation(line: 277, column: 15, scope: !13031)
!13038 = !DILocalVariable(name: "ret", scope: !13031, file: !3, line: 279, type: !324)
!13039 = !DILocation(line: 279, column: 6, scope: !13031)
!13040 = !DILocalVariable(name: "md", scope: !13031, file: !3, line: 280, type: !5408)
!13041 = !DILocation(line: 280, column: 23, scope: !13031)
!13042 = !DILocalVariable(name: "__mptr", scope: !13043, file: !3, line: 280, type: !257)
!13043 = distinct !DILexicalBlock(scope: !13031, file: !3, line: 280, column: 40)
!13044 = !DILocation(line: 280, column: 40, scope: !13043)
!13045 = !DILocation(line: 280, column: 40, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13043, file: !3, line: 280, column: 40)
!13047 = !DILocation(line: 280, column: 28, scope: !13031)
!13048 = !DILocation(line: 282, column: 17, scope: !13031)
!13049 = !DILocalVariable(name: "__mptr", scope: !13050, file: !3, line: 283, type: !257)
!13050 = distinct !DILexicalBlock(scope: !13031, file: !3, line: 283, column: 22)
!13051 = !DILocation(line: 283, column: 22, scope: !13050)
!13052 = !DILocation(line: 283, column: 22, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13050, file: !3, line: 283, column: 22)
!13054 = !DILocation(line: 283, column: 10, scope: !13031)
!13055 = !DILocation(line: 284, column: 10, scope: !13031)
!13056 = !DILocation(line: 284, column: 14, scope: !13031)
!13057 = !DILocation(line: 283, column: 40, scope: !13031)
!13058 = !DILocation(line: 282, column: 8, scope: !13031)
!13059 = !DILocation(line: 282, column: 6, scope: !13031)
!13060 = !DILocation(line: 285, column: 14, scope: !13031)
!13061 = !DILocation(line: 285, column: 2, scope: !13031)
!13062 = !DILocation(line: 286, column: 9, scope: !13031)
!13063 = !DILocation(line: 286, column: 2, scope: !13031)
!13064 = distinct !DISubprogram(name: "force_ro_store", scope: !3, file: !3, line: 289, type: !5433, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13065 = !DILocalVariable(name: "dev", arg: 1, scope: !13064, file: !3, line: 289, type: !272)
!13066 = !DILocation(line: 289, column: 46, scope: !13064)
!13067 = !DILocalVariable(name: "attr", arg: 2, scope: !13064, file: !3, line: 289, type: !5430)
!13068 = !DILocation(line: 289, column: 76, scope: !13064)
!13069 = !DILocalVariable(name: "buf", arg: 3, scope: !13064, file: !3, line: 290, type: !280)
!13070 = !DILocation(line: 290, column: 22, scope: !13064)
!13071 = !DILocalVariable(name: "count", arg: 4, scope: !13064, file: !3, line: 290, type: !386)
!13072 = !DILocation(line: 290, column: 34, scope: !13064)
!13073 = !DILocalVariable(name: "ret", scope: !13064, file: !3, line: 292, type: !324)
!13074 = !DILocation(line: 292, column: 6, scope: !13064)
!13075 = !DILocalVariable(name: "end", scope: !13064, file: !3, line: 293, type: !340)
!13076 = !DILocation(line: 293, column: 8, scope: !13064)
!13077 = !DILocalVariable(name: "md", scope: !13064, file: !3, line: 294, type: !5408)
!13078 = !DILocation(line: 294, column: 23, scope: !13064)
!13079 = !DILocalVariable(name: "__mptr", scope: !13080, file: !3, line: 294, type: !257)
!13080 = distinct !DILexicalBlock(scope: !13064, file: !3, line: 294, column: 40)
!13081 = !DILocation(line: 294, column: 40, scope: !13080)
!13082 = !DILocation(line: 294, column: 40, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13080, file: !3, line: 294, column: 40)
!13084 = !DILocation(line: 294, column: 28, scope: !13064)
!13085 = !DILocalVariable(name: "set", scope: !13064, file: !3, line: 295, type: !389)
!13086 = !DILocation(line: 295, column: 16, scope: !13064)
!13087 = !DILocation(line: 295, column: 37, scope: !13064)
!13088 = !DILocation(line: 295, column: 22, scope: !13064)
!13089 = !DILocation(line: 296, column: 6, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13064, file: !3, line: 296, column: 6)
!13091 = !DILocation(line: 296, column: 13, scope: !13090)
!13092 = !DILocation(line: 296, column: 10, scope: !13090)
!13093 = !DILocation(line: 296, column: 6, scope: !13064)
!13094 = !DILocation(line: 297, column: 7, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 296, column: 18)
!13096 = !DILocation(line: 298, column: 3, scope: !13095)
!13097 = !DILocalVariable(name: "__mptr", scope: !13098, file: !3, line: 301, type: !257)
!13098 = distinct !DILexicalBlock(scope: !13064, file: !3, line: 301, column: 14)
!13099 = !DILocation(line: 301, column: 14, scope: !13098)
!13100 = !DILocation(line: 301, column: 14, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 301, column: 14)
!13102 = !DILocation(line: 301, column: 32, scope: !13064)
!13103 = !DILocation(line: 301, column: 36, scope: !13064)
!13104 = !DILocation(line: 301, column: 39, scope: !13064)
!13105 = !DILocation(line: 301, column: 43, scope: !13064)
!13106 = !DILocation(line: 301, column: 2, scope: !13064)
!13107 = !DILocation(line: 302, column: 8, scope: !13064)
!13108 = !DILocation(line: 302, column: 6, scope: !13064)
!13109 = !DILocation(line: 302, column: 2, scope: !13064)
!13110 = !DILabel(scope: !13064, name: "out", file: !3, line: 303)
!13111 = !DILocation(line: 303, column: 1, scope: !13064)
!13112 = !DILocation(line: 304, column: 14, scope: !13064)
!13113 = !DILocation(line: 304, column: 2, scope: !13064)
!13114 = !DILocation(line: 305, column: 9, scope: !13064)
!13115 = !DILocation(line: 305, column: 2, scope: !13064)
!13116 = distinct !DISubprogram(name: "power_ro_lock_show", scope: !3, file: !3, line: 211, type: !5428, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13117 = !DILocalVariable(name: "dev", arg: 1, scope: !13116, file: !3, line: 211, type: !272)
!13118 = !DILocation(line: 211, column: 50, scope: !13116)
!13119 = !DILocalVariable(name: "attr", arg: 2, scope: !13116, file: !3, line: 212, type: !5430)
!13120 = !DILocation(line: 212, column: 28, scope: !13116)
!13121 = !DILocalVariable(name: "buf", arg: 3, scope: !13116, file: !3, line: 212, type: !340)
!13122 = !DILocation(line: 212, column: 40, scope: !13116)
!13123 = !DILocalVariable(name: "ret", scope: !13116, file: !3, line: 214, type: !324)
!13124 = !DILocation(line: 214, column: 6, scope: !13116)
!13125 = !DILocalVariable(name: "md", scope: !13116, file: !3, line: 215, type: !5408)
!13126 = !DILocation(line: 215, column: 23, scope: !13116)
!13127 = !DILocalVariable(name: "__mptr", scope: !13128, file: !3, line: 215, type: !257)
!13128 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 215, column: 40)
!13129 = !DILocation(line: 215, column: 40, scope: !13128)
!13130 = !DILocation(line: 215, column: 40, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13128, file: !3, line: 215, column: 40)
!13132 = !DILocation(line: 215, column: 28, scope: !13116)
!13133 = !DILocalVariable(name: "card", scope: !13116, file: !3, line: 216, type: !262)
!13134 = !DILocation(line: 216, column: 19, scope: !13116)
!13135 = !DILocation(line: 216, column: 26, scope: !13116)
!13136 = !DILocation(line: 216, column: 30, scope: !13116)
!13137 = !DILocation(line: 216, column: 36, scope: !13116)
!13138 = !DILocalVariable(name: "locked", scope: !13116, file: !3, line: 217, type: !324)
!13139 = !DILocation(line: 217, column: 6, scope: !13116)
!13140 = !DILocation(line: 219, column: 6, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13116, file: !3, line: 219, column: 6)
!13142 = !DILocation(line: 219, column: 12, scope: !13141)
!13143 = !DILocation(line: 219, column: 20, scope: !13141)
!13144 = !DILocation(line: 219, column: 33, scope: !13141)
!13145 = !DILocation(line: 219, column: 6, scope: !13116)
!13146 = !DILocation(line: 220, column: 10, scope: !13141)
!13147 = !DILocation(line: 220, column: 3, scope: !13141)
!13148 = !DILocation(line: 221, column: 11, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 221, column: 11)
!13150 = !DILocation(line: 221, column: 17, scope: !13149)
!13151 = !DILocation(line: 221, column: 25, scope: !13149)
!13152 = !DILocation(line: 221, column: 38, scope: !13149)
!13153 = !DILocation(line: 221, column: 11, scope: !13141)
!13154 = !DILocation(line: 222, column: 10, scope: !13149)
!13155 = !DILocation(line: 222, column: 3, scope: !13149)
!13156 = !DILocation(line: 224, column: 17, scope: !13116)
!13157 = !DILocation(line: 224, column: 41, scope: !13116)
!13158 = !DILocation(line: 224, column: 8, scope: !13116)
!13159 = !DILocation(line: 224, column: 6, scope: !13116)
!13160 = !DILocation(line: 226, column: 14, scope: !13116)
!13161 = !DILocation(line: 226, column: 2, scope: !13116)
!13162 = !DILocation(line: 228, column: 9, scope: !13116)
!13163 = !DILocation(line: 228, column: 2, scope: !13116)
!13164 = distinct !DISubprogram(name: "power_ro_lock_store", scope: !3, file: !3, line: 231, type: !5433, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13165 = !DILocalVariable(name: "dev", arg: 1, scope: !13164, file: !3, line: 231, type: !272)
!13166 = !DILocation(line: 231, column: 51, scope: !13164)
!13167 = !DILocalVariable(name: "attr", arg: 2, scope: !13164, file: !3, line: 232, type: !5430)
!13168 = !DILocation(line: 232, column: 28, scope: !13164)
!13169 = !DILocalVariable(name: "buf", arg: 3, scope: !13164, file: !3, line: 232, type: !280)
!13170 = !DILocation(line: 232, column: 46, scope: !13164)
!13171 = !DILocalVariable(name: "count", arg: 4, scope: !13164, file: !3, line: 232, type: !386)
!13172 = !DILocation(line: 232, column: 58, scope: !13164)
!13173 = !DILocalVariable(name: "ret", scope: !13164, file: !3, line: 234, type: !324)
!13174 = !DILocation(line: 234, column: 6, scope: !13164)
!13175 = !DILocalVariable(name: "md", scope: !13164, file: !3, line: 235, type: !5408)
!13176 = !DILocation(line: 235, column: 23, scope: !13164)
!13177 = !DILocalVariable(name: "part_md", scope: !13164, file: !3, line: 235, type: !5408)
!13178 = !DILocation(line: 235, column: 28, scope: !13164)
!13179 = !DILocalVariable(name: "mq", scope: !13164, file: !3, line: 236, type: !258)
!13180 = !DILocation(line: 236, column: 20, scope: !13164)
!13181 = !DILocalVariable(name: "req", scope: !13164, file: !3, line: 237, type: !2386)
!13182 = !DILocation(line: 237, column: 18, scope: !13164)
!13183 = !DILocalVariable(name: "set", scope: !13164, file: !3, line: 238, type: !389)
!13184 = !DILocation(line: 238, column: 16, scope: !13164)
!13185 = !DILocation(line: 240, column: 15, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 240, column: 6)
!13187 = !DILocation(line: 240, column: 6, scope: !13186)
!13188 = !DILocation(line: 240, column: 6, scope: !13164)
!13189 = !DILocation(line: 241, column: 3, scope: !13186)
!13190 = !DILocation(line: 243, column: 6, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 243, column: 6)
!13192 = !DILocation(line: 243, column: 10, scope: !13191)
!13193 = !DILocation(line: 243, column: 6, scope: !13164)
!13194 = !DILocation(line: 244, column: 10, scope: !13191)
!13195 = !DILocation(line: 244, column: 3, scope: !13191)
!13196 = !DILocalVariable(name: "__mptr", scope: !13197, file: !3, line: 246, type: !257)
!13197 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 246, column: 19)
!13198 = !DILocation(line: 246, column: 19, scope: !13197)
!13199 = !DILocation(line: 246, column: 19, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 246, column: 19)
!13201 = !DILocation(line: 246, column: 7, scope: !13164)
!13202 = !DILocation(line: 246, column: 5, scope: !13164)
!13203 = !DILocation(line: 247, column: 8, scope: !13164)
!13204 = !DILocation(line: 247, column: 12, scope: !13164)
!13205 = !DILocation(line: 247, column: 5, scope: !13164)
!13206 = !DILocation(line: 250, column: 24, scope: !13164)
!13207 = !DILocation(line: 250, column: 28, scope: !13164)
!13208 = !DILocation(line: 250, column: 8, scope: !13164)
!13209 = !DILocation(line: 250, column: 6, scope: !13164)
!13210 = !DILocation(line: 251, column: 13, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 251, column: 6)
!13212 = !DILocation(line: 251, column: 6, scope: !13211)
!13213 = !DILocation(line: 251, column: 6, scope: !13164)
!13214 = !DILocation(line: 252, column: 19, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 251, column: 19)
!13216 = !DILocation(line: 252, column: 11, scope: !13215)
!13217 = !DILocation(line: 252, column: 9, scope: !13215)
!13218 = !DILocation(line: 253, column: 3, scope: !13215)
!13219 = !DILocation(line: 255, column: 23, scope: !13164)
!13220 = !DILocation(line: 255, column: 2, scope: !13164)
!13221 = !DILocation(line: 255, column: 29, scope: !13164)
!13222 = !DILocation(line: 255, column: 36, scope: !13164)
!13223 = !DILocation(line: 256, column: 17, scope: !13164)
!13224 = !DILocation(line: 256, column: 21, scope: !13164)
!13225 = !DILocation(line: 256, column: 34, scope: !13164)
!13226 = !DILocation(line: 256, column: 2, scope: !13164)
!13227 = !DILocation(line: 257, column: 29, scope: !13164)
!13228 = !DILocation(line: 257, column: 8, scope: !13164)
!13229 = !DILocation(line: 257, column: 35, scope: !13164)
!13230 = !DILocation(line: 257, column: 6, scope: !13164)
!13231 = !DILocation(line: 258, column: 18, scope: !13164)
!13232 = !DILocation(line: 258, column: 2, scope: !13164)
!13233 = !DILocation(line: 260, column: 7, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 260, column: 6)
!13235 = !DILocation(line: 260, column: 6, scope: !13164)
!13236 = !DILocation(line: 261, column: 3, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13234, file: !3, line: 260, column: 12)
!13238 = !DILocation(line: 263, column: 15, scope: !13237)
!13239 = !DILocation(line: 263, column: 19, scope: !13237)
!13240 = !DILocation(line: 263, column: 3, scope: !13237)
!13241 = !DILocalVariable(name: "__mptr", scope: !13242, file: !3, line: 265, type: !257)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 265, column: 3)
!13243 = distinct !DILexicalBlock(scope: !13237, file: !3, line: 265, column: 3)
!13244 = !DILocation(line: 265, column: 3, scope: !13242)
!13245 = !DILocation(line: 265, column: 3, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 265, column: 3)
!13247 = !DILocation(line: 265, column: 3, scope: !13243)
!13248 = !DILocation(line: 265, column: 3, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 265, column: 3)
!13250 = !DILocation(line: 266, column: 8, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 266, column: 8)
!13252 = !DILocation(line: 266, column: 17, scope: !13251)
!13253 = !DILocation(line: 266, column: 27, scope: !13251)
!13254 = !DILocation(line: 266, column: 8, scope: !13249)
!13255 = !DILocation(line: 267, column: 5, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !3, line: 266, column: 54)
!13257 = !DILocation(line: 268, column: 17, scope: !13256)
!13258 = !DILocation(line: 268, column: 26, scope: !13256)
!13259 = !DILocation(line: 268, column: 5, scope: !13256)
!13260 = !DILocation(line: 269, column: 4, scope: !13256)
!13261 = !DILocation(line: 266, column: 30, scope: !13251)
!13262 = !DILocalVariable(name: "__mptr", scope: !13263, file: !3, line: 265, type: !257)
!13263 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 265, column: 3)
!13264 = !DILocation(line: 265, column: 3, scope: !13263)
!13265 = !DILocation(line: 265, column: 3, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13263, file: !3, line: 265, column: 3)
!13267 = distinct !{!13267, !13247, !13268}
!13268 = !DILocation(line: 269, column: 4, scope: !13243)
!13269 = !DILocation(line: 270, column: 2, scope: !13237)
!13270 = !DILabel(scope: !13164, name: "out_put", file: !3, line: 271)
!13271 = !DILocation(line: 271, column: 1, scope: !13164)
!13272 = !DILocation(line: 272, column: 14, scope: !13164)
!13273 = !DILocation(line: 272, column: 2, scope: !13164)
!13274 = !DILocation(line: 273, column: 9, scope: !13164)
!13275 = !DILocation(line: 273, column: 2, scope: !13164)
!13276 = !DILocation(line: 274, column: 1, scope: !13164)
!13277 = distinct !DISubprogram(name: "get_disk_ro", scope: !2101, file: !2101, line: 310, type: !2327, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13278 = !DILocalVariable(name: "disk", arg: 1, scope: !13277, file: !2101, line: 310, type: !2099)
!13279 = !DILocation(line: 310, column: 47, scope: !13277)
!13280 = !DILocation(line: 312, column: 9, scope: !13277)
!13281 = !DILocation(line: 312, column: 15, scope: !13277)
!13282 = !DILocation(line: 312, column: 21, scope: !13277)
!13283 = !DILocation(line: 312, column: 2, scope: !13277)
!13284 = distinct !DISubprogram(name: "kstrtoul", scope: !13285, file: !13285, line: 351, type: !13286, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13285 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!13286 = !DISubroutineType(types: !13287)
!13287 = !{!324, !280, !7, !13288}
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!13289 = !DILocalVariable(name: "s", arg: 1, scope: !13284, file: !13285, line: 351, type: !280)
!13290 = !DILocation(line: 351, column: 53, scope: !13284)
!13291 = !DILocalVariable(name: "base", arg: 2, scope: !13284, file: !13285, line: 351, type: !7)
!13292 = !DILocation(line: 351, column: 69, scope: !13284)
!13293 = !DILocalVariable(name: "res", arg: 3, scope: !13284, file: !13285, line: 351, type: !13288)
!13294 = !DILocation(line: 351, column: 90, scope: !13284)
!13295 = !DILocation(line: 359, column: 20, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13284, file: !13285, line: 357, column: 6)
!13297 = !DILocation(line: 359, column: 23, scope: !13296)
!13298 = !DILocation(line: 359, column: 51, scope: !13296)
!13299 = !DILocation(line: 359, column: 10, scope: !13296)
!13300 = !DILocation(line: 359, column: 3, scope: !13296)
!13301 = distinct !DISubprogram(name: "list_del", scope: !11280, file: !11280, line: 144, type: !11281, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13302 = !DILocalVariable(name: "entry", arg: 1, scope: !13301, file: !11280, line: 144, type: !288)
!13303 = !DILocation(line: 144, column: 47, scope: !13301)
!13304 = !DILocation(line: 146, column: 19, scope: !13301)
!13305 = !DILocation(line: 146, column: 2, scope: !13301)
!13306 = !DILocation(line: 147, column: 2, scope: !13301)
!13307 = !DILocation(line: 147, column: 9, scope: !13301)
!13308 = !DILocation(line: 147, column: 14, scope: !13301)
!13309 = !DILocation(line: 148, column: 2, scope: !13301)
!13310 = !DILocation(line: 148, column: 9, scope: !13301)
!13311 = !DILocation(line: 148, column: 14, scope: !13301)
!13312 = !DILocation(line: 149, column: 1, scope: !13301)
!13313 = distinct !DISubprogram(name: "mmc_blk_remove_rpmb_part", scope: !3, file: !3, line: 2570, type: !13314, scopeLine: 2572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13314 = !DISubroutineType(types: !13315)
!13315 = !{null, !5501}
!13316 = !DILocalVariable(name: "rpmb", arg: 1, scope: !13313, file: !3, line: 2570, type: !5501)
!13317 = !DILocation(line: 2570, column: 60, scope: !13313)
!13318 = !DILocation(line: 2573, column: 19, scope: !13313)
!13319 = !DILocation(line: 2573, column: 25, scope: !13313)
!13320 = !DILocation(line: 2573, column: 34, scope: !13313)
!13321 = !DILocation(line: 2573, column: 40, scope: !13313)
!13322 = !DILocation(line: 2573, column: 2, scope: !13313)
!13323 = !DILocation(line: 2574, column: 14, scope: !13313)
!13324 = !DILocation(line: 2574, column: 20, scope: !13313)
!13325 = !DILocation(line: 2574, column: 2, scope: !13313)
!13326 = !DILocation(line: 2575, column: 1, scope: !13313)
!13327 = distinct !DISubprogram(name: "__list_del_entry", scope: !11280, file: !11280, line: 130, type: !11281, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13328 = !DILocalVariable(name: "entry", arg: 1, scope: !13327, file: !11280, line: 130, type: !288)
!13329 = !DILocation(line: 130, column: 55, scope: !13327)
!13330 = !DILocation(line: 132, column: 30, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13327, file: !11280, line: 132, column: 6)
!13332 = !DILocation(line: 132, column: 7, scope: !13331)
!13333 = !DILocation(line: 132, column: 6, scope: !13327)
!13334 = !DILocation(line: 133, column: 3, scope: !13331)
!13335 = !DILocation(line: 135, column: 13, scope: !13327)
!13336 = !DILocation(line: 135, column: 20, scope: !13327)
!13337 = !DILocation(line: 135, column: 26, scope: !13327)
!13338 = !DILocation(line: 135, column: 33, scope: !13327)
!13339 = !DILocation(line: 135, column: 2, scope: !13327)
!13340 = !DILocation(line: 136, column: 1, scope: !13327)
!13341 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !11280, file: !11280, line: 51, type: !13342, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13342 = !DISubroutineType(types: !13343)
!13343 = !{!555, !288}
!13344 = !DILocalVariable(name: "entry", arg: 1, scope: !13341, file: !11280, line: 51, type: !288)
!13345 = !DILocation(line: 51, column: 61, scope: !13341)
!13346 = !DILocation(line: 53, column: 2, scope: !13341)
!13347 = distinct !DISubprogram(name: "__list_del", scope: !11280, file: !11280, line: 110, type: !12891, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13348 = !DILocalVariable(name: "prev", arg: 1, scope: !13347, file: !11280, line: 110, type: !288)
!13349 = !DILocation(line: 110, column: 50, scope: !13347)
!13350 = !DILocalVariable(name: "next", arg: 2, scope: !13347, file: !11280, line: 110, type: !288)
!13351 = !DILocation(line: 110, column: 75, scope: !13347)
!13352 = !DILocation(line: 112, column: 15, scope: !13347)
!13353 = !DILocation(line: 112, column: 2, scope: !13347)
!13354 = !DILocation(line: 112, column: 8, scope: !13347)
!13355 = !DILocation(line: 112, column: 13, scope: !13347)
!13356 = !DILocation(line: 113, column: 2, scope: !13347)
!13357 = !DILocation(line: 113, column: 2, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13347, file: !11280, line: 113, column: 2)
!13359 = !DILocation(line: 113, column: 2, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13358, file: !11280, line: 113, column: 2)
!13361 = !DILocation(line: 113, column: 2, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13358, file: !11280, line: 113, column: 2)
!13363 = !DILocation(line: 114, column: 1, scope: !13347)
!13364 = distinct !DISubprogram(name: "mmc_blk_remove_debugfs", scope: !3, file: !3, line: 2866, type: !10686, scopeLine: 2868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13365 = !DILocalVariable(name: "card", arg: 1, scope: !13364, file: !3, line: 2866, type: !262)
!13366 = !DILocation(line: 2866, column: 53, scope: !13364)
!13367 = !DILocalVariable(name: "md", arg: 2, scope: !13364, file: !3, line: 2867, type: !5408)
!13368 = !DILocation(line: 2867, column: 29, scope: !13364)
!13369 = !DILocation(line: 2869, column: 1, scope: !13364)
!13370 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !10673, file: !10673, line: 384, type: !4518, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13371 = !DILocalVariable(name: "dev", arg: 1, scope: !13370, file: !10673, line: 384, type: !272)
!13372 = !DILocation(line: 384, column: 54, scope: !13370)
!13373 = !DILocation(line: 386, column: 29, scope: !13370)
!13374 = !DILocation(line: 386, column: 9, scope: !13370)
!13375 = !DILocation(line: 386, column: 2, scope: !13370)
!13376 = distinct !DISubprogram(name: "mmc_claim_host", scope: !5138, file: !5138, line: 134, type: !5028, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13377 = !DILocalVariable(name: "host", arg: 1, scope: !13376, file: !5138, line: 134, type: !267)
!13378 = !DILocation(line: 134, column: 52, scope: !13376)
!13379 = !DILocation(line: 136, column: 19, scope: !13376)
!13380 = !DILocation(line: 136, column: 2, scope: !13376)
!13381 = !DILocation(line: 137, column: 1, scope: !13376)
!13382 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !10673, file: !10673, line: 524, type: !4509, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13383 = !DILocalVariable(name: "dev", arg: 1, scope: !13382, file: !10673, line: 524, type: !272)
!13384 = !DILocation(line: 524, column: 54, scope: !13382)
!13385 = !DILocation(line: 526, column: 23, scope: !13382)
!13386 = !DILocation(line: 526, column: 2, scope: !13382)
!13387 = !DILocation(line: 527, column: 1, scope: !13382)
!13388 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !10673, file: !10673, line: 103, type: !4509, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13389 = !DILocalVariable(name: "v", arg: 1, scope: !13390, file: !13391, line: 200, type: !13394)
!13390 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !13391, file: !13391, line: 200, type: !13392, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13391 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!555, !13394, !773, !324}
!13394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!13395 = !DILocation(line: 200, column: 63, scope: !13390, inlinedAt: !13396)
!13396 = distinct !DILocation(line: 1093, column: 12, scope: !13397, inlinedAt: !13401)
!13397 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !13398, file: !13398, line: 1086, type: !13399, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13398 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!13399 = !DISubroutineType(types: !13400)
!13400 = !{!324, !13394, !324, !324}
!13401 = distinct !DILocation(line: 1113, column: 9, scope: !13402, inlinedAt: !13405)
!13402 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !13398, file: !13398, line: 1111, type: !13403, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13403 = !DISubroutineType(types: !13404)
!13404 = !{!555, !13394, !324, !324}
!13405 = distinct !DILocation(line: 789, column: 9, scope: !13406, inlinedAt: !13408)
!13406 = distinct !DISubprogram(name: "atomic_add_unless", scope: !13407, file: !13407, line: 786, type: !13403, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13407 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13408 = distinct !DILocation(line: 105, column: 2, scope: !13388)
!13409 = !DILocalVariable(name: "old", arg: 2, scope: !13390, file: !13391, line: 200, type: !773)
!13410 = !DILocation(line: 200, column: 71, scope: !13390, inlinedAt: !13396)
!13411 = !DILocalVariable(name: "new", arg: 3, scope: !13390, file: !13391, line: 200, type: !324)
!13412 = !DILocation(line: 200, column: 80, scope: !13390, inlinedAt: !13396)
!13413 = !DILocalVariable(name: "success", scope: !13414, file: !13391, line: 202, type: !555)
!13414 = distinct !DILexicalBlock(scope: !13390, file: !13391, line: 202, column: 9)
!13415 = !DILocation(line: 202, column: 9, scope: !13414, inlinedAt: !13396)
!13416 = !DILocalVariable(name: "_old", scope: !13414, file: !13391, line: 202, type: !773)
!13417 = !DILocalVariable(name: "__old", scope: !13414, file: !13391, line: 202, type: !324)
!13418 = !DILocalVariable(name: "__new", scope: !13414, file: !13391, line: 202, type: !324)
!13419 = !DILocalVariable(name: "__ptr", scope: !13414, file: !13391, line: 202, type: !5514)
!13420 = !DILocalVariable(name: "v", arg: 1, scope: !13421, file: !13391, line: 23, type: !13424)
!13421 = distinct !DISubprogram(name: "arch_atomic_read", scope: !13391, file: !13391, line: 23, type: !13422, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13422 = !DISubroutineType(types: !13423)
!13423 = !{!324, !13424}
!13424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13425, size: 64)
!13425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !865)
!13426 = !DILocation(line: 23, column: 61, scope: !13421, inlinedAt: !13427)
!13427 = distinct !DILocation(line: 1088, column: 10, scope: !13397, inlinedAt: !13401)
!13428 = !DILocalVariable(name: "v", arg: 1, scope: !13397, file: !13398, line: 1086, type: !13394)
!13429 = !DILocation(line: 1086, column: 40, scope: !13397, inlinedAt: !13401)
!13430 = !DILocalVariable(name: "a", arg: 2, scope: !13397, file: !13398, line: 1086, type: !324)
!13431 = !DILocation(line: 1086, column: 47, scope: !13397, inlinedAt: !13401)
!13432 = !DILocalVariable(name: "u", arg: 3, scope: !13397, file: !13398, line: 1086, type: !324)
!13433 = !DILocation(line: 1086, column: 54, scope: !13397, inlinedAt: !13401)
!13434 = !DILocalVariable(name: "c", scope: !13397, file: !13398, line: 1088, type: !324)
!13435 = !DILocation(line: 1088, column: 6, scope: !13397, inlinedAt: !13401)
!13436 = !DILocalVariable(name: "v", arg: 1, scope: !13402, file: !13398, line: 1111, type: !13394)
!13437 = !DILocation(line: 1111, column: 34, scope: !13402, inlinedAt: !13405)
!13438 = !DILocalVariable(name: "a", arg: 2, scope: !13402, file: !13398, line: 1111, type: !324)
!13439 = !DILocation(line: 1111, column: 41, scope: !13402, inlinedAt: !13405)
!13440 = !DILocalVariable(name: "u", arg: 3, scope: !13402, file: !13398, line: 1111, type: !324)
!13441 = !DILocation(line: 1111, column: 48, scope: !13402, inlinedAt: !13405)
!13442 = !DILocalVariable(name: "v", arg: 1, scope: !13443, file: !13444, line: 99, type: !13447)
!13443 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !13444, file: !13444, line: 99, type: !13445, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13444 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13445 = !DISubroutineType(types: !13446)
!13446 = !{null, !13447, !386}
!13447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13448, size: 64)
!13448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13449)
!13449 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!13450 = !DILocation(line: 99, column: 79, scope: !13443, inlinedAt: !13451)
!13451 = distinct !DILocation(line: 788, column: 2, scope: !13406, inlinedAt: !13408)
!13452 = !DILocalVariable(name: "size", arg: 2, scope: !13443, file: !13444, line: 99, type: !386)
!13453 = !DILocation(line: 99, column: 89, scope: !13443, inlinedAt: !13451)
!13454 = !DILocalVariable(name: "v", arg: 1, scope: !13406, file: !13407, line: 786, type: !13394)
!13455 = !DILocation(line: 786, column: 29, scope: !13406, inlinedAt: !13408)
!13456 = !DILocalVariable(name: "a", arg: 2, scope: !13406, file: !13407, line: 786, type: !324)
!13457 = !DILocation(line: 786, column: 36, scope: !13406, inlinedAt: !13408)
!13458 = !DILocalVariable(name: "u", arg: 3, scope: !13406, file: !13407, line: 786, type: !324)
!13459 = !DILocation(line: 786, column: 43, scope: !13406, inlinedAt: !13408)
!13460 = !DILocalVariable(name: "dev", arg: 1, scope: !13388, file: !10673, line: 103, type: !272)
!13461 = !DILocation(line: 103, column: 57, scope: !13388)
!13462 = !DILocation(line: 105, column: 21, scope: !13388)
!13463 = !DILocation(line: 105, column: 26, scope: !13388)
!13464 = !DILocation(line: 105, column: 32, scope: !13388)
!13465 = !DILocation(line: 788, column: 31, scope: !13406, inlinedAt: !13408)
!13466 = !DILocation(line: 101, column: 20, scope: !13443, inlinedAt: !13451)
!13467 = !DILocation(line: 101, column: 23, scope: !13443, inlinedAt: !13451)
!13468 = !DILocation(line: 101, column: 2, scope: !13443, inlinedAt: !13451)
!13469 = !DILocation(line: 102, column: 2, scope: !13443, inlinedAt: !13451)
!13470 = !DILocation(line: 789, column: 32, scope: !13406, inlinedAt: !13408)
!13471 = !DILocation(line: 789, column: 35, scope: !13406, inlinedAt: !13408)
!13472 = !DILocation(line: 789, column: 38, scope: !13406, inlinedAt: !13408)
!13473 = !DILocation(line: 1113, column: 38, scope: !13402, inlinedAt: !13405)
!13474 = !DILocation(line: 1113, column: 41, scope: !13402, inlinedAt: !13405)
!13475 = !DILocation(line: 1113, column: 44, scope: !13402, inlinedAt: !13405)
!13476 = !DILocation(line: 1088, column: 27, scope: !13397, inlinedAt: !13401)
!13477 = !DILocation(line: 29, column: 9, scope: !13421, inlinedAt: !13427)
!13478 = !DILocation(line: 1090, column: 2, scope: !13397, inlinedAt: !13401)
!13479 = !DILocation(line: 1091, column: 7, scope: !13480, inlinedAt: !13401)
!13480 = distinct !DILexicalBlock(scope: !13481, file: !13398, line: 1091, column: 7)
!13481 = distinct !DILexicalBlock(scope: !13397, file: !13398, line: 1090, column: 5)
!13482 = !DILocation(line: 1091, column: 7, scope: !13481, inlinedAt: !13401)
!13483 = !DILocation(line: 1092, column: 4, scope: !13480, inlinedAt: !13401)
!13484 = !DILocation(line: 1093, column: 36, scope: !13397, inlinedAt: !13401)
!13485 = !DILocation(line: 1093, column: 43, scope: !13397, inlinedAt: !13401)
!13486 = !DILocation(line: 1093, column: 47, scope: !13397, inlinedAt: !13401)
!13487 = !DILocation(line: 1093, column: 45, scope: !13397, inlinedAt: !13401)
!13488 = !{i32 -2146519652, i32 -2146519497}
!13489 = !DILocation(line: 202, column: 9, scope: !13490, inlinedAt: !13396)
!13490 = distinct !DILexicalBlock(scope: !13414, file: !13391, line: 202, column: 9)
!13491 = !DILocation(line: 202, column: 9, scope: !13390, inlinedAt: !13396)
!13492 = !DILocation(line: 1093, column: 11, scope: !13397, inlinedAt: !13401)
!13493 = !DILocation(line: 1093, column: 2, scope: !13481, inlinedAt: !13401)
!13494 = distinct !{!13494, !13478, !13495}
!13495 = !DILocation(line: 1093, column: 49, scope: !13397, inlinedAt: !13401)
!13496 = !DILocation(line: 1095, column: 9, scope: !13397, inlinedAt: !13401)
!13497 = !DILocation(line: 1113, column: 50, scope: !13402, inlinedAt: !13405)
!13498 = !DILocation(line: 1113, column: 47, scope: !13402, inlinedAt: !13405)
!13499 = !DILocation(line: 106, column: 1, scope: !13388)
!13500 = distinct !DISubprogram(name: "kasan_check_write", scope: !13501, file: !13501, line: 38, type: !13502, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13501 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13502 = !DISubroutineType(types: !13503)
!13503 = !{!555, !13447, !7}
!13504 = !DILocalVariable(name: "p", arg: 1, scope: !13500, file: !13501, line: 38, type: !13447)
!13505 = !DILocation(line: 38, column: 59, scope: !13500)
!13506 = !DILocalVariable(name: "size", arg: 2, scope: !13500, file: !13501, line: 38, type: !7)
!13507 = !DILocation(line: 38, column: 75, scope: !13500)
!13508 = !DILocation(line: 40, column: 2, scope: !13500)
!13509 = distinct !DISubprogram(name: "kcsan_check_access", scope: !13510, file: !13510, line: 178, type: !13511, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !312)
!13510 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13511 = !DISubroutineType(types: !13512)
!13512 = !{null, !13447, !386, !324}
!13513 = !DILocalVariable(name: "ptr", arg: 1, scope: !13509, file: !13510, line: 178, type: !13447)
!13514 = !DILocation(line: 178, column: 60, scope: !13509)
!13515 = !DILocalVariable(name: "size", arg: 2, scope: !13509, file: !13510, line: 178, type: !386)
!13516 = !DILocation(line: 178, column: 72, scope: !13509)
!13517 = !DILocalVariable(name: "type", arg: 3, scope: !13509, file: !13510, line: 179, type: !324)
!13518 = !DILocation(line: 179, column: 15, scope: !13509)
!13519 = !DILocation(line: 179, column: 23, scope: !13509)
