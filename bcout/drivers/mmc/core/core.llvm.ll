; ModuleID = '../bcout/drivers/mmc/core/core.llvm.bc'
source_filename = "drivers/mmc/core/core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_mmc_init4:\09\09\09"
module asm ".long\09mmc_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.lock_class_key = type {}
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.51, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.3, %union.anon.58, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.60, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.61, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.62, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.68, %struct.list_head, %struct.list_head, %union.anon.69 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.66 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.68 = type { %struct.list_head }
%union.anon.69 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.59, i32 }
%union.anon.59 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.70, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.70 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.36, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.36 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.71, %union.anon.72, %union.anon.73, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.76, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.71 = type { %struct.hlist_node }
%union.anon.72 = type { %struct.rb_node }
%union.anon.73 = type { %struct.anon.75 }
%struct.anon.75 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.76 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.77, void (i8*)*, i8* }
%union.anon.77 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.78, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.78 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.37, %union.anon.38, i32 }
%union.anon.37 = type { %struct.list_head }
%union.anon.38 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.60 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.61 = type { %struct.callback_head }
%union.anon.62 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.63 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.63 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.58 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32, [48 x i8] }
%struct.anon.32 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.35 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.35 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.50, i32, [12 x i8] }
%union.anon.50 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.51 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.52, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.55 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, i64 }
%union.anon.55 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.mmc_host = type { %struct.device*, %struct.device, i32, %struct.mmc_host_ops*, %struct.mmc_pwrseq*, i32, i32, i32, i32, i32, i32, i32, %struct.notifier_block, %struct.wakeup_source*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, %struct.spinlock, %struct.mmc_ios, i16, i32, i32, i32, i32, i32, %struct.timer_list, i8, %struct.mmc_card*, %struct.wait_queue_head, %struct.mmc_ctx*, i32, %struct.mmc_ctx, %struct.delayed_work, i32, %struct.mmc_slot, %struct.mmc_bus_ops*, i32, i32, %struct.task_struct*, %struct.delayed_work, i8, %struct.atomic_t, i32, %struct.led_trigger*, %struct.mmc_supply, %struct.dentry*, %struct.mmc_request*, i32, i32, i32, i32, %struct.mmc_cqe_ops*, i8*, i32, i8, i8, i8, [41 x i8], [0 x i64] }
%struct.mmc_host_ops = type { void (%struct.mmc_host*, %struct.mmc_request*, i32)*, {}*, {}*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*, i32)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_card*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_card*, i32, i32)* }
%struct.mmc_pwrseq = type { %struct.mmc_pwrseq_ops*, %struct.device*, %struct.list_head, %struct.module* }
%struct.mmc_pwrseq_ops = type { void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.mmc_ios = type { i32, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mmc_card = type { %struct.mmc_host*, %struct.device, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i8, [4 x i32], [4 x i32], [2 x i32], [16 x i32], %struct.mmc_cid, %struct.mmc_csd, %struct.mmc_ext_csd, %struct.sd_scr, %struct.sd_ssr, %struct.sd_switch_caps, i32, %struct.atomic_t, %struct.sdio_cccr, %struct.sdio_cis, [7 x %struct.sdio_func*], %struct.sdio_func*, i8, i8, i32, i8**, %struct.sdio_func_tuple*, i32, i32, i32, %struct.dentry*, [7 x %struct.mmc_part], i32, i32, %struct.workqueue_struct* }
%struct.mmc_cid = type { i32, [8 x i8], i8, i32, i16, i16, i8, i8, i8 }
%struct.mmc_csd = type { i8, i8, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.mmc_ext_csd = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, i64, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, [8 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], i8, i8, i8, i32 }
%struct.sd_scr = type { i8, i8, i8, i8, i8, i8 }
%struct.sd_ssr = type { i32, i32, i32 }
%struct.sd_switch_caps = type { i32, i32, i32, i32, i32 }
%struct.sdio_cccr = type { i32, i32, i8 }
%struct.sdio_cis = type { i16, i16, i16, i32 }
%struct.sdio_func = type opaque
%struct.sdio_func_tuple = type opaque
%struct.mmc_part = type { i64, i32, [20 x i8], i8, i32 }
%struct.mmc_ctx = type { %struct.task_struct* }
%struct.mmc_slot = type { i32, i8, i8* }
%struct.mmc_bus_ops = type { void (%struct.mmc_host*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)* }
%struct.led_trigger = type {}
%struct.mmc_supply = type { %struct.regulator*, %struct.regulator* }
%struct.regulator = type opaque
%struct.mmc_cqe_ops = type { i32 (%struct.mmc_host*, %struct.mmc_card*)*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)*, {}*, void (%struct.mmc_host*)*, i32 (%struct.mmc_host*)*, i1 (%struct.mmc_host*, %struct.mmc_request*, i8*)*, void (%struct.mmc_host*)*, void (%struct.mmc_host*)* }
%struct.mmc_request = type { %struct.mmc_command*, %struct.mmc_command*, %struct.mmc_data*, %struct.mmc_command*, %struct.completion, %struct.completion, void (%struct.mmc_request*)*, void (%struct.mmc_request*)*, %struct.mmc_host*, i8, i32 }
%struct.mmc_data = type { i32, i32, i32, i32, i32, i32, i32, i32, %struct.mmc_command*, %struct.mmc_request*, i32, i32, %struct.scatterlist*, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.mmc_command = type { i32, i32, [4 x i32], i32, i32, i32, i32, %struct.mmc_data*, %struct.mmc_request* }

@use_spi_crc = dso_local global i8 1, align 1, !dbg !0
@__param_str_use_spi_crc = internal constant [21 x i8] c"mmc_core.use_spi_crc\00", align 16, !dbg !5465
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@__param_use_spi_crc = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_use_spi_crc, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 0, i8 -1, i8 0, %union.anon { i8* @use_spi_crc } }, section "__param", align 8, !dbg !5392
@__UNIQUE_ID_use_spi_crctype292 = internal constant [35 x i8] c"mmc_core.parmtype=use_spi_crc:bool\00", section ".modinfo", align 1, !dbg !5443
@.str = private unnamed_addr constant [24 x i8] c"drivers/mmc/core/core.c\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"\014%s: running CQE recovery\0A\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"\013%s: tuning execution failed: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"card claims to support voltages below defined range\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"no support for card's volts\0A\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"exceeding card's volts\0A\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"\014%s: cannot verify signal voltage switch\0A\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"\014%s: tried to HW reset card, got error %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"\014%s: tried to SW reset card, got error %d\0A\00", align 1
@freqs = internal constant [4 x i32] [i32 400000, i32 300000, i32 200000, i32 100000], align 16, !dbg !5472
@__UNIQUE_ID___addressable_mmc_init316 = internal global i8* bitcast (i32 ()* @mmc_init to i8*), section ".discard.addressable", align 8, !dbg !5448
@__exitcall_mmc_exit = internal global void ()* @mmc_exit, section ".exitcall.exit", align 8, !dbg !5450
@__UNIQUE_ID_file317 = internal constant [40 x i8] c"mmc_core.file=drivers/mmc/core/mmc_core\00", section ".modinfo", align 1, !dbg !5455
@__UNIQUE_ID_license318 = internal constant [21 x i8] c"mmc_core.license=GPL\00", section ".modinfo", align 1, !dbg !5460
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5467
@.str.9 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.10 = private unnamed_addr constant [4 x i8] c"reg\00", align 1
@system_freezable_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.11 = private unnamed_addr constant [47 x i8] c"\013mmc_erase: group start error %d, status %#x\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"\013mmc_erase: group end error %d, status %#x\0A\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"\013mmc_erase: erase error %d, status %#x\0A\00", align 1
@.str.14 = private unnamed_addr constant [47 x i8] c"pre_suspend failed for non-removable host: %d\0A\00", align 1
@llvm.used = appending global [7 x i8*] [i8* bitcast (%struct.kernel_param* @__param_use_spi_crc to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_use_spi_crctype292, i32 0, i32 0), i8* bitcast (void ()* @mmc_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mmc_init316 to i8*), i8* bitcast (void ()** @__exitcall_mmc_exit to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_file317, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license318, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_command_done(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5481 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %tmp = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5484, metadata !DIExpression()), !dbg !5485
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5486
  %cap_cmd_during_tfr = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 9, !dbg !5488
  %1 = load i8, i8* %cap_cmd_during_tfr, align 8, !dbg !5488
  %tobool = trunc i8 %1 to i1, !dbg !5488
  br i1 %tobool, label %if.end, label %if.then, !dbg !5489

if.then:                                          ; preds = %entry
  br label %return, !dbg !5490

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5491
  call void @mmc_complete_cmd(%struct.mmc_request* %2) #10, !dbg !5492
  store i32 0, i32* %tmp, align 4, !dbg !5493
  %3 = load i32, i32* %tmp, align 4, !dbg !5496
  br label %return, !dbg !5497

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5497
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_complete_cmd(%struct.mmc_request* %mrq) #0 !dbg !5498 {
entry:
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5501
  %cap_cmd_during_tfr = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 9, !dbg !5503
  %1 = load i8, i8* %cap_cmd_during_tfr, align 8, !dbg !5503
  %tobool = trunc i8 %1 to i1, !dbg !5503
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5504

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5505
  %cmd_completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 5, !dbg !5506
  %call = call zeroext i1 @completion_done(%struct.completion* %cmd_completion) #10, !dbg !5507
  br i1 %call, label %if.end, label %if.then, !dbg !5508

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5509
  %cmd_completion1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %3, i32 0, i32 5, !dbg !5510
  call void @complete_all(%struct.completion* %cmd_completion1) #10, !dbg !5511
  br label %if.end, !dbg !5511

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_request_done(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5513 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %cmd = alloca %struct.mmc_command*, align 8
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp59 = alloca i32, align 4
  %tmp63 = alloca i32, align 4
  %tmp68 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd, metadata !5518, metadata !DIExpression()), !dbg !5519
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5520
  %cmd1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 1, !dbg !5521
  %1 = load %struct.mmc_command*, %struct.mmc_command** %cmd1, align 8, !dbg !5521
  store %struct.mmc_command* %1, %struct.mmc_command** %cmd, align 8, !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5522, metadata !DIExpression()), !dbg !5523
  %2 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5524
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %2, i32 0, i32 5, !dbg !5525
  %3 = load i32, i32* %error, align 8, !dbg !5525
  store i32 %3, i32* %err, align 4, !dbg !5523
  %4 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5526
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %4, i32 0, i32 0, !dbg !5528
  %5 = load i32, i32* %opcode, align 8, !dbg !5528
  %cmp = icmp ne i32 %5, 19, !dbg !5529
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5530

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5531
  %opcode2 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %6, i32 0, i32 0, !dbg !5532
  %7 = load i32, i32* %opcode2, align 8, !dbg !5532
  %cmp3 = icmp ne i32 %7, 21, !dbg !5533
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !5534

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5535
  %retune_crc_disable = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 30, !dbg !5536
  %bf.load = load i16, i16* %retune_crc_disable, align 32, !dbg !5536
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !5536
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5536
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5536
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5535
  br i1 %tobool, label %if.end, label %land.lhs.true5, !dbg !5537

land.lhs.true5:                                   ; preds = %land.lhs.true4
  %9 = load i32, i32* %err, align 4, !dbg !5538
  %cmp6 = icmp eq i32 %9, -84, !dbg !5539
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !5540

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5541
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %10, i32 0, i32 0, !dbg !5542
  %11 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !5542
  %tobool7 = icmp ne %struct.mmc_command* %11, null, !dbg !5541
  br i1 %tobool7, label %land.lhs.true8, label %lor.lhs.false12, !dbg !5543

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %12 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5544
  %sbc9 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %12, i32 0, i32 0, !dbg !5545
  %13 = load %struct.mmc_command*, %struct.mmc_command** %sbc9, align 8, !dbg !5545
  %error10 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %13, i32 0, i32 5, !dbg !5546
  %14 = load i32, i32* %error10, align 8, !dbg !5546
  %cmp11 = icmp eq i32 %14, -84, !dbg !5547
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !5548

lor.lhs.false12:                                  ; preds = %land.lhs.true8, %lor.lhs.false
  %15 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5549
  %data = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %15, i32 0, i32 2, !dbg !5550
  %16 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !5550
  %tobool13 = icmp ne %struct.mmc_data* %16, null, !dbg !5549
  br i1 %tobool13, label %land.lhs.true14, label %lor.lhs.false18, !dbg !5551

land.lhs.true14:                                  ; preds = %lor.lhs.false12
  %17 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5552
  %data15 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %17, i32 0, i32 2, !dbg !5553
  %18 = load %struct.mmc_data*, %struct.mmc_data** %data15, align 8, !dbg !5553
  %error16 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %18, i32 0, i32 5, !dbg !5554
  %19 = load i32, i32* %error16, align 4, !dbg !5554
  %cmp17 = icmp eq i32 %19, -84, !dbg !5555
  br i1 %cmp17, label %if.then, label %lor.lhs.false18, !dbg !5556

lor.lhs.false18:                                  ; preds = %land.lhs.true14, %lor.lhs.false12
  %20 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5557
  %stop = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %20, i32 0, i32 3, !dbg !5558
  %21 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !5558
  %tobool19 = icmp ne %struct.mmc_command* %21, null, !dbg !5557
  br i1 %tobool19, label %land.lhs.true20, label %if.end, !dbg !5559

land.lhs.true20:                                  ; preds = %lor.lhs.false18
  %22 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5560
  %stop21 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %22, i32 0, i32 3, !dbg !5561
  %23 = load %struct.mmc_command*, %struct.mmc_command** %stop21, align 8, !dbg !5561
  %error22 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %23, i32 0, i32 5, !dbg !5562
  %24 = load i32, i32* %error22, align 8, !dbg !5562
  %cmp23 = icmp eq i32 %24, -84, !dbg !5563
  br i1 %cmp23, label %if.then, label %if.end, !dbg !5564

if.then:                                          ; preds = %land.lhs.true20, %land.lhs.true14, %land.lhs.true8, %land.lhs.true5
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5565
  call void @mmc_retune_needed(%struct.mmc_host* %25) #10, !dbg !5566
  br label %if.end, !dbg !5566

if.end:                                           ; preds = %if.then, %land.lhs.true20, %lor.lhs.false18, %land.lhs.true4, %land.lhs.true, %entry
  %26 = load i32, i32* %err, align 4, !dbg !5567
  %tobool24 = icmp ne i32 %26, 0, !dbg !5567
  br i1 %tobool24, label %land.lhs.true25, label %if.end35, !dbg !5569

land.lhs.true25:                                  ; preds = %if.end
  %27 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5570
  %retries = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %27, i32 0, i32 4, !dbg !5571
  %28 = load i32, i32* %retries, align 4, !dbg !5571
  %tobool26 = icmp ne i32 %28, 0, !dbg !5570
  br i1 %tobool26, label %land.lhs.true27, label %if.end35, !dbg !5572

land.lhs.true27:                                  ; preds = %land.lhs.true25
  %29 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5573
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %29, i32 0, i32 17, !dbg !5573
  %30 = load i32, i32* %caps, align 4, !dbg !5573
  %and = and i32 %30, 16, !dbg !5573
  %tobool28 = icmp ne i32 %and, 0, !dbg !5573
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !5574

if.then29:                                        ; preds = %land.lhs.true27
  %31 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5575
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %31, i32 0, i32 2, !dbg !5578
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !5575
  %32 = load i32, i32* %arrayidx, align 8, !dbg !5575
  %and30 = and i32 %32, 4, !dbg !5579
  %tobool31 = icmp ne i32 %and30, 0, !dbg !5579
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !5580

if.then32:                                        ; preds = %if.then29
  %33 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5581
  %retries33 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %33, i32 0, i32 4, !dbg !5582
  store i32 0, i32* %retries33, align 4, !dbg !5583
  br label %if.end34, !dbg !5581

if.end34:                                         ; preds = %if.then32, %if.then29
  br label %if.end35, !dbg !5584

if.end35:                                         ; preds = %if.end34, %land.lhs.true27, %land.lhs.true25, %if.end
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5585
  %ongoing_mrq = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 57, !dbg !5587
  %35 = load %struct.mmc_request*, %struct.mmc_request** %ongoing_mrq, align 8, !dbg !5587
  %36 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5588
  %cmp36 = icmp eq %struct.mmc_request* %35, %36, !dbg !5589
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !5590

if.then37:                                        ; preds = %if.end35
  %37 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5591
  %ongoing_mrq38 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %37, i32 0, i32 57, !dbg !5592
  store %struct.mmc_request* null, %struct.mmc_request** %ongoing_mrq38, align 8, !dbg !5593
  br label %if.end39, !dbg !5591

if.end39:                                         ; preds = %if.then37, %if.end35
  %38 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5594
  call void @mmc_complete_cmd(%struct.mmc_request* %38) #10, !dbg !5595
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5596
  %40 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5597
  call void @trace_mmc_request_done(%struct.mmc_host* %39, %struct.mmc_request* %40) #10, !dbg !5598
  %41 = load i32, i32* %err, align 4, !dbg !5599
  %tobool40 = icmp ne i32 %41, 0, !dbg !5599
  br i1 %tobool40, label %lor.lhs.false41, label %if.then50, !dbg !5601

lor.lhs.false41:                                  ; preds = %if.end39
  %42 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5602
  %retries42 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %42, i32 0, i32 4, !dbg !5603
  %43 = load i32, i32* %retries42, align 4, !dbg !5603
  %tobool43 = icmp ne i32 %43, 0, !dbg !5602
  br i1 %tobool43, label %lor.lhs.false44, label %if.then50, !dbg !5604

lor.lhs.false44:                                  ; preds = %lor.lhs.false41
  %44 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5605
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %44, i32 0, i32 38, !dbg !5605
  %45 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5605
  %tobool45 = icmp ne %struct.mmc_card* %45, null, !dbg !5605
  br i1 %tobool45, label %land.lhs.true46, label %if.end70, !dbg !5605

land.lhs.true46:                                  ; preds = %lor.lhs.false44
  %46 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5605
  %card47 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %46, i32 0, i32 38, !dbg !5605
  %47 = load %struct.mmc_card*, %struct.mmc_card** %card47, align 8, !dbg !5605
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %47, i32 0, i32 5, !dbg !5605
  %48 = load i32, i32* %state, align 4, !dbg !5605
  %and48 = and i32 %48, 16, !dbg !5605
  %tobool49 = icmp ne i32 %and48, 0, !dbg !5605
  br i1 %tobool49, label %if.then50, label %if.end70, !dbg !5606

if.then50:                                        ; preds = %land.lhs.true46, %lor.lhs.false41, %if.end39
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5607
  %50 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5609
  call void @mmc_should_fail_request(%struct.mmc_host* %49, %struct.mmc_request* %50) #10, !dbg !5610
  %51 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5611
  %ongoing_mrq51 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %51, i32 0, i32 57, !dbg !5613
  %52 = load %struct.mmc_request*, %struct.mmc_request** %ongoing_mrq51, align 8, !dbg !5613
  %tobool52 = icmp ne %struct.mmc_request* %52, null, !dbg !5611
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !5614

if.then53:                                        ; preds = %if.then50
  %53 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5615
  %led = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %53, i32 0, i32 54, !dbg !5616
  %54 = load %struct.led_trigger*, %struct.led_trigger** %led, align 8, !dbg !5616
  call void @led_trigger_event(%struct.led_trigger* %54, i32 0) #10, !dbg !5617
  br label %if.end54, !dbg !5617

if.end54:                                         ; preds = %if.then53, %if.then50
  %55 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5618
  %sbc55 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %55, i32 0, i32 0, !dbg !5620
  %56 = load %struct.mmc_command*, %struct.mmc_command** %sbc55, align 8, !dbg !5620
  %tobool56 = icmp ne %struct.mmc_command* %56, null, !dbg !5618
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !5621

if.then57:                                        ; preds = %if.end54
  store i32 0, i32* %tmp, align 4, !dbg !5622
  %57 = load i32, i32* %tmp, align 4, !dbg !5626
  br label %if.end58, !dbg !5627

if.end58:                                         ; preds = %if.then57, %if.end54
  store i32 0, i32* %tmp59, align 4, !dbg !5628
  %58 = load i32, i32* %tmp59, align 4, !dbg !5631
  %59 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5632
  %data60 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %59, i32 0, i32 2, !dbg !5634
  %60 = load %struct.mmc_data*, %struct.mmc_data** %data60, align 8, !dbg !5634
  %tobool61 = icmp ne %struct.mmc_data* %60, null, !dbg !5632
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !5635

if.then62:                                        ; preds = %if.end58
  store i32 0, i32* %tmp63, align 4, !dbg !5636
  %61 = load i32, i32* %tmp63, align 4, !dbg !5640
  br label %if.end64, !dbg !5641

if.end64:                                         ; preds = %if.then62, %if.end58
  %62 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5642
  %stop65 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %62, i32 0, i32 3, !dbg !5644
  %63 = load %struct.mmc_command*, %struct.mmc_command** %stop65, align 8, !dbg !5644
  %tobool66 = icmp ne %struct.mmc_command* %63, null, !dbg !5642
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !5645

if.then67:                                        ; preds = %if.end64
  store i32 0, i32* %tmp68, align 4, !dbg !5646
  %64 = load i32, i32* %tmp68, align 4, !dbg !5650
  br label %if.end69, !dbg !5651

if.end69:                                         ; preds = %if.then67, %if.end64
  br label %if.end70, !dbg !5652

if.end70:                                         ; preds = %if.end69, %land.lhs.true46, %lor.lhs.false44
  %65 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5653
  %done = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %65, i32 0, i32 6, !dbg !5655
  %66 = load void (%struct.mmc_request*)*, void (%struct.mmc_request*)** %done, align 8, !dbg !5655
  %tobool71 = icmp ne void (%struct.mmc_request*)* %66, null, !dbg !5653
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !5656

if.then72:                                        ; preds = %if.end70
  %67 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5657
  %done73 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %67, i32 0, i32 6, !dbg !5658
  %68 = load void (%struct.mmc_request*)*, void (%struct.mmc_request*)** %done73, align 8, !dbg !5658
  %69 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5659
  call void %68(%struct.mmc_request* %69) #10, !dbg !5657
  br label %if.end74, !dbg !5657

if.end74:                                         ; preds = %if.then72, %if.end70
  ret void, !dbg !5660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_retune_needed(%struct.mmc_host* %host) #0 !dbg !5661 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5664
  %can_retune = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !5666
  %bf.load = load i16, i16* %can_retune, align 32, !dbg !5666
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !5666
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5666
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5666
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5664
  br i1 %tobool, label %if.then, label %if.end, !dbg !5667

if.then:                                          ; preds = %entry
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5668
  %need_retune = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 33, !dbg !5669
  store i32 1, i32* %need_retune, align 4, !dbg !5670
  br label %if.end, !dbg !5668

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_mmc_request_done(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5672 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5674, metadata !DIExpression()), !dbg !5675
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5676, metadata !DIExpression()), !dbg !5675
  ret void, !dbg !5675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_should_fail_request(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5677 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  ret void, !dbg !5682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @led_trigger_event(%struct.led_trigger* %trigger, i32 %event) #0 !dbg !5683 {
entry:
  %trigger.addr = alloca %struct.led_trigger*, align 8
  %event.addr = alloca i32, align 4
  store %struct.led_trigger* %trigger, %struct.led_trigger** %trigger.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.led_trigger** %trigger.addr, metadata !5686, metadata !DIExpression()), !dbg !5687
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  ret void, !dbg !5690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_start_request(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5691 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %err = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5696, metadata !DIExpression()), !dbg !5697
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5698
  %cmd_completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 5, !dbg !5698
  call void @__init_completion(%struct.completion* %cmd_completion) #10, !dbg !5698
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5699
  call void @mmc_retune_hold(%struct.mmc_host* %1) #10, !dbg !5700
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5701
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !5701
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !5701
  %tobool = icmp ne %struct.mmc_card* %3, null, !dbg !5701
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5701

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5701
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 38, !dbg !5701
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !5701
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 5, !dbg !5701
  %6 = load i32, i32* %state, align 4, !dbg !5701
  %and = and i32 %6, 16, !dbg !5701
  %tobool2 = icmp ne i32 %and, 0, !dbg !5701
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5703

if.then:                                          ; preds = %land.lhs.true
  store i32 -123, i32* %retval, align 4, !dbg !5704
  br label %return, !dbg !5704

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5705
  %8 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5706
  call void @mmc_mrq_pr_debug(%struct.mmc_host* %7, %struct.mmc_request* %8, i1 zeroext false) #10, !dbg !5707
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5708, metadata !DIExpression()), !dbg !5710
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5710
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 30, !dbg !5710
  %bf.load = load i16, i16* %claimed, align 32, !dbg !5710
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !5710
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5710
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5710
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !5710
  %lnot = xor i1 %tobool3, true, !dbg !5710
  %lnot4 = xor i1 %lnot, true, !dbg !5710
  %lnot5 = xor i1 %lnot4, true, !dbg !5710
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5710
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5710
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !5711
  %tobool6 = icmp ne i32 %10, 0, !dbg !5711
  %lnot7 = xor i1 %tobool6, true, !dbg !5711
  %lnot9 = xor i1 %lnot7, true, !dbg !5711
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5711
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5711
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5711
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !5710

if.then12:                                        ; preds = %if.end
  br label %do.body, !dbg !5711

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !5713

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !5715

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !5713

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 348, i32 2305, i64 12) #8, !dbg !5717, !srcloc !5719
  br label %do.end15, !dbg !5717

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 293) #8, !dbg !5720, !srcloc !5722
  br label %do.body16, !dbg !5713

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !5723

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !5713

do.end18:                                         ; preds = %do.end17
  br label %if.end19, !dbg !5713

if.end19:                                         ; preds = %do.end18, %if.end
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !5710
  %tobool20 = icmp ne i32 %11, 0, !dbg !5710
  %lnot21 = xor i1 %tobool20, true, !dbg !5710
  %lnot23 = xor i1 %lnot21, true, !dbg !5710
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !5710
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !5710
  store i64 %conv25, i64* %tmp, align 8, !dbg !5711
  %12 = load i64, i64* %tmp, align 8, !dbg !5710
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5725
  %14 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5726
  %call = call i32 @mmc_mrq_prep(%struct.mmc_host* %13, %struct.mmc_request* %14) #10, !dbg !5727
  store i32 %call, i32* %err, align 4, !dbg !5728
  %15 = load i32, i32* %err, align 4, !dbg !5729
  %tobool26 = icmp ne i32 %15, 0, !dbg !5729
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !5731

if.then27:                                        ; preds = %if.end19
  %16 = load i32, i32* %err, align 4, !dbg !5732
  store i32 %16, i32* %retval, align 4, !dbg !5733
  br label %return, !dbg !5733

if.end28:                                         ; preds = %if.end19
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5734
  %led = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 54, !dbg !5735
  %18 = load %struct.led_trigger*, %struct.led_trigger** %led, align 8, !dbg !5735
  call void @led_trigger_event(%struct.led_trigger* %18, i32 255) #10, !dbg !5736
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5737
  %20 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5738
  call void @__mmc_start_request(%struct.mmc_host* %19, %struct.mmc_request* %20) #10, !dbg !5739
  store i32 0, i32* %retval, align 4, !dbg !5740
  br label %return, !dbg !5740

return:                                           ; preds = %if.end28, %if.then27, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !5741
  ret i32 %21, !dbg !5741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !5469 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !5744
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !5745
  store i32 0, i32* %done, align 8, !dbg !5746
  br label %do.body, !dbg !5747

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !5748
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !5748
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #10, !dbg !5748
  br label %do.end, !dbg !5748

do.end:                                           ; preds = %do.body
  ret void, !dbg !5750
}

; Function Attrs: noredzone
declare dso_local void @mmc_retune_hold(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_mrq_pr_debug(%struct.mmc_host* %host, %struct.mmc_request* %mrq, i1 zeroext %cqe) #0 !dbg !5751 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %cqe.addr = alloca i8, align 1
  %tmp = alloca i32, align 4
  %tmp3 = alloca i32, align 4
  %tmp6 = alloca i32, align 4
  %tmp11 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5756, metadata !DIExpression()), !dbg !5757
  %frombool = zext i1 %cqe to i8
  store i8 %frombool, i8* %cqe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cqe.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5760
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 0, !dbg !5762
  %1 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !5762
  %tobool = icmp ne %struct.mmc_command* %1, null, !dbg !5760
  br i1 %tobool, label %if.then, label %if.end, !dbg !5763

if.then:                                          ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !5764
  %2 = load i32, i32* %tmp, align 4, !dbg !5768
  br label %if.end, !dbg !5769

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5770
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %3, i32 0, i32 1, !dbg !5772
  %4 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5772
  %tobool1 = icmp ne %struct.mmc_command* %4, null, !dbg !5770
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5773

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %tmp3, align 4, !dbg !5774
  %5 = load i32, i32* %tmp3, align 4, !dbg !5778
  br label %if.end8, !dbg !5779

if.else:                                          ; preds = %if.end
  %6 = load i8, i8* %cqe.addr, align 1, !dbg !5780
  %tobool4 = trunc i8 %6 to i1, !dbg !5780
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5782

if.then5:                                         ; preds = %if.else
  store i32 0, i32* %tmp6, align 4, !dbg !5783
  %7 = load i32, i32* %tmp6, align 4, !dbg !5787
  br label %if.end7, !dbg !5788

if.end7:                                          ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then2
  %8 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5789
  %data = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %8, i32 0, i32 2, !dbg !5791
  %9 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !5791
  %tobool9 = icmp ne %struct.mmc_data* %9, null, !dbg !5789
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !5792

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %tmp11, align 4, !dbg !5793
  %10 = load i32, i32* %tmp11, align 4, !dbg !5797
  br label %if.end12, !dbg !5798

if.end12:                                         ; preds = %if.then10, %if.end8
  %11 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5799
  %stop = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %11, i32 0, i32 3, !dbg !5801
  %12 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !5801
  %tobool13 = icmp ne %struct.mmc_command* %12, null, !dbg !5799
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !5802

if.then14:                                        ; preds = %if.end12
  store i32 0, i32* %tmp15, align 4, !dbg !5803
  %13 = load i32, i32* %tmp15, align 4, !dbg !5807
  br label %if.end16, !dbg !5808

if.end16:                                         ; preds = %if.then14, %if.end12
  ret void, !dbg !5809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_mrq_prep(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5810 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %i = alloca i32, align 4
  %sz = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5815, metadata !DIExpression()), !dbg !5816
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !5817, metadata !DIExpression()), !dbg !5818
  store i32 0, i32* %sz, align 4, !dbg !5818
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !5819, metadata !DIExpression()), !dbg !5820
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5821
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 1, !dbg !5823
  %1 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5823
  %tobool = icmp ne %struct.mmc_command* %1, null, !dbg !5821
  br i1 %tobool, label %if.then, label %if.end, !dbg !5824

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5825
  %cmd1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 1, !dbg !5827
  %3 = load %struct.mmc_command*, %struct.mmc_command** %cmd1, align 8, !dbg !5827
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %3, i32 0, i32 5, !dbg !5828
  store i32 0, i32* %error, align 8, !dbg !5829
  %4 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5830
  %5 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5831
  %cmd2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %5, i32 0, i32 1, !dbg !5832
  %6 = load %struct.mmc_command*, %struct.mmc_command** %cmd2, align 8, !dbg !5832
  %mrq3 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %6, i32 0, i32 8, !dbg !5833
  store %struct.mmc_request* %4, %struct.mmc_request** %mrq3, align 8, !dbg !5834
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5835
  %data = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %7, i32 0, i32 2, !dbg !5836
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !5836
  %9 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5837
  %cmd4 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %9, i32 0, i32 1, !dbg !5838
  %10 = load %struct.mmc_command*, %struct.mmc_command** %cmd4, align 8, !dbg !5838
  %data5 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %10, i32 0, i32 7, !dbg !5839
  store %struct.mmc_data* %8, %struct.mmc_data** %data5, align 8, !dbg !5840
  br label %if.end, !dbg !5841

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5842
  %sbc = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %11, i32 0, i32 0, !dbg !5844
  %12 = load %struct.mmc_command*, %struct.mmc_command** %sbc, align 8, !dbg !5844
  %tobool6 = icmp ne %struct.mmc_command* %12, null, !dbg !5842
  br i1 %tobool6, label %if.then7, label %if.end12, !dbg !5845

if.then7:                                         ; preds = %if.end
  %13 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5846
  %sbc8 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %13, i32 0, i32 0, !dbg !5848
  %14 = load %struct.mmc_command*, %struct.mmc_command** %sbc8, align 8, !dbg !5848
  %error9 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %14, i32 0, i32 5, !dbg !5849
  store i32 0, i32* %error9, align 8, !dbg !5850
  %15 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5851
  %16 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5852
  %sbc10 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %16, i32 0, i32 0, !dbg !5853
  %17 = load %struct.mmc_command*, %struct.mmc_command** %sbc10, align 8, !dbg !5853
  %mrq11 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %17, i32 0, i32 8, !dbg !5854
  store %struct.mmc_request* %15, %struct.mmc_request** %mrq11, align 8, !dbg !5855
  br label %if.end12, !dbg !5856

if.end12:                                         ; preds = %if.then7, %if.end
  %18 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5857
  %data13 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %18, i32 0, i32 2, !dbg !5859
  %19 = load %struct.mmc_data*, %struct.mmc_data** %data13, align 8, !dbg !5859
  %tobool14 = icmp ne %struct.mmc_data* %19, null, !dbg !5857
  br i1 %tobool14, label %if.then15, label %if.end53, !dbg !5860

if.then15:                                        ; preds = %if.end12
  %20 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5861
  %data16 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %20, i32 0, i32 2, !dbg !5864
  %21 = load %struct.mmc_data*, %struct.mmc_data** %data16, align 8, !dbg !5864
  %blksz = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %21, i32 0, i32 2, !dbg !5865
  %22 = load i32, i32* %blksz, align 8, !dbg !5865
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5866
  %max_blk_size = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 25, !dbg !5867
  %24 = load i32, i32* %max_blk_size, align 64, !dbg !5867
  %cmp = icmp ugt i32 %22, %24, !dbg !5868
  br i1 %cmp, label %if.then25, label %lor.lhs.false, !dbg !5869

lor.lhs.false:                                    ; preds = %if.then15
  %25 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5870
  %data17 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %25, i32 0, i32 2, !dbg !5871
  %26 = load %struct.mmc_data*, %struct.mmc_data** %data17, align 8, !dbg !5871
  %blocks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %26, i32 0, i32 3, !dbg !5872
  %27 = load i32, i32* %blocks, align 4, !dbg !5872
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5873
  %max_blk_count = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %28, i32 0, i32 26, !dbg !5874
  %29 = load i32, i32* %max_blk_count, align 4, !dbg !5874
  %cmp18 = icmp ugt i32 %27, %29, !dbg !5875
  br i1 %cmp18, label %if.then25, label %lor.lhs.false19, !dbg !5876

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %30 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5877
  %data20 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %30, i32 0, i32 2, !dbg !5878
  %31 = load %struct.mmc_data*, %struct.mmc_data** %data20, align 8, !dbg !5878
  %blocks21 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %31, i32 0, i32 3, !dbg !5879
  %32 = load i32, i32* %blocks21, align 4, !dbg !5879
  %33 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5880
  %data22 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %33, i32 0, i32 2, !dbg !5881
  %34 = load %struct.mmc_data*, %struct.mmc_data** %data22, align 8, !dbg !5881
  %blksz23 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %34, i32 0, i32 2, !dbg !5882
  %35 = load i32, i32* %blksz23, align 8, !dbg !5882
  %mul = mul i32 %32, %35, !dbg !5883
  %36 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5884
  %max_req_size = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %36, i32 0, i32 24, !dbg !5885
  %37 = load i32, i32* %max_req_size, align 4, !dbg !5885
  %cmp24 = icmp ugt i32 %mul, %37, !dbg !5886
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5887

if.then25:                                        ; preds = %lor.lhs.false19, %lor.lhs.false, %if.then15
  store i32 -22, i32* %retval, align 4, !dbg !5888
  br label %return, !dbg !5888

if.end26:                                         ; preds = %lor.lhs.false19
  store i32 0, i32* %i, align 4, !dbg !5889
  %38 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5889
  %data27 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %38, i32 0, i32 2, !dbg !5889
  %39 = load %struct.mmc_data*, %struct.mmc_data** %data27, align 8, !dbg !5889
  %sg28 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %39, i32 0, i32 12, !dbg !5889
  %40 = load %struct.scatterlist*, %struct.scatterlist** %sg28, align 8, !dbg !5889
  store %struct.scatterlist* %40, %struct.scatterlist** %sg, align 8, !dbg !5889
  br label %for.cond, !dbg !5889

for.cond:                                         ; preds = %for.inc, %if.end26
  %41 = load i32, i32* %i, align 4, !dbg !5891
  %42 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5891
  %data29 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %42, i32 0, i32 2, !dbg !5891
  %43 = load %struct.mmc_data*, %struct.mmc_data** %data29, align 8, !dbg !5891
  %sg_len = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %43, i32 0, i32 10, !dbg !5891
  %44 = load i32, i32* %sg_len, align 8, !dbg !5891
  %cmp30 = icmp ult i32 %41, %44, !dbg !5891
  br i1 %cmp30, label %for.body, label %for.end, !dbg !5889

for.body:                                         ; preds = %for.cond
  %45 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !5893
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %45, i32 0, i32 2, !dbg !5894
  %46 = load i32, i32* %length, align 4, !dbg !5894
  %47 = load i32, i32* %sz, align 4, !dbg !5895
  %add = add i32 %47, %46, !dbg !5895
  store i32 %add, i32* %sz, align 4, !dbg !5895
  br label %for.inc, !dbg !5896

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !5891
  %inc = add i32 %48, 1, !dbg !5891
  store i32 %inc, i32* %i, align 4, !dbg !5891
  %49 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !5891
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %49) #10, !dbg !5891
  store %struct.scatterlist* %call, %struct.scatterlist** %sg, align 8, !dbg !5891
  br label %for.cond, !dbg !5891, !llvm.loop !5897

for.end:                                          ; preds = %for.cond
  %50 = load i32, i32* %sz, align 4, !dbg !5899
  %51 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5901
  %data31 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %51, i32 0, i32 2, !dbg !5902
  %52 = load %struct.mmc_data*, %struct.mmc_data** %data31, align 8, !dbg !5902
  %blocks32 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %52, i32 0, i32 3, !dbg !5903
  %53 = load i32, i32* %blocks32, align 4, !dbg !5903
  %54 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5904
  %data33 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %54, i32 0, i32 2, !dbg !5905
  %55 = load %struct.mmc_data*, %struct.mmc_data** %data33, align 8, !dbg !5905
  %blksz34 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %55, i32 0, i32 2, !dbg !5906
  %56 = load i32, i32* %blksz34, align 8, !dbg !5906
  %mul35 = mul i32 %53, %56, !dbg !5907
  %cmp36 = icmp ne i32 %50, %mul35, !dbg !5908
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !5909

if.then37:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !5910
  br label %return, !dbg !5910

if.end38:                                         ; preds = %for.end
  %57 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5911
  %data39 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %57, i32 0, i32 2, !dbg !5912
  %58 = load %struct.mmc_data*, %struct.mmc_data** %data39, align 8, !dbg !5912
  %error40 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %58, i32 0, i32 5, !dbg !5913
  store i32 0, i32* %error40, align 4, !dbg !5914
  %59 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5915
  %60 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5916
  %data41 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %60, i32 0, i32 2, !dbg !5917
  %61 = load %struct.mmc_data*, %struct.mmc_data** %data41, align 8, !dbg !5917
  %mrq42 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %61, i32 0, i32 9, !dbg !5918
  store %struct.mmc_request* %59, %struct.mmc_request** %mrq42, align 8, !dbg !5919
  %62 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5920
  %stop = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %62, i32 0, i32 3, !dbg !5922
  %63 = load %struct.mmc_command*, %struct.mmc_command** %stop, align 8, !dbg !5922
  %tobool43 = icmp ne %struct.mmc_command* %63, null, !dbg !5920
  br i1 %tobool43, label %if.then44, label %if.end52, !dbg !5923

if.then44:                                        ; preds = %if.end38
  %64 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5924
  %stop45 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %64, i32 0, i32 3, !dbg !5926
  %65 = load %struct.mmc_command*, %struct.mmc_command** %stop45, align 8, !dbg !5926
  %66 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5927
  %data46 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %66, i32 0, i32 2, !dbg !5928
  %67 = load %struct.mmc_data*, %struct.mmc_data** %data46, align 8, !dbg !5928
  %stop47 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %67, i32 0, i32 8, !dbg !5929
  store %struct.mmc_command* %65, %struct.mmc_command** %stop47, align 8, !dbg !5930
  %68 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5931
  %stop48 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %68, i32 0, i32 3, !dbg !5932
  %69 = load %struct.mmc_command*, %struct.mmc_command** %stop48, align 8, !dbg !5932
  %error49 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %69, i32 0, i32 5, !dbg !5933
  store i32 0, i32* %error49, align 8, !dbg !5934
  %70 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5935
  %71 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5936
  %stop50 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %71, i32 0, i32 3, !dbg !5937
  %72 = load %struct.mmc_command*, %struct.mmc_command** %stop50, align 8, !dbg !5937
  %mrq51 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %72, i32 0, i32 8, !dbg !5938
  store %struct.mmc_request* %70, %struct.mmc_request** %mrq51, align 8, !dbg !5939
  br label %if.end52, !dbg !5940

if.end52:                                         ; preds = %if.then44, %if.end38
  br label %if.end53, !dbg !5941

if.end53:                                         ; preds = %if.end52, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !5942
  br label %return, !dbg !5942

return:                                           ; preds = %if.end53, %if.then37, %if.then25
  %73 = load i32, i32* %retval, align 4, !dbg !5943
  ret i32 %73, !dbg !5943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mmc_start_request(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !5944 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %err = alloca i32, align 4
  %tries = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5949, metadata !DIExpression()), !dbg !5950
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5951
  %call = call i32 @mmc_retune(%struct.mmc_host* %0) #10, !dbg !5952
  store i32 %call, i32* %err, align 4, !dbg !5953
  %1 = load i32, i32* %err, align 4, !dbg !5954
  %tobool = icmp ne i32 %1, 0, !dbg !5954
  br i1 %tobool, label %if.then, label %if.end, !dbg !5956

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !5957
  %3 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5959
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %3, i32 0, i32 1, !dbg !5960
  %4 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !5960
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %4, i32 0, i32 5, !dbg !5961
  store i32 %2, i32* %error, align 8, !dbg !5962
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5963
  %6 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5964
  call void @mmc_request_done(%struct.mmc_host* %5, %struct.mmc_request* %6) #10, !dbg !5965
  br label %return, !dbg !5966

if.end:                                           ; preds = %entry
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5967
  %cmd1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %7, i32 0, i32 1, !dbg !5969
  %8 = load %struct.mmc_command*, %struct.mmc_command** %cmd1, align 8, !dbg !5969
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %8, i32 0, i32 0, !dbg !5970
  %9 = load i32, i32* %opcode, align 8, !dbg !5970
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5971
  %cmd2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %10, i32 0, i32 1, !dbg !5972
  %11 = load %struct.mmc_command*, %struct.mmc_command** %cmd2, align 8, !dbg !5972
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %11, i32 0, i32 1, !dbg !5973
  %12 = load i32, i32* %arg, align 4, !dbg !5973
  %call3 = call zeroext i1 @sdio_is_io_busy(i32 %9, i32 %12) #10, !dbg !5974
  br i1 %call3, label %land.lhs.true, label %if.end15, !dbg !5975

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5976
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 3, !dbg !5977
  %14 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !5977
  %card_busy = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %14, i32 0, i32 11, !dbg !5978
  %15 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy, align 8, !dbg !5978
  %tobool4 = icmp ne i32 (%struct.mmc_host*)* %15, null, !dbg !5976
  br i1 %tobool4, label %if.then5, label %if.end15, !dbg !5979

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !5980, metadata !DIExpression()), !dbg !5982
  store i32 500, i32* %tries, align 4, !dbg !5982
  br label %while.cond, !dbg !5983

while.cond:                                       ; preds = %while.body, %if.then5
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5984
  %ops6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 3, !dbg !5985
  %17 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops6, align 8, !dbg !5985
  %card_busy7 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %17, i32 0, i32 11, !dbg !5986
  %18 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy7, align 8, !dbg !5986
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !5987
  %call8 = call i32 %18(%struct.mmc_host* %19) #10, !dbg !5984
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5984
  br i1 %tobool9, label %land.rhs, label %land.end, !dbg !5988

land.rhs:                                         ; preds = %while.cond
  %20 = load i32, i32* %tries, align 4, !dbg !5989
  %dec = add i32 %20, -1, !dbg !5989
  store i32 %dec, i32* %tries, align 4, !dbg !5989
  %tobool10 = icmp ne i32 %dec, 0, !dbg !5988
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %21 = phi i1 [ false, %while.cond ], [ %tobool10, %land.rhs ], !dbg !5990
  br i1 %21, label %while.body, label %while.end, !dbg !5983

while.body:                                       ; preds = %land.end
  call void @mmc_delay(i32 1) #10, !dbg !5991
  br label %while.cond, !dbg !5983, !llvm.loop !5992

while.end:                                        ; preds = %land.end
  %22 = load i32, i32* %tries, align 4, !dbg !5994
  %cmp = icmp eq i32 %22, 0, !dbg !5996
  br i1 %cmp, label %if.then11, label %if.end14, !dbg !5997

if.then11:                                        ; preds = %while.end
  %23 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !5998
  %cmd12 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %23, i32 0, i32 1, !dbg !6000
  %24 = load %struct.mmc_command*, %struct.mmc_command** %cmd12, align 8, !dbg !6000
  %error13 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %24, i32 0, i32 5, !dbg !6001
  store i32 -16, i32* %error13, align 8, !dbg !6002
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6003
  %26 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6004
  call void @mmc_request_done(%struct.mmc_host* %25, %struct.mmc_request* %26) #10, !dbg !6005
  br label %return, !dbg !6006

if.end14:                                         ; preds = %while.end
  br label %if.end15, !dbg !6007

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %if.end
  %27 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6008
  %cap_cmd_during_tfr = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %27, i32 0, i32 9, !dbg !6010
  %28 = load i8, i8* %cap_cmd_during_tfr, align 8, !dbg !6010
  %tobool16 = trunc i8 %28 to i1, !dbg !6010
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6011

if.then17:                                        ; preds = %if.end15
  %29 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6012
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6014
  %ongoing_mrq = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %30, i32 0, i32 57, !dbg !6015
  store %struct.mmc_request* %29, %struct.mmc_request** %ongoing_mrq, align 8, !dbg !6016
  %31 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6017
  %cmd_completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %31, i32 0, i32 5, !dbg !6018
  call void @reinit_completion(%struct.completion* %cmd_completion) #10, !dbg !6019
  br label %if.end18, !dbg !6020

if.end18:                                         ; preds = %if.then17, %if.end15
  %32 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6021
  %33 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6022
  call void @trace_mmc_request_start(%struct.mmc_host* %32, %struct.mmc_request* %33) #10, !dbg !6023
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6024
  %cqe_on = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 66, !dbg !6026
  %35 = load i8, i8* %cqe_on, align 1, !dbg !6026
  %tobool19 = trunc i8 %35 to i1, !dbg !6026
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6027

if.then20:                                        ; preds = %if.end18
  %36 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6028
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %36, i32 0, i32 62, !dbg !6029
  %37 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !6029
  %cqe_off = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %37, i32 0, i32 4, !dbg !6030
  %38 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %cqe_off, align 8, !dbg !6030
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6031
  call void %38(%struct.mmc_host* %39) #10, !dbg !6028
  br label %if.end21, !dbg !6028

if.end21:                                         ; preds = %if.then20, %if.end18
  %40 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6032
  %ops22 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %40, i32 0, i32 3, !dbg !6033
  %41 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops22, align 8, !dbg !6033
  %request = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %41, i32 0, i32 2, !dbg !6034
  %request23 = bitcast {}** %request to void (%struct.mmc_host*, %struct.mmc_request*)**, !dbg !6034
  %42 = load void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)** %request23, align 8, !dbg !6034
  %43 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6035
  %44 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6036
  call void %42(%struct.mmc_host* %43, %struct.mmc_request* %44) #10, !dbg !6032
  br label %return, !dbg !6037

return:                                           ; preds = %if.end21, %if.then11, %if.then
  ret void, !dbg !6037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_wait_for_req_done(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6038 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %cmd = alloca %struct.mmc_command*, align 8
  %tmp = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6039, metadata !DIExpression()), !dbg !6040
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6041, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd, metadata !6043, metadata !DIExpression()), !dbg !6044
  br label %while.body, !dbg !6045

while.body:                                       ; preds = %entry, %if.end
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6046
  %completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 4, !dbg !6048
  call void @wait_for_completion(%struct.completion* %completion) #10, !dbg !6049
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6050
  %cmd1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %1, i32 0, i32 1, !dbg !6051
  %2 = load %struct.mmc_command*, %struct.mmc_command** %cmd1, align 8, !dbg !6051
  store %struct.mmc_command* %2, %struct.mmc_command** %cmd, align 8, !dbg !6052
  %3 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6053
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %3, i32 0, i32 5, !dbg !6055
  %4 = load i32, i32* %error, align 8, !dbg !6055
  %tobool = icmp ne i32 %4, 0, !dbg !6053
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6056

lor.lhs.false:                                    ; preds = %while.body
  %5 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6057
  %retries = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %5, i32 0, i32 4, !dbg !6058
  %6 = load i32, i32* %retries, align 4, !dbg !6058
  %tobool2 = icmp ne i32 %6, 0, !dbg !6057
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !6059

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6060
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 38, !dbg !6060
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !6060
  %tobool4 = icmp ne %struct.mmc_card* %8, null, !dbg !6060
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !6060

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6060
  %card5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 38, !dbg !6060
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card5, align 8, !dbg !6060
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 5, !dbg !6060
  %11 = load i32, i32* %state, align 4, !dbg !6060
  %and = and i32 %11, 16, !dbg !6060
  %tobool6 = icmp ne i32 %and, 0, !dbg !6060
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6061

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %while.body
  br label %while.end, !dbg !6062

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false3
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6063
  call void @mmc_retune_recheck(%struct.mmc_host* %12) #10, !dbg !6064
  store i32 0, i32* %tmp, align 4, !dbg !6065
  %13 = load i32, i32* %tmp, align 4, !dbg !6068
  %14 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6069
  %retries7 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %14, i32 0, i32 4, !dbg !6070
  %15 = load i32, i32* %retries7, align 4, !dbg !6071
  %dec = add i32 %15, -1, !dbg !6071
  store i32 %dec, i32* %retries7, align 4, !dbg !6071
  %16 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6072
  %error8 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %16, i32 0, i32 5, !dbg !6073
  store i32 0, i32* %error8, align 8, !dbg !6074
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6075
  %18 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6076
  call void @__mmc_start_request(%struct.mmc_host* %17, %struct.mmc_request* %18) #10, !dbg !6077
  br label %while.body, !dbg !6045, !llvm.loop !6078

while.end:                                        ; preds = %if.then
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6080
  call void @mmc_retune_release(%struct.mmc_host* %19) #10, !dbg !6081
  ret void, !dbg !6082
}

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_retune_recheck(%struct.mmc_host* %host) #0 !dbg !6083 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6085, metadata !DIExpression()), !dbg !6086
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6087
  %hold_retune = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 34, !dbg !6089
  %1 = load i32, i32* %hold_retune, align 16, !dbg !6089
  %cmp = icmp sle i32 %1, 1, !dbg !6090
  br i1 %cmp, label %if.then, label %if.end, !dbg !6091

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6092
  %retune_now = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 30, !dbg !6093
  %bf.load = load i16, i16* %retune_now, align 32, !dbg !6094
  %bf.clear = and i16 %bf.load, -65, !dbg !6094
  %bf.set = or i16 %bf.clear, 64, !dbg !6094
  store i16 %bf.set, i16* %retune_now, align 32, !dbg !6094
  br label %if.end, !dbg !6092

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6095
}

; Function Attrs: noredzone
declare dso_local void @mmc_retune_release(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_cqe_start_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6096 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp12 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6101, metadata !DIExpression()), !dbg !6102
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6103
  %call = call i32 @mmc_retune(%struct.mmc_host* %0) #10, !dbg !6104
  store i32 %call, i32* %err, align 4, !dbg !6105
  %1 = load i32, i32* %err, align 4, !dbg !6106
  %tobool = icmp ne i32 %1, 0, !dbg !6106
  br i1 %tobool, label %if.then, label %if.end, !dbg !6108

if.then:                                          ; preds = %entry
  br label %out_err, !dbg !6109

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6110
  %3 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6111
  %host1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %3, i32 0, i32 8, !dbg !6112
  store %struct.mmc_host* %2, %struct.mmc_host** %host1, align 8, !dbg !6113
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6114
  %5 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6115
  call void @mmc_mrq_pr_debug(%struct.mmc_host* %4, %struct.mmc_request* %5, i1 zeroext true) #10, !dbg !6116
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6117
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6118
  %call2 = call i32 @mmc_mrq_prep(%struct.mmc_host* %6, %struct.mmc_request* %7) #10, !dbg !6119
  store i32 %call2, i32* %err, align 4, !dbg !6120
  %8 = load i32, i32* %err, align 4, !dbg !6121
  %tobool3 = icmp ne i32 %8, 0, !dbg !6121
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6123

if.then4:                                         ; preds = %if.end
  br label %out_err, !dbg !6124

if.end5:                                          ; preds = %if.end
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6125
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 62, !dbg !6126
  %10 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !6126
  %cqe_request = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %10, i32 0, i32 2, !dbg !6127
  %11 = load i32 (%struct.mmc_host*, %struct.mmc_request*)*, i32 (%struct.mmc_host*, %struct.mmc_request*)** %cqe_request, align 8, !dbg !6127
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6128
  %13 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6129
  %call6 = call i32 %11(%struct.mmc_host* %12, %struct.mmc_request* %13) #10, !dbg !6125
  store i32 %call6, i32* %err, align 4, !dbg !6130
  %14 = load i32, i32* %err, align 4, !dbg !6131
  %tobool7 = icmp ne i32 %14, 0, !dbg !6131
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6133

if.then8:                                         ; preds = %if.end5
  br label %out_err, !dbg !6134

if.end9:                                          ; preds = %if.end5
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6135
  %16 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6136
  call void @trace_mmc_request_start(%struct.mmc_host* %15, %struct.mmc_request* %16) #10, !dbg !6137
  store i32 0, i32* %retval, align 4, !dbg !6138
  br label %return, !dbg !6138

out_err:                                          ; preds = %if.then8, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !6139), !dbg !6140
  %17 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6141
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %17, i32 0, i32 1, !dbg !6143
  %18 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6143
  %tobool10 = icmp ne %struct.mmc_command* %18, null, !dbg !6141
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !6144

if.then11:                                        ; preds = %out_err
  store i32 0, i32* %tmp, align 4, !dbg !6145
  %19 = load i32, i32* %tmp, align 4, !dbg !6149
  br label %if.end13, !dbg !6150

if.else:                                          ; preds = %out_err
  store i32 0, i32* %tmp12, align 4, !dbg !6151
  %20 = load i32, i32* %tmp12, align 4, !dbg !6155
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  %21 = load i32, i32* %err, align 4, !dbg !6156
  store i32 %21, i32* %retval, align 4, !dbg !6157
  br label %return, !dbg !6157

return:                                           ; preds = %if.end13, %if.end9
  %22 = load i32, i32* %retval, align 4, !dbg !6158
  ret i32 %22, !dbg !6158
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_retune(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_mmc_request_start(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6159 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6160, metadata !DIExpression()), !dbg !6161
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6162, metadata !DIExpression()), !dbg !6161
  ret void, !dbg !6161
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_cqe_request_done(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6163 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %tmp = alloca i32, align 4
  %tmp10 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6168
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6169
  call void @mmc_should_fail_request(%struct.mmc_host* %0, %struct.mmc_request* %1) #10, !dbg !6170
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6171
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 1, !dbg !6173
  %3 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6173
  %tobool = icmp ne %struct.mmc_command* %3, null, !dbg !6171
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !6174

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6175
  %cmd1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %4, i32 0, i32 1, !dbg !6176
  %5 = load %struct.mmc_command*, %struct.mmc_command** %cmd1, align 8, !dbg !6176
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %5, i32 0, i32 5, !dbg !6177
  %6 = load i32, i32* %error, align 8, !dbg !6177
  %cmp = icmp eq i32 %6, -84, !dbg !6178
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6179

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6180
  %data = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %7, i32 0, i32 2, !dbg !6181
  %8 = load %struct.mmc_data*, %struct.mmc_data** %data, align 8, !dbg !6181
  %tobool2 = icmp ne %struct.mmc_data* %8, null, !dbg !6180
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !6182

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6183
  %data4 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %9, i32 0, i32 2, !dbg !6184
  %10 = load %struct.mmc_data*, %struct.mmc_data** %data4, align 8, !dbg !6184
  %error5 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %10, i32 0, i32 5, !dbg !6185
  %11 = load i32, i32* %error5, align 4, !dbg !6185
  %cmp6 = icmp eq i32 %11, -84, !dbg !6186
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6187

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6188
  call void @mmc_retune_needed(%struct.mmc_host* %12) #10, !dbg !6189
  br label %if.end, !dbg !6189

if.end:                                           ; preds = %if.then, %land.lhs.true3, %lor.lhs.false
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6190
  %14 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6191
  call void @trace_mmc_request_done(%struct.mmc_host* %13, %struct.mmc_request* %14) #10, !dbg !6192
  %15 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6193
  %cmd7 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %15, i32 0, i32 1, !dbg !6195
  %16 = load %struct.mmc_command*, %struct.mmc_command** %cmd7, align 8, !dbg !6195
  %tobool8 = icmp ne %struct.mmc_command* %16, null, !dbg !6193
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6196

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %tmp, align 4, !dbg !6197
  %17 = load i32, i32* %tmp, align 4, !dbg !6201
  br label %if.end11, !dbg !6202

if.else:                                          ; preds = %if.end
  store i32 0, i32* %tmp10, align 4, !dbg !6203
  %18 = load i32, i32* %tmp10, align 4, !dbg !6207
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then9
  %19 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6208
  %data12 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %19, i32 0, i32 2, !dbg !6210
  %20 = load %struct.mmc_data*, %struct.mmc_data** %data12, align 8, !dbg !6210
  %tobool13 = icmp ne %struct.mmc_data* %20, null, !dbg !6208
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6211

if.then14:                                        ; preds = %if.end11
  store i32 0, i32* %tmp15, align 4, !dbg !6212
  %21 = load i32, i32* %tmp15, align 4, !dbg !6216
  br label %if.end16, !dbg !6217

if.end16:                                         ; preds = %if.then14, %if.end11
  %22 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6218
  %done = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %22, i32 0, i32 6, !dbg !6219
  %23 = load void (%struct.mmc_request*)*, void (%struct.mmc_request*)** %done, align 8, !dbg !6219
  %24 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6220
  call void %23(%struct.mmc_request* %24) #10, !dbg !6218
  ret void, !dbg !6221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_cqe_post_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6222 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6227
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 62, !dbg !6229
  %1 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !6229
  %cqe_post_req = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %1, i32 0, i32 3, !dbg !6230
  %cqe_post_req1 = bitcast {}** %cqe_post_req to void (%struct.mmc_host*, %struct.mmc_request*)**, !dbg !6230
  %2 = load void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)** %cqe_post_req1, align 8, !dbg !6230
  %tobool = icmp ne void (%struct.mmc_host*, %struct.mmc_request*)* %2, null, !dbg !6227
  br i1 %tobool, label %if.then, label %if.end, !dbg !6231

if.then:                                          ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6232
  %cqe_ops2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 62, !dbg !6233
  %4 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops2, align 64, !dbg !6233
  %cqe_post_req3 = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %4, i32 0, i32 3, !dbg !6234
  %cqe_post_req4 = bitcast {}** %cqe_post_req3 to void (%struct.mmc_host*, %struct.mmc_request*)**, !dbg !6234
  %5 = load void (%struct.mmc_host*, %struct.mmc_request*)*, void (%struct.mmc_host*, %struct.mmc_request*)** %cqe_post_req4, align 8, !dbg !6234
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6235
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6236
  call void %5(%struct.mmc_host* %6, %struct.mmc_request* %7) #10, !dbg !6232
  br label %if.end, !dbg !6232

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_cqe_recovery(%struct.mmc_host* %host) #0 !dbg !6238 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %cmd = alloca %struct.mmc_command, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6243, metadata !DIExpression()), !dbg !6244
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6245
  call void @mmc_retune_hold_now(%struct.mmc_host* %0) #10, !dbg !6246
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6247
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 1, !dbg !6247
  %call = call i8* @dev_name(%struct.device* %class_dev) #10, !dbg !6247
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* %call) #11, !dbg !6247
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6248
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 62, !dbg !6249
  %3 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !6249
  %cqe_recovery_start = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %3, i32 0, i32 7, !dbg !6250
  %4 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %cqe_recovery_start, align 8, !dbg !6250
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6251
  call void %4(%struct.mmc_host* %5) #10, !dbg !6248
  %6 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !6252
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 56, i1 false), !dbg !6252
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !6253
  store i32 12, i32* %opcode, align 8, !dbg !6254
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !6255
  store i32 29, i32* %flags, align 8, !dbg !6256
  %flags2 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !6257
  %7 = load i32, i32* %flags2, align 8, !dbg !6258
  %and = and i32 %7, -5, !dbg !6258
  store i32 %and, i32* %flags2, align 8, !dbg !6258
  %busy_timeout = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 6, !dbg !6259
  store i32 1000, i32* %busy_timeout, align 4, !dbg !6260
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6261
  %call3 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %8, %struct.mmc_command* %cmd, i32 0) #10, !dbg !6262
  %9 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !6263
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 56, i1 false), !dbg !6263
  %opcode4 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !6264
  store i32 48, i32* %opcode4, align 8, !dbg !6265
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !6266
  store i32 1, i32* %arg, align 4, !dbg !6267
  %flags5 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !6268
  store i32 29, i32* %flags5, align 8, !dbg !6269
  %flags6 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !6270
  %10 = load i32, i32* %flags6, align 8, !dbg !6271
  %and7 = and i32 %10, -5, !dbg !6271
  store i32 %and7, i32* %flags6, align 8, !dbg !6271
  %busy_timeout8 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 6, !dbg !6272
  store i32 1000, i32* %busy_timeout8, align 4, !dbg !6273
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6274
  %call9 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %11, %struct.mmc_command* %cmd, i32 0) #10, !dbg !6275
  store i32 %call9, i32* %err, align 4, !dbg !6276
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6277
  %cqe_ops10 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 62, !dbg !6278
  %13 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops10, align 64, !dbg !6278
  %cqe_recovery_finish = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %13, i32 0, i32 8, !dbg !6279
  %14 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %cqe_recovery_finish, align 8, !dbg !6279
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6280
  call void %14(%struct.mmc_host* %15) #10, !dbg !6277
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6281
  call void @mmc_retune_release(%struct.mmc_host* %16) #10, !dbg !6282
  %17 = load i32, i32* %err, align 4, !dbg !6283
  ret i32 %17, !dbg !6284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_retune_hold_now(%struct.mmc_host* %host) #0 !dbg !6285 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6286, metadata !DIExpression()), !dbg !6287
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6288
  %retune_now = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !6289
  %bf.load = load i16, i16* %retune_now, align 32, !dbg !6290
  %bf.clear = and i16 %bf.load, -65, !dbg !6290
  store i16 %bf.clear, i16* %retune_now, align 32, !dbg !6290
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6291
  %hold_retune = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 34, !dbg !6292
  %2 = load i32, i32* %hold_retune, align 16, !dbg !6293
  %add = add i32 %2, 1, !dbg !6293
  store i32 %add, i32* %hold_retune, align 16, !dbg !6293
  ret void, !dbg !6294
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !6295 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6300
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !6302
  %1 = load i8*, i8** %init_name, align 8, !dbg !6302
  %tobool = icmp ne i8* %1, null, !dbg !6300
  br i1 %tobool, label %if.then, label %if.end, !dbg !6303

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6304
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !6305
  %3 = load i8*, i8** %init_name1, align 8, !dbg !6305
  store i8* %3, i8** %retval, align 8, !dbg !6306
  br label %return, !dbg !6306

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6307
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !6308
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !6309
  store i8* %call, i8** %retval, align 8, !dbg !6310
  br label %return, !dbg !6310

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6311
  ret i8* %5, !dbg !6311
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_wait_for_cmd(%struct.mmc_host* %host, %struct.mmc_command* %cmd, i32 %retries) #0 !dbg !6312 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %cmd.addr = alloca %struct.mmc_command*, align 8
  %retries.addr = alloca i32, align 4
  %mrq = alloca %struct.mmc_request, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  store %struct.mmc_command* %cmd, %struct.mmc_command** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_command** %cmd.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  store i32 %retries, i32* %retries.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retries.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.mmc_request* %mrq, metadata !6321, metadata !DIExpression()), !dbg !6322
  %0 = bitcast %struct.mmc_request* %mrq to i8*, !dbg !6322
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 112, i1 false), !dbg !6322
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6323, metadata !DIExpression()), !dbg !6325
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6325
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 30, !dbg !6325
  %bf.load = load i16, i16* %claimed, align 32, !dbg !6325
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !6325
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6325
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6325
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6325
  %lnot = xor i1 %tobool, true, !dbg !6325
  %lnot1 = xor i1 %lnot, true, !dbg !6325
  %lnot2 = xor i1 %lnot1, true, !dbg !6325
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6325
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6325
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !6326
  %tobool3 = icmp ne i32 %2, 0, !dbg !6326
  %lnot4 = xor i1 %tobool3, true, !dbg !6326
  %lnot6 = xor i1 %lnot4, true, !dbg !6326
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !6326
  %conv = sext i32 %lnot.ext7 to i64, !dbg !6326
  %tobool8 = icmp ne i64 %conv, 0, !dbg !6326
  br i1 %tobool8, label %if.then, label %if.end, !dbg !6325

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6326

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !6328

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !6330

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !6328

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 625, i32 2305, i64 12) #8, !dbg !6332, !srcloc !6334
  br label %do.end11, !dbg !6332

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 295) #8, !dbg !6335, !srcloc !6337
  br label %do.body12, !dbg !6328

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !6338

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !6328

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !6328

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6325
  %tobool15 = icmp ne i32 %3, 0, !dbg !6325
  %lnot16 = xor i1 %tobool15, true, !dbg !6325
  %lnot18 = xor i1 %lnot16, true, !dbg !6325
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6325
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !6325
  store i64 %conv20, i64* %tmp, align 8, !dbg !6326
  %4 = load i64, i64* %tmp, align 8, !dbg !6325
  %5 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !6340
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %5, i32 0, i32 2, !dbg !6341
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !6342
  %6 = bitcast i32* %arraydecay to i8*, !dbg !6342
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false), !dbg !6342
  %7 = load i32, i32* %retries.addr, align 4, !dbg !6343
  %8 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !6344
  %retries21 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %8, i32 0, i32 4, !dbg !6345
  store i32 %7, i32* %retries21, align 4, !dbg !6346
  %9 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !6347
  %cmd22 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %mrq, i32 0, i32 1, !dbg !6348
  store %struct.mmc_command* %9, %struct.mmc_command** %cmd22, align 8, !dbg !6349
  %10 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !6350
  %data = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %10, i32 0, i32 7, !dbg !6351
  store %struct.mmc_data* null, %struct.mmc_data** %data, align 8, !dbg !6352
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6353
  call void @mmc_wait_for_req(%struct.mmc_host* %11, %struct.mmc_request* %mrq) #10, !dbg !6354
  %12 = load %struct.mmc_command*, %struct.mmc_command** %cmd.addr, align 8, !dbg !6355
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %12, i32 0, i32 5, !dbg !6356
  %13 = load i32, i32* %error, align 8, !dbg !6356
  ret i32 %13, !dbg !6357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mmc_is_req_done(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6358 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6361, metadata !DIExpression()), !dbg !6362
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6363, metadata !DIExpression()), !dbg !6364
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6365
  %completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 4, !dbg !6366
  %call = call zeroext i1 @completion_done(%struct.completion* %completion) #10, !dbg !6367
  ret i1 %call, !dbg !6368
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @completion_done(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_wait_for_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6369 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6372, metadata !DIExpression()), !dbg !6373
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6374
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6375
  %call = call i32 @__mmc_start_req(%struct.mmc_host* %0, %struct.mmc_request* %1) #10, !dbg !6376
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6377
  %cap_cmd_during_tfr = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 9, !dbg !6379
  %3 = load i8, i8* %cap_cmd_during_tfr, align 8, !dbg !6379
  %tobool = trunc i8 %3 to i1, !dbg !6379
  br i1 %tobool, label %if.end, label %if.then, !dbg !6380

if.then:                                          ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6381
  %5 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6382
  call void @mmc_wait_for_req_done(%struct.mmc_host* %4, %struct.mmc_request* %5) #10, !dbg !6383
  br label %if.end, !dbg !6383

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__mmc_start_req(%struct.mmc_host* %host, %struct.mmc_request* %mrq) #0 !dbg !6385 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mrq.addr = alloca %struct.mmc_request*, align 8
  %err = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !6388, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6390, metadata !DIExpression()), !dbg !6391
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6392
  call void @mmc_wait_ongoing_tfr_cmd(%struct.mmc_host* %0) #10, !dbg !6393
  %1 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6394
  %completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %1, i32 0, i32 4, !dbg !6394
  call void @__init_completion(%struct.completion* %completion) #10, !dbg !6394
  %2 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6395
  %done = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %2, i32 0, i32 6, !dbg !6396
  store void (%struct.mmc_request*)* @mmc_wait_done, void (%struct.mmc_request*)** %done, align 8, !dbg !6397
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6398
  %4 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6399
  %call = call i32 @mmc_start_request(%struct.mmc_host* %3, %struct.mmc_request* %4) #10, !dbg !6400
  store i32 %call, i32* %err, align 4, !dbg !6401
  %5 = load i32, i32* %err, align 4, !dbg !6402
  %tobool = icmp ne i32 %5, 0, !dbg !6402
  br i1 %tobool, label %if.then, label %if.end, !dbg !6404

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6405
  %7 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6407
  %cmd = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %7, i32 0, i32 1, !dbg !6408
  %8 = load %struct.mmc_command*, %struct.mmc_command** %cmd, align 8, !dbg !6408
  %error = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %8, i32 0, i32 5, !dbg !6409
  store i32 %6, i32* %error, align 8, !dbg !6410
  %9 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6411
  call void @mmc_complete_cmd(%struct.mmc_request* %9) #10, !dbg !6412
  %10 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !6413
  %completion1 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %10, i32 0, i32 4, !dbg !6414
  call void @complete(%struct.completion* %completion1) #10, !dbg !6415
  br label %if.end, !dbg !6416

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %err, align 4, !dbg !6417
  ret i32 %11, !dbg !6418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_data_timeout(%struct.mmc_data* %data, %struct.mmc_card* %card) #0 !dbg !6419 {
entry:
  %data.addr = alloca %struct.mmc_data*, align 8
  %card.addr = alloca %struct.mmc_card*, align 8
  %mult = alloca i32, align 4
  %timeout_us = alloca i32, align 4
  %limit_us = alloca i32, align 4
  store %struct.mmc_data* %data, %struct.mmc_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_data** %data.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !6426, metadata !DIExpression()), !dbg !6427
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !6428, metadata !DIExpression()), !dbg !6429
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6430
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 4, !dbg !6430
  %1 = load i32, i32* %type, align 8, !dbg !6430
  %cmp = icmp eq i32 %1, 2, !dbg !6430
  br i1 %cmp, label %if.then, label %if.end, !dbg !6432

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6433
  %timeout_ns = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %2, i32 0, i32 0, !dbg !6435
  store i32 1000000000, i32* %timeout_ns, align 8, !dbg !6436
  %3 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6437
  %timeout_clks = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %3, i32 0, i32 1, !dbg !6438
  store i32 0, i32* %timeout_clks, align 4, !dbg !6439
  br label %if.end78, !dbg !6440

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6441
  %type1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 4, !dbg !6441
  %5 = load i32, i32* %type1, align 8, !dbg !6441
  %cmp2 = icmp eq i32 %5, 1, !dbg !6441
  %6 = zext i1 %cmp2 to i64, !dbg !6441
  %cond = select i1 %cmp2, i32 100, i32 10, !dbg !6441
  store i32 %cond, i32* %mult, align 4, !dbg !6442
  %7 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6443
  %flags = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %7, i32 0, i32 6, !dbg !6445
  %8 = load i32, i32* %flags, align 8, !dbg !6445
  %conv = zext i32 %8 to i64, !dbg !6443
  %and = and i64 %conv, 256, !dbg !6446
  %tobool = icmp ne i64 %and, 0, !dbg !6446
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !6447

if.then3:                                         ; preds = %if.end
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6448
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 20, !dbg !6449
  %r2w_factor = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 6, !dbg !6450
  %10 = load i32, i32* %r2w_factor, align 8, !dbg !6450
  %11 = load i32, i32* %mult, align 4, !dbg !6451
  %shl = shl i32 %11, %10, !dbg !6451
  store i32 %shl, i32* %mult, align 4, !dbg !6451
  br label %if.end4, !dbg !6452

if.end4:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6453
  %csd5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 20, !dbg !6454
  %taac_ns = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd5, i32 0, i32 4, !dbg !6455
  %13 = load i32, i32* %taac_ns, align 8, !dbg !6455
  %14 = load i32, i32* %mult, align 4, !dbg !6456
  %mul = mul i32 %13, %14, !dbg !6457
  %15 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6458
  %timeout_ns6 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %15, i32 0, i32 0, !dbg !6459
  store i32 %mul, i32* %timeout_ns6, align 8, !dbg !6460
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6461
  %csd7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 20, !dbg !6462
  %taac_clks = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd7, i32 0, i32 3, !dbg !6463
  %17 = load i16, i16* %taac_clks, align 4, !dbg !6463
  %conv8 = zext i16 %17 to i32, !dbg !6461
  %18 = load i32, i32* %mult, align 4, !dbg !6464
  %mul9 = mul i32 %conv8, %18, !dbg !6465
  %19 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6466
  %timeout_clks10 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %19, i32 0, i32 1, !dbg !6467
  store i32 %mul9, i32* %timeout_clks10, align 4, !dbg !6468
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6469
  %type11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 4, !dbg !6469
  %21 = load i32, i32* %type11, align 8, !dbg !6469
  %cmp12 = icmp eq i32 %21, 1, !dbg !6469
  br i1 %cmp12, label %if.then14, label %if.end45, !dbg !6471

if.then14:                                        ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %timeout_us, metadata !6472, metadata !DIExpression()), !dbg !6474
  call void @llvm.dbg.declare(metadata i32* %limit_us, metadata !6475, metadata !DIExpression()), !dbg !6476
  %22 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6477
  %timeout_ns15 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %22, i32 0, i32 0, !dbg !6478
  %23 = load i32, i32* %timeout_ns15, align 8, !dbg !6478
  %div = udiv i32 %23, 1000, !dbg !6479
  store i32 %div, i32* %timeout_us, align 4, !dbg !6480
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6481
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 0, !dbg !6483
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !6483
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %25, i32 0, i32 29, !dbg !6484
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 0, !dbg !6485
  %26 = load i32, i32* %clock, align 4, !dbg !6485
  %tobool16 = icmp ne i32 %26, 0, !dbg !6481
  br i1 %tobool16, label %if.then17, label %if.end25, !dbg !6486

if.then17:                                        ; preds = %if.then14
  %27 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6487
  %timeout_clks18 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %27, i32 0, i32 1, !dbg !6488
  %28 = load i32, i32* %timeout_clks18, align 4, !dbg !6488
  %mul19 = mul i32 %28, 1000, !dbg !6489
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6490
  %host20 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %29, i32 0, i32 0, !dbg !6491
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host20, align 8, !dbg !6491
  %ios21 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %30, i32 0, i32 29, !dbg !6492
  %clock22 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios21, i32 0, i32 0, !dbg !6493
  %31 = load i32, i32* %clock22, align 4, !dbg !6493
  %div23 = udiv i32 %31, 1000, !dbg !6494
  %div24 = udiv i32 %mul19, %div23, !dbg !6495
  %32 = load i32, i32* %timeout_us, align 4, !dbg !6496
  %add = add i32 %32, %div24, !dbg !6496
  store i32 %add, i32* %timeout_us, align 4, !dbg !6496
  br label %if.end25, !dbg !6497

if.end25:                                         ; preds = %if.then17, %if.then14
  %33 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6498
  %flags26 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %33, i32 0, i32 6, !dbg !6500
  %34 = load i32, i32* %flags26, align 8, !dbg !6500
  %conv27 = zext i32 %34 to i64, !dbg !6498
  %and28 = and i64 %conv27, 256, !dbg !6501
  %tobool29 = icmp ne i64 %and28, 0, !dbg !6501
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !6502

if.then30:                                        ; preds = %if.end25
  store i32 3000000, i32* %limit_us, align 4, !dbg !6503
  br label %if.end31, !dbg !6504

if.else:                                          ; preds = %if.end25
  store i32 100000, i32* %limit_us, align 4, !dbg !6505
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then30
  %35 = load i32, i32* %timeout_us, align 4, !dbg !6506
  %36 = load i32, i32* %limit_us, align 4, !dbg !6508
  %cmp32 = icmp ugt i32 %35, %36, !dbg !6509
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !6510

if.then34:                                        ; preds = %if.end31
  %37 = load i32, i32* %limit_us, align 4, !dbg !6511
  %mul35 = mul i32 %37, 1000, !dbg !6513
  %38 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6514
  %timeout_ns36 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %38, i32 0, i32 0, !dbg !6515
  store i32 %mul35, i32* %timeout_ns36, align 8, !dbg !6516
  %39 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6517
  %timeout_clks37 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %39, i32 0, i32 1, !dbg !6518
  store i32 0, i32* %timeout_clks37, align 4, !dbg !6519
  br label %if.end38, !dbg !6520

if.end38:                                         ; preds = %if.then34, %if.end31
  %40 = load i32, i32* %timeout_us, align 4, !dbg !6521
  %cmp39 = icmp eq i32 %40, 0, !dbg !6523
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !6524

if.then41:                                        ; preds = %if.end38
  %41 = load i32, i32* %limit_us, align 4, !dbg !6525
  %mul42 = mul i32 %41, 1000, !dbg !6526
  %42 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6527
  %timeout_ns43 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %42, i32 0, i32 0, !dbg !6528
  store i32 %mul42, i32* %timeout_ns43, align 8, !dbg !6529
  br label %if.end44, !dbg !6527

if.end44:                                         ; preds = %if.then41, %if.end38
  br label %if.end45, !dbg !6530

if.end45:                                         ; preds = %if.end44, %if.end4
  %43 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6531
  %call = call i32 @mmc_card_long_read_time(%struct.mmc_card* %43) #10, !dbg !6533
  %tobool46 = icmp ne i32 %call, 0, !dbg !6533
  br i1 %tobool46, label %land.lhs.true, label %if.end54, !dbg !6534

land.lhs.true:                                    ; preds = %if.end45
  %44 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6535
  %flags47 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %44, i32 0, i32 6, !dbg !6536
  %45 = load i32, i32* %flags47, align 8, !dbg !6536
  %conv48 = zext i32 %45 to i64, !dbg !6535
  %and49 = and i64 %conv48, 512, !dbg !6537
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6537
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !6538

if.then51:                                        ; preds = %land.lhs.true
  %46 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6539
  %timeout_ns52 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %46, i32 0, i32 0, !dbg !6541
  store i32 600000000, i32* %timeout_ns52, align 8, !dbg !6542
  %47 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6543
  %timeout_clks53 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %47, i32 0, i32 1, !dbg !6544
  store i32 0, i32* %timeout_clks53, align 4, !dbg !6545
  br label %if.end54, !dbg !6546

if.end54:                                         ; preds = %if.then51, %land.lhs.true, %if.end45
  %48 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !6547
  %host55 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %48, i32 0, i32 0, !dbg !6547
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host55, align 8, !dbg !6547
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %49, i32 0, i32 17, !dbg !6547
  %50 = load i32, i32* %caps, align 4, !dbg !6547
  %and56 = and i32 %50, 16, !dbg !6547
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6547
  br i1 %tobool57, label %if.then58, label %if.end78, !dbg !6549

if.then58:                                        ; preds = %if.end54
  %51 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6550
  %flags59 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %51, i32 0, i32 6, !dbg !6553
  %52 = load i32, i32* %flags59, align 8, !dbg !6553
  %conv60 = zext i32 %52 to i64, !dbg !6550
  %and61 = and i64 %conv60, 256, !dbg !6554
  %tobool62 = icmp ne i64 %and61, 0, !dbg !6554
  br i1 %tobool62, label %if.then63, label %if.else70, !dbg !6555

if.then63:                                        ; preds = %if.then58
  %53 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6556
  %timeout_ns64 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %53, i32 0, i32 0, !dbg !6559
  %54 = load i32, i32* %timeout_ns64, align 8, !dbg !6559
  %cmp65 = icmp ult i32 %54, 1000000000, !dbg !6560
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !6561

if.then67:                                        ; preds = %if.then63
  %55 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6562
  %timeout_ns68 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %55, i32 0, i32 0, !dbg !6563
  store i32 1000000000, i32* %timeout_ns68, align 8, !dbg !6564
  br label %if.end69, !dbg !6562

if.end69:                                         ; preds = %if.then67, %if.then63
  br label %if.end77, !dbg !6565

if.else70:                                        ; preds = %if.then58
  %56 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6566
  %timeout_ns71 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %56, i32 0, i32 0, !dbg !6569
  %57 = load i32, i32* %timeout_ns71, align 8, !dbg !6569
  %cmp72 = icmp ult i32 %57, 100000000, !dbg !6570
  br i1 %cmp72, label %if.then74, label %if.end76, !dbg !6571

if.then74:                                        ; preds = %if.else70
  %58 = load %struct.mmc_data*, %struct.mmc_data** %data.addr, align 8, !dbg !6572
  %timeout_ns75 = getelementptr inbounds %struct.mmc_data, %struct.mmc_data* %58, i32 0, i32 0, !dbg !6573
  store i32 100000000, i32* %timeout_ns75, align 8, !dbg !6574
  br label %if.end76, !dbg !6572

if.end76:                                         ; preds = %if.then74, %if.else70
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end69
  br label %if.end78, !dbg !6575

if.end78:                                         ; preds = %if.then, %if.end77, %if.end54
  ret void, !dbg !6576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_card_long_read_time(%struct.mmc_card* %c) #0 !dbg !6577 {
entry:
  %c.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %c, %struct.mmc_card** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %c.addr, metadata !6581, metadata !DIExpression()), !dbg !6582
  %0 = load %struct.mmc_card*, %struct.mmc_card** %c.addr, align 8, !dbg !6583
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 6, !dbg !6584
  %1 = load i32, i32* %quirks, align 8, !dbg !6584
  %and = and i32 %1, 512, !dbg !6585
  ret i32 %and, !dbg !6586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__mmc_claim_host(%struct.mmc_host* %host, %struct.mmc_ctx* %ctx, %struct.atomic_t* %abort) #0 !dbg !6587 {
entry:
  %lock.addr.i123 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i123, metadata !6591, metadata !DIExpression()), !dbg !6596
  %flags.addr.i124 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i124, metadata !6598, metadata !DIExpression()), !dbg !6599
  %tmp.i125 = alloca i32, align 4
  %tmp8.i126 = alloca i32, align 4
  %pscr_ret__.i118 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i118, metadata !6600, metadata !DIExpression()), !dbg !6606
  %__vpp_verify.i119 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i119, metadata !6611, metadata !DIExpression()), !dbg !6613
  %pfo_val__.i120 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i120, metadata !6614, metadata !DIExpression()), !dbg !6616
  %tmp.i121 = alloca %struct.task_struct*, align 8
  %tmp1.i122 = alloca %struct.task_struct*, align 8
  %lock.addr.i116 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i116, metadata !6617, metadata !DIExpression()), !dbg !6622
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !6591, metadata !DIExpression()), !dbg !6630
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !6632
  %tmp.i114 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6633, metadata !DIExpression()), !dbg !6640
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6645, metadata !DIExpression()), !dbg !6653
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6655, metadata !DIExpression()), !dbg !6656
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6657, metadata !DIExpression()), !dbg !6658
  %pscr_ret__.i108 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i108, metadata !6600, metadata !DIExpression()), !dbg !6659
  %__vpp_verify.i109 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i109, metadata !6611, metadata !DIExpression()), !dbg !6664
  %pfo_val__.i110 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i110, metadata !6614, metadata !DIExpression()), !dbg !6665
  %tmp.i111 = alloca %struct.task_struct*, align 8
  %tmp1.i112 = alloca %struct.task_struct*, align 8
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !6666
  %pscr_ret__.i103 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i103, metadata !6600, metadata !DIExpression()), !dbg !6673
  %__vpp_verify.i104 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i104, metadata !6611, metadata !DIExpression()), !dbg !6675
  %pfo_val__.i105 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i105, metadata !6614, metadata !DIExpression()), !dbg !6676
  %tmp.i106 = alloca %struct.task_struct*, align 8
  %tmp1.i107 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !6600, metadata !DIExpression()), !dbg !6677
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !6611, metadata !DIExpression()), !dbg !6679
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !6614, metadata !DIExpression()), !dbg !6680
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %host.addr = alloca %struct.mmc_host*, align 8
  %ctx.addr = alloca %struct.mmc_ctx*, align 8
  %abort.addr = alloca %struct.atomic_t*, align 8
  %task = alloca %struct.task_struct*, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  %flags3 = alloca i64, align 8
  %stop = alloca i32, align 4
  %pm = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  %__dummy58 = alloca i64, align 8
  %__dummy259 = alloca i64, align 8
  %tmp62 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  store %struct.mmc_ctx* %ctx, %struct.mmc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ctx** %ctx.addr, metadata !6683, metadata !DIExpression()), !dbg !6684
  store %struct.atomic_t* %abort, %struct.atomic_t** %abort.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %abort.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task, metadata !6687, metadata !DIExpression()), !dbg !6688
  %0 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6689
  %tobool = icmp ne %struct.mmc_ctx* %0, null, !dbg !6689
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6689

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6689

cond.false:                                       ; preds = %entry
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6679
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6679
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !6680, !srcloc !6690
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !6680
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !6680
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !6680
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !6680
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6680
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6677
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6677
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !6677
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6677
  br label %cond.end, !dbg !6689

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.task_struct* [ null, %cond.true ], [ %7, %cond.false ], !dbg !6689
  store %struct.task_struct* %cond, %struct.task_struct** %task, align 8, !dbg !6688
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !6691, metadata !DIExpression()), !dbg !6692
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !6692
  store i32 0, i32* %flags, align 8, !dbg !6692
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !6692
  store i8* null, i8** %__vpp_verify.i104, align 8, !dbg !6675
  %8 = load i8*, i8** %__vpp_verify.i104, align 8, !dbg !6675
  %9 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !6676, !srcloc !6690
  store i64 %9, i64* %pfo_val__.i105, align 8, !dbg !6676
  %10 = load i64, i64* %pfo_val__.i105, align 8, !dbg !6676
  %11 = inttoptr i64 %10 to %struct.task_struct*, !dbg !6676
  store %struct.task_struct* %11, %struct.task_struct** %tmp.i106, align 8, !dbg !6676
  %12 = load %struct.task_struct*, %struct.task_struct** %tmp.i106, align 8, !dbg !6676
  store %struct.task_struct* %12, %struct.task_struct** %pscr_ret__.i103, align 8, !dbg !6673
  %13 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i103, align 8, !dbg !6673
  store %struct.task_struct* %13, %struct.task_struct** %tmp1.i107, align 8, !dbg !6673
  %14 = load %struct.task_struct*, %struct.task_struct** %tmp1.i107, align 8, !dbg !6673
  %15 = bitcast %struct.task_struct* %14 to i8*, !dbg !6692
  store i8* %15, i8** %private, align 8, !dbg !6692
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !6692
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !6692
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !6692
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !6692
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !6692
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !6692
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !6692
  call void @llvm.dbg.declare(metadata i64* %flags3, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata i32* %stop, metadata !6695, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.declare(metadata i8* %pm, metadata !6697, metadata !DIExpression()), !dbg !6698
  store i8 0, i8* %pm, align 1, !dbg !6698
  br label %do.body, !dbg !6699

do.body:                                          ; preds = %cond.end
  br label %do.body4, !dbg !6700

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !6702

do.end:                                           ; preds = %do.body4
  br label %do.end5, !dbg !6700

do.end5:                                          ; preds = %do.end
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6704
  %wq = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 39, !dbg !6705
  call void @add_wait_queue(%struct.wait_queue_head* %wq, %struct.wait_queue_entry* %wait) #10, !dbg !6706
  br label %do.body6, !dbg !6707

do.body6:                                         ; preds = %do.end5
  br label %do.body7, !dbg !6708

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6709, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6712, metadata !DIExpression()), !dbg !6711
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6711
  %conv = zext i1 %cmp to i32, !dbg !6711
  store i32 1, i32* %tmp, align 4, !dbg !6711
  %17 = load i32, i32* %tmp, align 4, !dbg !6711
  br label %do.body8, !dbg !6713

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !6714

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !6715

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !6717, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !6721, metadata !DIExpression()), !dbg !6720
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !6720
  %conv14 = zext i1 %cmp13 to i32, !dbg !6720
  store i32 1, i32* %tmp15, align 4, !dbg !6720
  %18 = load i32, i32* %tmp15, align 4, !dbg !6720
  %call16 = call i64 @arch_local_irq_save() #10, !dbg !6722
  store i64 %call16, i64* %flags3, align 8, !dbg !6722
  br label %do.end17, !dbg !6722

do.end17:                                         ; preds = %do.body10
  br label %do.end18, !dbg !6715

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !6714

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6723, !srcloc !6724
  br label %do.body20, !dbg !6723

do.body20:                                        ; preds = %do.body19
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6725
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 28, !dbg !6725
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6726
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !6727
  %rlock.i = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !6727
  br label %do.end22, !dbg !6725

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !6723

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !6714

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !6713

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !6708

do.end26:                                         ; preds = %do.end25
  br label %while.body, !dbg !6728

while.body:                                       ; preds = %do.end26, %do.end74
  br label %do.body27, !dbg !6729

do.body27:                                        ; preds = %while.body
  br label %do.body28, !dbg !6730

do.body28:                                        ; preds = %do.body27
  br label %do.body29, !dbg !6731

do.body29:                                        ; preds = %do.body28
  br label %do.end30, !dbg !6732

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !6731

do.body31:                                        ; preds = %do.end30
  store i8* null, i8** %__vpp_verify.i109, align 8, !dbg !6664
  %22 = load i8*, i8** %__vpp_verify.i109, align 8, !dbg !6664
  %23 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !6665, !srcloc !6690
  store i64 %23, i64* %pfo_val__.i110, align 8, !dbg !6665
  %24 = load i64, i64* %pfo_val__.i110, align 8, !dbg !6665
  %25 = inttoptr i64 %24 to %struct.task_struct*, !dbg !6665
  store %struct.task_struct* %25, %struct.task_struct** %tmp.i111, align 8, !dbg !6665
  %26 = load %struct.task_struct*, %struct.task_struct** %tmp.i111, align 8, !dbg !6665
  store %struct.task_struct* %26, %struct.task_struct** %pscr_ret__.i108, align 8, !dbg !6659
  %27 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i108, align 8, !dbg !6659
  store %struct.task_struct* %27, %struct.task_struct** %tmp1.i112, align 8, !dbg !6659
  %28 = load %struct.task_struct*, %struct.task_struct** %tmp1.i112, align 8, !dbg !6659
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %28, i32 0, i32 1, !dbg !6734
  store volatile i64 2, i64* %state, align 16, !dbg !6734
  br label %do.end33, !dbg !6734

do.end33:                                         ; preds = %do.body31
  br label %do.end34, !dbg !6731

do.end34:                                         ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6730, !srcloc !6735
  br label %do.end35, !dbg !6730

do.end35:                                         ; preds = %do.end34
  %29 = load %struct.atomic_t*, %struct.atomic_t** %abort.addr, align 8, !dbg !6736
  %tobool36 = icmp ne %struct.atomic_t* %29, null, !dbg !6736
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !6736

cond.true37:                                      ; preds = %do.end35
  %30 = load %struct.atomic_t*, %struct.atomic_t** %abort.addr, align 8, !dbg !6737
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6738
  %32 = bitcast %struct.atomic_t* %31 to i8*, !dbg !6738
  store i8* %32, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %33 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6739
  %34 = load i64, i64* %size.addr.i.i, align 8, !dbg !6740
  %conv.i.i = trunc i64 %34 to i32, !dbg !6740
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %33, i32 %conv.i.i) #13, !dbg !6741
  %35 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6742
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !6742
  call void @kcsan_check_access(i8* %35, i64 %36, i32 4) #13, !dbg !6742
  %37 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6743
  store %struct.atomic_t* %37, %struct.atomic_t** %v.addr.i1.i, align 8
  %38 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6744
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %38, i32 0, i32 0, !dbg !6744
  %39 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6744
  br label %cond.end40, !dbg !6736

cond.false39:                                     ; preds = %do.end35
  br label %cond.end40, !dbg !6736

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %39, %cond.true37 ], [ 0, %cond.false39 ], !dbg !6736
  store i32 %cond41, i32* %stop, align 4, !dbg !6745
  %40 = load i32, i32* %stop, align 4, !dbg !6746
  %tobool42 = icmp ne i32 %40, 0, !dbg !6746
  br i1 %tobool42, label %if.then, label %lor.lhs.false, !dbg !6748

lor.lhs.false:                                    ; preds = %cond.end40
  %41 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6749
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %41, i32 0, i32 30, !dbg !6750
  %bf.load = load i16, i16* %claimed, align 32, !dbg !6750
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !6750
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6750
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6750
  %tobool43 = icmp ne i32 %bf.cast, 0, !dbg !6749
  br i1 %tobool43, label %lor.lhs.false44, label %if.then, !dbg !6751

lor.lhs.false44:                                  ; preds = %lor.lhs.false
  %42 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6752
  %43 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6753
  %44 = load %struct.task_struct*, %struct.task_struct** %task, align 8, !dbg !6754
  %call45 = call zeroext i1 @mmc_ctx_matches(%struct.mmc_host* %42, %struct.mmc_ctx* %43, %struct.task_struct* %44) #10, !dbg !6755
  br i1 %call45, label %if.then, label %if.end, !dbg !6756

if.then:                                          ; preds = %lor.lhs.false44, %lor.lhs.false, %cond.end40
  br label %while.end, !dbg !6757

if.end:                                           ; preds = %lor.lhs.false44
  %45 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6758
  %lock47 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %45, i32 0, i32 28, !dbg !6759
  %46 = load i64, i64* %flags3, align 8, !dbg !6760
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i113, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !6764
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !6764
  store i32 1, i32* %tmp.i114, align 4, !dbg !6764
  %47 = load i32, i32* %tmp.i114, align 4, !dbg !6764
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !6771
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !6771
  store i32 1, i32* %tmp8.i, align 4, !dbg !6771
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !6771
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !6773
  call void @arch_local_irq_restore(i64 %49) #13, !dbg !6773
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6774, !srcloc !6776
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !6777
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !6777
  %rlock.i115 = bitcast %union.anon.2* %51 to %struct.raw_spinlock*, !dbg !6777
  call void @schedule() #10, !dbg !6779
  br label %do.body48, !dbg !6780

do.body48:                                        ; preds = %if.end
  br label %do.body49, !dbg !6781

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !6782, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !6785, metadata !DIExpression()), !dbg !6784
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !6784
  %conv53 = zext i1 %cmp52 to i32, !dbg !6784
  store i32 1, i32* %tmp54, align 4, !dbg !6784
  %52 = load i32, i32* %tmp54, align 4, !dbg !6784
  br label %do.body55, !dbg !6786

do.body55:                                        ; preds = %do.body49
  br label %do.body56, !dbg !6787

do.body56:                                        ; preds = %do.body55
  br label %do.body57, !dbg !6788

do.body57:                                        ; preds = %do.body56
  call void @llvm.dbg.declare(metadata i64* %__dummy58, metadata !6790, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.declare(metadata i64* %__dummy259, metadata !6794, metadata !DIExpression()), !dbg !6793
  %cmp60 = icmp eq i64* %__dummy58, %__dummy259, !dbg !6793
  %conv61 = zext i1 %cmp60 to i32, !dbg !6793
  store i32 1, i32* %tmp62, align 4, !dbg !6793
  %53 = load i32, i32* %tmp62, align 4, !dbg !6793
  %call63 = call i64 @arch_local_irq_save() #10, !dbg !6795
  store i64 %call63, i64* %flags3, align 8, !dbg !6795
  br label %do.end64, !dbg !6795

do.end64:                                         ; preds = %do.body57
  br label %do.end65, !dbg !6788

do.end65:                                         ; preds = %do.end64
  br label %do.body66, !dbg !6787

do.body66:                                        ; preds = %do.end65
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6796, !srcloc !6797
  br label %do.body67, !dbg !6796

do.body67:                                        ; preds = %do.body66
  %54 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6798
  %lock68 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %54, i32 0, i32 28, !dbg !6798
  store %struct.spinlock* %lock68, %struct.spinlock** %lock.addr.i116, align 8
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i116, align 8, !dbg !6799
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !6800
  %rlock.i117 = bitcast %union.anon.2* %56 to %struct.raw_spinlock*, !dbg !6800
  br label %do.end70, !dbg !6798

do.end70:                                         ; preds = %do.body67
  br label %do.end71, !dbg !6796

do.end71:                                         ; preds = %do.end70
  br label %do.end72, !dbg !6787

do.end72:                                         ; preds = %do.end71
  br label %do.end73, !dbg !6786

do.end73:                                         ; preds = %do.end72
  br label %do.end74, !dbg !6781

do.end74:                                         ; preds = %do.end73
  br label %while.body, !dbg !6728, !llvm.loop !6801

while.end:                                        ; preds = %if.then
  br label %do.body75, !dbg !6803

do.body75:                                        ; preds = %while.end
  br label %do.body76, !dbg !6804

do.body76:                                        ; preds = %do.body75
  br label %do.body77, !dbg !6805

do.body77:                                        ; preds = %do.body76
  br label %do.end78, !dbg !6806

do.end78:                                         ; preds = %do.body77
  br label %do.body79, !dbg !6805

do.body79:                                        ; preds = %do.end78
  store i8* null, i8** %__vpp_verify.i119, align 8, !dbg !6613
  %57 = load i8*, i8** %__vpp_verify.i119, align 8, !dbg !6613
  %58 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !6616, !srcloc !6690
  store i64 %58, i64* %pfo_val__.i120, align 8, !dbg !6616
  %59 = load i64, i64* %pfo_val__.i120, align 8, !dbg !6616
  %60 = inttoptr i64 %59 to %struct.task_struct*, !dbg !6616
  store %struct.task_struct* %60, %struct.task_struct** %tmp.i121, align 8, !dbg !6616
  %61 = load %struct.task_struct*, %struct.task_struct** %tmp.i121, align 8, !dbg !6616
  store %struct.task_struct* %61, %struct.task_struct** %pscr_ret__.i118, align 8, !dbg !6606
  %62 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i118, align 8, !dbg !6606
  store %struct.task_struct* %62, %struct.task_struct** %tmp1.i122, align 8, !dbg !6606
  %63 = load %struct.task_struct*, %struct.task_struct** %tmp1.i122, align 8, !dbg !6606
  %state81 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %63, i32 0, i32 1, !dbg !6808
  store volatile i64 0, i64* %state81, align 16, !dbg !6808
  br label %do.end82, !dbg !6808

do.end82:                                         ; preds = %do.body79
  br label %do.end83, !dbg !6805

do.end83:                                         ; preds = %do.end82
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6804, !srcloc !6809
  br label %do.end84, !dbg !6804

do.end84:                                         ; preds = %do.end83
  %64 = load i32, i32* %stop, align 4, !dbg !6810
  %tobool85 = icmp ne i32 %64, 0, !dbg !6810
  br i1 %tobool85, label %if.else, label %if.then86, !dbg !6812

if.then86:                                        ; preds = %do.end84
  %65 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6813
  %claimed87 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %65, i32 0, i32 30, !dbg !6815
  %bf.load88 = load i16, i16* %claimed87, align 32, !dbg !6816
  %bf.clear89 = and i16 %bf.load88, -3, !dbg !6816
  %bf.set = or i16 %bf.clear89, 2, !dbg !6816
  store i16 %bf.set, i16* %claimed87, align 32, !dbg !6816
  %66 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6817
  %67 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6818
  %68 = load %struct.task_struct*, %struct.task_struct** %task, align 8, !dbg !6819
  call void @mmc_ctx_set_claimer(%struct.mmc_host* %66, %struct.mmc_ctx* %67, %struct.task_struct* %68) #10, !dbg !6820
  %69 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6821
  %claim_cnt = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %69, i32 0, i32 41, !dbg !6822
  %70 = load i32, i32* %claim_cnt, align 8, !dbg !6823
  %add = add i32 %70, 1, !dbg !6823
  store i32 %add, i32* %claim_cnt, align 8, !dbg !6823
  %71 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6824
  %claim_cnt90 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %71, i32 0, i32 41, !dbg !6826
  %72 = load i32, i32* %claim_cnt90, align 8, !dbg !6826
  %cmp91 = icmp eq i32 %72, 1, !dbg !6827
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !6828

if.then93:                                        ; preds = %if.then86
  store i8 1, i8* %pm, align 1, !dbg !6829
  br label %if.end94, !dbg !6830

if.end94:                                         ; preds = %if.then93, %if.then86
  br label %if.end96, !dbg !6831

if.else:                                          ; preds = %do.end84
  %73 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6832
  %wq95 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %73, i32 0, i32 39, !dbg !6832
  call void @__wake_up(%struct.wait_queue_head* %wq95, i32 3, i32 1, i8* null) #10, !dbg !6832
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.end94
  %74 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6833
  %lock97 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %74, i32 0, i32 28, !dbg !6834
  %75 = load i64, i64* %flags3, align 8, !dbg !6835
  store %struct.spinlock* %lock97, %struct.spinlock** %lock.addr.i123, align 8
  store i64 %75, i64* %flags.addr.i124, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !6836
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !6836
  store i32 1, i32* %tmp.i125, align 4, !dbg !6836
  %76 = load i32, i32* %tmp.i125, align 4, !dbg !6836
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !6837
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !6837
  store i32 1, i32* %tmp8.i126, align 4, !dbg !6837
  %77 = load i32, i32* %tmp8.i126, align 4, !dbg !6837
  %78 = load i64, i64* %flags.addr.i124, align 8, !dbg !6838
  call void @arch_local_irq_restore(i64 %78) #13, !dbg !6838
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6839, !srcloc !6776
  %79 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i123, align 8, !dbg !6840
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %79, i32 0, i32 0, !dbg !6840
  %rlock.i127 = bitcast %union.anon.2* %80 to %struct.raw_spinlock*, !dbg !6840
  %81 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6841
  %wq98 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %81, i32 0, i32 39, !dbg !6842
  call void @remove_wait_queue(%struct.wait_queue_head* %wq98, %struct.wait_queue_entry* %wait) #10, !dbg !6843
  %82 = load i8, i8* %pm, align 1, !dbg !6844
  %tobool99 = trunc i8 %82 to i1, !dbg !6844
  br i1 %tobool99, label %if.then100, label %if.end102, !dbg !6846

if.then100:                                       ; preds = %if.end96
  %83 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6847
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %83, i32 0, i32 0, !dbg !6847
  %84 = load %struct.device*, %struct.device** %parent, align 64, !dbg !6847
  %call101 = call i32 @pm_runtime_get_sync(%struct.device* %84) #10, !dbg !6848
  br label %if.end102, !dbg !6848

if.end102:                                        ; preds = %if.then100, %if.end96
  %85 = load i32, i32* %stop, align 4, !dbg !6849
  ret i32 %85, !dbg !6850
}

; Function Attrs: noredzone
declare dso_local i32 @default_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @add_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !6851 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6855, metadata !DIExpression()), !dbg !6856
  %call = call i64 @arch_local_save_flags() #10, !dbg !6857
  store i64 %call, i64* %f, align 8, !dbg !6858
  call void @arch_local_irq_disable() #10, !dbg !6859
  %0 = load i64, i64* %f, align 8, !dbg !6860
  ret i64 %0, !dbg !6861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_ctx_matches(%struct.mmc_host* %host, %struct.mmc_ctx* %ctx, %struct.task_struct* %task) #0 !dbg !6862 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %ctx.addr = alloca %struct.mmc_ctx*, align 8
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6865, metadata !DIExpression()), !dbg !6866
  store %struct.mmc_ctx* %ctx, %struct.mmc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ctx** %ctx.addr, metadata !6867, metadata !DIExpression()), !dbg !6868
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !6869, metadata !DIExpression()), !dbg !6870
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6871
  %claimer = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 40, !dbg !6872
  %1 = load %struct.mmc_ctx*, %struct.mmc_ctx** %claimer, align 64, !dbg !6872
  %2 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6873
  %cmp = icmp eq %struct.mmc_ctx* %1, %2, !dbg !6874
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6875

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6876
  %tobool = icmp ne %struct.mmc_ctx* %3, null, !dbg !6876
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6877

land.lhs.true:                                    ; preds = %lor.rhs
  %4 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !6878
  %tobool1 = icmp ne %struct.task_struct* %4, null, !dbg !6878
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !6879

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6880
  %claimer2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 40, !dbg !6881
  %6 = load %struct.mmc_ctx*, %struct.mmc_ctx** %claimer2, align 64, !dbg !6881
  %task3 = getelementptr inbounds %struct.mmc_ctx, %struct.mmc_ctx* %6, i32 0, i32 0, !dbg !6882
  %7 = load %struct.task_struct*, %struct.task_struct** %task3, align 8, !dbg !6882
  %8 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !6883
  %cmp4 = icmp eq %struct.task_struct* %7, %8, !dbg !6884
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %lor.rhs
  %9 = phi i1 [ false, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp4, %land.rhs ], !dbg !6885
  br label %lor.end, !dbg !6875

lor.end:                                          ; preds = %land.end, %entry
  %10 = phi i1 [ true, %entry ], [ %9, %land.end ]
  ret i1 %10, !dbg !6886
}

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_ctx_set_claimer(%struct.mmc_host* %host, %struct.mmc_ctx* %ctx, %struct.task_struct* %task) #0 !dbg !6887 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %ctx.addr = alloca %struct.mmc_ctx*, align 8
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6890, metadata !DIExpression()), !dbg !6891
  store %struct.mmc_ctx* %ctx, %struct.mmc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ctx** %ctx.addr, metadata !6892, metadata !DIExpression()), !dbg !6893
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !6894, metadata !DIExpression()), !dbg !6895
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6896
  %claimer = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 40, !dbg !6898
  %1 = load %struct.mmc_ctx*, %struct.mmc_ctx** %claimer, align 64, !dbg !6898
  %tobool = icmp ne %struct.mmc_ctx* %1, null, !dbg !6896
  br i1 %tobool, label %if.end5, label %if.then, !dbg !6899

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6900
  %tobool1 = icmp ne %struct.mmc_ctx* %2, null, !dbg !6900
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6903

if.then2:                                         ; preds = %if.then
  %3 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !6904
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6905
  %claimer3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 40, !dbg !6906
  store %struct.mmc_ctx* %3, %struct.mmc_ctx** %claimer3, align 64, !dbg !6907
  br label %if.end, !dbg !6905

if.else:                                          ; preds = %if.then
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6908
  %default_ctx = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 42, !dbg !6909
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6910
  %claimer4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 40, !dbg !6911
  store %struct.mmc_ctx* %default_ctx, %struct.mmc_ctx** %claimer4, align 64, !dbg !6912
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !6913

if.end5:                                          ; preds = %if.end, %entry
  %7 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !6914
  %tobool6 = icmp ne %struct.task_struct* %7, null, !dbg !6914
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !6916

if.then7:                                         ; preds = %if.end5
  %8 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !6917
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6918
  %claimer8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 40, !dbg !6919
  %10 = load %struct.mmc_ctx*, %struct.mmc_ctx** %claimer8, align 64, !dbg !6919
  %task9 = getelementptr inbounds %struct.mmc_ctx, %struct.mmc_ctx* %10, i32 0, i32 0, !dbg !6920
  store %struct.task_struct* %8, %struct.task_struct** %task9, align 8, !dbg !6921
  br label %if.end10, !dbg !6918

if.end10:                                         ; preds = %if.then7, %if.end5
  ret void, !dbg !6922
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @remove_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !6923 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6927
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #10, !dbg !6928
  ret i32 %call, !dbg !6929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_release_host(%struct.mmc_host* %host) #0 !dbg !6930 {
entry:
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !6591, metadata !DIExpression()), !dbg !6931
  %flags.addr.i63 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i63, metadata !6598, metadata !DIExpression()), !dbg !6935
  %tmp.i64 = alloca i32, align 4
  %tmp8.i65 = alloca i32, align 4
  %lock.addr.i60 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i60, metadata !6591, metadata !DIExpression()), !dbg !6936
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !6939
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !6940
  %host.addr = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6949, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6951, metadata !DIExpression()), !dbg !6953
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6953
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !6953
  %bf.load = load i16, i16* %claimed, align 32, !dbg !6953
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !6953
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6953
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6953
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6953
  %lnot = xor i1 %tobool, true, !dbg !6953
  %lnot1 = xor i1 %lnot, true, !dbg !6953
  %lnot2 = xor i1 %lnot1, true, !dbg !6953
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6953
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6953
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !6954
  %tobool3 = icmp ne i32 %1, 0, !dbg !6954
  %lnot4 = xor i1 %tobool3, true, !dbg !6954
  %lnot6 = xor i1 %lnot4, true, !dbg !6954
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !6954
  %conv = sext i32 %lnot.ext7 to i64, !dbg !6954
  %tobool8 = icmp ne i64 %conv, 0, !dbg !6954
  br i1 %tobool8, label %if.then, label %if.end, !dbg !6953

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6954

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !6956

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !6958

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !6956

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 831, i32 2305, i64 12) #8, !dbg !6960, !srcloc !6962
  br label %do.end11, !dbg !6960

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 298) #8, !dbg !6963, !srcloc !6965
  br label %do.body12, !dbg !6956

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !6966

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !6956

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !6956

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !6953
  %tobool15 = icmp ne i32 %2, 0, !dbg !6953
  %lnot16 = xor i1 %tobool15, true, !dbg !6953
  %lnot18 = xor i1 %lnot16, true, !dbg !6953
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6953
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !6953
  store i64 %conv20, i64* %tmp, align 8, !dbg !6954
  %3 = load i64, i64* %tmp, align 8, !dbg !6953
  br label %do.body21, !dbg !6968

do.body21:                                        ; preds = %if.end
  br label %do.body22, !dbg !6969

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6970, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6973, metadata !DIExpression()), !dbg !6972
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6972
  %conv23 = zext i1 %cmp to i32, !dbg !6972
  store i32 1, i32* %tmp24, align 4, !dbg !6972
  %4 = load i32, i32* %tmp24, align 4, !dbg !6972
  br label %do.body25, !dbg !6974

do.body25:                                        ; preds = %do.body22
  br label %do.body26, !dbg !6975

do.body26:                                        ; preds = %do.body25
  br label %do.body27, !dbg !6976

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6978, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !6982, metadata !DIExpression()), !dbg !6981
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !6981
  %conv31 = zext i1 %cmp30 to i32, !dbg !6981
  store i32 1, i32* %tmp32, align 4, !dbg !6981
  %5 = load i32, i32* %tmp32, align 4, !dbg !6981
  %call = call i64 @arch_local_irq_save() #10, !dbg !6983
  store i64 %call, i64* %flags, align 8, !dbg !6983
  br label %do.end33, !dbg !6983

do.end33:                                         ; preds = %do.body27
  br label %do.end34, !dbg !6976

do.end34:                                         ; preds = %do.end33
  br label %do.body35, !dbg !6975

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6984, !srcloc !6985
  br label %do.body36, !dbg !6984

do.body36:                                        ; preds = %do.body35
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6986
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 28, !dbg !6986
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6987
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !6988
  %rlock.i = bitcast %union.anon.2* %8 to %struct.raw_spinlock*, !dbg !6988
  br label %do.end38, !dbg !6986

do.end38:                                         ; preds = %do.body36
  br label %do.end39, !dbg !6984

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !6975

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !6974

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !6969

do.end42:                                         ; preds = %do.end41
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6989
  %claim_cnt = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 41, !dbg !6990
  %10 = load i32, i32* %claim_cnt, align 8, !dbg !6991
  %dec = add i32 %10, -1, !dbg !6991
  store i32 %dec, i32* %claim_cnt, align 8, !dbg !6991
  %tobool43 = icmp ne i32 %dec, 0, !dbg !6991
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !6992

if.then44:                                        ; preds = %do.end42
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !6993
  %lock45 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 28, !dbg !6994
  %12 = load i64, i64* %flags, align 8, !dbg !6995
  store %struct.spinlock* %lock45, %struct.spinlock** %lock.addr.i60, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !6996
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !6996
  store i32 1, i32* %tmp.i, align 4, !dbg !6996
  %13 = load i32, i32* %tmp.i, align 4, !dbg !6996
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !6997
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !6997
  store i32 1, i32* %tmp8.i, align 4, !dbg !6997
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !6997
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !6998
  call void @arch_local_irq_restore(i64 %15) #13, !dbg !6998
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6999, !srcloc !6776
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i60, align 8, !dbg !7000
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !7000
  %rlock.i61 = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !7000
  br label %if.end59, !dbg !7001

if.else:                                          ; preds = %do.end42
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7002
  %claimed46 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %18, i32 0, i32 30, !dbg !7003
  %bf.load47 = load i16, i16* %claimed46, align 32, !dbg !7004
  %bf.clear48 = and i16 %bf.load47, -3, !dbg !7004
  store i16 %bf.clear48, i16* %claimed46, align 32, !dbg !7004
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7005
  %claimer = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 40, !dbg !7006
  %20 = load %struct.mmc_ctx*, %struct.mmc_ctx** %claimer, align 64, !dbg !7006
  %task = getelementptr inbounds %struct.mmc_ctx, %struct.mmc_ctx* %20, i32 0, i32 0, !dbg !7007
  store %struct.task_struct* null, %struct.task_struct** %task, align 8, !dbg !7008
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7009
  %claimer49 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %21, i32 0, i32 40, !dbg !7010
  store %struct.mmc_ctx* null, %struct.mmc_ctx** %claimer49, align 64, !dbg !7011
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7012
  %lock50 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 28, !dbg !7013
  %23 = load i64, i64* %flags, align 8, !dbg !7014
  store %struct.spinlock* %lock50, %struct.spinlock** %lock.addr.i62, align 8
  store i64 %23, i64* %flags.addr.i63, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !7015
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !7015
  store i32 1, i32* %tmp.i64, align 4, !dbg !7015
  %24 = load i32, i32* %tmp.i64, align 4, !dbg !7015
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !7016
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !7016
  store i32 1, i32* %tmp8.i65, align 4, !dbg !7016
  %25 = load i32, i32* %tmp8.i65, align 4, !dbg !7016
  %26 = load i64, i64* %flags.addr.i63, align 8, !dbg !7017
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !7017
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7018, !srcloc !6776
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !7019
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !7019
  %rlock.i66 = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !7019
  %29 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7020
  %wq = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %29, i32 0, i32 39, !dbg !7020
  call void @__wake_up(%struct.wait_queue_head* %wq, i32 3, i32 1, i8* null) #10, !dbg !7020
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7021
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %30, i32 0, i32 0, !dbg !7021
  %31 = load %struct.device*, %struct.device** %parent, align 64, !dbg !7021
  call void @pm_runtime_mark_last_busy(%struct.device* %31) #10, !dbg !7022
  %32 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7023
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %32, i32 0, i32 17, !dbg !7025
  %33 = load i32, i32* %caps, align 4, !dbg !7025
  %and = and i32 %33, 2097152, !dbg !7026
  %tobool51 = icmp ne i32 %and, 0, !dbg !7026
  br i1 %tobool51, label %if.then52, label %if.else55, !dbg !7027

if.then52:                                        ; preds = %if.else
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7028
  %parent53 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 0, !dbg !7028
  %35 = load %struct.device*, %struct.device** %parent53, align 64, !dbg !7028
  %call54 = call i32 @pm_runtime_put_sync_suspend(%struct.device* %35) #10, !dbg !7029
  br label %if.end58, !dbg !7029

if.else55:                                        ; preds = %if.else
  %36 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7030
  %parent56 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %36, i32 0, i32 0, !dbg !7030
  %37 = load %struct.device*, %struct.device** %parent56, align 64, !dbg !7030
  %call57 = call i32 @pm_runtime_put_autosuspend(%struct.device* %37) #10, !dbg !7031
  br label %if.end58

if.end58:                                         ; preds = %if.else55, %if.then52
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then44
  ret void, !dbg !7032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_mark_last_busy(%struct.device* %dev) #0 !dbg !7033 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  br label %do.body, !dbg !7036

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7037

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7039

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7037

do.body2:                                         ; preds = %do.end
  %call = call i64 @ktime_get_mono_fast_ns() #10, !dbg !7041
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7041
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !7041
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 21, !dbg !7041
  store volatile i64 %call, i64* %last_busy, align 8, !dbg !7041
  br label %do.end3, !dbg !7041

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7037

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !7043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_sync_suspend(%struct.device* %dev) #0 !dbg !7044 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7045, metadata !DIExpression()), !dbg !7046
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7047
  %call = call i32 @__pm_runtime_suspend(%struct.device* %0, i32 4) #10, !dbg !7048
  ret i32 %call, !dbg !7049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_autosuspend(%struct.device* %dev) #0 !dbg !7050 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7051, metadata !DIExpression()), !dbg !7052
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7053
  %call = call i32 @__pm_runtime_suspend(%struct.device* %0, i32 13) #10, !dbg !7054
  ret i32 %call, !dbg !7055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_get_card(%struct.mmc_card* %card, %struct.mmc_ctx* %ctx) #0 !dbg !7056 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %ctx.addr = alloca %struct.mmc_ctx*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  store %struct.mmc_ctx* %ctx, %struct.mmc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ctx** %ctx.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7063
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 1, !dbg !7064
  %call = call i32 @pm_runtime_get_sync(%struct.device* %dev) #10, !dbg !7065
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7066
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 0, !dbg !7067
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7067
  %3 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !7068
  %call1 = call i32 @__mmc_claim_host(%struct.mmc_host* %2, %struct.mmc_ctx* %3, %struct.atomic_t* null) #10, !dbg !7069
  ret void, !dbg !7070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_put_card(%struct.mmc_card* %card, %struct.mmc_ctx* %ctx) #0 !dbg !7071 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %ctx.addr = alloca %struct.mmc_ctx*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store %struct.mmc_ctx* %ctx, %struct.mmc_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_ctx** %ctx.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7076, metadata !DIExpression()), !dbg !7077
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7078
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !7079
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7079
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7080, metadata !DIExpression()), !dbg !7082
  %2 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !7082
  %tobool = icmp ne %struct.mmc_ctx* %2, null, !dbg !7082
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7082

land.rhs:                                         ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7082
  %claimer = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 40, !dbg !7082
  %4 = load %struct.mmc_ctx*, %struct.mmc_ctx** %claimer, align 64, !dbg !7082
  %5 = load %struct.mmc_ctx*, %struct.mmc_ctx** %ctx.addr, align 8, !dbg !7082
  %cmp = icmp ne %struct.mmc_ctx* %4, %5, !dbg !7082
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7083
  %lnot = xor i1 %6, true, !dbg !7082
  %lnot2 = xor i1 %lnot, true, !dbg !7082
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7082
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7082
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !7084
  %tobool3 = icmp ne i32 %7, 0, !dbg !7084
  %lnot4 = xor i1 %tobool3, true, !dbg !7084
  %lnot6 = xor i1 %lnot4, true, !dbg !7084
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !7084
  %conv = sext i32 %lnot.ext7 to i64, !dbg !7084
  %tobool8 = icmp ne i64 %conv, 0, !dbg !7084
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7082

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !7084

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !7086

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !7088

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !7086

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 871, i32 2305, i64 12) #8, !dbg !7090, !srcloc !7092
  br label %do.end11, !dbg !7090

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 299) #8, !dbg !7093, !srcloc !7095
  br label %do.body12, !dbg !7086

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7096

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7086

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7086

if.end:                                           ; preds = %do.end14, %land.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !7082
  %tobool15 = icmp ne i32 %8, 0, !dbg !7082
  %lnot16 = xor i1 %tobool15, true, !dbg !7082
  %lnot18 = xor i1 %lnot16, true, !dbg !7082
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7082
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7082
  store i64 %conv20, i64* %tmp, align 8, !dbg !7084
  %9 = load i64, i64* %tmp, align 8, !dbg !7082
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7098
  call void @mmc_release_host(%struct.mmc_host* %10) #10, !dbg !7099
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7100
  %dev = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 1, !dbg !7101
  call void @pm_runtime_mark_last_busy(%struct.device* %dev) #10, !dbg !7102
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7103
  %dev21 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 1, !dbg !7104
  %call = call i32 @pm_runtime_put_autosuspend(%struct.device* %dev21) #10, !dbg !7105
  ret void, !dbg !7106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_chip_select(%struct.mmc_host* %host, i32 %mode) #0 !dbg !7107 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7108, metadata !DIExpression()), !dbg !7109
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7110, metadata !DIExpression()), !dbg !7111
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7112
  %conv = trunc i32 %0 to i8, !dbg !7112
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7113
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !7114
  %chip_select = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 4, !dbg !7115
  store i8 %conv, i8* %chip_select, align 1, !dbg !7116
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7117
  call void @mmc_set_ios(%struct.mmc_host* %2) #10, !dbg !7118
  ret void, !dbg !7119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_set_ios(%struct.mmc_host* %host) #0 !dbg !7120 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %ios = alloca %struct.mmc_ios*, align 8
  %tmp = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.declare(metadata %struct.mmc_ios** %ios, metadata !7123, metadata !DIExpression()), !dbg !7124
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7125
  %ios1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 29, !dbg !7126
  store %struct.mmc_ios* %ios1, %struct.mmc_ios** %ios, align 8, !dbg !7124
  store i32 0, i32* %tmp, align 4, !dbg !7127
  %1 = load i32, i32* %tmp, align 4, !dbg !7130
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7131
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 3, !dbg !7132
  %3 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7132
  %set_ios = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %3, i32 0, i32 4, !dbg !7133
  %4 = load void (%struct.mmc_host*, %struct.mmc_ios*)*, void (%struct.mmc_host*, %struct.mmc_ios*)** %set_ios, align 8, !dbg !7133
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7134
  %6 = load %struct.mmc_ios*, %struct.mmc_ios** %ios, align 8, !dbg !7135
  call void %4(%struct.mmc_host* %5, %struct.mmc_ios* %6) #10, !dbg !7131
  ret void, !dbg !7136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_clock(%struct.mmc_host* %host, i32 %hz) #0 !dbg !7137 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %hz.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7140, metadata !DIExpression()), !dbg !7141
  store i32 %hz, i32* %hz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hz.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7144, metadata !DIExpression()), !dbg !7146
  %0 = load i32, i32* %hz.addr, align 4, !dbg !7146
  %tobool = icmp ne i32 %0, 0, !dbg !7146
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7146

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %hz.addr, align 4, !dbg !7146
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7146
  %f_min = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 5, !dbg !7146
  %3 = load i32, i32* %f_min, align 8, !dbg !7146
  %cmp = icmp ult i32 %1, %3, !dbg !7146
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7147
  %lnot = xor i1 %4, true, !dbg !7146
  %lnot1 = xor i1 %lnot, true, !dbg !7146
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7146
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7146
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !7148
  %tobool2 = icmp ne i32 %5, 0, !dbg !7148
  %lnot3 = xor i1 %tobool2, true, !dbg !7148
  %lnot5 = xor i1 %lnot3, true, !dbg !7148
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !7148
  %conv = sext i32 %lnot.ext6 to i64, !dbg !7148
  %tobool7 = icmp ne i64 %conv, 0, !dbg !7148
  br i1 %tobool7, label %if.then, label %if.end, !dbg !7146

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !7148

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !7150

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !7152

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !7150

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 911, i32 2305, i64 12) #8, !dbg !7154, !srcloc !7156
  br label %do.end10, !dbg !7154

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #8, !dbg !7157, !srcloc !7159
  br label %do.body11, !dbg !7150

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !7160

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7150

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !7150

if.end:                                           ; preds = %do.end13, %land.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7146
  %tobool14 = icmp ne i32 %6, 0, !dbg !7146
  %lnot15 = xor i1 %tobool14, true, !dbg !7146
  %lnot17 = xor i1 %lnot15, true, !dbg !7146
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7146
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !7146
  store i64 %conv19, i64* %tmp, align 8, !dbg !7148
  %7 = load i64, i64* %tmp, align 8, !dbg !7146
  %8 = load i32, i32* %hz.addr, align 4, !dbg !7162
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7164
  %f_max = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 6, !dbg !7165
  %10 = load i32, i32* %f_max, align 4, !dbg !7165
  %cmp20 = icmp ugt i32 %8, %10, !dbg !7166
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !7167

if.then22:                                        ; preds = %if.end
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7168
  %f_max23 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 6, !dbg !7169
  %12 = load i32, i32* %f_max23, align 4, !dbg !7169
  store i32 %12, i32* %hz.addr, align 4, !dbg !7170
  br label %if.end24, !dbg !7171

if.end24:                                         ; preds = %if.then22, %if.end
  %13 = load i32, i32* %hz.addr, align 4, !dbg !7172
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7173
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 29, !dbg !7174
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 0, !dbg !7175
  store i32 %13, i32* %clock, align 4, !dbg !7176
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7177
  call void @mmc_set_ios(%struct.mmc_host* %15) #10, !dbg !7178
  ret void, !dbg !7179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_execute_tuning(%struct.mmc_card* %card) #0 !dbg !7180 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %opcode = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7183, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7185, metadata !DIExpression()), !dbg !7186
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7187
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !7188
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7188
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !7186
  call void @llvm.dbg.declare(metadata i32* %opcode, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7191, metadata !DIExpression()), !dbg !7192
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7193
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 3, !dbg !7195
  %3 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7195
  %execute_tuning = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %3, i32 0, i32 12, !dbg !7196
  %4 = load i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, i32)** %execute_tuning, align 8, !dbg !7196
  %tobool = icmp ne i32 (%struct.mmc_host*, i32)* %4, null, !dbg !7193
  br i1 %tobool, label %if.end, label %if.then, !dbg !7197

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7198
  br label %return, !dbg !7198

if.end:                                           ; preds = %entry
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7199
  %cqe_on = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 66, !dbg !7201
  %6 = load i8, i8* %cqe_on, align 1, !dbg !7201
  %tobool2 = trunc i8 %6 to i1, !dbg !7201
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7202

if.then3:                                         ; preds = %if.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7203
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 62, !dbg !7204
  %8 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !7204
  %cqe_off = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %8, i32 0, i32 4, !dbg !7205
  %9 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %cqe_off, align 8, !dbg !7205
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7206
  call void %9(%struct.mmc_host* %10) #10, !dbg !7203
  br label %if.end4, !dbg !7203

if.end4:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7207
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 4, !dbg !7207
  %12 = load i32, i32* %type, align 8, !dbg !7207
  %cmp = icmp eq i32 %12, 0, !dbg !7207
  br i1 %cmp, label %if.then5, label %if.else, !dbg !7209

if.then5:                                         ; preds = %if.end4
  store i32 21, i32* %opcode, align 4, !dbg !7210
  br label %if.end6, !dbg !7211

if.else:                                          ; preds = %if.end4
  store i32 19, i32* %opcode, align 4, !dbg !7212
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then5
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7213
  %ops7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 3, !dbg !7214
  %14 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops7, align 8, !dbg !7214
  %execute_tuning8 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %14, i32 0, i32 12, !dbg !7215
  %15 = load i32 (%struct.mmc_host*, i32)*, i32 (%struct.mmc_host*, i32)** %execute_tuning8, align 8, !dbg !7215
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7216
  %17 = load i32, i32* %opcode, align 4, !dbg !7217
  %call = call i32 %15(%struct.mmc_host* %16, i32 %17) #10, !dbg !7213
  store i32 %call, i32* %err, align 4, !dbg !7218
  %18 = load i32, i32* %err, align 4, !dbg !7219
  %tobool9 = icmp ne i32 %18, 0, !dbg !7219
  br i1 %tobool9, label %if.then10, label %if.else13, !dbg !7221

if.then10:                                        ; preds = %if.end6
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7222
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 1, !dbg !7222
  %call11 = call i8* @dev_name(%struct.device* %class_dev) #10, !dbg !7222
  %20 = load i32, i32* %err, align 4, !dbg !7222
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i8* %call11, i32 %20) #11, !dbg !7222
  br label %if.end14, !dbg !7222

if.else13:                                        ; preds = %if.end6
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7223
  call void @mmc_retune_enable(%struct.mmc_host* %21) #10, !dbg !7224
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then10
  %22 = load i32, i32* %err, align 4, !dbg !7225
  store i32 %22, i32* %retval, align 4, !dbg !7226
  br label %return, !dbg !7226

return:                                           ; preds = %if.end14, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7227
  ret i32 %23, !dbg !7227
}

; Function Attrs: noredzone
declare dso_local void @mmc_retune_enable(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_bus_mode(%struct.mmc_host* %host, i32 %mode) #0 !dbg !7228 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7233
  %conv = trunc i32 %0 to i8, !dbg !7233
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7234
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !7235
  %bus_mode = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 3, !dbg !7236
  store i8 %conv, i8* %bus_mode, align 4, !dbg !7237
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7238
  call void @mmc_set_ios(%struct.mmc_host* %2) #10, !dbg !7239
  ret void, !dbg !7240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_bus_width(%struct.mmc_host* %host, i32 %width) #0 !dbg !7241 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %width.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7242, metadata !DIExpression()), !dbg !7243
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !7244, metadata !DIExpression()), !dbg !7245
  %0 = load i32, i32* %width.addr, align 4, !dbg !7246
  %conv = trunc i32 %0 to i8, !dbg !7246
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7247
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !7248
  %bus_width = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 6, !dbg !7249
  store i8 %conv, i8* %bus_width, align 1, !dbg !7250
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7251
  call void @mmc_set_ios(%struct.mmc_host* %2) #10, !dbg !7252
  ret void, !dbg !7253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_initial_state(%struct.mmc_host* %host) #0 !dbg !7254 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7255, metadata !DIExpression()), !dbg !7256
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7257
  %cqe_on = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 66, !dbg !7259
  %1 = load i8, i8* %cqe_on, align 1, !dbg !7259
  %tobool = trunc i8 %1 to i1, !dbg !7259
  br i1 %tobool, label %if.then, label %if.end, !dbg !7260

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7261
  %cqe_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 62, !dbg !7262
  %3 = load %struct.mmc_cqe_ops*, %struct.mmc_cqe_ops** %cqe_ops, align 64, !dbg !7262
  %cqe_off = getelementptr inbounds %struct.mmc_cqe_ops, %struct.mmc_cqe_ops* %3, i32 0, i32 4, !dbg !7263
  %4 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %cqe_off, align 8, !dbg !7263
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7264
  call void %4(%struct.mmc_host* %5) #10, !dbg !7261
  br label %if.end, !dbg !7261

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7265
  call void @mmc_retune_disable(%struct.mmc_host* %6) #10, !dbg !7266
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7267
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 17, !dbg !7267
  %8 = load i32, i32* %caps, align 4, !dbg !7267
  %and = and i32 %8, 16, !dbg !7267
  %tobool1 = icmp ne i32 %and, 0, !dbg !7267
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !7269

if.then2:                                         ; preds = %if.end
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7270
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 29, !dbg !7271
  %chip_select = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 4, !dbg !7272
  store i8 1, i8* %chip_select, align 1, !dbg !7273
  br label %if.end5, !dbg !7270

if.else:                                          ; preds = %if.end
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7274
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 29, !dbg !7275
  %chip_select4 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 4, !dbg !7276
  store i8 0, i8* %chip_select4, align 1, !dbg !7277
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7278
  %ios6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 29, !dbg !7279
  %bus_mode = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios6, i32 0, i32 3, !dbg !7280
  store i8 2, i8* %bus_mode, align 4, !dbg !7281
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7282
  %ios7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 29, !dbg !7283
  %bus_width = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios7, i32 0, i32 6, !dbg !7284
  store i8 0, i8* %bus_width, align 1, !dbg !7285
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7286
  %ios8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 29, !dbg !7287
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios8, i32 0, i32 7, !dbg !7288
  store i8 0, i8* %timing, align 4, !dbg !7289
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7290
  %ios9 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 29, !dbg !7291
  %drv_type = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios9, i32 0, i32 9, !dbg !7292
  store i8 0, i8* %drv_type, align 2, !dbg !7293
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7294
  %ios10 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %15, i32 0, i32 29, !dbg !7295
  %enhanced_strobe = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios10, i32 0, i32 10, !dbg !7296
  store i8 0, i8* %enhanced_strobe, align 1, !dbg !7297
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7298
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 18, !dbg !7300
  %17 = load i32, i32* %caps2, align 8, !dbg !7300
  %and11 = and i32 %17, 1048576, !dbg !7301
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7301
  br i1 %tobool12, label %land.lhs.true, label %if.end18, !dbg !7302

land.lhs.true:                                    ; preds = %if.end5
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7303
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %18, i32 0, i32 3, !dbg !7304
  %19 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7304
  %hs400_enhanced_strobe = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %19, i32 0, i32 17, !dbg !7305
  %20 = load void (%struct.mmc_host*, %struct.mmc_ios*)*, void (%struct.mmc_host*, %struct.mmc_ios*)** %hs400_enhanced_strobe, align 8, !dbg !7305
  %tobool13 = icmp ne void (%struct.mmc_host*, %struct.mmc_ios*)* %20, null, !dbg !7303
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !7306

if.then14:                                        ; preds = %land.lhs.true
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7307
  %ops15 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %21, i32 0, i32 3, !dbg !7308
  %22 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops15, align 8, !dbg !7308
  %hs400_enhanced_strobe16 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %22, i32 0, i32 17, !dbg !7309
  %23 = load void (%struct.mmc_host*, %struct.mmc_ios*)*, void (%struct.mmc_host*, %struct.mmc_ios*)** %hs400_enhanced_strobe16, align 8, !dbg !7309
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7310
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7311
  %ios17 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %25, i32 0, i32 29, !dbg !7312
  call void %23(%struct.mmc_host* %24, %struct.mmc_ios* %ios17) #10, !dbg !7307
  br label %if.end18, !dbg !7307

if.end18:                                         ; preds = %if.then14, %land.lhs.true, %if.end5
  %26 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7313
  call void @mmc_set_ios(%struct.mmc_host* %26) #10, !dbg !7314
  ret void, !dbg !7315
}

; Function Attrs: noredzone
declare dso_local void @mmc_retune_disable(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_vddrange_to_ocrmask(i32 %vdd_min, i32 %vdd_max) #0 !dbg !7316 {
entry:
  %retval = alloca i32, align 4
  %vdd_min.addr = alloca i32, align 4
  %vdd_max.addr = alloca i32, align 4
  %mask = alloca i32, align 4
  store i32 %vdd_min, i32* %vdd_min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdd_min.addr, metadata !7319, metadata !DIExpression()), !dbg !7320
  store i32 %vdd_max, i32* %vdd_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdd_max.addr, metadata !7321, metadata !DIExpression()), !dbg !7322
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7323, metadata !DIExpression()), !dbg !7324
  store i32 0, i32* %mask, align 4, !dbg !7324
  %0 = load i32, i32* %vdd_max.addr, align 4, !dbg !7325
  %1 = load i32, i32* %vdd_min.addr, align 4, !dbg !7327
  %cmp = icmp slt i32 %0, %1, !dbg !7328
  br i1 %cmp, label %if.then, label %if.end, !dbg !7329

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7330
  br label %return, !dbg !7330

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %vdd_max.addr, align 4, !dbg !7331
  %call = call i32 @mmc_vdd_to_ocrbitnum(i32 %2, i1 zeroext false) #10, !dbg !7332
  store i32 %call, i32* %vdd_max.addr, align 4, !dbg !7333
  %3 = load i32, i32* %vdd_max.addr, align 4, !dbg !7334
  %cmp1 = icmp slt i32 %3, 0, !dbg !7336
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7337

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7338
  br label %return, !dbg !7338

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %vdd_min.addr, align 4, !dbg !7339
  %call4 = call i32 @mmc_vdd_to_ocrbitnum(i32 %4, i1 zeroext true) #10, !dbg !7340
  store i32 %call4, i32* %vdd_min.addr, align 4, !dbg !7341
  %5 = load i32, i32* %vdd_min.addr, align 4, !dbg !7342
  %cmp5 = icmp slt i32 %5, 0, !dbg !7344
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7345

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !7346
  br label %return, !dbg !7346

if.end7:                                          ; preds = %if.end3
  br label %while.cond, !dbg !7347

while.cond:                                       ; preds = %while.body, %if.end7
  %6 = load i32, i32* %vdd_max.addr, align 4, !dbg !7348
  %7 = load i32, i32* %vdd_min.addr, align 4, !dbg !7349
  %cmp8 = icmp sge i32 %6, %7, !dbg !7350
  br i1 %cmp8, label %while.body, label %while.end, !dbg !7347

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %vdd_max.addr, align 4, !dbg !7351
  %dec = add i32 %8, -1, !dbg !7351
  store i32 %dec, i32* %vdd_max.addr, align 4, !dbg !7351
  %shl = shl i32 1, %8, !dbg !7352
  %9 = load i32, i32* %mask, align 4, !dbg !7353
  %or = or i32 %9, %shl, !dbg !7353
  store i32 %or, i32* %mask, align 4, !dbg !7353
  br label %while.cond, !dbg !7347, !llvm.loop !7354

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %mask, align 4, !dbg !7355
  store i32 %10, i32* %retval, align 4, !dbg !7356
  br label %return, !dbg !7356

return:                                           ; preds = %while.end, %if.then6, %if.then2, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7357
  ret i32 %11, !dbg !7357
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_vdd_to_ocrbitnum(i32 %vdd, i1 zeroext %low_bits) #0 !dbg !7358 {
entry:
  %retval = alloca i32, align 4
  %vdd.addr = alloca i32, align 4
  %low_bits.addr = alloca i8, align 1
  %max_bit = alloca i32, align 4
  %bit = alloca i32, align 4
  store i32 %vdd, i32* %vdd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdd.addr, metadata !7361, metadata !DIExpression()), !dbg !7362
  %frombool = zext i1 %low_bits to i8
  store i8 %frombool, i8* %low_bits.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %low_bits.addr, metadata !7363, metadata !DIExpression()), !dbg !7364
  call void @llvm.dbg.declare(metadata i32* %max_bit, metadata !7365, metadata !DIExpression()), !dbg !7367
  store i32 23, i32* %max_bit, align 4, !dbg !7367
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !7368, metadata !DIExpression()), !dbg !7369
  %0 = load i32, i32* %vdd.addr, align 4, !dbg !7370
  %cmp = icmp slt i32 %0, 1650, !dbg !7372
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7373

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %vdd.addr, align 4, !dbg !7374
  %cmp1 = icmp sgt i32 %1, 3600, !dbg !7375
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7376

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !7377
  br label %return, !dbg !7377

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %vdd.addr, align 4, !dbg !7378
  %cmp2 = icmp sge i32 %2, 1650, !dbg !7380
  br i1 %cmp2, label %land.lhs.true, label %if.end5, !dbg !7381

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32, i32* %vdd.addr, align 4, !dbg !7382
  %cmp3 = icmp sle i32 %3, 1950, !dbg !7383
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7384

if.then4:                                         ; preds = %land.lhs.true
  store i32 7, i32* %retval, align 4, !dbg !7385
  br label %return, !dbg !7385

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %4 = load i8, i8* %low_bits.addr, align 1, !dbg !7386
  %tobool = trunc i8 %4 to i1, !dbg !7386
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !7388

if.then6:                                         ; preds = %if.end5
  %5 = load i32, i32* %vdd.addr, align 4, !dbg !7389
  %sub = sub i32 %5, 1, !dbg !7389
  store i32 %sub, i32* %vdd.addr, align 4, !dbg !7389
  br label %if.end7, !dbg !7390

if.end7:                                          ; preds = %if.then6, %if.end5
  %6 = load i32, i32* %vdd.addr, align 4, !dbg !7391
  %sub8 = sub i32 %6, 2000, !dbg !7392
  %div = sdiv i32 %sub8, 100, !dbg !7393
  %add = add i32 %div, 8, !dbg !7394
  store i32 %add, i32* %bit, align 4, !dbg !7395
  %7 = load i32, i32* %bit, align 4, !dbg !7396
  %cmp9 = icmp sgt i32 %7, 23, !dbg !7398
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7399

if.then10:                                        ; preds = %if.end7
  store i32 23, i32* %retval, align 4, !dbg !7400
  br label %return, !dbg !7400

if.end11:                                         ; preds = %if.end7
  %8 = load i32, i32* %bit, align 4, !dbg !7401
  store i32 %8, i32* %retval, align 4, !dbg !7402
  br label %return, !dbg !7402

return:                                           ; preds = %if.end11, %if.then10, %if.then4, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7403
  ret i32 %9, !dbg !7403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @mmc_of_find_child_device(%struct.mmc_host* %host, i32 %func_num) #0 !dbg !7404 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %host.addr = alloca %struct.mmc_host*, align 8
  %func_num.addr = alloca i32, align 4
  %node = alloca %struct.device_node*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7407, metadata !DIExpression()), !dbg !7408
  store i32 %func_num, i32* %func_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %func_num.addr, metadata !7409, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.declare(metadata %struct.device_node** %node, metadata !7411, metadata !DIExpression()), !dbg !7412
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7413
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 0, !dbg !7415
  %1 = load %struct.device*, %struct.device** %parent, align 64, !dbg !7415
  %tobool = icmp ne %struct.device* %1, null, !dbg !7413
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7416

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7417
  %parent1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 0, !dbg !7418
  %3 = load %struct.device*, %struct.device** %parent1, align 64, !dbg !7418
  %of_node = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 23, !dbg !7419
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !7419
  %tobool2 = icmp ne %struct.device_node* %4, null, !dbg !7417
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7420

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !7421
  br label %return, !dbg !7421

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7422
  %parent3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 0, !dbg !7422
  %6 = load %struct.device*, %struct.device** %parent3, align 64, !dbg !7422
  %of_node4 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 23, !dbg !7422
  %7 = load %struct.device_node*, %struct.device_node** %of_node4, align 8, !dbg !7422
  %call = call %struct.device_node* @of_get_next_child(%struct.device_node* %7, %struct.device_node* null) #10, !dbg !7422
  store %struct.device_node* %call, %struct.device_node** %node, align 8, !dbg !7422
  br label %for.cond, !dbg !7422

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7424
  %cmp = icmp ne %struct.device_node* %8, null, !dbg !7424
  br i1 %cmp, label %for.body, label %for.end, !dbg !7422

for.body:                                         ; preds = %for.cond
  %9 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7426
  %call5 = call i32 @mmc_of_get_func_num(%struct.device_node* %9) #10, !dbg !7429
  %10 = load i32, i32* %func_num.addr, align 4, !dbg !7430
  %cmp6 = icmp eq i32 %call5, %10, !dbg !7431
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7432

if.then7:                                         ; preds = %for.body
  %11 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7433
  store %struct.device_node* %11, %struct.device_node** %retval, align 8, !dbg !7434
  br label %return, !dbg !7434

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !7435

for.inc:                                          ; preds = %if.end8
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7424
  %parent9 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 0, !dbg !7424
  %13 = load %struct.device*, %struct.device** %parent9, align 64, !dbg !7424
  %of_node10 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 23, !dbg !7424
  %14 = load %struct.device_node*, %struct.device_node** %of_node10, align 8, !dbg !7424
  %15 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !7424
  %call11 = call %struct.device_node* @of_get_next_child(%struct.device_node* %14, %struct.device_node* %15) #10, !dbg !7424
  store %struct.device_node* %call11, %struct.device_node** %node, align 8, !dbg !7424
  br label %for.cond, !dbg !7424, !llvm.loop !7436

for.end:                                          ; preds = %for.cond
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !7438
  br label %return, !dbg !7438

return:                                           ; preds = %for.end, %if.then7, %if.then
  %16 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !7439
  ret %struct.device_node* %16, !dbg !7439
}

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_get_next_child(%struct.device_node*, %struct.device_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_of_get_func_num(%struct.device_node* %node) #0 !dbg !7440 {
entry:
  %retval = alloca i32, align 4
  %node.addr = alloca %struct.device_node*, align 8
  %reg = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !7443, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7445, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7447, metadata !DIExpression()), !dbg !7448
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !7449
  %call = call i32 @of_property_read_u32(%struct.device_node* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i32* %reg) #10, !dbg !7450
  store i32 %call, i32* %ret, align 4, !dbg !7451
  %1 = load i32, i32* %ret, align 4, !dbg !7452
  %cmp = icmp slt i32 %1, 0, !dbg !7454
  br i1 %cmp, label %if.then, label %if.end, !dbg !7455

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !7456
  store i32 %2, i32* %retval, align 4, !dbg !7457
  br label %return, !dbg !7457

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %reg, align 4, !dbg !7458
  store i32 %3, i32* %retval, align 4, !dbg !7459
  br label %return, !dbg !7459

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7460
  ret i32 %4, !dbg !7460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_select_voltage(%struct.mmc_host* %host, i32 %ocr) #0 !dbg !7461 {
entry:
  %x.addr.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i20, metadata !7464, metadata !DIExpression()), !dbg !7469
  %r.i21 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i21, metadata !7473, metadata !DIExpression()), !dbg !7474
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7475, metadata !DIExpression()), !dbg !7477
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7480, metadata !DIExpression()), !dbg !7481
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  %bit = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !7484, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !7486, metadata !DIExpression()), !dbg !7487
  %0 = load i32, i32* %ocr.addr, align 4, !dbg !7488
  %and = and i32 %0, 127, !dbg !7490
  %tobool = icmp ne i32 %and, 0, !dbg !7490
  br i1 %tobool, label %if.then, label %if.end, !dbg !7491

if.then:                                          ; preds = %entry
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7492
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 0, !dbg !7492
  %2 = load %struct.device*, %struct.device** %parent, align 64, !dbg !7492
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !7492
  %3 = load i32, i32* %ocr.addr, align 4, !dbg !7494
  %and1 = and i32 %3, -128, !dbg !7494
  store i32 %and1, i32* %ocr.addr, align 4, !dbg !7494
  br label %if.end, !dbg !7495

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7496
  %ocr_avail = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 8, !dbg !7497
  %5 = load i32, i32* %ocr_avail, align 4, !dbg !7497
  %6 = load i32, i32* %ocr.addr, align 4, !dbg !7498
  %and2 = and i32 %6, %5, !dbg !7498
  store i32 %and2, i32* %ocr.addr, align 4, !dbg !7498
  %7 = load i32, i32* %ocr.addr, align 4, !dbg !7499
  %tobool3 = icmp ne i32 %7, 0, !dbg !7499
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !7501

if.then4:                                         ; preds = %if.end
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7502
  %parent5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 0, !dbg !7502
  %9 = load %struct.device*, %struct.device** %parent5, align 64, !dbg !7502
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !7502
  store i32 0, i32* %retval, align 4, !dbg !7504
  br label %return, !dbg !7504

if.end6:                                          ; preds = %if.end
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7505
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 18, !dbg !7506
  %11 = load i32, i32* %caps2, align 8, !dbg !7506
  %and7 = and i32 %11, 4, !dbg !7507
  %tobool8 = icmp ne i32 %and7, 0, !dbg !7507
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !7508

if.then9:                                         ; preds = %if.end6
  %12 = load i32, i32* %ocr.addr, align 4, !dbg !7509
  store i32 %12, i32* %x.addr.i, align 4
  %13 = load i32, i32* %x.addr.i, align 4, !dbg !7510
  %14 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %13, i32 -1) #7, !dbg !7511, !srcloc !7512
  store i32 %14, i32* %r.i, align 4, !dbg !7511
  %15 = load i32, i32* %r.i, align 4, !dbg !7513
  %add.i = add i32 %15, 1, !dbg !7514
  %sub = sub i32 %add.i, 1, !dbg !7515
  store i32 %sub, i32* %bit, align 4, !dbg !7516
  %16 = load i32, i32* %bit, align 4, !dbg !7517
  %shl = shl i32 3, %16, !dbg !7518
  %17 = load i32, i32* %ocr.addr, align 4, !dbg !7519
  %and10 = and i32 %17, %shl, !dbg !7519
  store i32 %and10, i32* %ocr.addr, align 4, !dbg !7519
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7520
  %19 = load i32, i32* %ocr.addr, align 4, !dbg !7521
  call void @mmc_power_cycle(%struct.mmc_host* %18, i32 %19) #10, !dbg !7522
  br label %if.end19, !dbg !7523

if.else:                                          ; preds = %if.end6
  %20 = load i32, i32* %ocr.addr, align 4, !dbg !7524
  store i32 %20, i32* %x.addr.i20, align 4
  %21 = load i32, i32* %x.addr.i20, align 4, !dbg !7525
  %22 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %21, i32 -1) #7, !dbg !7526, !srcloc !7527
  store i32 %22, i32* %r.i21, align 4, !dbg !7526
  %23 = load i32, i32* %r.i21, align 4, !dbg !7528
  %add.i22 = add i32 %23, 1, !dbg !7529
  %sub12 = sub i32 %add.i22, 1, !dbg !7530
  store i32 %sub12, i32* %bit, align 4, !dbg !7531
  %24 = load i32, i32* %bit, align 4, !dbg !7532
  %shl13 = shl i32 3, %24, !dbg !7533
  %25 = load i32, i32* %ocr.addr, align 4, !dbg !7534
  %and14 = and i32 %25, %shl13, !dbg !7534
  store i32 %and14, i32* %ocr.addr, align 4, !dbg !7534
  %26 = load i32, i32* %bit, align 4, !dbg !7535
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7537
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %27, i32 0, i32 29, !dbg !7538
  %vdd = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 1, !dbg !7539
  %28 = load i16, i16* %vdd, align 4, !dbg !7539
  %conv = zext i16 %28 to i32, !dbg !7537
  %cmp = icmp ne i32 %26, %conv, !dbg !7540
  br i1 %cmp, label %if.then16, label %if.end18, !dbg !7541

if.then16:                                        ; preds = %if.else
  %29 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7542
  %parent17 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %29, i32 0, i32 0, !dbg !7542
  %30 = load %struct.device*, %struct.device** %parent17, align 64, !dbg !7542
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !7542
  br label %if.end18, !dbg !7542

if.end18:                                         ; preds = %if.then16, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then9
  %31 = load i32, i32* %ocr.addr, align 4, !dbg !7543
  store i32 %31, i32* %retval, align 4, !dbg !7544
  br label %return, !dbg !7544

return:                                           ; preds = %if.end19, %if.then4
  %32 = load i32, i32* %retval, align 4, !dbg !7545
  ret i32 %32, !dbg !7545
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_power_cycle(%struct.mmc_host* %host, i32 %ocr) #0 !dbg !7546 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7549, metadata !DIExpression()), !dbg !7550
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !7551, metadata !DIExpression()), !dbg !7552
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7553
  call void @mmc_power_off(%struct.mmc_host* %0) #10, !dbg !7554
  call void @mmc_delay(i32 1) #10, !dbg !7555
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7556
  %2 = load i32, i32* %ocr.addr, align 4, !dbg !7557
  call void @mmc_power_up(%struct.mmc_host* %1, i32 %2) #10, !dbg !7558
  ret void, !dbg !7559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_set_signal_voltage(%struct.mmc_host* %host, i32 %signal_voltage) #0 !dbg !7560 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %signal_voltage.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %old_signal_voltage = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7563, metadata !DIExpression()), !dbg !7564
  store i32 %signal_voltage, i32* %signal_voltage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %signal_voltage.addr, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7567, metadata !DIExpression()), !dbg !7568
  store i32 0, i32* %err, align 4, !dbg !7568
  call void @llvm.dbg.declare(metadata i32* %old_signal_voltage, metadata !7569, metadata !DIExpression()), !dbg !7570
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7571
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 29, !dbg !7572
  %signal_voltage1 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 8, !dbg !7573
  %1 = load i8, i8* %signal_voltage1, align 1, !dbg !7573
  %conv = zext i8 %1 to i32, !dbg !7571
  store i32 %conv, i32* %old_signal_voltage, align 4, !dbg !7570
  %2 = load i32, i32* %signal_voltage.addr, align 4, !dbg !7574
  %conv2 = trunc i32 %2 to i8, !dbg !7574
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7575
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 29, !dbg !7576
  %signal_voltage4 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 8, !dbg !7577
  store i8 %conv2, i8* %signal_voltage4, align 1, !dbg !7578
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7579
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 3, !dbg !7581
  %5 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7581
  %start_signal_voltage_switch = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %5, i32 0, i32 10, !dbg !7582
  %6 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %start_signal_voltage_switch, align 8, !dbg !7582
  %tobool = icmp ne i32 (%struct.mmc_host*, %struct.mmc_ios*)* %6, null, !dbg !7579
  br i1 %tobool, label %if.then, label %if.end, !dbg !7583

if.then:                                          ; preds = %entry
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7584
  %ops5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 3, !dbg !7585
  %8 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops5, align 8, !dbg !7585
  %start_signal_voltage_switch6 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %8, i32 0, i32 10, !dbg !7586
  %9 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %start_signal_voltage_switch6, align 8, !dbg !7586
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7587
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7588
  %ios7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 29, !dbg !7589
  %call = call i32 %9(%struct.mmc_host* %10, %struct.mmc_ios* %ios7) #10, !dbg !7584
  store i32 %call, i32* %err, align 4, !dbg !7590
  br label %if.end, !dbg !7591

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32, i32* %err, align 4, !dbg !7592
  %tobool8 = icmp ne i32 %12, 0, !dbg !7592
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !7594

if.then9:                                         ; preds = %if.end
  %13 = load i32, i32* %old_signal_voltage, align 4, !dbg !7595
  %conv10 = trunc i32 %13 to i8, !dbg !7595
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7596
  %ios11 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 29, !dbg !7597
  %signal_voltage12 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios11, i32 0, i32 8, !dbg !7598
  store i8 %conv10, i8* %signal_voltage12, align 1, !dbg !7599
  br label %if.end13, !dbg !7596

if.end13:                                         ; preds = %if.then9, %if.end
  %15 = load i32, i32* %err, align 4, !dbg !7600
  ret i32 %15, !dbg !7601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_initial_signal_voltage(%struct.mmc_host* %host) #0 !dbg !7602 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7603, metadata !DIExpression()), !dbg !7604
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7605
  %call = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %0, i32 0) #10, !dbg !7607
  %tobool = icmp ne i32 %call, 0, !dbg !7607
  br i1 %tobool, label %if.else, label %if.then, !dbg !7608

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !7609

if.else:                                          ; preds = %entry
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7610
  %call1 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %1, i32 1) #10, !dbg !7612
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7612
  br i1 %tobool2, label %if.else4, label %if.then3, !dbg !7613

if.then3:                                         ; preds = %if.else
  br label %if.end8, !dbg !7614

if.else4:                                         ; preds = %if.else
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7615
  %call5 = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %2, i32 2) #10, !dbg !7617
  %tobool6 = icmp ne i32 %call5, 0, !dbg !7617
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !7618

if.then7:                                         ; preds = %if.else4
  br label %if.end, !dbg !7619

if.end:                                           ; preds = %if.then7, %if.else4
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then
  ret void, !dbg !7620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_host_set_uhs_voltage(%struct.mmc_host* %host) #0 !dbg !7621 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %clock = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !7624, metadata !DIExpression()), !dbg !7625
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7626
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 29, !dbg !7627
  %clock1 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 0, !dbg !7628
  %1 = load i32, i32* %clock1, align 4, !dbg !7628
  store i32 %1, i32* %clock, align 4, !dbg !7629
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7630
  %ios2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 29, !dbg !7631
  %clock3 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios2, i32 0, i32 0, !dbg !7632
  store i32 0, i32* %clock3, align 4, !dbg !7633
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7634
  call void @mmc_set_ios(%struct.mmc_host* %3) #10, !dbg !7635
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7636
  %call = call i32 @mmc_set_signal_voltage(%struct.mmc_host* %4, i32 1) #10, !dbg !7638
  %tobool = icmp ne i32 %call, 0, !dbg !7638
  br i1 %tobool, label %if.then, label %if.end, !dbg !7639

if.then:                                          ; preds = %entry
  store i32 -11, i32* %retval, align 4, !dbg !7640
  br label %return, !dbg !7640

if.end:                                           ; preds = %entry
  call void @mmc_delay(i32 10) #10, !dbg !7641
  %5 = load i32, i32* %clock, align 4, !dbg !7642
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7643
  %ios4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 29, !dbg !7644
  %clock5 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios4, i32 0, i32 0, !dbg !7645
  store i32 %5, i32* %clock5, align 4, !dbg !7646
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7647
  call void @mmc_set_ios(%struct.mmc_host* %7) #10, !dbg !7648
  store i32 0, i32* %retval, align 4, !dbg !7649
  br label %return, !dbg !7649

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7650
  ret i32 %8, !dbg !7650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_delay(i32 %ms) #0 !dbg !7651 {
entry:
  %ms.addr = alloca i32, align 4
  store i32 %ms, i32* %ms.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ms.addr, metadata !7654, metadata !DIExpression()), !dbg !7655
  %0 = load i32, i32* %ms.addr, align 4, !dbg !7656
  %cmp = icmp ule i32 %0, 20, !dbg !7658
  br i1 %cmp, label %if.then, label %if.else, !dbg !7659

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ms.addr, align 4, !dbg !7660
  %mul = mul i32 %1, 1000, !dbg !7661
  %conv = zext i32 %mul to i64, !dbg !7660
  %2 = load i32, i32* %ms.addr, align 4, !dbg !7662
  %mul1 = mul i32 %2, 1250, !dbg !7663
  %conv2 = zext i32 %mul1 to i64, !dbg !7662
  call void @usleep_range(i64 %conv, i64 %conv2) #10, !dbg !7664
  br label %if.end, !dbg !7664

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %ms.addr, align 4, !dbg !7665
  call void @msleep(i32 %3) #10, !dbg !7666
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_set_uhs_voltage(%struct.mmc_host* %host, i32 %ocr) #0 !dbg !7668 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  %cmd = alloca %struct.mmc_command, align 8
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !7673, metadata !DIExpression()), !dbg !7674
  %0 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !7674
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !7674
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7675, metadata !DIExpression()), !dbg !7676
  store i32 0, i32* %err, align 4, !dbg !7676
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7677
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 3, !dbg !7679
  %2 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7679
  %start_signal_voltage_switch = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %2, i32 0, i32 10, !dbg !7680
  %3 = load i32 (%struct.mmc_host*, %struct.mmc_ios*)*, i32 (%struct.mmc_host*, %struct.mmc_ios*)** %start_signal_voltage_switch, align 8, !dbg !7680
  %tobool = icmp ne i32 (%struct.mmc_host*, %struct.mmc_ios*)* %3, null, !dbg !7677
  br i1 %tobool, label %if.end, label %if.then, !dbg !7681

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7682
  br label %return, !dbg !7682

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7683
  %ops1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 3, !dbg !7685
  %5 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops1, align 8, !dbg !7685
  %card_busy = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %5, i32 0, i32 11, !dbg !7686
  %6 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy, align 8, !dbg !7686
  %tobool2 = icmp ne i32 (%struct.mmc_host*)* %6, null, !dbg !7683
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !7687

if.then3:                                         ; preds = %if.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7688
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 1, !dbg !7688
  %call = call i8* @dev_name(%struct.device* %class_dev) #10, !dbg !7688
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i8* %call) #11, !dbg !7688
  br label %if.end5, !dbg !7688

if.end5:                                          ; preds = %if.then3, %if.end
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !7689
  store i32 11, i32* %opcode, align 8, !dbg !7690
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !7691
  store i32 0, i32* %arg, align 4, !dbg !7692
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !7693
  store i32 21, i32* %flags, align 8, !dbg !7694
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7695
  %call6 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %8, %struct.mmc_command* %cmd, i32 0) #10, !dbg !7696
  store i32 %call6, i32* %err, align 4, !dbg !7697
  %9 = load i32, i32* %err, align 4, !dbg !7698
  %tobool7 = icmp ne i32 %9, 0, !dbg !7698
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !7700

if.then8:                                         ; preds = %if.end5
  %10 = load i32, i32* %err, align 4, !dbg !7701
  store i32 %10, i32* %retval, align 4, !dbg !7702
  br label %return, !dbg !7702

if.end9:                                          ; preds = %if.end5
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7703
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 17, !dbg !7703
  %12 = load i32, i32* %caps, align 4, !dbg !7703
  %and = and i32 %12, 16, !dbg !7703
  %tobool10 = icmp ne i32 %and, 0, !dbg !7703
  br i1 %tobool10, label %if.end14, label %land.lhs.true, !dbg !7705

land.lhs.true:                                    ; preds = %if.end9
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !7706
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !7707
  %13 = load i32, i32* %arrayidx, align 8, !dbg !7707
  %and11 = and i32 %13, 524288, !dbg !7708
  %tobool12 = icmp ne i32 %and11, 0, !dbg !7708
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !7709

if.then13:                                        ; preds = %land.lhs.true
  store i32 -5, i32* %retval, align 4, !dbg !7710
  br label %return, !dbg !7710

if.end14:                                         ; preds = %land.lhs.true, %if.end9
  call void @mmc_delay(i32 1) #10, !dbg !7711
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7712
  %ops15 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 3, !dbg !7714
  %15 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops15, align 8, !dbg !7714
  %card_busy16 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %15, i32 0, i32 11, !dbg !7715
  %16 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy16, align 8, !dbg !7715
  %tobool17 = icmp ne i32 (%struct.mmc_host*)* %16, null, !dbg !7712
  br i1 %tobool17, label %land.lhs.true18, label %if.end24, !dbg !7716

land.lhs.true18:                                  ; preds = %if.end14
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7717
  %ops19 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 3, !dbg !7718
  %18 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops19, align 8, !dbg !7718
  %card_busy20 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %18, i32 0, i32 11, !dbg !7719
  %19 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy20, align 8, !dbg !7719
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7720
  %call21 = call i32 %19(%struct.mmc_host* %20) #10, !dbg !7717
  %tobool22 = icmp ne i32 %call21, 0, !dbg !7717
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !7721

if.then23:                                        ; preds = %land.lhs.true18
  store i32 -11, i32* %err, align 4, !dbg !7722
  br label %power_cycle, !dbg !7724

if.end24:                                         ; preds = %land.lhs.true18, %if.end14
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7725
  %call25 = call i32 @mmc_host_set_uhs_voltage(%struct.mmc_host* %21) #10, !dbg !7727
  %tobool26 = icmp ne i32 %call25, 0, !dbg !7727
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7728

if.then27:                                        ; preds = %if.end24
  store i32 -11, i32* %err, align 4, !dbg !7729
  br label %power_cycle, !dbg !7731

if.end28:                                         ; preds = %if.end24
  call void @mmc_delay(i32 1) #10, !dbg !7732
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7733
  %ops29 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 3, !dbg !7735
  %23 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops29, align 8, !dbg !7735
  %card_busy30 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %23, i32 0, i32 11, !dbg !7736
  %24 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy30, align 8, !dbg !7736
  %tobool31 = icmp ne i32 (%struct.mmc_host*)* %24, null, !dbg !7733
  br i1 %tobool31, label %land.lhs.true32, label %if.end38, !dbg !7737

land.lhs.true32:                                  ; preds = %if.end28
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7738
  %ops33 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %25, i32 0, i32 3, !dbg !7739
  %26 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops33, align 8, !dbg !7739
  %card_busy34 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %26, i32 0, i32 11, !dbg !7740
  %27 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %card_busy34, align 8, !dbg !7740
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7741
  %call35 = call i32 %27(%struct.mmc_host* %28) #10, !dbg !7738
  %tobool36 = icmp ne i32 %call35, 0, !dbg !7738
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !7742

if.then37:                                        ; preds = %land.lhs.true32
  store i32 -11, i32* %err, align 4, !dbg !7743
  br label %if.end38, !dbg !7744

if.end38:                                         ; preds = %if.then37, %land.lhs.true32, %if.end28
  br label %power_cycle, !dbg !7745

power_cycle:                                      ; preds = %if.end38, %if.then27, %if.then23
  call void @llvm.dbg.label(metadata !7746), !dbg !7747
  %29 = load i32, i32* %err, align 4, !dbg !7748
  %tobool39 = icmp ne i32 %29, 0, !dbg !7748
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !7750

if.then40:                                        ; preds = %power_cycle
  store i32 0, i32* %tmp, align 4, !dbg !7751
  %30 = load i32, i32* %tmp, align 4, !dbg !7755
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7756
  %32 = load i32, i32* %ocr.addr, align 4, !dbg !7757
  call void @mmc_power_cycle(%struct.mmc_host* %31, i32 %32) #10, !dbg !7758
  br label %if.end41, !dbg !7759

if.end41:                                         ; preds = %if.then40, %power_cycle
  %33 = load i32, i32* %err, align 4, !dbg !7760
  store i32 %33, i32* %retval, align 4, !dbg !7761
  br label %return, !dbg !7761

return:                                           ; preds = %if.end41, %if.then13, %if.then8, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !7762
  ret i32 %34, !dbg !7762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_timing(%struct.mmc_host* %host, i32 %timing) #0 !dbg !7763 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %timing.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store i32 %timing, i32* %timing.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timing.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  %0 = load i32, i32* %timing.addr, align 4, !dbg !7768
  %conv = trunc i32 %0 to i8, !dbg !7768
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7769
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !7770
  %timing1 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !7771
  store i8 %conv, i8* %timing1, align 4, !dbg !7772
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7773
  call void @mmc_set_ios(%struct.mmc_host* %2) #10, !dbg !7774
  ret void, !dbg !7775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_set_driver_type(%struct.mmc_host* %host, i32 %drv_type) #0 !dbg !7776 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %drv_type.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  store i32 %drv_type, i32* %drv_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %drv_type.addr, metadata !7779, metadata !DIExpression()), !dbg !7780
  %0 = load i32, i32* %drv_type.addr, align 4, !dbg !7781
  %conv = trunc i32 %0 to i8, !dbg !7781
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7782
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !7783
  %drv_type1 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 9, !dbg !7784
  store i8 %conv, i8* %drv_type1, align 2, !dbg !7785
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7786
  call void @mmc_set_ios(%struct.mmc_host* %2) #10, !dbg !7787
  ret void, !dbg !7788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_select_drive_strength(%struct.mmc_card* %card, i32 %max_dtr, i32 %card_drv_type, i32* %drv_type) #0 !dbg !7789 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %max_dtr.addr = alloca i32, align 4
  %card_drv_type.addr = alloca i32, align 4
  %drv_type.addr = alloca i32*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %host_drv_type = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !7792, metadata !DIExpression()), !dbg !7793
  store i32 %max_dtr, i32* %max_dtr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_dtr.addr, metadata !7794, metadata !DIExpression()), !dbg !7795
  store i32 %card_drv_type, i32* %card_drv_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %card_drv_type.addr, metadata !7796, metadata !DIExpression()), !dbg !7797
  store i32* %drv_type, i32** %drv_type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %drv_type.addr, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !7800, metadata !DIExpression()), !dbg !7801
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7802
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !7803
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !7803
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !7801
  call void @llvm.dbg.declare(metadata i32* %host_drv_type, metadata !7804, metadata !DIExpression()), !dbg !7805
  store i32 1, i32* %host_drv_type, align 4, !dbg !7805
  %2 = load i32*, i32** %drv_type.addr, align 8, !dbg !7806
  store i32 0, i32* %2, align 4, !dbg !7807
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7808
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 3, !dbg !7810
  %4 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !7810
  %select_drive_strength = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %4, i32 0, i32 18, !dbg !7811
  %5 = load i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)** %select_drive_strength, align 8, !dbg !7811
  %tobool = icmp ne i32 (%struct.mmc_card*, i32, i32, i32, i32*)* %5, null, !dbg !7808
  br i1 %tobool, label %if.end, label %if.then, !dbg !7812

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7813
  br label %return, !dbg !7813

if.end:                                           ; preds = %entry
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7814
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 17, !dbg !7816
  %7 = load i32, i32* %caps, align 4, !dbg !7816
  %and = and i32 %7, 8388608, !dbg !7817
  %tobool2 = icmp ne i32 %and, 0, !dbg !7817
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7818

if.then3:                                         ; preds = %if.end
  %8 = load i32, i32* %host_drv_type, align 4, !dbg !7819
  %or = or i32 %8, 2, !dbg !7819
  store i32 %or, i32* %host_drv_type, align 4, !dbg !7819
  br label %if.end4, !dbg !7820

if.end4:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7821
  %caps5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 17, !dbg !7823
  %10 = load i32, i32* %caps5, align 4, !dbg !7823
  %and6 = and i32 %10, 16777216, !dbg !7824
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7824
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !7825

if.then8:                                         ; preds = %if.end4
  %11 = load i32, i32* %host_drv_type, align 4, !dbg !7826
  %or9 = or i32 %11, 4, !dbg !7826
  store i32 %or9, i32* %host_drv_type, align 4, !dbg !7826
  br label %if.end10, !dbg !7827

if.end10:                                         ; preds = %if.then8, %if.end4
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7828
  %caps11 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 17, !dbg !7830
  %13 = load i32, i32* %caps11, align 4, !dbg !7830
  %and12 = and i32 %13, 33554432, !dbg !7831
  %tobool13 = icmp ne i32 %and12, 0, !dbg !7831
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !7832

if.then14:                                        ; preds = %if.end10
  %14 = load i32, i32* %host_drv_type, align 4, !dbg !7833
  %or15 = or i32 %14, 8, !dbg !7833
  store i32 %or15, i32* %host_drv_type, align 4, !dbg !7833
  br label %if.end16, !dbg !7834

if.end16:                                         ; preds = %if.then14, %if.end10
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !7835
  %ops17 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %15, i32 0, i32 3, !dbg !7836
  %16 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops17, align 8, !dbg !7836
  %select_drive_strength18 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %16, i32 0, i32 18, !dbg !7837
  %17 = load i32 (%struct.mmc_card*, i32, i32, i32, i32*)*, i32 (%struct.mmc_card*, i32, i32, i32, i32*)** %select_drive_strength18, align 8, !dbg !7837
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !7838
  %19 = load i32, i32* %max_dtr.addr, align 4, !dbg !7839
  %20 = load i32, i32* %host_drv_type, align 4, !dbg !7840
  %21 = load i32, i32* %card_drv_type.addr, align 4, !dbg !7841
  %22 = load i32*, i32** %drv_type.addr, align 8, !dbg !7842
  %call = call i32 %17(%struct.mmc_card* %18, i32 %19, i32 %20, i32 %21, i32* %22) #10, !dbg !7835
  store i32 %call, i32* %retval, align 4, !dbg !7843
  br label %return, !dbg !7843

return:                                           ; preds = %if.end16, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !7844
  ret i32 %23, !dbg !7844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_power_up(%struct.mmc_host* %host, i32 %ocr) #0 !dbg !7845 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7464, metadata !DIExpression()), !dbg !7846
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7473, metadata !DIExpression()), !dbg !7848
  %host.addr = alloca %struct.mmc_host*, align 8
  %ocr.addr = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7849, metadata !DIExpression()), !dbg !7850
  store i32 %ocr, i32* %ocr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ocr.addr, metadata !7851, metadata !DIExpression()), !dbg !7852
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7853
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 29, !dbg !7855
  %power_mode = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 5, !dbg !7856
  %1 = load i8, i8* %power_mode, align 2, !dbg !7856
  %conv = zext i8 %1 to i32, !dbg !7853
  %cmp = icmp eq i32 %conv, 2, !dbg !7857
  br i1 %cmp, label %if.then, label %if.end, !dbg !7858

if.then:                                          ; preds = %entry
  br label %return, !dbg !7859

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7860
  call void @mmc_pwrseq_pre_power_on(%struct.mmc_host* %2) #10, !dbg !7861
  %3 = load i32, i32* %ocr.addr, align 4, !dbg !7862
  store i32 %3, i32* %x.addr.i, align 4
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !7863
  %5 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %4, i32 -1) #7, !dbg !7864, !srcloc !7527
  store i32 %5, i32* %r.i, align 4, !dbg !7864
  %6 = load i32, i32* %r.i, align 4, !dbg !7865
  %add.i = add i32 %6, 1, !dbg !7866
  %sub = sub i32 %add.i, 1, !dbg !7867
  %conv2 = trunc i32 %sub to i16, !dbg !7868
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7869
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 29, !dbg !7870
  %vdd = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 1, !dbg !7871
  store i16 %conv2, i16* %vdd, align 4, !dbg !7872
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7873
  %ios4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 29, !dbg !7874
  %power_mode5 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios4, i32 0, i32 5, !dbg !7875
  store i8 1, i8* %power_mode5, align 2, !dbg !7876
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7877
  call void @mmc_set_initial_state(%struct.mmc_host* %9) #10, !dbg !7878
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7879
  call void @mmc_set_initial_signal_voltage(%struct.mmc_host* %10) #10, !dbg !7880
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7881
  %ios6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 29, !dbg !7882
  %power_delay_ms = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios6, i32 0, i32 2, !dbg !7883
  %12 = load i32, i32* %power_delay_ms, align 4, !dbg !7883
  call void @mmc_delay(i32 %12) #10, !dbg !7884
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7885
  call void @mmc_pwrseq_post_power_on(%struct.mmc_host* %13) #10, !dbg !7886
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7887
  %f_init = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 7, !dbg !7888
  %15 = load i32, i32* %f_init, align 32, !dbg !7888
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7889
  %ios7 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 29, !dbg !7890
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios7, i32 0, i32 0, !dbg !7891
  store i32 %15, i32* %clock, align 4, !dbg !7892
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7893
  %ios8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 29, !dbg !7894
  %power_mode9 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios8, i32 0, i32 5, !dbg !7895
  store i8 2, i8* %power_mode9, align 2, !dbg !7896
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7897
  call void @mmc_set_ios(%struct.mmc_host* %18) #10, !dbg !7898
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7899
  %ios10 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 29, !dbg !7900
  %power_delay_ms11 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios10, i32 0, i32 2, !dbg !7901
  %20 = load i32, i32* %power_delay_ms11, align 4, !dbg !7901
  call void @mmc_delay(i32 %20) #10, !dbg !7902
  br label %return, !dbg !7903

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7903
}

; Function Attrs: noredzone
declare dso_local void @mmc_pwrseq_pre_power_on(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_pwrseq_post_power_on(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_power_off(%struct.mmc_host* %host) #0 !dbg !7904 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7907
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 29, !dbg !7909
  %power_mode = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 5, !dbg !7910
  %1 = load i8, i8* %power_mode, align 2, !dbg !7910
  %conv = zext i8 %1 to i32, !dbg !7907
  %cmp = icmp eq i32 %conv, 0, !dbg !7911
  br i1 %cmp, label %if.then, label %if.end, !dbg !7912

if.then:                                          ; preds = %entry
  br label %return, !dbg !7913

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7914
  call void @mmc_pwrseq_power_off(%struct.mmc_host* %2) #10, !dbg !7915
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7916
  %ios2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 29, !dbg !7917
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios2, i32 0, i32 0, !dbg !7918
  store i32 0, i32* %clock, align 4, !dbg !7919
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7920
  %ios3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 29, !dbg !7921
  %vdd = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios3, i32 0, i32 1, !dbg !7922
  store i16 0, i16* %vdd, align 4, !dbg !7923
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7924
  %ios4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 29, !dbg !7925
  %power_mode5 = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios4, i32 0, i32 5, !dbg !7926
  store i8 0, i8* %power_mode5, align 2, !dbg !7927
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7928
  call void @mmc_set_initial_state(%struct.mmc_host* %6) #10, !dbg !7929
  call void @mmc_delay(i32 1) #10, !dbg !7930
  br label %return, !dbg !7931

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7931
}

; Function Attrs: noredzone
declare dso_local void @mmc_pwrseq_power_off(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_attach_bus(%struct.mmc_host* %host, %struct.mmc_bus_ops* %ops) #0 !dbg !7932 {
entry:
  %lock.addr.i108 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i108, metadata !6591, metadata !DIExpression()), !dbg !7935
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !7937
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !7938
  %host.addr = alloca %struct.mmc_host*, align 8
  %ops.addr = alloca %struct.mmc_bus_ops*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__ret_warn_on43 = alloca i32, align 4
  %tmp66 = alloca i64, align 8
  %__ret_warn_on73 = alloca i32, align 4
  %tmp96 = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !7945, metadata !DIExpression()), !dbg !7946
  store %struct.mmc_bus_ops* %ops, %struct.mmc_bus_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_bus_ops** %ops.addr, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7949, metadata !DIExpression()), !dbg !7950
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7951, metadata !DIExpression()), !dbg !7953
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7953
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !7953
  %bf.load = load i16, i16* %claimed, align 32, !dbg !7953
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !7953
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7953
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7953
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7953
  %lnot = xor i1 %tobool, true, !dbg !7953
  %lnot1 = xor i1 %lnot, true, !dbg !7953
  %lnot2 = xor i1 %lnot1, true, !dbg !7953
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7953
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7953
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !7954
  %tobool3 = icmp ne i32 %1, 0, !dbg !7954
  %lnot4 = xor i1 %tobool3, true, !dbg !7954
  %lnot6 = xor i1 %lnot4, true, !dbg !7954
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !7954
  %conv = sext i32 %lnot.ext7 to i64, !dbg !7954
  %tobool8 = icmp ne i64 %conv, 0, !dbg !7954
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7953

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7954

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !7956

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !7958

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !7956

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 1422, i32 2305, i64 12) #8, !dbg !7960, !srcloc !7962
  br label %do.end11, !dbg !7960

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 302) #8, !dbg !7963, !srcloc !7965
  br label %do.body12, !dbg !7956

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7966

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7956

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7956

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !7953
  %tobool15 = icmp ne i32 %2, 0, !dbg !7953
  %lnot16 = xor i1 %tobool15, true, !dbg !7953
  %lnot18 = xor i1 %lnot16, true, !dbg !7953
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7953
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7953
  store i64 %conv20, i64* %tmp, align 8, !dbg !7954
  %3 = load i64, i64* %tmp, align 8, !dbg !7953
  br label %do.body21, !dbg !7968

do.body21:                                        ; preds = %if.end
  br label %do.body22, !dbg !7969

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7970, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7973, metadata !DIExpression()), !dbg !7972
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7972
  %conv23 = zext i1 %cmp to i32, !dbg !7972
  store i32 1, i32* %tmp24, align 4, !dbg !7972
  %4 = load i32, i32* %tmp24, align 4, !dbg !7972
  br label %do.body25, !dbg !7974

do.body25:                                        ; preds = %do.body22
  br label %do.body26, !dbg !7975

do.body26:                                        ; preds = %do.body25
  br label %do.body27, !dbg !7976

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !7978, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !7982, metadata !DIExpression()), !dbg !7981
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !7981
  %conv31 = zext i1 %cmp30 to i32, !dbg !7981
  store i32 1, i32* %tmp32, align 4, !dbg !7981
  %5 = load i32, i32* %tmp32, align 4, !dbg !7981
  %call = call i64 @arch_local_irq_save() #10, !dbg !7983
  store i64 %call, i64* %flags, align 8, !dbg !7983
  br label %do.end33, !dbg !7983

do.end33:                                         ; preds = %do.body27
  br label %do.end34, !dbg !7976

do.end34:                                         ; preds = %do.end33
  br label %do.body35, !dbg !7975

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7984, !srcloc !7985
  br label %do.body36, !dbg !7984

do.body36:                                        ; preds = %do.body35
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7986
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 28, !dbg !7986
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7987
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7988
  %rlock.i = bitcast %union.anon.2* %8 to %struct.raw_spinlock*, !dbg !7988
  br label %do.end38, !dbg !7986

do.end38:                                         ; preds = %do.body36
  br label %do.end39, !dbg !7984

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !7975

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !7974

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !7969

do.end42:                                         ; preds = %do.end41
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on43, metadata !7989, metadata !DIExpression()), !dbg !7991
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !7991
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 46, !dbg !7991
  %10 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !7991
  %tobool44 = icmp ne %struct.mmc_bus_ops* %10, null, !dbg !7991
  %lnot45 = xor i1 %tobool44, true, !dbg !7991
  %lnot47 = xor i1 %lnot45, true, !dbg !7991
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !7991
  store i32 %lnot.ext48, i32* %__ret_warn_on43, align 4, !dbg !7991
  %11 = load i32, i32* %__ret_warn_on43, align 4, !dbg !7992
  %tobool49 = icmp ne i32 %11, 0, !dbg !7992
  %lnot50 = xor i1 %tobool49, true, !dbg !7992
  %lnot52 = xor i1 %lnot50, true, !dbg !7992
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !7992
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !7992
  %tobool55 = icmp ne i64 %conv54, 0, !dbg !7992
  br i1 %tobool55, label %if.then56, label %if.end65, !dbg !7991

if.then56:                                        ; preds = %do.end42
  br label %do.body57, !dbg !7992

do.body57:                                        ; preds = %if.then56
  br label %do.body58, !dbg !7994

do.body58:                                        ; preds = %do.body57
  br label %do.end59, !dbg !7996

do.end59:                                         ; preds = %do.body58
  br label %do.body60, !dbg !7994

do.body60:                                        ; preds = %do.end59
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 1426, i32 2305, i64 12) #8, !dbg !7998, !srcloc !8000
  br label %do.end61, !dbg !7998

do.end61:                                         ; preds = %do.body60
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 303) #8, !dbg !8001, !srcloc !8003
  br label %do.body62, !dbg !7994

do.body62:                                        ; preds = %do.end61
  br label %do.end63, !dbg !8004

do.end63:                                         ; preds = %do.body62
  br label %do.end64, !dbg !7994

do.end64:                                         ; preds = %do.end63
  br label %if.end65, !dbg !7994

if.end65:                                         ; preds = %do.end64, %do.end42
  %12 = load i32, i32* %__ret_warn_on43, align 4, !dbg !7991
  %tobool67 = icmp ne i32 %12, 0, !dbg !7991
  %lnot68 = xor i1 %tobool67, true, !dbg !7991
  %lnot70 = xor i1 %lnot68, true, !dbg !7991
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !7991
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !7991
  store i64 %conv72, i64* %tmp66, align 8, !dbg !7992
  %13 = load i64, i64* %tmp66, align 8, !dbg !7991
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on73, metadata !8006, metadata !DIExpression()), !dbg !8008
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8008
  %bus_refs = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 47, !dbg !8008
  %15 = load i32, i32* %bus_refs, align 16, !dbg !8008
  %tobool74 = icmp ne i32 %15, 0, !dbg !8008
  %lnot75 = xor i1 %tobool74, true, !dbg !8008
  %lnot77 = xor i1 %lnot75, true, !dbg !8008
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !8008
  store i32 %lnot.ext78, i32* %__ret_warn_on73, align 4, !dbg !8008
  %16 = load i32, i32* %__ret_warn_on73, align 4, !dbg !8009
  %tobool79 = icmp ne i32 %16, 0, !dbg !8009
  %lnot80 = xor i1 %tobool79, true, !dbg !8009
  %lnot82 = xor i1 %lnot80, true, !dbg !8009
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !8009
  %conv84 = sext i32 %lnot.ext83 to i64, !dbg !8009
  %tobool85 = icmp ne i64 %conv84, 0, !dbg !8009
  br i1 %tobool85, label %if.then86, label %if.end95, !dbg !8008

if.then86:                                        ; preds = %if.end65
  br label %do.body87, !dbg !8009

do.body87:                                        ; preds = %if.then86
  br label %do.body88, !dbg !8011

do.body88:                                        ; preds = %do.body87
  br label %do.end89, !dbg !8013

do.end89:                                         ; preds = %do.body88
  br label %do.body90, !dbg !8011

do.body90:                                        ; preds = %do.end89
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 1427, i32 2305, i64 12) #8, !dbg !8015, !srcloc !8017
  br label %do.end91, !dbg !8015

do.end91:                                         ; preds = %do.body90
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #8, !dbg !8018, !srcloc !8020
  br label %do.body92, !dbg !8011

do.body92:                                        ; preds = %do.end91
  br label %do.end93, !dbg !8021

do.end93:                                         ; preds = %do.body92
  br label %do.end94, !dbg !8011

do.end94:                                         ; preds = %do.end93
  br label %if.end95, !dbg !8011

if.end95:                                         ; preds = %do.end94, %if.end65
  %17 = load i32, i32* %__ret_warn_on73, align 4, !dbg !8008
  %tobool97 = icmp ne i32 %17, 0, !dbg !8008
  %lnot98 = xor i1 %tobool97, true, !dbg !8008
  %lnot100 = xor i1 %lnot98, true, !dbg !8008
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !8008
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !8008
  store i64 %conv102, i64* %tmp96, align 8, !dbg !8009
  %18 = load i64, i64* %tmp96, align 8, !dbg !8008
  %19 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %ops.addr, align 8, !dbg !8023
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8024
  %bus_ops103 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %20, i32 0, i32 46, !dbg !8025
  store %struct.mmc_bus_ops* %19, %struct.mmc_bus_ops** %bus_ops103, align 8, !dbg !8026
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8027
  %bus_refs104 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %21, i32 0, i32 47, !dbg !8028
  store i32 1, i32* %bus_refs104, align 16, !dbg !8029
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8030
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 30, !dbg !8031
  %bf.load105 = load i16, i16* %bus_dead, align 32, !dbg !8032
  %bf.clear106 = and i16 %bf.load105, -5, !dbg !8032
  store i16 %bf.clear106, i16* %bus_dead, align 32, !dbg !8032
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8033
  %lock107 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 28, !dbg !8034
  %24 = load i64, i64* %flags, align 8, !dbg !8035
  store %struct.spinlock* %lock107, %struct.spinlock** %lock.addr.i108, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !8036
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !8036
  store i32 1, i32* %tmp.i, align 4, !dbg !8036
  %25 = load i32, i32* %tmp.i, align 4, !dbg !8036
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !8037
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !8037
  store i32 1, i32* %tmp8.i, align 4, !dbg !8037
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !8037
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !8038
  call void @arch_local_irq_restore(i64 %27) #13, !dbg !8038
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8039, !srcloc !6776
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i108, align 8, !dbg !8040
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !8040
  %rlock.i109 = bitcast %union.anon.2* %29 to %struct.raw_spinlock*, !dbg !8040
  ret void, !dbg !8041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_detach_bus(%struct.mmc_host* %host) #0 !dbg !8042 {
entry:
  %lock.addr.i78 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i78, metadata !6591, metadata !DIExpression()), !dbg !8043
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !8045
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !8046
  %host.addr = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on21 = alloca i32, align 4
  %tmp46 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp56 = alloca i32, align 4
  %__dummy60 = alloca i64, align 8
  %__dummy261 = alloca i64, align 8
  %tmp64 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8057, metadata !DIExpression()), !dbg !8059
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8059
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !8059
  %bf.load = load i16, i16* %claimed, align 32, !dbg !8059
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !8059
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8059
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8059
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8059
  %lnot = xor i1 %tobool, true, !dbg !8059
  %lnot1 = xor i1 %lnot, true, !dbg !8059
  %lnot2 = xor i1 %lnot1, true, !dbg !8059
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8059
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8059
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8060
  %tobool3 = icmp ne i32 %1, 0, !dbg !8060
  %lnot4 = xor i1 %tobool3, true, !dbg !8060
  %lnot6 = xor i1 %lnot4, true, !dbg !8060
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8060
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8060
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8060
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8059

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8060

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8062

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8064

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8062

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 1443, i32 2305, i64 12) #8, !dbg !8066, !srcloc !8068
  br label %do.end11, !dbg !8066

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 305) #8, !dbg !8069, !srcloc !8071
  br label %do.body12, !dbg !8062

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8072

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8062

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8062

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8059
  %tobool15 = icmp ne i32 %2, 0, !dbg !8059
  %lnot16 = xor i1 %tobool15, true, !dbg !8059
  %lnot18 = xor i1 %lnot16, true, !dbg !8059
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8059
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8059
  store i64 %conv20, i64* %tmp, align 8, !dbg !8060
  %3 = load i64, i64* %tmp, align 8, !dbg !8059
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on21, metadata !8074, metadata !DIExpression()), !dbg !8076
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8076
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 46, !dbg !8076
  %5 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !8076
  %tobool22 = icmp ne %struct.mmc_bus_ops* %5, null, !dbg !8076
  %lnot23 = xor i1 %tobool22, true, !dbg !8076
  %lnot25 = xor i1 %lnot23, true, !dbg !8076
  %lnot27 = xor i1 %lnot25, true, !dbg !8076
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !8076
  store i32 %lnot.ext28, i32* %__ret_warn_on21, align 4, !dbg !8076
  %6 = load i32, i32* %__ret_warn_on21, align 4, !dbg !8077
  %tobool29 = icmp ne i32 %6, 0, !dbg !8077
  %lnot30 = xor i1 %tobool29, true, !dbg !8077
  %lnot32 = xor i1 %lnot30, true, !dbg !8077
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !8077
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !8077
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !8077
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !8076

if.then36:                                        ; preds = %if.end
  br label %do.body37, !dbg !8077

do.body37:                                        ; preds = %if.then36
  br label %do.body38, !dbg !8079

do.body38:                                        ; preds = %do.body37
  br label %do.end39, !dbg !8081

do.end39:                                         ; preds = %do.body38
  br label %do.body40, !dbg !8079

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 1444, i32 2305, i64 12) #8, !dbg !8083, !srcloc !8085
  br label %do.end41, !dbg !8083

do.end41:                                         ; preds = %do.body40
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 306) #8, !dbg !8086, !srcloc !8088
  br label %do.body42, !dbg !8079

do.body42:                                        ; preds = %do.end41
  br label %do.end43, !dbg !8089

do.end43:                                         ; preds = %do.body42
  br label %do.end44, !dbg !8079

do.end44:                                         ; preds = %do.end43
  br label %if.end45, !dbg !8079

if.end45:                                         ; preds = %do.end44, %if.end
  %7 = load i32, i32* %__ret_warn_on21, align 4, !dbg !8076
  %tobool47 = icmp ne i32 %7, 0, !dbg !8076
  %lnot48 = xor i1 %tobool47, true, !dbg !8076
  %lnot50 = xor i1 %lnot48, true, !dbg !8076
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !8076
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !8076
  store i64 %conv52, i64* %tmp46, align 8, !dbg !8077
  %8 = load i64, i64* %tmp46, align 8, !dbg !8076
  br label %do.body53, !dbg !8091

do.body53:                                        ; preds = %if.end45
  br label %do.body54, !dbg !8092

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8093, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8096, metadata !DIExpression()), !dbg !8095
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8095
  %conv55 = zext i1 %cmp to i32, !dbg !8095
  store i32 1, i32* %tmp56, align 4, !dbg !8095
  %9 = load i32, i32* %tmp56, align 4, !dbg !8095
  br label %do.body57, !dbg !8097

do.body57:                                        ; preds = %do.body54
  br label %do.body58, !dbg !8098

do.body58:                                        ; preds = %do.body57
  br label %do.body59, !dbg !8099

do.body59:                                        ; preds = %do.body58
  call void @llvm.dbg.declare(metadata i64* %__dummy60, metadata !8101, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.declare(metadata i64* %__dummy261, metadata !8105, metadata !DIExpression()), !dbg !8104
  %cmp62 = icmp eq i64* %__dummy60, %__dummy261, !dbg !8104
  %conv63 = zext i1 %cmp62 to i32, !dbg !8104
  store i32 1, i32* %tmp64, align 4, !dbg !8104
  %10 = load i32, i32* %tmp64, align 4, !dbg !8104
  %call = call i64 @arch_local_irq_save() #10, !dbg !8106
  store i64 %call, i64* %flags, align 8, !dbg !8106
  br label %do.end65, !dbg !8106

do.end65:                                         ; preds = %do.body59
  br label %do.end66, !dbg !8099

do.end66:                                         ; preds = %do.end65
  br label %do.body67, !dbg !8098

do.body67:                                        ; preds = %do.end66
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8107, !srcloc !8108
  br label %do.body68, !dbg !8107

do.body68:                                        ; preds = %do.body67
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8109
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 28, !dbg !8109
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8110
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8111
  %rlock.i = bitcast %union.anon.2* %13 to %struct.raw_spinlock*, !dbg !8111
  br label %do.end70, !dbg !8109

do.end70:                                         ; preds = %do.body68
  br label %do.end71, !dbg !8107

do.end71:                                         ; preds = %do.end70
  br label %do.end72, !dbg !8098

do.end72:                                         ; preds = %do.end71
  br label %do.end73, !dbg !8097

do.end73:                                         ; preds = %do.end72
  br label %do.end74, !dbg !8092

do.end74:                                         ; preds = %do.end73
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8112
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 30, !dbg !8113
  %bf.load75 = load i16, i16* %bus_dead, align 32, !dbg !8114
  %bf.clear76 = and i16 %bf.load75, -5, !dbg !8114
  %bf.set = or i16 %bf.clear76, 4, !dbg !8114
  store i16 %bf.set, i16* %bus_dead, align 32, !dbg !8114
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8115
  %lock77 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %15, i32 0, i32 28, !dbg !8116
  %16 = load i64, i64* %flags, align 8, !dbg !8117
  store %struct.spinlock* %lock77, %struct.spinlock** %lock.addr.i78, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !8118
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !8118
  store i32 1, i32* %tmp.i, align 4, !dbg !8118
  %17 = load i32, i32* %tmp.i, align 4, !dbg !8118
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !8119
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !8119
  store i32 1, i32* %tmp8.i, align 4, !dbg !8119
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !8119
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !8120
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !8120
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8121, !srcloc !6776
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i78, align 8, !dbg !8122
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !8122
  %rlock.i79 = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !8122
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8123
  call void @mmc_bus_put(%struct.mmc_host* %22) #10, !dbg !8124
  ret void, !dbg !8125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_bus_put(%struct.mmc_host* %host) #0 !dbg !8126 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !6591, metadata !DIExpression()), !dbg !8127
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !8129
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !8130
  %host.addr = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8137, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8139, metadata !DIExpression()), !dbg !8140
  br label %do.body, !dbg !8141

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8142

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8143, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8146, metadata !DIExpression()), !dbg !8145
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8145
  %conv = zext i1 %cmp to i32, !dbg !8145
  store i32 1, i32* %tmp, align 4, !dbg !8145
  %0 = load i32, i32* %tmp, align 4, !dbg !8145
  br label %do.body2, !dbg !8147

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8148

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8149

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8155, metadata !DIExpression()), !dbg !8154
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8154
  %conv8 = zext i1 %cmp7 to i32, !dbg !8154
  store i32 1, i32* %tmp9, align 4, !dbg !8154
  %1 = load i32, i32* %tmp9, align 4, !dbg !8154
  %call = call i64 @arch_local_irq_save() #10, !dbg !8156
  store i64 %call, i64* %flags, align 8, !dbg !8156
  br label %do.end, !dbg !8156

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8149

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8148

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8157, !srcloc !8158
  br label %do.body12, !dbg !8157

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8159
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 28, !dbg !8159
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8160
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8161
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !8161
  br label %do.end14, !dbg !8159

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8157

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8148

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8147

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8142

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8162
  %bus_refs = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 47, !dbg !8163
  %6 = load i32, i32* %bus_refs, align 16, !dbg !8164
  %dec = add i32 %6, -1, !dbg !8164
  store i32 %dec, i32* %bus_refs, align 16, !dbg !8164
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8165
  %bus_refs19 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 47, !dbg !8167
  %8 = load i32, i32* %bus_refs19, align 16, !dbg !8167
  %cmp20 = icmp eq i32 %8, 0, !dbg !8168
  br i1 %cmp20, label %land.lhs.true, label %if.end, !dbg !8169

land.lhs.true:                                    ; preds = %do.end18
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8170
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 46, !dbg !8171
  %10 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !8171
  %tobool = icmp ne %struct.mmc_bus_ops* %10, null, !dbg !8170
  br i1 %tobool, label %if.then, label %if.end, !dbg !8172

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8173
  call void @__mmc_release_bus(%struct.mmc_host* %11) #10, !dbg !8174
  br label %if.end, !dbg !8174

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end18
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8175
  %lock22 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 28, !dbg !8176
  %13 = load i64, i64* %flags, align 8, !dbg !8177
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !8178
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !8178
  store i32 1, i32* %tmp.i, align 4, !dbg !8178
  %14 = load i32, i32* %tmp.i, align 4, !dbg !8178
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !8179
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !8179
  store i32 1, i32* %tmp8.i, align 4, !dbg !8179
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !8179
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !8180
  call void @arch_local_irq_restore(i64 %16) #13, !dbg !8180
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8181, !srcloc !6776
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !8182
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !8182
  %rlock.i24 = bitcast %union.anon.2* %18 to %struct.raw_spinlock*, !dbg !8182
  ret void, !dbg !8183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @_mmc_detect_change(%struct.mmc_host* %host, i64 %delay, i1 zeroext %cd_irq) #0 !dbg !8184 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %delay.addr = alloca i64, align 8
  %cd_irq.addr = alloca i8, align 1
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8187, metadata !DIExpression()), !dbg !8188
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8189, metadata !DIExpression()), !dbg !8190
  %frombool = zext i1 %cd_irq to i8
  store i8 %frombool, i8* %cd_irq.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cd_irq.addr, metadata !8191, metadata !DIExpression()), !dbg !8192
  %0 = load i8, i8* %cd_irq.addr, align 1, !dbg !8193
  %tobool = trunc i8 %0 to i1, !dbg !8193
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8195

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8196
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 17, !dbg !8197
  %2 = load i32, i32* %caps, align 4, !dbg !8197
  %and = and i32 %2, 32, !dbg !8198
  %tobool1 = icmp ne i32 %and, 0, !dbg !8198
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8199

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8200
  %ws = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 13, !dbg !8201
  %4 = load %struct.wakeup_source*, %struct.wakeup_source** %ws, align 16, !dbg !8201
  call void @__pm_wakeup_event(%struct.wakeup_source* %4, i32 5000) #10, !dbg !8202
  br label %if.end, !dbg !8202

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8203
  %detect_change = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 44, !dbg !8204
  store i32 1, i32* %detect_change, align 16, !dbg !8205
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8206
  %detect = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 43, !dbg !8207
  %7 = load i64, i64* %delay.addr, align 8, !dbg !8208
  %call = call i32 @mmc_schedule_delayed_work(%struct.delayed_work* %detect, i64 %7) #10, !dbg !8209
  ret void, !dbg !8210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__pm_wakeup_event(%struct.wakeup_source* %ws, i32 %msec) #0 !dbg !8211 {
entry:
  %ws.addr = alloca %struct.wakeup_source*, align 8
  %msec.addr = alloca i32, align 4
  store %struct.wakeup_source* %ws, %struct.wakeup_source** %ws.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wakeup_source** %ws.addr, metadata !8214, metadata !DIExpression()), !dbg !8215
  store i32 %msec, i32* %msec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %msec.addr, metadata !8216, metadata !DIExpression()), !dbg !8217
  %0 = load %struct.wakeup_source*, %struct.wakeup_source** %ws.addr, align 8, !dbg !8218
  %1 = load i32, i32* %msec.addr, align 4, !dbg !8219
  call void @pm_wakeup_ws_event(%struct.wakeup_source* %0, i32 %1, i1 zeroext false) #10, !dbg !8220
  ret void, !dbg !8221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_schedule_delayed_work(%struct.delayed_work* %work, i64 %delay) #0 !dbg !8222 {
entry:
  %work.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.delayed_work* %work, %struct.delayed_work** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %work.addr, metadata !8226, metadata !DIExpression()), !dbg !8227
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8228, metadata !DIExpression()), !dbg !8229
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_freezable_wq, align 8, !dbg !8230
  %1 = load %struct.delayed_work*, %struct.delayed_work** %work.addr, align 8, !dbg !8231
  %2 = load i64, i64* %delay.addr, align 8, !dbg !8232
  %call = call zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #10, !dbg !8233
  %conv = zext i1 %call to i32, !dbg !8233
  ret i32 %conv, !dbg !8234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_detect_change(%struct.mmc_host* %host, i64 %delay) #0 !dbg !8235 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !8242
  %1 = load i64, i64* %delay.addr, align 8, !dbg !8243
  call void @_mmc_detect_change(%struct.mmc_host* %0, i64 %1, i1 zeroext true) #10, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_init_erase(%struct.mmc_card* %card) #0 !dbg !8246 {
entry:
  %x.addr.i59 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i59, metadata !7475, metadata !DIExpression()), !dbg !8249
  %r.i60 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i60, metadata !7480, metadata !DIExpression()), !dbg !8253
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7475, metadata !DIExpression()), !dbg !8254
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7480, metadata !DIExpression()), !dbg !8257
  %card.addr = alloca %struct.mmc_card*, align 8
  %sz = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8258, metadata !DIExpression()), !dbg !8259
  call void @llvm.dbg.declare(metadata i32* %sz, metadata !8260, metadata !DIExpression()), !dbg !8261
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8262
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 9, !dbg !8263
  %1 = load i32, i32* %erase_size, align 4, !dbg !8263
  %conv = zext i32 %1 to i64, !dbg !8262
  %call = call zeroext i1 @is_power_of_2(i64 %conv) #14, !dbg !8264
  br i1 %call, label %if.then, label %if.else, !dbg !8265

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8266
  %erase_size1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 9, !dbg !8267
  %3 = load i32, i32* %erase_size1, align 4, !dbg !8267
  store i32 %3, i32* %x.addr.i, align 4
  %4 = load i32, i32* %x.addr.i, align 4, !dbg !8268
  %5 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %4, i32 -1) #7, !dbg !8269, !srcloc !7512
  store i32 %5, i32* %r.i, align 4, !dbg !8269
  %6 = load i32, i32* %r.i, align 4, !dbg !8270
  %add.i = add i32 %6, 1, !dbg !8271
  %sub = sub i32 %add.i, 1, !dbg !8272
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8273
  %erase_shift = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 10, !dbg !8274
  store i32 %sub, i32* %erase_shift, align 8, !dbg !8275
  br label %if.end, !dbg !8273

if.else:                                          ; preds = %entry
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8276
  %erase_shift3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 10, !dbg !8277
  store i32 0, i32* %erase_shift3, align 8, !dbg !8278
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8279
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 4, !dbg !8279
  %10 = load i32, i32* %type, align 8, !dbg !8279
  %cmp = icmp eq i32 %10, 1, !dbg !8279
  br i1 %cmp, label %land.lhs.true, label %if.else13, !dbg !8280

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8281
  %ssr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 23, !dbg !8282
  %au = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr, i32 0, i32 0, !dbg !8283
  %12 = load i32, i32* %au, align 8, !dbg !8283
  %tobool = icmp ne i32 %12, 0, !dbg !8281
  br i1 %tobool, label %if.then5, label %if.else13, !dbg !8284

if.then5:                                         ; preds = %land.lhs.true
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8285
  %ssr6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 23, !dbg !8286
  %au7 = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr6, i32 0, i32 0, !dbg !8287
  %14 = load i32, i32* %au7, align 8, !dbg !8287
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8288
  %pref_erase = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 11, !dbg !8289
  store i32 %14, i32* %pref_erase, align 4, !dbg !8290
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8291
  %ssr8 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 23, !dbg !8292
  %au9 = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr8, i32 0, i32 0, !dbg !8293
  %17 = load i32, i32* %au9, align 8, !dbg !8293
  store i32 %17, i32* %x.addr.i59, align 4
  %18 = load i32, i32* %x.addr.i59, align 4, !dbg !8294
  %19 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %18, i32 -1) #7, !dbg !8295, !srcloc !7512
  store i32 %19, i32* %r.i60, align 4, !dbg !8295
  %20 = load i32, i32* %r.i60, align 4, !dbg !8296
  %add.i61 = add i32 %20, 1, !dbg !8297
  %sub11 = sub i32 %add.i61, 1, !dbg !8298
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8299
  %erase_shift12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 10, !dbg !8300
  store i32 %sub11, i32* %erase_shift12, align 8, !dbg !8301
  br label %if.end58, !dbg !8302

if.else13:                                        ; preds = %land.lhs.true, %if.end
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8303
  %erase_size14 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 9, !dbg !8305
  %23 = load i32, i32* %erase_size14, align 4, !dbg !8305
  %tobool15 = icmp ne i32 %23, 0, !dbg !8303
  br i1 %tobool15, label %if.then16, label %if.else55, !dbg !8306

if.then16:                                        ; preds = %if.else13
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8307
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 20, !dbg !8309
  %capacity = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 11, !dbg !8310
  %25 = load i32, i32* %capacity, align 4, !dbg !8310
  %26 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8311
  %csd17 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %26, i32 0, i32 20, !dbg !8312
  %read_blkbits = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd17, i32 0, i32 9, !dbg !8313
  %27 = load i32, i32* %read_blkbits, align 4, !dbg !8313
  %sub18 = sub i32 %27, 9, !dbg !8314
  %shl = shl i32 %25, %sub18, !dbg !8315
  %shr = lshr i32 %shl, 11, !dbg !8316
  store i32 %shr, i32* %sz, align 4, !dbg !8317
  %28 = load i32, i32* %sz, align 4, !dbg !8318
  %cmp19 = icmp ult i32 %28, 128, !dbg !8320
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !8321

if.then21:                                        ; preds = %if.then16
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8322
  %pref_erase22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %29, i32 0, i32 11, !dbg !8323
  store i32 1024, i32* %pref_erase22, align 4, !dbg !8324
  br label %if.end37, !dbg !8322

if.else23:                                        ; preds = %if.then16
  %30 = load i32, i32* %sz, align 4, !dbg !8325
  %cmp24 = icmp ult i32 %30, 512, !dbg !8327
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !8328

if.then26:                                        ; preds = %if.else23
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8329
  %pref_erase27 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %31, i32 0, i32 11, !dbg !8330
  store i32 2048, i32* %pref_erase27, align 4, !dbg !8331
  br label %if.end36, !dbg !8329

if.else28:                                        ; preds = %if.else23
  %32 = load i32, i32* %sz, align 4, !dbg !8332
  %cmp29 = icmp ult i32 %32, 1024, !dbg !8334
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !8335

if.then31:                                        ; preds = %if.else28
  %33 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8336
  %pref_erase32 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %33, i32 0, i32 11, !dbg !8337
  store i32 4096, i32* %pref_erase32, align 4, !dbg !8338
  br label %if.end35, !dbg !8336

if.else33:                                        ; preds = %if.else28
  %34 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8339
  %pref_erase34 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %34, i32 0, i32 11, !dbg !8340
  store i32 8192, i32* %pref_erase34, align 4, !dbg !8341
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then31
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then26
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then21
  %35 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8342
  %pref_erase38 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %35, i32 0, i32 11, !dbg !8344
  %36 = load i32, i32* %pref_erase38, align 4, !dbg !8344
  %37 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8345
  %erase_size39 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %37, i32 0, i32 9, !dbg !8346
  %38 = load i32, i32* %erase_size39, align 4, !dbg !8346
  %cmp40 = icmp ult i32 %36, %38, !dbg !8347
  br i1 %cmp40, label %if.then42, label %if.else45, !dbg !8348

if.then42:                                        ; preds = %if.end37
  %39 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8349
  %erase_size43 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %39, i32 0, i32 9, !dbg !8350
  %40 = load i32, i32* %erase_size43, align 4, !dbg !8350
  %41 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8351
  %pref_erase44 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %41, i32 0, i32 11, !dbg !8352
  store i32 %40, i32* %pref_erase44, align 4, !dbg !8353
  br label %if.end54, !dbg !8351

if.else45:                                        ; preds = %if.end37
  %42 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8354
  %pref_erase46 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %42, i32 0, i32 11, !dbg !8356
  %43 = load i32, i32* %pref_erase46, align 4, !dbg !8356
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8357
  %erase_size47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 9, !dbg !8358
  %45 = load i32, i32* %erase_size47, align 4, !dbg !8358
  %rem = urem i32 %43, %45, !dbg !8359
  store i32 %rem, i32* %sz, align 4, !dbg !8360
  %46 = load i32, i32* %sz, align 4, !dbg !8361
  %tobool48 = icmp ne i32 %46, 0, !dbg !8361
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !8363

if.then49:                                        ; preds = %if.else45
  %47 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8364
  %erase_size50 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %47, i32 0, i32 9, !dbg !8365
  %48 = load i32, i32* %erase_size50, align 4, !dbg !8365
  %49 = load i32, i32* %sz, align 4, !dbg !8366
  %sub51 = sub i32 %48, %49, !dbg !8367
  %50 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8368
  %pref_erase52 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %50, i32 0, i32 11, !dbg !8369
  %51 = load i32, i32* %pref_erase52, align 4, !dbg !8370
  %add = add i32 %51, %sub51, !dbg !8370
  store i32 %add, i32* %pref_erase52, align 4, !dbg !8370
  br label %if.end53, !dbg !8368

if.end53:                                         ; preds = %if.then49, %if.else45
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then42
  br label %if.end57, !dbg !8371

if.else55:                                        ; preds = %if.else13
  %52 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8372
  %pref_erase56 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %52, i32 0, i32 11, !dbg !8373
  store i32 0, i32* %pref_erase56, align 4, !dbg !8374
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.end54
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then5
  ret void, !dbg !8375
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i1 @is_power_of_2(i64 %n) #5 !dbg !8376 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8380, metadata !DIExpression()), !dbg !8381
  %0 = load i64, i64* %n.addr, align 8, !dbg !8382
  %cmp = icmp ne i64 %0, 0, !dbg !8383
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8384

land.rhs:                                         ; preds = %entry
  %1 = load i64, i64* %n.addr, align 8, !dbg !8385
  %2 = load i64, i64* %n.addr, align 8, !dbg !8386
  %sub = sub i64 %2, 1, !dbg !8387
  %and = and i64 %1, %sub, !dbg !8388
  %cmp1 = icmp eq i64 %and, 0, !dbg !8389
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !8390
  ret i1 %3, !dbg !8391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_erase(%struct.mmc_card* %card, i32 %from, i32 %nr, i32 %arg) #0 !dbg !8392 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %from.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %arg.addr = alloca i32, align 4
  %rem = alloca i32, align 4
  %to = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8395, metadata !DIExpression()), !dbg !8396
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !8403, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata i32* %to, metadata !8405, metadata !DIExpression()), !dbg !8406
  %0 = load i32, i32* %from.addr, align 4, !dbg !8407
  %1 = load i32, i32* %nr.addr, align 4, !dbg !8408
  %add = add i32 %0, %1, !dbg !8409
  store i32 %add, i32* %to, align 4, !dbg !8406
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8410, metadata !DIExpression()), !dbg !8411
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8412
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 20, !dbg !8414
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !8415
  %3 = load i16, i16* %cmdclass, align 2, !dbg !8415
  %conv = zext i16 %3 to i32, !dbg !8412
  %and = and i32 %conv, 32, !dbg !8416
  %tobool = icmp ne i32 %and, 0, !dbg !8416
  br i1 %tobool, label %if.end, label %if.then, !dbg !8417

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !8418
  br label %return, !dbg !8418

if.end:                                           ; preds = %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8419
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 9, !dbg !8421
  %5 = load i32, i32* %erase_size, align 4, !dbg !8421
  %tobool1 = icmp ne i32 %5, 0, !dbg !8419
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8422

if.then2:                                         ; preds = %if.end
  store i32 -95, i32* %retval, align 4, !dbg !8423
  br label %return, !dbg !8423

if.end3:                                          ; preds = %if.end
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8424
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 4, !dbg !8424
  %7 = load i32, i32* %type, align 8, !dbg !8424
  %cmp = icmp eq i32 %7, 1, !dbg !8424
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !8426

land.lhs.true:                                    ; preds = %if.end3
  %8 = load i32, i32* %arg.addr, align 4, !dbg !8427
  %cmp5 = icmp ne i32 %8, 0, !dbg !8428
  br i1 %cmp5, label %land.lhs.true7, label %if.end11, !dbg !8429

land.lhs.true7:                                   ; preds = %land.lhs.true
  %9 = load i32, i32* %arg.addr, align 4, !dbg !8430
  %cmp8 = icmp ne i32 %9, 1, !dbg !8431
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8432

if.then10:                                        ; preds = %land.lhs.true7
  store i32 -95, i32* %retval, align 4, !dbg !8433
  br label %return, !dbg !8433

if.end11:                                         ; preds = %land.lhs.true7, %land.lhs.true, %if.end3
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8434
  %type12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 4, !dbg !8434
  %11 = load i32, i32* %type12, align 8, !dbg !8434
  %cmp13 = icmp eq i32 %11, 0, !dbg !8434
  br i1 %cmp13, label %land.lhs.true15, label %if.end23, !dbg !8436

land.lhs.true15:                                  ; preds = %if.end11
  %12 = load i32, i32* %arg.addr, align 4, !dbg !8437
  %and16 = and i32 %12, -2147483648, !dbg !8438
  %tobool17 = icmp ne i32 %and16, 0, !dbg !8438
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !8439

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8440
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 21, !dbg !8441
  %sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 2, !dbg !8442
  %14 = load i8, i8* %sec_feature_support, align 2, !dbg !8442
  %conv19 = zext i8 %14 to i64, !dbg !8440
  %and20 = and i64 %conv19, 1, !dbg !8443
  %tobool21 = icmp ne i64 %and20, 0, !dbg !8443
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !8444

if.then22:                                        ; preds = %land.lhs.true18
  store i32 -95, i32* %retval, align 4, !dbg !8445
  br label %return, !dbg !8445

if.end23:                                         ; preds = %land.lhs.true18, %land.lhs.true15, %if.end11
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8446
  %type24 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 4, !dbg !8446
  %16 = load i32, i32* %type24, align 8, !dbg !8446
  %cmp25 = icmp eq i32 %16, 0, !dbg !8446
  br i1 %cmp25, label %land.lhs.true27, label %if.end37, !dbg !8448

land.lhs.true27:                                  ; preds = %if.end23
  %17 = load i32, i32* %arg.addr, align 4, !dbg !8449
  %and28 = and i32 %17, 32769, !dbg !8450
  %tobool29 = icmp ne i32 %and28, 0, !dbg !8450
  br i1 %tobool29, label %land.lhs.true30, label %if.end37, !dbg !8451

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8452
  %ext_csd31 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 21, !dbg !8453
  %sec_feature_support32 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd31, i32 0, i32 2, !dbg !8454
  %19 = load i8, i8* %sec_feature_support32, align 2, !dbg !8454
  %conv33 = zext i8 %19 to i64, !dbg !8452
  %and34 = and i64 %conv33, 16, !dbg !8455
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8455
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !8456

if.then36:                                        ; preds = %land.lhs.true30
  store i32 -95, i32* %retval, align 4, !dbg !8457
  br label %return, !dbg !8457

if.end37:                                         ; preds = %land.lhs.true30, %land.lhs.true27, %if.end23
  %20 = load i32, i32* %arg.addr, align 4, !dbg !8458
  %cmp38 = icmp eq i32 %20, -2147483648, !dbg !8460
  br i1 %cmp38, label %if.then40, label %if.end49, !dbg !8461

if.then40:                                        ; preds = %if.end37
  %21 = load i32, i32* %from.addr, align 4, !dbg !8462
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8465
  %erase_size41 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 9, !dbg !8466
  %23 = load i32, i32* %erase_size41, align 4, !dbg !8466
  %rem42 = urem i32 %21, %23, !dbg !8467
  %tobool43 = icmp ne i32 %rem42, 0, !dbg !8467
  br i1 %tobool43, label %if.then47, label %lor.lhs.false, !dbg !8468

lor.lhs.false:                                    ; preds = %if.then40
  %24 = load i32, i32* %nr.addr, align 4, !dbg !8469
  %25 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8470
  %erase_size44 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %25, i32 0, i32 9, !dbg !8471
  %26 = load i32, i32* %erase_size44, align 4, !dbg !8471
  %rem45 = urem i32 %24, %26, !dbg !8472
  %tobool46 = icmp ne i32 %rem45, 0, !dbg !8472
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !8473

if.then47:                                        ; preds = %lor.lhs.false, %if.then40
  store i32 -22, i32* %retval, align 4, !dbg !8474
  br label %return, !dbg !8474

if.end48:                                         ; preds = %lor.lhs.false
  br label %if.end49, !dbg !8475

if.end49:                                         ; preds = %if.end48, %if.end37
  %27 = load i32, i32* %arg.addr, align 4, !dbg !8476
  %cmp50 = icmp eq i32 %27, 0, !dbg !8478
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !8479

if.then52:                                        ; preds = %if.end49
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8480
  %29 = load i32, i32* %nr.addr, align 4, !dbg !8481
  %call = call i32 @mmc_align_erase_size(%struct.mmc_card* %28, i32* %from.addr, i32* %to, i32 %29) #10, !dbg !8482
  store i32 %call, i32* %nr.addr, align 4, !dbg !8483
  br label %if.end53, !dbg !8484

if.end53:                                         ; preds = %if.then52, %if.end49
  %30 = load i32, i32* %nr.addr, align 4, !dbg !8485
  %cmp54 = icmp eq i32 %30, 0, !dbg !8487
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !8488

if.then56:                                        ; preds = %if.end53
  store i32 0, i32* %retval, align 4, !dbg !8489
  br label %return, !dbg !8489

if.end57:                                         ; preds = %if.end53
  %31 = load i32, i32* %to, align 4, !dbg !8490
  %32 = load i32, i32* %from.addr, align 4, !dbg !8492
  %cmp58 = icmp ule i32 %31, %32, !dbg !8493
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !8494

if.then60:                                        ; preds = %if.end57
  store i32 -22, i32* %retval, align 4, !dbg !8495
  br label %return, !dbg !8495

if.end61:                                         ; preds = %if.end57
  %33 = load i32, i32* %to, align 4, !dbg !8496
  %sub = sub i32 %33, 1, !dbg !8496
  store i32 %sub, i32* %to, align 4, !dbg !8496
  %34 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8497
  %erase_size62 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %34, i32 0, i32 9, !dbg !8498
  %35 = load i32, i32* %erase_size62, align 4, !dbg !8498
  %36 = load i32, i32* %from.addr, align 4, !dbg !8499
  %37 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8500
  %erase_size63 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %37, i32 0, i32 9, !dbg !8501
  %38 = load i32, i32* %erase_size63, align 4, !dbg !8501
  %rem64 = urem i32 %36, %38, !dbg !8502
  %sub65 = sub i32 %35, %rem64, !dbg !8503
  store i32 %sub65, i32* %rem, align 4, !dbg !8504
  %39 = load i32, i32* %arg.addr, align 4, !dbg !8505
  %and66 = and i32 %39, 32769, !dbg !8507
  %tobool67 = icmp ne i32 %and66, 0, !dbg !8507
  br i1 %tobool67, label %land.lhs.true68, label %if.end84, !dbg !8508

land.lhs.true68:                                  ; preds = %if.end61
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8509
  %eg_boundary = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 12, !dbg !8510
  %41 = load i32, i32* %eg_boundary, align 8, !dbg !8510
  %tobool69 = icmp ne i32 %41, 0, !dbg !8511
  br i1 %tobool69, label %land.lhs.true70, label %if.end84, !dbg !8512

land.lhs.true70:                                  ; preds = %land.lhs.true68
  %42 = load i32, i32* %nr.addr, align 4, !dbg !8513
  %43 = load i32, i32* %rem, align 4, !dbg !8514
  %cmp71 = icmp ugt i32 %42, %43, !dbg !8515
  br i1 %cmp71, label %if.then73, label %if.end84, !dbg !8516

if.then73:                                        ; preds = %land.lhs.true70
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8517
  %45 = load i32, i32* %from.addr, align 4, !dbg !8519
  %46 = load i32, i32* %from.addr, align 4, !dbg !8520
  %47 = load i32, i32* %rem, align 4, !dbg !8521
  %add74 = add i32 %46, %47, !dbg !8522
  %sub75 = sub i32 %add74, 1, !dbg !8523
  %48 = load i32, i32* %arg.addr, align 4, !dbg !8524
  %call76 = call i32 @mmc_do_erase(%struct.mmc_card* %44, i32 %45, i32 %sub75, i32 %48) #10, !dbg !8525
  store i32 %call76, i32* %err, align 4, !dbg !8526
  %49 = load i32, i32* %rem, align 4, !dbg !8527
  %50 = load i32, i32* %from.addr, align 4, !dbg !8528
  %add77 = add i32 %50, %49, !dbg !8528
  store i32 %add77, i32* %from.addr, align 4, !dbg !8528
  %51 = load i32, i32* %err, align 4, !dbg !8529
  %tobool78 = icmp ne i32 %51, 0, !dbg !8531
  br i1 %tobool78, label %if.then82, label %lor.lhs.false79, !dbg !8532

lor.lhs.false79:                                  ; preds = %if.then73
  %52 = load i32, i32* %to, align 4, !dbg !8533
  %53 = load i32, i32* %from.addr, align 4, !dbg !8534
  %cmp80 = icmp ule i32 %52, %53, !dbg !8535
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !8536

if.then82:                                        ; preds = %lor.lhs.false79, %if.then73
  %54 = load i32, i32* %err, align 4, !dbg !8537
  store i32 %54, i32* %retval, align 4, !dbg !8538
  br label %return, !dbg !8538

if.end83:                                         ; preds = %lor.lhs.false79
  br label %if.end84, !dbg !8539

if.end84:                                         ; preds = %if.end83, %land.lhs.true70, %land.lhs.true68, %if.end61
  %55 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8540
  %56 = load i32, i32* %from.addr, align 4, !dbg !8541
  %57 = load i32, i32* %to, align 4, !dbg !8542
  %58 = load i32, i32* %arg.addr, align 4, !dbg !8543
  %call85 = call i32 @mmc_do_erase(%struct.mmc_card* %55, i32 %56, i32 %57, i32 %58) #10, !dbg !8544
  store i32 %call85, i32* %retval, align 4, !dbg !8545
  br label %return, !dbg !8545

return:                                           ; preds = %if.end84, %if.then82, %if.then60, %if.then56, %if.then47, %if.then36, %if.then22, %if.then10, %if.then2, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !8546
  ret i32 %59, !dbg !8546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_align_erase_size(%struct.mmc_card* %card, i32* %from, i32* %to, i32 %nr) #0 !dbg !8547 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %from.addr = alloca i32*, align 8
  %to.addr = alloca i32*, align 8
  %nr.addr = alloca i32, align 4
  %from_new = alloca i32, align 4
  %nr_new = alloca i32, align 4
  %rem = alloca i32, align 4
  %temp = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  store i32* %from, i32** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %from.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  store i32* %to, i32** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %to.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.declare(metadata i32* %from_new, metadata !8558, metadata !DIExpression()), !dbg !8559
  %0 = load i32*, i32** %from.addr, align 8, !dbg !8560
  %1 = load i32, i32* %0, align 4, !dbg !8561
  store i32 %1, i32* %from_new, align 4, !dbg !8559
  call void @llvm.dbg.declare(metadata i32* %nr_new, metadata !8562, metadata !DIExpression()), !dbg !8563
  %2 = load i32, i32* %nr.addr, align 4, !dbg !8564
  store i32 %2, i32* %nr_new, align 4, !dbg !8563
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !8565, metadata !DIExpression()), !dbg !8566
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8567
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 9, !dbg !8569
  %4 = load i32, i32* %erase_size, align 4, !dbg !8569
  %conv = zext i32 %4 to i64, !dbg !8567
  %call = call zeroext i1 @is_power_of_2(i64 %conv) #14, !dbg !8570
  br i1 %call, label %if.then, label %if.else9, !dbg !8571

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !8572, metadata !DIExpression()), !dbg !8574
  %5 = load i32, i32* %from_new, align 4, !dbg !8575
  store i32 %5, i32* %temp, align 4, !dbg !8574
  %6 = load i32, i32* %temp, align 4, !dbg !8576
  %sub = sub i32 %6, 1, !dbg !8576
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8576
  %erase_size1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 9, !dbg !8576
  %8 = load i32, i32* %erase_size1, align 4, !dbg !8576
  %sub2 = sub i32 %8, 1, !dbg !8576
  %or = or i32 %sub, %sub2, !dbg !8576
  %add = add i32 %or, 1, !dbg !8576
  store i32 %add, i32* %from_new, align 4, !dbg !8577
  %9 = load i32, i32* %from_new, align 4, !dbg !8578
  %10 = load i32, i32* %temp, align 4, !dbg !8579
  %sub3 = sub i32 %9, %10, !dbg !8580
  store i32 %sub3, i32* %rem, align 4, !dbg !8581
  %11 = load i32, i32* %nr_new, align 4, !dbg !8582
  %12 = load i32, i32* %rem, align 4, !dbg !8584
  %cmp = icmp ugt i32 %11, %12, !dbg !8585
  br i1 %cmp, label %if.then5, label %if.else, !dbg !8586

if.then5:                                         ; preds = %if.then
  %13 = load i32, i32* %rem, align 4, !dbg !8587
  %14 = load i32, i32* %nr_new, align 4, !dbg !8588
  %sub6 = sub i32 %14, %13, !dbg !8588
  store i32 %sub6, i32* %nr_new, align 4, !dbg !8588
  br label %if.end, !dbg !8589

if.else:                                          ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !8590
  br label %return, !dbg !8590

if.end:                                           ; preds = %if.then5
  %15 = load i32, i32* %nr_new, align 4, !dbg !8591
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8591
  %erase_size7 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 9, !dbg !8591
  %17 = load i32, i32* %erase_size7, align 4, !dbg !8591
  %sub8 = sub i32 %17, 1, !dbg !8591
  %neg = xor i32 %sub8, -1, !dbg !8591
  %and = and i32 %15, %neg, !dbg !8591
  store i32 %and, i32* %nr_new, align 4, !dbg !8592
  br label %if.end29, !dbg !8593

if.else9:                                         ; preds = %entry
  %18 = load i32, i32* %from_new, align 4, !dbg !8594
  %19 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8596
  %erase_size10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %19, i32 0, i32 9, !dbg !8597
  %20 = load i32, i32* %erase_size10, align 4, !dbg !8597
  %rem11 = urem i32 %18, %20, !dbg !8598
  store i32 %rem11, i32* %rem, align 4, !dbg !8599
  %21 = load i32, i32* %rem, align 4, !dbg !8600
  %tobool = icmp ne i32 %21, 0, !dbg !8600
  br i1 %tobool, label %if.then12, label %if.end22, !dbg !8602

if.then12:                                        ; preds = %if.else9
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8603
  %erase_size13 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 9, !dbg !8605
  %23 = load i32, i32* %erase_size13, align 4, !dbg !8605
  %24 = load i32, i32* %rem, align 4, !dbg !8606
  %sub14 = sub i32 %23, %24, !dbg !8607
  store i32 %sub14, i32* %rem, align 4, !dbg !8608
  %25 = load i32, i32* %rem, align 4, !dbg !8609
  %26 = load i32, i32* %from_new, align 4, !dbg !8610
  %add15 = add i32 %26, %25, !dbg !8610
  store i32 %add15, i32* %from_new, align 4, !dbg !8610
  %27 = load i32, i32* %nr_new, align 4, !dbg !8611
  %28 = load i32, i32* %rem, align 4, !dbg !8613
  %cmp16 = icmp ugt i32 %27, %28, !dbg !8614
  br i1 %cmp16, label %if.then18, label %if.else20, !dbg !8615

if.then18:                                        ; preds = %if.then12
  %29 = load i32, i32* %rem, align 4, !dbg !8616
  %30 = load i32, i32* %nr_new, align 4, !dbg !8617
  %sub19 = sub i32 %30, %29, !dbg !8617
  store i32 %sub19, i32* %nr_new, align 4, !dbg !8617
  br label %if.end21, !dbg !8618

if.else20:                                        ; preds = %if.then12
  store i32 0, i32* %retval, align 4, !dbg !8619
  br label %return, !dbg !8619

if.end21:                                         ; preds = %if.then18
  br label %if.end22, !dbg !8620

if.end22:                                         ; preds = %if.end21, %if.else9
  %31 = load i32, i32* %nr_new, align 4, !dbg !8621
  %32 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8622
  %erase_size23 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %32, i32 0, i32 9, !dbg !8623
  %33 = load i32, i32* %erase_size23, align 4, !dbg !8623
  %rem24 = urem i32 %31, %33, !dbg !8624
  store i32 %rem24, i32* %rem, align 4, !dbg !8625
  %34 = load i32, i32* %rem, align 4, !dbg !8626
  %tobool25 = icmp ne i32 %34, 0, !dbg !8626
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8628

if.then26:                                        ; preds = %if.end22
  %35 = load i32, i32* %rem, align 4, !dbg !8629
  %36 = load i32, i32* %nr_new, align 4, !dbg !8630
  %sub27 = sub i32 %36, %35, !dbg !8630
  store i32 %sub27, i32* %nr_new, align 4, !dbg !8630
  br label %if.end28, !dbg !8631

if.end28:                                         ; preds = %if.then26, %if.end22
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end
  %37 = load i32, i32* %nr_new, align 4, !dbg !8632
  %cmp30 = icmp eq i32 %37, 0, !dbg !8634
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8635

if.then32:                                        ; preds = %if.end29
  store i32 0, i32* %retval, align 4, !dbg !8636
  br label %return, !dbg !8636

if.end33:                                         ; preds = %if.end29
  %38 = load i32, i32* %from_new, align 4, !dbg !8637
  %39 = load i32, i32* %nr_new, align 4, !dbg !8638
  %add34 = add i32 %38, %39, !dbg !8639
  %40 = load i32*, i32** %to.addr, align 8, !dbg !8640
  store i32 %add34, i32* %40, align 4, !dbg !8641
  %41 = load i32, i32* %from_new, align 4, !dbg !8642
  %42 = load i32*, i32** %from.addr, align 8, !dbg !8643
  store i32 %41, i32* %42, align 4, !dbg !8644
  %43 = load i32, i32* %nr_new, align 4, !dbg !8645
  store i32 %43, i32* %retval, align 4, !dbg !8646
  br label %return, !dbg !8646

return:                                           ; preds = %if.end33, %if.then32, %if.else20, %if.else
  %44 = load i32, i32* %retval, align 4, !dbg !8647
  ret i32 %44, !dbg !8647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_do_erase(%struct.mmc_card* %card, i32 %from, i32 %to, i32 %arg) #0 !dbg !8648 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %arg.addr = alloca i32, align 4
  %cmd = alloca %struct.mmc_command, align 8
  %qty = alloca i32, align 4
  %busy_timeout = alloca i32, align 4
  %use_r1b_resp = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8649, metadata !DIExpression()), !dbg !8650
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !8651, metadata !DIExpression()), !dbg !8652
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !8653, metadata !DIExpression()), !dbg !8654
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !8655, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !8657, metadata !DIExpression()), !dbg !8658
  %0 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !8658
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !8658
  call void @llvm.dbg.declare(metadata i32* %qty, metadata !8659, metadata !DIExpression()), !dbg !8660
  store i32 0, i32* %qty, align 4, !dbg !8660
  call void @llvm.dbg.declare(metadata i32* %busy_timeout, metadata !8661, metadata !DIExpression()), !dbg !8662
  store i32 0, i32* %busy_timeout, align 4, !dbg !8662
  call void @llvm.dbg.declare(metadata i8* %use_r1b_resp, metadata !8663, metadata !DIExpression()), !dbg !8664
  store i8 0, i8* %use_r1b_resp, align 1, !dbg !8664
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8665, metadata !DIExpression()), !dbg !8666
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8667
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 0, !dbg !8668
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !8668
  call void @mmc_retune_hold(%struct.mmc_host* %2) #10, !dbg !8669
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8670
  %erase_shift = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 10, !dbg !8672
  %4 = load i32, i32* %erase_shift, align 8, !dbg !8672
  %tobool = icmp ne i32 %4, 0, !dbg !8670
  br i1 %tobool, label %if.then, label %if.else, !dbg !8673

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %to.addr, align 4, !dbg !8674
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8675
  %erase_shift1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 10, !dbg !8676
  %7 = load i32, i32* %erase_shift1, align 8, !dbg !8676
  %shr = lshr i32 %5, %7, !dbg !8677
  %8 = load i32, i32* %from.addr, align 4, !dbg !8678
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8679
  %erase_shift2 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 10, !dbg !8680
  %10 = load i32, i32* %erase_shift2, align 8, !dbg !8680
  %shr3 = lshr i32 %8, %10, !dbg !8681
  %sub = sub i32 %shr, %shr3, !dbg !8682
  %add = add i32 %sub, 1, !dbg !8683
  %11 = load i32, i32* %qty, align 4, !dbg !8684
  %add4 = add i32 %11, %add, !dbg !8684
  store i32 %add4, i32* %qty, align 4, !dbg !8684
  br label %if.end15, !dbg !8685

if.else:                                          ; preds = %entry
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8686
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 4, !dbg !8686
  %13 = load i32, i32* %type, align 8, !dbg !8686
  %cmp = icmp eq i32 %13, 1, !dbg !8686
  br i1 %cmp, label %if.then5, label %if.else9, !dbg !8688

if.then5:                                         ; preds = %if.else
  %14 = load i32, i32* %to.addr, align 4, !dbg !8689
  %15 = load i32, i32* %from.addr, align 4, !dbg !8690
  %sub6 = sub i32 %14, %15, !dbg !8691
  %add7 = add i32 %sub6, 1, !dbg !8692
  %16 = load i32, i32* %qty, align 4, !dbg !8693
  %add8 = add i32 %16, %add7, !dbg !8693
  store i32 %add8, i32* %qty, align 4, !dbg !8693
  br label %if.end, !dbg !8694

if.else9:                                         ; preds = %if.else
  %17 = load i32, i32* %to.addr, align 4, !dbg !8695
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8696
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 9, !dbg !8697
  %19 = load i32, i32* %erase_size, align 4, !dbg !8697
  %div = udiv i32 %17, %19, !dbg !8698
  %20 = load i32, i32* %from.addr, align 4, !dbg !8699
  %21 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8700
  %erase_size10 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %21, i32 0, i32 9, !dbg !8701
  %22 = load i32, i32* %erase_size10, align 4, !dbg !8701
  %div11 = udiv i32 %20, %22, !dbg !8702
  %sub12 = sub i32 %div, %div11, !dbg !8703
  %add13 = add i32 %sub12, 1, !dbg !8704
  %23 = load i32, i32* %qty, align 4, !dbg !8705
  %add14 = add i32 %23, %add13, !dbg !8705
  store i32 %add14, i32* %qty, align 4, !dbg !8705
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then5
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %24 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8706
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %24, i32 0, i32 5, !dbg !8706
  %25 = load i32, i32* %state, align 4, !dbg !8706
  %and = and i32 %25, 4, !dbg !8706
  %tobool16 = icmp ne i32 %and, 0, !dbg !8706
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !8708

if.then17:                                        ; preds = %if.end15
  %26 = load i32, i32* %from.addr, align 4, !dbg !8709
  %shl = shl i32 %26, 9, !dbg !8709
  store i32 %shl, i32* %from.addr, align 4, !dbg !8709
  %27 = load i32, i32* %to.addr, align 4, !dbg !8711
  %shl18 = shl i32 %27, 9, !dbg !8711
  store i32 %shl18, i32* %to.addr, align 4, !dbg !8711
  br label %if.end19, !dbg !8712

if.end19:                                         ; preds = %if.then17, %if.end15
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8713
  %type20 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 4, !dbg !8713
  %29 = load i32, i32* %type20, align 8, !dbg !8713
  %cmp21 = icmp eq i32 %29, 1, !dbg !8713
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !8715

if.then22:                                        ; preds = %if.end19
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !8716
  store i32 32, i32* %opcode, align 8, !dbg !8717
  br label %if.end25, !dbg !8718

if.else23:                                        ; preds = %if.end19
  %opcode24 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !8719
  store i32 35, i32* %opcode24, align 8, !dbg !8720
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then22
  %30 = load i32, i32* %from.addr, align 4, !dbg !8721
  %arg26 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !8722
  store i32 %30, i32* %arg26, align 4, !dbg !8723
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !8724
  store i32 149, i32* %flags, align 8, !dbg !8725
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8726
  %host27 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %31, i32 0, i32 0, !dbg !8727
  %32 = load %struct.mmc_host*, %struct.mmc_host** %host27, align 8, !dbg !8727
  %call = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %32, %struct.mmc_command* %cmd, i32 0) #10, !dbg !8728
  store i32 %call, i32* %err, align 4, !dbg !8729
  %33 = load i32, i32* %err, align 4, !dbg !8730
  %tobool28 = icmp ne i32 %33, 0, !dbg !8730
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !8732

if.then29:                                        ; preds = %if.end25
  %34 = load i32, i32* %err, align 4, !dbg !8733
  %resp = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !8733
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %resp, i64 0, i64 0, !dbg !8733
  %35 = load i32, i32* %arrayidx, align 8, !dbg !8733
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i32 %34, i32 %35) #11, !dbg !8733
  store i32 -5, i32* %err, align 4, !dbg !8735
  br label %out, !dbg !8736

if.end31:                                         ; preds = %if.end25
  %36 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !8737
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 56, i1 false), !dbg !8737
  %37 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8738
  %type32 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %37, i32 0, i32 4, !dbg !8738
  %38 = load i32, i32* %type32, align 8, !dbg !8738
  %cmp33 = icmp eq i32 %38, 1, !dbg !8738
  br i1 %cmp33, label %if.then34, label %if.else36, !dbg !8740

if.then34:                                        ; preds = %if.end31
  %opcode35 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !8741
  store i32 33, i32* %opcode35, align 8, !dbg !8742
  br label %if.end38, !dbg !8743

if.else36:                                        ; preds = %if.end31
  %opcode37 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !8744
  store i32 36, i32* %opcode37, align 8, !dbg !8745
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then34
  %39 = load i32, i32* %to.addr, align 4, !dbg !8746
  %arg39 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !8747
  store i32 %39, i32* %arg39, align 4, !dbg !8748
  %flags40 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !8749
  store i32 149, i32* %flags40, align 8, !dbg !8750
  %40 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8751
  %host41 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %40, i32 0, i32 0, !dbg !8752
  %41 = load %struct.mmc_host*, %struct.mmc_host** %host41, align 8, !dbg !8752
  %call42 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %41, %struct.mmc_command* %cmd, i32 0) #10, !dbg !8753
  store i32 %call42, i32* %err, align 4, !dbg !8754
  %42 = load i32, i32* %err, align 4, !dbg !8755
  %tobool43 = icmp ne i32 %42, 0, !dbg !8755
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !8757

if.then44:                                        ; preds = %if.end38
  %43 = load i32, i32* %err, align 4, !dbg !8758
  %resp45 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !8758
  %arrayidx46 = getelementptr [4 x i32], [4 x i32]* %resp45, i64 0, i64 0, !dbg !8758
  %44 = load i32, i32* %arrayidx46, align 8, !dbg !8758
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), i32 %43, i32 %44) #11, !dbg !8758
  store i32 -5, i32* %err, align 4, !dbg !8760
  br label %out, !dbg !8761

if.end48:                                         ; preds = %if.end38
  %45 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !8762
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 56, i1 false), !dbg !8762
  %opcode49 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !8763
  store i32 38, i32* %opcode49, align 8, !dbg !8764
  %46 = load i32, i32* %arg.addr, align 4, !dbg !8765
  %arg50 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !8766
  store i32 %46, i32* %arg50, align 4, !dbg !8767
  %47 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8768
  %48 = load i32, i32* %arg.addr, align 4, !dbg !8769
  %49 = load i32, i32* %qty, align 4, !dbg !8770
  %call51 = call i32 @mmc_erase_timeout(%struct.mmc_card* %47, i32 %48, i32 %49) #10, !dbg !8771
  store i32 %call51, i32* %busy_timeout, align 4, !dbg !8772
  %50 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8773
  %host52 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %50, i32 0, i32 0, !dbg !8775
  %51 = load %struct.mmc_host*, %struct.mmc_host** %host52, align 8, !dbg !8775
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %51, i32 0, i32 17, !dbg !8776
  %52 = load i32, i32* %caps, align 4, !dbg !8776
  %and53 = and i32 %52, 4194304, !dbg !8777
  %tobool54 = icmp ne i32 %and53, 0, !dbg !8777
  br i1 %tobool54, label %if.else63, label %land.lhs.true, !dbg !8778

land.lhs.true:                                    ; preds = %if.end48
  %53 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8779
  %host55 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %53, i32 0, i32 0, !dbg !8780
  %54 = load %struct.mmc_host*, %struct.mmc_host** %host55, align 8, !dbg !8780
  %max_busy_timeout = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %54, i32 0, i32 27, !dbg !8781
  %55 = load i32, i32* %max_busy_timeout, align 8, !dbg !8781
  %tobool56 = icmp ne i32 %55, 0, !dbg !8779
  br i1 %tobool56, label %land.lhs.true57, label %if.else63, !dbg !8782

land.lhs.true57:                                  ; preds = %land.lhs.true
  %56 = load i32, i32* %busy_timeout, align 4, !dbg !8783
  %57 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8784
  %host58 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %57, i32 0, i32 0, !dbg !8785
  %58 = load %struct.mmc_host*, %struct.mmc_host** %host58, align 8, !dbg !8785
  %max_busy_timeout59 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %58, i32 0, i32 27, !dbg !8786
  %59 = load i32, i32* %max_busy_timeout59, align 8, !dbg !8786
  %cmp60 = icmp ugt i32 %56, %59, !dbg !8787
  br i1 %cmp60, label %if.then61, label %if.else63, !dbg !8788

if.then61:                                        ; preds = %land.lhs.true57
  %flags62 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !8789
  store i32 149, i32* %flags62, align 8, !dbg !8791
  br label %if.end66, !dbg !8792

if.else63:                                        ; preds = %land.lhs.true57, %land.lhs.true, %if.end48
  %flags64 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !8793
  store i32 1181, i32* %flags64, align 8, !dbg !8795
  %60 = load i32, i32* %busy_timeout, align 4, !dbg !8796
  %busy_timeout65 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 6, !dbg !8797
  store i32 %60, i32* %busy_timeout65, align 4, !dbg !8798
  store i8 1, i8* %use_r1b_resp, align 1, !dbg !8799
  br label %if.end66

if.end66:                                         ; preds = %if.else63, %if.then61
  %61 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8800
  %host67 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %61, i32 0, i32 0, !dbg !8801
  %62 = load %struct.mmc_host*, %struct.mmc_host** %host67, align 8, !dbg !8801
  %call68 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %62, %struct.mmc_command* %cmd, i32 0) #10, !dbg !8802
  store i32 %call68, i32* %err, align 4, !dbg !8803
  %63 = load i32, i32* %err, align 4, !dbg !8804
  %tobool69 = icmp ne i32 %63, 0, !dbg !8804
  br i1 %tobool69, label %if.then70, label %if.end74, !dbg !8806

if.then70:                                        ; preds = %if.end66
  %64 = load i32, i32* %err, align 4, !dbg !8807
  %resp71 = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 2, !dbg !8807
  %arrayidx72 = getelementptr [4 x i32], [4 x i32]* %resp71, i64 0, i64 0, !dbg !8807
  %65 = load i32, i32* %arrayidx72, align 8, !dbg !8807
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i32 %64, i32 %65) #11, !dbg !8807
  store i32 -5, i32* %err, align 4, !dbg !8809
  br label %out, !dbg !8810

if.end74:                                         ; preds = %if.end66
  %66 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8811
  %host75 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %66, i32 0, i32 0, !dbg !8811
  %67 = load %struct.mmc_host*, %struct.mmc_host** %host75, align 8, !dbg !8811
  %caps76 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %67, i32 0, i32 17, !dbg !8811
  %68 = load i32, i32* %caps76, align 4, !dbg !8811
  %and77 = and i32 %68, 16, !dbg !8811
  %tobool78 = icmp ne i32 %and77, 0, !dbg !8811
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !8813

if.then79:                                        ; preds = %if.end74
  br label %out, !dbg !8814

if.end80:                                         ; preds = %if.end74
  %69 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8815
  %host81 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %69, i32 0, i32 0, !dbg !8817
  %70 = load %struct.mmc_host*, %struct.mmc_host** %host81, align 8, !dbg !8817
  %caps82 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %70, i32 0, i32 17, !dbg !8818
  %71 = load i32, i32* %caps82, align 4, !dbg !8818
  %and83 = and i32 %71, 512, !dbg !8819
  %tobool84 = icmp ne i32 %and83, 0, !dbg !8819
  br i1 %tobool84, label %land.lhs.true85, label %if.end88, !dbg !8820

land.lhs.true85:                                  ; preds = %if.end80
  %72 = load i8, i8* %use_r1b_resp, align 1, !dbg !8821
  %tobool86 = trunc i8 %72 to i1, !dbg !8821
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !8822

if.then87:                                        ; preds = %land.lhs.true85
  br label %out, !dbg !8823

if.end88:                                         ; preds = %land.lhs.true85, %if.end80
  %73 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8824
  %74 = load i32, i32* %busy_timeout, align 4, !dbg !8825
  %call89 = call i32 @mmc_poll_for_busy(%struct.mmc_card* %73, i32 %74, i32 1) #10, !dbg !8826
  store i32 %call89, i32* %err, align 4, !dbg !8827
  br label %out, !dbg !8828

out:                                              ; preds = %if.end88, %if.then87, %if.then79, %if.then70, %if.then44, %if.then29
  call void @llvm.dbg.label(metadata !8829), !dbg !8830
  %75 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8831
  %host90 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %75, i32 0, i32 0, !dbg !8832
  %76 = load %struct.mmc_host*, %struct.mmc_host** %host90, align 8, !dbg !8832
  call void @mmc_retune_release(%struct.mmc_host* %76) #10, !dbg !8833
  %77 = load i32, i32* %err, align 4, !dbg !8834
  ret i32 %77, !dbg !8835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_can_erase(%struct.mmc_card* %card) #0 !dbg !8836 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8839
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 20, !dbg !8841
  %cmdclass = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 2, !dbg !8842
  %1 = load i16, i16* %cmdclass, align 2, !dbg !8842
  %conv = zext i16 %1 to i32, !dbg !8839
  %and = and i32 %conv, 32, !dbg !8843
  %tobool = icmp ne i32 %and, 0, !dbg !8843
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8844

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8845
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 9, !dbg !8846
  %3 = load i32, i32* %erase_size, align 4, !dbg !8846
  %tobool1 = icmp ne i32 %3, 0, !dbg !8845
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8847

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8848
  br label %return, !dbg !8848

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8849
  br label %return, !dbg !8849

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8850
  ret i32 %4, !dbg !8850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_can_trim(%struct.mmc_card* %card) #0 !dbg !8851 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8854
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !8856
  %sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 2, !dbg !8857
  %1 = load i8, i8* %sec_feature_support, align 2, !dbg !8857
  %conv = zext i8 %1 to i64, !dbg !8854
  %and = and i64 %conv, 16, !dbg !8858
  %tobool = icmp ne i64 %and, 0, !dbg !8858
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8859

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8860
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 6, !dbg !8861
  %3 = load i32, i32* %quirks, align 8, !dbg !8861
  %and1 = and i32 %3, 4096, !dbg !8862
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8862
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8863

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8864
  br label %return, !dbg !8864

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8865
  br label %return, !dbg !8865

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8866
  ret i32 %4, !dbg !8866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_can_discard(%struct.mmc_card* %card) #0 !dbg !8867 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8870
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !8872
  %feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 75, !dbg !8873
  %1 = load i32, i32* %feature_support, align 4, !dbg !8873
  %conv = zext i32 %1 to i64, !dbg !8870
  %and = and i64 %conv, 1, !dbg !8874
  %tobool = icmp ne i64 %and, 0, !dbg !8874
  br i1 %tobool, label %if.then, label %if.end, !dbg !8875

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8876
  br label %return, !dbg !8876

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8877
  br label %return, !dbg !8877

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !8878
  ret i32 %2, !dbg !8878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_can_sanitize(%struct.mmc_card* %card) #0 !dbg !8879 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8882
  %call = call i32 @mmc_can_trim(%struct.mmc_card* %0) #10, !dbg !8884
  %tobool = icmp ne i32 %call, 0, !dbg !8884
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8885

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8886
  %call1 = call i32 @mmc_can_erase(%struct.mmc_card* %1) #10, !dbg !8887
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8887
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8888

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8889
  br label %return, !dbg !8889

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8890
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !8892
  %sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 2, !dbg !8893
  %3 = load i8, i8* %sec_feature_support, align 2, !dbg !8893
  %conv = zext i8 %3 to i64, !dbg !8890
  %and = and i64 %conv, 64, !dbg !8894
  %tobool3 = icmp ne i64 %and, 0, !dbg !8894
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8895

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !8896
  br label %return, !dbg !8896

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8897
  br label %return, !dbg !8897

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8898
  ret i32 %4, !dbg !8898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_can_secure_erase_trim(%struct.mmc_card* %card) #0 !dbg !8899 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8900, metadata !DIExpression()), !dbg !8901
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8902
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 21, !dbg !8904
  %sec_feature_support = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 2, !dbg !8905
  %1 = load i8, i8* %sec_feature_support, align 2, !dbg !8905
  %conv = zext i8 %1 to i64, !dbg !8902
  %and = and i64 %conv, 1, !dbg !8906
  %tobool = icmp ne i64 %and, 0, !dbg !8906
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8907

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8908
  %quirks = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 6, !dbg !8909
  %3 = load i32, i32* %quirks, align 8, !dbg !8909
  %and1 = and i32 %3, 1024, !dbg !8910
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8910
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8911

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !8912
  br label %return, !dbg !8912

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8913
  br label %return, !dbg !8913

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8914
  ret i32 %4, !dbg !8914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_erase_group_aligned(%struct.mmc_card* %card, i32 %from, i32 %nr) #0 !dbg !8915 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %from.addr = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8918, metadata !DIExpression()), !dbg !8919
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !8920, metadata !DIExpression()), !dbg !8921
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !8922, metadata !DIExpression()), !dbg !8923
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8924
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 9, !dbg !8926
  %1 = load i32, i32* %erase_size, align 4, !dbg !8926
  %tobool = icmp ne i32 %1, 0, !dbg !8924
  br i1 %tobool, label %if.end, label %if.then, !dbg !8927

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8928
  br label %return, !dbg !8928

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %from.addr, align 4, !dbg !8929
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8931
  %erase_size1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 9, !dbg !8932
  %4 = load i32, i32* %erase_size1, align 4, !dbg !8932
  %rem = urem i32 %2, %4, !dbg !8933
  %tobool2 = icmp ne i32 %rem, 0, !dbg !8933
  br i1 %tobool2, label %if.then6, label %lor.lhs.false, !dbg !8934

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %nr.addr, align 4, !dbg !8935
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8936
  %erase_size3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 9, !dbg !8937
  %7 = load i32, i32* %erase_size3, align 4, !dbg !8937
  %rem4 = urem i32 %5, %7, !dbg !8938
  %tobool5 = icmp ne i32 %rem4, 0, !dbg !8938
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8939

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8940
  br label %return, !dbg !8940

if.end7:                                          ; preds = %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !8941
  br label %return, !dbg !8941

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8942
  ret i32 %8, !dbg !8942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_calc_max_discard(%struct.mmc_card* %card) #0 !dbg !8943 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %max_discard = alloca i32, align 4
  %max_trim = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !8946, metadata !DIExpression()), !dbg !8947
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !8948, metadata !DIExpression()), !dbg !8949
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8950
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !8951
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !8951
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !8949
  call void @llvm.dbg.declare(metadata i32* %max_discard, metadata !8952, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.declare(metadata i32* %max_trim, metadata !8954, metadata !DIExpression()), !dbg !8955
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8956
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 4, !dbg !8956
  %3 = load i32, i32* %type, align 8, !dbg !8956
  %cmp = icmp eq i32 %3, 0, !dbg !8956
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8958

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8959
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 21, !dbg !8960
  %erase_group_def = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 1, !dbg !8961
  %5 = load i8, i8* %erase_group_def, align 1, !dbg !8961
  %conv = zext i8 %5 to i32, !dbg !8959
  %and = and i32 %conv, 1, !dbg !8962
  %tobool = icmp ne i32 %and, 0, !dbg !8962
  br i1 %tobool, label %if.end, label %if.then, !dbg !8963

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8964
  %pref_erase = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 11, !dbg !8965
  %7 = load i32, i32* %pref_erase, align 4, !dbg !8965
  store i32 %7, i32* %retval, align 4, !dbg !8966
  br label %return, !dbg !8966

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8967
  %call = call i32 @mmc_do_calc_max_discard(%struct.mmc_card* %8, i32 0) #10, !dbg !8968
  store i32 %call, i32* %max_discard, align 4, !dbg !8969
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8970
  %call2 = call i32 @mmc_can_trim(%struct.mmc_card* %9) #10, !dbg !8972
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8972
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !8973

if.then4:                                         ; preds = %if.end
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8974
  %call5 = call i32 @mmc_do_calc_max_discard(%struct.mmc_card* %10, i32 1) #10, !dbg !8976
  store i32 %call5, i32* %max_trim, align 4, !dbg !8977
  %11 = load i32, i32* %max_trim, align 4, !dbg !8978
  %12 = load i32, i32* %max_discard, align 4, !dbg !8980
  %cmp6 = icmp ult i32 %11, %12, !dbg !8981
  br i1 %cmp6, label %if.then10, label %lor.lhs.false, !dbg !8982

lor.lhs.false:                                    ; preds = %if.then4
  %13 = load i32, i32* %max_discard, align 4, !dbg !8983
  %cmp8 = icmp eq i32 %13, 0, !dbg !8984
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8985

if.then10:                                        ; preds = %lor.lhs.false, %if.then4
  %14 = load i32, i32* %max_trim, align 4, !dbg !8986
  store i32 %14, i32* %max_discard, align 4, !dbg !8987
  br label %if.end11, !dbg !8988

if.end11:                                         ; preds = %if.then10, %lor.lhs.false
  br label %if.end16, !dbg !8989

if.else:                                          ; preds = %if.end
  %15 = load i32, i32* %max_discard, align 4, !dbg !8990
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !8992
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 9, !dbg !8993
  %17 = load i32, i32* %erase_size, align 4, !dbg !8993
  %cmp12 = icmp ult i32 %15, %17, !dbg !8994
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !8995

if.then14:                                        ; preds = %if.else
  store i32 0, i32* %max_discard, align 4, !dbg !8996
  br label %if.end15, !dbg !8998

if.end15:                                         ; preds = %if.then14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end11
  store i32 0, i32* %tmp, align 4, !dbg !8999
  %18 = load i32, i32* %tmp, align 4, !dbg !9002
  %19 = load i32, i32* %max_discard, align 4, !dbg !9003
  store i32 %19, i32* %retval, align 4, !dbg !9004
  br label %return, !dbg !9004

return:                                           ; preds = %if.end16, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9005
  ret i32 %20, !dbg !9005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_do_calc_max_discard(%struct.mmc_card* %card, i32 %arg) #0 !dbg !9006 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %arg.addr = alloca i32, align 4
  %host = alloca %struct.mmc_host*, align 8
  %max_discard = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %qty = alloca i32, align 4
  %max_qty = alloca i32, align 4
  %min_qty = alloca i32, align 4
  %timeout = alloca i32, align 4
  %last_timeout = alloca i32, align 4
  %max_busy_timeout = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9009, metadata !DIExpression()), !dbg !9010
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !9011, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9013, metadata !DIExpression()), !dbg !9014
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9015
  %host1 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !9016
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host1, align 8, !dbg !9016
  store %struct.mmc_host* %1, %struct.mmc_host** %host, align 8, !dbg !9014
  call void @llvm.dbg.declare(metadata i32* %max_discard, metadata !9017, metadata !DIExpression()), !dbg !9018
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9019, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9021, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.declare(metadata i32* %qty, metadata !9023, metadata !DIExpression()), !dbg !9024
  store i32 0, i32* %qty, align 4, !dbg !9024
  call void @llvm.dbg.declare(metadata i32* %max_qty, metadata !9025, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.declare(metadata i32* %min_qty, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !9029, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.declare(metadata i32* %last_timeout, metadata !9031, metadata !DIExpression()), !dbg !9032
  store i32 0, i32* %last_timeout, align 4, !dbg !9032
  call void @llvm.dbg.declare(metadata i32* %max_busy_timeout, metadata !9033, metadata !DIExpression()), !dbg !9034
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9035
  %max_busy_timeout2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 27, !dbg !9036
  %3 = load i32, i32* %max_busy_timeout2, align 8, !dbg !9036
  %tobool = icmp ne i32 %3, 0, !dbg !9035
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9035

cond.true:                                        ; preds = %entry
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9037
  %max_busy_timeout3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 27, !dbg !9038
  %5 = load i32, i32* %max_busy_timeout3, align 8, !dbg !9038
  br label %cond.end, !dbg !9035

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 60000, %cond.false ], !dbg !9035
  store i32 %cond, i32* %max_busy_timeout, align 4, !dbg !9034
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9039
  %erase_shift = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 10, !dbg !9041
  %7 = load i32, i32* %erase_shift, align 8, !dbg !9041
  %tobool4 = icmp ne i32 %7, 0, !dbg !9039
  br i1 %tobool4, label %if.then, label %if.else, !dbg !9042

if.then:                                          ; preds = %cond.end
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9043
  %erase_shift5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %8, i32 0, i32 10, !dbg !9045
  %9 = load i32, i32* %erase_shift5, align 8, !dbg !9045
  %shr = lshr i32 -1, %9, !dbg !9046
  store i32 %shr, i32* %max_qty, align 4, !dbg !9047
  %10 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9048
  %pref_erase = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %10, i32 0, i32 11, !dbg !9049
  %11 = load i32, i32* %pref_erase, align 4, !dbg !9049
  %12 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9050
  %erase_shift6 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %12, i32 0, i32 10, !dbg !9051
  %13 = load i32, i32* %erase_shift6, align 8, !dbg !9051
  %shr7 = lshr i32 %11, %13, !dbg !9052
  store i32 %shr7, i32* %min_qty, align 4, !dbg !9053
  br label %if.end14, !dbg !9054

if.else:                                          ; preds = %cond.end
  %14 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9055
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %14, i32 0, i32 4, !dbg !9055
  %15 = load i32, i32* %type, align 8, !dbg !9055
  %cmp = icmp eq i32 %15, 1, !dbg !9055
  br i1 %cmp, label %if.then8, label %if.else10, !dbg !9057

if.then8:                                         ; preds = %if.else
  store i32 -1, i32* %max_qty, align 4, !dbg !9058
  %16 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9060
  %pref_erase9 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %16, i32 0, i32 11, !dbg !9061
  %17 = load i32, i32* %pref_erase9, align 4, !dbg !9061
  store i32 %17, i32* %min_qty, align 4, !dbg !9062
  br label %if.end, !dbg !9063

if.else10:                                        ; preds = %if.else
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9064
  %erase_size = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 9, !dbg !9066
  %19 = load i32, i32* %erase_size, align 4, !dbg !9066
  %div = udiv i32 -1, %19, !dbg !9067
  store i32 %div, i32* %max_qty, align 4, !dbg !9068
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9069
  %pref_erase11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 11, !dbg !9070
  %21 = load i32, i32* %pref_erase11, align 4, !dbg !9070
  %22 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9071
  %erase_size12 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %22, i32 0, i32 9, !dbg !9072
  %23 = load i32, i32* %erase_size12, align 4, !dbg !9072
  %div13 = udiv i32 %21, %23, !dbg !9073
  store i32 %div13, i32* %min_qty, align 4, !dbg !9074
  br label %if.end

if.end:                                           ; preds = %if.else10, %if.then8
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  br label %do.body, !dbg !9075

do.body:                                          ; preds = %do.cond, %if.end14
  store i32 0, i32* %y, align 4, !dbg !9076
  store i32 1, i32* %x, align 4, !dbg !9078
  br label %for.cond, !dbg !9080

for.cond:                                         ; preds = %for.inc, %do.body
  %24 = load i32, i32* %x, align 4, !dbg !9081
  %tobool15 = icmp ne i32 %24, 0, !dbg !9081
  br i1 %tobool15, label %land.lhs.true, label %land.end, !dbg !9083

land.lhs.true:                                    ; preds = %for.cond
  %25 = load i32, i32* %x, align 4, !dbg !9084
  %26 = load i32, i32* %max_qty, align 4, !dbg !9085
  %cmp16 = icmp ule i32 %25, %26, !dbg !9086
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !9087

land.rhs:                                         ; preds = %land.lhs.true
  %27 = load i32, i32* %max_qty, align 4, !dbg !9088
  %28 = load i32, i32* %x, align 4, !dbg !9089
  %sub = sub i32 %27, %28, !dbg !9090
  %29 = load i32, i32* %qty, align 4, !dbg !9091
  %cmp17 = icmp uge i32 %sub, %29, !dbg !9092
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %30 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp17, %land.rhs ], !dbg !9093
  br i1 %30, label %for.body, label %for.end, !dbg !9094

for.body:                                         ; preds = %land.end
  %31 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9095
  %32 = load i32, i32* %arg.addr, align 4, !dbg !9097
  %33 = load i32, i32* %qty, align 4, !dbg !9098
  %34 = load i32, i32* %x, align 4, !dbg !9099
  %add = add i32 %33, %34, !dbg !9100
  %call = call i32 @mmc_erase_timeout(%struct.mmc_card* %31, i32 %32, i32 %add) #10, !dbg !9101
  store i32 %call, i32* %timeout, align 4, !dbg !9102
  %35 = load i32, i32* %qty, align 4, !dbg !9103
  %36 = load i32, i32* %x, align 4, !dbg !9105
  %add18 = add i32 %35, %36, !dbg !9106
  %37 = load i32, i32* %min_qty, align 4, !dbg !9107
  %cmp19 = icmp ugt i32 %add18, %37, !dbg !9108
  br i1 %cmp19, label %land.lhs.true20, label %if.end23, !dbg !9109

land.lhs.true20:                                  ; preds = %for.body
  %38 = load i32, i32* %timeout, align 4, !dbg !9110
  %39 = load i32, i32* %max_busy_timeout, align 4, !dbg !9111
  %cmp21 = icmp ugt i32 %38, %39, !dbg !9112
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !9113

if.then22:                                        ; preds = %land.lhs.true20
  br label %for.end, !dbg !9114

if.end23:                                         ; preds = %land.lhs.true20, %for.body
  %40 = load i32, i32* %timeout, align 4, !dbg !9115
  %41 = load i32, i32* %last_timeout, align 4, !dbg !9117
  %cmp24 = icmp ult i32 %40, %41, !dbg !9118
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !9119

if.then25:                                        ; preds = %if.end23
  br label %for.end, !dbg !9120

if.end26:                                         ; preds = %if.end23
  %42 = load i32, i32* %timeout, align 4, !dbg !9121
  store i32 %42, i32* %last_timeout, align 4, !dbg !9122
  %43 = load i32, i32* %x, align 4, !dbg !9123
  store i32 %43, i32* %y, align 4, !dbg !9124
  br label %for.inc, !dbg !9125

for.inc:                                          ; preds = %if.end26
  %44 = load i32, i32* %x, align 4, !dbg !9126
  %shl = shl i32 %44, 1, !dbg !9126
  store i32 %shl, i32* %x, align 4, !dbg !9126
  br label %for.cond, !dbg !9127, !llvm.loop !9128

for.end:                                          ; preds = %if.then25, %if.then22, %land.end
  %45 = load i32, i32* %y, align 4, !dbg !9130
  %46 = load i32, i32* %qty, align 4, !dbg !9131
  %add27 = add i32 %46, %45, !dbg !9131
  store i32 %add27, i32* %qty, align 4, !dbg !9131
  br label %do.cond, !dbg !9132

do.cond:                                          ; preds = %for.end
  %47 = load i32, i32* %y, align 4, !dbg !9133
  %tobool28 = icmp ne i32 %47, 0, !dbg !9132
  br i1 %tobool28, label %do.body, label %do.end, !dbg !9132, !llvm.loop !9134

do.end:                                           ; preds = %do.cond
  %48 = load i32, i32* %qty, align 4, !dbg !9136
  %tobool29 = icmp ne i32 %48, 0, !dbg !9136
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !9138

if.then30:                                        ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9139
  br label %return, !dbg !9139

if.end31:                                         ; preds = %do.end
  %49 = load i32, i32* %qty, align 4, !dbg !9140
  %cmp32 = icmp eq i32 %49, 1, !dbg !9142
  br i1 %cmp32, label %if.then33, label %if.else34, !dbg !9143

if.then33:                                        ; preds = %if.end31
  %50 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9144
  %eg_boundary = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %50, i32 0, i32 12, !dbg !9145
  store i32 1, i32* %eg_boundary, align 8, !dbg !9146
  br label %if.end35, !dbg !9144

if.else34:                                        ; preds = %if.end31
  %51 = load i32, i32* %qty, align 4, !dbg !9147
  %dec = add i32 %51, -1, !dbg !9147
  store i32 %dec, i32* %qty, align 4, !dbg !9147
  br label %if.end35

if.end35:                                         ; preds = %if.else34, %if.then33
  %52 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9148
  %erase_shift36 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %52, i32 0, i32 10, !dbg !9150
  %53 = load i32, i32* %erase_shift36, align 8, !dbg !9150
  %tobool37 = icmp ne i32 %53, 0, !dbg !9148
  br i1 %tobool37, label %if.then38, label %if.else41, !dbg !9151

if.then38:                                        ; preds = %if.end35
  %54 = load i32, i32* %qty, align 4, !dbg !9152
  %55 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9153
  %erase_shift39 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %55, i32 0, i32 10, !dbg !9154
  %56 = load i32, i32* %erase_shift39, align 8, !dbg !9154
  %shl40 = shl i32 %54, %56, !dbg !9155
  store i32 %shl40, i32* %max_discard, align 4, !dbg !9156
  br label %if.end49, !dbg !9157

if.else41:                                        ; preds = %if.end35
  %57 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9158
  %type42 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %57, i32 0, i32 4, !dbg !9158
  %58 = load i32, i32* %type42, align 8, !dbg !9158
  %cmp43 = icmp eq i32 %58, 1, !dbg !9158
  br i1 %cmp43, label %if.then44, label %if.else46, !dbg !9160

if.then44:                                        ; preds = %if.else41
  %59 = load i32, i32* %qty, align 4, !dbg !9161
  %add45 = add i32 %59, 1, !dbg !9162
  store i32 %add45, i32* %max_discard, align 4, !dbg !9163
  br label %if.end48, !dbg !9164

if.else46:                                        ; preds = %if.else41
  %60 = load i32, i32* %qty, align 4, !dbg !9165
  %61 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9166
  %erase_size47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %61, i32 0, i32 9, !dbg !9167
  %62 = load i32, i32* %erase_size47, align 4, !dbg !9167
  %mul = mul i32 %60, %62, !dbg !9168
  store i32 %mul, i32* %max_discard, align 4, !dbg !9169
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then44
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then38
  %63 = load i32, i32* %max_discard, align 4, !dbg !9170
  store i32 %63, i32* %retval, align 4, !dbg !9171
  br label %return, !dbg !9171

return:                                           ; preds = %if.end49, %if.then30
  %64 = load i32, i32* %retval, align 4, !dbg !9172
  ret i32 %64, !dbg !9172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mmc_card_is_blockaddr(%struct.mmc_card* %card) #0 !dbg !9173 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9178
  %tobool = icmp ne %struct.mmc_card* %0, null, !dbg !9178
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9178

cond.true:                                        ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9179
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 5, !dbg !9179
  %2 = load i32, i32* %state, align 4, !dbg !9179
  %and = and i32 %2, 4, !dbg !9179
  br label %cond.end, !dbg !9178

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and, %cond.true ], [ 0, %cond.false ], !dbg !9178
  %tobool1 = icmp ne i32 %cond, 0, !dbg !9178
  ret i1 %tobool1, !dbg !9180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_set_blocklen(%struct.mmc_card* %card, i32 %blocklen) #0 !dbg !9181 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %blocklen.addr = alloca i32, align 4
  %cmd = alloca %struct.mmc_command, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9184, metadata !DIExpression()), !dbg !9185
  store i32 %blocklen, i32* %blocklen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blocklen.addr, metadata !9186, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.declare(metadata %struct.mmc_command* %cmd, metadata !9188, metadata !DIExpression()), !dbg !9189
  %0 = bitcast %struct.mmc_command* %cmd to i8*, !dbg !9189
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !9189
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9190
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 5, !dbg !9190
  %2 = load i32, i32* %state, align 4, !dbg !9190
  %and = and i32 %2, 4, !dbg !9190
  %tobool = icmp ne i32 %and, 0, !dbg !9190
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9192

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9193
  %call = call zeroext i1 @mmc_card_ddr52(%struct.mmc_card* %3) #10, !dbg !9194
  br i1 %call, label %if.then, label %lor.lhs.false1, !dbg !9195

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9196
  %call2 = call zeroext i1 @mmc_card_hs400(%struct.mmc_card* %4) #10, !dbg !9197
  br i1 %call2, label %if.then, label %lor.lhs.false3, !dbg !9198

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9199
  %call4 = call zeroext i1 @mmc_card_hs400es(%struct.mmc_card* %5) #10, !dbg !9200
  br i1 %call4, label %if.then, label %if.end, !dbg !9201

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !9202
  br label %return, !dbg !9202

if.end:                                           ; preds = %lor.lhs.false3
  %opcode = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 0, !dbg !9203
  store i32 16, i32* %opcode, align 8, !dbg !9204
  %6 = load i32, i32* %blocklen.addr, align 4, !dbg !9205
  %arg = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 1, !dbg !9206
  store i32 %6, i32* %arg, align 4, !dbg !9207
  %flags = getelementptr inbounds %struct.mmc_command, %struct.mmc_command* %cmd, i32 0, i32 3, !dbg !9208
  store i32 149, i32* %flags, align 8, !dbg !9209
  %7 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9210
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %7, i32 0, i32 0, !dbg !9211
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9211
  %call5 = call i32 @mmc_wait_for_cmd(%struct.mmc_host* %8, %struct.mmc_command* %cmd, i32 5) #10, !dbg !9212
  store i32 %call5, i32* %retval, align 4, !dbg !9213
  br label %return, !dbg !9213

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9214
  ret i32 %9, !dbg !9214
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_card_ddr52(%struct.mmc_card* %card) #0 !dbg !9215 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9216, metadata !DIExpression()), !dbg !9217
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9218
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !9219
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9219
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !9220
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !9221
  %2 = load i8, i8* %timing, align 4, !dbg !9221
  %conv = zext i8 %2 to i32, !dbg !9218
  %cmp = icmp eq i32 %conv, 8, !dbg !9222
  ret i1 %cmp, !dbg !9223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_card_hs400(%struct.mmc_card* %card) #0 !dbg !9224 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9225, metadata !DIExpression()), !dbg !9226
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9227
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !9228
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9228
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !9229
  %timing = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 7, !dbg !9230
  %2 = load i8, i8* %timing, align 4, !dbg !9230
  %conv = zext i8 %2 to i32, !dbg !9227
  %cmp = icmp eq i32 %conv, 10, !dbg !9231
  ret i1 %cmp, !dbg !9232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mmc_card_hs400es(%struct.mmc_card* %card) #0 !dbg !9233 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !9234, metadata !DIExpression()), !dbg !9235
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !9236
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 0, !dbg !9237
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9237
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 29, !dbg !9238
  %enhanced_strobe = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 10, !dbg !9239
  %2 = load i8, i8* %enhanced_strobe, align 1, !dbg !9239
  %tobool = trunc i8 %2 to i1, !dbg !9239
  ret i1 %tobool, !dbg !9240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_hw_reset(%struct.mmc_host* %host) #0 !dbg !9241 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ret = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9242, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9244, metadata !DIExpression()), !dbg !9245
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9246
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !9248
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9248
  %tobool = icmp ne %struct.mmc_card* %1, null, !dbg !9246
  br i1 %tobool, label %if.end, label %if.then, !dbg !9249

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9250
  br label %return, !dbg !9250

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9251
  call void @mmc_bus_get(%struct.mmc_host* %2) #10, !dbg !9252
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9253
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 46, !dbg !9255
  %4 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !9255
  %tobool1 = icmp ne %struct.mmc_bus_ops* %4, null, !dbg !9253
  br i1 %tobool1, label %lor.lhs.false, label %if.then6, !dbg !9256

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9257
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 30, !dbg !9258
  %bf.load = load i16, i16* %bus_dead, align 32, !dbg !9258
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !9258
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9258
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9258
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !9257
  br i1 %tobool2, label %if.then6, label %lor.lhs.false3, !dbg !9259

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9260
  %bus_ops4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 46, !dbg !9261
  %7 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops4, align 8, !dbg !9261
  %hw_reset = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %7, i32 0, i32 9, !dbg !9262
  %8 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %hw_reset, align 8, !dbg !9262
  %tobool5 = icmp ne i32 (%struct.mmc_host*)* %8, null, !dbg !9260
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9263

if.then6:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9264
  call void @mmc_bus_put(%struct.mmc_host* %9) #10, !dbg !9266
  store i32 -95, i32* %retval, align 4, !dbg !9267
  br label %return, !dbg !9267

if.end7:                                          ; preds = %lor.lhs.false3
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9268
  %bus_ops8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 46, !dbg !9269
  %11 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops8, align 8, !dbg !9269
  %hw_reset9 = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %11, i32 0, i32 9, !dbg !9270
  %12 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %hw_reset9, align 8, !dbg !9270
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9271
  %call = call i32 %12(%struct.mmc_host* %13) #10, !dbg !9268
  store i32 %call, i32* %ret, align 4, !dbg !9272
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9273
  call void @mmc_bus_put(%struct.mmc_host* %14) #10, !dbg !9274
  %15 = load i32, i32* %ret, align 4, !dbg !9275
  %cmp = icmp slt i32 %15, 0, !dbg !9277
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !9278

if.then10:                                        ; preds = %if.end7
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9279
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 1, !dbg !9279
  %call11 = call i8* @dev_name(%struct.device* %class_dev) #10, !dbg !9279
  %17 = load i32, i32* %ret, align 4, !dbg !9279
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %call11, i32 %17) #11, !dbg !9279
  br label %if.end13, !dbg !9279

if.end13:                                         ; preds = %if.then10, %if.end7
  %18 = load i32, i32* %ret, align 4, !dbg !9280
  store i32 %18, i32* %retval, align 4, !dbg !9281
  br label %return, !dbg !9281

return:                                           ; preds = %if.end13, %if.then6, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9282
  ret i32 %19, !dbg !9282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_bus_get(%struct.mmc_host* %host) #0 !dbg !9283 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !6591, metadata !DIExpression()), !dbg !9284
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !9286
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !9287
  %host.addr = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9294, metadata !DIExpression()), !dbg !9295
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9296, metadata !DIExpression()), !dbg !9297
  br label %do.body, !dbg !9298

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9299

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9303, metadata !DIExpression()), !dbg !9302
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9302
  %conv = zext i1 %cmp to i32, !dbg !9302
  store i32 1, i32* %tmp, align 4, !dbg !9302
  %0 = load i32, i32* %tmp, align 4, !dbg !9302
  br label %do.body2, !dbg !9304

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9305

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9306

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9308, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9312, metadata !DIExpression()), !dbg !9311
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9311
  %conv8 = zext i1 %cmp7 to i32, !dbg !9311
  store i32 1, i32* %tmp9, align 4, !dbg !9311
  %1 = load i32, i32* %tmp9, align 4, !dbg !9311
  %call = call i64 @arch_local_irq_save() #10, !dbg !9313
  store i64 %call, i64* %flags, align 8, !dbg !9313
  br label %do.end, !dbg !9313

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9306

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9305

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9314, !srcloc !9315
  br label %do.body12, !dbg !9314

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9316
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 28, !dbg !9316
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9317
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9318
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !9318
  br label %do.end14, !dbg !9316

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9314

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9305

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9304

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9299

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9319
  %bus_refs = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 47, !dbg !9320
  %6 = load i32, i32* %bus_refs, align 16, !dbg !9321
  %inc = add i32 %6, 1, !dbg !9321
  store i32 %inc, i32* %bus_refs, align 16, !dbg !9321
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9322
  %lock19 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 28, !dbg !9323
  %8 = load i64, i64* %flags, align 8, !dbg !9324
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !9325
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !9325
  store i32 1, i32* %tmp.i, align 4, !dbg !9325
  %9 = load i32, i32* %tmp.i, align 4, !dbg !9325
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !9326
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !9326
  store i32 1, i32* %tmp8.i, align 4, !dbg !9326
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !9326
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !9327
  call void @arch_local_irq_restore(i64 %11) #13, !dbg !9327
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9328, !srcloc !6776
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !9329
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !9329
  %rlock.i21 = bitcast %union.anon.2* %13 to %struct.raw_spinlock*, !dbg !9329
  ret void, !dbg !9330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_sw_reset(%struct.mmc_host* %host) #0 !dbg !9331 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ret = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9332, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9334, metadata !DIExpression()), !dbg !9335
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9336
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !9338
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9338
  %tobool = icmp ne %struct.mmc_card* %1, null, !dbg !9336
  br i1 %tobool, label %if.end, label %if.then, !dbg !9339

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9340
  br label %return, !dbg !9340

if.end:                                           ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9341
  call void @mmc_bus_get(%struct.mmc_host* %2) #10, !dbg !9342
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9343
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 46, !dbg !9345
  %4 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !9345
  %tobool1 = icmp ne %struct.mmc_bus_ops* %4, null, !dbg !9343
  br i1 %tobool1, label %lor.lhs.false, label %if.then6, !dbg !9346

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9347
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 30, !dbg !9348
  %bf.load = load i16, i16* %bus_dead, align 32, !dbg !9348
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !9348
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9348
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9348
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !9347
  br i1 %tobool2, label %if.then6, label %lor.lhs.false3, !dbg !9349

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9350
  %bus_ops4 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 46, !dbg !9351
  %7 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops4, align 8, !dbg !9351
  %sw_reset = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %7, i32 0, i32 10, !dbg !9352
  %8 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %sw_reset, align 8, !dbg !9352
  %tobool5 = icmp ne i32 (%struct.mmc_host*)* %8, null, !dbg !9350
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9353

if.then6:                                         ; preds = %lor.lhs.false3, %lor.lhs.false, %if.end
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9354
  call void @mmc_bus_put(%struct.mmc_host* %9) #10, !dbg !9356
  store i32 -95, i32* %retval, align 4, !dbg !9357
  br label %return, !dbg !9357

if.end7:                                          ; preds = %lor.lhs.false3
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9358
  %bus_ops8 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 46, !dbg !9359
  %11 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops8, align 8, !dbg !9359
  %sw_reset9 = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %11, i32 0, i32 10, !dbg !9360
  %12 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %sw_reset9, align 8, !dbg !9360
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9361
  %call = call i32 %12(%struct.mmc_host* %13) #10, !dbg !9358
  store i32 %call, i32* %ret, align 4, !dbg !9362
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9363
  call void @mmc_bus_put(%struct.mmc_host* %14) #10, !dbg !9364
  %15 = load i32, i32* %ret, align 4, !dbg !9365
  %tobool10 = icmp ne i32 %15, 0, !dbg !9365
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !9367

if.then11:                                        ; preds = %if.end7
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9368
  %class_dev = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 1, !dbg !9368
  %call12 = call i8* @dev_name(%struct.device* %class_dev) #10, !dbg !9368
  %17 = load i32, i32* %ret, align 4, !dbg !9368
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %call12, i32 %17) #11, !dbg !9368
  br label %if.end14, !dbg !9368

if.end14:                                         ; preds = %if.then11, %if.end7
  %18 = load i32, i32* %ret, align 4, !dbg !9369
  store i32 %18, i32* %retval, align 4, !dbg !9370
  br label %return, !dbg !9370

return:                                           ; preds = %if.end14, %if.then6, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9371
  ret i32 %19, !dbg !9371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @_mmc_detect_card_removed(%struct.mmc_host* %host) #0 !dbg !9372 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !9373, metadata !DIExpression()), !dbg !9378
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9382, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9384, metadata !DIExpression()), !dbg !9385
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9386
  %card = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !9388
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9388
  %tobool = icmp ne %struct.mmc_card* %1, null, !dbg !9386
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9389

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9390
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 38, !dbg !9390
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !9390
  %tobool2 = icmp ne %struct.mmc_card* %3, null, !dbg !9390
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !9390

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9390
  %card3 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 38, !dbg !9390
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card3, align 8, !dbg !9390
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %5, i32 0, i32 5, !dbg !9390
  %6 = load i32, i32* %state, align 4, !dbg !9390
  %and = and i32 %6, 16, !dbg !9390
  %tobool4 = icmp ne i32 %and, 0, !dbg !9390
  br i1 %tobool4, label %if.then, label %if.end, !dbg !9391

if.then:                                          ; preds = %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !9392
  br label %return, !dbg !9392

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9393
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 46, !dbg !9394
  %8 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !9394
  %alive = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %8, i32 0, i32 7, !dbg !9395
  %9 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %alive, align 8, !dbg !9395
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9396
  %call = call i32 %9(%struct.mmc_host* %10) #10, !dbg !9393
  store i32 %call, i32* %ret, align 4, !dbg !9397
  %11 = load i32, i32* %ret, align 4, !dbg !9398
  %tobool5 = icmp ne i32 %11, 0, !dbg !9398
  br i1 %tobool5, label %if.end15, label %land.lhs.true6, !dbg !9399

land.lhs.true6:                                   ; preds = %if.end
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9400
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 3, !dbg !9401
  %13 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !9401
  %get_cd = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %13, i32 0, i32 6, !dbg !9402
  %14 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %get_cd, align 8, !dbg !9402
  %tobool7 = icmp ne i32 (%struct.mmc_host*)* %14, null, !dbg !9400
  br i1 %tobool7, label %land.lhs.true8, label %if.end15, !dbg !9403

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9404
  %ops9 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %15, i32 0, i32 3, !dbg !9405
  %16 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops9, align 8, !dbg !9405
  %get_cd10 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %16, i32 0, i32 6, !dbg !9406
  %17 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %get_cd10, align 8, !dbg !9406
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9407
  %call11 = call i32 %17(%struct.mmc_host* %18) #10, !dbg !9404
  %tobool12 = icmp ne i32 %call11, 0, !dbg !9404
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !9408

if.then13:                                        ; preds = %land.lhs.true8
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9409
  store i32 200, i32* %m.addr.i, align 4
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !9410
  %21 = call i1 @llvm.is.constant.i32(i32 %20) #8, !dbg !9412
  br i1 %21, label %if.then.i, label %if.else.i, !dbg !9413

if.then.i:                                        ; preds = %if.then13
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !9414
  %cmp.i = icmp slt i32 %22, 0, !dbg !9417
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9418

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9419
  br label %msecs_to_jiffies.exit, !dbg !9419

if.end.i:                                         ; preds = %if.then.i
  %23 = load i32, i32* %m.addr.i, align 4, !dbg !9420
  %call.i = call i64 @_msecs_to_jiffies(i32 %23) #13, !dbg !9421
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9422
  br label %msecs_to_jiffies.exit, !dbg !9422

if.else.i:                                        ; preds = %if.then13
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !9423
  %call2.i = call i64 @__msecs_to_jiffies(i32 %24) #13, !dbg !9425
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9426
  br label %msecs_to_jiffies.exit, !dbg !9426

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %25 = load i64, i64* %retval.i, align 8, !dbg !9427
  call void @mmc_detect_change(%struct.mmc_host* %19, i64 %25) #10, !dbg !9428
  store i32 0, i32* %tmp, align 4, !dbg !9429
  %26 = load i32, i32* %tmp, align 4, !dbg !9432
  br label %if.end15, !dbg !9433

if.end15:                                         ; preds = %msecs_to_jiffies.exit, %land.lhs.true8, %land.lhs.true6, %if.end
  %27 = load i32, i32* %ret, align 4, !dbg !9434
  %tobool16 = icmp ne i32 %27, 0, !dbg !9434
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !9436

if.then17:                                        ; preds = %if.end15
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9437
  %card18 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %28, i32 0, i32 38, !dbg !9437
  %29 = load %struct.mmc_card*, %struct.mmc_card** %card18, align 8, !dbg !9437
  %state19 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %29, i32 0, i32 5, !dbg !9437
  %30 = load i32, i32* %state19, align 4, !dbg !9437
  %or = or i32 %30, 16, !dbg !9437
  store i32 %or, i32* %state19, align 4, !dbg !9437
  store i32 0, i32* %tmp20, align 4, !dbg !9439
  %31 = load i32, i32* %tmp20, align 4, !dbg !9442
  br label %if.end21, !dbg !9443

if.end21:                                         ; preds = %if.then17, %if.end15
  %32 = load i32, i32* %ret, align 4, !dbg !9444
  store i32 %32, i32* %retval, align 4, !dbg !9445
  br label %return, !dbg !9445

return:                                           ; preds = %if.end21, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !9446
  ret i32 %33, !dbg !9446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mmc_detect_card_removed(%struct.mmc_host* %host) #0 !dbg !9447 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %card = alloca %struct.mmc_card*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9448, metadata !DIExpression()), !dbg !9449
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card, metadata !9450, metadata !DIExpression()), !dbg !9451
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9452
  %card1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 38, !dbg !9453
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card1, align 8, !dbg !9453
  store %struct.mmc_card* %1, %struct.mmc_card** %card, align 8, !dbg !9451
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9454, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9456, metadata !DIExpression()), !dbg !9458
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9458
  %claimed = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %2, i32 0, i32 30, !dbg !9458
  %bf.load = load i16, i16* %claimed, align 32, !dbg !9458
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !9458
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9458
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9458
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9458
  %lnot = xor i1 %tobool, true, !dbg !9458
  %lnot2 = xor i1 %lnot, true, !dbg !9458
  %lnot3 = xor i1 %lnot2, true, !dbg !9458
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9458
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9458
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9459
  %tobool4 = icmp ne i32 %3, 0, !dbg !9459
  %lnot5 = xor i1 %tobool4, true, !dbg !9459
  %lnot7 = xor i1 %lnot5, true, !dbg !9459
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9459
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9459
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9459
  br i1 %tobool9, label %if.then, label %if.end, !dbg !9458

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9459

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !9461

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !9463

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !9461

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 2204, i32 2305, i64 12) #8, !dbg !9465, !srcloc !9467
  br label %do.end12, !dbg !9465

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #8, !dbg !9468, !srcloc !9470
  br label %do.body13, !dbg !9461

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !9471

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !9461

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !9461

if.end:                                           ; preds = %do.end15, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9458
  %tobool16 = icmp ne i32 %4, 0, !dbg !9458
  %lnot17 = xor i1 %tobool16, true, !dbg !9458
  %lnot19 = xor i1 %lnot17, true, !dbg !9458
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !9458
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !9458
  store i64 %conv21, i64* %tmp, align 8, !dbg !9459
  %5 = load i64, i64* %tmp, align 8, !dbg !9458
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9473
  %tobool22 = icmp ne %struct.mmc_card* %6, null, !dbg !9473
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !9475

if.then23:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9476
  br label %return, !dbg !9476

if.end24:                                         ; preds = %if.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9477
  %call = call i32 @mmc_card_is_removable(%struct.mmc_host* %7) #10, !dbg !9479
  %tobool25 = icmp ne i32 %call, 0, !dbg !9479
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !9480

if.then26:                                        ; preds = %if.end24
  store i32 0, i32* %retval, align 4, !dbg !9481
  br label %return, !dbg !9481

if.end27:                                         ; preds = %if.end24
  %8 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9482
  %tobool28 = icmp ne %struct.mmc_card* %8, null, !dbg !9482
  br i1 %tobool28, label %land.rhs, label %land.end, !dbg !9482

land.rhs:                                         ; preds = %if.end27
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card, align 8, !dbg !9482
  %state = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 5, !dbg !9482
  %10 = load i32, i32* %state, align 4, !dbg !9482
  %and = and i32 %10, 16, !dbg !9482
  %tobool29 = icmp ne i32 %and, 0, !dbg !9482
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end27
  %11 = phi i1 [ false, %if.end27 ], [ %tobool29, %land.rhs ], !dbg !9483
  %land.ext = zext i1 %11 to i32, !dbg !9482
  store i32 %land.ext, i32* %ret, align 4, !dbg !9484
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9485
  %detect_change = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 44, !dbg !9487
  %13 = load i32, i32* %detect_change, align 16, !dbg !9487
  %tobool30 = icmp ne i32 %13, 0, !dbg !9485
  br i1 %tobool30, label %if.end34, label %land.lhs.true, !dbg !9488

land.lhs.true:                                    ; preds = %land.end
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9489
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 17, !dbg !9490
  %15 = load i32, i32* %caps, align 4, !dbg !9490
  %and31 = and i32 %15, 32, !dbg !9491
  %tobool32 = icmp ne i32 %and31, 0, !dbg !9491
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !9492

if.then33:                                        ; preds = %land.lhs.true
  %16 = load i32, i32* %ret, align 4, !dbg !9493
  store i32 %16, i32* %retval, align 4, !dbg !9494
  br label %return, !dbg !9494

if.end34:                                         ; preds = %land.lhs.true, %land.end
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9495
  %detect_change35 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 44, !dbg !9496
  store i32 0, i32* %detect_change35, align 16, !dbg !9497
  %18 = load i32, i32* %ret, align 4, !dbg !9498
  %tobool36 = icmp ne i32 %18, 0, !dbg !9498
  br i1 %tobool36, label %if.end47, label %if.then37, !dbg !9500

if.then37:                                        ; preds = %if.end34
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9501
  %call38 = call i32 @_mmc_detect_card_removed(%struct.mmc_host* %19) #10, !dbg !9503
  store i32 %call38, i32* %ret, align 4, !dbg !9504
  %20 = load i32, i32* %ret, align 4, !dbg !9505
  %tobool39 = icmp ne i32 %20, 0, !dbg !9505
  br i1 %tobool39, label %land.lhs.true40, label %if.end46, !dbg !9507

land.lhs.true40:                                  ; preds = %if.then37
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9508
  %caps41 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %21, i32 0, i32 17, !dbg !9509
  %22 = load i32, i32* %caps41, align 4, !dbg !9509
  %and42 = and i32 %22, 32, !dbg !9510
  %tobool43 = icmp ne i32 %and42, 0, !dbg !9510
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !9511

if.then44:                                        ; preds = %land.lhs.true40
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9512
  %detect = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %23, i32 0, i32 43, !dbg !9514
  %call45 = call zeroext i1 @cancel_delayed_work(%struct.delayed_work* %detect) #10, !dbg !9515
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9516
  call void @_mmc_detect_change(%struct.mmc_host* %24, i64 0, i1 zeroext false) #10, !dbg !9517
  br label %if.end46, !dbg !9518

if.end46:                                         ; preds = %if.then44, %land.lhs.true40, %if.then37
  br label %if.end47, !dbg !9519

if.end47:                                         ; preds = %if.end46, %if.end34
  %25 = load i32, i32* %ret, align 4, !dbg !9520
  store i32 %25, i32* %retval, align 4, !dbg !9521
  br label %return, !dbg !9521

return:                                           ; preds = %if.end47, %if.then33, %if.then26, %if.then23
  %26 = load i32, i32* %retval, align 4, !dbg !9522
  ret i32 %26, !dbg !9522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_card_is_removable(%struct.mmc_host* %host) #0 !dbg !9523 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9526
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 17, !dbg !9527
  %1 = load i32, i32* %caps, align 4, !dbg !9527
  %and = and i32 %1, 256, !dbg !9528
  %tobool = icmp ne i32 %and, 0, !dbg !9529
  %lnot = xor i1 %tobool, true, !dbg !9529
  %lnot.ext = zext i1 %lnot to i32, !dbg !9529
  ret i32 %lnot.ext, !dbg !9530
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work(%struct.delayed_work*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_rescan(%struct.work_struct* %work) #0 !dbg !9531 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_host*, align 8
  %i = alloca i32, align 4
  %freq = alloca i32, align 4
  %__UNIQUE_ID___x309 = alloca i32, align 4
  %__UNIQUE_ID___y310 = alloca i32, align 4
  %tmp47 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9532, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9534, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9536, metadata !DIExpression()), !dbg !9538
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9538
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !9538
  store i8* %1, i8** %__mptr, align 8, !dbg !9538
  br label %do.body, !dbg !9538

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9539

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9538
  %add.ptr = getelementptr i8, i8* %2, i64 -984, !dbg !9538
  %3 = bitcast i8* %add.ptr to %struct.mmc_host*, !dbg !9538
  store %struct.mmc_host* %3, %struct.mmc_host** %tmp, align 8, !dbg !9539
  %4 = load %struct.mmc_host*, %struct.mmc_host** %tmp, align 8, !dbg !9538
  store %struct.mmc_host* %4, %struct.mmc_host** %host, align 8, !dbg !9535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9541, metadata !DIExpression()), !dbg !9542
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9543
  %rescan_disable = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 31, !dbg !9545
  %6 = load i32, i32* %rescan_disable, align 4, !dbg !9545
  %tobool = icmp ne i32 %6, 0, !dbg !9543
  br i1 %tobool, label %if.then, label %if.end, !dbg !9546

if.then:                                          ; preds = %do.end
  br label %if.end65, !dbg !9547

if.end:                                           ; preds = %do.end
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9548
  %call = call i32 @mmc_card_is_removable(%struct.mmc_host* %7) #10, !dbg !9550
  %tobool1 = icmp ne i32 %call, 0, !dbg !9550
  br i1 %tobool1, label %if.end4, label %land.lhs.true, !dbg !9551

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9552
  %rescan_entered = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 32, !dbg !9553
  %9 = load i32, i32* %rescan_entered, align 8, !dbg !9553
  %tobool2 = icmp ne i32 %9, 0, !dbg !9552
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9554

if.then3:                                         ; preds = %land.lhs.true
  br label %if.end65, !dbg !9555

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9556
  %rescan_entered5 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %10, i32 0, i32 32, !dbg !9557
  store i32 1, i32* %rescan_entered5, align 8, !dbg !9558
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9559
  %trigger_card_event = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 37, !dbg !9561
  %12 = load i8, i8* %trigger_card_event, align 32, !dbg !9561
  %tobool6 = trunc i8 %12 to i1, !dbg !9561
  br i1 %tobool6, label %land.lhs.true7, label %if.end13, !dbg !9562

land.lhs.true7:                                   ; preds = %if.end4
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9563
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %13, i32 0, i32 3, !dbg !9564
  %14 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !9564
  %card_event = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %14, i32 0, i32 20, !dbg !9565
  %15 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %card_event, align 8, !dbg !9565
  %tobool8 = icmp ne void (%struct.mmc_host*)* %15, null, !dbg !9563
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !9566

if.then9:                                         ; preds = %land.lhs.true7
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9567
  call void @mmc_claim_host(%struct.mmc_host* %16) #10, !dbg !9569
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9570
  %ops10 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 3, !dbg !9571
  %18 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops10, align 8, !dbg !9571
  %card_event11 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %18, i32 0, i32 20, !dbg !9572
  %19 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %card_event11, align 8, !dbg !9572
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9573
  call void %19(%struct.mmc_host* %20) #10, !dbg !9570
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9574
  call void @mmc_release_host(%struct.mmc_host* %21) #10, !dbg !9575
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9576
  %trigger_card_event12 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 37, !dbg !9577
  store i8 0, i8* %trigger_card_event12, align 32, !dbg !9578
  br label %if.end13, !dbg !9579

if.end13:                                         ; preds = %if.then9, %land.lhs.true7, %if.end4
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9580
  call void @mmc_bus_get(%struct.mmc_host* %23) #10, !dbg !9581
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9582
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %24, i32 0, i32 46, !dbg !9584
  %25 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !9584
  %tobool14 = icmp ne %struct.mmc_bus_ops* %25, null, !dbg !9582
  br i1 %tobool14, label %land.lhs.true15, label %if.end19, !dbg !9585

land.lhs.true15:                                  ; preds = %if.end13
  %26 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9586
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %26, i32 0, i32 30, !dbg !9587
  %bf.load = load i16, i16* %bus_dead, align 32, !dbg !9587
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !9587
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9587
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9587
  %tobool16 = icmp ne i32 %bf.cast, 0, !dbg !9586
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !9588

if.then17:                                        ; preds = %land.lhs.true15
  %27 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9589
  %bus_ops18 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %27, i32 0, i32 46, !dbg !9590
  %28 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops18, align 8, !dbg !9590
  %detect = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %28, i32 0, i32 1, !dbg !9591
  %29 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %detect, align 8, !dbg !9591
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9592
  call void %29(%struct.mmc_host* %30) #10, !dbg !9589
  br label %if.end19, !dbg !9589

if.end19:                                         ; preds = %if.then17, %land.lhs.true15, %if.end13
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9593
  %detect_change = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %31, i32 0, i32 44, !dbg !9594
  store i32 0, i32* %detect_change, align 16, !dbg !9595
  %32 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9596
  call void @mmc_bus_put(%struct.mmc_host* %32) #10, !dbg !9597
  %33 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9598
  call void @mmc_bus_get(%struct.mmc_host* %33) #10, !dbg !9599
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9600
  %bus_ops20 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 46, !dbg !9602
  %35 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops20, align 8, !dbg !9602
  %cmp = icmp ne %struct.mmc_bus_ops* %35, null, !dbg !9603
  br i1 %cmp, label %if.then21, label %if.end22, !dbg !9604

if.then21:                                        ; preds = %if.end19
  %36 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9605
  call void @mmc_bus_put(%struct.mmc_host* %36) #10, !dbg !9607
  br label %out, !dbg !9608

if.end22:                                         ; preds = %if.end19
  %37 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9609
  call void @mmc_bus_put(%struct.mmc_host* %37) #10, !dbg !9610
  %38 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9611
  call void @mmc_claim_host(%struct.mmc_host* %38) #10, !dbg !9612
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9613
  %call23 = call i32 @mmc_card_is_removable(%struct.mmc_host* %39) #10, !dbg !9615
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9615
  br i1 %tobool24, label %land.lhs.true25, label %if.end34, !dbg !9616

land.lhs.true25:                                  ; preds = %if.end22
  %40 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9617
  %ops26 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %40, i32 0, i32 3, !dbg !9618
  %41 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops26, align 8, !dbg !9618
  %get_cd = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %41, i32 0, i32 6, !dbg !9619
  %42 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %get_cd, align 8, !dbg !9619
  %tobool27 = icmp ne i32 (%struct.mmc_host*)* %42, null, !dbg !9617
  br i1 %tobool27, label %land.lhs.true28, label %if.end34, !dbg !9620

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %43 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9621
  %ops29 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %43, i32 0, i32 3, !dbg !9622
  %44 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops29, align 8, !dbg !9622
  %get_cd30 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %44, i32 0, i32 6, !dbg !9623
  %45 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %get_cd30, align 8, !dbg !9623
  %46 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9624
  %call31 = call i32 %45(%struct.mmc_host* %46) #10, !dbg !9621
  %cmp32 = icmp eq i32 %call31, 0, !dbg !9625
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !9626

if.then33:                                        ; preds = %land.lhs.true28
  %47 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9627
  call void @mmc_power_off(%struct.mmc_host* %47) #10, !dbg !9629
  %48 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9630
  call void @mmc_release_host(%struct.mmc_host* %48) #10, !dbg !9631
  br label %out, !dbg !9632

if.end34:                                         ; preds = %land.lhs.true28, %land.lhs.true25, %if.end22
  store i32 0, i32* %i, align 4, !dbg !9633
  br label %for.cond, !dbg !9635

for.cond:                                         ; preds = %for.inc, %if.end34
  %49 = load i32, i32* %i, align 4, !dbg !9636
  %conv = sext i32 %49 to i64, !dbg !9636
  %cmp35 = icmp ult i64 %conv, 4, !dbg !9638
  br i1 %cmp35, label %for.body, label %for.end, !dbg !9639

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !9640, metadata !DIExpression()), !dbg !9642
  %50 = load i32, i32* %i, align 4, !dbg !9643
  %idxprom = sext i32 %50 to i64, !dbg !9644
  %arrayidx = getelementptr [4 x i32], [4 x i32]* @freqs, i64 0, i64 %idxprom, !dbg !9644
  %51 = load i32, i32* %arrayidx, align 4, !dbg !9644
  store i32 %51, i32* %freq, align 4, !dbg !9642
  %52 = load i32, i32* %freq, align 4, !dbg !9645
  %53 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9647
  %f_max = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %53, i32 0, i32 6, !dbg !9648
  %54 = load i32, i32* %f_max, align 4, !dbg !9648
  %cmp37 = icmp ugt i32 %52, %54, !dbg !9649
  br i1 %cmp37, label %if.then39, label %if.end46, !dbg !9650

if.then39:                                        ; preds = %for.body
  %55 = load i32, i32* %i, align 4, !dbg !9651
  %add = add i32 %55, 1, !dbg !9654
  %conv40 = sext i32 %add to i64, !dbg !9651
  %cmp41 = icmp ult i64 %conv40, 4, !dbg !9655
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !9656

if.then43:                                        ; preds = %if.then39
  br label %for.inc, !dbg !9657

if.end44:                                         ; preds = %if.then39
  %56 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9658
  %f_max45 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %56, i32 0, i32 6, !dbg !9659
  %57 = load i32, i32* %f_max45, align 4, !dbg !9659
  store i32 %57, i32* %freq, align 4, !dbg !9660
  br label %if.end46, !dbg !9661

if.end46:                                         ; preds = %if.end44, %for.body
  %58 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9662
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x309, metadata !9664, metadata !DIExpression()), !dbg !9666
  %59 = load i32, i32* %freq, align 4, !dbg !9666
  store i32 %59, i32* %__UNIQUE_ID___x309, align 4, !dbg !9666
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y310, metadata !9667, metadata !DIExpression()), !dbg !9666
  %60 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9666
  %f_min = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %60, i32 0, i32 5, !dbg !9666
  %61 = load i32, i32* %f_min, align 8, !dbg !9666
  store i32 %61, i32* %__UNIQUE_ID___y310, align 4, !dbg !9666
  %62 = load i32, i32* %__UNIQUE_ID___x309, align 4, !dbg !9666
  %63 = load i32, i32* %__UNIQUE_ID___y310, align 4, !dbg !9666
  %cmp48 = icmp ugt i32 %62, %63, !dbg !9666
  br i1 %cmp48, label %cond.true, label %cond.false, !dbg !9666

cond.true:                                        ; preds = %if.end46
  %64 = load i32, i32* %__UNIQUE_ID___x309, align 4, !dbg !9666
  br label %cond.end, !dbg !9666

cond.false:                                       ; preds = %if.end46
  %65 = load i32, i32* %__UNIQUE_ID___y310, align 4, !dbg !9666
  br label %cond.end, !dbg !9666

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %64, %cond.true ], [ %65, %cond.false ], !dbg !9666
  store i32 %cond, i32* %tmp47, align 4, !dbg !9666
  %66 = load i32, i32* %tmp47, align 4, !dbg !9666
  %call50 = call i32 @mmc_rescan_try_freq(%struct.mmc_host* %58, i32 %66) #10, !dbg !9668
  %tobool51 = icmp ne i32 %call50, 0, !dbg !9668
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !9669

if.then52:                                        ; preds = %cond.end
  br label %for.end, !dbg !9670

if.end53:                                         ; preds = %cond.end
  %67 = load i32, i32* %i, align 4, !dbg !9671
  %idxprom54 = sext i32 %67 to i64, !dbg !9673
  %arrayidx55 = getelementptr [4 x i32], [4 x i32]* @freqs, i64 0, i64 %idxprom54, !dbg !9673
  %68 = load i32, i32* %arrayidx55, align 4, !dbg !9673
  %69 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9674
  %f_min56 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %69, i32 0, i32 5, !dbg !9675
  %70 = load i32, i32* %f_min56, align 8, !dbg !9675
  %cmp57 = icmp ule i32 %68, %70, !dbg !9676
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !9677

if.then59:                                        ; preds = %if.end53
  br label %for.end, !dbg !9678

if.end60:                                         ; preds = %if.end53
  br label %for.inc, !dbg !9679

for.inc:                                          ; preds = %if.end60, %if.then43
  %71 = load i32, i32* %i, align 4, !dbg !9680
  %inc = add i32 %71, 1, !dbg !9680
  store i32 %inc, i32* %i, align 4, !dbg !9680
  br label %for.cond, !dbg !9681, !llvm.loop !9682

for.end:                                          ; preds = %if.then59, %if.then52, %for.cond
  %72 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9684
  call void @mmc_release_host(%struct.mmc_host* %72) #10, !dbg !9685
  br label %out, !dbg !9685

out:                                              ; preds = %for.end, %if.then33, %if.then21
  call void @llvm.dbg.label(metadata !9686), !dbg !9687
  %73 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9688
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %73, i32 0, i32 17, !dbg !9690
  %74 = load i32, i32* %caps, align 4, !dbg !9690
  %and = and i32 %74, 32, !dbg !9691
  %tobool61 = icmp ne i32 %and, 0, !dbg !9691
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !9692

if.then62:                                        ; preds = %out
  %75 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9693
  %detect63 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %75, i32 0, i32 43, !dbg !9694
  %call64 = call i32 @mmc_schedule_delayed_work(%struct.delayed_work* %detect63, i64 250) #10, !dbg !9695
  br label %if.end65, !dbg !9695

if.end65:                                         ; preds = %if.then, %if.then3, %if.then62, %out
  ret void, !dbg !9696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_claim_host(%struct.mmc_host* %host) #0 !dbg !9697 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9700
  %call = call i32 @__mmc_claim_host(%struct.mmc_host* %0, %struct.mmc_ctx* null, %struct.atomic_t* null) #10, !dbg !9701
  ret void, !dbg !9702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_rescan_try_freq(%struct.mmc_host* %host, i32 %freq) #0 !dbg !9703 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca %struct.mmc_host*, align 8
  %freq.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  store i32 %freq, i32* %freq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %freq.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  %0 = load i32, i32* %freq.addr, align 4, !dbg !9710
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9711
  %f_init = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 7, !dbg !9712
  store i32 %0, i32* %f_init, align 32, !dbg !9713
  store i32 0, i32* %tmp, align 4, !dbg !9714
  %2 = load i32, i32* %tmp, align 4, !dbg !9717
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9718
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9719
  %ocr_avail = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 8, !dbg !9720
  %5 = load i32, i32* %ocr_avail, align 4, !dbg !9720
  call void @mmc_power_up(%struct.mmc_host* %3, i32 %5) #10, !dbg !9721
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9722
  call void @mmc_hw_reset_for_init(%struct.mmc_host* %6) #10, !dbg !9723
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9724
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 18, !dbg !9726
  %8 = load i32, i32* %caps2, align 8, !dbg !9726
  %and = and i32 %8, 524288, !dbg !9727
  %tobool = icmp ne i32 %and, 0, !dbg !9727
  br i1 %tobool, label %if.end, label %if.then, !dbg !9728

if.then:                                          ; preds = %entry
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9729
  %call = call i32 @sdio_reset(%struct.mmc_host* %9) #10, !dbg !9730
  br label %if.end, !dbg !9730

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9731
  %call1 = call i32 @mmc_go_idle(%struct.mmc_host* %10) #10, !dbg !9732
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9733
  %caps22 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 18, !dbg !9735
  %12 = load i32, i32* %caps22, align 8, !dbg !9735
  %and3 = and i32 %12, 2097152, !dbg !9736
  %tobool4 = icmp ne i32 %and3, 0, !dbg !9736
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !9737

if.then5:                                         ; preds = %if.end
  %13 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9738
  %14 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9739
  %ocr_avail6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %14, i32 0, i32 8, !dbg !9740
  %15 = load i32, i32* %ocr_avail6, align 4, !dbg !9740
  %call7 = call i32 @mmc_send_if_cond(%struct.mmc_host* %13, i32 %15) #10, !dbg !9741
  br label %if.end8, !dbg !9741

if.end8:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9742
  %caps29 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 18, !dbg !9744
  %17 = load i32, i32* %caps29, align 8, !dbg !9744
  %and10 = and i32 %17, 524288, !dbg !9745
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9745
  br i1 %tobool11, label %if.end17, label %if.then12, !dbg !9746

if.then12:                                        ; preds = %if.end8
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9747
  %call13 = call i32 @mmc_attach_sdio(%struct.mmc_host* %18) #10, !dbg !9749
  %tobool14 = icmp ne i32 %call13, 0, !dbg !9749
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9750

if.then15:                                        ; preds = %if.then12
  store i32 0, i32* %retval, align 4, !dbg !9751
  br label %return, !dbg !9751

if.end16:                                         ; preds = %if.then12
  br label %if.end17, !dbg !9752

if.end17:                                         ; preds = %if.end16, %if.end8
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9753
  %caps218 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 18, !dbg !9755
  %20 = load i32, i32* %caps218, align 8, !dbg !9755
  %and19 = and i32 %20, 2097152, !dbg !9756
  %tobool20 = icmp ne i32 %and19, 0, !dbg !9756
  br i1 %tobool20, label %if.end26, label %if.then21, !dbg !9757

if.then21:                                        ; preds = %if.end17
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9758
  %call22 = call i32 @mmc_attach_sd(%struct.mmc_host* %21) #10, !dbg !9760
  %tobool23 = icmp ne i32 %call22, 0, !dbg !9760
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !9761

if.then24:                                        ; preds = %if.then21
  store i32 0, i32* %retval, align 4, !dbg !9762
  br label %return, !dbg !9762

if.end25:                                         ; preds = %if.then21
  br label %if.end26, !dbg !9763

if.end26:                                         ; preds = %if.end25, %if.end17
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9764
  %caps227 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 18, !dbg !9766
  %23 = load i32, i32* %caps227, align 8, !dbg !9766
  %and28 = and i32 %23, 4194304, !dbg !9767
  %tobool29 = icmp ne i32 %and28, 0, !dbg !9767
  br i1 %tobool29, label %if.end35, label %if.then30, !dbg !9768

if.then30:                                        ; preds = %if.end26
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9769
  %call31 = call i32 @mmc_attach_mmc(%struct.mmc_host* %24) #10, !dbg !9771
  %tobool32 = icmp ne i32 %call31, 0, !dbg !9771
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !9772

if.then33:                                        ; preds = %if.then30
  store i32 0, i32* %retval, align 4, !dbg !9773
  br label %return, !dbg !9773

if.end34:                                         ; preds = %if.then30
  br label %if.end35, !dbg !9774

if.end35:                                         ; preds = %if.end34, %if.end26
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9775
  call void @mmc_power_off(%struct.mmc_host* %25) #10, !dbg !9776
  store i32 -5, i32* %retval, align 4, !dbg !9777
  br label %return, !dbg !9777

return:                                           ; preds = %if.end35, %if.then33, %if.then24, %if.then15
  %26 = load i32, i32* %retval, align 4, !dbg !9778
  ret i32 %26, !dbg !9778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_start_host(%struct.mmc_host* %host) #0 !dbg !9779 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %__UNIQUE_ID___x313 = alloca i32, align 4
  %__UNIQUE_ID___x311 = alloca i32, align 4
  %__UNIQUE_ID___y312 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y314 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x313, metadata !9782, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x311, metadata !9785, metadata !DIExpression()), !dbg !9787
  %0 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @freqs, i64 0, i64 0), align 16, !dbg !9787
  store i32 %0, i32* %__UNIQUE_ID___x311, align 4, !dbg !9787
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y312, metadata !9788, metadata !DIExpression()), !dbg !9787
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9787
  %f_max = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 6, !dbg !9787
  %2 = load i32, i32* %f_max, align 4, !dbg !9787
  store i32 %2, i32* %__UNIQUE_ID___y312, align 4, !dbg !9787
  %3 = load i32, i32* %__UNIQUE_ID___x311, align 4, !dbg !9787
  %4 = load i32, i32* %__UNIQUE_ID___y312, align 4, !dbg !9787
  %cmp = icmp ult i32 %3, %4, !dbg !9787
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9787

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___x311, align 4, !dbg !9787
  br label %cond.end, !dbg !9787

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %__UNIQUE_ID___y312, align 4, !dbg !9787
  br label %cond.end, !dbg !9787

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !9787
  store i32 %cond, i32* %tmp, align 4, !dbg !9787
  %7 = load i32, i32* %tmp, align 4, !dbg !9787
  store i32 %7, i32* %__UNIQUE_ID___x313, align 4, !dbg !9784
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y314, metadata !9789, metadata !DIExpression()), !dbg !9784
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9784
  %f_min = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 5, !dbg !9784
  %9 = load i32, i32* %f_min, align 8, !dbg !9784
  store i32 %9, i32* %__UNIQUE_ID___y314, align 4, !dbg !9784
  %10 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !9784
  %11 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !9784
  %cmp2 = icmp ugt i32 %10, %11, !dbg !9784
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !9784

cond.true3:                                       ; preds = %cond.end
  %12 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !9784
  br label %cond.end5, !dbg !9784

cond.false4:                                      ; preds = %cond.end
  %13 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !9784
  br label %cond.end5, !dbg !9784

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ %12, %cond.true3 ], [ %13, %cond.false4 ], !dbg !9784
  store i32 %cond6, i32* %tmp1, align 4, !dbg !9784
  %14 = load i32, i32* %tmp1, align 4, !dbg !9784
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9790
  %f_init = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %15, i32 0, i32 7, !dbg !9791
  store i32 %14, i32* %f_init, align 32, !dbg !9792
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9793
  %rescan_disable = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %16, i32 0, i32 31, !dbg !9794
  store i32 0, i32* %rescan_disable, align 4, !dbg !9795
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9796
  %caps2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %17, i32 0, i32 18, !dbg !9798
  %18 = load i32, i32* %caps2, align 8, !dbg !9798
  %and = and i32 %18, 16384, !dbg !9799
  %tobool = icmp ne i32 %and, 0, !dbg !9799
  br i1 %tobool, label %if.end, label %if.then, !dbg !9800

if.then:                                          ; preds = %cond.end5
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9801
  call void @mmc_claim_host(%struct.mmc_host* %19) #10, !dbg !9803
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9804
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9805
  %ocr_avail = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %21, i32 0, i32 8, !dbg !9806
  %22 = load i32, i32* %ocr_avail, align 4, !dbg !9806
  call void @mmc_power_up(%struct.mmc_host* %20, i32 %22) #10, !dbg !9807
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9808
  call void @mmc_release_host(%struct.mmc_host* %23) #10, !dbg !9809
  br label %if.end, !dbg !9810

if.end:                                           ; preds = %if.then, %cond.end5
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9811
  call void @mmc_gpiod_request_cd_irq(%struct.mmc_host* %24) #10, !dbg !9812
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9813
  call void @_mmc_detect_change(%struct.mmc_host* %25, i64 0, i1 zeroext false) #10, !dbg !9814
  ret void, !dbg !9815
}

; Function Attrs: noredzone
declare dso_local void @mmc_gpiod_request_cd_irq(%struct.mmc_host*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_stop_host(%struct.mmc_host* %host) #0 !dbg !9816 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9819
  %slot = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 45, !dbg !9821
  %cd_irq = getelementptr inbounds %struct.mmc_slot, %struct.mmc_slot* %slot, i32 0, i32 0, !dbg !9822
  %1 = load i32, i32* %cd_irq, align 8, !dbg !9822
  %cmp = icmp sge i32 %1, 0, !dbg !9823
  br i1 %cmp, label %if.then, label %if.end, !dbg !9824

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9825
  %call = call i32 @mmc_gpio_set_cd_wake(%struct.mmc_host* %2, i1 zeroext false) #10, !dbg !9827
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9828
  %slot1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 45, !dbg !9829
  %cd_irq2 = getelementptr inbounds %struct.mmc_slot, %struct.mmc_slot* %slot1, i32 0, i32 0, !dbg !9830
  %4 = load i32, i32* %cd_irq2, align 8, !dbg !9830
  call void @disable_irq(i32 %4) #10, !dbg !9831
  br label %if.end, !dbg !9832

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9833
  %rescan_disable = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %5, i32 0, i32 31, !dbg !9834
  store i32 1, i32* %rescan_disable, align 4, !dbg !9835
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9836
  %detect = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 43, !dbg !9837
  %call3 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %detect) #10, !dbg !9838
  %7 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9839
  %pm_flags = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %7, i32 0, i32 53, !dbg !9840
  store i32 0, i32* %pm_flags, align 64, !dbg !9841
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9842
  call void @mmc_bus_get(%struct.mmc_host* %8) #10, !dbg !9843
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9844
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %9, i32 0, i32 46, !dbg !9846
  %10 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !9846
  %tobool = icmp ne %struct.mmc_bus_ops* %10, null, !dbg !9844
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !9847

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9848
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 30, !dbg !9849
  %bf.load = load i16, i16* %bus_dead, align 32, !dbg !9849
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !9849
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9849
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9849
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !9848
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !9850

if.then5:                                         ; preds = %land.lhs.true
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9851
  %bus_ops6 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 46, !dbg !9853
  %13 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops6, align 8, !dbg !9853
  %remove = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %13, i32 0, i32 0, !dbg !9854
  %14 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %remove, align 8, !dbg !9854
  %15 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9855
  call void %14(%struct.mmc_host* %15) #10, !dbg !9851
  %16 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9856
  call void @mmc_claim_host(%struct.mmc_host* %16) #10, !dbg !9857
  %17 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9858
  call void @mmc_detach_bus(%struct.mmc_host* %17) #10, !dbg !9859
  %18 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9860
  call void @mmc_power_off(%struct.mmc_host* %18) #10, !dbg !9861
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9862
  call void @mmc_release_host(%struct.mmc_host* %19) #10, !dbg !9863
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9864
  call void @mmc_bus_put(%struct.mmc_host* %20) #10, !dbg !9865
  br label %return, !dbg !9866

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %21 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9867
  call void @mmc_bus_put(%struct.mmc_host* %21) #10, !dbg !9868
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9869
  call void @mmc_claim_host(%struct.mmc_host* %22) #10, !dbg !9870
  %23 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9871
  call void @mmc_power_off(%struct.mmc_host* %23) #10, !dbg !9872
  %24 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9873
  call void @mmc_release_host(%struct.mmc_host* %24) #10, !dbg !9874
  br label %return, !dbg !9875

return:                                           ; preds = %if.end7, %if.then5
  ret void, !dbg !9875
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_gpio_set_cd_wake(%struct.mmc_host*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @disable_irq(i32) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_register_pm_notifier(%struct.mmc_host* %host) #0 !dbg !9876 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !9877, metadata !DIExpression()), !dbg !9878
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9879
  %pm_notify = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 12, !dbg !9880
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %pm_notify, i32 0, i32 0, !dbg !9881
  store i32 (%struct.notifier_block*, i64, i8*)* @mmc_pm_notify, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !9882
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !9883
  %pm_notify1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 12, !dbg !9884
  %call = call i32 @register_pm_notifier(%struct.notifier_block* %pm_notify1) #10, !dbg !9885
  ret void, !dbg !9886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_pm_notify(%struct.notifier_block* %notify_block, i64 %mode, i8* %unused) #0 !dbg !9887 {
entry:
  %lock.addr.i73 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i73, metadata !6591, metadata !DIExpression()), !dbg !9888
  %flags.addr.i74 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i74, metadata !6598, metadata !DIExpression()), !dbg !9891
  %tmp.i75 = alloca i32, align 4
  %tmp8.i76 = alloca i32, align 4
  %lock.addr.i71 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i71, metadata !6617, metadata !DIExpression()), !dbg !9892
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !6591, metadata !DIExpression()), !dbg !9899
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6598, metadata !DIExpression()), !dbg !9901
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6617, metadata !DIExpression()), !dbg !9902
  %notify_block.addr = alloca %struct.notifier_block*, align 8
  %mode.addr = alloca i64, align 8
  %unused.addr = alloca i8*, align 8
  %host = alloca %struct.mmc_host*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mmc_host*, align 8
  %flags = alloca i64, align 8
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  store %struct.notifier_block* %notify_block, %struct.notifier_block** %notify_block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %notify_block.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  store i64 %mode, i64* %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %mode.addr, metadata !9911, metadata !DIExpression()), !dbg !9912
  store i8* %unused, i8** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !9913, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9917, metadata !DIExpression()), !dbg !9919
  %0 = load %struct.notifier_block*, %struct.notifier_block** %notify_block.addr, align 8, !dbg !9919
  %1 = bitcast %struct.notifier_block* %0 to i8*, !dbg !9919
  store i8* %1, i8** %__mptr, align 8, !dbg !9919
  br label %do.body, !dbg !9919

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9920

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9919
  %add.ptr = getelementptr i8, i8* %2, i64 -760, !dbg !9919
  %3 = bitcast i8* %add.ptr to %struct.mmc_host*, !dbg !9919
  store %struct.mmc_host* %3, %struct.mmc_host** %tmp, align 8, !dbg !9920
  %4 = load %struct.mmc_host*, %struct.mmc_host** %tmp, align 8, !dbg !9919
  store %struct.mmc_host* %4, %struct.mmc_host** %host, align 8, !dbg !9916
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9924, metadata !DIExpression()), !dbg !9925
  store i32 0, i32* %err, align 4, !dbg !9925
  %5 = load i64, i64* %mode.addr, align 8, !dbg !9926
  switch i64 %5, label %sw.epilog [
    i64 1, label %sw.bb
    i64 3, label %sw.bb
    i64 5, label %sw.bb
    i64 4, label %sw.bb39
    i64 2, label %sw.bb39
    i64 6, label %sw.bb39
  ], !dbg !9927

sw.bb:                                            ; preds = %do.end, %do.end, %do.end
  br label %do.body1, !dbg !9928

do.body1:                                         ; preds = %sw.bb
  br label %do.body2, !dbg !9929

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9930, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9933, metadata !DIExpression()), !dbg !9932
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9932
  %conv = zext i1 %cmp to i32, !dbg !9932
  store i32 1, i32* %tmp3, align 4, !dbg !9932
  %6 = load i32, i32* %tmp3, align 4, !dbg !9932
  br label %do.body4, !dbg !9934

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9935

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9936

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9938, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9942, metadata !DIExpression()), !dbg !9941
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9941
  %conv10 = zext i1 %cmp9 to i32, !dbg !9941
  store i32 1, i32* %tmp11, align 4, !dbg !9941
  %7 = load i32, i32* %tmp11, align 4, !dbg !9941
  %call = call i64 @arch_local_irq_save() #10, !dbg !9943
  store i64 %call, i64* %flags, align 8, !dbg !9943
  br label %do.end12, !dbg !9943

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !9936

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !9935

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9944, !srcloc !9945
  br label %do.body15, !dbg !9944

do.body15:                                        ; preds = %do.body14
  %8 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9946
  %lock = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %8, i32 0, i32 28, !dbg !9946
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9947
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !9948
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !9948
  br label %do.end17, !dbg !9946

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !9944

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9935

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9934

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9929

do.end21:                                         ; preds = %do.end20
  %11 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9949
  %rescan_disable = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %11, i32 0, i32 31, !dbg !9950
  store i32 1, i32* %rescan_disable, align 4, !dbg !9951
  %12 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9952
  %lock22 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %12, i32 0, i32 28, !dbg !9953
  %13 = load i64, i64* %flags, align 8, !dbg !9954
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i69, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !9955
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !9955
  store i32 1, i32* %tmp.i, align 4, !dbg !9955
  %14 = load i32, i32* %tmp.i, align 4, !dbg !9955
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !9956
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !9956
  store i32 1, i32* %tmp8.i, align 4, !dbg !9956
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !9956
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !9957
  call void @arch_local_irq_restore(i64 %16) #13, !dbg !9957
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9958, !srcloc !6776
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !9959
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !9959
  %rlock.i70 = bitcast %union.anon.2* %18 to %struct.raw_spinlock*, !dbg !9959
  %19 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9960
  %detect = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %19, i32 0, i32 43, !dbg !9961
  %call23 = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %detect) #10, !dbg !9962
  %20 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9963
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %20, i32 0, i32 46, !dbg !9965
  %21 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !9965
  %tobool = icmp ne %struct.mmc_bus_ops* %21, null, !dbg !9963
  br i1 %tobool, label %if.end, label %if.then, !dbg !9966

if.then:                                          ; preds = %do.end21
  br label %sw.epilog, !dbg !9967

if.end:                                           ; preds = %do.end21
  %22 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9968
  %bus_ops24 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %22, i32 0, i32 46, !dbg !9970
  %23 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops24, align 8, !dbg !9970
  %pre_suspend = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %23, i32 0, i32 2, !dbg !9971
  %24 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %pre_suspend, align 8, !dbg !9971
  %tobool25 = icmp ne i32 (%struct.mmc_host*)* %24, null, !dbg !9968
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !9972

if.then26:                                        ; preds = %if.end
  %25 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9973
  %bus_ops27 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %25, i32 0, i32 46, !dbg !9974
  %26 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops27, align 8, !dbg !9974
  %pre_suspend28 = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %26, i32 0, i32 2, !dbg !9975
  %27 = load i32 (%struct.mmc_host*)*, i32 (%struct.mmc_host*)** %pre_suspend28, align 8, !dbg !9975
  %28 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9976
  %call29 = call i32 %27(%struct.mmc_host* %28) #10, !dbg !9973
  store i32 %call29, i32* %err, align 4, !dbg !9977
  br label %if.end30, !dbg !9978

if.end30:                                         ; preds = %if.then26, %if.end
  %29 = load i32, i32* %err, align 4, !dbg !9979
  %tobool31 = icmp ne i32 %29, 0, !dbg !9979
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !9981

if.then32:                                        ; preds = %if.end30
  br label %sw.epilog, !dbg !9982

if.end33:                                         ; preds = %if.end30
  %30 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9983
  %call34 = call i32 @mmc_card_is_removable(%struct.mmc_host* %30) #10, !dbg !9985
  %tobool35 = icmp ne i32 %call34, 0, !dbg !9985
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !9986

if.then36:                                        ; preds = %if.end33
  %31 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9987
  %parent = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %31, i32 0, i32 0, !dbg !9987
  %32 = load %struct.device*, %struct.device** %parent, align 64, !dbg !9987
  %33 = load i32, i32* %err, align 4, !dbg !9987
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %32, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.14, i64 0, i64 0), i32 %33) #11, !dbg !9987
  br label %sw.epilog, !dbg !9989

if.end37:                                         ; preds = %if.end33
  %34 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9990
  %bus_ops38 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %34, i32 0, i32 46, !dbg !9991
  %35 = load %struct.mmc_bus_ops*, %struct.mmc_bus_ops** %bus_ops38, align 8, !dbg !9991
  %remove = getelementptr inbounds %struct.mmc_bus_ops, %struct.mmc_bus_ops* %35, i32 0, i32 0, !dbg !9992
  %36 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %remove, align 8, !dbg !9992
  %37 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9993
  call void %36(%struct.mmc_host* %37) #10, !dbg !9990
  %38 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9994
  call void @mmc_claim_host(%struct.mmc_host* %38) #10, !dbg !9995
  %39 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9996
  call void @mmc_detach_bus(%struct.mmc_host* %39) #10, !dbg !9997
  %40 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !9998
  call void @mmc_power_off(%struct.mmc_host* %40) #10, !dbg !9999
  %41 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10000
  call void @mmc_release_host(%struct.mmc_host* %41) #10, !dbg !10001
  %42 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10002
  %pm_flags = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %42, i32 0, i32 53, !dbg !10003
  store i32 0, i32* %pm_flags, align 64, !dbg !10004
  br label %sw.epilog, !dbg !10005

sw.bb39:                                          ; preds = %do.end, %do.end, %do.end
  br label %do.body40, !dbg !10006

do.body40:                                        ; preds = %sw.bb39
  br label %do.body41, !dbg !10007

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !10008, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !10011, metadata !DIExpression()), !dbg !10010
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !10010
  %conv45 = zext i1 %cmp44 to i32, !dbg !10010
  store i32 1, i32* %tmp46, align 4, !dbg !10010
  %43 = load i32, i32* %tmp46, align 4, !dbg !10010
  br label %do.body47, !dbg !10012

do.body47:                                        ; preds = %do.body41
  br label %do.body48, !dbg !10013

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !10014

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !10020, metadata !DIExpression()), !dbg !10019
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !10019
  %conv53 = zext i1 %cmp52 to i32, !dbg !10019
  store i32 1, i32* %tmp54, align 4, !dbg !10019
  %44 = load i32, i32* %tmp54, align 4, !dbg !10019
  %call55 = call i64 @arch_local_irq_save() #10, !dbg !10021
  store i64 %call55, i64* %flags, align 8, !dbg !10021
  br label %do.end56, !dbg !10021

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !10014

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !10013

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10022, !srcloc !10023
  br label %do.body59, !dbg !10022

do.body59:                                        ; preds = %do.body58
  %45 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10024
  %lock60 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %45, i32 0, i32 28, !dbg !10024
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i71, align 8
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i71, align 8, !dbg !10025
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !10026
  %rlock.i72 = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !10026
  br label %do.end62, !dbg !10024

do.end62:                                         ; preds = %do.body59
  br label %do.end63, !dbg !10022

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !10013

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !10012

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !10007

do.end66:                                         ; preds = %do.end65
  %48 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10027
  %rescan_disable67 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %48, i32 0, i32 31, !dbg !10028
  store i32 0, i32* %rescan_disable67, align 4, !dbg !10029
  %49 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10030
  %lock68 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %49, i32 0, i32 28, !dbg !10031
  %50 = load i64, i64* %flags, align 8, !dbg !10032
  store %struct.spinlock* %lock68, %struct.spinlock** %lock.addr.i73, align 8
  store i64 %50, i64* %flags.addr.i74, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6761, metadata !DIExpression()) #8, !dbg !10033
  call void @llvm.dbg.declare(metadata !228, metadata !6765, metadata !DIExpression()) #8, !dbg !10033
  store i32 1, i32* %tmp.i75, align 4, !dbg !10033
  %51 = load i32, i32* %tmp.i75, align 4, !dbg !10033
  call void @llvm.dbg.declare(metadata !228, metadata !6766, metadata !DIExpression()) #8, !dbg !10034
  call void @llvm.dbg.declare(metadata !228, metadata !6772, metadata !DIExpression()) #8, !dbg !10034
  store i32 1, i32* %tmp8.i76, align 4, !dbg !10034
  %52 = load i32, i32* %tmp8.i76, align 4, !dbg !10034
  %53 = load i64, i64* %flags.addr.i74, align 8, !dbg !10035
  call void @arch_local_irq_restore(i64 %53) #13, !dbg !10035
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10036, !srcloc !6776
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i73, align 8, !dbg !10037
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !10037
  %rlock.i77 = bitcast %union.anon.2* %55 to %struct.raw_spinlock*, !dbg !10037
  %56 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10038
  call void @_mmc_detect_change(%struct.mmc_host* %56, i64 0, i1 zeroext false) #10, !dbg !10039
  br label %sw.epilog, !dbg !10040

sw.epilog:                                        ; preds = %do.end66, %do.end, %if.end37, %if.then36, %if.then32, %if.then
  ret i32 0, !dbg !10041
}

; Function Attrs: noredzone
declare dso_local i32 @register_pm_notifier(%struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mmc_unregister_pm_notifier(%struct.mmc_host* %host) #0 !dbg !10042 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10045
  %pm_notify = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 12, !dbg !10046
  %call = call i32 @unregister_pm_notifier(%struct.notifier_block* %pm_notify) #10, !dbg !10047
  ret void, !dbg !10048
}

; Function Attrs: noredzone
declare dso_local i32 @unregister_pm_notifier(%struct.notifier_block*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mmc_exit() #6 section ".exit.text" !dbg !10049 {
entry:
  call void @sdio_unregister_bus() #10, !dbg !10050
  call void @mmc_unregister_host_class() #10, !dbg !10051
  call void @mmc_unregister_bus() #10, !dbg !10052
  ret void, !dbg !10053
}

; Function Attrs: noredzone
declare dso_local void @sdio_unregister_bus() #2

; Function Attrs: noredzone
declare dso_local void @mmc_unregister_host_class() #2

; Function Attrs: noredzone
declare dso_local void @mmc_unregister_bus() #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_init() #6 section ".init.text" !dbg !10054 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10057, metadata !DIExpression()), !dbg !10058
  %call = call i32 @mmc_register_bus() #10, !dbg !10059
  store i32 %call, i32* %ret, align 4, !dbg !10060
  %0 = load i32, i32* %ret, align 4, !dbg !10061
  %tobool = icmp ne i32 %0, 0, !dbg !10061
  br i1 %tobool, label %if.then, label %if.end, !dbg !10063

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !10064
  store i32 %1, i32* %retval, align 4, !dbg !10065
  br label %return, !dbg !10065

if.end:                                           ; preds = %entry
  %call1 = call i32 @mmc_register_host_class() #10, !dbg !10066
  store i32 %call1, i32* %ret, align 4, !dbg !10067
  %2 = load i32, i32* %ret, align 4, !dbg !10068
  %tobool2 = icmp ne i32 %2, 0, !dbg !10068
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10070

if.then3:                                         ; preds = %if.end
  br label %unregister_bus, !dbg !10071

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @sdio_register_bus() #10, !dbg !10072
  store i32 %call5, i32* %ret, align 4, !dbg !10073
  %3 = load i32, i32* %ret, align 4, !dbg !10074
  %tobool6 = icmp ne i32 %3, 0, !dbg !10074
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10076

if.then7:                                         ; preds = %if.end4
  br label %unregister_host_class, !dbg !10077

if.end8:                                          ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !10078
  br label %return, !dbg !10078

unregister_host_class:                            ; preds = %if.then7
  call void @llvm.dbg.label(metadata !10079), !dbg !10080
  call void @mmc_unregister_host_class() #10, !dbg !10081
  br label %unregister_bus, !dbg !10081

unregister_bus:                                   ; preds = %unregister_host_class, %if.then3
  call void @llvm.dbg.label(metadata !10082), !dbg !10083
  call void @mmc_unregister_bus() #10, !dbg !10084
  %4 = load i32, i32* %ret, align 4, !dbg !10085
  store i32 %4, i32* %retval, align 4, !dbg !10086
  br label %return, !dbg !10086

return:                                           ; preds = %unregister_bus, %if.end8, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10087
  ret i32 %5, !dbg !10087
}

; Function Attrs: noredzone
declare dso_local void @complete_all(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sdio_is_io_busy(i32 %opcode, i32 %arg) #0 !dbg !10088 {
entry:
  %opcode.addr = alloca i32, align 4
  %arg.addr = alloca i32, align 4
  %addr = alloca i32, align 4
  store i32 %opcode, i32* %opcode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %opcode.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  %0 = load i32, i32* %arg.addr, align 4, !dbg !10098
  %shr = lshr i32 %0, 9, !dbg !10099
  %and = and i32 %shr, 131071, !dbg !10100
  store i32 %and, i32* %addr, align 4, !dbg !10101
  %1 = load i32, i32* %opcode.addr, align 4, !dbg !10102
  %cmp = icmp eq i32 %1, 53, !dbg !10103
  br i1 %cmp, label %lor.end5, label %lor.rhs, !dbg !10104

lor.rhs:                                          ; preds = %entry
  %2 = load i32, i32* %opcode.addr, align 4, !dbg !10105
  %cmp1 = icmp eq i32 %2, 52, !dbg !10106
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !10107

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i32, i32* %addr, align 4, !dbg !10108
  %cmp2 = icmp eq i32 %3, 6, !dbg !10109
  br i1 %cmp2, label %lor.end, label %lor.rhs3, !dbg !10110

lor.rhs3:                                         ; preds = %land.rhs
  %4 = load i32, i32* %addr, align 4, !dbg !10111
  %cmp4 = icmp eq i32 %4, 12, !dbg !10112
  br label %lor.end, !dbg !10110

lor.end:                                          ; preds = %lor.rhs3, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ %cmp4, %lor.rhs3 ]
  %lnot = xor i1 %5, true, !dbg !10113
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %lnot, %lor.end ], !dbg !10114
  br label %lor.end5, !dbg !10104

lor.end5:                                         ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %6, %land.end ]
  ret i1 %7, !dbg !10115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reinit_completion(%struct.completion* %x) #0 !dbg !10116 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !10119
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !10120
  store i32 0, i32* %done, align 8, !dbg !10121
  ret void, !dbg !10122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !10123 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10130
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !10131
  %1 = load i8*, i8** %name, align 8, !dbg !10131
  ret i8* %1, !dbg !10132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_wait_ongoing_tfr_cmd(%struct.mmc_host* %host) #0 !dbg !10133 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %ongoing_mrq = alloca %struct.mmc_request*, align 8
  %tmp = alloca %struct.mmc_request*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %ongoing_mrq, metadata !10136, metadata !DIExpression()), !dbg !10137
  br label %do.body, !dbg !10138

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10140

do.end:                                           ; preds = %do.body
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10138
  %ongoing_mrq1 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 57, !dbg !10138
  %1 = load volatile %struct.mmc_request*, %struct.mmc_request** %ongoing_mrq1, align 8, !dbg !10138
  store %struct.mmc_request* %1, %struct.mmc_request** %tmp, align 8, !dbg !10140
  %2 = load %struct.mmc_request*, %struct.mmc_request** %tmp, align 8, !dbg !10138
  store %struct.mmc_request* %2, %struct.mmc_request** %ongoing_mrq, align 8, !dbg !10137
  %3 = load %struct.mmc_request*, %struct.mmc_request** %ongoing_mrq, align 8, !dbg !10142
  %tobool = icmp ne %struct.mmc_request* %3, null, !dbg !10142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10144

land.lhs.true:                                    ; preds = %do.end
  %4 = load %struct.mmc_request*, %struct.mmc_request** %ongoing_mrq, align 8, !dbg !10145
  %cmd_completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %4, i32 0, i32 5, !dbg !10146
  %call = call zeroext i1 @completion_done(%struct.completion* %cmd_completion) #10, !dbg !10147
  br i1 %call, label %if.end, label %if.then, !dbg !10148

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.mmc_request*, %struct.mmc_request** %ongoing_mrq, align 8, !dbg !10149
  %cmd_completion2 = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %5, i32 0, i32 5, !dbg !10150
  call void @wait_for_completion(%struct.completion* %cmd_completion2) #10, !dbg !10151
  br label %if.end, !dbg !10151

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end
  ret void, !dbg !10152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_wait_done(%struct.mmc_request* %mrq) #0 !dbg !10153 {
entry:
  %mrq.addr = alloca %struct.mmc_request*, align 8
  store %struct.mmc_request* %mrq, %struct.mmc_request** %mrq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_request** %mrq.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  %0 = load %struct.mmc_request*, %struct.mmc_request** %mrq.addr, align 8, !dbg !10156
  %completion = getelementptr inbounds %struct.mmc_request, %struct.mmc_request* %0, i32 0, i32 4, !dbg !10157
  call void @complete(%struct.completion* %completion) #10, !dbg !10158
  ret void, !dbg !10159
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !10160 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10161, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10164, metadata !DIExpression()), !dbg !10163
  %0 = load i64, i64* %__edi, align 8, !dbg !10163
  store i64 %0, i64* %__edi, align 8, !dbg !10163
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10165, metadata !DIExpression()), !dbg !10163
  %1 = load i64, i64* %__esi, align 8, !dbg !10163
  store i64 %1, i64* %__esi, align 8, !dbg !10163
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10166, metadata !DIExpression()), !dbg !10163
  %2 = load i64, i64* %__edx, align 8, !dbg !10163
  store i64 %2, i64* %__edx, align 8, !dbg !10163
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10167, metadata !DIExpression()), !dbg !10163
  %3 = load i64, i64* %__ecx, align 8, !dbg !10163
  store i64 %3, i64* %__ecx, align 8, !dbg !10163
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10168, metadata !DIExpression()), !dbg !10163
  %4 = load i64, i64* %__eax, align 8, !dbg !10163
  store i64 %4, i64* %__eax, align 8, !dbg !10163
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !10163
  %6 = call i64 @llvm.read_register.i64(metadata !5475), !dbg !10169
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !10169, !srcloc !10172
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10169
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10169
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10169
  call void @llvm.write_register.i64(metadata !5475, i64 %asmresult1), !dbg !10169
  %8 = load i64, i64* %__eax, align 8, !dbg !10169
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !10173, metadata !DIExpression()), !dbg !10175
  store i64 -1, i64* %__mask, align 8, !dbg !10175
  %9 = load i64, i64* %__mask, align 8, !dbg !10175
  store i64 %9, i64* %tmp, align 8, !dbg !10175
  %10 = load i64, i64* %tmp, align 8, !dbg !10175
  %and = and i64 %8, %10, !dbg !10169
  store i64 %and, i64* %__ret, align 8, !dbg !10169
  %11 = load i64, i64* %__ret, align 8, !dbg !10163
  store i64 %11, i64* %tmp2, align 8, !dbg !10176
  %12 = load i64, i64* %tmp2, align 8, !dbg !10163
  ret i64 %12, !dbg !10177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !10178 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10179, metadata !DIExpression()), !dbg !10181
  %0 = load i64, i64* %__edi, align 8, !dbg !10181
  store i64 %0, i64* %__edi, align 8, !dbg !10181
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10182, metadata !DIExpression()), !dbg !10181
  %1 = load i64, i64* %__esi, align 8, !dbg !10181
  store i64 %1, i64* %__esi, align 8, !dbg !10181
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10183, metadata !DIExpression()), !dbg !10181
  %2 = load i64, i64* %__edx, align 8, !dbg !10181
  store i64 %2, i64* %__edx, align 8, !dbg !10181
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10184, metadata !DIExpression()), !dbg !10181
  %3 = load i64, i64* %__ecx, align 8, !dbg !10181
  store i64 %3, i64* %__ecx, align 8, !dbg !10181
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10185, metadata !DIExpression()), !dbg !10181
  %4 = load i64, i64* %__eax, align 8, !dbg !10181
  store i64 %4, i64* %__eax, align 8, !dbg !10181
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !10181
  %6 = call i64 @llvm.read_register.i64(metadata !5475), !dbg !10181
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !10181, !srcloc !10186
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10181
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10181
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10181
  call void @llvm.write_register.i64(metadata !5475, i64 %asmresult1), !dbg !10181
  ret void, !dbg !10187
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !10188 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  ret i1 true, !dbg !10196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !10197 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10201, metadata !DIExpression()), !dbg !10202
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10203, metadata !DIExpression()), !dbg !10204
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10205, metadata !DIExpression()), !dbg !10206
  ret void, !dbg !10207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !10208 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !10211, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10213, metadata !DIExpression()), !dbg !10215
  %0 = load i64, i64* %__edi, align 8, !dbg !10215
  store i64 %0, i64* %__edi, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10216, metadata !DIExpression()), !dbg !10215
  %1 = load i64, i64* %__esi, align 8, !dbg !10215
  store i64 %1, i64* %__esi, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10217, metadata !DIExpression()), !dbg !10215
  %2 = load i64, i64* %__edx, align 8, !dbg !10215
  store i64 %2, i64* %__edx, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10218, metadata !DIExpression()), !dbg !10215
  %3 = load i64, i64* %__ecx, align 8, !dbg !10215
  store i64 %3, i64* %__ecx, align 8, !dbg !10215
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10219, metadata !DIExpression()), !dbg !10215
  %4 = load i64, i64* %__eax, align 8, !dbg !10215
  store i64 %4, i64* %__eax, align 8, !dbg !10215
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !10215
  %6 = call i64 @llvm.read_register.i64(metadata !5475), !dbg !10215
  %7 = load i64, i64* %f.addr, align 8, !dbg !10215
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !10215, !srcloc !10220
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !10215
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !10215
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10215
  call void @llvm.write_register.i64(metadata !5475, i64 %asmresult1), !dbg !10215
  ret void, !dbg !10221
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_mono_fast_ns() #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_suspend(%struct.device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #0 !dbg !10222 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !10227, metadata !DIExpression()), !dbg !10228
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !10233
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !10234
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !10235
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #10, !dbg !10236
  ret i32 %call, !dbg !10237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !10238 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !10247, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10249, metadata !DIExpression()), !dbg !10250
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !10251
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !10252
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !10253
  %3 = load i64, i64* %sz.addr, align 8, !dbg !10254
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #10, !dbg !10255
  store i32 %call, i32* %ret, align 4, !dbg !10250
  %4 = load i32, i32* %ret, align 4, !dbg !10256
  %cmp = icmp sge i32 %4, 0, !dbg !10258
  br i1 %cmp, label %if.then, label %if.else, !dbg !10259

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10260
  br label %return, !dbg !10260

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !10261
  store i32 %5, i32* %retval, align 4, !dbg !10262
  br label %return, !dbg !10262

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !10263
  ret i32 %6, !dbg !10263
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mmc_release_bus(%struct.mmc_host* %host) #0 !dbg !10264 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !10265, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10267, metadata !DIExpression()), !dbg !10269
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10269
  %bus_dead = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %0, i32 0, i32 30, !dbg !10269
  %bf.load = load i16, i16* %bus_dead, align 32, !dbg !10269
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !10269
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10269
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10269
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10269
  %lnot = xor i1 %tobool, true, !dbg !10269
  %lnot1 = xor i1 %lnot, true, !dbg !10269
  %lnot2 = xor i1 %lnot1, true, !dbg !10269
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10269
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10269
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !10270
  %tobool3 = icmp ne i32 %1, 0, !dbg !10270
  %lnot4 = xor i1 %tobool3, true, !dbg !10270
  %lnot6 = xor i1 %lnot4, true, !dbg !10270
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !10270
  %conv = sext i32 %lnot.ext7 to i64, !dbg !10270
  %tobool8 = icmp ne i64 %conv, 0, !dbg !10270
  br i1 %tobool8, label %if.then, label %if.end, !dbg !10269

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10270

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !10272

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !10274

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !10272

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i32 1382, i32 2305, i64 12) #8, !dbg !10276, !srcloc !10278
  br label %do.end11, !dbg !10276

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #8, !dbg !10279, !srcloc !10281
  br label %do.body12, !dbg !10272

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10282

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10272

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10272

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !10269
  %tobool15 = icmp ne i32 %2, 0, !dbg !10269
  %lnot16 = xor i1 %tobool15, true, !dbg !10269
  %lnot18 = xor i1 %lnot16, true, !dbg !10269
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10269
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10269
  store i64 %conv20, i64* %tmp, align 8, !dbg !10270
  %3 = load i64, i64* %tmp, align 8, !dbg !10269
  %4 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10284
  %bus_ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %4, i32 0, i32 46, !dbg !10285
  store %struct.mmc_bus_ops* null, %struct.mmc_bus_ops** %bus_ops, align 8, !dbg !10286
  ret void, !dbg !10287
}

; Function Attrs: noredzone
declare dso_local void @pm_wakeup_ws_event(%struct.wakeup_source*, i32, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_delayed_work(%struct.workqueue_struct* %wq, %struct.delayed_work* %dwork, i64 %delay) #0 !dbg !10288 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %dwork.addr = alloca %struct.delayed_work*, align 8
  %delay.addr = alloca i64, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10291, metadata !DIExpression()), !dbg !10292
  store %struct.delayed_work* %dwork, %struct.delayed_work** %dwork.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.delayed_work** %dwork.addr, metadata !10293, metadata !DIExpression()), !dbg !10294
  store i64 %delay, i64* %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %delay.addr, metadata !10295, metadata !DIExpression()), !dbg !10296
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10297
  %1 = load %struct.delayed_work*, %struct.delayed_work** %dwork.addr, align 8, !dbg !10298
  %2 = load i64, i64* %delay.addr, align 8, !dbg !10299
  %call = call zeroext i1 @queue_delayed_work_on(i32 1, %struct.workqueue_struct* %0, %struct.delayed_work* %1, i64 %2) #10, !dbg !10300
  ret i1 %call, !dbg !10301
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_delayed_work_on(i32, %struct.workqueue_struct*, %struct.delayed_work*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_erase_timeout(%struct.mmc_card* %card, i32 %arg, i32 %qty) #0 !dbg !10302 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %arg.addr = alloca i32, align 4
  %qty.addr = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10305, metadata !DIExpression()), !dbg !10306
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  store i32 %qty, i32* %qty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qty.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  %0 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10311
  %type = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %0, i32 0, i32 4, !dbg !10311
  %1 = load i32, i32* %type, align 8, !dbg !10311
  %cmp = icmp eq i32 %1, 1, !dbg !10311
  br i1 %cmp, label %if.then, label %if.else, !dbg !10313

if.then:                                          ; preds = %entry
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10314
  %3 = load i32, i32* %arg.addr, align 4, !dbg !10315
  %4 = load i32, i32* %qty.addr, align 4, !dbg !10316
  %call = call i32 @mmc_sd_erase_timeout(%struct.mmc_card* %2, i32 %3, i32 %4) #10, !dbg !10317
  store i32 %call, i32* %retval, align 4, !dbg !10318
  br label %return, !dbg !10318

if.else:                                          ; preds = %entry
  %5 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10319
  %6 = load i32, i32* %arg.addr, align 4, !dbg !10320
  %7 = load i32, i32* %qty.addr, align 4, !dbg !10321
  %call1 = call i32 @mmc_mmc_erase_timeout(%struct.mmc_card* %5, i32 %6, i32 %7) #10, !dbg !10322
  store i32 %call1, i32* %retval, align 4, !dbg !10323
  br label %return, !dbg !10323

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10324
  ret i32 %8, !dbg !10324
}

; Function Attrs: noredzone
declare dso_local i32 @mmc_poll_for_busy(%struct.mmc_card*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_sd_erase_timeout(%struct.mmc_card* %card, i32 %arg, i32 %qty) #0 !dbg !10325 {
entry:
  %retval = alloca i32, align 4
  %card.addr = alloca %struct.mmc_card*, align 8
  %arg.addr = alloca i32, align 4
  %qty.addr = alloca i32, align 4
  %erase_timeout = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  store i32 %qty, i32* %qty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qty.addr, metadata !10330, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.declare(metadata i32* %erase_timeout, metadata !10332, metadata !DIExpression()), !dbg !10333
  %0 = load i32, i32* %arg.addr, align 4, !dbg !10334
  %cmp = icmp eq i32 %0, 1, !dbg !10336
  br i1 %cmp, label %if.then, label %if.end, !dbg !10337

if.then:                                          ; preds = %entry
  store i32 250, i32* %retval, align 4, !dbg !10338
  br label %return, !dbg !10338

if.end:                                           ; preds = %entry
  %1 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10339
  %ssr = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %1, i32 0, i32 23, !dbg !10341
  %erase_timeout1 = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr, i32 0, i32 1, !dbg !10342
  %2 = load i32, i32* %erase_timeout1, align 4, !dbg !10342
  %tobool = icmp ne i32 %2, 0, !dbg !10339
  br i1 %tobool, label %if.then2, label %if.else, !dbg !10343

if.then2:                                         ; preds = %if.end
  %3 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10344
  %ssr3 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %3, i32 0, i32 23, !dbg !10346
  %erase_timeout4 = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr3, i32 0, i32 1, !dbg !10347
  %4 = load i32, i32* %erase_timeout4, align 4, !dbg !10347
  %5 = load i32, i32* %qty.addr, align 4, !dbg !10348
  %mul = mul i32 %4, %5, !dbg !10349
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10350
  %ssr5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 23, !dbg !10351
  %erase_offset = getelementptr inbounds %struct.sd_ssr, %struct.sd_ssr* %ssr5, i32 0, i32 2, !dbg !10352
  %7 = load i32, i32* %erase_offset, align 8, !dbg !10352
  %add = add i32 %mul, %7, !dbg !10353
  store i32 %add, i32* %erase_timeout, align 4, !dbg !10354
  br label %if.end7, !dbg !10355

if.else:                                          ; preds = %if.end
  %8 = load i32, i32* %qty.addr, align 4, !dbg !10356
  %mul6 = mul i32 250, %8, !dbg !10358
  store i32 %mul6, i32* %erase_timeout, align 4, !dbg !10359
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then2
  %9 = load i32, i32* %erase_timeout, align 4, !dbg !10360
  %cmp8 = icmp ult i32 %9, 1000, !dbg !10362
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10363

if.then9:                                         ; preds = %if.end7
  store i32 1000, i32* %erase_timeout, align 4, !dbg !10364
  br label %if.end10, !dbg !10365

if.end10:                                         ; preds = %if.then9, %if.end7
  %10 = load i32, i32* %erase_timeout, align 4, !dbg !10366
  store i32 %10, i32* %retval, align 4, !dbg !10367
  br label %return, !dbg !10367

return:                                           ; preds = %if.end10, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10368
  ret i32 %11, !dbg !10368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mmc_mmc_erase_timeout(%struct.mmc_card* %card, i32 %arg, i32 %qty) #0 !dbg !10369 {
entry:
  %card.addr = alloca %struct.mmc_card*, align 8
  %arg.addr = alloca i32, align 4
  %qty.addr = alloca i32, align 4
  %erase_timeout = alloca i32, align 4
  %mult = alloca i32, align 4
  %timeout_clks = alloca i32, align 4
  %timeout_us = alloca i32, align 4
  store %struct.mmc_card* %card, %struct.mmc_card** %card.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_card** %card.addr, metadata !10370, metadata !DIExpression()), !dbg !10371
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !10372, metadata !DIExpression()), !dbg !10373
  store i32 %qty, i32* %qty.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %qty.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.declare(metadata i32* %erase_timeout, metadata !10376, metadata !DIExpression()), !dbg !10377
  %0 = load i32, i32* %arg.addr, align 4, !dbg !10378
  %cmp = icmp eq i32 %0, 3, !dbg !10380
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10381

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %arg.addr, align 4, !dbg !10382
  %cmp1 = icmp eq i32 %1, 1, !dbg !10383
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !10384

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10385
  %ext_csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %2, i32 0, i32 21, !dbg !10386
  %rev = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd, i32 0, i32 0, !dbg !10387
  %3 = load i8, i8* %rev, align 8, !dbg !10387
  %conv = zext i8 %3 to i32, !dbg !10385
  %cmp2 = icmp sge i32 %conv, 6, !dbg !10388
  br i1 %cmp2, label %if.then, label %if.else, !dbg !10389

if.then:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10390
  %ext_csd4 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %4, i32 0, i32 21, !dbg !10392
  %trim_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd4, i32 0, i32 24, !dbg !10393
  %5 = load i32, i32* %trim_timeout, align 4, !dbg !10393
  store i32 %5, i32* %erase_timeout, align 4, !dbg !10394
  br label %if.end40, !dbg !10395

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %6 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10396
  %ext_csd5 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %6, i32 0, i32 21, !dbg !10398
  %erase_group_def = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd5, i32 0, i32 1, !dbg !10399
  %7 = load i8, i8* %erase_group_def, align 1, !dbg !10399
  %conv6 = zext i8 %7 to i32, !dbg !10396
  %and = and i32 %conv6, 1, !dbg !10400
  %tobool = icmp ne i32 %and, 0, !dbg !10400
  br i1 %tobool, label %if.then7, label %if.else15, !dbg !10401

if.then7:                                         ; preds = %if.else
  %8 = load i32, i32* %arg.addr, align 4, !dbg !10402
  %cmp8 = icmp eq i32 %8, 1, !dbg !10405
  br i1 %cmp8, label %if.then10, label %if.else13, !dbg !10406

if.then10:                                        ; preds = %if.then7
  %9 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10407
  %ext_csd11 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %9, i32 0, i32 21, !dbg !10408
  %trim_timeout12 = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd11, i32 0, i32 24, !dbg !10409
  %10 = load i32, i32* %trim_timeout12, align 4, !dbg !10409
  store i32 %10, i32* %erase_timeout, align 4, !dbg !10410
  br label %if.end, !dbg !10411

if.else13:                                        ; preds = %if.then7
  %11 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10412
  %ext_csd14 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %11, i32 0, i32 21, !dbg !10413
  %hc_erase_timeout = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd14, i32 0, i32 21, !dbg !10414
  %12 = load i32, i32* %hc_erase_timeout, align 8, !dbg !10414
  store i32 %12, i32* %erase_timeout, align 4, !dbg !10415
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then10
  br label %if.end39, !dbg !10416

if.else15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !10417, metadata !DIExpression()), !dbg !10419
  %13 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10420
  %csd = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %13, i32 0, i32 20, !dbg !10421
  %r2w_factor = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd, i32 0, i32 6, !dbg !10422
  %14 = load i32, i32* %r2w_factor, align 8, !dbg !10422
  %shl = shl i32 10, %14, !dbg !10423
  store i32 %shl, i32* %mult, align 4, !dbg !10419
  call void @llvm.dbg.declare(metadata i32* %timeout_clks, metadata !10424, metadata !DIExpression()), !dbg !10425
  %15 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10426
  %csd16 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %15, i32 0, i32 20, !dbg !10427
  %taac_clks = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd16, i32 0, i32 3, !dbg !10428
  %16 = load i16, i16* %taac_clks, align 4, !dbg !10428
  %conv17 = zext i16 %16 to i32, !dbg !10426
  %17 = load i32, i32* %mult, align 4, !dbg !10429
  %mul = mul i32 %conv17, %17, !dbg !10430
  store i32 %mul, i32* %timeout_clks, align 4, !dbg !10425
  call void @llvm.dbg.declare(metadata i32* %timeout_us, metadata !10431, metadata !DIExpression()), !dbg !10432
  %18 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10433
  %csd18 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %18, i32 0, i32 20, !dbg !10435
  %taac_ns = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd18, i32 0, i32 4, !dbg !10436
  %19 = load i32, i32* %taac_ns, align 8, !dbg !10436
  %cmp19 = icmp ult i32 %19, 1000000, !dbg !10437
  br i1 %cmp19, label %if.then21, label %if.else25, !dbg !10438

if.then21:                                        ; preds = %if.else15
  %20 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10439
  %csd22 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %20, i32 0, i32 20, !dbg !10440
  %taac_ns23 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd22, i32 0, i32 4, !dbg !10441
  %21 = load i32, i32* %taac_ns23, align 8, !dbg !10441
  %22 = load i32, i32* %mult, align 4, !dbg !10442
  %mul24 = mul i32 %21, %22, !dbg !10443
  %div = udiv i32 %mul24, 1000, !dbg !10444
  store i32 %div, i32* %timeout_us, align 4, !dbg !10445
  br label %if.end30, !dbg !10446

if.else25:                                        ; preds = %if.else15
  %23 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10447
  %csd26 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %23, i32 0, i32 20, !dbg !10448
  %taac_ns27 = getelementptr inbounds %struct.mmc_csd, %struct.mmc_csd* %csd26, i32 0, i32 4, !dbg !10449
  %24 = load i32, i32* %taac_ns27, align 8, !dbg !10449
  %div28 = udiv i32 %24, 1000, !dbg !10450
  %25 = load i32, i32* %mult, align 4, !dbg !10451
  %mul29 = mul i32 %div28, %25, !dbg !10452
  store i32 %mul29, i32* %timeout_us, align 4, !dbg !10453
  br label %if.end30

if.end30:                                         ; preds = %if.else25, %if.then21
  %26 = load i32, i32* %timeout_clks, align 4, !dbg !10454
  %shl31 = shl i32 %26, 1, !dbg !10454
  store i32 %shl31, i32* %timeout_clks, align 4, !dbg !10454
  %27 = load i32, i32* %timeout_clks, align 4, !dbg !10455
  %mul32 = mul i32 %27, 1000, !dbg !10456
  %28 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10457
  %host = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %28, i32 0, i32 0, !dbg !10458
  %29 = load %struct.mmc_host*, %struct.mmc_host** %host, align 8, !dbg !10458
  %ios = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %29, i32 0, i32 29, !dbg !10459
  %clock = getelementptr inbounds %struct.mmc_ios, %struct.mmc_ios* %ios, i32 0, i32 0, !dbg !10460
  %30 = load i32, i32* %clock, align 4, !dbg !10460
  %div33 = udiv i32 %30, 1000, !dbg !10461
  %div34 = udiv i32 %mul32, %div33, !dbg !10462
  %31 = load i32, i32* %timeout_us, align 4, !dbg !10463
  %add = add i32 %31, %div34, !dbg !10463
  store i32 %add, i32* %timeout_us, align 4, !dbg !10463
  %32 = load i32, i32* %timeout_us, align 4, !dbg !10464
  %div35 = udiv i32 %32, 1000, !dbg !10465
  store i32 %div35, i32* %erase_timeout, align 4, !dbg !10466
  %33 = load i32, i32* %erase_timeout, align 4, !dbg !10467
  %tobool36 = icmp ne i32 %33, 0, !dbg !10467
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !10469

if.then37:                                        ; preds = %if.end30
  store i32 1, i32* %erase_timeout, align 4, !dbg !10470
  br label %if.end38, !dbg !10471

if.end38:                                         ; preds = %if.then37, %if.end30
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then
  %34 = load i32, i32* %arg.addr, align 4, !dbg !10472
  %and41 = and i32 %34, -2147483648, !dbg !10474
  %tobool42 = icmp ne i32 %and41, 0, !dbg !10474
  br i1 %tobool42, label %if.then43, label %if.end53, !dbg !10475

if.then43:                                        ; preds = %if.end40
  %35 = load i32, i32* %arg.addr, align 4, !dbg !10476
  %cmp44 = icmp eq i32 %35, -2147483648, !dbg !10479
  br i1 %cmp44, label %if.then46, label %if.else49, !dbg !10480

if.then46:                                        ; preds = %if.then43
  %36 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10481
  %ext_csd47 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %36, i32 0, i32 21, !dbg !10482
  %sec_erase_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd47, i32 0, i32 23, !dbg !10483
  %37 = load i32, i32* %sec_erase_mult, align 8, !dbg !10483
  %38 = load i32, i32* %erase_timeout, align 4, !dbg !10484
  %mul48 = mul i32 %38, %37, !dbg !10484
  store i32 %mul48, i32* %erase_timeout, align 4, !dbg !10484
  br label %if.end52, !dbg !10485

if.else49:                                        ; preds = %if.then43
  %39 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10486
  %ext_csd50 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %39, i32 0, i32 21, !dbg !10487
  %sec_trim_mult = getelementptr inbounds %struct.mmc_ext_csd, %struct.mmc_ext_csd* %ext_csd50, i32 0, i32 22, !dbg !10488
  %40 = load i32, i32* %sec_trim_mult, align 4, !dbg !10488
  %41 = load i32, i32* %erase_timeout, align 4, !dbg !10489
  %mul51 = mul i32 %41, %40, !dbg !10489
  store i32 %mul51, i32* %erase_timeout, align 4, !dbg !10489
  br label %if.end52

if.end52:                                         ; preds = %if.else49, %if.then46
  br label %if.end53, !dbg !10490

if.end53:                                         ; preds = %if.end52, %if.end40
  %42 = load i32, i32* %qty.addr, align 4, !dbg !10491
  %43 = load i32, i32* %erase_timeout, align 4, !dbg !10492
  %mul54 = mul i32 %43, %42, !dbg !10492
  store i32 %mul54, i32* %erase_timeout, align 4, !dbg !10492
  %44 = load %struct.mmc_card*, %struct.mmc_card** %card.addr, align 8, !dbg !10493
  %host55 = getelementptr inbounds %struct.mmc_card, %struct.mmc_card* %44, i32 0, i32 0, !dbg !10493
  %45 = load %struct.mmc_host*, %struct.mmc_host** %host55, align 8, !dbg !10493
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %45, i32 0, i32 17, !dbg !10493
  %46 = load i32, i32* %caps, align 4, !dbg !10493
  %and56 = and i32 %46, 16, !dbg !10493
  %tobool57 = icmp ne i32 %and56, 0, !dbg !10493
  br i1 %tobool57, label %land.lhs.true58, label %if.end62, !dbg !10495

land.lhs.true58:                                  ; preds = %if.end53
  %47 = load i32, i32* %erase_timeout, align 4, !dbg !10496
  %cmp59 = icmp ult i32 %47, 1000, !dbg !10497
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !10498

if.then61:                                        ; preds = %land.lhs.true58
  store i32 1000, i32* %erase_timeout, align 4, !dbg !10499
  br label %if.end62, !dbg !10500

if.end62:                                         ; preds = %if.then61, %land.lhs.true58, %if.end53
  %48 = load i32, i32* %erase_timeout, align 4, !dbg !10501
  ret i32 %48, !dbg !10502
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !10503 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !10504, metadata !DIExpression()), !dbg !10505
  %0 = load i32, i32* %m.addr, align 4, !dbg !10506
  %conv = zext i32 %0 to i64, !dbg !10506
  %add = add i64 %conv, 4, !dbg !10507
  %sub = sub i64 %add, 1, !dbg !10508
  %div = sdiv i64 %sub, 4, !dbg !10509
  ret i64 %div, !dbg !10510
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mmc_hw_reset_for_init(%struct.mmc_host* %host) #0 !dbg !10511 {
entry:
  %host.addr = alloca %struct.mmc_host*, align 8
  store %struct.mmc_host* %host, %struct.mmc_host** %host.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mmc_host** %host.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  %0 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10514
  call void @mmc_pwrseq_reset(%struct.mmc_host* %0) #10, !dbg !10515
  %1 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10516
  %caps = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %1, i32 0, i32 17, !dbg !10518
  %2 = load i32, i32* %caps, align 4, !dbg !10518
  %and = and i32 %2, -2147483648, !dbg !10519
  %tobool = icmp ne i32 %and, 0, !dbg !10519
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10520

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10521
  %ops = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %3, i32 0, i32 3, !dbg !10522
  %4 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops, align 8, !dbg !10522
  %hw_reset = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %4, i32 0, i32 19, !dbg !10523
  %5 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hw_reset, align 8, !dbg !10523
  %tobool1 = icmp ne void (%struct.mmc_host*)* %5, null, !dbg !10521
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10524

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !10525

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10526
  %ops2 = getelementptr inbounds %struct.mmc_host, %struct.mmc_host* %6, i32 0, i32 3, !dbg !10527
  %7 = load %struct.mmc_host_ops*, %struct.mmc_host_ops** %ops2, align 8, !dbg !10527
  %hw_reset3 = getelementptr inbounds %struct.mmc_host_ops, %struct.mmc_host_ops* %7, i32 0, i32 19, !dbg !10528
  %8 = load void (%struct.mmc_host*)*, void (%struct.mmc_host*)** %hw_reset3, align 8, !dbg !10528
  %9 = load %struct.mmc_host*, %struct.mmc_host** %host.addr, align 8, !dbg !10529
  call void %8(%struct.mmc_host* %9) #10, !dbg !10526
  br label %return, !dbg !10530

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10530
}

; Function Attrs: noredzone
declare dso_local i32 @sdio_reset(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_go_idle(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_send_if_cond(%struct.mmc_host*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_attach_sdio(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_attach_sd(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_attach_mmc(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local void @mmc_pwrseq_reset(%struct.mmc_host*) #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_register_bus() #2

; Function Attrs: noredzone
declare dso_local i32 @mmc_register_host_class() #2

; Function Attrs: noredzone
declare dso_local i32 @sdio_register_bus() #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone willreturn }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind readnone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5475}
!llvm.module.flags = !{!5476, !5477, !5478, !5479}
!llvm.ident = !{!5480}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "use_spi_crc", scope: !2, file: !3, line: 60, type: !471, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !179, globals: !5391, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/mmc/core/core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !43, !50, !55, !61, !66, !72, !79, !85, !94, !102, !108, !114, !121, !128, !135, !140, !173}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !19, line: 118, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !25, line: 19, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !32, line: 49, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42}
!34 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!42 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !44, line: 502, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !19, line: 315, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54}
!52 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !56, line: 546, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!57 = !{!58, !59, !60}
!58 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !62, line: 65, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65}
!64 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !67, line: 16, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !73, line: 59, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !80, line: 54, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84}
!82 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !86, line: 296, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !95, line: 9, baseType: !7, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100, !101}
!97 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !103, line: 26, baseType: !7, size: 32, elements: !104)
!103 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!104 = !{!105, !106, !107}
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !109, line: 44, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113}
!111 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !115, line: 343, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !44, line: 524, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125, !126, !127}
!123 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!127 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "led_brightness", file: !129, line: 29, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/leds.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133, !134}
!131 = !DIEnumerator(name: "LED_OFF", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "LED_ON", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "LED_HALF", value: 127, isUnsigned: true)
!134 = !DIEnumerator(name: "LED_FULL", value: 255, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !136, line: 10, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139}
!138 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 30, baseType: !142, size: 64, elements: !143)
!141 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!142 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!143 = !{!144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172}
!144 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!145 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!146 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!147 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!148 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!149 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!150 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!151 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!152 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!153 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!154 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!155 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!156 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!157 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!158 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!159 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!160 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!161 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!162 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!163 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!164 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!165 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!166 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!167 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!168 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!169 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!170 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!171 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!172 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mmc_busy_cmd", file: !174, line: 13, baseType: !7, size: 32, elements: !175)
!174 = !DIFile(filename: "drivers/mmc/core/mmc_ops.h", directory: "/home/lizy2001/genbc/linux")
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "MMC_BUSY_CMD6", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "MMC_BUSY_ERASE", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "MMC_BUSY_HPI", value: 2, isUnsigned: true)
!179 = !{!180, !182, !183, !240, !5382, !5385, !2199, !305, !5386, !5389, !7, !142}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !142)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host", file: !185, line: 275, size: 10752, elements: !186)
!185 = !DIFile(filename: "./include/linux/mmc/host.h", directory: "/home/lizy2001/genbc/linux")
!186 = !{!187, !4878, !4879, !4880, !5226, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5272, !5273, !5274, !5275, !5276, !5277, !5278, !5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5306, !5307, !5308, !5309, !5310, !5316, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5343, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5376, !5377, !5378, !5379, !5380, !5381}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !184, file: !185, line: 276, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 461, size: 5568, elements: !190)
!190 = !{!191, !4422, !4423, !4426, !4427, !4477, !4568, !4569, !4570, !4571, !4572, !4581, !4675, !4688, !4691, !4692, !4696, !4698, !4699, !4700, !4704, !4710, !4711, !4714, !4829, !4830, !4831, !4832, !4833, !4834, !4866, !4867, !4868, !4871, !4874, !4875, !4876, !4877}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !189, file: !115, line: 462, baseType: !192, size: 512)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !193, line: 64, size: 512, elements: !194)
!193 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!194 = !{!195, !199, !206, !208, !269, !4289, !4416, !4417, !4418, !4419, !4420, !4421}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !192, file: !193, line: 65, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !192, file: !193, line: 66, baseType: !200, size: 128, offset: 64)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !201, line: 178, size: 128, elements: !202)
!201 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!202 = !{!203, !205}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !200, file: !201, line: 179, baseType: !204, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !200, file: !201, line: 179, baseType: !204, size: 64, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !192, file: !193, line: 67, baseType: !207, size: 64, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !192, file: !193, line: 68, baseType: !209, size: 64, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !193, line: 192, size: 704, elements: !211)
!211 = !{!212, !213, !229, !230}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !210, file: !193, line: 193, baseType: !200, size: 128)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !210, file: !193, line: 194, baseType: !214, offset: 128)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !215, line: 83, baseType: !216)
!215 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !215, line: 71, elements: !217)
!217 = !{!218}
!218 = !DIDerivedType(tag: DW_TAG_member, scope: !216, file: !215, line: 72, baseType: !219)
!219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !216, file: !215, line: 72, elements: !220)
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !219, file: !215, line: 73, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !215, line: 20, elements: !223)
!223 = !{!224}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !222, file: !215, line: 21, baseType: !225)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !226, line: 25, baseType: !227)
!226 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !226, line: 25, elements: !228)
!228 = !{}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !210, file: !193, line: 195, baseType: !192, size: 512, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !210, file: !193, line: 196, baseType: !231, size: 64, offset: 640)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !193, line: 156, size: 192, elements: !234)
!234 = !{!235, !241, !246}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !233, file: !193, line: 157, baseType: !236, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = !DISubroutineType(types: !239)
!239 = !{!240, !209, !207}
!240 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !233, file: !193, line: 158, baseType: !242, size: 64, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !243)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{!196, !209, !207}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !233, file: !193, line: 159, baseType: !247, size: 64, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{!240, !209, !207, !251}
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !193, line: 148, size: 20736, elements: !253)
!253 = !{!254, !259, !263, !264, !268}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !252, file: !193, line: 149, baseType: !255, size: 192)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 192, elements: !257)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!257 = !{!258}
!258 = !DISubrange(count: 3)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !252, file: !193, line: 150, baseType: !260, size: 4096, offset: 192)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 4096, elements: !261)
!261 = !{!262}
!262 = !DISubrange(count: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !252, file: !193, line: 151, baseType: !240, size: 32, offset: 4288)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !252, file: !193, line: 152, baseType: !265, size: 16384, offset: 4320)
!265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 16384, elements: !266)
!266 = !{!267}
!267 = !DISubrange(count: 2048)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !252, file: !193, line: 153, baseType: !240, size: 32, offset: 20704)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !192, file: !193, line: 69, baseType: !270, size: 64, offset: 320)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !193, line: 138, size: 448, elements: !272)
!272 = !{!273, !277, !306, !308, !4253, !4281, !4285}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !271, file: !193, line: 139, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{null, !207}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !271, file: !193, line: 140, baseType: !278, size: 64, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !281, line: 230, size: 128, elements: !282)
!281 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!282 = !{!283, !298}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !280, file: !281, line: 231, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{!287, !207, !291, !256}
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !201, line: 60, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !289, line: 73, baseType: !290)
!289 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !289, line: 15, baseType: !142)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !281, line: 30, size: 128, elements: !293)
!293 = !{!294, !295}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !292, file: !281, line: 31, baseType: !196, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !292, file: !281, line: 32, baseType: !296, size: 16, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !201, line: 19, baseType: !297)
!297 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !280, file: !281, line: 232, baseType: !299, size: 64, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!287, !207, !291, !196, !302}
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 55, baseType: !303)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !289, line: 72, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !289, line: 16, baseType: !305)
!305 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !271, file: !193, line: 141, baseType: !307, size: 64, offset: 128)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !271, file: !193, line: 142, baseType: !309, size: 64, offset: 192)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !281, line: 84, size: 320, elements: !313)
!313 = !{!314, !315, !319, !4250, !4251}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !312, file: !281, line: 85, baseType: !196, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !312, file: !281, line: 86, baseType: !316, size: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!296, !207, !291, !240}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !312, file: !281, line: 88, baseType: !320, size: 64, offset: 128)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!296, !207, !323, !240}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !281, line: 168, size: 448, elements: !325)
!325 = !{!326, !327, !328, !329, !4245, !4246}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !324, file: !281, line: 169, baseType: !292, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !324, file: !281, line: 170, baseType: !302, size: 64, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !324, file: !281, line: 171, baseType: !182, size: 64, offset: 192)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !324, file: !281, line: 172, baseType: !330, size: 64, offset: 256)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{!287, !333, !207, !323, !256, !512, !302}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !86, line: 916, size: 1856, align: 32, elements: !335)
!335 = !{!336, !354, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4228, !4229, !4238, !4239, !4240, !4241, !4242, !4243, !4244}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !334, file: !86, line: 920, baseType: !337, size: 128)
!337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !334, file: !86, line: 917, size: 128, elements: !338)
!338 = !{!339, !345}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !337, file: !86, line: 918, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !341, line: 58, size: 64, elements: !342)
!341 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!342 = !{!343}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !340, file: !341, line: 59, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !337, file: !86, line: 919, baseType: !346, size: 128, align: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !201, line: 216, size: 128, align: 64, elements: !347)
!347 = !{!348, !350}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !346, file: !201, line: 217, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !346, file: !201, line: 218, baseType: !351, size: 64, offset: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{null, !349}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !334, file: !86, line: 921, baseType: !355, size: 128, offset: 128)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !356, line: 8, size: 128, elements: !357)
!356 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!357 = !{!358, !362}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !355, file: !356, line: 9, baseType: !359, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!360 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !361, line: 18, flags: DIFlagFwdDecl)
!361 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!362 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !355, file: !356, line: 10, baseType: !363, size: 64, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !361, line: 89, size: 1536, elements: !365)
!365 = !{!366, !367, !377, !385, !386, !409, !4178, !4180, !4192, !4193, !4194, !4195, !4196, !4202, !4203, !4204}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !364, file: !361, line: 91, baseType: !7, size: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !364, file: !361, line: 92, baseType: !368, size: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !369, line: 277, baseType: !370)
!369 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !369, line: 277, size: 32, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !370, file: !369, line: 277, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !369, line: 70, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !369, line: 65, size: 32, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !374, file: !369, line: 66, baseType: !7, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !364, file: !361, line: 93, baseType: !378, size: 128, offset: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !379, line: 38, size: 128, elements: !380)
!379 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!380 = !{!381, !383}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !378, file: !379, line: 39, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !378, file: !379, line: 39, baseType: !384, size: 64, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !364, file: !361, line: 94, baseType: !363, size: 64, offset: 192)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !364, file: !361, line: 95, baseType: !387, size: 128, offset: 256)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !361, line: 47, size: 128, elements: !388)
!388 = !{!389, !405}
!389 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !361, line: 48, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !361, line: 48, size: 64, elements: !391)
!391 = !{!392, !401}
!392 = !DIDerivedType(tag: DW_TAG_member, scope: !390, file: !361, line: 49, baseType: !393, size: 64)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !390, file: !361, line: 49, size: 64, elements: !394)
!394 = !{!395, !400}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !393, file: !361, line: 50, baseType: !396, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !397, line: 21, baseType: !398)
!397 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !399, line: 27, baseType: !7)
!399 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!400 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !393, file: !361, line: 50, baseType: !396, size: 32, offset: 32)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !390, file: !361, line: 52, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !397, line: 23, baseType: !403)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !399, line: 31, baseType: !404)
!404 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !387, file: !361, line: 54, baseType: !406, size: 64, offset: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!408 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !364, file: !361, line: 96, baseType: !410, size: 64, offset: 384)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !86, line: 610, size: 4224, elements: !412)
!412 = !{!413, !414, !415, !423, !430, !431, !579, !3891, !3892, !3893, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !4154, !4162, !4163, !4164, !4174, !4175, !4176, !4177}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !411, file: !86, line: 611, baseType: !296, size: 16)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !411, file: !86, line: 612, baseType: !297, size: 16, offset: 16)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !411, file: !86, line: 613, baseType: !416, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !417, line: 23, baseType: !418)
!417 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !417, line: 21, size: 32, elements: !419)
!419 = !{!420}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !418, file: !417, line: 22, baseType: !421, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !201, line: 32, baseType: !422)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !289, line: 49, baseType: !7)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !411, file: !86, line: 614, baseType: !424, size: 32, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !417, line: 28, baseType: !425)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !417, line: 26, size: 32, elements: !426)
!426 = !{!427}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !425, file: !417, line: 27, baseType: !428, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !201, line: 33, baseType: !429)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !289, line: 50, baseType: !7)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !411, file: !86, line: 615, baseType: !7, size: 32, offset: 96)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !411, file: !86, line: 622, baseType: !432, size: 64, offset: 128)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !86, line: 1864, size: 1536, align: 512, elements: !435)
!435 = !{!436, !440, !453, !457, !463, !467, !473, !477, !481, !485, !489, !490, !496, !500, !526, !555, !559, !565, !570, !574, !575}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !434, file: !86, line: 1865, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DISubroutineType(types: !439)
!439 = !{!363, !410, !363, !7}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !434, file: !86, line: 1866, baseType: !441, size: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!196, !363, !410, !444}
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !446, line: 10, size: 128, elements: !447)
!446 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!447 = !{!448, !452}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !445, file: !446, line: 11, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DISubroutineType(types: !451)
!451 = !{null, !182}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !445, file: !446, line: 12, baseType: !182, size: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !434, file: !86, line: 1867, baseType: !454, size: 64, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!240, !410, !240}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !434, file: !86, line: 1868, baseType: !458, size: 64, offset: 192)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!461, !410, !240}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !86, line: 581, flags: DIFlagFwdDecl)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !434, file: !86, line: 1870, baseType: !464, size: 64, offset: 256)
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = !DISubroutineType(types: !466)
!466 = !{!240, !363, !256, !240}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !434, file: !86, line: 1872, baseType: !468, size: 64, offset: 320)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{!240, !410, !363, !296, !471}
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !201, line: 30, baseType: !472)
!472 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !434, file: !86, line: 1873, baseType: !474, size: 64, offset: 384)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{!240, !363, !410, !363}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !434, file: !86, line: 1874, baseType: !478, size: 64, offset: 448)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!240, !410, !363}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !434, file: !86, line: 1875, baseType: !482, size: 64, offset: 512)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!240, !410, !363, !196}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !434, file: !86, line: 1876, baseType: !486, size: 64, offset: 576)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DISubroutineType(types: !488)
!488 = !{!240, !410, !363, !296}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !434, file: !86, line: 1877, baseType: !478, size: 64, offset: 640)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !434, file: !86, line: 1878, baseType: !491, size: 64, offset: 704)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!240, !410, !363, !296, !494}
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !201, line: 16, baseType: !495)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !201, line: 13, baseType: !396)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !434, file: !86, line: 1879, baseType: !497, size: 64, offset: 768)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!240, !410, !363, !410, !363, !7}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !434, file: !86, line: 1881, baseType: !501, size: 64, offset: 832)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DISubroutineType(types: !503)
!503 = !{!240, !363, !504}
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !86, line: 219, size: 640, elements: !506)
!506 = !{!507, !508, !509, !510, !511, !515, !523, !524, !525}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !505, file: !86, line: 220, baseType: !7, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !505, file: !86, line: 221, baseType: !296, size: 16, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !505, file: !86, line: 222, baseType: !416, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !505, file: !86, line: 223, baseType: !424, size: 32, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !505, file: !86, line: 224, baseType: !512, size: 64, offset: 128)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !201, line: 46, baseType: !513)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !289, line: 88, baseType: !514)
!514 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !505, file: !86, line: 225, baseType: !516, size: 128, offset: 192)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !517, line: 13, size: 128, elements: !518)
!517 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!518 = !{!519, !522}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !516, file: !517, line: 14, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !517, line: 8, baseType: !521)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !399, line: 30, baseType: !514)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !516, file: !517, line: 15, baseType: !142, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !505, file: !86, line: 226, baseType: !516, size: 128, offset: 320)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !505, file: !86, line: 227, baseType: !516, size: 128, offset: 448)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !505, file: !86, line: 234, baseType: !333, size: 64, offset: 576)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !434, file: !86, line: 1882, baseType: !527, size: 64, offset: 896)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!240, !530, !532, !396, !7}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !534, line: 22, size: 1152, elements: !535)
!534 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!535 = !{!536, !537, !538, !539, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !533, file: !534, line: 23, baseType: !396, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !533, file: !534, line: 24, baseType: !296, size: 16, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !533, file: !534, line: 25, baseType: !7, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !533, file: !534, line: 26, baseType: !540, size: 32, offset: 96)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !201, line: 104, baseType: !396)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !533, file: !534, line: 27, baseType: !402, size: 64, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !533, file: !534, line: 28, baseType: !402, size: 64, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !533, file: !534, line: 37, baseType: !402, size: 64, offset: 256)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !533, file: !534, line: 38, baseType: !494, size: 32, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !533, file: !534, line: 39, baseType: !494, size: 32, offset: 352)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !533, file: !534, line: 40, baseType: !416, size: 32, offset: 384)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !533, file: !534, line: 41, baseType: !424, size: 32, offset: 416)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !533, file: !534, line: 42, baseType: !512, size: 64, offset: 448)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !533, file: !534, line: 43, baseType: !516, size: 128, offset: 512)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !533, file: !534, line: 44, baseType: !516, size: 128, offset: 640)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !533, file: !534, line: 45, baseType: !516, size: 128, offset: 768)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !533, file: !534, line: 46, baseType: !516, size: 128, offset: 896)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !533, file: !534, line: 47, baseType: !402, size: 64, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !533, file: !534, line: 48, baseType: !402, size: 64, offset: 1088)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !434, file: !86, line: 1883, baseType: !556, size: 64, offset: 960)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DISubroutineType(types: !558)
!558 = !{!287, !363, !256, !302}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !434, file: !86, line: 1884, baseType: !560, size: 64, offset: 1024)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DISubroutineType(types: !562)
!562 = !{!240, !410, !563, !402, !402}
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !86, line: 50, flags: DIFlagFwdDecl)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !434, file: !86, line: 1886, baseType: !566, size: 64, offset: 1088)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!240, !410, !569, !240}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !434, file: !86, line: 1887, baseType: !571, size: 64, offset: 1152)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!240, !410, !363, !333, !7, !296}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !434, file: !86, line: 1890, baseType: !486, size: 64, offset: 1216)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !434, file: !86, line: 1891, baseType: !576, size: 64, offset: 1280)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DISubroutineType(types: !578)
!578 = !{!240, !410, !461, !240}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !411, file: !86, line: 623, baseType: !580, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !86, line: 1416, size: 9472, elements: !582)
!582 = !{!583, !584, !585, !586, !587, !588, !638, !3505, !3587, !3670, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3686, !3690, !3691, !3692, !3693, !3696, !3697, !3698, !3739, !3765, !3766, !3767, !3768, !3769, !3770, !3773, !3774, !3781, !3782, !3783, !3784, !3785, !3844, !3845, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !581, file: !86, line: 1417, baseType: !200, size: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !581, file: !86, line: 1418, baseType: !494, size: 32, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !581, file: !86, line: 1419, baseType: !408, size: 8, offset: 160)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !581, file: !86, line: 1420, baseType: !305, size: 64, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !581, file: !86, line: 1421, baseType: !512, size: 64, offset: 256)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !581, file: !86, line: 1422, baseType: !589, size: 64, offset: 320)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !86, line: 2228, size: 576, elements: !591)
!591 = !{!592, !593, !594, !601, !605, !609, !613, !617, !618, !628, !631, !632, !633, !635, !636, !637}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !590, file: !86, line: 2229, baseType: !196, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !590, file: !86, line: 2230, baseType: !240, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !590, file: !86, line: 2238, baseType: !595, size: 64, offset: 128)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!240, !598}
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !600, line: 28, flags: DIFlagFwdDecl)
!600 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!601 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !590, file: !86, line: 2239, baseType: !602, size: 64, offset: 192)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !604)
!604 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !86, line: 70, flags: DIFlagFwdDecl)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !590, file: !86, line: 2240, baseType: !606, size: 64, offset: 256)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!363, !589, !240, !196, !182}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !590, file: !86, line: 2242, baseType: !610, size: 64, offset: 320)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{null, !580}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !590, file: !86, line: 2243, baseType: !614, size: 64, offset: 384)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !616, line: 76, flags: DIFlagFwdDecl)
!616 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !590, file: !86, line: 2244, baseType: !589, size: 64, offset: 448)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !590, file: !86, line: 2245, baseType: !619, size: 64, offset: 512)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !201, line: 182, size: 64, elements: !620)
!620 = !{!621}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !619, file: !201, line: 183, baseType: !622, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !201, line: 186, size: 128, elements: !624)
!624 = !{!625, !626}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !623, file: !201, line: 187, baseType: !622, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !623, file: !201, line: 187, baseType: !627, size: 64, offset: 64)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !590, file: !86, line: 2247, baseType: !629, offset: 576)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !630, line: 187, elements: !228)
!630 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!631 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !590, file: !86, line: 2248, baseType: !629, offset: 576)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !590, file: !86, line: 2249, baseType: !629, offset: 576)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !590, file: !86, line: 2250, baseType: !634, offset: 576)
!634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, elements: !257)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !590, file: !86, line: 2252, baseType: !629, offset: 576)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !590, file: !86, line: 2253, baseType: !629, offset: 576)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !590, file: !86, line: 2254, baseType: !629, offset: 576)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !581, file: !86, line: 1423, baseType: !639, size: 64, offset: 384)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !86, line: 1935, size: 1472, elements: !642)
!642 = !{!643, !647, !651, !652, !656, !676, !680, !681, !682, !686, !690, !691, !692, !693, !699, !704, !705, !761, !762, !763, !764, !3489, !3504}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !641, file: !86, line: 1936, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DISubroutineType(types: !646)
!646 = !{!410, !580}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !641, file: !86, line: 1937, baseType: !648, size: 64, offset: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{null, !410}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !641, file: !86, line: 1938, baseType: !648, size: 64, offset: 128)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !641, file: !86, line: 1940, baseType: !653, size: 64, offset: 192)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{null, !410, !240}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !641, file: !86, line: 1941, baseType: !657, size: 64, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{!240, !410, !660}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !662)
!662 = !{!663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !661, file: !6, line: 52, baseType: !142, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !661, file: !6, line: 54, baseType: !142, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !661, file: !6, line: 61, baseType: !512, size: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !661, file: !6, line: 62, baseType: !512, size: 64, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !661, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !661, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !661, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !661, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !661, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !661, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !661, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !661, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !661, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !641, file: !86, line: 1942, baseType: !677, size: 64, offset: 320)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!240, !410}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !641, file: !86, line: 1943, baseType: !648, size: 64, offset: 384)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !641, file: !86, line: 1944, baseType: !610, size: 64, offset: 448)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !641, file: !86, line: 1945, baseType: !683, size: 64, offset: 512)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DISubroutineType(types: !685)
!685 = !{!240, !580, !240}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !641, file: !86, line: 1946, baseType: !687, size: 64, offset: 576)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!240, !580}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !641, file: !86, line: 1947, baseType: !687, size: 64, offset: 640)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !641, file: !86, line: 1948, baseType: !687, size: 64, offset: 704)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !641, file: !86, line: 1949, baseType: !687, size: 64, offset: 768)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !641, file: !86, line: 1950, baseType: !694, size: 64, offset: 832)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!240, !363, !697}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !86, line: 57, flags: DIFlagFwdDecl)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !641, file: !86, line: 1951, baseType: !700, size: 64, offset: 896)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!240, !580, !703, !256}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !641, file: !86, line: 1952, baseType: !610, size: 64, offset: 960)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !641, file: !86, line: 1954, baseType: !706, size: 64, offset: 1024)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!240, !709, !363}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !711, line: 16, size: 896, elements: !712)
!711 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!712 = !{!713, !714, !715, !716, !717, !718, !719, !720, !734, !756, !757, !760}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !710, file: !711, line: 17, baseType: !256, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !710, file: !711, line: 18, baseType: !302, size: 64, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !710, file: !711, line: 19, baseType: !302, size: 64, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !710, file: !711, line: 20, baseType: !302, size: 64, offset: 192)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !710, file: !711, line: 21, baseType: !302, size: 64, offset: 256)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !710, file: !711, line: 22, baseType: !512, size: 64, offset: 320)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !710, file: !711, line: 23, baseType: !512, size: 64, offset: 384)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !710, file: !711, line: 24, baseType: !721, size: 192, offset: 448)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !722, line: 53, size: 192, elements: !723)
!722 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!723 = !{!724, !732, !733}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !721, file: !722, line: 54, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !726, line: 13, baseType: !727)
!726 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !201, line: 175, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 173, size: 64, elements: !729)
!729 = !{!730}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !728, file: !201, line: 174, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !397, line: 22, baseType: !521)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !721, file: !722, line: 55, baseType: !214, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !721, file: !722, line: 59, baseType: !200, size: 128, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !710, file: !711, line: 25, baseType: !735, size: 64, offset: 640)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !711, line: 31, size: 256, elements: !738)
!738 = !{!739, !744, !748, !752}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !737, file: !711, line: 32, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!182, !709, !743}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !737, file: !711, line: 33, baseType: !745, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !709, !182}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !737, file: !711, line: 34, baseType: !749, size: 64, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!182, !709, !182, !743}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !737, file: !711, line: 35, baseType: !753, size: 64, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{!240, !709, !182}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !710, file: !711, line: 26, baseType: !240, size: 32, offset: 704)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !710, file: !711, line: 27, baseType: !758, size: 64, offset: 768)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !710, file: !711, line: 28, baseType: !182, size: 64, offset: 832)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !641, file: !86, line: 1955, baseType: !706, size: 64, offset: 1088)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !641, file: !86, line: 1956, baseType: !706, size: 64, offset: 1152)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !641, file: !86, line: 1957, baseType: !706, size: 64, offset: 1216)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !641, file: !86, line: 1963, baseType: !765, size: 64, offset: 1280)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{!240, !580, !768, !791}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !770, line: 68, size: 512, align: 128, elements: !771)
!770 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!771 = !{!772, !773, !3481, !3488}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !769, file: !770, line: 69, baseType: !305, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !769, file: !770, line: 77, baseType: !774, size: 320, offset: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !769, file: !770, line: 77, size: 320, elements: !775)
!775 = !{!776, !1909, !1914, !1940, !1948, !1954, !3432, !3480}
!776 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 78, baseType: !777, size: 320)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 78, size: 320, elements: !778)
!778 = !{!779, !780, !1907, !1908}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !777, file: !770, line: 84, baseType: !200, size: 128)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !777, file: !770, line: 86, baseType: !781, size: 64, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !86, line: 451, size: 1216, align: 64, elements: !783)
!783 = !{!784, !785, !793, !794, !799, !814, !823, !824, !825, !826, !1900, !1901, !1904, !1905, !1906}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !782, file: !86, line: 452, baseType: !410, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !782, file: !86, line: 453, baseType: !786, size: 128, offset: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !787, line: 292, size: 128, elements: !788)
!787 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!788 = !{!789, !790, !792}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !786, file: !787, line: 293, baseType: !214)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !786, file: !787, line: 295, baseType: !791, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !201, line: 148, baseType: !7)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !786, file: !787, line: 296, baseType: !182, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !782, file: !86, line: 454, baseType: !791, size: 32, offset: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !782, file: !86, line: 455, baseType: !795, size: 32, offset: 224)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !201, line: 168, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !201, line: 166, size: 32, elements: !797)
!797 = !{!798}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !796, file: !201, line: 167, baseType: !240, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !782, file: !86, line: 460, baseType: !800, size: 128, offset: 256)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !801, line: 125, size: 128, elements: !802)
!801 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!802 = !{!803, !813}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !800, file: !801, line: 126, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !801, line: 31, size: 64, elements: !805)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !804, file: !801, line: 32, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !801, line: 24, size: 192, align: 64, elements: !809)
!809 = !{!810, !811, !812}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !808, file: !801, line: 25, baseType: !305, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !808, file: !801, line: 26, baseType: !807, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !808, file: !801, line: 27, baseType: !807, size: 64, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !800, file: !801, line: 127, baseType: !807, size: 64, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !782, file: !86, line: 461, baseType: !815, size: 256, offset: 384)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !816, line: 35, size: 256, elements: !817)
!816 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!817 = !{!818, !819, !820, !822}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !815, file: !816, line: 36, baseType: !725, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !815, file: !816, line: 42, baseType: !725, size: 64, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !815, file: !816, line: 46, baseType: !821, offset: 128)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !215, line: 29, baseType: !222)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !815, file: !816, line: 47, baseType: !200, size: 128, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !782, file: !86, line: 462, baseType: !305, size: 64, offset: 640)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !782, file: !86, line: 463, baseType: !305, size: 64, offset: 704)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !782, file: !86, line: 464, baseType: !305, size: 64, offset: 768)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !782, file: !86, line: 465, baseType: !827, size: 64, offset: 832)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !86, line: 367, size: 1408, elements: !830)
!830 = !{!831, !835, !839, !843, !847, !851, !864, !870, !874, !879, !883, !887, !891, !936, !940, !946, !947, !948, !952, !957, !961, !1896}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !829, file: !86, line: 368, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!240, !768, !660}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !829, file: !86, line: 369, baseType: !836, size: 64, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!240, !333, !768}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !829, file: !86, line: 372, baseType: !840, size: 64, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!240, !781, !660}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !829, file: !86, line: 375, baseType: !844, size: 64, offset: 192)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!240, !768}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !829, file: !86, line: 381, baseType: !848, size: 64, offset: 256)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{!240, !333, !781, !204, !7}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !829, file: !86, line: 383, baseType: !852, size: 64, offset: 320)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{null, !855}
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !857, line: 795, size: 256, elements: !858)
!857 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!858 = !{!859, !860, !861, !862, !863}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !856, file: !857, line: 796, baseType: !333, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !856, file: !857, line: 797, baseType: !781, size: 64, offset: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !856, file: !857, line: 799, baseType: !305, size: 64, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !856, file: !857, line: 800, baseType: !7, size: 32, offset: 192)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !856, file: !857, line: 801, baseType: !7, size: 32, offset: 224)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !829, file: !86, line: 385, baseType: !865, size: 64, offset: 384)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!240, !333, !781, !512, !7, !7, !868, !869}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !829, file: !86, line: 388, baseType: !871, size: 64, offset: 448)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{!240, !333, !781, !512, !7, !7, !768, !182}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !829, file: !86, line: 393, baseType: !875, size: 64, offset: 512)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DISubroutineType(types: !877)
!877 = !{!878, !781, !878}
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !201, line: 125, baseType: !402)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !829, file: !86, line: 394, baseType: !880, size: 64, offset: 576)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !768, !7, !7}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !829, file: !86, line: 395, baseType: !884, size: 64, offset: 640)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!240, !768, !791}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !829, file: !86, line: 396, baseType: !888, size: 64, offset: 704)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !768}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !829, file: !86, line: 397, baseType: !892, size: 64, offset: 768)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!287, !895, !934}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !86, line: 320, size: 384, elements: !897)
!897 = !{!898, !899, !900, !904, !905, !906, !909, !910}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !896, file: !86, line: 321, baseType: !333, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !896, file: !86, line: 326, baseType: !512, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !896, file: !86, line: 327, baseType: !901, size: 64, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !895, !142, !142}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !896, file: !86, line: 328, baseType: !182, size: 64, offset: 192)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !896, file: !86, line: 329, baseType: !240, size: 32, offset: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !896, file: !86, line: 330, baseType: !907, size: 16, offset: 288)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !397, line: 19, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !399, line: 24, baseType: !297)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !896, file: !86, line: 331, baseType: !907, size: 16, offset: 304)
!910 = !DIDerivedType(tag: DW_TAG_member, scope: !896, file: !86, line: 332, baseType: !911, size: 64, offset: 320)
!911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !896, file: !86, line: 332, size: 64, elements: !912)
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !911, file: !86, line: 333, baseType: !7, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !911, file: !86, line: 334, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !857, line: 569, size: 448, elements: !917)
!917 = !{!918, !919, !920}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !916, file: !857, line: 570, baseType: !768, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !916, file: !857, line: 571, baseType: !240, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !916, file: !857, line: 572, baseType: !921, size: 320, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !922, line: 14, baseType: !923)
!922 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !922, line: 29, size: 320, elements: !924)
!924 = !{!925, !926, !927, !933}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !923, file: !922, line: 30, baseType: !7, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !923, file: !922, line: 31, baseType: !182, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !923, file: !922, line: 32, baseType: !928, size: 64, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !922, line: 16, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!240, !932, !7, !240, !182}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !923, file: !922, line: 33, baseType: !200, size: 128, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !86, line: 64, flags: DIFlagFwdDecl)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !829, file: !86, line: 402, baseType: !937, size: 64, offset: 832)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!240, !781, !768, !768, !11}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !829, file: !86, line: 404, baseType: !941, size: 64, offset: 896)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!471, !768, !944}
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !945, line: 305, baseType: !7)
!945 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!946 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !829, file: !86, line: 405, baseType: !888, size: 64, offset: 960)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !829, file: !86, line: 406, baseType: !844, size: 64, offset: 1024)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !829, file: !86, line: 407, baseType: !949, size: 64, offset: 1088)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!240, !768, !305, !305}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !829, file: !86, line: 409, baseType: !953, size: 64, offset: 1152)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{null, !768, !956, !956}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !829, file: !86, line: 410, baseType: !958, size: 64, offset: 1216)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!240, !781, !768}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !829, file: !86, line: 413, baseType: !962, size: 64, offset: 1280)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!240, !965, !333, !1895}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !967, line: 240, size: 1600, elements: !968)
!967 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!968 = !{!969, !970, !972, !979, !981, !982, !984, !991, !996, !997, !998, !999, !1000, !1001, !1002, !1004, !1010, !1011, !1887, !1888, !1889, !1890, !1891, !1892, !1893}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !966, file: !967, line: 241, baseType: !305, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !966, file: !967, line: 242, baseType: !971, size: 16, offset: 64)
!971 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !966, file: !967, line: 243, baseType: !973, size: 320, offset: 128)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !974, line: 83, size: 320, elements: !975)
!974 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!975 = !{!976, !977, !978}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !973, file: !974, line: 84, baseType: !240, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !973, file: !974, line: 85, baseType: !200, size: 128, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !973, file: !974, line: 86, baseType: !200, size: 128, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !966, file: !967, line: 244, baseType: !980, size: 8, offset: 448)
!980 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !966, file: !967, line: 245, baseType: !7, size: 32, offset: 480)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !966, file: !967, line: 246, baseType: !983, size: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !966, file: !967, line: 247, baseType: !985, size: 64, offset: 576)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !967, line: 208, size: 32, elements: !987)
!987 = !{!988, !989, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !986, file: !967, line: 209, baseType: !214)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !986, file: !967, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !986, file: !967, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !966, file: !967, line: 248, baseType: !992, size: 64, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !967, line: 232, size: 64, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !992, file: !967, line: 233, baseType: !986, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !992, file: !967, line: 234, baseType: !986, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !966, file: !967, line: 249, baseType: !7, size: 32, offset: 704)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !966, file: !967, line: 250, baseType: !7, size: 32, offset: 736)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !966, file: !967, line: 251, baseType: !7, size: 32, offset: 768)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !966, file: !967, line: 252, baseType: !7, size: 32, offset: 800)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !966, file: !967, line: 253, baseType: !7, size: 32, offset: 832)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !966, file: !967, line: 254, baseType: !7, size: 32, offset: 864)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !966, file: !967, line: 255, baseType: !1003, size: 64, offset: 896)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !966, file: !967, line: 256, baseType: !1005, size: 64, offset: 960)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !967, line: 227, size: 64, elements: !1007)
!1007 = !{!1008, !1009}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1006, file: !967, line: 228, baseType: !986, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1006, file: !967, line: 229, baseType: !7, size: 32, offset: 32)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !966, file: !967, line: 257, baseType: !804, size: 64, offset: 1024)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !966, file: !967, line: 258, baseType: !1012, size: 64, offset: 1088)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1014, line: 22, size: 1344, elements: !1015)
!1014 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1015 = !{!1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1030, !1094, !1095, !1096, !1884, !1885, !1886}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1013, file: !1014, line: 23, baseType: !494, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1013, file: !1014, line: 24, baseType: !240, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1013, file: !1014, line: 25, baseType: !410, size: 64, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1013, file: !1014, line: 26, baseType: !580, size: 64, offset: 128)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1013, file: !1014, line: 27, baseType: !721, size: 192, offset: 192)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1013, file: !1014, line: 28, baseType: !182, size: 64, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1013, file: !1014, line: 29, baseType: !182, size: 64, offset: 448)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1013, file: !1014, line: 30, baseType: !240, size: 32, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1013, file: !1014, line: 31, baseType: !471, size: 8, offset: 544)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1013, file: !1014, line: 33, baseType: !200, size: 128, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1013, file: !1014, line: 35, baseType: !1012, size: 64, offset: 704)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1013, file: !1014, line: 36, baseType: !1028, size: 8, offset: 768)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !397, line: 17, baseType: !1029)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !399, line: 21, baseType: !408)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1013, file: !1014, line: 37, baseType: !1031, size: 64, offset: 832)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1033, line: 53, size: 6592, elements: !1034)
!1033 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1034 = !{!1035, !1036, !1037, !1038, !1041, !1062, !1063, !1064, !1065, !1066, !1076}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1032, file: !1033, line: 54, baseType: !878, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1032, file: !1033, line: 60, baseType: !878, size: 64, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1032, file: !1033, line: 64, baseType: !305, size: 64, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1032, file: !1033, line: 65, baseType: !1039, size: 64, offset: 192)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1033, line: 65, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1032, file: !1033, line: 66, baseType: !1042, size: 128, offset: 256)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1043, line: 105, size: 128, elements: !1044)
!1043 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1044 = !{!1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1042, file: !1043, line: 110, baseType: !305, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1042, file: !1043, line: 118, baseType: !1047, size: 64, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1043, line: 95, size: 448, elements: !1049)
!1049 = !{!1050, !1051, !1057, !1058, !1059, !1060, !1061}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1048, file: !1043, line: 96, baseType: !725, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1048, file: !1043, line: 97, baseType: !1052, size: 64, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1043, line: 60, baseType: !1054)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{null, !1056}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1048, file: !1043, line: 98, baseType: !1052, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1048, file: !1043, line: 99, baseType: !471, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1048, file: !1043, line: 100, baseType: !471, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1048, file: !1043, line: 101, baseType: !346, size: 128, align: 64, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1048, file: !1043, line: 102, baseType: !1056, size: 64, offset: 384)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1032, file: !1033, line: 68, baseType: !189, size: 5568, offset: 384)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1032, file: !1033, line: 69, baseType: !207, size: 64, offset: 5952)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1032, file: !1033, line: 70, baseType: !240, size: 32, offset: 6016)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1032, file: !1033, line: 70, baseType: !240, size: 32, offset: 6048)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1032, file: !1033, line: 71, baseType: !1067, size: 64, offset: 6080)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1033, line: 48, size: 808, elements: !1069)
!1069 = !{!1070, !1074}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !1068, file: !1033, line: 49, baseType: !1071, size: 296)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 296, elements: !1072)
!1072 = !{!1073}
!1073 = !DISubrange(count: 37)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !1068, file: !1033, line: 50, baseType: !1075, size: 512, offset: 296)
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 512, elements: !261)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1032, file: !1033, line: 75, baseType: !1077, size: 448, offset: 6144)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !141, line: 124, size: 448, elements: !1078)
!1078 = !{!1079, !1090, !1091}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1077, file: !141, line: 125, baseType: !1080, size: 256)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !141, line: 102, size: 256, elements: !1081)
!1081 = !{!1082, !1083, !1084}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1080, file: !141, line: 103, baseType: !725, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1080, file: !141, line: 104, baseType: !200, size: 128, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1080, file: !141, line: 105, baseType: !1085, size: 64, offset: 192)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !141, line: 21, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{null, !1089}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1077, file: !141, line: 126, baseType: !346, size: 128, align: 64, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1077, file: !141, line: 129, baseType: !1092, size: 64, offset: 384)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !141, line: 18, flags: DIFlagFwdDecl)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1013, file: !1014, line: 39, baseType: !7, size: 32, offset: 896)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1013, file: !1014, line: 41, baseType: !214, offset: 928)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1013, file: !1014, line: 42, baseType: !1097, size: 64, offset: 960)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1033, line: 167, size: 8512, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1107, !1108, !1109, !1120, !1121, !1311, !1865, !1866, !1867, !1868, !1869, !1870, !1873, !1874, !1877, !1878, !1879, !1882}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1098, file: !1033, line: 171, baseType: !240, size: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1098, file: !1033, line: 172, baseType: !240, size: 32, offset: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1098, file: !1033, line: 173, baseType: !240, size: 32, offset: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1098, file: !1033, line: 176, baseType: !1104, size: 256, offset: 96)
!1104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 256, elements: !1105)
!1105 = !{!1106}
!1106 = !DISubrange(count: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1098, file: !1033, line: 178, baseType: !297, size: 16, offset: 352)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1098, file: !1033, line: 179, baseType: !297, size: 16, offset: 368)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1098, file: !1033, line: 186, baseType: !1110, size: 64, offset: 384)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1033, line: 149, size: 256, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1111, file: !1033, line: 150, baseType: !346, size: 128, align: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1111, file: !1033, line: 151, baseType: !240, size: 32, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1111, file: !1033, line: 152, baseType: !1031, size: 64, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1111, file: !1033, line: 153, baseType: !1117, offset: 256)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, elements: !1118)
!1118 = !{!1119}
!1119 = !DISubrange(count: -1)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1098, file: !1033, line: 187, baseType: !1032, size: 6592, offset: 448)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1098, file: !1033, line: 189, baseType: !1122, size: 64, offset: 7040)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !19, line: 1844, size: 960, elements: !1125)
!1125 = !{!1126, !1233, !1238, !1242, !1246, !1250, !1251, !1255, !1259, !1263, !1269, !1273, !1301, !1306, !1307}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !1124, file: !19, line: 1845, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1014, line: 515, baseType: !7)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1014, line: 203, size: 832, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1138, !1139, !1140, !1142, !1143, !1144, !1152, !1157, !1158, !1183, !1184, !1185, !1186, !1187, !1232}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1132, file: !1014, line: 204, baseType: !1131, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1132, file: !1014, line: 205, baseType: !1097, size: 64, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1132, file: !1014, line: 206, baseType: !7, size: 32, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1132, file: !1014, line: 210, baseType: !297, size: 16, offset: 160)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1132, file: !1014, line: 211, baseType: !297, size: 16, offset: 176)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1132, file: !1014, line: 212, baseType: !297, size: 16, offset: 192)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1132, file: !1014, line: 213, baseType: !1141, size: 8, offset: 208)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1014, line: 58, baseType: !1028)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1132, file: !1014, line: 214, baseType: !1028, size: 8, offset: 216)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1132, file: !1014, line: 215, baseType: !795, size: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1132, file: !1014, line: 217, baseType: !1145, size: 192, offset: 256)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1146, line: 37, size: 192, elements: !1147)
!1146 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1147 = !{!1148, !1149, !1150, !1151}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !1145, file: !1146, line: 38, baseType: !878, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !1145, file: !1146, line: 40, baseType: !7, size: 32, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !1145, file: !1146, line: 42, baseType: !7, size: 32, offset: 96)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !1145, file: !1146, line: 44, baseType: !7, size: 32, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1132, file: !1014, line: 219, baseType: !1153, size: 64, offset: 448)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1014, line: 19, baseType: !1155)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{null, !1131}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1132, file: !1014, line: 221, baseType: !182, size: 64, offset: 512)
!1158 = !DIDerivedType(tag: DW_TAG_member, scope: !1132, file: !1014, line: 240, baseType: !1159, size: 64, offset: 576)
!1159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1132, file: !1014, line: 240, size: 64, elements: !1160)
!1160 = !{!1161}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !1159, file: !1014, line: 242, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1164, line: 313, size: 832, elements: !1165)
!1164 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1165 = !{!1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1181}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !1163, file: !1164, line: 314, baseType: !1131, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !1163, file: !1164, line: 316, baseType: !1145, size: 192, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !1163, file: !1164, line: 318, baseType: !297, size: 16, offset: 256)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !1163, file: !1164, line: 319, baseType: !297, size: 16, offset: 272)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !1163, file: !1164, line: 320, baseType: !297, size: 16, offset: 288)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !1163, file: !1164, line: 321, baseType: !297, size: 16, offset: 304)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !1163, file: !1164, line: 323, baseType: !1145, size: 192, offset: 320)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !1163, file: !1164, line: 325, baseType: !1080, size: 256, offset: 512)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !1163, file: !1164, line: 327, baseType: !1175, size: 64, offset: 768)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1146, line: 31, size: 128, elements: !1177)
!1177 = !{!1178, !1179, !1180}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1176, file: !1146, line: 32, baseType: !768, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1176, file: !1146, line: 33, baseType: !7, size: 32, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1176, file: !1146, line: 34, baseType: !7, size: 32, offset: 96)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !1163, file: !1164, line: 328, baseType: !1182, offset: 832)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1176, elements: !1118)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1132, file: !1014, line: 246, baseType: !297, size: 16, offset: 640)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1132, file: !1014, line: 252, baseType: !297, size: 16, offset: 656)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1132, file: !1014, line: 254, baseType: !795, size: 32, offset: 672)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1132, file: !1014, line: 256, baseType: !1175, size: 64, offset: 704)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1132, file: !1014, line: 258, baseType: !1188, size: 64, offset: 768)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1164, line: 682, size: 2368, elements: !1190)
!1190 = !{!1191, !1194, !1195, !1221, !1222, !1223, !1224, !1225, !1230, !1231}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !1189, file: !1164, line: 683, baseType: !1192, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !770, line: 117, flags: DIFlagFwdDecl)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !1189, file: !1164, line: 684, baseType: !7, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !1189, file: !1164, line: 686, baseType: !1196, size: 448, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !1197, line: 26, baseType: !1198)
!1197 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !1197, line: 16, size: 448, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1210, !1215}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1198, file: !1197, line: 17, baseType: !214)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !1198, file: !1197, line: 18, baseType: !240, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !1198, file: !1197, line: 19, baseType: !240, size: 32, offset: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1198, file: !1197, line: 20, baseType: !869, size: 64, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !1198, file: !1197, line: 22, baseType: !182, size: 64, offset: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1198, file: !1197, line: 23, baseType: !1206, size: 64, offset: 192)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !1197, line: 13, baseType: !1208)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!182, !791, !182}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1198, file: !1197, line: 24, baseType: !1211, size: 64, offset: 256)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !1197, line: 14, baseType: !1213)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{null, !182, !182}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1198, file: !1197, line: 25, baseType: !1216, size: 128, offset: 320)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !922, line: 40, baseType: !1217)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !922, line: 36, size: 128, elements: !1218)
!1218 = !{!1219, !1220}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1217, file: !922, line: 37, baseType: !214)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1217, file: !922, line: 38, baseType: !200, size: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !1189, file: !1164, line: 687, baseType: !1196, size: 448, offset: 576)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !1189, file: !1164, line: 689, baseType: !1196, size: 448, offset: 1024)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !1189, file: !1164, line: 690, baseType: !1196, size: 448, offset: 1472)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !1189, file: !1164, line: 697, baseType: !214, offset: 1920)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !1189, file: !1164, line: 698, baseType: !1226, size: 128, offset: 1920)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1164, line: 554, size: 128, elements: !1227)
!1227 = !{!1228, !1229}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1226, file: !1164, line: 555, baseType: !1131, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1226, file: !1164, line: 556, baseType: !1131, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !1189, file: !1164, line: 699, baseType: !1080, size: 256, offset: 2048)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !1189, file: !1164, line: 700, baseType: !1092, size: 64, offset: 2304)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1132, file: !1014, line: 265, baseType: !1182, offset: 832)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1124, file: !19, line: 1846, baseType: !1234, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!240, !1012, !1237}
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !201, line: 150, baseType: !7)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1124, file: !19, line: 1847, baseType: !1239, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{null, !1097, !1237}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !1124, file: !19, line: 1848, baseType: !1243, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!240, !1012, !878, !768, !7}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !1124, file: !19, line: 1849, baseType: !1247, size: 64, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!240, !1012, !1237, !7, !305}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1124, file: !19, line: 1850, baseType: !1247, size: 64, offset: 320)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !1124, file: !19, line: 1851, baseType: !1252, size: 64, offset: 384)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!7, !1097, !7}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !1124, file: !19, line: 1853, baseType: !1256, size: 64, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{null, !1097}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !1124, file: !19, line: 1854, baseType: !1260, size: 64, offset: 512)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!240, !1097}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !1124, file: !19, line: 1855, baseType: !1264, size: 64, offset: 576)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!240, !1012, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !86, line: 51, flags: DIFlagFwdDecl)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !1124, file: !19, line: 1857, baseType: !1270, size: 64, offset: 640)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DISubroutineType(types: !1272)
!1272 = !{null, !1012, !305}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !1124, file: !19, line: 1858, baseType: !1274, size: 64, offset: 704)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!240, !1097, !878, !7, !1277, !182}
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !19, line: 354, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!240, !1281, !7, !182}
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !1283, line: 106, size: 512, elements: !1284)
!1283 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!1284 = !{!1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1296, !1297}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1282, file: !1283, line: 107, baseType: !403, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1282, file: !1283, line: 108, baseType: !403, size: 64, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1282, file: !1283, line: 109, baseType: !403, size: 64, offset: 128)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1282, file: !1283, line: 110, baseType: !1029, size: 8, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1282, file: !1283, line: 111, baseType: !1029, size: 8, offset: 200)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !1282, file: !1283, line: 112, baseType: !1029, size: 8, offset: 208)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1282, file: !1283, line: 113, baseType: !1029, size: 8, offset: 216)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !1282, file: !1283, line: 114, baseType: !1293, size: 32, offset: 224)
!1293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 32, elements: !1294)
!1294 = !{!1295}
!1295 = !DISubrange(count: 4)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1282, file: !1283, line: 115, baseType: !403, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1282, file: !1283, line: 116, baseType: !1298, size: 192, offset: 320)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 192, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 24)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1124, file: !19, line: 1860, baseType: !1302, size: 64, offset: 768)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!256, !1097, !1305}
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1124, file: !19, line: 1861, baseType: !614, size: 64, offset: 832)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !1124, file: !19, line: 1862, baseType: !1308, size: 64, offset: 896)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !19, line: 41, flags: DIFlagFwdDecl)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1098, file: !1033, line: 190, baseType: !1312, size: 64, offset: 7104)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !19, line: 399, size: 14464, elements: !1314)
!1314 = !{!1315, !1451, !1573, !1574, !1577, !1580, !1584, !1585, !1586, !1588, !1589, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1726, !1737, !1738, !1739, !1740, !1741, !1771, !1772, !1773, !1774, !1775, !1776, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1850, !1851, !1852, !1853, !1856, !1857, !1858, !1859, !1860, !1861}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !1313, file: !19, line: 400, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !19, line: 130, size: 2176, elements: !1318)
!1318 = !{!1319, !1320, !1323, !1326, !1327, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1341, !1348, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1414, !1415, !1416, !1449, !1450}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1317, file: !19, line: 131, baseType: !1312, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !1317, file: !19, line: 132, baseType: !1321, size: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !19, line: 132, flags: DIFlagFwdDecl)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !1317, file: !19, line: 133, baseType: !1324, size: 64, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !19, line: 133, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !1317, file: !19, line: 135, baseType: !7, size: 32, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !1317, file: !19, line: 136, baseType: !1328, size: 32, offset: 224)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !19, line: 66, baseType: !398)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1317, file: !19, line: 138, baseType: !240, size: 32, offset: 256)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !1317, file: !19, line: 139, baseType: !240, size: 32, offset: 288)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !1317, file: !19, line: 142, baseType: !7, size: 32, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !1317, file: !19, line: 143, baseType: !878, size: 64, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !1317, file: !19, line: 145, baseType: !1131, size: 64, offset: 448)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !1317, file: !19, line: 146, baseType: !1131, size: 64, offset: 512)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !1317, file: !19, line: 148, baseType: !200, size: 128, offset: 576)
!1336 = !DIDerivedType(tag: DW_TAG_member, scope: !1317, file: !19, line: 157, baseType: !1337, size: 128, offset: 704)
!1337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1317, file: !19, line: 157, size: 128, elements: !1338)
!1338 = !{!1339, !1340}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1337, file: !19, line: 158, baseType: !623, size: 128)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !1337, file: !19, line: 159, baseType: !200, size: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, scope: !1317, file: !19, line: 167, baseType: !1342, size: 192, offset: 832)
!1342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1317, file: !19, line: 167, size: 192, elements: !1343)
!1343 = !{!1344, !1345, !1346, !1347}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1342, file: !19, line: 168, baseType: !808, size: 192, align: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !1342, file: !19, line: 169, baseType: !1176, size: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !1342, file: !19, line: 170, baseType: !182, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !1342, file: !19, line: 171, baseType: !240, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, scope: !1317, file: !19, line: 180, baseType: !1349, size: 256, offset: 1024)
!1349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1317, file: !19, line: 180, size: 256, elements: !1350)
!1350 = !{!1351, !1388}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !1349, file: !19, line: 184, baseType: !1352, size: 192)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !19, line: 181, size: 192, elements: !1353)
!1353 = !{!1354, !1384}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !1352, file: !19, line: 182, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1357, line: 73, size: 448, elements: !1358)
!1357 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1358 = !{!1359, !1360, !1373, !1378, !1383}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1356, file: !1357, line: 74, baseType: !1312, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1356, file: !1357, line: 75, baseType: !1361, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1357, line: 99, size: 704, elements: !1363)
!1363 = !{!1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1362, file: !1357, line: 100, baseType: !725, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1362, file: !1357, line: 101, baseType: !795, size: 32, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1362, file: !1357, line: 102, baseType: !795, size: 32, offset: 96)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1362, file: !1357, line: 105, baseType: !214, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1362, file: !1357, line: 107, baseType: !297, size: 16, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1362, file: !1357, line: 109, baseType: !786, size: 128, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1362, file: !1357, line: 110, baseType: !1355, size: 64, offset: 320)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1362, file: !1357, line: 111, baseType: !619, size: 64, offset: 384)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1362, file: !1357, line: 113, baseType: !1080, size: 256, offset: 448)
!1373 = !DIDerivedType(tag: DW_TAG_member, scope: !1356, file: !1357, line: 83, baseType: !1374, size: 128, offset: 128)
!1374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1356, file: !1357, line: 83, size: 128, elements: !1375)
!1375 = !{!1376, !1377}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1374, file: !1357, line: 84, baseType: !200, size: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1374, file: !1357, line: 85, baseType: !1192, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, scope: !1356, file: !1357, line: 87, baseType: !1379, size: 128, offset: 256)
!1379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1356, file: !1357, line: 87, size: 128, elements: !1380)
!1380 = !{!1381, !1382}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1379, file: !1357, line: 88, baseType: !623, size: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1379, file: !1357, line: 89, baseType: !346, size: 128, align: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1356, file: !1357, line: 92, baseType: !7, size: 32, offset: 384)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1352, file: !19, line: 183, baseType: !1385, size: 128, offset: 64)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 128, elements: !1386)
!1386 = !{!1387}
!1387 = !DISubrange(count: 2)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1349, file: !19, line: 190, baseType: !1389, size: 256)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1349, file: !19, line: 186, size: 256, elements: !1390)
!1390 = !{!1391, !1392, !1393}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1389, file: !19, line: 187, baseType: !7, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1389, file: !19, line: 188, baseType: !200, size: 128, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !1389, file: !19, line: 189, baseType: !1394, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !19, line: 62, baseType: !1396)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1316, !1141}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !1317, file: !19, line: 193, baseType: !1097, size: 64, offset: 1280)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1317, file: !19, line: 194, baseType: !1031, size: 64, offset: 1344)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !1317, file: !19, line: 200, baseType: !402, size: 64, offset: 1408)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !1317, file: !19, line: 202, baseType: !402, size: 64, offset: 1472)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !1317, file: !19, line: 212, baseType: !297, size: 16, offset: 1536)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !1317, file: !19, line: 218, baseType: !297, size: 16, offset: 1552)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !1317, file: !19, line: 221, baseType: !297, size: 16, offset: 1568)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !1317, file: !19, line: 229, baseType: !297, size: 16, offset: 1584)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1317, file: !19, line: 230, baseType: !297, size: 16, offset: 1600)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1317, file: !19, line: 232, baseType: !18, size: 32, offset: 1632)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1317, file: !19, line: 233, baseType: !1409, size: 32, offset: 1664)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1410, line: 113, baseType: !1411)
!1410 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1410, line: 111, size: 32, elements: !1412)
!1412 = !{!1413}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1411, file: !1410, line: 112, baseType: !795, size: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1317, file: !19, line: 235, baseType: !7, size: 32, offset: 1696)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1317, file: !19, line: 236, baseType: !305, size: 64, offset: 1728)
!1416 = !DIDerivedType(tag: DW_TAG_member, scope: !1317, file: !19, line: 238, baseType: !1417, size: 256, offset: 1792)
!1417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1317, file: !19, line: 238, size: 256, elements: !1418)
!1418 = !{!1419, !1448}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !1417, file: !19, line: 239, baseType: !1420, size: 256)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !1421, line: 23, size: 256, elements: !1422)
!1421 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!1422 = !{!1423, !1445, !1447}
!1423 = !DIDerivedType(tag: DW_TAG_member, scope: !1420, file: !1421, line: 24, baseType: !1424, size: 128)
!1424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1420, file: !1421, line: 24, size: 128, elements: !1425)
!1425 = !{!1426, !1438}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1424, file: !1421, line: 25, baseType: !1427, size: 128)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !1428, line: 58, size: 128, elements: !1429)
!1428 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!1429 = !{!1430, !1431, !1436, !1437}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1427, file: !1428, line: 59, baseType: !340, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, scope: !1427, file: !1428, line: 60, baseType: !1432, size: 32, offset: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1427, file: !1428, line: 60, size: 32, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !1432, file: !1428, line: 61, baseType: !7, size: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !1432, file: !1428, line: 62, baseType: !795, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1427, file: !1428, line: 65, baseType: !907, size: 16, offset: 96)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1427, file: !1428, line: 65, baseType: !907, size: 16, offset: 112)
!1438 = !DIDerivedType(tag: DW_TAG_member, scope: !1424, file: !1421, line: 26, baseType: !1439, size: 128)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1424, file: !1421, line: 26, size: 128, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1439, file: !1421, line: 27, baseType: !340, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1439, file: !1421, line: 28, baseType: !7, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1439, file: !1421, line: 30, baseType: !907, size: 16, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1439, file: !1421, line: 30, baseType: !907, size: 16, offset: 112)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1420, file: !1421, line: 34, baseType: !1446, size: 64, offset: 128)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !1421, line: 17, baseType: !449)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1420, file: !1421, line: 35, baseType: !182, size: 64, offset: 192)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !1417, file: !19, line: 240, baseType: !402, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !1317, file: !19, line: 246, baseType: !1394, size: 64, offset: 2048)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !1317, file: !19, line: 247, baseType: !182, size: 64, offset: 2112)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !1313, file: !19, line: 401, baseType: !1452, size: 64, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !25, line: 101, size: 4992, elements: !1454)
!1454 = !{!1455, !1567, !1568, !1569, !1570, !1571}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1453, file: !25, line: 103, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !25, line: 66, size: 2240, elements: !1458)
!1458 = !{!1459, !1460, !1542, !1543, !1544, !1557, !1558, !1559, !1561, !1562, !1566}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !1457, file: !25, line: 69, baseType: !1192, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1457, file: !25, line: 72, baseType: !1461, size: 1408, offset: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !25, line: 29, size: 1408, elements: !1462)
!1462 = !{!1463, !1467, !1471, !1475, !1479, !1483, !1487, !1491, !1496, !1500, !1504, !1510, !1514, !1515, !1519, !1523, !1527, !1531, !1532, !1536, !1537, !1541}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !1461, file: !25, line: 30, baseType: !1464, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!240, !1312, !1456}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !1461, file: !25, line: 31, baseType: !1468, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !1452}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !1461, file: !25, line: 32, baseType: !1472, size: 64, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DISubroutineType(types: !1474)
!1474 = !{!240, !1324, !7}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !1461, file: !25, line: 33, baseType: !1476, size: 64, offset: 192)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{null, !1324, !7}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !1461, file: !25, line: 34, baseType: !1480, size: 64, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !1324}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !1461, file: !25, line: 36, baseType: !1484, size: 64, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!471, !1312, !1316, !1131}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !1461, file: !25, line: 37, baseType: !1488, size: 64, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!471, !1324, !1131, !7}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !1461, file: !25, line: 38, baseType: !1492, size: 64, offset: 448)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!240, !1312, !1495, !1131}
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !1461, file: !25, line: 39, baseType: !1497, size: 64, offset: 512)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{null, !1312, !1316, !24}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !1461, file: !25, line: 40, baseType: !1501, size: 64, offset: 576)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{null, !1312, !1316, !1316}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !1461, file: !25, line: 41, baseType: !1505, size: 64, offset: 640)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{null, !7, !1508}
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!1509 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !25, line: 26, flags: DIFlagFwdDecl)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !1461, file: !25, line: 42, baseType: !1511, size: 64, offset: 704)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{null, !1316}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !1461, file: !25, line: 43, baseType: !1511, size: 64, offset: 768)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !1461, file: !25, line: 44, baseType: !1516, size: 64, offset: 832)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{null, !1324, !204, !471}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !1461, file: !25, line: 45, baseType: !1520, size: 64, offset: 896)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!1316, !1324}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !1461, file: !25, line: 46, baseType: !1524, size: 64, offset: 960)
!1524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1525, size: 64)
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!471, !1324}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !1461, file: !25, line: 47, baseType: !1528, size: 64, offset: 1024)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DISubroutineType(types: !1530)
!1530 = !{null, !1316, !402}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !1461, file: !25, line: 48, baseType: !1511, size: 64, offset: 1088)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !1461, file: !25, line: 49, baseType: !1533, size: 64, offset: 1152)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DISubroutineType(types: !1535)
!1535 = !{!1316, !1312, !1316}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1461, file: !25, line: 50, baseType: !1533, size: 64, offset: 1216)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !1461, file: !25, line: 51, baseType: !1538, size: 64, offset: 1280)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{null, !1355}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !1461, file: !25, line: 52, baseType: !1538, size: 64, offset: 1344)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !1457, file: !25, line: 74, baseType: !302, size: 64, offset: 1472)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !1457, file: !25, line: 75, baseType: !302, size: 64, offset: 1536)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !1457, file: !25, line: 76, baseType: !1545, size: 64, offset: 1600)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !25, line: 57, size: 256, elements: !1547)
!1547 = !{!1548, !1549, !1553}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1546, file: !25, line: 58, baseType: !292, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1546, file: !25, line: 59, baseType: !1550, size: 64, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!287, !1452, !256}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1546, file: !25, line: 60, baseType: !1554, size: 64, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!287, !1452, !196, !302}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !1457, file: !25, line: 77, baseType: !196, size: 64, offset: 1664)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !1457, file: !25, line: 78, baseType: !196, size: 64, offset: 1728)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !1457, file: !25, line: 79, baseType: !1560, size: 32, offset: 1792)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !1457, file: !25, line: 80, baseType: !614, size: 64, offset: 1856)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !1457, file: !25, line: 87, baseType: !1563, size: 176, offset: 1920)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 176, elements: !1564)
!1564 = !{!1565}
!1565 = !DISubrange(count: 22)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1457, file: !25, line: 88, baseType: !200, size: 128, offset: 2112)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !1453, file: !25, line: 104, baseType: !182, size: 64, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1453, file: !25, line: 105, baseType: !192, size: 512, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1453, file: !25, line: 106, baseType: !721, size: 192, offset: 640)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !1453, file: !25, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1453, file: !25, line: 108, baseType: !1572, size: 4096, offset: 896)
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 4096, elements: !261)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !1313, file: !19, line: 403, baseType: !1042, size: 128, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1313, file: !19, line: 405, baseType: !1575, size: 64, offset: 256)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !19, line: 43, flags: DIFlagFwdDecl)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !1313, file: !19, line: 406, baseType: !1578, size: 64, offset: 320)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !19, line: 42, flags: DIFlagFwdDecl)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !1313, file: !19, line: 408, baseType: !1581, size: 64, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1583)
!1583 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !19, line: 408, flags: DIFlagFwdDecl)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !1313, file: !19, line: 411, baseType: !1321, size: 64, offset: 448)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !1313, file: !19, line: 413, baseType: !7, size: 32, offset: 512)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !1313, file: !19, line: 416, baseType: !1587, size: 64, offset: 576)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !1313, file: !19, line: 417, baseType: !7, size: 32, offset: 640)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1313, file: !19, line: 419, baseType: !1590, size: 64, offset: 704)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !32, line: 165, size: 4672, elements: !1592)
!1592 = !{!1593, !1594, !1595, !1596, !1597, !1598, !1603, !1604, !1605, !1606, !1607, !1608, !1664, !1665, !1666, !1667, !1669, !1670}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1591, file: !32, line: 166, baseType: !402, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1591, file: !32, line: 167, baseType: !808, size: 192, align: 64, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !1591, file: !32, line: 168, baseType: !200, size: 128, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1591, file: !32, line: 169, baseType: !305, size: 64, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !1591, file: !32, line: 170, baseType: !305, size: 64, offset: 448)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1591, file: !32, line: 172, baseType: !1599, size: 32, offset: 512)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1600, line: 19, size: 32, elements: !1601)
!1600 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1601 = !{!1602}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1599, file: !1600, line: 20, baseType: !1409, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1591, file: !32, line: 173, baseType: !7, size: 32, offset: 544)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !1591, file: !32, line: 174, baseType: !7, size: 32, offset: 576)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !1591, file: !32, line: 175, baseType: !7, size: 32, offset: 608)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !1591, file: !32, line: 175, baseType: !7, size: 32, offset: 640)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !1591, file: !32, line: 181, baseType: !725, size: 64, offset: 704)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !1591, file: !32, line: 183, baseType: !1609, size: 2688, offset: 768)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !32, line: 107, size: 2688, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1640, !1641, !1642, !1643, !1644, !1662, !1663}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !1609, file: !32, line: 108, baseType: !1590, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1609, file: !32, line: 110, baseType: !305, size: 64, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !1609, file: !32, line: 111, baseType: !305, size: 64, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !1609, file: !32, line: 113, baseType: !200, size: 128, offset: 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !1609, file: !32, line: 114, baseType: !200, size: 128, offset: 320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !1609, file: !32, line: 115, baseType: !200, size: 128, offset: 448)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !1609, file: !32, line: 116, baseType: !200, size: 128, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1609, file: !32, line: 117, baseType: !214, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1609, file: !32, line: 119, baseType: !1620, size: 256, offset: 704)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1621, size: 256, elements: !1294)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !1622, line: 97, size: 64, elements: !1623)
!1622 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!1623 = !{!1624}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1621, file: !1622, line: 98, baseType: !731, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !1609, file: !32, line: 121, baseType: !305, size: 64, offset: 960)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !1609, file: !32, line: 123, baseType: !305, size: 64, offset: 1024)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !1609, file: !32, line: 124, baseType: !305, size: 64, offset: 1088)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !1609, file: !32, line: 125, baseType: !305, size: 64, offset: 1152)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !1609, file: !32, line: 126, baseType: !305, size: 64, offset: 1216)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !1609, file: !32, line: 127, baseType: !305, size: 64, offset: 1280)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !1609, file: !32, line: 135, baseType: !305, size: 64, offset: 1344)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !1609, file: !32, line: 136, baseType: !305, size: 64, offset: 1408)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !1609, file: !32, line: 138, baseType: !1634, size: 128, offset: 1472)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !1635, line: 76, size: 128, elements: !1636)
!1635 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!1636 = !{!1637, !1638, !1639}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1634, file: !1635, line: 78, baseType: !1621, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1634, file: !1635, line: 80, baseType: !7, size: 32, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1634, file: !1635, line: 81, baseType: !821, offset: 96)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !1609, file: !32, line: 139, baseType: !240, size: 32, offset: 1600)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !1609, file: !32, line: 140, baseType: !31, size: 32, offset: 1632)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !1609, file: !32, line: 142, baseType: !214, offset: 1664)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !1609, file: !32, line: 143, baseType: !200, size: 128, offset: 1664)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !1609, file: !32, line: 144, baseType: !1645, size: 704, offset: 1792)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !141, line: 115, size: 704, elements: !1646)
!1646 = !{!1647, !1648, !1660, !1661}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1645, file: !141, line: 116, baseType: !1080, size: 256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1645, file: !141, line: 117, baseType: !1649, size: 320, offset: 256)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1650, line: 11, size: 320, elements: !1651)
!1650 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1651 = !{!1652, !1653, !1654, !1659}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1649, file: !1650, line: 16, baseType: !623, size: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1649, file: !1650, line: 17, baseType: !305, size: 64, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1649, file: !1650, line: 18, baseType: !1655, size: 64, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !1658}
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1649, file: !1650, line: 19, baseType: !396, size: 32, offset: 256)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1645, file: !141, line: 120, baseType: !1092, size: 64, offset: 576)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1645, file: !141, line: 121, baseType: !240, size: 32, offset: 640)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !1609, file: !32, line: 146, baseType: !305, size: 64, offset: 2496)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !1609, file: !32, line: 148, baseType: !200, size: 128, offset: 2560)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !1591, file: !32, line: 184, baseType: !200, size: 128, offset: 3456)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !1591, file: !32, line: 190, baseType: !1216, size: 128, offset: 3584)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1591, file: !32, line: 192, baseType: !188, size: 64, offset: 3712)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1591, file: !32, line: 193, baseType: !1668, size: 512, offset: 3776)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 512, elements: !261)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1591, file: !32, line: 194, baseType: !188, size: 64, offset: 4288)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !1591, file: !32, line: 196, baseType: !1649, size: 320, offset: 4352)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !1313, file: !19, line: 425, baseType: !182, size: 64, offset: 768)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !1313, file: !19, line: 430, baseType: !305, size: 64, offset: 832)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !1313, file: !19, line: 436, baseType: !795, size: 32, offset: 896)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1313, file: !19, line: 442, baseType: !240, size: 32, offset: 928)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !1313, file: !19, line: 447, baseType: !791, size: 32, offset: 960)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !1313, file: !19, line: 449, baseType: !214, offset: 992)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1313, file: !19, line: 454, baseType: !192, size: 512, offset: 1024)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !1313, file: !19, line: 459, baseType: !207, size: 64, offset: 1536)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !1313, file: !19, line: 462, baseType: !1680, size: 128, offset: 1600)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1033, line: 159, size: 128, elements: !1681)
!1681 = !{!1682, !1711, !1712, !1713, !1714}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1680, file: !1033, line: 160, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !19, line: 1664, size: 320, elements: !1686)
!1686 = !{!1687, !1701, !1702, !1705, !1710}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !1685, file: !19, line: 1665, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !19, line: 1660, baseType: !1690)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!1141, !1692}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !19, line: 1651, size: 320, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !1693, file: !19, line: 1652, baseType: !182, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !1693, file: !19, line: 1653, baseType: !182, size: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1693, file: !19, line: 1654, baseType: !878, size: 64, offset: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1693, file: !19, line: 1655, baseType: !7, size: 32, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1693, file: !19, line: 1656, baseType: !297, size: 16, offset: 224)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1693, file: !19, line: 1657, baseType: !196, size: 64, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !1685, file: !19, line: 1666, baseType: !1688, size: 64, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !1685, file: !19, line: 1667, baseType: !1703, size: 64, offset: 128)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !19, line: 1661, baseType: !1512)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !1685, file: !19, line: 1668, baseType: !1706, size: 64, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !19, line: 1662, baseType: !1708)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{null, !1316, !7}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1685, file: !19, line: 1669, baseType: !196, size: 64, offset: 256)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1680, file: !1033, line: 161, baseType: !408, size: 8, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !1680, file: !1033, line: 162, baseType: !408, size: 8, offset: 72)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !1680, file: !1033, line: 163, baseType: !408, size: 8, offset: 80)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !1680, file: !1033, line: 164, baseType: !408, size: 8, offset: 88)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1313, file: !19, line: 466, baseType: !188, size: 64, offset: 1728)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !1313, file: !19, line: 467, baseType: !43, size: 32, offset: 1792)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !1313, file: !19, line: 468, baseType: !7, size: 32, offset: 1824)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !1313, file: !19, line: 474, baseType: !305, size: 64, offset: 1856)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !1313, file: !19, line: 476, baseType: !7, size: 32, offset: 1920)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !1313, file: !19, line: 477, baseType: !7, size: 32, offset: 1952)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !1313, file: !19, line: 484, baseType: !7, size: 32, offset: 1984)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !1313, file: !19, line: 485, baseType: !240, size: 32, offset: 2016)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !1313, file: !19, line: 487, baseType: !1724, size: 64, offset: 2048)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !19, line: 44, flags: DIFlagFwdDecl)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !1313, file: !19, line: 488, baseType: !1727, size: 5120, offset: 2112)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1728, size: 5120, elements: !1735)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1014, line: 540, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !1728, file: !1014, line: 541, baseType: !402, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1728, file: !1014, line: 542, baseType: !402, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1728, file: !1014, line: 543, baseType: !402, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !1728, file: !1014, line: 544, baseType: !396, size: 32, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1728, file: !1014, line: 545, baseType: !402, size: 64, offset: 256)
!1735 = !{!1736}
!1736 = !DISubrange(count: 16)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1313, file: !19, line: 490, baseType: !1649, size: 320, offset: 7232)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !1313, file: !19, line: 491, baseType: !1080, size: 256, offset: 7552)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !1313, file: !19, line: 493, baseType: !795, size: 32, offset: 7808)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1313, file: !19, line: 495, baseType: !200, size: 128, offset: 7872)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !1313, file: !19, line: 502, baseType: !1742, size: 896, offset: 8000)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !19, line: 321, size: 896, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !1742, file: !19, line: 322, baseType: !305, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !1742, file: !19, line: 323, baseType: !305, size: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !1742, file: !19, line: 324, baseType: !305, size: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !1742, file: !19, line: 326, baseType: !7, size: 32, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !1742, file: !19, line: 327, baseType: !7, size: 32, offset: 224)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !1742, file: !19, line: 328, baseType: !7, size: 32, offset: 256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !1742, file: !19, line: 329, baseType: !7, size: 32, offset: 288)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1742, file: !19, line: 330, baseType: !7, size: 32, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !1742, file: !19, line: 331, baseType: !7, size: 32, offset: 352)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !1742, file: !19, line: 332, baseType: !7, size: 32, offset: 384)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !1742, file: !19, line: 333, baseType: !7, size: 32, offset: 416)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !1742, file: !19, line: 334, baseType: !7, size: 32, offset: 448)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !1742, file: !19, line: 335, baseType: !7, size: 32, offset: 480)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !1742, file: !19, line: 336, baseType: !7, size: 32, offset: 512)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !1742, file: !19, line: 337, baseType: !7, size: 32, offset: 544)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !1742, file: !19, line: 338, baseType: !7, size: 32, offset: 576)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !1742, file: !19, line: 339, baseType: !7, size: 32, offset: 608)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !1742, file: !19, line: 340, baseType: !7, size: 32, offset: 640)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !1742, file: !19, line: 341, baseType: !7, size: 32, offset: 672)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !1742, file: !19, line: 342, baseType: !7, size: 32, offset: 704)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !1742, file: !19, line: 344, baseType: !297, size: 16, offset: 736)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !1742, file: !19, line: 345, baseType: !297, size: 16, offset: 752)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !1742, file: !19, line: 346, baseType: !297, size: 16, offset: 768)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !1742, file: !19, line: 348, baseType: !408, size: 8, offset: 784)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !1742, file: !19, line: 349, baseType: !408, size: 8, offset: 792)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !1742, file: !19, line: 350, baseType: !408, size: 8, offset: 800)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !1742, file: !19, line: 351, baseType: !50, size: 32, offset: 832)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !1313, file: !19, line: 504, baseType: !7, size: 32, offset: 8896)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !1313, file: !19, line: 534, baseType: !7, size: 32, offset: 8928)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !1313, file: !19, line: 535, baseType: !7, size: 32, offset: 8960)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1313, file: !19, line: 536, baseType: !240, size: 32, offset: 8992)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !1313, file: !19, line: 537, baseType: !721, size: 192, offset: 9024)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !1313, file: !19, line: 544, baseType: !1777, size: 64, offset: 9216)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !19, line: 40, flags: DIFlagFwdDecl)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !1313, file: !19, line: 546, baseType: !200, size: 128, offset: 9280)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !1313, file: !19, line: 547, baseType: !214, offset: 9408)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !1313, file: !19, line: 548, baseType: !1645, size: 704, offset: 9408)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1313, file: !19, line: 550, baseType: !721, size: 192, offset: 10112)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !1313, file: !19, line: 551, baseType: !721, size: 192, offset: 10304)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !1313, file: !19, line: 557, baseType: !200, size: 128, offset: 10496)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !1313, file: !19, line: 558, baseType: !214, offset: 10624)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !1313, file: !19, line: 560, baseType: !240, size: 32, offset: 10624)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !1313, file: !19, line: 563, baseType: !1788, size: 256, offset: 10688)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !1789, line: 18, size: 256, elements: !1790)
!1789 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1790 = !{!1791, !1792, !1793, !1794}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !1788, file: !1789, line: 19, baseType: !188, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1788, file: !1789, line: 20, baseType: !240, size: 32, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1788, file: !1789, line: 21, baseType: !1312, size: 64, offset: 128)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1788, file: !1789, line: 22, baseType: !1795, size: 64, offset: 192)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !1789, line: 10, size: 256, elements: !1798)
!1798 = !{!1799, !1841, !1845, !1849}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !1797, file: !1789, line: 11, baseType: !1800, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!240, !1803}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !1805, line: 22, size: 1280, elements: !1806)
!1805 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1806 = !{!1807, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !1804, file: !1805, line: 23, baseType: !1808, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !399, line: 26, baseType: !240)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1804, file: !1805, line: 24, baseType: !398, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !1804, file: !1805, line: 25, baseType: !398, size: 32, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !1804, file: !1805, line: 28, baseType: !398, size: 32, offset: 96)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1804, file: !1805, line: 29, baseType: !403, size: 64, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !1804, file: !1805, line: 30, baseType: !403, size: 64, offset: 192)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !1804, file: !1805, line: 31, baseType: !398, size: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !1804, file: !1805, line: 32, baseType: !398, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !1804, file: !1805, line: 33, baseType: !398, size: 32, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !1804, file: !1805, line: 34, baseType: !398, size: 32, offset: 352)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1804, file: !1805, line: 35, baseType: !403, size: 64, offset: 384)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !1804, file: !1805, line: 38, baseType: !398, size: 32, offset: 448)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !1804, file: !1805, line: 40, baseType: !398, size: 32, offset: 480)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !1804, file: !1805, line: 41, baseType: !398, size: 32, offset: 512)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !1804, file: !1805, line: 42, baseType: !398, size: 32, offset: 544)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !1804, file: !1805, line: 43, baseType: !403, size: 64, offset: 576)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !1804, file: !1805, line: 44, baseType: !403, size: 64, offset: 640)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1804, file: !1805, line: 46, baseType: !398, size: 32, offset: 704)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1804, file: !1805, line: 47, baseType: !398, size: 32, offset: 736)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !1804, file: !1805, line: 48, baseType: !403, size: 64, offset: 768)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !1804, file: !1805, line: 49, baseType: !398, size: 32, offset: 832)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !1804, file: !1805, line: 51, baseType: !398, size: 32, offset: 864)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !1804, file: !1805, line: 52, baseType: !398, size: 32, offset: 896)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !1804, file: !1805, line: 53, baseType: !398, size: 32, offset: 928)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !1804, file: !1805, line: 54, baseType: !398, size: 32, offset: 960)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1804, file: !1805, line: 55, baseType: !398, size: 32, offset: 992)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1804, file: !1805, line: 56, baseType: !398, size: 32, offset: 1024)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !1804, file: !1805, line: 57, baseType: !398, size: 32, offset: 1056)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !1804, file: !1805, line: 58, baseType: !1808, size: 32, offset: 1088)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !1804, file: !1805, line: 59, baseType: !1808, size: 32, offset: 1120)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !1804, file: !1805, line: 60, baseType: !403, size: 64, offset: 1152)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !1804, file: !1805, line: 61, baseType: !398, size: 32, offset: 1216)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1804, file: !1805, line: 63, baseType: !398, size: 32, offset: 1248)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !1797, file: !1789, line: 12, baseType: !1842, size: 64, offset: 64)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!240, !1316, !1803, !1237}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !1797, file: !1789, line: 14, baseType: !1846, size: 64, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!240, !1316, !1803}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !1797, file: !1789, line: 15, baseType: !1511, size: 64, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1313, file: !19, line: 570, baseType: !346, size: 128, align: 64, offset: 10944)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !1313, file: !19, line: 571, baseType: !1216, size: 128, offset: 11072)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !1313, file: !19, line: 576, baseType: !721, size: 192, offset: 11200)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !1313, file: !19, line: 578, baseType: !1854, size: 64, offset: 11392)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !19, line: 578, flags: DIFlagFwdDecl)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !1313, file: !19, line: 579, baseType: !200, size: 128, offset: 11456)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !1313, file: !19, line: 580, baseType: !1189, size: 2368, offset: 11584)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !1313, file: !19, line: 582, baseType: !363, size: 64, offset: 13952)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !1313, file: !19, line: 589, baseType: !471, size: 8, offset: 14016)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !1313, file: !19, line: 591, baseType: !302, size: 64, offset: 14080)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !1313, file: !19, line: 594, baseType: !1862, size: 320, offset: 14144)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 320, elements: !1863)
!1863 = !{!1864}
!1864 = !DISubrange(count: 5)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1098, file: !1033, line: 191, baseType: !182, size: 64, offset: 7168)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1098, file: !1033, line: 193, baseType: !240, size: 32, offset: 7232)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1098, file: !1033, line: 194, baseType: !305, size: 64, offset: 7296)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1098, file: !1033, line: 196, baseType: !815, size: 256, offset: 7360)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1098, file: !1033, line: 197, baseType: !207, size: 64, offset: 7616)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1098, file: !1033, line: 199, baseType: !1871, size: 64, offset: 7680)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1033, line: 199, flags: DIFlagFwdDecl)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1098, file: !1033, line: 200, baseType: !795, size: 32, offset: 7744)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1098, file: !1033, line: 201, baseType: !1875, size: 64, offset: 7808)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1033, line: 156, flags: DIFlagFwdDecl)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1098, file: !1033, line: 203, baseType: !192, size: 512, offset: 7872)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1098, file: !1033, line: 208, baseType: !240, size: 32, offset: 8384)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1098, file: !1033, line: 209, baseType: !1880, size: 64, offset: 8448)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1033, line: 157, flags: DIFlagFwdDecl)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1098, file: !1033, line: 210, baseType: !1883, offset: 8512)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !630, line: 192, elements: !228)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1013, file: !1014, line: 43, baseType: !1590, size: 64, offset: 1024)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1013, file: !1014, line: 46, baseType: !240, size: 32, offset: 1088)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1013, file: !1014, line: 48, baseType: !721, size: 192, offset: 1152)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !966, file: !967, line: 259, baseType: !333, size: 64, offset: 1152)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !966, file: !967, line: 260, baseType: !7, size: 32, offset: 1216)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !966, file: !967, line: 265, baseType: !214, offset: 1248)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !966, file: !967, line: 278, baseType: !214, offset: 1248)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !966, file: !967, line: 282, baseType: !1080, size: 256, offset: 1280)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !966, file: !967, line: 283, baseType: !992, size: 64, offset: 1536)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !966, file: !967, line: 284, baseType: !1894, offset: 1600)
!1894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, elements: !1118)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !829, file: !86, line: 415, baseType: !1897, size: 64, offset: 1344)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !333}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !782, file: !86, line: 466, baseType: !305, size: 64, offset: 896)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !782, file: !86, line: 467, baseType: !1902, size: 32, offset: 960)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1903, line: 8, baseType: !396)
!1903 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !782, file: !86, line: 468, baseType: !214, offset: 992)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !782, file: !86, line: 469, baseType: !200, size: 128, offset: 1024)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !782, file: !86, line: 470, baseType: !182, size: 64, offset: 1152)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !777, file: !770, line: 87, baseType: !305, size: 64, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !777, file: !770, line: 94, baseType: !305, size: 64, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 96, baseType: !1910, size: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 96, size: 64, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1910, file: !770, line: 101, baseType: !1913, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !201, line: 143, baseType: !402)
!1914 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 103, baseType: !1915, size: 320)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 103, size: 320, elements: !1916)
!1916 = !{!1917, !1927, !1928, !1929}
!1917 = !DIDerivedType(tag: DW_TAG_member, scope: !1915, file: !770, line: 104, baseType: !1918, size: 128)
!1918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1915, file: !770, line: 104, size: 128, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1918, file: !770, line: 105, baseType: !200, size: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, scope: !1918, file: !770, line: 106, baseType: !1922, size: 128)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1918, file: !770, line: 106, size: 128, elements: !1923)
!1923 = !{!1924, !1925, !1926}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1922, file: !770, line: 107, baseType: !768, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1922, file: !770, line: 109, baseType: !240, size: 32, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1922, file: !770, line: 110, baseType: !240, size: 32, offset: 96)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1915, file: !770, line: 117, baseType: !1192, size: 64, offset: 128)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1915, file: !770, line: 119, baseType: !182, size: 64, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, scope: !1915, file: !770, line: 120, baseType: !1930, size: 64, offset: 256)
!1930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1915, file: !770, line: 120, size: 64, elements: !1931)
!1931 = !{!1932, !1933, !1934}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1930, file: !770, line: 121, baseType: !182, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1930, file: !770, line: 122, baseType: !305, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1930, file: !770, line: 123, baseType: !1935, size: 32)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1930, file: !770, line: 123, size: 32, elements: !1936)
!1936 = !{!1937, !1938, !1939}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1935, file: !770, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1935, file: !770, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1935, file: !770, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 130, baseType: !1941, size: 192)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 130, size: 192, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1941, file: !770, line: 131, baseType: !305, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1941, file: !770, line: 134, baseType: !408, size: 8, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1941, file: !770, line: 135, baseType: !408, size: 8, offset: 72)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1941, file: !770, line: 136, baseType: !795, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1941, file: !770, line: 137, baseType: !7, size: 32, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 139, baseType: !1949, size: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 139, size: 256, elements: !1950)
!1950 = !{!1951, !1952, !1953}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1949, file: !770, line: 140, baseType: !305, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1949, file: !770, line: 141, baseType: !795, size: 32, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1949, file: !770, line: 143, baseType: !200, size: 128, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 145, baseType: !1955, size: 256)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 145, size: 256, elements: !1956)
!1956 = !{!1957, !1958, !1961, !1962, !3431}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1955, file: !770, line: 146, baseType: !305, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1955, file: !770, line: 147, baseType: !1959, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1960, line: 509, baseType: !768)
!1960 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1955, file: !770, line: 148, baseType: !305, size: 64, offset: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, scope: !1955, file: !770, line: 149, baseType: !1963, size: 64, offset: 192)
!1963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1955, file: !770, line: 149, size: 64, elements: !1964)
!1964 = !{!1965, !3430}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1963, file: !770, line: 150, baseType: !1966, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !770, line: 388, size: 7296, elements: !1968)
!1968 = !{!1969, !3428}
!1969 = !DIDerivedType(tag: DW_TAG_member, scope: !1967, file: !770, line: 389, baseType: !1970, size: 7296)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !770, line: 389, size: 7296, elements: !1971)
!1971 = !{!1972, !2090, !2091, !2092, !2096, !2097, !2098, !2099, !2100, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2141, !2147, !2150, !2189, !2190, !3412, !3413, !3416, !3417, !3418, !3421, !3422, !3423, !3426, !3427}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1970, file: !770, line: 390, baseType: !1973, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !770, line: 305, size: 1472, elements: !1975)
!1975 = !{!1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1990, !1991, !1996, !1997, !2000, !2084, !2085, !2086, !2087, !2088}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1974, file: !770, line: 308, baseType: !305, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1974, file: !770, line: 309, baseType: !305, size: 64, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1974, file: !770, line: 313, baseType: !1973, size: 64, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1974, file: !770, line: 313, baseType: !1973, size: 64, offset: 192)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1974, file: !770, line: 315, baseType: !808, size: 192, align: 64, offset: 256)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1974, file: !770, line: 323, baseType: !305, size: 64, offset: 448)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1974, file: !770, line: 327, baseType: !1966, size: 64, offset: 512)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1974, file: !770, line: 333, baseType: !1984, size: 64, offset: 576)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1960, line: 284, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1960, line: 284, size: 64, elements: !1986)
!1986 = !{!1987}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1985, file: !1960, line: 284, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1989, line: 19, baseType: !305)
!1989 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1974, file: !770, line: 334, baseType: !305, size: 64, offset: 640)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1974, file: !770, line: 343, baseType: !1992, size: 256, offset: 704)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1974, file: !770, line: 340, size: 256, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1992, file: !770, line: 341, baseType: !808, size: 192, align: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1992, file: !770, line: 342, baseType: !305, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1974, file: !770, line: 351, baseType: !200, size: 128, offset: 960)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1974, file: !770, line: 353, baseType: !1998, size: 64, offset: 1088)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !770, line: 353, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1974, file: !770, line: 356, baseType: !2001, size: 64, offset: 1152)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2003)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !56, line: 557, size: 832, elements: !2004)
!2004 = !{!2005, !2009, !2010, !2014, !2018, !2058, !2062, !2066, !2070, !2071, !2072, !2076, !2080}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2003, file: !56, line: 558, baseType: !2006, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{null, !1973}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2003, file: !56, line: 559, baseType: !2006, size: 64, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2003, file: !56, line: 560, baseType: !2011, size: 64, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!240, !1973, !305}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2003, file: !56, line: 561, baseType: !2015, size: 64, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!240, !1973}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2003, file: !56, line: 562, baseType: !2019, size: 64, offset: 256)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !770, line: 682, baseType: !7)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !56, line: 508, size: 768, elements: !2025)
!2025 = !{!2026, !2027, !2028, !2029, !2030, !2031, !2038, !2045, !2051, !2052, !2053, !2055, !2057}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2024, file: !56, line: 509, baseType: !1973, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2024, file: !56, line: 510, baseType: !7, size: 32, offset: 64)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2024, file: !56, line: 511, baseType: !791, size: 32, offset: 96)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2024, file: !56, line: 512, baseType: !305, size: 64, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2024, file: !56, line: 513, baseType: !305, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2024, file: !56, line: 514, baseType: !2032, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1960, line: 385, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1960, line: 385, size: 64, elements: !2035)
!2035 = !{!2036}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2034, file: !1960, line: 385, baseType: !2037, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1989, line: 15, baseType: !305)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2024, file: !56, line: 516, baseType: !2039, size: 64, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1960, line: 359, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1960, line: 359, size: 64, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2041, file: !1960, line: 359, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1989, line: 16, baseType: !305)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2024, file: !56, line: 519, baseType: !2046, size: 64, offset: 384)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1989, line: 21, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1989, line: 21, size: 64, elements: !2048)
!2048 = !{!2049}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2047, file: !1989, line: 21, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1989, line: 14, baseType: !305)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2024, file: !56, line: 521, baseType: !768, size: 64, offset: 448)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2024, file: !56, line: 522, baseType: !768, size: 64, offset: 512)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2024, file: !56, line: 528, baseType: !2054, size: 64, offset: 576)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2024, file: !56, line: 532, baseType: !2056, size: 64, offset: 640)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2024, file: !56, line: 536, baseType: !1959, size: 64, offset: 704)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2003, file: !56, line: 563, baseType: !2059, size: 64, offset: 320)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!2022, !2023, !55}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2003, file: !56, line: 565, baseType: !2063, size: 64, offset: 384)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{null, !2023, !305, !305}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2003, file: !56, line: 567, baseType: !2067, size: 64, offset: 448)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!305, !1973}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2003, file: !56, line: 571, baseType: !2019, size: 64, offset: 512)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2003, file: !56, line: 574, baseType: !2019, size: 64, offset: 576)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2003, file: !56, line: 579, baseType: !2073, size: 64, offset: 640)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!240, !1973, !305, !182, !240, !240}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2003, file: !56, line: 585, baseType: !2077, size: 64, offset: 704)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{!196, !1973}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2003, file: !56, line: 615, baseType: !2081, size: 64, offset: 768)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!768, !1973, !305}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1974, file: !770, line: 359, baseType: !305, size: 64, offset: 1216)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1974, file: !770, line: 361, baseType: !333, size: 64, offset: 1280)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1974, file: !770, line: 362, baseType: !182, size: 64, offset: 1344)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1974, file: !770, line: 365, baseType: !725, size: 64, offset: 1408)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1974, file: !770, line: 373, baseType: !2089, offset: 1472)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !770, line: 296, elements: !228)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1970, file: !770, line: 391, baseType: !804, size: 64, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1970, file: !770, line: 392, baseType: !402, size: 64, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1970, file: !770, line: 394, baseType: !2093, size: 64, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!305, !333, !305, !305, !305, !305}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1970, file: !770, line: 398, baseType: !305, size: 64, offset: 256)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1970, file: !770, line: 399, baseType: !305, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1970, file: !770, line: 405, baseType: !305, size: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1970, file: !770, line: 406, baseType: !305, size: 64, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1970, file: !770, line: 407, baseType: !2101, size: 64, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1960, line: 286, baseType: !2103)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1960, line: 286, size: 64, elements: !2104)
!2104 = !{!2105}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2103, file: !1960, line: 286, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1989, line: 18, baseType: !305)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1970, file: !770, line: 416, baseType: !795, size: 32, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1970, file: !770, line: 428, baseType: !795, size: 32, offset: 608)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1970, file: !770, line: 437, baseType: !795, size: 32, offset: 640)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1970, file: !770, line: 447, baseType: !795, size: 32, offset: 672)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1970, file: !770, line: 450, baseType: !725, size: 64, offset: 704)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1970, file: !770, line: 452, baseType: !240, size: 32, offset: 768)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1970, file: !770, line: 454, baseType: !214, offset: 800)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1970, file: !770, line: 457, baseType: !815, size: 256, offset: 832)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1970, file: !770, line: 459, baseType: !200, size: 128, offset: 1088)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1970, file: !770, line: 466, baseType: !305, size: 64, offset: 1216)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1970, file: !770, line: 467, baseType: !305, size: 64, offset: 1280)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1970, file: !770, line: 469, baseType: !305, size: 64, offset: 1344)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1970, file: !770, line: 470, baseType: !305, size: 64, offset: 1408)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1970, file: !770, line: 471, baseType: !727, size: 64, offset: 1472)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1970, file: !770, line: 472, baseType: !305, size: 64, offset: 1536)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1970, file: !770, line: 473, baseType: !305, size: 64, offset: 1600)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1970, file: !770, line: 474, baseType: !305, size: 64, offset: 1664)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1970, file: !770, line: 475, baseType: !305, size: 64, offset: 1728)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1970, file: !770, line: 477, baseType: !214, offset: 1792)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1970, file: !770, line: 478, baseType: !305, size: 64, offset: 1792)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1970, file: !770, line: 478, baseType: !305, size: 64, offset: 1856)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1970, file: !770, line: 478, baseType: !305, size: 64, offset: 1920)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1970, file: !770, line: 478, baseType: !305, size: 64, offset: 1984)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1970, file: !770, line: 479, baseType: !305, size: 64, offset: 2048)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1970, file: !770, line: 479, baseType: !305, size: 64, offset: 2112)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1970, file: !770, line: 479, baseType: !305, size: 64, offset: 2176)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1970, file: !770, line: 480, baseType: !305, size: 64, offset: 2240)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1970, file: !770, line: 480, baseType: !305, size: 64, offset: 2304)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1970, file: !770, line: 480, baseType: !305, size: 64, offset: 2368)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1970, file: !770, line: 480, baseType: !305, size: 64, offset: 2432)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1970, file: !770, line: 482, baseType: !2138, size: 2816, offset: 2496)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, size: 2816, elements: !2139)
!2139 = !{!2140}
!2140 = !DISubrange(count: 44)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1970, file: !770, line: 488, baseType: !2142, size: 256, offset: 5312)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2143, line: 60, size: 256, elements: !2144)
!2143 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2142, file: !2143, line: 61, baseType: !2146, size: 256)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 256, elements: !1294)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1970, file: !770, line: 490, baseType: !2148, size: 64, offset: 5568)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !770, line: 490, flags: DIFlagFwdDecl)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1970, file: !770, line: 493, baseType: !2151, size: 896, offset: 5632)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2152, line: 53, baseType: !2153)
!2152 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2152, line: 13, size: 896, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2158, !2161, !2162, !2163, !2164, !2184, !2185, !2186}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2153, file: !2152, line: 18, baseType: !402, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2153, file: !2152, line: 28, baseType: !727, size: 64, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2153, file: !2152, line: 31, baseType: !815, size: 256, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2153, file: !2152, line: 32, baseType: !2159, size: 64, offset: 384)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2152, line: 32, flags: DIFlagFwdDecl)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2153, file: !2152, line: 37, baseType: !297, size: 16, offset: 448)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2153, file: !2152, line: 40, baseType: !721, size: 192, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2153, file: !2152, line: 41, baseType: !182, size: 64, offset: 704)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2153, file: !2152, line: 42, baseType: !2165, size: 64, offset: 768)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2168, line: 13, size: 896, elements: !2169)
!2168 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2169 = !{!2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2167, file: !2168, line: 14, baseType: !182, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2167, file: !2168, line: 15, baseType: !305, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2167, file: !2168, line: 17, baseType: !305, size: 64, offset: 128)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2167, file: !2168, line: 17, baseType: !305, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2167, file: !2168, line: 19, baseType: !142, size: 64, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2167, file: !2168, line: 21, baseType: !142, size: 64, offset: 320)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2167, file: !2168, line: 22, baseType: !142, size: 64, offset: 384)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2167, file: !2168, line: 23, baseType: !142, size: 64, offset: 448)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2167, file: !2168, line: 24, baseType: !142, size: 64, offset: 512)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2167, file: !2168, line: 25, baseType: !142, size: 64, offset: 576)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2167, file: !2168, line: 26, baseType: !142, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2167, file: !2168, line: 27, baseType: !142, size: 64, offset: 704)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2167, file: !2168, line: 28, baseType: !142, size: 64, offset: 768)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2167, file: !2168, line: 29, baseType: !142, size: 64, offset: 832)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2153, file: !2152, line: 44, baseType: !795, size: 32, offset: 832)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2153, file: !2152, line: 50, baseType: !907, size: 16, offset: 864)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2153, file: !2152, line: 51, baseType: !2187, size: 16, offset: 880)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !397, line: 18, baseType: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !399, line: 23, baseType: !971)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1970, file: !770, line: 495, baseType: !305, size: 64, offset: 6528)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1970, file: !770, line: 497, baseType: !2191, size: 64, offset: 6592)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !770, line: 381, size: 384, elements: !2193)
!2193 = !{!2194, !2195, !3411}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2192, file: !770, line: 382, baseType: !795, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2192, file: !770, line: 383, baseType: !2196, size: 128, offset: 64)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !770, line: 376, size: 128, elements: !2197)
!2197 = !{!2198, !3409}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2196, file: !770, line: 377, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2201, line: 640, size: 48640, elements: !2202)
!2201 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2202 = !{!2203, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2223, !2241, !2252, !2335, !2336, !2337, !2348, !2349, !2351, !2352, !2353, !2354, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2432, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2464, !2466, !2467, !2468, !2480, !2481, !2482, !2483, !2484, !2485, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2509, !2514, !2836, !2837, !2838, !2839, !2841, !2844, !2847, !2850, !2853, !2889, !2990, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3036, !3037, !3038, !3039, !3040, !3045, !3046, !3047, !3050, !3051, !3053, !3062, !3067, !3068, !3069, !3072, !3073, !3152, !3153, !3156, !3157, !3160, !3161, !3162, !3166, !3167, !3168, !3181, !3182, !3183, !3193, !3198, !3201, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2200, file: !2201, line: 646, baseType: !2204, size: 128)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2205, line: 56, size: 128, elements: !2206)
!2205 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2204, file: !2205, line: 57, baseType: !305, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2204, file: !2205, line: 58, baseType: !396, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2200, file: !2201, line: 649, baseType: !181, size: 64, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2200, file: !2201, line: 657, baseType: !182, size: 64, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2200, file: !2201, line: 658, baseType: !1409, size: 32, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2200, file: !2201, line: 660, baseType: !7, size: 32, offset: 288)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2200, file: !2201, line: 661, baseType: !7, size: 32, offset: 320)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2200, file: !2201, line: 684, baseType: !240, size: 32, offset: 352)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2200, file: !2201, line: 686, baseType: !240, size: 32, offset: 384)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2200, file: !2201, line: 687, baseType: !240, size: 32, offset: 416)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2200, file: !2201, line: 688, baseType: !240, size: 32, offset: 448)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2200, file: !2201, line: 689, baseType: !7, size: 32, offset: 480)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2200, file: !2201, line: 691, baseType: !2220, size: 64, offset: 512)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2222)
!2222 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2201, line: 691, flags: DIFlagFwdDecl)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2200, file: !2201, line: 692, baseType: !2224, size: 832, offset: 576)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2201, line: 451, size: 832, elements: !2225)
!2225 = !{!2226, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2224, file: !2201, line: 453, baseType: !2227, size: 128)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2201, line: 325, size: 128, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2227, file: !2201, line: 326, baseType: !305, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2227, file: !2201, line: 327, baseType: !396, size: 32, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2224, file: !2201, line: 454, baseType: !808, size: 192, align: 64, offset: 128)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2224, file: !2201, line: 455, baseType: !200, size: 128, offset: 320)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2224, file: !2201, line: 456, baseType: !7, size: 32, offset: 448)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2224, file: !2201, line: 458, baseType: !402, size: 64, offset: 512)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2224, file: !2201, line: 459, baseType: !402, size: 64, offset: 576)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2224, file: !2201, line: 460, baseType: !402, size: 64, offset: 640)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2224, file: !2201, line: 461, baseType: !402, size: 64, offset: 704)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2224, file: !2201, line: 463, baseType: !402, size: 64, offset: 768)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2224, file: !2201, line: 465, baseType: !2240, offset: 832)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2201, line: 415, elements: !228)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2200, file: !2201, line: 693, baseType: !2242, size: 384, offset: 1408)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2201, line: 489, size: 384, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2242, file: !2201, line: 490, baseType: !200, size: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2242, file: !2201, line: 491, baseType: !305, size: 64, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2242, file: !2201, line: 492, baseType: !305, size: 64, offset: 192)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2242, file: !2201, line: 493, baseType: !7, size: 32, offset: 256)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2242, file: !2201, line: 494, baseType: !297, size: 16, offset: 288)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2242, file: !2201, line: 495, baseType: !297, size: 16, offset: 304)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2242, file: !2201, line: 497, baseType: !2251, size: 64, offset: 320)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2200, file: !2201, line: 697, baseType: !2253, size: 1792, offset: 1792)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2201, line: 507, size: 1792, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2332, !2333}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2253, file: !2201, line: 508, baseType: !808, size: 192, align: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2253, file: !2201, line: 515, baseType: !402, size: 64, offset: 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2253, file: !2201, line: 516, baseType: !402, size: 64, offset: 256)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2253, file: !2201, line: 517, baseType: !402, size: 64, offset: 320)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2253, file: !2201, line: 518, baseType: !402, size: 64, offset: 384)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2253, file: !2201, line: 519, baseType: !402, size: 64, offset: 448)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2253, file: !2201, line: 526, baseType: !731, size: 64, offset: 512)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2253, file: !2201, line: 527, baseType: !402, size: 64, offset: 576)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2253, file: !2201, line: 528, baseType: !7, size: 32, offset: 640)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2253, file: !2201, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2253, file: !2201, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2253, file: !2201, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2253, file: !2201, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2253, file: !2201, line: 563, baseType: !2269, size: 512, offset: 704)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !62, line: 118, size: 512, elements: !2270)
!2270 = !{!2271, !2279, !2280, !2285, !2328, !2329, !2330, !2331}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2269, file: !62, line: 119, baseType: !2272, size: 256)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2273, line: 9, size: 256, elements: !2274)
!2273 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2272, file: !2273, line: 10, baseType: !808, size: 192, align: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2272, file: !2273, line: 11, baseType: !2277, size: 64, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2278, line: 29, baseType: !731)
!2278 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2269, file: !62, line: 120, baseType: !2277, size: 64, offset: 256)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2269, file: !62, line: 121, baseType: !2281, size: 64, offset: 320)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!61, !2284}
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2269, file: !62, line: 122, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !62, line: 159, size: 512, align: 512, elements: !2288)
!2288 = !{!2289, !2309, !2310, !2313, !2318, !2319, !2323, !2327}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2287, file: !62, line: 160, baseType: !2290, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !62, line: 214, size: 4608, align: 512, elements: !2292)
!2292 = !{!2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2291, file: !62, line: 215, baseType: !821)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2291, file: !62, line: 216, baseType: !7, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2291, file: !62, line: 217, baseType: !7, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2291, file: !62, line: 218, baseType: !7, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2291, file: !62, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2291, file: !62, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2291, file: !62, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2291, file: !62, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2291, file: !62, line: 233, baseType: !2277, size: 64, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2291, file: !62, line: 234, baseType: !2284, size: 64, offset: 192)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2291, file: !62, line: 235, baseType: !2277, size: 64, offset: 256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2291, file: !62, line: 236, baseType: !2284, size: 64, offset: 320)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2291, file: !62, line: 237, baseType: !2306, size: 4096, offset: 512)
!2306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2287, size: 4096, elements: !2307)
!2307 = !{!2308}
!2308 = !DISubrange(count: 8)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2287, file: !62, line: 161, baseType: !7, size: 32, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2287, file: !62, line: 162, baseType: !2311, size: 32, offset: 96)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !201, line: 27, baseType: !2312)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !289, line: 96, baseType: !240)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2287, file: !62, line: 163, baseType: !2314, size: 32, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !369, line: 276, baseType: !2315)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !369, line: 276, size: 32, elements: !2316)
!2316 = !{!2317}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2315, file: !369, line: 276, baseType: !373, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2287, file: !62, line: 164, baseType: !2284, size: 64, offset: 192)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2287, file: !62, line: 165, baseType: !2320, size: 128, offset: 256)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2273, line: 14, size: 128, elements: !2321)
!2321 = !{!2322}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2320, file: !2273, line: 15, baseType: !800, size: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2287, file: !62, line: 166, baseType: !2324, size: 64, offset: 384)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{!2277}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2287, file: !62, line: 167, baseType: !2277, size: 64, offset: 448)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2269, file: !62, line: 123, baseType: !1028, size: 8, offset: 448)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2269, file: !62, line: 124, baseType: !1028, size: 8, offset: 456)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2269, file: !62, line: 125, baseType: !1028, size: 8, offset: 464)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2269, file: !62, line: 126, baseType: !1028, size: 8, offset: 472)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2253, file: !2201, line: 572, baseType: !2269, size: 512, offset: 1216)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2253, file: !2201, line: 580, baseType: !2334, size: 64, offset: 1728)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2200, file: !2201, line: 721, baseType: !7, size: 32, offset: 3584)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2200, file: !2201, line: 722, baseType: !240, size: 32, offset: 3616)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2200, file: !2201, line: 723, baseType: !2338, size: 64, offset: 3648)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2341, line: 17, baseType: !2342)
!2341 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2341, line: 17, size: 64, elements: !2343)
!2343 = !{!2344}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2342, file: !2341, line: 17, baseType: !2345, size: 64)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, size: 64, elements: !2346)
!2346 = !{!2347}
!2347 = !DISubrange(count: 1)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2200, file: !2201, line: 724, baseType: !2340, size: 64, offset: 3712)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2200, file: !2201, line: 749, baseType: !2350, offset: 3776)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2201, line: 290, elements: !228)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2200, file: !2201, line: 751, baseType: !200, size: 128, offset: 3776)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2200, file: !2201, line: 757, baseType: !1966, size: 64, offset: 3904)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2200, file: !2201, line: 758, baseType: !1966, size: 64, offset: 3968)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2200, file: !2201, line: 761, baseType: !2355, size: 320, offset: 4032)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2143, line: 34, size: 320, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2355, file: !2143, line: 35, baseType: !402, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2355, file: !2143, line: 36, baseType: !2359, size: 256, offset: 64)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 256, elements: !1294)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2200, file: !2201, line: 766, baseType: !240, size: 32, offset: 4352)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2200, file: !2201, line: 767, baseType: !240, size: 32, offset: 4384)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2200, file: !2201, line: 768, baseType: !240, size: 32, offset: 4416)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2200, file: !2201, line: 770, baseType: !240, size: 32, offset: 4448)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2200, file: !2201, line: 772, baseType: !305, size: 64, offset: 4480)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2200, file: !2201, line: 775, baseType: !7, size: 32, offset: 4544)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2200, file: !2201, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2200, file: !2201, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2200, file: !2201, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2200, file: !2201, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2200, file: !2201, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2200, file: !2201, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2200, file: !2201, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2200, file: !2201, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2200, file: !2201, line: 831, baseType: !305, size: 64, offset: 4672)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2200, file: !2201, line: 833, baseType: !2376, size: 384, offset: 4736)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !67, line: 25, size: 384, elements: !2377)
!2377 = !{!2378, !2383}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2376, file: !67, line: 26, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!142, !2382}
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !67, line: 27, baseType: !2384, size: 320, offset: 64)
!2384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !67, line: 27, size: 320, elements: !2385)
!2385 = !{!2386, !2396, !2422}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2384, file: !67, line: 36, baseType: !2387, size: 320)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2384, file: !67, line: 29, size: 320, elements: !2388)
!2388 = !{!2389, !2391, !2392, !2393, !2394, !2395}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2387, file: !67, line: 30, baseType: !2390, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2387, file: !67, line: 31, baseType: !396, size: 32, offset: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2387, file: !67, line: 32, baseType: !396, size: 32, offset: 96)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2387, file: !67, line: 33, baseType: !396, size: 32, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2387, file: !67, line: 34, baseType: !402, size: 64, offset: 192)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2387, file: !67, line: 35, baseType: !2390, size: 64, offset: 256)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2384, file: !67, line: 46, baseType: !2397, size: 192)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2384, file: !67, line: 38, size: 192, elements: !2398)
!2398 = !{!2399, !2400, !2401, !2421}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2397, file: !67, line: 39, baseType: !2311, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2397, file: !67, line: 40, baseType: !66, size: 32, offset: 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2397, file: !67, line: 41, baseType: !2402, size: 64, offset: 64)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2397, file: !67, line: 41, size: 64, elements: !2403)
!2403 = !{!2404, !2412}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2402, file: !67, line: 42, baseType: !2405, size: 64)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2407, line: 7, size: 128, elements: !2408)
!2407 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2408 = !{!2409, !2411}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2406, file: !2407, line: 8, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !289, line: 93, baseType: !514)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2406, file: !2407, line: 9, baseType: !514, size: 64, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2402, file: !67, line: 43, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2415, line: 7, size: 64, elements: !2416)
!2415 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2416 = !{!2417, !2420}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2414, file: !2415, line: 8, baseType: !2418, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2415, line: 5, baseType: !2419)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !397, line: 20, baseType: !1808)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2414, file: !2415, line: 9, baseType: !2419, size: 32, offset: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2397, file: !67, line: 45, baseType: !402, size: 64, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2384, file: !67, line: 54, baseType: !2423, size: 256)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2384, file: !67, line: 48, size: 256, elements: !2424)
!2424 = !{!2425, !2428, !2429, !2430, !2431}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2423, file: !67, line: 49, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !67, line: 14, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2423, file: !67, line: 50, baseType: !240, size: 32, offset: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2423, file: !67, line: 51, baseType: !240, size: 32, offset: 96)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2423, file: !67, line: 52, baseType: !305, size: 64, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2423, file: !67, line: 53, baseType: !305, size: 64, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2200, file: !2201, line: 835, baseType: !2433, size: 32, offset: 5120)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !201, line: 22, baseType: !2434)
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !289, line: 28, baseType: !240)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2200, file: !2201, line: 836, baseType: !2433, size: 32, offset: 5152)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2200, file: !2201, line: 840, baseType: !305, size: 64, offset: 5184)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2200, file: !2201, line: 849, baseType: !2199, size: 64, offset: 5248)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2200, file: !2201, line: 852, baseType: !2199, size: 64, offset: 5312)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2200, file: !2201, line: 857, baseType: !200, size: 128, offset: 5376)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2200, file: !2201, line: 858, baseType: !200, size: 128, offset: 5504)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2200, file: !2201, line: 859, baseType: !2199, size: 64, offset: 5632)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2200, file: !2201, line: 867, baseType: !200, size: 128, offset: 5696)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2200, file: !2201, line: 868, baseType: !200, size: 128, offset: 5824)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2200, file: !2201, line: 871, baseType: !2445, size: 64, offset: 5952)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !95, line: 59, size: 768, elements: !2447)
!2447 = !{!2448, !2449, !2450, !2451, !2453, !2454, !2455, !2456}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2446, file: !95, line: 61, baseType: !1409, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2446, file: !95, line: 62, baseType: !7, size: 32, offset: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2446, file: !95, line: 63, baseType: !214, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2446, file: !95, line: 65, baseType: !2452, size: 256, offset: 64)
!2452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 256, elements: !1294)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2446, file: !95, line: 66, baseType: !619, size: 64, offset: 320)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2446, file: !95, line: 68, baseType: !1216, size: 128, offset: 384)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2446, file: !95, line: 69, baseType: !346, size: 128, align: 64, offset: 512)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2446, file: !95, line: 70, baseType: !2457, size: 128, offset: 640)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2458, size: 128, elements: !2346)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !95, line: 54, size: 128, elements: !2459)
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2458, file: !95, line: 55, baseType: !240, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2458, file: !95, line: 56, baseType: !2462, size: 64, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !95, line: 56, flags: DIFlagFwdDecl)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2200, file: !2201, line: 872, baseType: !2465, size: 512, offset: 6016)
!2465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 512, elements: !1294)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2200, file: !2201, line: 873, baseType: !200, size: 128, offset: 6528)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2200, file: !2201, line: 874, baseType: !200, size: 128, offset: 6656)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2200, file: !2201, line: 876, baseType: !2469, size: 64, offset: 6784)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2471, line: 26, size: 192, elements: !2472)
!2471 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2470, file: !2471, line: 27, baseType: !7, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2470, file: !2471, line: 28, baseType: !2475, size: 128, offset: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2476, line: 43, size: 128, elements: !2477)
!2476 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2475, file: !2476, line: 44, baseType: !821)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2475, file: !2476, line: 45, baseType: !200, size: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2200, file: !2201, line: 879, baseType: !703, size: 64, offset: 6848)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2200, file: !2201, line: 882, baseType: !703, size: 64, offset: 6912)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2200, file: !2201, line: 884, baseType: !402, size: 64, offset: 6976)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2200, file: !2201, line: 885, baseType: !402, size: 64, offset: 7040)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2200, file: !2201, line: 890, baseType: !402, size: 64, offset: 7104)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2200, file: !2201, line: 891, baseType: !2486, size: 128, offset: 7168)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2201, line: 242, size: 128, elements: !2487)
!2487 = !{!2488, !2489, !2490}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2486, file: !2201, line: 244, baseType: !402, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2486, file: !2201, line: 245, baseType: !402, size: 64, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2486, file: !2201, line: 246, baseType: !821, offset: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2200, file: !2201, line: 900, baseType: !305, size: 64, offset: 7296)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2200, file: !2201, line: 901, baseType: !305, size: 64, offset: 7360)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2200, file: !2201, line: 904, baseType: !402, size: 64, offset: 7424)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2200, file: !2201, line: 907, baseType: !402, size: 64, offset: 7488)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2200, file: !2201, line: 910, baseType: !305, size: 64, offset: 7552)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2200, file: !2201, line: 911, baseType: !305, size: 64, offset: 7616)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2200, file: !2201, line: 914, baseType: !2498, size: 640, offset: 7680)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2499, line: 123, size: 640, elements: !2500)
!2499 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2500 = !{!2501, !2507, !2508}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2498, file: !2499, line: 124, baseType: !2502, size: 576)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2503, size: 576, elements: !257)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2499, line: 108, size: 192, elements: !2504)
!2504 = !{!2505, !2506}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2503, file: !2499, line: 109, baseType: !402, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2503, file: !2499, line: 110, baseType: !2320, size: 128, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2498, file: !2499, line: 125, baseType: !7, size: 32, offset: 576)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2498, file: !2499, line: 126, baseType: !7, size: 32, offset: 608)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2200, file: !2201, line: 917, baseType: !2510, size: 192, offset: 8320)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2499, line: 134, size: 192, elements: !2511)
!2511 = !{!2512, !2513}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2510, file: !2499, line: 135, baseType: !346, size: 128, align: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2510, file: !2499, line: 136, baseType: !7, size: 32, offset: 128)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2200, file: !2201, line: 923, baseType: !2515, size: 64, offset: 8512)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2517)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2518, line: 111, size: 1280, elements: !2519)
!2518 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2537, !2538, !2539, !2540, !2541, !2542, !2649, !2650, !2651, !2652, !2678, !2821, !2831}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2517, file: !2518, line: 112, baseType: !795, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2517, file: !2518, line: 120, baseType: !416, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2517, file: !2518, line: 121, baseType: !424, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2517, file: !2518, line: 122, baseType: !416, size: 32, offset: 96)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2517, file: !2518, line: 123, baseType: !424, size: 32, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2517, file: !2518, line: 124, baseType: !416, size: 32, offset: 160)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2517, file: !2518, line: 125, baseType: !424, size: 32, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2517, file: !2518, line: 126, baseType: !416, size: 32, offset: 224)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2517, file: !2518, line: 127, baseType: !424, size: 32, offset: 256)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2517, file: !2518, line: 128, baseType: !7, size: 32, offset: 288)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2517, file: !2518, line: 129, baseType: !2531, size: 64, offset: 320)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2532, line: 26, baseType: !2533)
!2532 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2532, line: 24, size: 64, elements: !2534)
!2534 = !{!2535}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2533, file: !2532, line: 25, baseType: !2536, size: 64)
!2536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, size: 64, elements: !1386)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2517, file: !2518, line: 130, baseType: !2531, size: 64, offset: 384)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2517, file: !2518, line: 131, baseType: !2531, size: 64, offset: 448)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2517, file: !2518, line: 132, baseType: !2531, size: 64, offset: 512)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2517, file: !2518, line: 133, baseType: !2531, size: 64, offset: 576)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2517, file: !2518, line: 135, baseType: !408, size: 8, offset: 640)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2517, file: !2518, line: 137, baseType: !2543, size: 64, offset: 704)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2545, line: 189, size: 1664, elements: !2546)
!2545 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2546 = !{!2547, !2548, !2551, !2556, !2557, !2560, !2561, !2566, !2567, !2568, !2569, !2571, !2572, !2573, !2574, !2575, !2613, !2634}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2544, file: !2545, line: 190, baseType: !1409, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2544, file: !2545, line: 191, baseType: !2549, size: 32, offset: 32)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2545, line: 28, baseType: !2550)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !201, line: 98, baseType: !2419)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 192, baseType: !2552, size: 192, offset: 64)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 192, size: 192, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2552, file: !2545, line: 193, baseType: !200, size: 128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2552, file: !2545, line: 194, baseType: !808, size: 192, align: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2544, file: !2545, line: 199, baseType: !815, size: 256, offset: 256)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2544, file: !2545, line: 200, baseType: !2558, size: 64, offset: 512)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2545, line: 200, flags: DIFlagFwdDecl)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2544, file: !2545, line: 201, baseType: !182, size: 64, offset: 576)
!2561 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 202, baseType: !2562, size: 64, offset: 640)
!2562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 202, size: 64, elements: !2563)
!2563 = !{!2564, !2565}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2562, file: !2545, line: 203, baseType: !520, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2562, file: !2545, line: 204, baseType: !520, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2544, file: !2545, line: 206, baseType: !520, size: 64, offset: 704)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2544, file: !2545, line: 207, baseType: !416, size: 32, offset: 768)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2544, file: !2545, line: 208, baseType: !424, size: 32, offset: 800)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2544, file: !2545, line: 209, baseType: !2570, size: 32, offset: 832)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2545, line: 31, baseType: !540)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2544, file: !2545, line: 210, baseType: !297, size: 16, offset: 864)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2544, file: !2545, line: 211, baseType: !297, size: 16, offset: 880)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2544, file: !2545, line: 215, baseType: !971, size: 16, offset: 896)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2544, file: !2545, line: 222, baseType: !305, size: 64, offset: 960)
!2575 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 239, baseType: !2576, size: 320, offset: 1024)
!2576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 239, size: 320, elements: !2577)
!2577 = !{!2578, !2605}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2576, file: !2545, line: 240, baseType: !2579, size: 320)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2545, line: 108, size: 320, elements: !2580)
!2580 = !{!2581, !2582, !2594, !2597, !2604}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2579, file: !2545, line: 110, baseType: !305, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !2579, file: !2545, line: 111, baseType: !2583, size: 64, offset: 64)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2579, file: !2545, line: 111, size: 64, elements: !2584)
!2584 = !{!2585, !2593}
!2585 = !DIDerivedType(tag: DW_TAG_member, scope: !2583, file: !2545, line: 112, baseType: !2586, size: 64)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2583, file: !2545, line: 112, size: 64, elements: !2587)
!2587 = !{!2588, !2589}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2586, file: !2545, line: 114, baseType: !907, size: 16)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2586, file: !2545, line: 115, baseType: !2590, size: 48, offset: 16)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 48, elements: !2591)
!2591 = !{!2592}
!2592 = !DISubrange(count: 6)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2583, file: !2545, line: 121, baseType: !305, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2579, file: !2545, line: 123, baseType: !2595, size: 64, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2545, line: 96, flags: DIFlagFwdDecl)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2579, file: !2545, line: 124, baseType: !2598, size: 64, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2545, line: 102, size: 192, elements: !2600)
!2600 = !{!2601, !2602, !2603}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2599, file: !2545, line: 103, baseType: !346, size: 128, align: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2599, file: !2545, line: 104, baseType: !1409, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2599, file: !2545, line: 105, baseType: !471, size: 8, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2579, file: !2545, line: 125, baseType: !196, size: 64, offset: 256)
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2576, file: !2545, line: 241, baseType: !2606, size: 320)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2576, file: !2545, line: 241, size: 320, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611, !2612}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2606, file: !2545, line: 242, baseType: !305, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2606, file: !2545, line: 243, baseType: !305, size: 64, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2606, file: !2545, line: 244, baseType: !2595, size: 64, offset: 128)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2606, file: !2545, line: 245, baseType: !2598, size: 64, offset: 192)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2606, file: !2545, line: 246, baseType: !256, size: 64, offset: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, scope: !2544, file: !2545, line: 254, baseType: !2614, size: 256, offset: 1344)
!2614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2544, file: !2545, line: 254, size: 256, elements: !2615)
!2615 = !{!2616, !2622}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2614, file: !2545, line: 255, baseType: !2617, size: 256)
!2617 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2545, line: 128, size: 256, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2617, file: !2545, line: 129, baseType: !182, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2617, file: !2545, line: 130, baseType: !2621, size: 256)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 256, elements: !1294)
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2545, line: 256, baseType: !2623, size: 256)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2614, file: !2545, line: 256, size: 256, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2623, file: !2545, line: 258, baseType: !200, size: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2623, file: !2545, line: 259, baseType: !2627, size: 128, offset: 128)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2628, line: 22, size: 128, elements: !2629)
!2628 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2629 = !{!2630, !2633}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2627, file: !2628, line: 23, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 64)
!2632 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2628, line: 23, flags: DIFlagFwdDecl)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2627, file: !2628, line: 24, baseType: !305, size: 64, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2544, file: !2545, line: 274, baseType: !2635, size: 64, offset: 1600)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2545, line: 170, size: 192, elements: !2637)
!2637 = !{!2638, !2647, !2648}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2636, file: !2545, line: 171, baseType: !2639, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2545, line: 165, baseType: !2640)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!240, !2543, !2643, !2645, !2543}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2596)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2617)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2636, file: !2545, line: 172, baseType: !2543, size: 64, offset: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2636, file: !2545, line: 173, baseType: !2595, size: 64, offset: 128)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2517, file: !2518, line: 138, baseType: !2543, size: 64, offset: 768)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2517, file: !2518, line: 139, baseType: !2543, size: 64, offset: 832)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2517, file: !2518, line: 140, baseType: !2543, size: 64, offset: 896)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2517, file: !2518, line: 145, baseType: !2653, size: 64, offset: 960)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2655, line: 13, size: 896, elements: !2656)
!2655 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2654, file: !2655, line: 14, baseType: !1409, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2654, file: !2655, line: 15, baseType: !795, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2654, file: !2655, line: 16, baseType: !795, size: 32, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2654, file: !2655, line: 21, baseType: !725, size: 64, offset: 128)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2654, file: !2655, line: 27, baseType: !305, size: 64, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2654, file: !2655, line: 28, baseType: !305, size: 64, offset: 256)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2654, file: !2655, line: 29, baseType: !725, size: 64, offset: 320)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2654, file: !2655, line: 32, baseType: !623, size: 128, offset: 384)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2654, file: !2655, line: 33, baseType: !416, size: 32, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2654, file: !2655, line: 37, baseType: !725, size: 64, offset: 576)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2654, file: !2655, line: 44, baseType: !2668, size: 256, offset: 640)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2669, line: 15, size: 256, elements: !2670)
!2669 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2670 = !{!2671, !2672, !2673, !2674, !2675, !2676, !2677}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2668, file: !2669, line: 16, baseType: !821)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2668, file: !2669, line: 18, baseType: !240, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2668, file: !2669, line: 19, baseType: !240, size: 32, offset: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2668, file: !2669, line: 20, baseType: !240, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2668, file: !2669, line: 21, baseType: !240, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2668, file: !2669, line: 22, baseType: !305, size: 64, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2668, file: !2669, line: 23, baseType: !305, size: 64, offset: 192)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2517, file: !2518, line: 146, baseType: !2679, size: 64, offset: 1024)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2681, line: 56, size: 4160, elements: !2682)
!2681 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2682 = !{!2683, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2720, !2721, !2722, !2723, !2724, !2725, !2806, !2807, !2819}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2680, file: !2681, line: 57, baseType: !2684, size: 576)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2681, line: 23, size: 576, elements: !2685)
!2685 = !{!2686, !2687}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2684, file: !2681, line: 24, baseType: !396, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2684, file: !2681, line: 25, baseType: !2688, size: 512, offset: 64)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2684, file: !2681, line: 25, size: 512, elements: !2689)
!2689 = !{!2690, !2697}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2688, file: !2681, line: 26, baseType: !2691, size: 480)
!2691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2692, size: 480, elements: !1863)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2681, line: 17, size: 96, elements: !2693)
!2693 = !{!2694, !2695, !2696}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2692, file: !2681, line: 18, baseType: !396, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2692, file: !2681, line: 19, baseType: !396, size: 32, offset: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2692, file: !2681, line: 20, baseType: !396, size: 32, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2681, line: 27, baseType: !2698, size: 128)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2688, file: !2681, line: 27, size: 128, elements: !2699)
!2699 = !{!2700, !2702}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2698, file: !2681, line: 28, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2698, file: !2681, line: 29, baseType: !2701, size: 64, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2680, file: !2681, line: 58, baseType: !2684, size: 576, offset: 576)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2680, file: !2681, line: 59, baseType: !2684, size: 576, offset: 1152)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2680, file: !2681, line: 60, baseType: !795, size: 32, offset: 1728)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2680, file: !2681, line: 61, baseType: !2679, size: 64, offset: 1792)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2680, file: !2681, line: 62, baseType: !240, size: 32, offset: 1856)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2680, file: !2681, line: 63, baseType: !416, size: 32, offset: 1888)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2680, file: !2681, line: 64, baseType: !424, size: 32, offset: 1920)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2680, file: !2681, line: 65, baseType: !2711, size: 192, offset: 1984)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2712, line: 7, size: 192, elements: !2713)
!2712 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2713 = !{!2714, !2715, !2719}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2711, file: !2712, line: 8, baseType: !725, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2711, file: !2712, line: 9, baseType: !2716, size: 64, offset: 64)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2718)
!2718 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2712, line: 5, flags: DIFlagFwdDecl)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2711, file: !2712, line: 10, baseType: !7, size: 32, offset: 128)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2680, file: !2681, line: 66, baseType: !305, size: 64, offset: 2176)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2680, file: !2681, line: 74, baseType: !200, size: 128, offset: 2240)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2680, file: !2681, line: 75, baseType: !2543, size: 64, offset: 2368)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2680, file: !2681, line: 76, baseType: !815, size: 256, offset: 2432)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2680, file: !2681, line: 83, baseType: !1080, size: 256, offset: 2688)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2680, file: !2681, line: 85, baseType: !2726, size: 768, offset: 2944)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2727, line: 156, size: 768, elements: !2728)
!2727 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2728 = !{!2729, !2734}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2726, file: !2727, line: 157, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!240, !2733}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2726, file: !2727, line: 158, baseType: !2735, size: 704, offset: 64)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2727, line: 150, size: 704, elements: !2736)
!2736 = !{!2737, !2805}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2735, file: !2727, line: 152, baseType: !2738, size: 640)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2727, line: 131, size: 640, elements: !2739)
!2739 = !{!2740, !2773, !2774, !2775, !2795, !2796, !2798, !2804}
!2740 = !DIDerivedType(tag: DW_TAG_member, scope: !2738, file: !2727, line: 132, baseType: !2741, size: 192)
!2741 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2738, file: !2727, line: 132, size: 192, elements: !2742)
!2742 = !{!2743, !2772}
!2743 = !DIDerivedType(tag: DW_TAG_member, scope: !2741, file: !2727, line: 133, baseType: !2744, size: 192)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2741, file: !2727, line: 133, size: 192, elements: !2745)
!2745 = !{!2746, !2769, !2770, !2771}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2744, file: !2727, line: 134, baseType: !2747, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2727, line: 112, size: 512, elements: !2749)
!2749 = !{!2750, !2751, !2752, !2753, !2754, !2755, !2761, !2767, !2768}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2748, file: !2727, line: 113, baseType: !196, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2748, file: !2727, line: 114, baseType: !182, size: 64, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2748, file: !2727, line: 115, baseType: !240, size: 32, offset: 128)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2748, file: !2727, line: 116, baseType: !296, size: 16, offset: 160)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2748, file: !2727, line: 117, baseType: !2747, size: 64, offset: 192)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2748, file: !2727, line: 118, baseType: !2756, size: 64, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2727, line: 47, baseType: !2758)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!240, !2747, !240, !182, !2760, !743}
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2748, file: !2727, line: 119, baseType: !2762, size: 64, offset: 320)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2727, line: 94, size: 192, elements: !2764)
!2764 = !{!2765, !2766}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2763, file: !2727, line: 95, baseType: !795, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2763, file: !2727, line: 96, baseType: !1216, size: 128, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2748, file: !2727, line: 120, baseType: !182, size: 64, offset: 384)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2748, file: !2727, line: 121, baseType: !182, size: 64, offset: 448)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2744, file: !2727, line: 135, baseType: !240, size: 32, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2744, file: !2727, line: 136, baseType: !240, size: 32, offset: 96)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2744, file: !2727, line: 137, baseType: !240, size: 32, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2741, file: !2727, line: 139, baseType: !346, size: 128, align: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2738, file: !2727, line: 141, baseType: !2469, size: 64, offset: 192)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2738, file: !2727, line: 142, baseType: !2747, size: 64, offset: 256)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2738, file: !2727, line: 143, baseType: !2776, size: 64, offset: 320)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2727, line: 161, size: 960, elements: !2778)
!2778 = !{!2779, !2780, !2784, !2791}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2777, file: !2727, line: 162, baseType: !2726, size: 768)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2777, file: !2727, line: 163, baseType: !2781, size: 64, offset: 768)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!2733, !2776}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2777, file: !2727, line: 164, baseType: !2785, size: 64, offset: 832)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{null, !2788, !2747, !2789, !2790}
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2777, file: !2727, line: 167, baseType: !2792, size: 64, offset: 896)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!240, !2788, !2747}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2738, file: !2727, line: 144, baseType: !2733, size: 64, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2738, file: !2727, line: 145, baseType: !2797, size: 64, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2738, file: !2727, line: 146, baseType: !2799, size: 64, offset: 512)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2727, line: 124, size: 256, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2800, file: !2727, line: 125, baseType: !808, size: 192, align: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2800, file: !2727, line: 126, baseType: !2788, size: 64, offset: 192)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2738, file: !2727, line: 147, baseType: !619, size: 64, offset: 576)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2735, file: !2727, line: 153, baseType: !804, size: 64, offset: 640)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2680, file: !2681, line: 86, baseType: !2788, size: 64, offset: 3712)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2680, file: !2681, line: 88, baseType: !2808, size: 64, offset: 3776)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2681, line: 92, size: 576, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2814, !2815}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2809, file: !2681, line: 93, baseType: !623, size: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2809, file: !2681, line: 94, baseType: !2679, size: 64, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2809, file: !2681, line: 95, baseType: !416, size: 32, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2809, file: !2681, line: 96, baseType: !240, size: 32, offset: 224)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2809, file: !2681, line: 97, baseType: !2816, size: 320, offset: 256)
!2816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !795, size: 320, elements: !2817)
!2817 = !{!2818}
!2818 = !DISubrange(count: 10)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2680, file: !2681, line: 89, baseType: !2820, size: 320, offset: 3840)
!2820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 320, elements: !2817)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2517, file: !2518, line: 147, baseType: !2822, size: 64, offset: 1088)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2518, line: 25, size: 64, elements: !2824)
!2824 = !{!2825, !2826, !2827}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2823, file: !2518, line: 26, baseType: !795, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2823, file: !2518, line: 27, baseType: !240, size: 32, offset: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2823, file: !2518, line: 28, baseType: !2828, offset: 64)
!2828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !424, elements: !2829)
!2829 = !{!2830}
!2830 = !DISubrange(count: 0)
!2831 = !DIDerivedType(tag: DW_TAG_member, scope: !2517, file: !2518, line: 149, baseType: !2832, size: 128, offset: 1152)
!2832 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2517, file: !2518, line: 149, size: 128, elements: !2833)
!2833 = !{!2834, !2835}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2832, file: !2518, line: 150, baseType: !240, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2832, file: !2518, line: 151, baseType: !346, size: 128, align: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2200, file: !2201, line: 926, baseType: !2515, size: 64, offset: 8576)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2200, file: !2201, line: 929, baseType: !2515, size: 64, offset: 8640)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2200, file: !2201, line: 933, baseType: !2543, size: 64, offset: 8704)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2200, file: !2201, line: 943, baseType: !2840, size: 128, offset: 8768)
!2840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 128, elements: !1735)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2200, file: !2201, line: 945, baseType: !2842, size: 64, offset: 8896)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2201, line: 49, flags: DIFlagFwdDecl)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2200, file: !2201, line: 956, baseType: !2845, size: 64, offset: 8960)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2201, line: 45, flags: DIFlagFwdDecl)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2200, file: !2201, line: 959, baseType: !2848, size: 64, offset: 9024)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2201, line: 959, flags: DIFlagFwdDecl)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2200, file: !2201, line: 962, baseType: !2851, size: 64, offset: 9088)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2201, line: 66, flags: DIFlagFwdDecl)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2200, file: !2201, line: 966, baseType: !2854, size: 64, offset: 9152)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2856, line: 31, size: 576, elements: !2857)
!2856 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2857 = !{!2858, !2859, !2862, !2865, !2868, !2869, !2872, !2875, !2876}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2855, file: !2856, line: 32, baseType: !795, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2855, file: !2856, line: 33, baseType: !2860, size: 64, offset: 64)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2856, line: 9, flags: DIFlagFwdDecl)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2855, file: !2856, line: 34, baseType: !2863, size: 64, offset: 128)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2856, line: 10, flags: DIFlagFwdDecl)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2855, file: !2856, line: 35, baseType: !2866, size: 64, offset: 192)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2856, line: 8, flags: DIFlagFwdDecl)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2855, file: !2856, line: 36, baseType: !2462, size: 64, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2855, file: !2856, line: 37, baseType: !2870, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2545, line: 34, flags: DIFlagFwdDecl)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2855, file: !2856, line: 38, baseType: !2873, size: 64, offset: 384)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2856, line: 38, flags: DIFlagFwdDecl)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2855, file: !2856, line: 39, baseType: !2873, size: 64, offset: 448)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2855, file: !2856, line: 40, baseType: !2877, size: 64, offset: 512)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2879, line: 856, size: 448, elements: !2880)
!2879 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!2880 = !{!2881, !2882, !2883, !2884, !2885}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2878, file: !2879, line: 857, baseType: !1409, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2878, file: !2879, line: 858, baseType: !2711, size: 192, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2878, file: !2879, line: 859, baseType: !2679, size: 64, offset: 256)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2878, file: !2879, line: 860, baseType: !2808, size: 64, offset: 320)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !2878, file: !2879, line: 861, baseType: !2886, size: 64, offset: 384)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !2888, line: 16, flags: DIFlagFwdDecl)
!2888 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2200, file: !2201, line: 969, baseType: !2890, size: 64, offset: 9216)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2892, line: 82, size: 7296, elements: !2893)
!2892 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2893 = !{!2894, !2895, !2896, !2897, !2898, !2899, !2900, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2929, !2938, !2939, !2941, !2942, !2943, !2946, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2976, !2977, !2984, !2985, !2986, !2987, !2988, !2989}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2891, file: !2892, line: 83, baseType: !1409, size: 32)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2891, file: !2892, line: 84, baseType: !795, size: 32, offset: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2891, file: !2892, line: 85, baseType: !240, size: 32, offset: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2891, file: !2892, line: 86, baseType: !200, size: 128, offset: 128)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2891, file: !2892, line: 88, baseType: !1216, size: 128, offset: 256)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2891, file: !2892, line: 91, baseType: !2199, size: 64, offset: 384)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2891, file: !2892, line: 94, baseType: !2901, size: 192, offset: 448)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2902, line: 30, size: 192, elements: !2903)
!2902 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2903 = !{!2904, !2905}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2901, file: !2902, line: 31, baseType: !200, size: 128)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2901, file: !2902, line: 32, baseType: !2906, size: 64, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2907, line: 25, baseType: !2908)
!2907 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2907, line: 23, size: 64, elements: !2909)
!2909 = !{!2910}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2908, file: !2907, line: 24, baseType: !2345, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2891, file: !2892, line: 97, baseType: !619, size: 64, offset: 640)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2891, file: !2892, line: 100, baseType: !240, size: 32, offset: 704)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2891, file: !2892, line: 106, baseType: !240, size: 32, offset: 736)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2891, file: !2892, line: 107, baseType: !2199, size: 64, offset: 768)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2891, file: !2892, line: 110, baseType: !240, size: 32, offset: 832)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2891, file: !2892, line: 111, baseType: !7, size: 32, offset: 864)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2891, file: !2892, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2891, file: !2892, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2891, file: !2892, line: 128, baseType: !240, size: 32, offset: 928)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2891, file: !2892, line: 129, baseType: !200, size: 128, offset: 960)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2891, file: !2892, line: 132, baseType: !2269, size: 512, offset: 1088)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2891, file: !2892, line: 133, baseType: !2277, size: 64, offset: 1600)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2891, file: !2892, line: 140, baseType: !2924, size: 256, offset: 1664)
!2924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2925, size: 256, elements: !1386)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2892, line: 38, size: 128, elements: !2926)
!2926 = !{!2927, !2928}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2925, file: !2892, line: 39, baseType: !402, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2925, file: !2892, line: 40, baseType: !402, size: 64, offset: 64)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2891, file: !2892, line: 146, baseType: !2930, size: 192, offset: 1920)
!2930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2892, line: 66, size: 192, elements: !2931)
!2931 = !{!2932}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2930, file: !2892, line: 67, baseType: !2933, size: 192)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2892, line: 47, size: 192, elements: !2934)
!2934 = !{!2935, !2936, !2937}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2933, file: !2892, line: 48, baseType: !727, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2933, file: !2892, line: 49, baseType: !727, size: 64, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2933, file: !2892, line: 50, baseType: !727, size: 64, offset: 128)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2891, file: !2892, line: 150, baseType: !2498, size: 640, offset: 2112)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2891, file: !2892, line: 153, baseType: !2940, size: 256, offset: 2752)
!2940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2445, size: 256, elements: !1294)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2891, file: !2892, line: 159, baseType: !2445, size: 64, offset: 3008)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2891, file: !2892, line: 162, baseType: !240, size: 32, offset: 3072)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2891, file: !2892, line: 164, baseType: !2944, size: 64, offset: 3136)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2892, line: 164, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2891, file: !2892, line: 175, baseType: !2947, size: 32, offset: 3200)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !369, line: 805, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 798, size: 32, elements: !2949)
!2949 = !{!2950, !2951}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2948, file: !369, line: 803, baseType: !368, size: 32)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2948, file: !369, line: 804, baseType: !214, offset: 32)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2891, file: !2892, line: 176, baseType: !402, size: 64, offset: 3264)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2891, file: !2892, line: 176, baseType: !402, size: 64, offset: 3328)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2891, file: !2892, line: 176, baseType: !402, size: 64, offset: 3392)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2891, file: !2892, line: 176, baseType: !402, size: 64, offset: 3456)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2891, file: !2892, line: 177, baseType: !402, size: 64, offset: 3520)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2891, file: !2892, line: 178, baseType: !402, size: 64, offset: 3584)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2891, file: !2892, line: 179, baseType: !2486, size: 128, offset: 3648)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2891, file: !2892, line: 180, baseType: !305, size: 64, offset: 3776)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2891, file: !2892, line: 180, baseType: !305, size: 64, offset: 3840)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2891, file: !2892, line: 180, baseType: !305, size: 64, offset: 3904)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2891, file: !2892, line: 180, baseType: !305, size: 64, offset: 3968)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2891, file: !2892, line: 181, baseType: !305, size: 64, offset: 4032)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2891, file: !2892, line: 181, baseType: !305, size: 64, offset: 4096)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2891, file: !2892, line: 181, baseType: !305, size: 64, offset: 4160)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2891, file: !2892, line: 181, baseType: !305, size: 64, offset: 4224)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2891, file: !2892, line: 182, baseType: !305, size: 64, offset: 4288)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2891, file: !2892, line: 182, baseType: !305, size: 64, offset: 4352)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2891, file: !2892, line: 182, baseType: !305, size: 64, offset: 4416)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2891, file: !2892, line: 182, baseType: !305, size: 64, offset: 4480)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2891, file: !2892, line: 183, baseType: !305, size: 64, offset: 4544)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2891, file: !2892, line: 183, baseType: !305, size: 64, offset: 4608)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2891, file: !2892, line: 184, baseType: !2974, offset: 4672)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2975, line: 12, elements: !228)
!2975 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2891, file: !2892, line: 192, baseType: !404, size: 64, offset: 4672)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2891, file: !2892, line: 203, baseType: !2978, size: 2048, offset: 4736)
!2978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2979, size: 2048, elements: !1735)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2980, line: 43, size: 128, elements: !2981)
!2980 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2979, file: !2980, line: 44, baseType: !304, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2979, file: !2980, line: 45, baseType: !304, size: 64, offset: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2891, file: !2892, line: 220, baseType: !471, size: 8, offset: 6784)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2891, file: !2892, line: 221, baseType: !971, size: 16, offset: 6800)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2891, file: !2892, line: 222, baseType: !971, size: 16, offset: 6816)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2891, file: !2892, line: 224, baseType: !1966, size: 64, offset: 6848)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2891, file: !2892, line: 227, baseType: !721, size: 192, offset: 6912)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2891, file: !2892, line: 233, baseType: !721, size: 192, offset: 7104)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2200, file: !2201, line: 970, baseType: !2991, size: 64, offset: 9280)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2892, line: 20, size: 16576, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2992, file: !2892, line: 21, baseType: !214)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2992, file: !2892, line: 22, baseType: !1409, size: 32)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2992, file: !2892, line: 23, baseType: !1216, size: 128, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2992, file: !2892, line: 24, baseType: !2998, size: 16384, offset: 192)
!2998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2999, size: 16384, elements: !261)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2902, line: 49, size: 256, elements: !3000)
!3000 = !{!3001}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2999, file: !2902, line: 50, baseType: !3002, size: 256)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2902, line: 35, size: 256, elements: !3003)
!3003 = !{!3004, !3011, !3012, !3018}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3002, file: !2902, line: 37, baseType: !3005, size: 64)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3006, line: 19, baseType: !3007)
!3006 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3006, line: 18, baseType: !3009)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{null, !240}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3002, file: !2902, line: 38, baseType: !305, size: 64, offset: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3002, file: !2902, line: 44, baseType: !3013, size: 64, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3006, line: 22, baseType: !3014)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3006, line: 21, baseType: !3016)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{null}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3002, file: !2902, line: 46, baseType: !2906, size: 64, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2200, file: !2201, line: 971, baseType: !2906, size: 64, offset: 9344)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2200, file: !2201, line: 972, baseType: !2906, size: 64, offset: 9408)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2200, file: !2201, line: 974, baseType: !2906, size: 64, offset: 9472)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2200, file: !2201, line: 975, baseType: !2901, size: 192, offset: 9536)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2200, file: !2201, line: 976, baseType: !305, size: 64, offset: 9728)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2200, file: !2201, line: 977, baseType: !302, size: 64, offset: 9792)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2200, file: !2201, line: 978, baseType: !7, size: 32, offset: 9856)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2200, file: !2201, line: 980, baseType: !349, size: 64, offset: 9920)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2200, file: !2201, line: 989, baseType: !3028, size: 128, offset: 9984)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3029, line: 35, size: 128, elements: !3030)
!3029 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3030 = !{!3031, !3032, !3033}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3028, file: !3029, line: 36, baseType: !240, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3028, file: !3029, line: 37, baseType: !795, size: 32, offset: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3028, file: !3029, line: 38, baseType: !3034, size: 64, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3029, line: 23, flags: DIFlagFwdDecl)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2200, file: !2201, line: 992, baseType: !402, size: 64, offset: 10112)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2200, file: !2201, line: 993, baseType: !402, size: 64, offset: 10176)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2200, file: !2201, line: 996, baseType: !214, offset: 10240)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2200, file: !2201, line: 999, baseType: !821, offset: 10240)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2200, file: !2201, line: 1001, baseType: !3041, size: 64, offset: 10240)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2201, line: 636, size: 64, elements: !3042)
!3042 = !{!3043}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3041, file: !2201, line: 637, baseType: !3044, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2200, file: !2201, line: 1005, baseType: !800, size: 128, offset: 10304)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2200, file: !2201, line: 1007, baseType: !2199, size: 64, offset: 10432)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2200, file: !2201, line: 1009, baseType: !3048, size: 64, offset: 10496)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2201, line: 1009, flags: DIFlagFwdDecl)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2200, file: !2201, line: 1043, baseType: !182, size: 64, offset: 10560)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2200, file: !2201, line: 1046, baseType: !3052, size: 64, offset: 10624)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2200, file: !2201, line: 1050, baseType: !3054, size: 64, offset: 10688)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !19, line: 1236, size: 320, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3055, file: !19, line: 1237, baseType: !200, size: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3055, file: !19, line: 1238, baseType: !200, size: 128, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3055, file: !19, line: 1239, baseType: !297, size: 16, offset: 256)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3055, file: !19, line: 1240, baseType: !471, size: 8, offset: 272)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3055, file: !19, line: 1241, baseType: !471, size: 8, offset: 280)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2200, file: !2201, line: 1054, baseType: !3063, size: 64, offset: 10752)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !967, line: 131, size: 64, elements: !3065)
!3065 = !{!3066}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3064, file: !967, line: 132, baseType: !305, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2200, file: !2201, line: 1056, baseType: !1590, size: 64, offset: 10816)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2200, file: !2201, line: 1058, baseType: !1361, size: 64, offset: 10880)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2200, file: !2201, line: 1061, baseType: !3070, size: 64, offset: 10944)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2201, line: 43, flags: DIFlagFwdDecl)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2200, file: !2201, line: 1064, baseType: !305, size: 64, offset: 11008)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2200, file: !2201, line: 1065, baseType: !3074, size: 64, offset: 11072)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2902, line: 14, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2902, line: 12, size: 384, elements: !3077)
!3077 = !{!3078}
!3078 = !DIDerivedType(tag: DW_TAG_member, scope: !3076, file: !2902, line: 13, baseType: !3079, size: 384)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3076, file: !2902, line: 13, size: 384, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3079, file: !2902, line: 13, baseType: !240, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3079, file: !2902, line: 13, baseType: !240, size: 32, offset: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3079, file: !2902, line: 13, baseType: !240, size: 32, offset: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3079, file: !2902, line: 13, baseType: !3085, size: 256, offset: 128)
!3085 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3086, line: 32, size: 256, elements: !3087)
!3086 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3093, !3106, !3112, !3121, !3141, !3146}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3085, file: !3086, line: 37, baseType: !3089, size: 64)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 34, size: 64, elements: !3090)
!3090 = !{!3091, !3092}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3089, file: !3086, line: 35, baseType: !2434, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3089, file: !3086, line: 36, baseType: !422, size: 32, offset: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3085, file: !3086, line: 45, baseType: !3094, size: 192)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 40, size: 192, elements: !3095)
!3095 = !{!3096, !3098, !3099, !3105}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3094, file: !3086, line: 41, baseType: !3097, size: 32)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !289, line: 95, baseType: !240)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3094, file: !3086, line: 42, baseType: !240, size: 32, offset: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3094, file: !3086, line: 43, baseType: !3100, size: 64, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3086, line: 11, baseType: !3101)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3086, line: 8, size: 64, elements: !3102)
!3102 = !{!3103, !3104}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3101, file: !3086, line: 9, baseType: !240, size: 32)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3101, file: !3086, line: 10, baseType: !182, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3094, file: !3086, line: 44, baseType: !240, size: 32, offset: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3085, file: !3086, line: 52, baseType: !3107, size: 128)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 48, size: 128, elements: !3108)
!3108 = !{!3109, !3110, !3111}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3107, file: !3086, line: 49, baseType: !2434, size: 32)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3107, file: !3086, line: 50, baseType: !422, size: 32, offset: 32)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3107, file: !3086, line: 51, baseType: !3100, size: 64, offset: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3085, file: !3086, line: 61, baseType: !3113, size: 256)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 55, size: 256, elements: !3114)
!3114 = !{!3115, !3116, !3117, !3118, !3120}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3113, file: !3086, line: 56, baseType: !2434, size: 32)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3113, file: !3086, line: 57, baseType: !422, size: 32, offset: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3113, file: !3086, line: 58, baseType: !240, size: 32, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3113, file: !3086, line: 59, baseType: !3119, size: 64, offset: 128)
!3119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !289, line: 94, baseType: !290)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3113, file: !3086, line: 60, baseType: !3119, size: 64, offset: 192)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3085, file: !3086, line: 95, baseType: !3122, size: 256)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 64, size: 256, elements: !3123)
!3123 = !{!3124, !3125}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3122, file: !3086, line: 65, baseType: !182, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, scope: !3122, file: !3086, line: 77, baseType: !3126, size: 192, offset: 64)
!3126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3122, file: !3086, line: 77, size: 192, elements: !3127)
!3127 = !{!3128, !3129, !3136}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3126, file: !3086, line: 82, baseType: !971, size: 16)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3126, file: !3086, line: 88, baseType: !3130, size: 192)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3126, file: !3086, line: 84, size: 192, elements: !3131)
!3131 = !{!3132, !3134, !3135}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3130, file: !3086, line: 85, baseType: !3133, size: 64)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 64, elements: !2307)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3130, file: !3086, line: 86, baseType: !182, size: 64, offset: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3130, file: !3086, line: 87, baseType: !182, size: 64, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3126, file: !3086, line: 93, baseType: !3137, size: 96)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3126, file: !3086, line: 90, size: 96, elements: !3138)
!3138 = !{!3139, !3140}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3137, file: !3086, line: 91, baseType: !3133, size: 64)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3137, file: !3086, line: 92, baseType: !398, size: 32, offset: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3085, file: !3086, line: 101, baseType: !3142, size: 128)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 98, size: 128, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3142, file: !3086, line: 99, baseType: !142, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3142, file: !3086, line: 100, baseType: !240, size: 32, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3085, file: !3086, line: 108, baseType: !3147, size: 128)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3085, file: !3086, line: 104, size: 128, elements: !3148)
!3148 = !{!3149, !3150, !3151}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3147, file: !3086, line: 105, baseType: !182, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3147, file: !3086, line: 106, baseType: !240, size: 32, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3147, file: !3086, line: 107, baseType: !7, size: 32, offset: 96)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2200, file: !2201, line: 1067, baseType: !2974, offset: 11136)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2200, file: !2201, line: 1099, baseType: !3154, size: 64, offset: 11136)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2201, line: 56, flags: DIFlagFwdDecl)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2200, file: !2201, line: 1103, baseType: !200, size: 128, offset: 11200)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2200, file: !2201, line: 1104, baseType: !3158, size: 64, offset: 11328)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2201, line: 46, flags: DIFlagFwdDecl)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2200, file: !2201, line: 1105, baseType: !721, size: 192, offset: 11392)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2200, file: !2201, line: 1106, baseType: !7, size: 32, offset: 11584)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2200, file: !2201, line: 1109, baseType: !3163, size: 128, offset: 11648)
!3163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3164, size: 128, elements: !1386)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2201, line: 51, flags: DIFlagFwdDecl)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2200, file: !2201, line: 1110, baseType: !721, size: 192, offset: 11776)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2200, file: !2201, line: 1111, baseType: !200, size: 128, offset: 11968)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2200, file: !2201, line: 1173, baseType: !3169, size: 64, offset: 12096)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3171, line: 62, size: 256, align: 256, elements: !3172)
!3171 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3172 = !{!3173, !3174, !3175, !3180}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3170, file: !3171, line: 75, baseType: !398, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3170, file: !3171, line: 90, baseType: !398, size: 32, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3170, file: !3171, line: 124, baseType: !3176, size: 64, offset: 64)
!3176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3170, file: !3171, line: 109, size: 64, elements: !3177)
!3177 = !{!3178, !3179}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3176, file: !3171, line: 110, baseType: !403, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3176, file: !3171, line: 112, baseType: !403, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3170, file: !3171, line: 144, baseType: !398, size: 32, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2200, file: !2201, line: 1174, baseType: !396, size: 32, offset: 12160)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2200, file: !2201, line: 1179, baseType: !305, size: 64, offset: 12224)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2200, file: !2201, line: 1182, baseType: !3184, size: 128, offset: 12288)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2143, line: 76, size: 128, elements: !3185)
!3185 = !{!3186, !3191, !3192}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3184, file: !2143, line: 85, baseType: !3187, size: 64)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3188, line: 7, size: 64, elements: !3189)
!3188 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3189 = !{!3190}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3187, file: !3188, line: 12, baseType: !2342, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3184, file: !2143, line: 88, baseType: !471, size: 8, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3184, file: !2143, line: 95, baseType: !471, size: 8, offset: 72)
!3193 = !DIDerivedType(tag: DW_TAG_member, scope: !2200, file: !2201, line: 1184, baseType: !3194, size: 128, offset: 12416)
!3194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2200, file: !2201, line: 1184, size: 128, elements: !3195)
!3195 = !{!3196, !3197}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3194, file: !2201, line: 1185, baseType: !1409, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3194, file: !2201, line: 1186, baseType: !346, size: 128, align: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2200, file: !2201, line: 1190, baseType: !3199, size: 64, offset: 12544)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2201, line: 53, flags: DIFlagFwdDecl)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2200, file: !2201, line: 1192, baseType: !3202, size: 128, offset: 12608)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2143, line: 64, size: 128, elements: !3203)
!3203 = !{!3204, !3205, !3206}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3202, file: !2143, line: 65, baseType: !768, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3202, file: !2143, line: 67, baseType: !398, size: 32, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3202, file: !2143, line: 68, baseType: !398, size: 32, offset: 96)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2200, file: !2201, line: 1206, baseType: !240, size: 32, offset: 12736)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2200, file: !2201, line: 1207, baseType: !240, size: 32, offset: 12768)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2200, file: !2201, line: 1209, baseType: !305, size: 64, offset: 12800)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2200, file: !2201, line: 1219, baseType: !402, size: 64, offset: 12864)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2200, file: !2201, line: 1220, baseType: !402, size: 64, offset: 12928)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2200, file: !2201, line: 1317, baseType: !240, size: 32, offset: 12992)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2200, file: !2201, line: 1319, baseType: !2199, size: 64, offset: 13056)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2200, file: !2201, line: 1322, baseType: !3215, size: 64, offset: 13120)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3217, line: 56, size: 512, elements: !3218)
!3217 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224, !3225, !3227}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3216, file: !3217, line: 57, baseType: !3215, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3216, file: !3217, line: 58, baseType: !182, size: 64, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3216, file: !3217, line: 59, baseType: !305, size: 64, offset: 128)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3216, file: !3217, line: 60, baseType: !305, size: 64, offset: 192)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3216, file: !3217, line: 61, baseType: !868, size: 64, offset: 256)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3216, file: !3217, line: 62, baseType: !7, size: 32, offset: 320)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3216, file: !3217, line: 63, baseType: !3226, size: 64, offset: 384)
!3226 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !201, line: 153, baseType: !402)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3216, file: !3217, line: 64, baseType: !3228, size: 64, offset: 448)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2200, file: !2201, line: 1326, baseType: !1409, size: 32, offset: 13184)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2200, file: !2201, line: 1342, baseType: !182, size: 64, offset: 13248)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2200, file: !2201, line: 1343, baseType: !403, size: 64, offset: 13312)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2200, file: !2201, line: 1344, baseType: !402, size: 64, offset: 13376)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2200, file: !2201, line: 1345, baseType: !403, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2200, file: !2201, line: 1346, baseType: !403, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2200, file: !2201, line: 1347, baseType: !403, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2200, file: !2201, line: 1348, baseType: !346, size: 128, align: 64, offset: 13504)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2200, file: !2201, line: 1358, baseType: !3239, size: 34816, offset: 13824)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3240, line: 485, size: 34816, elements: !3241)
!3240 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3241 = !{!3242, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3271, !3272, !3273, !3274, !3275, !3276, !3279, !3280, !3281}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3239, file: !3240, line: 487, baseType: !3243, size: 192)
!3243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3244, size: 192, elements: !257)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3245, line: 16, size: 64, elements: !3246)
!3245 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3246 = !{!3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3244, file: !3245, line: 17, baseType: !907, size: 16)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3244, file: !3245, line: 18, baseType: !907, size: 16, offset: 16)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3244, file: !3245, line: 19, baseType: !907, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3244, file: !3245, line: 19, baseType: !907, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3244, file: !3245, line: 19, baseType: !907, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3244, file: !3245, line: 19, baseType: !907, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3244, file: !3245, line: 19, baseType: !907, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3244, file: !3245, line: 20, baseType: !907, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3244, file: !3245, line: 20, baseType: !907, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3244, file: !3245, line: 20, baseType: !907, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3244, file: !3245, line: 20, baseType: !907, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3244, file: !3245, line: 20, baseType: !907, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3244, file: !3245, line: 20, baseType: !907, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3239, file: !3240, line: 491, baseType: !305, size: 64, offset: 192)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3239, file: !3240, line: 495, baseType: !297, size: 16, offset: 256)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3239, file: !3240, line: 496, baseType: !297, size: 16, offset: 272)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3239, file: !3240, line: 497, baseType: !297, size: 16, offset: 288)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3239, file: !3240, line: 498, baseType: !297, size: 16, offset: 304)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3239, file: !3240, line: 502, baseType: !305, size: 64, offset: 320)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3239, file: !3240, line: 503, baseType: !305, size: 64, offset: 384)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3239, file: !3240, line: 514, baseType: !3268, size: 256, offset: 448)
!3268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3269, size: 256, elements: !1294)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3240, line: 483, flags: DIFlagFwdDecl)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3239, file: !3240, line: 516, baseType: !305, size: 64, offset: 704)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3239, file: !3240, line: 518, baseType: !305, size: 64, offset: 768)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3239, file: !3240, line: 520, baseType: !305, size: 64, offset: 832)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3239, file: !3240, line: 521, baseType: !305, size: 64, offset: 896)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3239, file: !3240, line: 522, baseType: !305, size: 64, offset: 960)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3239, file: !3240, line: 528, baseType: !3277, size: 64, offset: 1024)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3240, line: 10, flags: DIFlagFwdDecl)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3239, file: !3240, line: 535, baseType: !305, size: 64, offset: 1088)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3239, file: !3240, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3239, file: !3240, line: 540, baseType: !3282, size: 33280, offset: 1536)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3283, line: 317, size: 33280, elements: !3284)
!3283 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3284 = !{!3285, !3286, !3287}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3282, file: !3283, line: 330, baseType: !7, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3282, file: !3283, line: 337, baseType: !305, size: 64, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3282, file: !3283, line: 348, baseType: !3288, size: 32768, offset: 512)
!3288 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3283, line: 304, size: 32768, elements: !3289)
!3289 = !{!3290, !3305, !3342, !3392, !3405}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3288, file: !3283, line: 305, baseType: !3291, size: 896)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3283, line: 12, size: 896, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3304}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3291, file: !3283, line: 13, baseType: !396, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3291, file: !3283, line: 14, baseType: !396, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3291, file: !3283, line: 15, baseType: !396, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3291, file: !3283, line: 16, baseType: !396, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3291, file: !3283, line: 17, baseType: !396, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3291, file: !3283, line: 18, baseType: !396, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3291, file: !3283, line: 19, baseType: !396, size: 32, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3291, file: !3283, line: 22, baseType: !3301, size: 640, offset: 224)
!3301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 640, elements: !3302)
!3302 = !{!3303}
!3303 = !DISubrange(count: 20)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3291, file: !3283, line: 25, baseType: !396, size: 32, offset: 864)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3288, file: !3283, line: 306, baseType: !3306, size: 4096, align: 128)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3283, line: 34, size: 4096, align: 128, elements: !3307)
!3307 = !{!3308, !3309, !3310, !3311, !3312, !3327, !3328, !3329, !3331, !3333, !3337}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3306, file: !3283, line: 35, baseType: !907, size: 16)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3306, file: !3283, line: 36, baseType: !907, size: 16, offset: 16)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3306, file: !3283, line: 37, baseType: !907, size: 16, offset: 32)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3306, file: !3283, line: 38, baseType: !907, size: 16, offset: 48)
!3312 = !DIDerivedType(tag: DW_TAG_member, scope: !3306, file: !3283, line: 39, baseType: !3313, size: 128, offset: 64)
!3313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3306, file: !3283, line: 39, size: 128, elements: !3314)
!3314 = !{!3315, !3320}
!3315 = !DIDerivedType(tag: DW_TAG_member, scope: !3313, file: !3283, line: 40, baseType: !3316, size: 128)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3313, file: !3283, line: 40, size: 128, elements: !3317)
!3317 = !{!3318, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3316, file: !3283, line: 41, baseType: !402, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3316, file: !3283, line: 42, baseType: !402, size: 64, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, scope: !3313, file: !3283, line: 44, baseType: !3321, size: 128)
!3321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3313, file: !3283, line: 44, size: 128, elements: !3322)
!3322 = !{!3323, !3324, !3325, !3326}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3321, file: !3283, line: 45, baseType: !396, size: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3321, file: !3283, line: 46, baseType: !396, size: 32, offset: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3321, file: !3283, line: 47, baseType: !396, size: 32, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3321, file: !3283, line: 48, baseType: !396, size: 32, offset: 96)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3306, file: !3283, line: 51, baseType: !396, size: 32, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3306, file: !3283, line: 52, baseType: !396, size: 32, offset: 224)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3306, file: !3283, line: 55, baseType: !3330, size: 1024, offset: 256)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 1024, elements: !1105)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3306, file: !3283, line: 58, baseType: !3332, size: 2048, offset: 1280)
!3332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 2048, elements: !261)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3306, file: !3283, line: 60, baseType: !3334, size: 384, offset: 3328)
!3334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 384, elements: !3335)
!3335 = !{!3336}
!3336 = !DISubrange(count: 12)
!3337 = !DIDerivedType(tag: DW_TAG_member, scope: !3306, file: !3283, line: 62, baseType: !3338, size: 384, offset: 3712)
!3338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3306, file: !3283, line: 62, size: 384, elements: !3339)
!3339 = !{!3340, !3341}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3338, file: !3283, line: 63, baseType: !3334, size: 384)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3338, file: !3283, line: 64, baseType: !3334, size: 384)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3288, file: !3283, line: 307, baseType: !3343, size: 1088)
!3343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3283, line: 79, size: 1088, elements: !3344)
!3344 = !{!3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3391}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3343, file: !3283, line: 80, baseType: !396, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3343, file: !3283, line: 81, baseType: !396, size: 32, offset: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3343, file: !3283, line: 82, baseType: !396, size: 32, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3343, file: !3283, line: 83, baseType: !396, size: 32, offset: 96)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3343, file: !3283, line: 84, baseType: !396, size: 32, offset: 128)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3343, file: !3283, line: 85, baseType: !396, size: 32, offset: 160)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3343, file: !3283, line: 86, baseType: !396, size: 32, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3343, file: !3283, line: 88, baseType: !3301, size: 640, offset: 224)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3343, file: !3283, line: 89, baseType: !1028, size: 8, offset: 864)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3343, file: !3283, line: 90, baseType: !1028, size: 8, offset: 872)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3343, file: !3283, line: 91, baseType: !1028, size: 8, offset: 880)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3343, file: !3283, line: 92, baseType: !1028, size: 8, offset: 888)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3343, file: !3283, line: 93, baseType: !1028, size: 8, offset: 896)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3343, file: !3283, line: 94, baseType: !1028, size: 8, offset: 904)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3343, file: !3283, line: 95, baseType: !3360, size: 64, offset: 960)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3361, size: 64)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3362, line: 11, size: 128, elements: !3363)
!3362 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3363 = !{!3364, !3365}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3361, file: !3362, line: 12, baseType: !142, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3361, file: !3362, line: 13, baseType: !3366, size: 64, offset: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3368, line: 56, size: 1344, elements: !3369)
!3368 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3369 = !{!3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3367, file: !3368, line: 61, baseType: !305, size: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3367, file: !3368, line: 62, baseType: !305, size: 64, offset: 64)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3367, file: !3368, line: 63, baseType: !305, size: 64, offset: 128)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3367, file: !3368, line: 64, baseType: !305, size: 64, offset: 192)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3367, file: !3368, line: 65, baseType: !305, size: 64, offset: 256)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3367, file: !3368, line: 66, baseType: !305, size: 64, offset: 320)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3367, file: !3368, line: 68, baseType: !305, size: 64, offset: 384)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3367, file: !3368, line: 69, baseType: !305, size: 64, offset: 448)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3367, file: !3368, line: 70, baseType: !305, size: 64, offset: 512)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3367, file: !3368, line: 71, baseType: !305, size: 64, offset: 576)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3367, file: !3368, line: 72, baseType: !305, size: 64, offset: 640)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3367, file: !3368, line: 73, baseType: !305, size: 64, offset: 704)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3367, file: !3368, line: 74, baseType: !305, size: 64, offset: 768)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3367, file: !3368, line: 75, baseType: !305, size: 64, offset: 832)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3367, file: !3368, line: 76, baseType: !305, size: 64, offset: 896)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3367, file: !3368, line: 81, baseType: !305, size: 64, offset: 960)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3367, file: !3368, line: 83, baseType: !305, size: 64, offset: 1024)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3367, file: !3368, line: 84, baseType: !305, size: 64, offset: 1088)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3367, file: !3368, line: 85, baseType: !305, size: 64, offset: 1152)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3367, file: !3368, line: 86, baseType: !305, size: 64, offset: 1216)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3367, file: !3368, line: 87, baseType: !305, size: 64, offset: 1280)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3343, file: !3283, line: 96, baseType: !396, size: 32, offset: 1024)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3288, file: !3283, line: 308, baseType: !3393, size: 4608, align: 512)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3283, line: 289, size: 4608, align: 512, elements: !3394)
!3394 = !{!3395, !3396, !3403}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3393, file: !3283, line: 290, baseType: !3306, size: 4096, align: 128)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3393, file: !3283, line: 291, baseType: !3397, size: 512, offset: 4096)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3283, line: 268, size: 512, elements: !3398)
!3398 = !{!3399, !3400, !3401}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3397, file: !3283, line: 269, baseType: !402, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3397, file: !3283, line: 270, baseType: !402, size: 64, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3397, file: !3283, line: 271, baseType: !3402, size: 384, offset: 128)
!3402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 384, elements: !2591)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3393, file: !3283, line: 292, baseType: !3404, offset: 4608)
!3404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, elements: !2829)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3288, file: !3283, line: 309, baseType: !3406, size: 32768)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 32768, elements: !3407)
!3407 = !{!3408}
!3408 = !DISubrange(count: 4096)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2196, file: !770, line: 378, baseType: !3410, size: 64, offset: 64)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2192, file: !770, line: 384, baseType: !2470, size: 192, offset: 192)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1970, file: !770, line: 500, baseType: !214, offset: 6656)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1970, file: !770, line: 501, baseType: !3414, size: 64, offset: 6656)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !770, line: 387, flags: DIFlagFwdDecl)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1970, file: !770, line: 516, baseType: !2679, size: 64, offset: 6720)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1970, file: !770, line: 519, baseType: !333, size: 64, offset: 6784)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1970, file: !770, line: 521, baseType: !3419, size: 64, offset: 6848)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !770, line: 521, flags: DIFlagFwdDecl)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1970, file: !770, line: 545, baseType: !795, size: 32, offset: 6912)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1970, file: !770, line: 548, baseType: !471, size: 8, offset: 6944)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1970, file: !770, line: 550, baseType: !3424, offset: 6952)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3425, line: 142, elements: !228)
!3425 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1970, file: !770, line: 554, baseType: !1080, size: 256, offset: 6976)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1970, file: !770, line: 557, baseType: !396, size: 32, offset: 7232)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1967, file: !770, line: 565, baseType: !3429, offset: 7296)
!3429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, elements: !1118)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1963, file: !770, line: 151, baseType: !795, size: 32)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1955, file: !770, line: 156, baseType: !214, offset: 256)
!3432 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !770, line: 159, baseType: !3433, size: 128)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !774, file: !770, line: 159, size: 128, elements: !3434)
!3434 = !{!3435, !3479}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3433, file: !770, line: 161, baseType: !3436, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !73, line: 110, size: 1152, elements: !3438)
!3438 = !{!3439, !3449, !3450, !3451, !3452, !3453, !3454, !3466, !3467, !3468}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3437, file: !73, line: 111, baseType: !3440, size: 384)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !73, line: 19, size: 384, elements: !3441)
!3441 = !{!3442, !3444, !3445, !3446, !3447, !3448}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3440, file: !73, line: 20, baseType: !3443, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !305)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3440, file: !73, line: 21, baseType: !3443, size: 64, offset: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3440, file: !73, line: 22, baseType: !3443, size: 64, offset: 128)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3440, file: !73, line: 23, baseType: !305, size: 64, offset: 192)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3440, file: !73, line: 24, baseType: !305, size: 64, offset: 256)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3440, file: !73, line: 25, baseType: !305, size: 64, offset: 320)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3437, file: !73, line: 112, baseType: !1056, size: 64, offset: 384)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3437, file: !73, line: 113, baseType: !1042, size: 128, offset: 448)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3437, file: !73, line: 114, baseType: !2470, size: 192, offset: 576)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3437, file: !73, line: 115, baseType: !72, size: 32, offset: 768)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3437, file: !73, line: 116, baseType: !7, size: 32, offset: 800)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3437, file: !73, line: 117, baseType: !3455, size: 64, offset: 832)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !73, line: 67, size: 256, elements: !3458)
!3458 = !{!3459, !3460, !3464, !3465}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3457, file: !73, line: 73, baseType: !888, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3457, file: !73, line: 78, baseType: !3461, size: 64, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{null, !3436}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3457, file: !73, line: 83, baseType: !3461, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3457, file: !73, line: 89, baseType: !2019, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3437, file: !73, line: 118, baseType: !182, size: 64, offset: 896)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3437, file: !73, line: 119, baseType: !240, size: 32, offset: 960)
!3468 = !DIDerivedType(tag: DW_TAG_member, scope: !3437, file: !73, line: 120, baseType: !3469, size: 128, offset: 1024)
!3469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3437, file: !73, line: 120, size: 128, elements: !3470)
!3470 = !{!3471, !3477}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3469, file: !73, line: 121, baseType: !3472, size: 128)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3473, line: 6, size: 128, elements: !3474)
!3473 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3474 = !{!3475, !3476}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3472, file: !3473, line: 7, baseType: !402, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3472, file: !3473, line: 8, baseType: !402, size: 64, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3469, file: !73, line: 122, baseType: !3478)
!3478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3472, elements: !2829)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3433, file: !770, line: 162, baseType: !182, size: 64, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !774, file: !770, line: 176, baseType: !346, size: 128, align: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, scope: !769, file: !770, line: 179, baseType: !3482, size: 32, offset: 384)
!3482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !769, file: !770, line: 179, size: 32, elements: !3483)
!3483 = !{!3484, !3485, !3486, !3487}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3482, file: !770, line: 184, baseType: !795, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3482, file: !770, line: 192, baseType: !7, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3482, file: !770, line: 194, baseType: !7, size: 32)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3482, file: !770, line: 195, baseType: !240, size: 32)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !769, file: !770, line: 199, baseType: !795, size: 32, offset: 416)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !641, file: !86, line: 1964, baseType: !3490, size: 64, offset: 1344)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!142, !580, !3493}
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3495, line: 12, size: 256, elements: !3496)
!3495 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3496 = !{!3497, !3498, !3499, !3500, !3501}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3494, file: !3495, line: 13, baseType: !791, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3494, file: !3495, line: 16, baseType: !240, size: 32, offset: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3494, file: !3495, line: 23, baseType: !305, size: 64, offset: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3494, file: !3495, line: 30, baseType: !305, size: 64, offset: 128)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3494, file: !3495, line: 33, baseType: !3502, size: 64, offset: 192)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !770, line: 27, flags: DIFlagFwdDecl)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !641, file: !86, line: 1966, baseType: !3490, size: 64, offset: 1408)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !581, file: !86, line: 1424, baseType: !3506, size: 64, offset: 448)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3508)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !80, line: 322, size: 704, elements: !3509)
!3509 = !{!3510, !3556, !3560, !3564, !3565, !3566, !3567, !3568, !3573, !3578, !3582}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3508, file: !80, line: 323, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!240, !3514}
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !80, line: 294, size: 1600, elements: !3516)
!3516 = !{!3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3541, !3542, !3543}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3515, file: !80, line: 295, baseType: !623, size: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3515, file: !80, line: 296, baseType: !200, size: 128, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3515, file: !80, line: 297, baseType: !200, size: 128, offset: 256)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3515, file: !80, line: 298, baseType: !200, size: 128, offset: 384)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3515, file: !80, line: 299, baseType: !721, size: 192, offset: 512)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3515, file: !80, line: 300, baseType: !214, offset: 704)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3515, file: !80, line: 301, baseType: !795, size: 32, offset: 704)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3515, file: !80, line: 302, baseType: !580, size: 64, offset: 768)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3515, file: !80, line: 303, baseType: !3526, size: 64, offset: 832)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !80, line: 68, size: 64, elements: !3527)
!3527 = !{!3528, !3540}
!3528 = !DIDerivedType(tag: DW_TAG_member, scope: !3526, file: !80, line: 69, baseType: !3529, size: 32)
!3529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3526, file: !80, line: 69, size: 32, elements: !3530)
!3530 = !{!3531, !3532, !3533}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3529, file: !80, line: 70, baseType: !416, size: 32)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3529, file: !80, line: 71, baseType: !424, size: 32)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3529, file: !80, line: 72, baseType: !3534, size: 32)
!3534 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3535, line: 24, baseType: !3536)
!3535 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3535, line: 22, size: 32, elements: !3537)
!3537 = !{!3538}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3536, file: !3535, line: 23, baseType: !3539, size: 32)
!3539 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3535, line: 20, baseType: !422)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3526, file: !80, line: 74, baseType: !79, size: 32, offset: 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3515, file: !80, line: 304, baseType: !512, size: 64, offset: 896)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3515, file: !80, line: 305, baseType: !305, size: 64, offset: 960)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3515, file: !80, line: 306, baseType: !3544, size: 576, offset: 1024)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !80, line: 205, size: 576, elements: !3545)
!3545 = !{!3546, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3544, file: !80, line: 206, baseType: !3547, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !80, line: 66, baseType: !514)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3544, file: !80, line: 207, baseType: !3547, size: 64, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3544, file: !80, line: 208, baseType: !3547, size: 64, offset: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3544, file: !80, line: 209, baseType: !3547, size: 64, offset: 192)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3544, file: !80, line: 210, baseType: !3547, size: 64, offset: 256)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3544, file: !80, line: 211, baseType: !3547, size: 64, offset: 320)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3544, file: !80, line: 212, baseType: !3547, size: 64, offset: 384)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3544, file: !80, line: 213, baseType: !520, size: 64, offset: 448)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3544, file: !80, line: 214, baseType: !520, size: 64, offset: 512)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3508, file: !80, line: 324, baseType: !3557, size: 64, offset: 64)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!3514, !580, !240}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3508, file: !80, line: 325, baseType: !3561, size: 64, offset: 128)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3514}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3508, file: !80, line: 326, baseType: !3511, size: 64, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3508, file: !80, line: 327, baseType: !3511, size: 64, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3508, file: !80, line: 328, baseType: !3511, size: 64, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3508, file: !80, line: 329, baseType: !683, size: 64, offset: 384)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3508, file: !80, line: 332, baseType: !3569, size: 64, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!3572, !410}
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3508, file: !80, line: 333, baseType: !3574, size: 64, offset: 512)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!240, !410, !3577}
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3508, file: !80, line: 335, baseType: !3579, size: 64, offset: 576)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!240, !410, !3572}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3508, file: !80, line: 337, baseType: !3583, size: 64, offset: 640)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!240, !580, !3586}
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !581, file: !86, line: 1425, baseType: !3588, size: 64, offset: 512)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3590)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !80, line: 428, size: 704, elements: !3591)
!3591 = !{!3592, !3596, !3597, !3601, !3602, !3603, !3618, !3641, !3645, !3646, !3669}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3590, file: !80, line: 429, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!240, !580, !240, !240, !530}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3590, file: !80, line: 430, baseType: !683, size: 64, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3590, file: !80, line: 431, baseType: !3598, size: 64, offset: 128)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!240, !580, !7}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3590, file: !80, line: 432, baseType: !3598, size: 64, offset: 192)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3590, file: !80, line: 433, baseType: !683, size: 64, offset: 256)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3590, file: !80, line: 434, baseType: !3604, size: 64, offset: 320)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{!240, !580, !240, !3607}
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !80, line: 415, size: 256, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3608, file: !80, line: 416, baseType: !240, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3608, file: !80, line: 417, baseType: !7, size: 32, offset: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3608, file: !80, line: 418, baseType: !7, size: 32, offset: 64)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3608, file: !80, line: 420, baseType: !7, size: 32, offset: 96)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3608, file: !80, line: 421, baseType: !7, size: 32, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3608, file: !80, line: 422, baseType: !7, size: 32, offset: 160)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3608, file: !80, line: 423, baseType: !7, size: 32, offset: 192)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3608, file: !80, line: 424, baseType: !7, size: 32, offset: 224)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3590, file: !80, line: 435, baseType: !3619, size: 64, offset: 384)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 64)
!3620 = !DISubroutineType(types: !3621)
!3621 = !{!240, !580, !3526, !3622}
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !80, line: 343, size: 960, elements: !3624)
!3624 = !{!3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3623, file: !80, line: 344, baseType: !240, size: 32)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3623, file: !80, line: 345, baseType: !402, size: 64, offset: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3623, file: !80, line: 346, baseType: !402, size: 64, offset: 128)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3623, file: !80, line: 347, baseType: !402, size: 64, offset: 192)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3623, file: !80, line: 348, baseType: !402, size: 64, offset: 256)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3623, file: !80, line: 349, baseType: !402, size: 64, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3623, file: !80, line: 350, baseType: !402, size: 64, offset: 384)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3623, file: !80, line: 351, baseType: !731, size: 64, offset: 448)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3623, file: !80, line: 353, baseType: !731, size: 64, offset: 512)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3623, file: !80, line: 354, baseType: !240, size: 32, offset: 576)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3623, file: !80, line: 355, baseType: !240, size: 32, offset: 608)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3623, file: !80, line: 356, baseType: !402, size: 64, offset: 640)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3623, file: !80, line: 357, baseType: !402, size: 64, offset: 704)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3623, file: !80, line: 358, baseType: !402, size: 64, offset: 768)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3623, file: !80, line: 359, baseType: !731, size: 64, offset: 832)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3623, file: !80, line: 360, baseType: !240, size: 32, offset: 896)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3590, file: !80, line: 436, baseType: !3642, size: 64, offset: 448)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!240, !580, !3586, !3622}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3590, file: !80, line: 438, baseType: !3619, size: 64, offset: 512)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3590, file: !80, line: 439, baseType: !3647, size: 64, offset: 576)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!240, !580, !3650}
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !80, line: 409, size: 1408, elements: !3652)
!3652 = !{!3653, !3654}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3651, file: !80, line: 410, baseType: !7, size: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3651, file: !80, line: 411, baseType: !3655, size: 1344, offset: 64)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3656, size: 1344, elements: !257)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !80, line: 395, size: 448, elements: !3657)
!3657 = !{!3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3668}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3656, file: !80, line: 396, baseType: !7, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3656, file: !80, line: 397, baseType: !7, size: 32, offset: 32)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3656, file: !80, line: 399, baseType: !7, size: 32, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3656, file: !80, line: 400, baseType: !7, size: 32, offset: 96)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3656, file: !80, line: 401, baseType: !7, size: 32, offset: 128)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3656, file: !80, line: 402, baseType: !7, size: 32, offset: 160)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3656, file: !80, line: 403, baseType: !7, size: 32, offset: 192)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3656, file: !80, line: 404, baseType: !404, size: 64, offset: 256)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3656, file: !80, line: 405, baseType: !3667, size: 64, offset: 320)
!3667 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !201, line: 126, baseType: !402)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3656, file: !80, line: 406, baseType: !3667, size: 64, offset: 384)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3590, file: !80, line: 440, baseType: !3598, size: 64, offset: 640)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !581, file: !86, line: 1426, baseType: !3671, size: 64, offset: 576)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3673)
!3673 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !86, line: 49, flags: DIFlagFwdDecl)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !581, file: !86, line: 1427, baseType: !305, size: 64, offset: 640)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !581, file: !86, line: 1428, baseType: !305, size: 64, offset: 704)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !581, file: !86, line: 1429, baseType: !305, size: 64, offset: 768)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !581, file: !86, line: 1430, baseType: !363, size: 64, offset: 832)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !581, file: !86, line: 1431, baseType: !815, size: 256, offset: 896)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !581, file: !86, line: 1432, baseType: !240, size: 32, offset: 1152)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !581, file: !86, line: 1433, baseType: !795, size: 32, offset: 1184)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !581, file: !86, line: 1437, baseType: !3682, size: 64, offset: 1216)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3685)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !86, line: 1437, flags: DIFlagFwdDecl)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !581, file: !86, line: 1449, baseType: !3687, size: 64, offset: 1280)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !379, line: 34, size: 64, elements: !3688)
!3688 = !{!3689}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3687, file: !379, line: 35, baseType: !382, size: 64)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !581, file: !86, line: 1450, baseType: !200, size: 128, offset: 1344)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !581, file: !86, line: 1451, baseType: !1012, size: 64, offset: 1472)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !581, file: !86, line: 1452, baseType: !1590, size: 64, offset: 1536)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !581, file: !86, line: 1453, baseType: !3694, size: 64, offset: 1600)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !86, line: 1453, flags: DIFlagFwdDecl)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !581, file: !86, line: 1454, baseType: !623, size: 128, offset: 1664)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !581, file: !86, line: 1455, baseType: !7, size: 32, offset: 1792)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !581, file: !86, line: 1456, baseType: !3699, size: 2432, offset: 1856)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !80, line: 518, size: 2432, elements: !3700)
!3700 = !{!3701, !3702, !3703, !3705, !3737}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3699, file: !80, line: 519, baseType: !7, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3699, file: !80, line: 520, baseType: !815, size: 256, offset: 64)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3699, file: !80, line: 521, baseType: !3704, size: 192, offset: 320)
!3704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 192, elements: !257)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3699, file: !80, line: 522, baseType: !3706, size: 1728, offset: 512)
!3706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3707, size: 1728, elements: !257)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !80, line: 222, size: 576, elements: !3708)
!3708 = !{!3709, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3707, file: !80, line: 223, baseType: !3710, size: 64)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !80, line: 443, size: 256, elements: !3712)
!3712 = !{!3713, !3714, !3727, !3728}
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3711, file: !80, line: 444, baseType: !240, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3711, file: !80, line: 445, baseType: !3715, size: 64, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3717)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !80, line: 310, size: 512, elements: !3718)
!3718 = !{!3719, !3720, !3721, !3722, !3723, !3724, !3725, !3726}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3717, file: !80, line: 311, baseType: !683, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3717, file: !80, line: 312, baseType: !683, size: 64, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3717, file: !80, line: 313, baseType: !683, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3717, file: !80, line: 314, baseType: !683, size: 64, offset: 192)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3717, file: !80, line: 315, baseType: !3511, size: 64, offset: 256)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3717, file: !80, line: 316, baseType: !3511, size: 64, offset: 320)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3717, file: !80, line: 317, baseType: !3511, size: 64, offset: 384)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3717, file: !80, line: 318, baseType: !3583, size: 64, offset: 448)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3711, file: !80, line: 446, baseType: !614, size: 64, offset: 128)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3711, file: !80, line: 447, baseType: !3710, size: 64, offset: 192)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3707, file: !80, line: 224, baseType: !240, size: 32, offset: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3707, file: !80, line: 226, baseType: !200, size: 128, offset: 128)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3707, file: !80, line: 227, baseType: !305, size: 64, offset: 256)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3707, file: !80, line: 228, baseType: !7, size: 32, offset: 320)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3707, file: !80, line: 229, baseType: !7, size: 32, offset: 352)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3707, file: !80, line: 230, baseType: !3547, size: 64, offset: 384)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3707, file: !80, line: 231, baseType: !3547, size: 64, offset: 448)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3707, file: !80, line: 232, baseType: !182, size: 64, offset: 512)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3699, file: !80, line: 523, baseType: !3738, size: 192, offset: 2240)
!3738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3715, size: 192, elements: !257)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !581, file: !86, line: 1458, baseType: !3740, size: 2112, offset: 4288)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !86, line: 1410, size: 2112, elements: !3741)
!3741 = !{!3742, !3743, !3744}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3740, file: !86, line: 1411, baseType: !240, size: 32)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3740, file: !86, line: 1412, baseType: !1216, size: 128, offset: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3740, file: !86, line: 1413, baseType: !3745, size: 1920, offset: 192)
!3745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3746, size: 1920, elements: !257)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3747, line: 12, size: 640, elements: !3748)
!3747 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3748 = !{!3749, !3757, !3758, !3763, !3764}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3746, file: !3747, line: 13, baseType: !3750, size: 320)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3751, line: 17, size: 320, elements: !3752)
!3751 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3752 = !{!3753, !3754, !3755, !3756}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3750, file: !3751, line: 18, baseType: !240, size: 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3750, file: !3751, line: 19, baseType: !240, size: 32, offset: 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3750, file: !3751, line: 20, baseType: !1216, size: 128, offset: 64)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3750, file: !3751, line: 22, baseType: !346, size: 128, align: 64, offset: 192)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3746, file: !3747, line: 14, baseType: !1003, size: 64, offset: 320)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3746, file: !3747, line: 15, baseType: !3759, size: 64, offset: 384)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3760, line: 16, size: 64, elements: !3761)
!3760 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3761 = !{!3762}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3759, file: !3760, line: 17, baseType: !2199, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3746, file: !3747, line: 16, baseType: !1216, size: 128, offset: 448)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3746, file: !3747, line: 17, baseType: !795, size: 32, offset: 576)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !581, file: !86, line: 1465, baseType: !182, size: 64, offset: 6400)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !581, file: !86, line: 1468, baseType: !396, size: 32, offset: 6464)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !581, file: !86, line: 1470, baseType: !520, size: 64, offset: 6528)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !581, file: !86, line: 1471, baseType: !520, size: 64, offset: 6592)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !581, file: !86, line: 1473, baseType: !398, size: 32, offset: 6656)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !581, file: !86, line: 1474, baseType: !3771, size: 64, offset: 6720)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !86, line: 603, flags: DIFlagFwdDecl)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !581, file: !86, line: 1477, baseType: !1104, size: 256, offset: 6784)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !581, file: !86, line: 1478, baseType: !3775, size: 128, offset: 7040)
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3776, line: 18, baseType: !3777)
!3776 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3776, line: 16, size: 128, elements: !3778)
!3778 = !{!3779}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3777, file: !3776, line: 17, baseType: !3780, size: 128)
!3780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 128, elements: !1735)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !581, file: !86, line: 1480, baseType: !7, size: 32, offset: 7168)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !581, file: !86, line: 1481, baseType: !1237, size: 32, offset: 7200)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !581, file: !86, line: 1487, baseType: !721, size: 192, offset: 7232)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !581, file: !86, line: 1493, baseType: !196, size: 64, offset: 7424)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !581, file: !86, line: 1495, baseType: !3786, size: 64, offset: 7488)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3788)
!3788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !361, line: 135, size: 1024, align: 512, elements: !3789)
!3789 = !{!3790, !3794, !3795, !3802, !3808, !3812, !3816, !3820, !3821, !3825, !3829, !3834, !3838}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3788, file: !361, line: 136, baseType: !3791, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!240, !363, !7}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3788, file: !361, line: 137, baseType: !3791, size: 64, offset: 64)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3788, file: !361, line: 138, baseType: !3796, size: 64, offset: 128)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!240, !3799, !3801}
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3788, file: !361, line: 139, baseType: !3803, size: 64, offset: 192)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!240, !3799, !7, !196, !3806}
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !387)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3788, file: !361, line: 141, baseType: !3809, size: 64, offset: 256)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!240, !3799}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3788, file: !361, line: 142, baseType: !3813, size: 64, offset: 320)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{!240, !363}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3788, file: !361, line: 143, baseType: !3817, size: 64, offset: 384)
!3817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3818, size: 64)
!3818 = !DISubroutineType(types: !3819)
!3819 = !{null, !363}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3788, file: !361, line: 144, baseType: !3817, size: 64, offset: 448)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3788, file: !361, line: 145, baseType: !3822, size: 64, offset: 512)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{null, !363, !410}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3788, file: !361, line: 146, baseType: !3826, size: 64, offset: 576)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!256, !363, !256, !240}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3788, file: !361, line: 147, baseType: !3830, size: 64, offset: 640)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!359, !3833}
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3788, file: !361, line: 148, baseType: !3835, size: 64, offset: 704)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!240, !530, !471}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3788, file: !361, line: 149, baseType: !3839, size: 64, offset: 768)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DISubroutineType(types: !3841)
!3841 = !{!363, !363, !3842}
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !411)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !581, file: !86, line: 1500, baseType: !240, size: 32, offset: 7552)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !581, file: !86, line: 1502, baseType: !3846, size: 448, offset: 7616)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3495, line: 60, size: 448, elements: !3847)
!3847 = !{!3848, !3853, !3854, !3855, !3856, !3857, !3858}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3846, file: !3495, line: 61, baseType: !3849, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!305, !3852, !3493}
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3846, file: !3495, line: 63, baseType: !3849, size: 64, offset: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3846, file: !3495, line: 66, baseType: !142, size: 64, offset: 128)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3846, file: !3495, line: 67, baseType: !240, size: 32, offset: 192)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3846, file: !3495, line: 68, baseType: !7, size: 32, offset: 224)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3846, file: !3495, line: 71, baseType: !200, size: 128, offset: 256)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3846, file: !3495, line: 77, baseType: !3859, size: 64, offset: 384)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !581, file: !86, line: 1505, baseType: !725, size: 64, offset: 8064)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !581, file: !86, line: 1508, baseType: !725, size: 64, offset: 8128)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !581, file: !86, line: 1511, baseType: !240, size: 32, offset: 8192)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !581, file: !86, line: 1514, baseType: !1902, size: 32, offset: 8224)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !581, file: !86, line: 1517, baseType: !1092, size: 64, offset: 8256)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !581, file: !86, line: 1518, baseType: !619, size: 64, offset: 8320)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !581, file: !86, line: 1525, baseType: !2679, size: 64, offset: 8384)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !581, file: !86, line: 1532, baseType: !3868, size: 64, offset: 8448)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3869, line: 52, size: 64, elements: !3870)
!3869 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3870 = !{!3871}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3868, file: !3869, line: 53, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3869, line: 40, size: 256, elements: !3874)
!3874 = !{!3875, !3876, !3881}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3873, file: !3869, line: 42, baseType: !214)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3873, file: !3869, line: 44, baseType: !3877, size: 192)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3869, line: 28, size: 192, elements: !3878)
!3878 = !{!3879, !3880}
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3877, file: !3869, line: 29, baseType: !200, size: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3877, file: !3869, line: 31, baseType: !142, size: 64, offset: 128)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3873, file: !3869, line: 49, baseType: !142, size: 64, offset: 192)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !581, file: !86, line: 1533, baseType: !3868, size: 64, offset: 8512)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !581, file: !86, line: 1534, baseType: !346, size: 128, align: 64, offset: 8576)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !581, file: !86, line: 1535, baseType: !1080, size: 256, offset: 8704)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !581, file: !86, line: 1537, baseType: !721, size: 192, offset: 8960)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !581, file: !86, line: 1542, baseType: !240, size: 32, offset: 9152)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !581, file: !86, line: 1545, baseType: !214, offset: 9184)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !581, file: !86, line: 1546, baseType: !200, size: 128, offset: 9216)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !581, file: !86, line: 1548, baseType: !214, offset: 9344)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !581, file: !86, line: 1549, baseType: !200, size: 128, offset: 9344)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !411, file: !86, line: 624, baseType: !781, size: 64, offset: 256)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !411, file: !86, line: 631, baseType: !305, size: 64, offset: 320)
!3893 = !DIDerivedType(tag: DW_TAG_member, scope: !411, file: !86, line: 639, baseType: !3894, size: 32, offset: 384)
!3894 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !411, file: !86, line: 639, size: 32, elements: !3895)
!3895 = !{!3896, !3897}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3894, file: !86, line: 640, baseType: !1560, size: 32)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3894, file: !86, line: 641, baseType: !7, size: 32)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !411, file: !86, line: 643, baseType: !494, size: 32, offset: 416)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !411, file: !86, line: 644, baseType: !512, size: 64, offset: 448)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !411, file: !86, line: 645, baseType: !516, size: 128, offset: 512)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !411, file: !86, line: 646, baseType: !516, size: 128, offset: 640)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !411, file: !86, line: 647, baseType: !516, size: 128, offset: 768)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !411, file: !86, line: 648, baseType: !214, offset: 896)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !411, file: !86, line: 649, baseType: !297, size: 16, offset: 896)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !411, file: !86, line: 650, baseType: !1028, size: 8, offset: 912)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !411, file: !86, line: 651, baseType: !1028, size: 8, offset: 920)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !411, file: !86, line: 652, baseType: !3667, size: 64, offset: 960)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !411, file: !86, line: 659, baseType: !305, size: 64, offset: 1024)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !411, file: !86, line: 660, baseType: !815, size: 256, offset: 1088)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !411, file: !86, line: 662, baseType: !305, size: 64, offset: 1344)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !411, file: !86, line: 663, baseType: !305, size: 64, offset: 1408)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !411, file: !86, line: 665, baseType: !623, size: 128, offset: 1472)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !411, file: !86, line: 666, baseType: !200, size: 128, offset: 1600)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !411, file: !86, line: 675, baseType: !200, size: 128, offset: 1728)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !411, file: !86, line: 676, baseType: !200, size: 128, offset: 1856)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !411, file: !86, line: 677, baseType: !200, size: 128, offset: 1984)
!3917 = !DIDerivedType(tag: DW_TAG_member, scope: !411, file: !86, line: 678, baseType: !3918, size: 128, offset: 2112)
!3918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !411, file: !86, line: 678, size: 128, elements: !3919)
!3919 = !{!3920, !3921}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3918, file: !86, line: 679, baseType: !619, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3918, file: !86, line: 680, baseType: !346, size: 128, align: 64)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !411, file: !86, line: 682, baseType: !727, size: 64, offset: 2240)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !411, file: !86, line: 683, baseType: !727, size: 64, offset: 2304)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !411, file: !86, line: 684, baseType: !795, size: 32, offset: 2368)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !411, file: !86, line: 685, baseType: !795, size: 32, offset: 2400)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !411, file: !86, line: 686, baseType: !795, size: 32, offset: 2432)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !411, file: !86, line: 688, baseType: !795, size: 32, offset: 2464)
!3928 = !DIDerivedType(tag: DW_TAG_member, scope: !411, file: !86, line: 690, baseType: !3929, size: 64, offset: 2496)
!3929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !411, file: !86, line: 690, size: 64, elements: !3930)
!3930 = !{!3931, !4153}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3929, file: !86, line: 691, baseType: !3932, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3934)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !86, line: 1822, size: 2048, elements: !3935)
!3935 = !{!3936, !3937, !3941, !3945, !3949, !3950, !3951, !3955, !3968, !3969, !3977, !3981, !3982, !3986, !3987, !3991, !3996, !3997, !4001, !4005, !4113, !4117, !4118, !4122, !4123, !4127, !4131, !4136, !4140, !4144, !4148, !4152}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3934, file: !86, line: 1823, baseType: !614, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3934, file: !86, line: 1824, baseType: !3938, size: 64, offset: 64)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!512, !333, !512, !240}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3934, file: !86, line: 1825, baseType: !3942, size: 64, offset: 128)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!287, !333, !256, !302, !743}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3934, file: !86, line: 1826, baseType: !3946, size: 64, offset: 192)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!287, !333, !196, !302, !743}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3934, file: !86, line: 1827, baseType: !892, size: 64, offset: 256)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3934, file: !86, line: 1828, baseType: !892, size: 64, offset: 320)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3934, file: !86, line: 1829, baseType: !3952, size: 64, offset: 384)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!240, !895, !471}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3934, file: !86, line: 1830, baseType: !3956, size: 64, offset: 448)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!240, !333, !3959}
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !86, line: 1776, size: 128, elements: !3961)
!3961 = !{!3962, !3967}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3960, file: !86, line: 1777, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !86, line: 1773, baseType: !3964)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!240, !3959, !196, !240, !512, !402, !7}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3960, file: !86, line: 1778, baseType: !512, size: 64, offset: 64)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3934, file: !86, line: 1831, baseType: !3956, size: 64, offset: 512)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3934, file: !86, line: 1832, baseType: !3970, size: 64, offset: 576)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!3973, !333, !3975}
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3974, line: 52, baseType: !7)
!3974 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !600, line: 27, flags: DIFlagFwdDecl)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3934, file: !86, line: 1833, baseType: !3978, size: 64, offset: 640)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!142, !333, !7, !305}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3934, file: !86, line: 1834, baseType: !3978, size: 64, offset: 704)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3934, file: !86, line: 1835, baseType: !3983, size: 64, offset: 768)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!240, !333, !1973}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3934, file: !86, line: 1836, baseType: !305, size: 64, offset: 832)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3934, file: !86, line: 1837, baseType: !3988, size: 64, offset: 896)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!240, !410, !333}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3934, file: !86, line: 1838, baseType: !3992, size: 64, offset: 960)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!240, !333, !3995}
!3995 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !86, line: 1007, baseType: !182)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3934, file: !86, line: 1839, baseType: !3988, size: 64, offset: 1024)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3934, file: !86, line: 1840, baseType: !3998, size: 64, offset: 1088)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!240, !333, !512, !512, !240}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3934, file: !86, line: 1841, baseType: !4002, size: 64, offset: 1152)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!240, !240, !333, !240}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3934, file: !86, line: 1842, baseType: !4006, size: 64, offset: 1216)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!240, !333, !240, !4009}
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !86, line: 1062, size: 1664, elements: !4011)
!4011 = !{!4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4043, !4044, !4045, !4058, !4089}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4010, file: !86, line: 1063, baseType: !4009, size: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4010, file: !86, line: 1064, baseType: !200, size: 128, offset: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4010, file: !86, line: 1065, baseType: !623, size: 128, offset: 192)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4010, file: !86, line: 1066, baseType: !200, size: 128, offset: 320)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4010, file: !86, line: 1069, baseType: !200, size: 128, offset: 448)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4010, file: !86, line: 1072, baseType: !3995, size: 64, offset: 576)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4010, file: !86, line: 1073, baseType: !7, size: 32, offset: 640)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4010, file: !86, line: 1074, baseType: !408, size: 8, offset: 672)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4010, file: !86, line: 1075, baseType: !7, size: 32, offset: 704)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4010, file: !86, line: 1076, baseType: !240, size: 32, offset: 736)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4010, file: !86, line: 1077, baseType: !1216, size: 128, offset: 768)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4010, file: !86, line: 1078, baseType: !333, size: 64, offset: 896)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4010, file: !86, line: 1079, baseType: !512, size: 64, offset: 960)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4010, file: !86, line: 1080, baseType: !512, size: 64, offset: 1024)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4010, file: !86, line: 1082, baseType: !4027, size: 64, offset: 1088)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !86, line: 1314, size: 320, elements: !4029)
!4029 = !{!4030, !4038, !4039, !4040, !4041, !4042}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4028, file: !86, line: 1315, baseType: !4031)
!4031 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4032, line: 20, baseType: !4033)
!4032 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4032, line: 11, elements: !4034)
!4034 = !{!4035}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4033, file: !4032, line: 12, baseType: !4036)
!4036 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !226, line: 33, baseType: !4037)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !226, line: 31, elements: !228)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4028, file: !86, line: 1316, baseType: !240, size: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4028, file: !86, line: 1317, baseType: !240, size: 32, offset: 32)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4028, file: !86, line: 1318, baseType: !4027, size: 64, offset: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4028, file: !86, line: 1319, baseType: !333, size: 64, offset: 128)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4028, file: !86, line: 1320, baseType: !346, size: 128, align: 64, offset: 192)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4010, file: !86, line: 1084, baseType: !305, size: 64, offset: 1152)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4010, file: !86, line: 1085, baseType: !305, size: 64, offset: 1216)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4010, file: !86, line: 1087, baseType: !4046, size: 64, offset: 1280)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 64)
!4047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4048)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !86, line: 1011, size: 128, elements: !4049)
!4049 = !{!4050, !4054}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4048, file: !86, line: 1012, baseType: !4051, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{null, !4009, !4009}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4048, file: !86, line: 1013, baseType: !4055, size: 64, offset: 64)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{null, !4009}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4010, file: !86, line: 1088, baseType: !4059, size: 64, offset: 1344)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4061)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !86, line: 1016, size: 512, elements: !4062)
!4062 = !{!4063, !4067, !4071, !4072, !4076, !4080, !4084, !4088}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4061, file: !86, line: 1017, baseType: !4064, size: 64)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!3995, !3995}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4061, file: !86, line: 1018, baseType: !4068, size: 64, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{null, !3995}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4061, file: !86, line: 1019, baseType: !4055, size: 64, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4061, file: !86, line: 1020, baseType: !4073, size: 64, offset: 192)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!240, !4009, !240}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4061, file: !86, line: 1021, baseType: !4077, size: 64, offset: 256)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!471, !4009}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4061, file: !86, line: 1022, baseType: !4081, size: 64, offset: 320)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!240, !4009, !240, !204}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4061, file: !86, line: 1023, baseType: !4085, size: 64, offset: 384)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{null, !4009, !869}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4061, file: !86, line: 1024, baseType: !4077, size: 64, offset: 448)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4010, file: !86, line: 1097, baseType: !4090, size: 256, offset: 1408)
!4090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4010, file: !86, line: 1089, size: 256, elements: !4091)
!4091 = !{!4092, !4101, !4107}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4090, file: !86, line: 1090, baseType: !4093, size: 256)
!4093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4094, line: 10, size: 256, elements: !4095)
!4094 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4095 = !{!4096, !4097, !4100}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4093, file: !4094, line: 11, baseType: !396, size: 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4093, file: !4094, line: 12, baseType: !4098, size: 64, offset: 64)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4094, line: 5, flags: DIFlagFwdDecl)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4093, file: !4094, line: 13, baseType: !200, size: 128, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4090, file: !86, line: 1091, baseType: !4102, size: 64)
!4102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4094, line: 17, size: 64, elements: !4103)
!4103 = !{!4104}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4102, file: !4094, line: 18, baseType: !4105, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4094, line: 16, flags: DIFlagFwdDecl)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4090, file: !86, line: 1096, baseType: !4108, size: 192)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4090, file: !86, line: 1092, size: 192, elements: !4109)
!4109 = !{!4110, !4111, !4112}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4108, file: !86, line: 1093, baseType: !200, size: 128)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4108, file: !86, line: 1094, baseType: !240, size: 32, offset: 128)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4108, file: !86, line: 1095, baseType: !7, size: 32, offset: 160)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3934, file: !86, line: 1843, baseType: !4114, size: 64, offset: 1280)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = !DISubroutineType(types: !4116)
!4116 = !{!287, !333, !768, !240, !302, !743, !240}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3934, file: !86, line: 1844, baseType: !2093, size: 64, offset: 1344)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3934, file: !86, line: 1845, baseType: !4119, size: 64, offset: 1408)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!240, !240}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3934, file: !86, line: 1846, baseType: !4006, size: 64, offset: 1472)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3934, file: !86, line: 1847, baseType: !4124, size: 64, offset: 1536)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!287, !3199, !333, !743, !302, !7}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3934, file: !86, line: 1848, baseType: !4128, size: 64, offset: 1600)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!287, !333, !743, !3199, !302, !7}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3934, file: !86, line: 1849, baseType: !4132, size: 64, offset: 1664)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!240, !333, !142, !4135, !869}
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3934, file: !86, line: 1850, baseType: !4137, size: 64, offset: 1728)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!142, !333, !240, !512, !512}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3934, file: !86, line: 1852, baseType: !4141, size: 64, offset: 1792)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{null, !709, !333}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3934, file: !86, line: 1856, baseType: !4145, size: 64, offset: 1856)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!287, !333, !512, !333, !512, !302, !7}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3934, file: !86, line: 1858, baseType: !4149, size: 64, offset: 1920)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!512, !333, !512, !333, !512, !512, !7}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3934, file: !86, line: 1861, baseType: !3998, size: 64, offset: 1984)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3929, file: !86, line: 692, baseType: !648, size: 64)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !411, file: !86, line: 694, baseType: !4155, size: 64, offset: 2560)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !86, line: 1100, size: 384, elements: !4157)
!4157 = !{!4158, !4159, !4160, !4161}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4156, file: !86, line: 1101, baseType: !214)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4156, file: !86, line: 1102, baseType: !200, size: 128)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4156, file: !86, line: 1103, baseType: !200, size: 128, offset: 128)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4156, file: !86, line: 1104, baseType: !200, size: 128, offset: 256)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !411, file: !86, line: 695, baseType: !782, size: 1216, align: 64, offset: 2624)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !411, file: !86, line: 696, baseType: !200, size: 128, offset: 3840)
!4164 = !DIDerivedType(tag: DW_TAG_member, scope: !411, file: !86, line: 697, baseType: !4165, size: 64, offset: 3968)
!4165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !411, file: !86, line: 697, size: 64, elements: !4166)
!4166 = !{!4167, !4168, !4169, !4172, !4173}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4165, file: !86, line: 698, baseType: !3199, size: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4165, file: !86, line: 699, baseType: !1012, size: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4165, file: !86, line: 700, baseType: !4170, size: 64)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !86, line: 700, flags: DIFlagFwdDecl)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4165, file: !86, line: 701, baseType: !256, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4165, file: !86, line: 702, baseType: !7, size: 32)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !411, file: !86, line: 705, baseType: !398, size: 32, offset: 4032)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !411, file: !86, line: 708, baseType: !398, size: 32, offset: 4064)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !411, file: !86, line: 709, baseType: !3771, size: 64, offset: 4096)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !411, file: !86, line: 720, baseType: !182, size: 64, offset: 4160)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !364, file: !361, line: 98, baseType: !4179, size: 256, offset: 448)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 256, elements: !1105)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !364, file: !361, line: 101, baseType: !4181, size: 32, offset: 704)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4182, line: 25, size: 32, elements: !4183)
!4182 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4183 = !{!4184}
!4184 = !DIDerivedType(tag: DW_TAG_member, scope: !4181, file: !4182, line: 26, baseType: !4185, size: 32)
!4185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4181, file: !4182, line: 26, size: 32, elements: !4186)
!4186 = !{!4187}
!4187 = !DIDerivedType(tag: DW_TAG_member, scope: !4185, file: !4182, line: 30, baseType: !4188, size: 32)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4185, file: !4182, line: 30, size: 32, elements: !4189)
!4189 = !{!4190, !4191}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4188, file: !4182, line: 31, baseType: !214)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4188, file: !4182, line: 32, baseType: !240, size: 32)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !364, file: !361, line: 102, baseType: !3786, size: 64, offset: 768)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !364, file: !361, line: 103, baseType: !580, size: 64, offset: 832)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !364, file: !361, line: 104, baseType: !305, size: 64, offset: 896)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !364, file: !361, line: 105, baseType: !182, size: 64, offset: 960)
!4196 = !DIDerivedType(tag: DW_TAG_member, scope: !364, file: !361, line: 107, baseType: !4197, size: 128, offset: 1024)
!4197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !364, file: !361, line: 107, size: 128, elements: !4198)
!4198 = !{!4199, !4200}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4197, file: !361, line: 108, baseType: !200, size: 128)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4197, file: !361, line: 109, baseType: !4201, size: 64)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !364, file: !361, line: 111, baseType: !200, size: 128, offset: 1152)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !364, file: !361, line: 112, baseType: !200, size: 128, offset: 1280)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !364, file: !361, line: 120, baseType: !4205, size: 128, offset: 1408)
!4205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !364, file: !361, line: 116, size: 128, elements: !4206)
!4206 = !{!4207, !4208, !4209}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4205, file: !361, line: 117, baseType: !623, size: 128)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4205, file: !361, line: 118, baseType: !378, size: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4205, file: !361, line: 119, baseType: !346, size: 128, align: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !334, file: !86, line: 922, baseType: !410, size: 64, offset: 256)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !334, file: !86, line: 923, baseType: !3932, size: 64, offset: 320)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !334, file: !86, line: 929, baseType: !214, offset: 384)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !334, file: !86, line: 930, baseType: !85, size: 32, offset: 384)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !334, file: !86, line: 931, baseType: !725, size: 64, offset: 448)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !334, file: !86, line: 932, baseType: !7, size: 32, offset: 512)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !334, file: !86, line: 933, baseType: !1237, size: 32, offset: 544)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !334, file: !86, line: 934, baseType: !721, size: 192, offset: 576)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !334, file: !86, line: 935, baseType: !512, size: 64, offset: 768)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !334, file: !86, line: 936, baseType: !4220, size: 192, offset: 832)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !86, line: 885, size: 192, elements: !4221)
!4221 = !{!4222, !4223, !4224, !4225, !4226, !4227}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4220, file: !86, line: 886, baseType: !4031)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4220, file: !86, line: 887, baseType: !2445, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4220, file: !86, line: 888, baseType: !94, size: 32, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4220, file: !86, line: 889, baseType: !416, size: 32, offset: 96)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4220, file: !86, line: 889, baseType: !416, size: 32, offset: 128)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4220, file: !86, line: 890, baseType: !240, size: 32, offset: 160)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !334, file: !86, line: 937, baseType: !2515, size: 64, offset: 1024)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !334, file: !86, line: 938, baseType: !4230, size: 256, offset: 1088)
!4230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !86, line: 896, size: 256, elements: !4231)
!4231 = !{!4232, !4233, !4234, !4235, !4236, !4237}
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4230, file: !86, line: 897, baseType: !305, size: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4230, file: !86, line: 898, baseType: !7, size: 32, offset: 64)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4230, file: !86, line: 899, baseType: !7, size: 32, offset: 96)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4230, file: !86, line: 902, baseType: !7, size: 32, offset: 128)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4230, file: !86, line: 903, baseType: !7, size: 32, offset: 160)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4230, file: !86, line: 904, baseType: !512, size: 64, offset: 192)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !334, file: !86, line: 940, baseType: !402, size: 64, offset: 1344)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !334, file: !86, line: 945, baseType: !182, size: 64, offset: 1408)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !334, file: !86, line: 949, baseType: !200, size: 128, offset: 1472)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !334, file: !86, line: 950, baseType: !200, size: 128, offset: 1600)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !334, file: !86, line: 952, baseType: !781, size: 64, offset: 1728)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !334, file: !86, line: 953, baseType: !1902, size: 32, offset: 1792)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !334, file: !86, line: 954, baseType: !1902, size: 32, offset: 1824)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !324, file: !281, line: 174, baseType: !330, size: 64, offset: 320)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !324, file: !281, line: 176, baseType: !4247, size: 64, offset: 384)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!240, !333, !207, !323, !1973}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !312, file: !281, line: 90, baseType: !307, size: 64, offset: 192)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !312, file: !281, line: 91, baseType: !4252, size: 64, offset: 256)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !271, file: !193, line: 143, baseType: !4254, size: 64, offset: 256)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!4257, !207}
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4259)
!4259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !103, line: 39, size: 384, elements: !4260)
!4260 = !{!4261, !4262, !4266, !4270, !4276, !4280}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4259, file: !103, line: 40, baseType: !102, size: 32)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4259, file: !103, line: 41, baseType: !4263, size: 64, offset: 64)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{!471}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4259, file: !103, line: 42, baseType: !4267, size: 64, offset: 128)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!182}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4259, file: !103, line: 43, baseType: !4271, size: 64, offset: 192)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!3228, !4274}
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !103, line: 19, flags: DIFlagFwdDecl)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4259, file: !103, line: 44, baseType: !4277, size: 64, offset: 256)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!3228}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4259, file: !103, line: 45, baseType: !449, size: 64, offset: 320)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !271, file: !193, line: 144, baseType: !4282, size: 64, offset: 320)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DISubroutineType(types: !4284)
!4284 = !{!3228, !207}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !271, file: !193, line: 145, baseType: !4286, size: 64, offset: 384)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{null, !207, !2789, !2790}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !192, file: !193, line: 70, baseType: !4290, size: 64, offset: 384)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !600, line: 123, size: 1024, elements: !4292)
!4292 = !{!4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4409, !4410, !4411, !4412, !4413}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4291, file: !600, line: 124, baseType: !795, size: 32)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4291, file: !600, line: 125, baseType: !795, size: 32, offset: 32)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4291, file: !600, line: 135, baseType: !4290, size: 64, offset: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4291, file: !600, line: 136, baseType: !196, size: 64, offset: 128)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4291, file: !600, line: 138, baseType: !808, size: 192, align: 64, offset: 192)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4291, file: !600, line: 140, baseType: !3228, size: 64, offset: 384)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4291, file: !600, line: 141, baseType: !7, size: 32, offset: 448)
!4300 = !DIDerivedType(tag: DW_TAG_member, scope: !4291, file: !600, line: 142, baseType: !4301, size: 256, offset: 512)
!4301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4291, file: !600, line: 142, size: 256, elements: !4302)
!4302 = !{!4303, !4349, !4353}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4301, file: !600, line: 143, baseType: !4304, size: 192)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !600, line: 91, size: 192, elements: !4305)
!4305 = !{!4306, !4307, !4308}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4304, file: !600, line: 92, baseType: !305, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4304, file: !600, line: 94, baseType: !804, size: 64, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4304, file: !600, line: 100, baseType: !4309, size: 64, offset: 128)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !600, line: 180, size: 704, elements: !4311)
!4311 = !{!4312, !4313, !4314, !4321, !4322, !4323, !4347, !4348}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4310, file: !600, line: 182, baseType: !4290, size: 64)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4310, file: !600, line: 183, baseType: !7, size: 32, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4310, file: !600, line: 186, baseType: !4315, size: 192, offset: 128)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4316, line: 19, size: 192, elements: !4317)
!4316 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4317 = !{!4318, !4319, !4320}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4315, file: !4316, line: 20, baseType: !786, size: 128)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4315, file: !4316, line: 21, baseType: !7, size: 32, offset: 128)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4315, file: !4316, line: 22, baseType: !7, size: 32, offset: 160)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4310, file: !600, line: 187, baseType: !396, size: 32, offset: 320)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4310, file: !600, line: 188, baseType: !396, size: 32, offset: 352)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4310, file: !600, line: 189, baseType: !4324, size: 64, offset: 384)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !600, line: 168, size: 320, elements: !4326)
!4326 = !{!4327, !4331, !4335, !4339, !4343}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4325, file: !600, line: 169, baseType: !4328, size: 64)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!240, !709, !4309}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4325, file: !600, line: 171, baseType: !4332, size: 64, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!240, !4290, !196, !296}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4325, file: !600, line: 173, baseType: !4336, size: 64, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!240, !4290}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4325, file: !600, line: 174, baseType: !4340, size: 64, offset: 192)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!240, !4290, !4290, !196}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4325, file: !600, line: 176, baseType: !4344, size: 64, offset: 256)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DISubroutineType(types: !4346)
!4346 = !{!240, !709, !4290, !4309}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4310, file: !600, line: 192, baseType: !200, size: 128, offset: 448)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4310, file: !600, line: 194, baseType: !1216, size: 128, offset: 576)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4301, file: !600, line: 144, baseType: !4350, size: 64)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !600, line: 103, size: 64, elements: !4351)
!4351 = !{!4352}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4350, file: !600, line: 104, baseType: !4290, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4301, file: !600, line: 145, baseType: !4354, size: 256)
!4354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !600, line: 107, size: 256, elements: !4355)
!4355 = !{!4356, !4404, !4407, !4408}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4354, file: !600, line: 108, baseType: !4357, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4359)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !600, line: 217, size: 768, elements: !4360)
!4360 = !{!4361, !4381, !4385, !4386, !4387, !4388, !4389, !4393, !4394, !4395, !4396, !4400}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4359, file: !600, line: 222, baseType: !4362, size: 64)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = !DISubroutineType(types: !4364)
!4364 = !{!240, !4365}
!4365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4366, size: 64)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !600, line: 197, size: 1088, elements: !4367)
!4367 = !{!4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4366, file: !600, line: 199, baseType: !4290, size: 64)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4366, file: !600, line: 200, baseType: !333, size: 64, offset: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4366, file: !600, line: 201, baseType: !709, size: 64, offset: 128)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4366, file: !600, line: 202, baseType: !182, size: 64, offset: 192)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4366, file: !600, line: 205, baseType: !721, size: 192, offset: 256)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4366, file: !600, line: 206, baseType: !721, size: 192, offset: 448)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4366, file: !600, line: 207, baseType: !240, size: 32, offset: 640)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4366, file: !600, line: 208, baseType: !200, size: 128, offset: 704)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4366, file: !600, line: 209, baseType: !256, size: 64, offset: 832)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4366, file: !600, line: 211, baseType: !302, size: 64, offset: 896)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4366, file: !600, line: 212, baseType: !471, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4366, file: !600, line: 213, baseType: !471, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4366, file: !600, line: 214, baseType: !2001, size: 64, offset: 1024)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4359, file: !600, line: 223, baseType: !4382, size: 64, offset: 64)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DISubroutineType(types: !4384)
!4384 = !{null, !4365}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4359, file: !600, line: 236, baseType: !753, size: 64, offset: 128)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4359, file: !600, line: 238, baseType: !740, size: 64, offset: 192)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4359, file: !600, line: 239, baseType: !749, size: 64, offset: 256)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4359, file: !600, line: 240, baseType: !745, size: 64, offset: 320)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4359, file: !600, line: 242, baseType: !4390, size: 64, offset: 384)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!287, !4365, !256, !302, !512}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4359, file: !600, line: 252, baseType: !302, size: 64, offset: 448)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4359, file: !600, line: 259, baseType: !471, size: 8, offset: 512)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4359, file: !600, line: 260, baseType: !4390, size: 64, offset: 576)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4359, file: !600, line: 263, baseType: !4397, size: 64, offset: 640)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DISubroutineType(types: !4399)
!4399 = !{!3973, !4365, !3975}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4359, file: !600, line: 266, baseType: !4401, size: 64, offset: 704)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!240, !4365, !1973}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4354, file: !600, line: 109, baseType: !4405, size: 64, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !600, line: 31, flags: DIFlagFwdDecl)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4354, file: !600, line: 110, baseType: !512, size: 64, offset: 128)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4354, file: !600, line: 111, baseType: !4290, size: 64, offset: 192)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4291, file: !600, line: 148, baseType: !182, size: 64, offset: 768)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4291, file: !600, line: 154, baseType: !402, size: 64, offset: 832)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4291, file: !600, line: 156, baseType: !297, size: 16, offset: 896)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4291, file: !600, line: 157, baseType: !296, size: 16, offset: 912)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4291, file: !600, line: 158, baseType: !4414, size: 64, offset: 960)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !600, line: 32, flags: DIFlagFwdDecl)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !192, file: !193, line: 71, baseType: !1599, size: 32, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !192, file: !193, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !192, file: !193, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !192, file: !193, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !192, file: !193, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !192, file: !193, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !189, file: !115, line: 463, baseType: !188, size: 64, offset: 512)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !189, file: !115, line: 465, baseType: !4424, size: 64, offset: 576)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !115, line: 36, flags: DIFlagFwdDecl)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !189, file: !115, line: 467, baseType: !196, size: 64, offset: 640)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !189, file: !115, line: 468, baseType: !4428, size: 64, offset: 704)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4430)
!4430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !115, line: 87, size: 384, elements: !4431)
!4431 = !{!4432, !4433, !4434, !4438, !4442, !4446}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4430, file: !115, line: 88, baseType: !196, size: 64)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4430, file: !115, line: 89, baseType: !309, size: 64, offset: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4430, file: !115, line: 90, baseType: !4435, size: 64, offset: 128)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!240, !188, !251}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4430, file: !115, line: 91, baseType: !4439, size: 64, offset: 192)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!256, !188, !1305, !2789, !2790}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4430, file: !115, line: 93, baseType: !4443, size: 64, offset: 256)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{null, !188}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4430, file: !115, line: 95, baseType: !4447, size: 64, offset: 320)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4449)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !44, line: 278, size: 1472, elements: !4450)
!4450 = !{!4451, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4449, file: !44, line: 279, baseType: !4452, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!240, !188}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4449, file: !44, line: 280, baseType: !4443, size: 64, offset: 64)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4449, file: !44, line: 281, baseType: !4452, size: 64, offset: 128)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4449, file: !44, line: 282, baseType: !4452, size: 64, offset: 192)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4449, file: !44, line: 283, baseType: !4452, size: 64, offset: 256)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4449, file: !44, line: 284, baseType: !4452, size: 64, offset: 320)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4449, file: !44, line: 285, baseType: !4452, size: 64, offset: 384)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4449, file: !44, line: 286, baseType: !4452, size: 64, offset: 448)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4449, file: !44, line: 287, baseType: !4452, size: 64, offset: 512)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4449, file: !44, line: 288, baseType: !4452, size: 64, offset: 576)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4449, file: !44, line: 289, baseType: !4452, size: 64, offset: 640)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4449, file: !44, line: 290, baseType: !4452, size: 64, offset: 704)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4449, file: !44, line: 291, baseType: !4452, size: 64, offset: 768)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4449, file: !44, line: 292, baseType: !4452, size: 64, offset: 832)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4449, file: !44, line: 293, baseType: !4452, size: 64, offset: 896)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4449, file: !44, line: 294, baseType: !4452, size: 64, offset: 960)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4449, file: !44, line: 295, baseType: !4452, size: 64, offset: 1024)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4449, file: !44, line: 296, baseType: !4452, size: 64, offset: 1088)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4449, file: !44, line: 297, baseType: !4452, size: 64, offset: 1152)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4449, file: !44, line: 298, baseType: !4452, size: 64, offset: 1216)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4449, file: !44, line: 299, baseType: !4452, size: 64, offset: 1280)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4449, file: !44, line: 300, baseType: !4452, size: 64, offset: 1344)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4449, file: !44, line: 301, baseType: !4452, size: 64, offset: 1408)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !189, file: !115, line: 470, baseType: !4478, size: 64, offset: 768)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4480, line: 82, size: 1408, elements: !4481)
!4480 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4481 = !{!4482, !4483, !4484, !4485, !4486, !4487, !4488, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4563, !4566, !4567}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4479, file: !4480, line: 83, baseType: !196, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4479, file: !4480, line: 84, baseType: !196, size: 64, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4479, file: !4480, line: 85, baseType: !188, size: 64, offset: 128)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4479, file: !4480, line: 86, baseType: !309, size: 64, offset: 192)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4479, file: !4480, line: 87, baseType: !309, size: 64, offset: 256)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4479, file: !4480, line: 88, baseType: !309, size: 64, offset: 320)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4479, file: !4480, line: 90, baseType: !4489, size: 64, offset: 384)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4490, size: 64)
!4490 = !DISubroutineType(types: !4491)
!4491 = !{!240, !188, !4492}
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !109, line: 95, size: 1152, elements: !4494)
!4494 = !{!4495, !4496, !4497, !4498, !4499, !4500, !4501, !4514, !4527, !4528, !4529, !4530, !4531, !4539, !4540, !4541, !4542, !4543, !4544}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4493, file: !109, line: 96, baseType: !196, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4493, file: !109, line: 97, baseType: !4478, size: 64, offset: 64)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4493, file: !109, line: 99, baseType: !614, size: 64, offset: 128)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4493, file: !109, line: 100, baseType: !196, size: 64, offset: 192)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4493, file: !109, line: 102, baseType: !471, size: 8, offset: 256)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4493, file: !109, line: 103, baseType: !108, size: 32, offset: 288)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4493, file: !109, line: 105, baseType: !4502, size: 64, offset: 320)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4504)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4505, line: 262, size: 1600, elements: !4506)
!4505 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4506 = !{!4507, !4508, !4509, !4513}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4504, file: !4505, line: 263, baseType: !1104, size: 256)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4504, file: !4505, line: 264, baseType: !1104, size: 256, offset: 256)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4504, file: !4505, line: 265, baseType: !4510, size: 1024, offset: 512)
!4510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 1024, elements: !4511)
!4511 = !{!4512}
!4512 = !DISubrange(count: 128)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4504, file: !4505, line: 266, baseType: !3228, size: 64, offset: 1536)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4493, file: !109, line: 106, baseType: !4515, size: 64, offset: 384)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4517)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4505, line: 210, size: 256, elements: !4518)
!4518 = !{!4519, !4523, !4525, !4526}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4517, file: !4505, line: 211, baseType: !4520, size: 72)
!4520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 72, elements: !4521)
!4521 = !{!4522}
!4522 = !DISubrange(count: 9)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4517, file: !4505, line: 212, baseType: !4524, size: 64, offset: 128)
!4524 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4505, line: 14, baseType: !305)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4517, file: !4505, line: 213, baseType: !398, size: 32, offset: 192)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4517, file: !4505, line: 214, baseType: !398, size: 32, offset: 224)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4493, file: !109, line: 108, baseType: !4452, size: 64, offset: 448)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4493, file: !109, line: 109, baseType: !4443, size: 64, offset: 512)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4493, file: !109, line: 110, baseType: !4452, size: 64, offset: 576)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4493, file: !109, line: 111, baseType: !4443, size: 64, offset: 640)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4493, file: !109, line: 112, baseType: !4532, size: 64, offset: 704)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!240, !188, !4535}
!4535 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !44, line: 52, baseType: !4536)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !44, line: 50, size: 32, elements: !4537)
!4537 = !{!4538}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4536, file: !44, line: 51, baseType: !240, size: 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4493, file: !109, line: 113, baseType: !4452, size: 64, offset: 768)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4493, file: !109, line: 114, baseType: !309, size: 64, offset: 832)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4493, file: !109, line: 115, baseType: !309, size: 64, offset: 896)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4493, file: !109, line: 117, baseType: !4447, size: 64, offset: 960)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4493, file: !109, line: 118, baseType: !4443, size: 64, offset: 1024)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4493, file: !109, line: 120, baseType: !4545, size: 64, offset: 1088)
!4545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4546 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !109, line: 120, flags: DIFlagFwdDecl)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4479, file: !4480, line: 91, baseType: !4435, size: 64, offset: 448)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4479, file: !4480, line: 92, baseType: !4452, size: 64, offset: 512)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4479, file: !4480, line: 93, baseType: !4443, size: 64, offset: 576)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4479, file: !4480, line: 94, baseType: !4452, size: 64, offset: 640)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4479, file: !4480, line: 95, baseType: !4443, size: 64, offset: 704)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4479, file: !4480, line: 97, baseType: !4452, size: 64, offset: 768)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4479, file: !4480, line: 98, baseType: !4452, size: 64, offset: 832)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4479, file: !4480, line: 100, baseType: !4532, size: 64, offset: 896)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4479, file: !4480, line: 101, baseType: !4452, size: 64, offset: 960)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4479, file: !4480, line: 103, baseType: !4452, size: 64, offset: 1024)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4479, file: !4480, line: 105, baseType: !4452, size: 64, offset: 1088)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4479, file: !4480, line: 107, baseType: !4447, size: 64, offset: 1152)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4479, file: !4480, line: 109, baseType: !4560, size: 64, offset: 1216)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4562)
!4562 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4480, line: 109, flags: DIFlagFwdDecl)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4479, file: !4480, line: 111, baseType: !4564, size: 64, offset: 1280)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4480, line: 111, flags: DIFlagFwdDecl)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4479, file: !4480, line: 112, baseType: !629, offset: 1344)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4479, file: !4480, line: 114, baseType: !471, size: 8, offset: 1344)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !189, file: !115, line: 471, baseType: !4492, size: 64, offset: 832)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !189, file: !115, line: 473, baseType: !182, size: 64, offset: 896)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !189, file: !115, line: 475, baseType: !182, size: 64, offset: 960)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !189, file: !115, line: 480, baseType: !721, size: 192, offset: 1024)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !189, file: !115, line: 484, baseType: !4573, size: 576, offset: 1216)
!4573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !115, line: 361, size: 576, elements: !4574)
!4574 = !{!4575, !4576, !4577, !4578, !4579, !4580}
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4573, file: !115, line: 362, baseType: !200, size: 128)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4573, file: !115, line: 363, baseType: !200, size: 128, offset: 128)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4573, file: !115, line: 364, baseType: !200, size: 128, offset: 256)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4573, file: !115, line: 365, baseType: !200, size: 128, offset: 384)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4573, file: !115, line: 366, baseType: !471, size: 8, offset: 512)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4573, file: !115, line: 367, baseType: !114, size: 32, offset: 544)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !189, file: !115, line: 485, baseType: !4582, size: 2304, offset: 1792)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !44, line: 565, size: 2304, elements: !4583)
!4583 = !{!4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4668, !4672}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4582, file: !44, line: 566, baseType: !4535, size: 32)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4582, file: !44, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4582, file: !44, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4582, file: !44, line: 569, baseType: !471, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4582, file: !44, line: 570, baseType: !471, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4582, file: !44, line: 571, baseType: !471, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4582, file: !44, line: 572, baseType: !471, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4582, file: !44, line: 573, baseType: !471, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4582, file: !44, line: 574, baseType: !471, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4582, file: !44, line: 575, baseType: !471, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4582, file: !44, line: 576, baseType: !471, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4582, file: !44, line: 577, baseType: !396, size: 32, offset: 64)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4582, file: !44, line: 578, baseType: !214, offset: 96)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4582, file: !44, line: 580, baseType: !200, size: 128, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4582, file: !44, line: 581, baseType: !2470, size: 192, offset: 256)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4582, file: !44, line: 582, baseType: !4600, size: 64, offset: 448)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4602, line: 43, size: 1472, elements: !4603)
!4602 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4603 = !{!4604, !4605, !4606, !4607, !4608, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4601, file: !4602, line: 44, baseType: !196, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4601, file: !4602, line: 45, baseType: !240, size: 32, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4601, file: !4602, line: 46, baseType: !200, size: 128, offset: 128)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4601, file: !4602, line: 47, baseType: !214, offset: 256)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4601, file: !4602, line: 48, baseType: !4609, size: 64, offset: 256)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !44, line: 533, flags: DIFlagFwdDecl)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4601, file: !4602, line: 49, baseType: !1649, size: 320, offset: 320)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4601, file: !4602, line: 50, baseType: !305, size: 64, offset: 640)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4601, file: !4602, line: 51, baseType: !2277, size: 64, offset: 704)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4601, file: !4602, line: 52, baseType: !2277, size: 64, offset: 768)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4601, file: !4602, line: 53, baseType: !2277, size: 64, offset: 832)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4601, file: !4602, line: 54, baseType: !2277, size: 64, offset: 896)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4601, file: !4602, line: 55, baseType: !2277, size: 64, offset: 960)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4601, file: !4602, line: 56, baseType: !305, size: 64, offset: 1024)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4601, file: !4602, line: 57, baseType: !305, size: 64, offset: 1088)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4601, file: !4602, line: 58, baseType: !305, size: 64, offset: 1152)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4601, file: !4602, line: 59, baseType: !305, size: 64, offset: 1216)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4601, file: !4602, line: 60, baseType: !305, size: 64, offset: 1280)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4601, file: !4602, line: 61, baseType: !188, size: 64, offset: 1344)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4601, file: !4602, line: 62, baseType: !471, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4601, file: !4602, line: 63, baseType: !471, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4582, file: !44, line: 583, baseType: !471, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4582, file: !44, line: 584, baseType: !471, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4582, file: !44, line: 585, baseType: !471, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4582, file: !44, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4582, file: !44, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4582, file: !44, line: 592, baseType: !2269, size: 512, offset: 576)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4582, file: !44, line: 593, baseType: !402, size: 64, offset: 1088)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4582, file: !44, line: 594, baseType: !1080, size: 256, offset: 1152)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4582, file: !44, line: 595, baseType: !1216, size: 128, offset: 1408)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4582, file: !44, line: 596, baseType: !4609, size: 64, offset: 1536)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4582, file: !44, line: 597, baseType: !795, size: 32, offset: 1600)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4582, file: !44, line: 598, baseType: !795, size: 32, offset: 1632)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4582, file: !44, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4582, file: !44, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4582, file: !44, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4582, file: !44, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4582, file: !44, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4582, file: !44, line: 604, baseType: !471, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4582, file: !44, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4582, file: !44, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4582, file: !44, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4582, file: !44, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4582, file: !44, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4582, file: !44, line: 610, baseType: !7, size: 32, offset: 1696)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4582, file: !44, line: 611, baseType: !121, size: 32, offset: 1728)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4582, file: !44, line: 612, baseType: !43, size: 32, offset: 1760)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4582, file: !44, line: 613, baseType: !240, size: 32, offset: 1792)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4582, file: !44, line: 614, baseType: !240, size: 32, offset: 1824)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4582, file: !44, line: 615, baseType: !402, size: 64, offset: 1856)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4582, file: !44, line: 616, baseType: !402, size: 64, offset: 1920)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4582, file: !44, line: 617, baseType: !402, size: 64, offset: 1984)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4582, file: !44, line: 618, baseType: !402, size: 64, offset: 2048)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4582, file: !44, line: 620, baseType: !4659, size: 64, offset: 2112)
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !44, line: 536, size: 256, elements: !4661)
!4661 = !{!4662, !4663, !4664, !4665}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4660, file: !44, line: 537, baseType: !214)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4660, file: !44, line: 538, baseType: !7, size: 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4660, file: !44, line: 540, baseType: !200, size: 128, offset: 64)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4660, file: !44, line: 543, baseType: !4666, size: 64, offset: 192)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !44, line: 534, flags: DIFlagFwdDecl)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4582, file: !44, line: 621, baseType: !4669, size: 64, offset: 2176)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !188, !2419}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4582, file: !44, line: 622, baseType: !4673, size: 64, offset: 2240)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !44, line: 622, flags: DIFlagFwdDecl)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !189, file: !115, line: 486, baseType: !4676, size: 64, offset: 4096)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !44, line: 642, size: 1792, elements: !4678)
!4678 = !{!4679, !4680, !4681, !4685, !4686, !4687}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4677, file: !44, line: 643, baseType: !4449, size: 1472)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4677, file: !44, line: 644, baseType: !4452, size: 64, offset: 1472)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4677, file: !44, line: 645, baseType: !4682, size: 64, offset: 1536)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{null, !188, !471}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4677, file: !44, line: 646, baseType: !4452, size: 64, offset: 1600)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4677, file: !44, line: 647, baseType: !4443, size: 64, offset: 1664)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4677, file: !44, line: 648, baseType: !4443, size: 64, offset: 1728)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !189, file: !115, line: 493, baseType: !4689, size: 64, offset: 4160)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !115, line: 493, flags: DIFlagFwdDecl)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !189, file: !115, line: 499, baseType: !200, size: 128, offset: 4224)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !189, file: !115, line: 502, baseType: !4693, size: 64, offset: 4352)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4695)
!4695 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !115, line: 502, flags: DIFlagFwdDecl)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !189, file: !115, line: 504, baseType: !4697, size: 64, offset: 4416)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !189, file: !115, line: 505, baseType: !402, size: 64, offset: 4480)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !189, file: !115, line: 510, baseType: !402, size: 64, offset: 4544)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !189, file: !115, line: 511, baseType: !4701, size: 64, offset: 4608)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4703)
!4703 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !115, line: 511, flags: DIFlagFwdDecl)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !189, file: !115, line: 513, baseType: !4705, size: 64, offset: 4672)
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4706, size: 64)
!4706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !115, line: 288, size: 128, elements: !4707)
!4707 = !{!4708, !4709}
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4706, file: !115, line: 293, baseType: !7, size: 32)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4706, file: !115, line: 294, baseType: !305, size: 64, offset: 64)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !189, file: !115, line: 515, baseType: !200, size: 128, offset: 4736)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !189, file: !115, line: 526, baseType: !4712, offset: 4864)
!4712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4713, line: 5, elements: !228)
!4713 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !189, file: !115, line: 528, baseType: !4715, size: 64, offset: 4864)
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4717, line: 51, size: 1344, elements: !4718)
!4717 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4718 = !{!4719, !4720, !4722, !4723, !4813, !4822, !4823, !4824, !4825, !4826, !4827, !4828}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4716, file: !4717, line: 52, baseType: !196, size: 64)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4716, file: !4717, line: 53, baseType: !4721, size: 32, offset: 64)
!4721 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4717, line: 28, baseType: !396)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4716, file: !4717, line: 54, baseType: !196, size: 64, offset: 128)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4716, file: !4717, line: 55, baseType: !4724, size: 192, offset: 192)
!4724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4725, line: 17, size: 192, elements: !4726)
!4725 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4726 = !{!4727, !4729, !4812}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4724, file: !4725, line: 18, baseType: !4728, size: 64)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4724, file: !4725, line: 19, baseType: !4730, size: 64, offset: 64)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4732)
!4732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4725, line: 110, size: 1152, elements: !4733)
!4733 = !{!4734, !4738, !4742, !4748, !4754, !4758, !4762, !4767, !4771, !4772, !4776, !4780, !4784, !4795, !4796, !4797, !4798, !4808}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4732, file: !4725, line: 111, baseType: !4735, size: 64)
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4736, size: 64)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!4728, !4728}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4732, file: !4725, line: 112, baseType: !4739, size: 64, offset: 64)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{null, !4728}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4732, file: !4725, line: 113, baseType: !4743, size: 64, offset: 128)
!4743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4744, size: 64)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!471, !4746}
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4724)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4732, file: !4725, line: 114, baseType: !4749, size: 64, offset: 192)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!3228, !4746, !4752}
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4732, file: !4725, line: 116, baseType: !4755, size: 64, offset: 256)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{!471, !4746, !196}
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4732, file: !4725, line: 118, baseType: !4759, size: 64, offset: 320)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{!240, !4746, !196, !7, !182, !302}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4732, file: !4725, line: 123, baseType: !4763, size: 64, offset: 384)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4764, size: 64)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{!240, !4746, !196, !4766, !302}
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4732, file: !4725, line: 126, baseType: !4768, size: 64, offset: 448)
!4768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4769, size: 64)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{!196, !4746}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4732, file: !4725, line: 127, baseType: !4768, size: 64, offset: 512)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4732, file: !4725, line: 128, baseType: !4773, size: 64, offset: 576)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{!4728, !4746}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4732, file: !4725, line: 130, baseType: !4777, size: 64, offset: 640)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!4728, !4746, !4728}
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4732, file: !4725, line: 133, baseType: !4781, size: 64, offset: 704)
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{!4728, !4746, !196}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4732, file: !4725, line: 135, baseType: !4785, size: 64, offset: 768)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 64)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{!240, !4746, !196, !196, !7, !7, !4788}
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4725, line: 43, size: 640, elements: !4790)
!4790 = !{!4791, !4792, !4793}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4789, file: !4725, line: 44, baseType: !4728, size: 64)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4789, file: !4725, line: 45, baseType: !7, size: 32, offset: 64)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4789, file: !4725, line: 46, baseType: !4794, size: 512, offset: 128)
!4794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 512, elements: !2307)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4732, file: !4725, line: 140, baseType: !4777, size: 64, offset: 832)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4732, file: !4725, line: 143, baseType: !4773, size: 64, offset: 896)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4732, file: !4725, line: 145, baseType: !4735, size: 64, offset: 960)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4732, file: !4725, line: 146, baseType: !4799, size: 64, offset: 1024)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!240, !4746, !4802}
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4725, line: 29, size: 128, elements: !4804)
!4804 = !{!4805, !4806, !4807}
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4803, file: !4725, line: 30, baseType: !7, size: 32)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4803, file: !4725, line: 31, baseType: !7, size: 32, offset: 32)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4803, file: !4725, line: 32, baseType: !4746, size: 64, offset: 64)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4732, file: !4725, line: 148, baseType: !4809, size: 64, offset: 1088)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!240, !4746, !188}
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4724, file: !4725, line: 20, baseType: !188, size: 64, offset: 128)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4716, file: !4717, line: 57, baseType: !4814, size: 64, offset: 384)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4717, line: 31, size: 704, elements: !4816)
!4816 = !{!4817, !4818, !4819, !4820, !4821}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4815, file: !4717, line: 32, baseType: !256, size: 64)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4815, file: !4717, line: 33, baseType: !240, size: 32, offset: 64)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4815, file: !4717, line: 34, baseType: !182, size: 64, offset: 128)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4815, file: !4717, line: 35, baseType: !4814, size: 64, offset: 192)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4815, file: !4717, line: 43, baseType: !324, size: 448, offset: 256)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4716, file: !4717, line: 58, baseType: !4814, size: 64, offset: 448)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4716, file: !4717, line: 59, baseType: !4715, size: 64, offset: 512)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4716, file: !4717, line: 60, baseType: !4715, size: 64, offset: 576)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4716, file: !4717, line: 61, baseType: !4715, size: 64, offset: 640)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4716, file: !4717, line: 63, baseType: !192, size: 512, offset: 704)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4716, file: !4717, line: 65, baseType: !305, size: 64, offset: 1216)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4716, file: !4717, line: 66, baseType: !182, size: 64, offset: 1280)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !189, file: !115, line: 529, baseType: !4728, size: 64, offset: 4928)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !189, file: !115, line: 534, baseType: !494, size: 32, offset: 4992)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !189, file: !115, line: 535, baseType: !396, size: 32, offset: 5024)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !189, file: !115, line: 537, baseType: !214, offset: 5056)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !189, file: !115, line: 538, baseType: !200, size: 128, offset: 5056)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !189, file: !115, line: 540, baseType: !4835, size: 64, offset: 5184)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4837, line: 54, size: 960, elements: !4838)
!4837 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4838 = !{!4839, !4840, !4841, !4842, !4843, !4844, !4845, !4849, !4853, !4854, !4855, !4856, !4860, !4864, !4865}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4836, file: !4837, line: 55, baseType: !196, size: 64)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4836, file: !4837, line: 56, baseType: !614, size: 64, offset: 64)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4836, file: !4837, line: 58, baseType: !309, size: 64, offset: 128)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4836, file: !4837, line: 59, baseType: !309, size: 64, offset: 192)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4836, file: !4837, line: 60, baseType: !207, size: 64, offset: 256)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4836, file: !4837, line: 62, baseType: !4435, size: 64, offset: 320)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4836, file: !4837, line: 63, baseType: !4846, size: 64, offset: 384)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4847, size: 64)
!4847 = !DISubroutineType(types: !4848)
!4848 = !{!256, !188, !1305}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4836, file: !4837, line: 65, baseType: !4850, size: 64, offset: 448)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !4835}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4836, file: !4837, line: 66, baseType: !4443, size: 64, offset: 512)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4836, file: !4837, line: 68, baseType: !4452, size: 64, offset: 576)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4836, file: !4837, line: 70, baseType: !4257, size: 64, offset: 640)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4836, file: !4837, line: 71, baseType: !4857, size: 64, offset: 704)
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 64)
!4858 = !DISubroutineType(types: !4859)
!4859 = !{!3228, !188}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4836, file: !4837, line: 73, baseType: !4861, size: 64, offset: 768)
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4862, size: 64)
!4862 = !DISubroutineType(types: !4863)
!4863 = !{null, !188, !2789, !2790}
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4836, file: !4837, line: 75, baseType: !4447, size: 64, offset: 832)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4836, file: !4837, line: 77, baseType: !4564, size: 64, offset: 896)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !189, file: !115, line: 541, baseType: !309, size: 64, offset: 5248)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !189, file: !115, line: 543, baseType: !4443, size: 64, offset: 5312)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !189, file: !115, line: 544, baseType: !4869, size: 64, offset: 5376)
!4869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4870, size: 64)
!4870 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !115, line: 45, flags: DIFlagFwdDecl)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !189, file: !115, line: 545, baseType: !4872, size: 64, offset: 5440)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !115, line: 47, flags: DIFlagFwdDecl)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !189, file: !115, line: 547, baseType: !471, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !189, file: !115, line: 548, baseType: !471, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !189, file: !115, line: 549, baseType: !471, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !189, file: !115, line: 550, baseType: !471, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !184, file: !185, line: 277, baseType: !189, size: 5568, offset: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !184, file: !185, line: 278, baseType: !240, size: 32, offset: 5632)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !184, file: !185, line: 279, baseType: !4881, size: 64, offset: 5696)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4883)
!4883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_host_ops", file: !185, line: 82, size: 1408, elements: !4884)
!4884 = !{!4885, !4946, !4950, !4951, !4955, !4973, !4977, !4978, !4982, !4986, !5202, !5206, !5207, !5211, !5212, !5213, !5214, !5215, !5216, !5220, !5221, !5222}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "post_req", scope: !4883, file: !185, line: 91, baseType: !4886, size: 64)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{null, !183, !4889, !240}
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_request", file: !4891, line: 144, size: 896, elements: !4892)
!4891 = !DIFile(filename: "./include/linux/mmc/core.h", directory: "/home/lizy2001/genbc/linux")
!4892 = !{!4893, !4933, !4934, !4935, !4936, !4937, !4938, !4942, !4943, !4944, !4945}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "sbc", scope: !4890, file: !4891, line: 145, baseType: !4894, size: 64)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_command", file: !4891, line: 26, size: 448, elements: !4896)
!4896 = !{!4897, !4898, !4899, !4901, !4902, !4903, !4904, !4905, !4932}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4895, file: !4891, line: 27, baseType: !396, size: 32)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4895, file: !4891, line: 28, baseType: !396, size: 32, offset: 32)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "resp", scope: !4895, file: !4891, line: 32, baseType: !4900, size: 128, offset: 64)
!4900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 128, elements: !1294)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4895, file: !4891, line: 33, baseType: !7, size: 32, offset: 192)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4895, file: !4891, line: 92, baseType: !7, size: 32, offset: 224)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4895, file: !4891, line: 93, baseType: !240, size: 32, offset: 256)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "busy_timeout", scope: !4895, file: !4891, line: 109, baseType: !7, size: 32, offset: 288)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4895, file: !4891, line: 110, baseType: !4906, size: 64, offset: 320)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_data", file: !4891, line: 114, size: 576, elements: !4908)
!4908 = !{!4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4931}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_ns", scope: !4907, file: !4891, line: 115, baseType: !7, size: 32)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_clks", scope: !4907, file: !4891, line: 116, baseType: !7, size: 32, offset: 32)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "blksz", scope: !4907, file: !4891, line: 117, baseType: !7, size: 32, offset: 64)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4907, file: !4891, line: 118, baseType: !7, size: 32, offset: 96)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "blk_addr", scope: !4907, file: !4891, line: 119, baseType: !7, size: 32, offset: 128)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4907, file: !4891, line: 120, baseType: !240, size: 32, offset: 160)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4907, file: !4891, line: 121, baseType: !7, size: 32, offset: 192)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_xfered", scope: !4907, file: !4891, line: 132, baseType: !7, size: 32, offset: 224)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4907, file: !4891, line: 134, baseType: !4894, size: 64, offset: 256)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !4907, file: !4891, line: 135, baseType: !4889, size: 64, offset: 320)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "sg_len", scope: !4907, file: !4891, line: 137, baseType: !7, size: 32, offset: 384)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "sg_count", scope: !4907, file: !4891, line: 138, baseType: !240, size: 32, offset: 416)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4907, file: !4891, line: 139, baseType: !4922, size: 64, offset: 448)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4924, line: 11, size: 256, elements: !4925)
!4924 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4925 = !{!4926, !4927, !4928, !4929, !4930}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4923, file: !4924, line: 12, baseType: !305, size: 64)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4923, file: !4924, line: 13, baseType: !7, size: 32, offset: 64)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4923, file: !4924, line: 14, baseType: !7, size: 32, offset: 96)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4923, file: !4924, line: 15, baseType: !1913, size: 64, offset: 128)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4923, file: !4924, line: 17, baseType: !7, size: 32, offset: 192)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "host_cookie", scope: !4907, file: !4891, line: 140, baseType: !2419, size: 32, offset: 512)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "mrq", scope: !4895, file: !4891, line: 111, baseType: !4889, size: 64, offset: 384)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4890, file: !4891, line: 146, baseType: !4894, size: 64, offset: 64)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4890, file: !4891, line: 147, baseType: !4906, size: 64, offset: 128)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4890, file: !4891, line: 148, baseType: !4894, size: 64, offset: 192)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4890, file: !4891, line: 150, baseType: !2470, size: 192, offset: 256)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_completion", scope: !4890, file: !4891, line: 151, baseType: !2470, size: 192, offset: 448)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4890, file: !4891, line: 152, baseType: !4939, size: 64, offset: 640)
!4939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4940, size: 64)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{null, !4889}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "recovery_notifier", scope: !4890, file: !4891, line: 158, baseType: !4939, size: 64, offset: 704)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !4890, file: !4891, line: 159, baseType: !183, size: 64, offset: 768)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "cap_cmd_during_tfr", scope: !4890, file: !4891, line: 162, baseType: !471, size: 8, offset: 832)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4890, file: !4891, line: 164, baseType: !240, size: 32, offset: 864)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "pre_req", scope: !4883, file: !185, line: 93, baseType: !4947, size: 64, offset: 64)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{null, !183, !4889}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4883, file: !185, line: 94, baseType: !4947, size: 64, offset: 128)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "request_atomic", scope: !4883, file: !185, line: 96, baseType: !4952, size: 64, offset: 192)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{!240, !183, !4889}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "set_ios", scope: !4883, file: !185, line: 113, baseType: !4956, size: 64, offset: 256)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{null, !183, !4959}
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ios", file: !185, line: 19, size: 160, elements: !4961)
!4961 = !{!4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !4960, file: !185, line: 20, baseType: !7, size: 32)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "vdd", scope: !4960, file: !185, line: 21, baseType: !297, size: 16, offset: 32)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "power_delay_ms", scope: !4960, file: !185, line: 22, baseType: !7, size: 32, offset: 64)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mode", scope: !4960, file: !185, line: 26, baseType: !408, size: 8, offset: 96)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !4960, file: !185, line: 31, baseType: !408, size: 8, offset: 104)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "power_mode", scope: !4960, file: !185, line: 37, baseType: !408, size: 8, offset: 112)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !4960, file: !185, line: 44, baseType: !408, size: 8, offset: 120)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "timing", scope: !4960, file: !185, line: 50, baseType: !408, size: 8, offset: 128)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "signal_voltage", scope: !4960, file: !185, line: 64, baseType: !408, size: 8, offset: 136)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "drv_type", scope: !4960, file: !185, line: 70, baseType: !408, size: 8, offset: 144)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_strobe", scope: !4960, file: !185, line: 77, baseType: !471, size: 8, offset: 152)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "get_ro", scope: !4883, file: !185, line: 122, baseType: !4974, size: 64, offset: 320)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!240, !183}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "get_cd", scope: !4883, file: !185, line: 131, baseType: !4974, size: 64, offset: 384)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "enable_sdio_irq", scope: !4883, file: !185, line: 133, baseType: !4979, size: 64, offset: 448)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = !DISubroutineType(types: !4981)
!4981 = !{null, !183, !240}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "ack_sdio_irq", scope: !4883, file: !185, line: 135, baseType: !4983, size: 64, offset: 512)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !183}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "init_card", scope: !4883, file: !185, line: 138, baseType: !4987, size: 64, offset: 576)
!4987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4988, size: 64)
!4988 = !DISubroutineType(types: !4989)
!4989 = !{null, !183, !4990}
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_card", file: !4992, line: 244, size: 12672, elements: !4993)
!4992 = !DIFile(filename: "./include/linux/mmc/card.h", directory: "/home/lizy2001/genbc/linux")
!4993 = !{!4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5013, !5015, !5027, !5047, !5128, !5137, !5143, !5151, !5152, !5153, !5164, !5171, !5177, !5178, !5179, !5180, !5181, !5182, !5185, !5186, !5187, !5188, !5189, !5199, !5200, !5201}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !4991, file: !4992, line: 245, baseType: !183, size: 64)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4991, file: !4992, line: 246, baseType: !189, size: 5568, offset: 64)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "ocr", scope: !4991, file: !4992, line: 247, baseType: !396, size: 32, offset: 5632)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "rca", scope: !4991, file: !4992, line: 248, baseType: !7, size: 32, offset: 5664)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4991, file: !4992, line: 249, baseType: !7, size: 32, offset: 5696)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4991, file: !4992, line: 254, baseType: !7, size: 32, offset: 5728)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4991, file: !4992, line: 255, baseType: !7, size: 32, offset: 5760)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_max_rate", scope: !4991, file: !4992, line: 256, baseType: !7, size: 32, offset: 5792)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "reenable_cmdq", scope: !4991, file: !4992, line: 274, baseType: !471, size: 8, offset: 5824)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !4991, file: !4992, line: 276, baseType: !7, size: 32, offset: 5856)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "erase_shift", scope: !4991, file: !4992, line: 277, baseType: !7, size: 32, offset: 5888)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "pref_erase", scope: !4991, file: !4992, line: 278, baseType: !7, size: 32, offset: 5920)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "eg_boundary", scope: !4991, file: !4992, line: 279, baseType: !7, size: 32, offset: 5952)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "erase_arg", scope: !4991, file: !4992, line: 280, baseType: !7, size: 32, offset: 5984)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "erased_byte", scope: !4991, file: !4992, line: 281, baseType: !1028, size: 8, offset: 6016)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "raw_cid", scope: !4991, file: !4992, line: 283, baseType: !4900, size: 128, offset: 6048)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "raw_csd", scope: !4991, file: !4992, line: 284, baseType: !4900, size: 128, offset: 6176)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "raw_scr", scope: !4991, file: !4992, line: 285, baseType: !5012, size: 64, offset: 6304)
!5012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 64, elements: !1386)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ssr", scope: !4991, file: !4992, line: 286, baseType: !5014, size: 512, offset: 6368)
!5014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 512, elements: !1735)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "cid", scope: !4991, file: !4992, line: 287, baseType: !5016, size: 224, offset: 6880)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cid", file: !4992, line: 13, size: 224, elements: !5017)
!5017 = !{!5018, !5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026}
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "manfid", scope: !5016, file: !4992, line: 14, baseType: !7, size: 32)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "prod_name", scope: !5016, file: !4992, line: 15, baseType: !3133, size: 64, offset: 32)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "prv", scope: !5016, file: !4992, line: 16, baseType: !408, size: 8, offset: 96)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !5016, file: !4992, line: 17, baseType: !7, size: 32, offset: 128)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "oemid", scope: !5016, file: !4992, line: 18, baseType: !297, size: 16, offset: 160)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "year", scope: !5016, file: !4992, line: 19, baseType: !297, size: 16, offset: 176)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "hwrev", scope: !5016, file: !4992, line: 20, baseType: !408, size: 8, offset: 192)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !5016, file: !4992, line: 21, baseType: !408, size: 8, offset: 200)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "month", scope: !5016, file: !4992, line: 22, baseType: !408, size: 8, offset: 208)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !4991, file: !4992, line: 288, baseType: !5028, size: 352, offset: 7104)
!5028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_csd", file: !4992, line: 25, size: 352, elements: !5029)
!5029 = !{!5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042, !5043, !5044, !5045, !5046}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "structure", scope: !5028, file: !4992, line: 26, baseType: !408, size: 8)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "mmca_vsn", scope: !5028, file: !4992, line: 27, baseType: !408, size: 8, offset: 8)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "cmdclass", scope: !5028, file: !4992, line: 28, baseType: !297, size: 16, offset: 16)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "taac_clks", scope: !5028, file: !4992, line: 29, baseType: !297, size: 16, offset: 32)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "taac_ns", scope: !5028, file: !4992, line: 30, baseType: !7, size: 32, offset: 64)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "c_size", scope: !5028, file: !4992, line: 31, baseType: !7, size: 32, offset: 96)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "r2w_factor", scope: !5028, file: !4992, line: 32, baseType: !7, size: 32, offset: 128)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !5028, file: !4992, line: 33, baseType: !7, size: 32, offset: 160)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "erase_size", scope: !5028, file: !4992, line: 34, baseType: !7, size: 32, offset: 192)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "read_blkbits", scope: !5028, file: !4992, line: 35, baseType: !7, size: 32, offset: 224)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "write_blkbits", scope: !5028, file: !4992, line: 36, baseType: !7, size: 32, offset: 256)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5028, file: !4992, line: 37, baseType: !7, size: 32, offset: 288)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "read_partial", scope: !5028, file: !4992, line: 38, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "read_misalign", scope: !5028, file: !4992, line: 39, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "write_partial", scope: !5028, file: !4992, line: 40, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "write_misalign", scope: !5028, file: !4992, line: 41, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_imp", scope: !5028, file: !4992, line: 42, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "ext_csd", scope: !4991, file: !4992, line: 289, baseType: !5048, size: 1344, offset: 7488)
!5048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ext_csd", file: !4992, line: 45, size: 1344, elements: !5049)
!5049 = !{!5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5124, !5125, !5126, !5127}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !5048, file: !4992, line: 46, baseType: !1028, size: 8)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "erase_group_def", scope: !5048, file: !4992, line: 47, baseType: !1028, size: 8, offset: 8)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "sec_feature_support", scope: !5048, file: !4992, line: 48, baseType: !1028, size: 8, offset: 16)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "rel_sectors", scope: !5048, file: !4992, line: 49, baseType: !1028, size: 8, offset: 24)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "rel_param", scope: !5048, file: !4992, line: 50, baseType: !1028, size: 8, offset: 32)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_rpmb_supported", scope: !5048, file: !4992, line: 51, baseType: !471, size: 8, offset: 40)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "part_config", scope: !5048, file: !4992, line: 52, baseType: !1028, size: 8, offset: 48)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ctrl", scope: !5048, file: !4992, line: 53, baseType: !1028, size: 8, offset: 56)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "rst_n_function", scope: !5048, file: !4992, line: 54, baseType: !1028, size: 8, offset: 64)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_writes", scope: !5048, file: !4992, line: 55, baseType: !1028, size: 8, offset: 72)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "max_packed_reads", scope: !5048, file: !4992, line: 56, baseType: !1028, size: 8, offset: 80)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "packed_event_en", scope: !5048, file: !4992, line: 57, baseType: !1028, size: 8, offset: 88)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "part_time", scope: !5048, file: !4992, line: 58, baseType: !7, size: 32, offset: 96)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "sa_timeout", scope: !5048, file: !4992, line: 59, baseType: !7, size: 32, offset: 128)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "generic_cmd6_time", scope: !5048, file: !4992, line: 60, baseType: !7, size: 32, offset: 160)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_longtime", scope: !5048, file: !4992, line: 61, baseType: !7, size: 32, offset: 192)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "power_off_notification", scope: !5048, file: !4992, line: 62, baseType: !1028, size: 8, offset: 224)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !5048, file: !4992, line: 63, baseType: !7, size: 32, offset: 256)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "hs200_max_dtr", scope: !5048, file: !4992, line: 64, baseType: !7, size: 32, offset: 288)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "sectors", scope: !5048, file: !4992, line: 69, baseType: !7, size: 32, offset: 320)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_size", scope: !5048, file: !4992, line: 70, baseType: !7, size: 32, offset: 352)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "hc_erase_timeout", scope: !5048, file: !4992, line: 71, baseType: !7, size: 32, offset: 384)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "sec_trim_mult", scope: !5048, file: !4992, line: 72, baseType: !7, size: 32, offset: 416)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "sec_erase_mult", scope: !5048, file: !4992, line: 73, baseType: !7, size: 32, offset: 448)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "trim_timeout", scope: !5048, file: !4992, line: 74, baseType: !7, size: 32, offset: 480)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "partition_setting_completed", scope: !5048, file: !4992, line: 75, baseType: !471, size: 8, offset: 512)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_offset", scope: !5048, file: !4992, line: 76, baseType: !404, size: 64, offset: 576)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_area_size", scope: !5048, file: !4992, line: 77, baseType: !7, size: 32, offset: 640)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "cache_size", scope: !5048, file: !4992, line: 78, baseType: !7, size: 32, offset: 672)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_en", scope: !5048, file: !4992, line: 79, baseType: !471, size: 8, offset: 704)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "hpi", scope: !5048, file: !4992, line: 80, baseType: !471, size: 8, offset: 712)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "hpi_cmd", scope: !5048, file: !4992, line: 81, baseType: !7, size: 32, offset: 736)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "bkops", scope: !5048, file: !4992, line: 82, baseType: !471, size: 8, offset: 768)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "man_bkops_en", scope: !5048, file: !4992, line: 83, baseType: !471, size: 8, offset: 776)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bkops_en", scope: !5048, file: !4992, line: 84, baseType: !471, size: 8, offset: 784)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "data_sector_size", scope: !5048, file: !4992, line: 85, baseType: !7, size: 32, offset: 800)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "data_tag_unit_size", scope: !5048, file: !4992, line: 86, baseType: !7, size: 32, offset: 832)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lock", scope: !5048, file: !4992, line: 87, baseType: !7, size: 32, offset: 864)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "boot_ro_lockable", scope: !5048, file: !4992, line: 88, baseType: !471, size: 8, offset: 896)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "ffu_capable", scope: !5048, file: !4992, line: 89, baseType: !471, size: 8, offset: 904)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_en", scope: !5048, file: !4992, line: 90, baseType: !471, size: 8, offset: 912)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_support", scope: !5048, file: !4992, line: 91, baseType: !471, size: 8, offset: 920)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_depth", scope: !5048, file: !4992, line: 92, baseType: !7, size: 32, offset: 928)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "fwrev", scope: !5048, file: !4992, line: 94, baseType: !5094, size: 64, offset: 960)
!5094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 64, elements: !2307)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "raw_exception_status", scope: !5048, file: !4992, line: 95, baseType: !1028, size: 8, offset: 1024)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "raw_partition_support", scope: !5048, file: !4992, line: 96, baseType: !1028, size: 8, offset: 1032)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "raw_rpmb_size_mult", scope: !5048, file: !4992, line: 97, baseType: !1028, size: 8, offset: 1040)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erased_mem_count", scope: !5048, file: !4992, line: 98, baseType: !1028, size: 8, offset: 1048)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "strobe_support", scope: !5048, file: !4992, line: 99, baseType: !1028, size: 8, offset: 1056)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "raw_ext_csd_structure", scope: !5048, file: !4992, line: 100, baseType: !1028, size: 8, offset: 1064)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "raw_card_type", scope: !5048, file: !4992, line: 101, baseType: !1028, size: 8, offset: 1072)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "raw_driver_strength", scope: !5048, file: !4992, line: 102, baseType: !1028, size: 8, offset: 1080)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_int_time", scope: !5048, file: !4992, line: 103, baseType: !1028, size: 8, offset: 1088)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_195", scope: !5048, file: !4992, line: 104, baseType: !1028, size: 8, offset: 1096)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_195", scope: !5048, file: !4992, line: 105, baseType: !1028, size: 8, offset: 1104)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_52_360", scope: !5048, file: !4992, line: 106, baseType: !1028, size: 8, offset: 1112)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_26_360", scope: !5048, file: !4992, line: 107, baseType: !1028, size: 8, offset: 1120)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "raw_s_a_timeout", scope: !5048, file: !4992, line: 108, baseType: !1028, size: 8, offset: 1128)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_gap_size", scope: !5048, file: !4992, line: 109, baseType: !1028, size: 8, offset: 1136)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "raw_erase_timeout_mult", scope: !5048, file: !4992, line: 110, baseType: !1028, size: 8, offset: 1144)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hc_erase_grp_size", scope: !5048, file: !4992, line: 111, baseType: !1028, size: 8, offset: 1152)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_trim_mult", scope: !5048, file: !4992, line: 112, baseType: !1028, size: 8, offset: 1160)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_erase_mult", scope: !5048, file: !4992, line: 113, baseType: !1028, size: 8, offset: 1168)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sec_feature_support", scope: !5048, file: !4992, line: 114, baseType: !1028, size: 8, offset: 1176)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "raw_trim_mult", scope: !5048, file: !4992, line: 115, baseType: !1028, size: 8, offset: 1184)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_195", scope: !5048, file: !4992, line: 116, baseType: !1028, size: 8, offset: 1192)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_200_360", scope: !5048, file: !4992, line: 117, baseType: !1028, size: 8, offset: 1200)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_195", scope: !5048, file: !4992, line: 118, baseType: !1028, size: 8, offset: 1208)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_52_360", scope: !5048, file: !4992, line: 119, baseType: !1028, size: 8, offset: 1216)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "raw_pwr_cl_ddr_200_360", scope: !5048, file: !4992, line: 120, baseType: !1028, size: 8, offset: 1224)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "raw_bkops_status", scope: !5048, file: !4992, line: 121, baseType: !1028, size: 8, offset: 1232)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "raw_sectors", scope: !5048, file: !4992, line: 122, baseType: !5123, size: 32, offset: 1240)
!5123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1028, size: 32, elements: !1294)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "pre_eol_info", scope: !5048, file: !4992, line: 123, baseType: !1028, size: 8, offset: 1272)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_a", scope: !5048, file: !4992, line: 124, baseType: !1028, size: 8, offset: 1280)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "device_life_time_est_typ_b", scope: !5048, file: !4992, line: 125, baseType: !1028, size: 8, offset: 1288)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "feature_support", scope: !5048, file: !4992, line: 127, baseType: !7, size: 32, offset: 1312)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "scr", scope: !4991, file: !4992, line: 290, baseType: !5129, size: 48, offset: 8832)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_scr", file: !4992, line: 131, size: 48, elements: !5130)
!5130 = !{!5131, !5132, !5133, !5134, !5135, !5136}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "sda_vsn", scope: !5129, file: !4992, line: 132, baseType: !408, size: 8)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec3", scope: !5129, file: !4992, line: 133, baseType: !408, size: 8, offset: 8)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "sda_spec4", scope: !5129, file: !4992, line: 134, baseType: !408, size: 8, offset: 16)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "sda_specx", scope: !5129, file: !4992, line: 135, baseType: !408, size: 8, offset: 24)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "bus_widths", scope: !5129, file: !4992, line: 136, baseType: !408, size: 8, offset: 32)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !5129, file: !4992, line: 139, baseType: !408, size: 8, offset: 40)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "ssr", scope: !4991, file: !4992, line: 291, baseType: !5138, size: 96, offset: 8896)
!5138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_ssr", file: !4992, line: 144, size: 96, elements: !5139)
!5139 = !{!5140, !5141, !5142}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "au", scope: !5138, file: !4992, line: 145, baseType: !7, size: 32)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "erase_timeout", scope: !5138, file: !4992, line: 146, baseType: !7, size: 32, offset: 32)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "erase_offset", scope: !5138, file: !4992, line: 147, baseType: !7, size: 32, offset: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "sw_caps", scope: !4991, file: !4992, line: 292, baseType: !5144, size: 160, offset: 8992)
!5144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sd_switch_caps", file: !4992, line: 150, size: 160, elements: !5145)
!5145 = !{!5146, !5147, !5148, !5149, !5150}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "hs_max_dtr", scope: !5144, file: !4992, line: 151, baseType: !7, size: 32)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "uhs_max_dtr", scope: !5144, file: !4992, line: 152, baseType: !7, size: 32, offset: 32)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_bus_mode", scope: !5144, file: !4992, line: 160, baseType: !7, size: 32, offset: 64)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_drv_type", scope: !5144, file: !4992, line: 174, baseType: !7, size: 32, offset: 96)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "sd3_curr_limit", scope: !5144, file: !4992, line: 179, baseType: !7, size: 32, offset: 128)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs", scope: !4991, file: !4992, line: 294, baseType: !7, size: 32, offset: 9152)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_funcs_probed", scope: !4991, file: !4992, line: 295, baseType: !795, size: 32, offset: 9184)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "cccr", scope: !4991, file: !4992, line: 296, baseType: !5154, size: 96, offset: 9216)
!5154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cccr", file: !4992, line: 192, size: 96, elements: !5155)
!5155 = !{!5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_vsn", scope: !5154, file: !4992, line: 193, baseType: !7, size: 32)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "sd_vsn", scope: !5154, file: !4992, line: 194, baseType: !7, size: 32, offset: 32)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "multi_block", scope: !5154, file: !4992, line: 195, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "low_speed", scope: !5154, file: !4992, line: 196, baseType: !7, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "wide_bus", scope: !5154, file: !4992, line: 197, baseType: !7, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 64)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "high_power", scope: !5154, file: !4992, line: 198, baseType: !7, size: 1, offset: 67, flags: DIFlagBitField, extraData: i64 64)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "high_speed", scope: !5154, file: !4992, line: 199, baseType: !7, size: 1, offset: 68, flags: DIFlagBitField, extraData: i64 64)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "disable_cd", scope: !5154, file: !4992, line: 200, baseType: !7, size: 1, offset: 69, flags: DIFlagBitField, extraData: i64 64)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "cis", scope: !4991, file: !4992, line: 297, baseType: !5165, size: 96, offset: 9312)
!5165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_cis", file: !4992, line: 203, size: 96, elements: !5166)
!5166 = !{!5167, !5168, !5169, !5170}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !5165, file: !4992, line: 204, baseType: !297, size: 16)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5165, file: !4992, line: 205, baseType: !297, size: 16, offset: 16)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !5165, file: !4992, line: 206, baseType: !297, size: 16, offset: 32)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "max_dtr", scope: !5165, file: !4992, line: 207, baseType: !7, size: 32, offset: 64)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_func", scope: !4991, file: !4992, line: 298, baseType: !5172, size: 448, offset: 9408)
!5172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5173, size: 448, elements: !5175)
!5173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!5174 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func", file: !4992, line: 211, flags: DIFlagFwdDecl)
!5175 = !{!5176}
!5176 = !DISubrange(count: 7)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_single_irq", scope: !4991, file: !4992, line: 299, baseType: !5173, size: 64, offset: 9856)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "major_rev", scope: !4991, file: !4992, line: 300, baseType: !1028, size: 8, offset: 9920)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "minor_rev", scope: !4991, file: !4992, line: 301, baseType: !1028, size: 8, offset: 9928)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "num_info", scope: !4991, file: !4992, line: 302, baseType: !7, size: 32, offset: 9952)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4991, file: !4992, line: 303, baseType: !4766, size: 64, offset: 9984)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "tuples", scope: !4991, file: !4992, line: 304, baseType: !5183, size: 64, offset: 10048)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = !DICompositeType(tag: DW_TAG_structure_type, name: "sdio_func_tuple", file: !4992, line: 212, flags: DIFlagFwdDecl)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "sd_bus_speed", scope: !4991, file: !4992, line: 306, baseType: !7, size: 32, offset: 10112)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "mmc_avail_type", scope: !4991, file: !4992, line: 307, baseType: !7, size: 32, offset: 10144)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !4991, file: !4992, line: 308, baseType: !7, size: 32, offset: 10176)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !4991, file: !4992, line: 310, baseType: !363, size: 64, offset: 10240)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !4991, file: !4992, line: 311, baseType: !5190, size: 2240, offset: 10304)
!5190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5191, size: 2240, elements: !5175)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_part", file: !4992, line: 229, size: 320, elements: !5192)
!5192 = !{!5193, !5194, !5195, !5197, !5198}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5191, file: !4992, line: 230, baseType: !402, size: 64)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "part_cfg", scope: !5191, file: !4992, line: 231, baseType: !7, size: 32, offset: 64)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5191, file: !4992, line: 232, baseType: !5196, size: 160, offset: 96)
!5196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 160, elements: !3302)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "force_ro", scope: !5191, file: !4992, line: 233, baseType: !471, size: 8, offset: 256)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "area_type", scope: !5191, file: !4992, line: 234, baseType: !7, size: 32, offset: 288)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "nr_parts", scope: !4991, file: !4992, line: 312, baseType: !7, size: 32, offset: 12544)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "bouncesz", scope: !4991, file: !4992, line: 314, baseType: !7, size: 32, offset: 12576)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "complete_wq", scope: !4991, file: !4992, line: 315, baseType: !1092, size: 64, offset: 12608)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "start_signal_voltage_switch", scope: !4883, file: !185, line: 140, baseType: !5203, size: 64, offset: 640)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!240, !183, !4959}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "card_busy", scope: !4883, file: !185, line: 143, baseType: !4974, size: 64, offset: 704)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "execute_tuning", scope: !4883, file: !185, line: 146, baseType: !5208, size: 64, offset: 768)
!5208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5209, size: 64)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{!240, !183, !396}
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_hs400_tuning", scope: !4883, file: !185, line: 149, baseType: !5203, size: 64, offset: 832)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_prepare_ddr", scope: !4883, file: !185, line: 152, baseType: !4974, size: 64, offset: 896)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_downgrade", scope: !4883, file: !185, line: 155, baseType: !4983, size: 64, offset: 960)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_complete", scope: !4883, file: !185, line: 158, baseType: !4983, size: 64, offset: 1024)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "hs400_enhanced_strobe", scope: !4883, file: !185, line: 161, baseType: !4956, size: 64, offset: 1088)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "select_drive_strength", scope: !4883, file: !185, line: 163, baseType: !5217, size: 64, offset: 1152)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = !DISubroutineType(types: !5219)
!5219 = !{!240, !4990, !7, !240, !240, !703}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !4883, file: !185, line: 167, baseType: !4983, size: 64, offset: 1216)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "card_event", scope: !4883, file: !185, line: 168, baseType: !4983, size: 64, offset: 1280)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "multi_io_quirk", scope: !4883, file: !185, line: 174, baseType: !5223, size: 64, offset: 1344)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!240, !4990, !7, !240}
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq", scope: !184, file: !185, line: 280, baseType: !5227, size: 64, offset: 5760)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq", file: !5229, line: 23, size: 320, elements: !5230)
!5229 = !DIFile(filename: "drivers/mmc/core/pwrseq.h", directory: "/home/lizy2001/genbc/linux")
!5230 = !{!5231, !5240, !5241, !5242}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5228, file: !5229, line: 24, baseType: !5232, size: 64)
!5232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5233, size: 64)
!5233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5234)
!5234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_pwrseq_ops", file: !5229, line: 16, size: 256, elements: !5235)
!5235 = !{!5236, !5237, !5238, !5239}
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "pre_power_on", scope: !5234, file: !5229, line: 17, baseType: !4983, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "post_power_on", scope: !5234, file: !5229, line: 18, baseType: !4983, size: 64, offset: 64)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "power_off", scope: !5234, file: !5229, line: 19, baseType: !4983, size: 64, offset: 128)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5234, file: !5229, line: 20, baseType: !4983, size: 64, offset: 192)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5228, file: !5229, line: 25, baseType: !188, size: 64, offset: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "pwrseq_node", scope: !5228, file: !5229, line: 26, baseType: !200, size: 128, offset: 128)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5228, file: !5229, line: 27, baseType: !614, size: 64, offset: 256)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "f_min", scope: !184, file: !185, line: 281, baseType: !7, size: 32, offset: 5824)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "f_max", scope: !184, file: !185, line: 282, baseType: !7, size: 32, offset: 5856)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "f_init", scope: !184, file: !185, line: 283, baseType: !7, size: 32, offset: 5888)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail", scope: !184, file: !185, line: 284, baseType: !396, size: 32, offset: 5920)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sdio", scope: !184, file: !185, line: 285, baseType: !396, size: 32, offset: 5952)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_sd", scope: !184, file: !185, line: 286, baseType: !396, size: 32, offset: 5984)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "ocr_avail_mmc", scope: !184, file: !185, line: 287, baseType: !396, size: 32, offset: 6016)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "pm_notify", scope: !184, file: !185, line: 289, baseType: !5251, size: 192, offset: 6080)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !5252, line: 54, size: 192, elements: !5253)
!5252 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!5253 = !{!5254, !5260, !5261}
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !5251, file: !5252, line: 55, baseType: !5255, size: 64)
!5255 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !5252, line: 51, baseType: !5256)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5257, size: 64)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!240, !5259, !305, !182}
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5251, size: 64)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5251, file: !5252, line: 56, baseType: !5259, size: 64, offset: 64)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !5251, file: !5252, line: 57, baseType: !240, size: 32, offset: 128)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !184, file: !185, line: 291, baseType: !4600, size: 64, offset: 6272)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_330", scope: !184, file: !185, line: 292, baseType: !396, size: 32, offset: 6336)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_300", scope: !184, file: !185, line: 293, baseType: !396, size: 32, offset: 6368)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "max_current_180", scope: !184, file: !185, line: 294, baseType: !396, size: 32, offset: 6400)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !184, file: !185, line: 314, baseType: !396, size: 32, offset: 6432)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "caps2", scope: !184, file: !185, line: 352, baseType: !396, size: 32, offset: 6464)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_drv_type", scope: !184, file: !185, line: 381, baseType: !240, size: 32, offset: 6496)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "pm_caps", scope: !184, file: !185, line: 383, baseType: !5270, size: 32, offset: 6528)
!5270 = !DIDerivedType(tag: DW_TAG_typedef, name: "mmc_pm_flag_t", file: !5271, line: 22, baseType: !7)
!5271 = !DIFile(filename: "./include/linux/mmc/pm.h", directory: "/home/lizy2001/genbc/linux")
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "max_seg_size", scope: !184, file: !185, line: 386, baseType: !7, size: 32, offset: 6560)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "max_segs", scope: !184, file: !185, line: 387, baseType: !297, size: 16, offset: 6592)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !184, file: !185, line: 388, baseType: !297, size: 16, offset: 6608)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "max_req_size", scope: !184, file: !185, line: 389, baseType: !7, size: 32, offset: 6624)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_size", scope: !184, file: !185, line: 390, baseType: !7, size: 32, offset: 6656)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "max_blk_count", scope: !184, file: !185, line: 391, baseType: !7, size: 32, offset: 6688)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "max_busy_timeout", scope: !184, file: !185, line: 392, baseType: !7, size: 32, offset: 6720)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !184, file: !185, line: 395, baseType: !214, offset: 6752)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "ios", scope: !184, file: !185, line: 397, baseType: !4960, size: 160, offset: 6752)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "use_spi_crc", scope: !184, file: !185, line: 400, baseType: !7, size: 1, offset: 6912, flags: DIFlagBitField, extraData: i64 6912)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !184, file: !185, line: 401, baseType: !7, size: 1, offset: 6913, flags: DIFlagBitField, extraData: i64 6912)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dead", scope: !184, file: !185, line: 402, baseType: !7, size: 1, offset: 6914, flags: DIFlagBitField, extraData: i64 6912)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "doing_init_tune", scope: !184, file: !185, line: 403, baseType: !7, size: 1, offset: 6915, flags: DIFlagBitField, extraData: i64 6912)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "can_retune", scope: !184, file: !185, line: 404, baseType: !7, size: 1, offset: 6916, flags: DIFlagBitField, extraData: i64 6912)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "doing_retune", scope: !184, file: !185, line: 405, baseType: !7, size: 1, offset: 6917, flags: DIFlagBitField, extraData: i64 6912)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "retune_now", scope: !184, file: !185, line: 406, baseType: !7, size: 1, offset: 6918, flags: DIFlagBitField, extraData: i64 6912)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "retune_paused", scope: !184, file: !185, line: 407, baseType: !7, size: 1, offset: 6919, flags: DIFlagBitField, extraData: i64 6912)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "use_blk_mq", scope: !184, file: !185, line: 408, baseType: !7, size: 1, offset: 6920, flags: DIFlagBitField, extraData: i64 6912)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "retune_crc_disable", scope: !184, file: !185, line: 409, baseType: !7, size: 1, offset: 6921, flags: DIFlagBitField, extraData: i64 6912)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma_map_merge", scope: !184, file: !185, line: 410, baseType: !7, size: 1, offset: 6922, flags: DIFlagBitField, extraData: i64 6912)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_disable", scope: !184, file: !185, line: 412, baseType: !240, size: 32, offset: 6944)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "rescan_entered", scope: !184, file: !185, line: 413, baseType: !240, size: 32, offset: 6976)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "need_retune", scope: !184, file: !185, line: 415, baseType: !240, size: 32, offset: 7008)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "hold_retune", scope: !184, file: !185, line: 416, baseType: !240, size: 32, offset: 7040)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "retune_period", scope: !184, file: !185, line: 417, baseType: !7, size: 32, offset: 7072)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "retune_timer", scope: !184, file: !185, line: 418, baseType: !1649, size: 320, offset: 7104)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "trigger_card_event", scope: !184, file: !185, line: 420, baseType: !471, size: 8, offset: 7424)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "card", scope: !184, file: !185, line: 422, baseType: !4990, size: 64, offset: 7488)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !184, file: !185, line: 424, baseType: !1216, size: 128, offset: 7552)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "claimer", scope: !184, file: !185, line: 425, baseType: !5302, size: 64, offset: 7680)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5303, size: 64)
!5303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_ctx", file: !185, line: 271, size: 64, elements: !5304)
!5304 = !{!5305}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5303, file: !185, line: 272, baseType: !2199, size: 64)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "claim_cnt", scope: !184, file: !185, line: 426, baseType: !240, size: 32, offset: 7744)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "default_ctx", scope: !184, file: !185, line: 427, baseType: !5303, size: 64, offset: 7808)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !184, file: !185, line: 429, baseType: !1645, size: 704, offset: 7872)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "detect_change", scope: !184, file: !185, line: 430, baseType: !240, size: 32, offset: 8576)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !184, file: !185, line: 431, baseType: !5311, size: 128, offset: 8640)
!5311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_slot", file: !185, line: 243, size: 128, elements: !5312)
!5312 = !{!5313, !5314, !5315}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "cd_irq", scope: !5311, file: !185, line: 244, baseType: !240, size: 32)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "cd_wake_enabled", scope: !5311, file: !185, line: 245, baseType: !471, size: 8, offset: 32)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "handler_priv", scope: !5311, file: !185, line: 246, baseType: !182, size: 64, offset: 64)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "bus_ops", scope: !184, file: !185, line: 433, baseType: !5317, size: 64, offset: 8768)
!5317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5318, size: 64)
!5318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5319)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_bus_ops", file: !5320, line: 20, size: 704, elements: !5321)
!5320 = !DIFile(filename: "drivers/mmc/core/core.h", directory: "/home/lizy2001/genbc/linux")
!5321 = !{!5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5319, file: !5320, line: 21, baseType: !4983, size: 64)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !5319, file: !5320, line: 22, baseType: !4983, size: 64, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "pre_suspend", scope: !5319, file: !5320, line: 23, baseType: !4974, size: 64, offset: 128)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5319, file: !5320, line: 24, baseType: !4974, size: 64, offset: 192)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5319, file: !5320, line: 25, baseType: !4974, size: 64, offset: 256)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !5319, file: !5320, line: 26, baseType: !4974, size: 64, offset: 320)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !5319, file: !5320, line: 27, baseType: !4974, size: 64, offset: 384)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !5319, file: !5320, line: 28, baseType: !4974, size: 64, offset: 448)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5319, file: !5320, line: 29, baseType: !4974, size: 64, offset: 512)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "hw_reset", scope: !5319, file: !5320, line: 30, baseType: !4974, size: 64, offset: 576)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reset", scope: !5319, file: !5320, line: 31, baseType: !4974, size: 64, offset: 640)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "bus_refs", scope: !184, file: !185, line: 434, baseType: !7, size: 32, offset: 8832)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irqs", scope: !184, file: !185, line: 436, baseType: !7, size: 32, offset: 8864)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread", scope: !184, file: !185, line: 437, baseType: !2199, size: 64, offset: 8896)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_work", scope: !184, file: !185, line: 438, baseType: !1645, size: 704, offset: 8960)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_pending", scope: !184, file: !185, line: 439, baseType: !471, size: 8, offset: 9664)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "sdio_irq_thread_abort", scope: !184, file: !185, line: 440, baseType: !795, size: 32, offset: 9696)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "pm_flags", scope: !184, file: !185, line: 442, baseType: !5270, size: 32, offset: 9728)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !184, file: !185, line: 444, baseType: !5341, size: 64, offset: 9792)
!5341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5342, size: 64)
!5342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led_trigger", file: !129, line: 432, elements: !228)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "supply", scope: !184, file: !185, line: 449, baseType: !5344, size: 128, offset: 9856)
!5344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_supply", file: !185, line: 266, size: 128, elements: !5345)
!5345 = !{!5346, !5349}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "vmmc", scope: !5344, file: !185, line: 267, baseType: !5347, size: 64)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !185, line: 263, flags: DIFlagFwdDecl)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "vqmmc", scope: !5344, file: !185, line: 268, baseType: !5347, size: 64, offset: 64)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !184, file: !185, line: 451, baseType: !363, size: 64, offset: 9984)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "ongoing_mrq", scope: !184, file: !185, line: 454, baseType: !4889, size: 64, offset: 10048)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "actual_clock", scope: !184, file: !185, line: 460, baseType: !7, size: 32, offset: 10112)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "slotno", scope: !184, file: !185, line: 462, baseType: !7, size: 32, offset: 10144)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_req", scope: !184, file: !185, line: 464, baseType: !240, size: 32, offset: 10176)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !184, file: !185, line: 465, baseType: !396, size: 32, offset: 10208)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_ops", scope: !184, file: !185, line: 468, baseType: !5357, size: 64, offset: 10240)
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5358, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5359)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mmc_cqe_ops", file: !185, line: 178, size: 576, elements: !5360)
!5360 = !{!5361, !5365, !5366, !5367, !5368, !5369, !5370, !5374, !5375}
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enable", scope: !5359, file: !185, line: 180, baseType: !5362, size: 64)
!5362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5363, size: 64)
!5363 = !DISubroutineType(types: !5364)
!5364 = !{!240, !183, !4990}
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_disable", scope: !5359, file: !185, line: 182, baseType: !4983, size: 64, offset: 64)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_request", scope: !5359, file: !185, line: 187, baseType: !4952, size: 64, offset: 128)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_post_req", scope: !5359, file: !185, line: 189, baseType: !4947, size: 64, offset: 192)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_off", scope: !5359, file: !185, line: 195, baseType: !4983, size: 64, offset: 256)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_wait_for_idle", scope: !5359, file: !185, line: 200, baseType: !4974, size: 64, offset: 320)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_timeout", scope: !5359, file: !185, line: 206, baseType: !5371, size: 64, offset: 384)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!471, !183, !4889, !956}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_start", scope: !5359, file: !185, line: 212, baseType: !4983, size: 64, offset: 448)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_recovery_finish", scope: !5359, file: !185, line: 219, baseType: !4983, size: 64, offset: 512)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_private", scope: !184, file: !185, line: 469, baseType: !182, size: 64, offset: 10304)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_qdepth", scope: !184, file: !185, line: 470, baseType: !240, size: 32, offset: 10368)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_enabled", scope: !184, file: !185, line: 471, baseType: !471, size: 8, offset: 10400)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_on", scope: !184, file: !185, line: 472, baseType: !471, size: 8, offset: 10408)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "hsq_enabled", scope: !184, file: !185, line: 475, baseType: !471, size: 8, offset: 10416)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !184, file: !185, line: 477, baseType: !3429, align: 512, offset: 10752)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5384)
!5384 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !4889)
!5385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!5386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5387, size: 64)
!5387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5388)
!5388 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !240)
!5389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5390, size: 64)
!5390 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !402)
!5391 = !{!0, !5392, !5443, !5448, !5450, !5455, !5460, !5465, !5467, !5472}
!5392 = !DIGlobalVariableExpression(var: !5393, expr: !DIExpression())
!5393 = distinct !DIGlobalVariable(name: "__param_use_spi_crc", scope: !2, file: !3, line: 61, type: !5394, isLocal: true, isDefinition: true, align: 64)
!5394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5395)
!5395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5396, line: 69, size: 320, elements: !5397)
!5396 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5397 = !{!5398, !5399, !5400, !5416, !5418, !5421, !5422}
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5395, file: !5396, line: 70, baseType: !196, size: 64)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5395, file: !5396, line: 71, baseType: !614, size: 64, offset: 64)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5395, file: !5396, line: 72, baseType: !5401, size: 64, offset: 128)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5403)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5396, line: 47, size: 256, elements: !5404)
!5404 = !{!5405, !5406, !5411, !5415}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5403, file: !5396, line: 49, baseType: !7, size: 32)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5403, file: !5396, line: 51, baseType: !5407, size: 64, offset: 64)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 64)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!240, !196, !5410}
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5394, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5403, file: !5396, line: 53, baseType: !5412, size: 64, offset: 128)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = !DISubroutineType(types: !5414)
!5414 = !{!240, !256, !5410}
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5403, file: !5396, line: 55, baseType: !449, size: 64, offset: 192)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5395, file: !5396, line: 73, baseType: !5417, size: 16, offset: 192)
!5417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5395, file: !5396, line: 74, baseType: !5419, size: 8, offset: 208)
!5419 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !397, line: 16, baseType: !5420)
!5420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !399, line: 20, baseType: !980)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5395, file: !5396, line: 75, baseType: !1028, size: 8, offset: 216)
!5422 = !DIDerivedType(tag: DW_TAG_member, scope: !5395, file: !5396, line: 76, baseType: !5423, size: 64, offset: 256)
!5423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5395, file: !5396, line: 76, size: 64, elements: !5424)
!5424 = !{!5425, !5426, !5433}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5423, file: !5396, line: 77, baseType: !182, size: 64)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5423, file: !5396, line: 78, baseType: !5427, size: 64)
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5429)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5396, line: 86, size: 128, elements: !5430)
!5430 = !{!5431, !5432}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5429, file: !5396, line: 87, baseType: !7, size: 32)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5429, file: !5396, line: 88, baseType: !256, size: 64, offset: 64)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5423, file: !5396, line: 79, baseType: !5434, size: 64)
!5434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5435, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5436)
!5436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5396, line: 92, size: 256, elements: !5437)
!5437 = !{!5438, !5439, !5440, !5441, !5442}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5436, file: !5396, line: 94, baseType: !7, size: 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5436, file: !5396, line: 95, baseType: !7, size: 32, offset: 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5436, file: !5396, line: 96, baseType: !1003, size: 64, offset: 64)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5436, file: !5396, line: 97, baseType: !5401, size: 64, offset: 128)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5436, file: !5396, line: 98, baseType: !182, size: 64, offset: 192)
!5443 = !DIGlobalVariableExpression(var: !5444, expr: !DIExpression())
!5444 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_use_spi_crctype292", scope: !2, file: !3, line: 61, type: !5445, isLocal: true, isDefinition: true, align: 8)
!5445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 280, elements: !5446)
!5446 = !{!5447}
!5447 = !DISubrange(count: 35)
!5448 = !DIGlobalVariableExpression(var: !5449, expr: !DIExpression())
!5449 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mmc_init316", scope: !2, file: !3, line: 2464, type: !182, isLocal: true, isDefinition: true)
!5450 = !DIGlobalVariableExpression(var: !5451, expr: !DIExpression())
!5451 = distinct !DIGlobalVariable(name: "__exitcall_mmc_exit", scope: !2, file: !3, line: 2465, type: !5452, isLocal: true, isDefinition: true)
!5452 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !5453, line: 117, baseType: !5454)
!5453 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!5455 = !DIGlobalVariableExpression(var: !5456, expr: !DIExpression())
!5456 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file317", scope: !2, file: !3, line: 2467, type: !5457, isLocal: true, isDefinition: true, align: 8)
!5457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 320, elements: !5458)
!5458 = !{!5459}
!5459 = !DISubrange(count: 40)
!5460 = !DIGlobalVariableExpression(var: !5461, expr: !DIExpression())
!5461 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license318", scope: !2, file: !3, line: 2467, type: !5462, isLocal: true, isDefinition: true, align: 8)
!5462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 168, elements: !5463)
!5463 = !{!5464}
!5464 = !DISubrange(count: 21)
!5465 = !DIGlobalVariableExpression(var: !5466, expr: !DIExpression())
!5466 = distinct !DIGlobalVariable(name: "__param_str_use_spi_crc", scope: !2, file: !3, line: 61, type: !5462, isLocal: true, isDefinition: true)
!5467 = !DIGlobalVariableExpression(var: !5468, expr: !DIExpression())
!5468 = distinct !DIGlobalVariable(name: "__key", scope: !5469, file: !2471, line: 88, type: !629, isLocal: true, isDefinition: true)
!5469 = distinct !DISubprogram(name: "__init_completion", scope: !2471, file: !2471, line: 85, type: !5470, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{null, !2469}
!5472 = !DIGlobalVariableExpression(var: !5473, expr: !DIExpression())
!5473 = distinct !DIGlobalVariable(name: "freqs", scope: !2, file: !3, line: 53, type: !5474, isLocal: true, isDefinition: true)
!5474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1560, size: 128, elements: !1294)
!5475 = !{!"rsp"}
!5476 = !{i32 7, !"Dwarf Version", i32 4}
!5477 = !{i32 2, !"Debug Info Version", i32 3}
!5478 = !{i32 1, !"wchar_size", i32 2}
!5479 = !{i32 1, !"Code Model", i32 2}
!5480 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5481 = distinct !DISubprogram(name: "mmc_command_done", scope: !3, file: !3, line: 118, type: !4948, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5482 = !DILocalVariable(name: "host", arg: 1, scope: !5481, file: !3, line: 118, type: !183)
!5483 = !DILocation(line: 118, column: 40, scope: !5481)
!5484 = !DILocalVariable(name: "mrq", arg: 2, scope: !5481, file: !3, line: 118, type: !4889)
!5485 = !DILocation(line: 118, column: 66, scope: !5481)
!5486 = !DILocation(line: 120, column: 7, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 120, column: 6)
!5488 = !DILocation(line: 120, column: 12, scope: !5487)
!5489 = !DILocation(line: 120, column: 6, scope: !5481)
!5490 = !DILocation(line: 121, column: 3, scope: !5487)
!5491 = !DILocation(line: 123, column: 19, scope: !5481)
!5492 = !DILocation(line: 123, column: 2, scope: !5481)
!5493 = !DILocation(line: 125, column: 2, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 125, column: 2)
!5495 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 125, column: 2)
!5496 = !DILocation(line: 125, column: 2, scope: !5495)
!5497 = !DILocation(line: 127, column: 1, scope: !5481)
!5498 = distinct !DISubprogram(name: "mmc_complete_cmd", scope: !3, file: !3, line: 112, type: !4940, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5499 = !DILocalVariable(name: "mrq", arg: 1, scope: !5498, file: !3, line: 112, type: !4889)
!5500 = !DILocation(line: 112, column: 57, scope: !5498)
!5501 = !DILocation(line: 114, column: 6, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 114, column: 6)
!5503 = !DILocation(line: 114, column: 11, scope: !5502)
!5504 = !DILocation(line: 114, column: 30, scope: !5502)
!5505 = !DILocation(line: 114, column: 51, scope: !5502)
!5506 = !DILocation(line: 114, column: 56, scope: !5502)
!5507 = !DILocation(line: 114, column: 34, scope: !5502)
!5508 = !DILocation(line: 114, column: 6, scope: !5498)
!5509 = !DILocation(line: 115, column: 17, scope: !5502)
!5510 = !DILocation(line: 115, column: 22, scope: !5502)
!5511 = !DILocation(line: 115, column: 3, scope: !5502)
!5512 = !DILocation(line: 116, column: 1, scope: !5498)
!5513 = distinct !DISubprogram(name: "mmc_request_done", scope: !3, file: !3, line: 138, type: !4948, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5514 = !DILocalVariable(name: "host", arg: 1, scope: !5513, file: !3, line: 138, type: !183)
!5515 = !DILocation(line: 138, column: 40, scope: !5513)
!5516 = !DILocalVariable(name: "mrq", arg: 2, scope: !5513, file: !3, line: 138, type: !4889)
!5517 = !DILocation(line: 138, column: 66, scope: !5513)
!5518 = !DILocalVariable(name: "cmd", scope: !5513, file: !3, line: 140, type: !4894)
!5519 = !DILocation(line: 140, column: 22, scope: !5513)
!5520 = !DILocation(line: 140, column: 28, scope: !5513)
!5521 = !DILocation(line: 140, column: 33, scope: !5513)
!5522 = !DILocalVariable(name: "err", scope: !5513, file: !3, line: 141, type: !240)
!5523 = !DILocation(line: 141, column: 6, scope: !5513)
!5524 = !DILocation(line: 141, column: 12, scope: !5513)
!5525 = !DILocation(line: 141, column: 17, scope: !5513)
!5526 = !DILocation(line: 144, column: 6, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 144, column: 6)
!5528 = !DILocation(line: 144, column: 11, scope: !5527)
!5529 = !DILocation(line: 144, column: 18, scope: !5527)
!5530 = !DILocation(line: 144, column: 43, scope: !5527)
!5531 = !DILocation(line: 145, column: 6, scope: !5527)
!5532 = !DILocation(line: 145, column: 11, scope: !5527)
!5533 = !DILocation(line: 145, column: 18, scope: !5527)
!5534 = !DILocation(line: 145, column: 49, scope: !5527)
!5535 = !DILocation(line: 146, column: 7, scope: !5527)
!5536 = !DILocation(line: 146, column: 13, scope: !5527)
!5537 = !DILocation(line: 146, column: 32, scope: !5527)
!5538 = !DILocation(line: 147, column: 7, scope: !5527)
!5539 = !DILocation(line: 147, column: 11, scope: !5527)
!5540 = !DILocation(line: 147, column: 22, scope: !5527)
!5541 = !DILocation(line: 147, column: 26, scope: !5527)
!5542 = !DILocation(line: 147, column: 31, scope: !5527)
!5543 = !DILocation(line: 147, column: 35, scope: !5527)
!5544 = !DILocation(line: 147, column: 38, scope: !5527)
!5545 = !DILocation(line: 147, column: 43, scope: !5527)
!5546 = !DILocation(line: 147, column: 48, scope: !5527)
!5547 = !DILocation(line: 147, column: 54, scope: !5527)
!5548 = !DILocation(line: 147, column: 66, scope: !5527)
!5549 = !DILocation(line: 148, column: 7, scope: !5527)
!5550 = !DILocation(line: 148, column: 12, scope: !5527)
!5551 = !DILocation(line: 148, column: 17, scope: !5527)
!5552 = !DILocation(line: 148, column: 20, scope: !5527)
!5553 = !DILocation(line: 148, column: 25, scope: !5527)
!5554 = !DILocation(line: 148, column: 31, scope: !5527)
!5555 = !DILocation(line: 148, column: 37, scope: !5527)
!5556 = !DILocation(line: 148, column: 49, scope: !5527)
!5557 = !DILocation(line: 149, column: 7, scope: !5527)
!5558 = !DILocation(line: 149, column: 12, scope: !5527)
!5559 = !DILocation(line: 149, column: 17, scope: !5527)
!5560 = !DILocation(line: 149, column: 20, scope: !5527)
!5561 = !DILocation(line: 149, column: 25, scope: !5527)
!5562 = !DILocation(line: 149, column: 31, scope: !5527)
!5563 = !DILocation(line: 149, column: 37, scope: !5527)
!5564 = !DILocation(line: 144, column: 6, scope: !5513)
!5565 = !DILocation(line: 150, column: 21, scope: !5527)
!5566 = !DILocation(line: 150, column: 3, scope: !5527)
!5567 = !DILocation(line: 152, column: 6, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 152, column: 6)
!5569 = !DILocation(line: 152, column: 10, scope: !5568)
!5570 = !DILocation(line: 152, column: 13, scope: !5568)
!5571 = !DILocation(line: 152, column: 18, scope: !5568)
!5572 = !DILocation(line: 152, column: 26, scope: !5568)
!5573 = !DILocation(line: 152, column: 29, scope: !5568)
!5574 = !DILocation(line: 152, column: 6, scope: !5513)
!5575 = !DILocation(line: 153, column: 7, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5577, file: !3, line: 153, column: 7)
!5577 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 152, column: 52)
!5578 = !DILocation(line: 153, column: 12, scope: !5576)
!5579 = !DILocation(line: 153, column: 20, scope: !5576)
!5580 = !DILocation(line: 153, column: 7, scope: !5577)
!5581 = !DILocation(line: 154, column: 4, scope: !5576)
!5582 = !DILocation(line: 154, column: 9, scope: !5576)
!5583 = !DILocation(line: 154, column: 17, scope: !5576)
!5584 = !DILocation(line: 155, column: 2, scope: !5577)
!5585 = !DILocation(line: 157, column: 6, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 157, column: 6)
!5587 = !DILocation(line: 157, column: 12, scope: !5586)
!5588 = !DILocation(line: 157, column: 27, scope: !5586)
!5589 = !DILocation(line: 157, column: 24, scope: !5586)
!5590 = !DILocation(line: 157, column: 6, scope: !5513)
!5591 = !DILocation(line: 158, column: 3, scope: !5586)
!5592 = !DILocation(line: 158, column: 9, scope: !5586)
!5593 = !DILocation(line: 158, column: 21, scope: !5586)
!5594 = !DILocation(line: 160, column: 19, scope: !5513)
!5595 = !DILocation(line: 160, column: 2, scope: !5513)
!5596 = !DILocation(line: 162, column: 25, scope: !5513)
!5597 = !DILocation(line: 162, column: 31, scope: !5513)
!5598 = !DILocation(line: 162, column: 2, scope: !5513)
!5599 = !DILocation(line: 173, column: 7, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 173, column: 6)
!5601 = !DILocation(line: 173, column: 11, scope: !5600)
!5602 = !DILocation(line: 173, column: 15, scope: !5600)
!5603 = !DILocation(line: 173, column: 20, scope: !5600)
!5604 = !DILocation(line: 173, column: 28, scope: !5600)
!5605 = !DILocation(line: 173, column: 31, scope: !5600)
!5606 = !DILocation(line: 173, column: 6, scope: !5513)
!5607 = !DILocation(line: 174, column: 27, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 173, column: 61)
!5609 = !DILocation(line: 174, column: 33, scope: !5608)
!5610 = !DILocation(line: 174, column: 3, scope: !5608)
!5611 = !DILocation(line: 176, column: 8, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 176, column: 7)
!5613 = !DILocation(line: 176, column: 14, scope: !5612)
!5614 = !DILocation(line: 176, column: 7, scope: !5608)
!5615 = !DILocation(line: 177, column: 22, scope: !5612)
!5616 = !DILocation(line: 177, column: 28, scope: !5612)
!5617 = !DILocation(line: 177, column: 4, scope: !5612)
!5618 = !DILocation(line: 179, column: 7, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 179, column: 7)
!5620 = !DILocation(line: 179, column: 12, scope: !5619)
!5621 = !DILocation(line: 179, column: 7, scope: !5608)
!5622 = !DILocation(line: 180, column: 4, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 180, column: 4)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 180, column: 4)
!5625 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 179, column: 17)
!5626 = !DILocation(line: 180, column: 4, scope: !5624)
!5627 = !DILocation(line: 185, column: 3, scope: !5625)
!5628 = !DILocation(line: 187, column: 3, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 187, column: 3)
!5630 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 187, column: 3)
!5631 = !DILocation(line: 187, column: 3, scope: !5630)
!5632 = !DILocation(line: 192, column: 7, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 192, column: 7)
!5634 = !DILocation(line: 192, column: 12, scope: !5633)
!5635 = !DILocation(line: 192, column: 7, scope: !5608)
!5636 = !DILocation(line: 193, column: 4, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 193, column: 4)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 193, column: 4)
!5639 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 192, column: 18)
!5640 = !DILocation(line: 193, column: 4, scope: !5638)
!5641 = !DILocation(line: 196, column: 3, scope: !5639)
!5642 = !DILocation(line: 198, column: 7, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 198, column: 7)
!5644 = !DILocation(line: 198, column: 12, scope: !5643)
!5645 = !DILocation(line: 198, column: 7, scope: !5608)
!5646 = !DILocation(line: 199, column: 4, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 199, column: 4)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 199, column: 4)
!5649 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 198, column: 18)
!5650 = !DILocation(line: 199, column: 4, scope: !5648)
!5651 = !DILocation(line: 204, column: 3, scope: !5649)
!5652 = !DILocation(line: 205, column: 2, scope: !5608)
!5653 = !DILocation(line: 210, column: 6, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 210, column: 6)
!5655 = !DILocation(line: 210, column: 11, scope: !5654)
!5656 = !DILocation(line: 210, column: 6, scope: !5513)
!5657 = !DILocation(line: 211, column: 3, scope: !5654)
!5658 = !DILocation(line: 211, column: 8, scope: !5654)
!5659 = !DILocation(line: 211, column: 13, scope: !5654)
!5660 = !DILocation(line: 212, column: 1, scope: !5513)
!5661 = distinct !DISubprogram(name: "mmc_retune_needed", scope: !185, file: !185, line: 583, type: !4984, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5662 = !DILocalVariable(name: "host", arg: 1, scope: !5661, file: !185, line: 583, type: !183)
!5663 = !DILocation(line: 583, column: 55, scope: !5661)
!5664 = !DILocation(line: 585, column: 6, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !185, line: 585, column: 6)
!5666 = !DILocation(line: 585, column: 12, scope: !5665)
!5667 = !DILocation(line: 585, column: 6, scope: !5661)
!5668 = !DILocation(line: 586, column: 3, scope: !5665)
!5669 = !DILocation(line: 586, column: 9, scope: !5665)
!5670 = !DILocation(line: 586, column: 21, scope: !5665)
!5671 = !DILocation(line: 587, column: 1, scope: !5661)
!5672 = distinct !DISubprogram(name: "trace_mmc_request_done", scope: !5673, file: !5673, line: 96, type: !4948, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5673 = !DIFile(filename: "./include/trace/events/mmc.h", directory: "/home/lizy2001/genbc/linux")
!5674 = !DILocalVariable(name: "host", arg: 1, scope: !5672, file: !5673, line: 96, type: !183)
!5675 = !DILocation(line: 96, column: 1, scope: !5672)
!5676 = !DILocalVariable(name: "mrq", arg: 2, scope: !5672, file: !5673, line: 96, type: !4889)
!5677 = distinct !DISubprogram(name: "mmc_should_fail_request", scope: !3, file: !3, line: 105, type: !4948, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5678 = !DILocalVariable(name: "host", arg: 1, scope: !5677, file: !3, line: 105, type: !183)
!5679 = !DILocation(line: 105, column: 61, scope: !5677)
!5680 = !DILocalVariable(name: "mrq", arg: 2, scope: !5677, file: !3, line: 106, type: !4889)
!5681 = !DILocation(line: 106, column: 29, scope: !5677)
!5682 = !DILocation(line: 108, column: 1, scope: !5677)
!5683 = distinct !DISubprogram(name: "led_trigger_event", scope: !129, file: !129, line: 438, type: !5684, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5684 = !DISubroutineType(types: !5685)
!5685 = !{null, !5341, !128}
!5686 = !DILocalVariable(name: "trigger", arg: 1, scope: !5683, file: !129, line: 438, type: !5341)
!5687 = !DILocation(line: 438, column: 58, scope: !5683)
!5688 = !DILocalVariable(name: "event", arg: 2, scope: !5683, file: !129, line: 439, type: !128)
!5689 = !DILocation(line: 439, column: 25, scope: !5683)
!5690 = !DILocation(line: 439, column: 33, scope: !5683)
!5691 = distinct !DISubprogram(name: "mmc_start_request", scope: !3, file: !3, line: 335, type: !4953, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5692 = !DILocalVariable(name: "host", arg: 1, scope: !5691, file: !3, line: 335, type: !183)
!5693 = !DILocation(line: 335, column: 40, scope: !5691)
!5694 = !DILocalVariable(name: "mrq", arg: 2, scope: !5691, file: !3, line: 335, type: !4889)
!5695 = !DILocation(line: 335, column: 66, scope: !5691)
!5696 = !DILocalVariable(name: "err", scope: !5691, file: !3, line: 337, type: !240)
!5697 = !DILocation(line: 337, column: 6, scope: !5691)
!5698 = !DILocation(line: 339, column: 2, scope: !5691)
!5699 = !DILocation(line: 341, column: 18, scope: !5691)
!5700 = !DILocation(line: 341, column: 2, scope: !5691)
!5701 = !DILocation(line: 343, column: 6, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 343, column: 6)
!5703 = !DILocation(line: 343, column: 6, scope: !5691)
!5704 = !DILocation(line: 344, column: 3, scope: !5702)
!5705 = !DILocation(line: 346, column: 19, scope: !5691)
!5706 = !DILocation(line: 346, column: 25, scope: !5691)
!5707 = !DILocation(line: 346, column: 2, scope: !5691)
!5708 = !DILocalVariable(name: "__ret_warn_on", scope: !5709, file: !3, line: 348, type: !240)
!5709 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 348, column: 2)
!5710 = !DILocation(line: 348, column: 2, scope: !5709)
!5711 = !DILocation(line: 348, column: 2, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 348, column: 2)
!5713 = !DILocation(line: 348, column: 2, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 348, column: 2)
!5715 = !DILocation(line: 348, column: 2, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 348, column: 2)
!5717 = !DILocation(line: 348, column: 2, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 348, column: 2)
!5719 = !{i32 -2140491210, i32 -2140491181, i32 -2140491135, i32 -2140491077, i32 -2140491023, i32 -2140490969, i32 -2140490914, i32 -2140490883}
!5720 = !DILocation(line: 348, column: 2, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 348, column: 2)
!5722 = !{i32 -2140490478, i32 -2140490471, i32 -2140490419, i32 -2140490388, i32 -2140490358}
!5723 = !DILocation(line: 348, column: 2, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 348, column: 2)
!5725 = !DILocation(line: 350, column: 21, scope: !5691)
!5726 = !DILocation(line: 350, column: 27, scope: !5691)
!5727 = !DILocation(line: 350, column: 8, scope: !5691)
!5728 = !DILocation(line: 350, column: 6, scope: !5691)
!5729 = !DILocation(line: 351, column: 6, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 351, column: 6)
!5731 = !DILocation(line: 351, column: 6, scope: !5691)
!5732 = !DILocation(line: 352, column: 10, scope: !5730)
!5733 = !DILocation(line: 352, column: 3, scope: !5730)
!5734 = !DILocation(line: 354, column: 20, scope: !5691)
!5735 = !DILocation(line: 354, column: 26, scope: !5691)
!5736 = !DILocation(line: 354, column: 2, scope: !5691)
!5737 = !DILocation(line: 355, column: 22, scope: !5691)
!5738 = !DILocation(line: 355, column: 28, scope: !5691)
!5739 = !DILocation(line: 355, column: 2, scope: !5691)
!5740 = !DILocation(line: 357, column: 2, scope: !5691)
!5741 = !DILocation(line: 358, column: 1, scope: !5691)
!5742 = !DILocalVariable(name: "x", arg: 1, scope: !5469, file: !2471, line: 85, type: !2469)
!5743 = !DILocation(line: 85, column: 57, scope: !5469)
!5744 = !DILocation(line: 87, column: 2, scope: !5469)
!5745 = !DILocation(line: 87, column: 5, scope: !5469)
!5746 = !DILocation(line: 87, column: 10, scope: !5469)
!5747 = !DILocation(line: 88, column: 2, scope: !5469)
!5748 = !DILocation(line: 88, column: 2, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5469, file: !2471, line: 88, column: 2)
!5750 = !DILocation(line: 89, column: 1, scope: !5469)
!5751 = distinct !DISubprogram(name: "mmc_mrq_pr_debug", scope: !3, file: !3, line: 264, type: !5752, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5752 = !DISubroutineType(types: !5753)
!5753 = !{null, !183, !4889, !471}
!5754 = !DILocalVariable(name: "host", arg: 1, scope: !5751, file: !3, line: 264, type: !183)
!5755 = !DILocation(line: 264, column: 47, scope: !5751)
!5756 = !DILocalVariable(name: "mrq", arg: 2, scope: !5751, file: !3, line: 264, type: !4889)
!5757 = !DILocation(line: 264, column: 73, scope: !5751)
!5758 = !DILocalVariable(name: "cqe", arg: 3, scope: !5751, file: !3, line: 265, type: !471)
!5759 = !DILocation(line: 265, column: 14, scope: !5751)
!5760 = !DILocation(line: 267, column: 6, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 267, column: 6)
!5762 = !DILocation(line: 267, column: 11, scope: !5761)
!5763 = !DILocation(line: 267, column: 6, scope: !5751)
!5764 = !DILocation(line: 268, column: 3, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 268, column: 3)
!5766 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 268, column: 3)
!5767 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 267, column: 16)
!5768 = !DILocation(line: 268, column: 3, scope: !5766)
!5769 = !DILocation(line: 271, column: 2, scope: !5767)
!5770 = !DILocation(line: 273, column: 6, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 273, column: 6)
!5772 = !DILocation(line: 273, column: 11, scope: !5771)
!5773 = !DILocation(line: 273, column: 6, scope: !5751)
!5774 = !DILocation(line: 274, column: 3, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 274, column: 3)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 274, column: 3)
!5777 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 273, column: 16)
!5778 = !DILocation(line: 274, column: 3, scope: !5776)
!5779 = !DILocation(line: 277, column: 2, scope: !5777)
!5780 = !DILocation(line: 277, column: 13, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 277, column: 13)
!5782 = !DILocation(line: 277, column: 13, scope: !5771)
!5783 = !DILocation(line: 278, column: 3, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 278, column: 3)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 278, column: 3)
!5786 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 277, column: 18)
!5787 = !DILocation(line: 278, column: 3, scope: !5785)
!5788 = !DILocation(line: 280, column: 2, scope: !5786)
!5789 = !DILocation(line: 282, column: 6, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 282, column: 6)
!5791 = !DILocation(line: 282, column: 11, scope: !5790)
!5792 = !DILocation(line: 282, column: 6, scope: !5751)
!5793 = !DILocation(line: 283, column: 3, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 283, column: 3)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 283, column: 3)
!5796 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 282, column: 17)
!5797 = !DILocation(line: 283, column: 3, scope: !5795)
!5798 = !DILocation(line: 289, column: 2, scope: !5796)
!5799 = !DILocation(line: 291, column: 6, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 291, column: 6)
!5801 = !DILocation(line: 291, column: 11, scope: !5800)
!5802 = !DILocation(line: 291, column: 6, scope: !5751)
!5803 = !DILocation(line: 292, column: 3, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 292, column: 3)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 292, column: 3)
!5806 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 291, column: 17)
!5807 = !DILocation(line: 292, column: 3, scope: !5805)
!5808 = !DILocation(line: 295, column: 2, scope: !5806)
!5809 = !DILocation(line: 296, column: 1, scope: !5751)
!5810 = distinct !DISubprogram(name: "mmc_mrq_prep", scope: !3, file: !3, line: 298, type: !4953, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5811 = !DILocalVariable(name: "host", arg: 1, scope: !5810, file: !3, line: 298, type: !183)
!5812 = !DILocation(line: 298, column: 42, scope: !5810)
!5813 = !DILocalVariable(name: "mrq", arg: 2, scope: !5810, file: !3, line: 298, type: !4889)
!5814 = !DILocation(line: 298, column: 68, scope: !5810)
!5815 = !DILocalVariable(name: "i", scope: !5810, file: !3, line: 300, type: !7)
!5816 = !DILocation(line: 300, column: 15, scope: !5810)
!5817 = !DILocalVariable(name: "sz", scope: !5810, file: !3, line: 300, type: !7)
!5818 = !DILocation(line: 300, column: 18, scope: !5810)
!5819 = !DILocalVariable(name: "sg", scope: !5810, file: !3, line: 301, type: !4922)
!5820 = !DILocation(line: 301, column: 22, scope: !5810)
!5821 = !DILocation(line: 303, column: 6, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 303, column: 6)
!5823 = !DILocation(line: 303, column: 11, scope: !5822)
!5824 = !DILocation(line: 303, column: 6, scope: !5810)
!5825 = !DILocation(line: 304, column: 3, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 303, column: 16)
!5827 = !DILocation(line: 304, column: 8, scope: !5826)
!5828 = !DILocation(line: 304, column: 13, scope: !5826)
!5829 = !DILocation(line: 304, column: 19, scope: !5826)
!5830 = !DILocation(line: 305, column: 19, scope: !5826)
!5831 = !DILocation(line: 305, column: 3, scope: !5826)
!5832 = !DILocation(line: 305, column: 8, scope: !5826)
!5833 = !DILocation(line: 305, column: 13, scope: !5826)
!5834 = !DILocation(line: 305, column: 17, scope: !5826)
!5835 = !DILocation(line: 306, column: 20, scope: !5826)
!5836 = !DILocation(line: 306, column: 25, scope: !5826)
!5837 = !DILocation(line: 306, column: 3, scope: !5826)
!5838 = !DILocation(line: 306, column: 8, scope: !5826)
!5839 = !DILocation(line: 306, column: 13, scope: !5826)
!5840 = !DILocation(line: 306, column: 18, scope: !5826)
!5841 = !DILocation(line: 307, column: 2, scope: !5826)
!5842 = !DILocation(line: 308, column: 6, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 308, column: 6)
!5844 = !DILocation(line: 308, column: 11, scope: !5843)
!5845 = !DILocation(line: 308, column: 6, scope: !5810)
!5846 = !DILocation(line: 309, column: 3, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 308, column: 16)
!5848 = !DILocation(line: 309, column: 8, scope: !5847)
!5849 = !DILocation(line: 309, column: 13, scope: !5847)
!5850 = !DILocation(line: 309, column: 19, scope: !5847)
!5851 = !DILocation(line: 310, column: 19, scope: !5847)
!5852 = !DILocation(line: 310, column: 3, scope: !5847)
!5853 = !DILocation(line: 310, column: 8, scope: !5847)
!5854 = !DILocation(line: 310, column: 13, scope: !5847)
!5855 = !DILocation(line: 310, column: 17, scope: !5847)
!5856 = !DILocation(line: 311, column: 2, scope: !5847)
!5857 = !DILocation(line: 312, column: 6, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 312, column: 6)
!5859 = !DILocation(line: 312, column: 11, scope: !5858)
!5860 = !DILocation(line: 312, column: 6, scope: !5810)
!5861 = !DILocation(line: 313, column: 7, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 313, column: 7)
!5863 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 312, column: 17)
!5864 = !DILocation(line: 313, column: 12, scope: !5862)
!5865 = !DILocation(line: 313, column: 18, scope: !5862)
!5866 = !DILocation(line: 313, column: 26, scope: !5862)
!5867 = !DILocation(line: 313, column: 32, scope: !5862)
!5868 = !DILocation(line: 313, column: 24, scope: !5862)
!5869 = !DILocation(line: 313, column: 45, scope: !5862)
!5870 = !DILocation(line: 314, column: 7, scope: !5862)
!5871 = !DILocation(line: 314, column: 12, scope: !5862)
!5872 = !DILocation(line: 314, column: 18, scope: !5862)
!5873 = !DILocation(line: 314, column: 27, scope: !5862)
!5874 = !DILocation(line: 314, column: 33, scope: !5862)
!5875 = !DILocation(line: 314, column: 25, scope: !5862)
!5876 = !DILocation(line: 314, column: 47, scope: !5862)
!5877 = !DILocation(line: 315, column: 7, scope: !5862)
!5878 = !DILocation(line: 315, column: 12, scope: !5862)
!5879 = !DILocation(line: 315, column: 18, scope: !5862)
!5880 = !DILocation(line: 315, column: 27, scope: !5862)
!5881 = !DILocation(line: 315, column: 32, scope: !5862)
!5882 = !DILocation(line: 315, column: 38, scope: !5862)
!5883 = !DILocation(line: 315, column: 25, scope: !5862)
!5884 = !DILocation(line: 315, column: 46, scope: !5862)
!5885 = !DILocation(line: 315, column: 52, scope: !5862)
!5886 = !DILocation(line: 315, column: 44, scope: !5862)
!5887 = !DILocation(line: 313, column: 7, scope: !5863)
!5888 = !DILocation(line: 316, column: 4, scope: !5862)
!5889 = !DILocation(line: 318, column: 3, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 318, column: 3)
!5891 = !DILocation(line: 318, column: 3, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 318, column: 3)
!5893 = !DILocation(line: 319, column: 10, scope: !5892)
!5894 = !DILocation(line: 319, column: 14, scope: !5892)
!5895 = !DILocation(line: 319, column: 7, scope: !5892)
!5896 = !DILocation(line: 319, column: 4, scope: !5892)
!5897 = distinct !{!5897, !5889, !5898}
!5898 = !DILocation(line: 319, column: 14, scope: !5890)
!5899 = !DILocation(line: 320, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 320, column: 7)
!5901 = !DILocation(line: 320, column: 13, scope: !5900)
!5902 = !DILocation(line: 320, column: 18, scope: !5900)
!5903 = !DILocation(line: 320, column: 24, scope: !5900)
!5904 = !DILocation(line: 320, column: 33, scope: !5900)
!5905 = !DILocation(line: 320, column: 38, scope: !5900)
!5906 = !DILocation(line: 320, column: 44, scope: !5900)
!5907 = !DILocation(line: 320, column: 31, scope: !5900)
!5908 = !DILocation(line: 320, column: 10, scope: !5900)
!5909 = !DILocation(line: 320, column: 7, scope: !5863)
!5910 = !DILocation(line: 321, column: 4, scope: !5900)
!5911 = !DILocation(line: 323, column: 3, scope: !5863)
!5912 = !DILocation(line: 323, column: 8, scope: !5863)
!5913 = !DILocation(line: 323, column: 14, scope: !5863)
!5914 = !DILocation(line: 323, column: 20, scope: !5863)
!5915 = !DILocation(line: 324, column: 20, scope: !5863)
!5916 = !DILocation(line: 324, column: 3, scope: !5863)
!5917 = !DILocation(line: 324, column: 8, scope: !5863)
!5918 = !DILocation(line: 324, column: 14, scope: !5863)
!5919 = !DILocation(line: 324, column: 18, scope: !5863)
!5920 = !DILocation(line: 325, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 325, column: 7)
!5922 = !DILocation(line: 325, column: 12, scope: !5921)
!5923 = !DILocation(line: 325, column: 7, scope: !5863)
!5924 = !DILocation(line: 326, column: 22, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 325, column: 18)
!5926 = !DILocation(line: 326, column: 27, scope: !5925)
!5927 = !DILocation(line: 326, column: 4, scope: !5925)
!5928 = !DILocation(line: 326, column: 9, scope: !5925)
!5929 = !DILocation(line: 326, column: 15, scope: !5925)
!5930 = !DILocation(line: 326, column: 20, scope: !5925)
!5931 = !DILocation(line: 327, column: 4, scope: !5925)
!5932 = !DILocation(line: 327, column: 9, scope: !5925)
!5933 = !DILocation(line: 327, column: 15, scope: !5925)
!5934 = !DILocation(line: 327, column: 21, scope: !5925)
!5935 = !DILocation(line: 328, column: 21, scope: !5925)
!5936 = !DILocation(line: 328, column: 4, scope: !5925)
!5937 = !DILocation(line: 328, column: 9, scope: !5925)
!5938 = !DILocation(line: 328, column: 15, scope: !5925)
!5939 = !DILocation(line: 328, column: 19, scope: !5925)
!5940 = !DILocation(line: 329, column: 3, scope: !5925)
!5941 = !DILocation(line: 330, column: 2, scope: !5863)
!5942 = !DILocation(line: 332, column: 2, scope: !5810)
!5943 = !DILocation(line: 333, column: 1, scope: !5810)
!5944 = distinct !DISubprogram(name: "__mmc_start_request", scope: !3, file: !3, line: 216, type: !4948, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5945 = !DILocalVariable(name: "host", arg: 1, scope: !5944, file: !3, line: 216, type: !183)
!5946 = !DILocation(line: 216, column: 50, scope: !5944)
!5947 = !DILocalVariable(name: "mrq", arg: 2, scope: !5944, file: !3, line: 216, type: !4889)
!5948 = !DILocation(line: 216, column: 76, scope: !5944)
!5949 = !DILocalVariable(name: "err", scope: !5944, file: !3, line: 218, type: !240)
!5950 = !DILocation(line: 218, column: 6, scope: !5944)
!5951 = !DILocation(line: 221, column: 19, scope: !5944)
!5952 = !DILocation(line: 221, column: 8, scope: !5944)
!5953 = !DILocation(line: 221, column: 6, scope: !5944)
!5954 = !DILocation(line: 222, column: 6, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 222, column: 6)
!5956 = !DILocation(line: 222, column: 6, scope: !5944)
!5957 = !DILocation(line: 223, column: 21, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 222, column: 11)
!5959 = !DILocation(line: 223, column: 3, scope: !5958)
!5960 = !DILocation(line: 223, column: 8, scope: !5958)
!5961 = !DILocation(line: 223, column: 13, scope: !5958)
!5962 = !DILocation(line: 223, column: 19, scope: !5958)
!5963 = !DILocation(line: 224, column: 20, scope: !5958)
!5964 = !DILocation(line: 224, column: 26, scope: !5958)
!5965 = !DILocation(line: 224, column: 3, scope: !5958)
!5966 = !DILocation(line: 225, column: 3, scope: !5958)
!5967 = !DILocation(line: 233, column: 22, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 233, column: 6)
!5969 = !DILocation(line: 233, column: 27, scope: !5968)
!5970 = !DILocation(line: 233, column: 32, scope: !5968)
!5971 = !DILocation(line: 233, column: 40, scope: !5968)
!5972 = !DILocation(line: 233, column: 45, scope: !5968)
!5973 = !DILocation(line: 233, column: 50, scope: !5968)
!5974 = !DILocation(line: 233, column: 6, scope: !5968)
!5975 = !DILocation(line: 233, column: 55, scope: !5968)
!5976 = !DILocation(line: 234, column: 6, scope: !5968)
!5977 = !DILocation(line: 234, column: 12, scope: !5968)
!5978 = !DILocation(line: 234, column: 17, scope: !5968)
!5979 = !DILocation(line: 233, column: 6, scope: !5944)
!5980 = !DILocalVariable(name: "tries", scope: !5981, file: !3, line: 235, type: !240)
!5981 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 234, column: 28)
!5982 = !DILocation(line: 235, column: 7, scope: !5981)
!5983 = !DILocation(line: 237, column: 3, scope: !5981)
!5984 = !DILocation(line: 237, column: 10, scope: !5981)
!5985 = !DILocation(line: 237, column: 16, scope: !5981)
!5986 = !DILocation(line: 237, column: 21, scope: !5981)
!5987 = !DILocation(line: 237, column: 31, scope: !5981)
!5988 = !DILocation(line: 237, column: 37, scope: !5981)
!5989 = !DILocation(line: 237, column: 40, scope: !5981)
!5990 = !DILocation(line: 0, scope: !5981)
!5991 = !DILocation(line: 238, column: 4, scope: !5981)
!5992 = distinct !{!5992, !5983, !5993}
!5993 = !DILocation(line: 238, column: 15, scope: !5981)
!5994 = !DILocation(line: 240, column: 7, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 240, column: 7)
!5996 = !DILocation(line: 240, column: 13, scope: !5995)
!5997 = !DILocation(line: 240, column: 7, scope: !5981)
!5998 = !DILocation(line: 241, column: 4, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 240, column: 19)
!6000 = !DILocation(line: 241, column: 9, scope: !5999)
!6001 = !DILocation(line: 241, column: 14, scope: !5999)
!6002 = !DILocation(line: 241, column: 20, scope: !5999)
!6003 = !DILocation(line: 242, column: 21, scope: !5999)
!6004 = !DILocation(line: 242, column: 27, scope: !5999)
!6005 = !DILocation(line: 242, column: 4, scope: !5999)
!6006 = !DILocation(line: 243, column: 4, scope: !5999)
!6007 = !DILocation(line: 245, column: 2, scope: !5981)
!6008 = !DILocation(line: 247, column: 6, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 247, column: 6)
!6010 = !DILocation(line: 247, column: 11, scope: !6009)
!6011 = !DILocation(line: 247, column: 6, scope: !5944)
!6012 = !DILocation(line: 248, column: 23, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 247, column: 31)
!6014 = !DILocation(line: 248, column: 3, scope: !6013)
!6015 = !DILocation(line: 248, column: 9, scope: !6013)
!6016 = !DILocation(line: 248, column: 21, scope: !6013)
!6017 = !DILocation(line: 253, column: 22, scope: !6013)
!6018 = !DILocation(line: 253, column: 27, scope: !6013)
!6019 = !DILocation(line: 253, column: 3, scope: !6013)
!6020 = !DILocation(line: 254, column: 2, scope: !6013)
!6021 = !DILocation(line: 256, column: 26, scope: !5944)
!6022 = !DILocation(line: 256, column: 32, scope: !5944)
!6023 = !DILocation(line: 256, column: 2, scope: !5944)
!6024 = !DILocation(line: 258, column: 6, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 258, column: 6)
!6026 = !DILocation(line: 258, column: 12, scope: !6025)
!6027 = !DILocation(line: 258, column: 6, scope: !5944)
!6028 = !DILocation(line: 259, column: 3, scope: !6025)
!6029 = !DILocation(line: 259, column: 9, scope: !6025)
!6030 = !DILocation(line: 259, column: 18, scope: !6025)
!6031 = !DILocation(line: 259, column: 26, scope: !6025)
!6032 = !DILocation(line: 261, column: 2, scope: !5944)
!6033 = !DILocation(line: 261, column: 8, scope: !5944)
!6034 = !DILocation(line: 261, column: 13, scope: !5944)
!6035 = !DILocation(line: 261, column: 21, scope: !5944)
!6036 = !DILocation(line: 261, column: 27, scope: !5944)
!6037 = !DILocation(line: 262, column: 1, scope: !5944)
!6038 = distinct !DISubprogram(name: "mmc_wait_for_req_done", scope: !3, file: !3, line: 397, type: !4948, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6039 = !DILocalVariable(name: "host", arg: 1, scope: !6038, file: !3, line: 397, type: !183)
!6040 = !DILocation(line: 397, column: 45, scope: !6038)
!6041 = !DILocalVariable(name: "mrq", arg: 2, scope: !6038, file: !3, line: 397, type: !4889)
!6042 = !DILocation(line: 397, column: 71, scope: !6038)
!6043 = !DILocalVariable(name: "cmd", scope: !6038, file: !3, line: 399, type: !4894)
!6044 = !DILocation(line: 399, column: 22, scope: !6038)
!6045 = !DILocation(line: 401, column: 2, scope: !6038)
!6046 = !DILocation(line: 402, column: 24, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 401, column: 12)
!6048 = !DILocation(line: 402, column: 29, scope: !6047)
!6049 = !DILocation(line: 402, column: 3, scope: !6047)
!6050 = !DILocation(line: 404, column: 9, scope: !6047)
!6051 = !DILocation(line: 404, column: 14, scope: !6047)
!6052 = !DILocation(line: 404, column: 7, scope: !6047)
!6053 = !DILocation(line: 406, column: 8, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 406, column: 7)
!6055 = !DILocation(line: 406, column: 13, scope: !6054)
!6056 = !DILocation(line: 406, column: 19, scope: !6054)
!6057 = !DILocation(line: 406, column: 23, scope: !6054)
!6058 = !DILocation(line: 406, column: 28, scope: !6054)
!6059 = !DILocation(line: 406, column: 36, scope: !6054)
!6060 = !DILocation(line: 407, column: 7, scope: !6054)
!6061 = !DILocation(line: 406, column: 7, scope: !6047)
!6062 = !DILocation(line: 408, column: 4, scope: !6054)
!6063 = !DILocation(line: 410, column: 22, scope: !6047)
!6064 = !DILocation(line: 410, column: 3, scope: !6047)
!6065 = !DILocation(line: 412, column: 3, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 412, column: 3)
!6067 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 412, column: 3)
!6068 = !DILocation(line: 412, column: 3, scope: !6067)
!6069 = !DILocation(line: 414, column: 3, scope: !6047)
!6070 = !DILocation(line: 414, column: 8, scope: !6047)
!6071 = !DILocation(line: 414, column: 15, scope: !6047)
!6072 = !DILocation(line: 415, column: 3, scope: !6047)
!6073 = !DILocation(line: 415, column: 8, scope: !6047)
!6074 = !DILocation(line: 415, column: 14, scope: !6047)
!6075 = !DILocation(line: 416, column: 23, scope: !6047)
!6076 = !DILocation(line: 416, column: 29, scope: !6047)
!6077 = !DILocation(line: 416, column: 3, scope: !6047)
!6078 = distinct !{!6078, !6045, !6079}
!6079 = !DILocation(line: 417, column: 2, scope: !6038)
!6080 = !DILocation(line: 419, column: 21, scope: !6038)
!6081 = !DILocation(line: 419, column: 2, scope: !6038)
!6082 = !DILocation(line: 420, column: 1, scope: !6038)
!6083 = distinct !DISubprogram(name: "mmc_retune_recheck", scope: !6084, file: !6084, line: 30, type: !4984, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6084 = !DIFile(filename: "drivers/mmc/core/host.h", directory: "/home/lizy2001/genbc/linux")
!6085 = !DILocalVariable(name: "host", arg: 1, scope: !6083, file: !6084, line: 30, type: !183)
!6086 = !DILocation(line: 30, column: 56, scope: !6083)
!6087 = !DILocation(line: 32, column: 6, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6083, file: !6084, line: 32, column: 6)
!6089 = !DILocation(line: 32, column: 12, scope: !6088)
!6090 = !DILocation(line: 32, column: 24, scope: !6088)
!6091 = !DILocation(line: 32, column: 6, scope: !6083)
!6092 = !DILocation(line: 33, column: 3, scope: !6088)
!6093 = !DILocation(line: 33, column: 9, scope: !6088)
!6094 = !DILocation(line: 33, column: 20, scope: !6088)
!6095 = !DILocation(line: 34, column: 1, scope: !6083)
!6096 = distinct !DISubprogram(name: "mmc_cqe_start_req", scope: !3, file: !3, line: 431, type: !4953, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6097 = !DILocalVariable(name: "host", arg: 1, scope: !6096, file: !3, line: 431, type: !183)
!6098 = !DILocation(line: 431, column: 40, scope: !6096)
!6099 = !DILocalVariable(name: "mrq", arg: 2, scope: !6096, file: !3, line: 431, type: !4889)
!6100 = !DILocation(line: 431, column: 66, scope: !6096)
!6101 = !DILocalVariable(name: "err", scope: !6096, file: !3, line: 433, type: !240)
!6102 = !DILocation(line: 433, column: 6, scope: !6096)
!6103 = !DILocation(line: 441, column: 19, scope: !6096)
!6104 = !DILocation(line: 441, column: 8, scope: !6096)
!6105 = !DILocation(line: 441, column: 6, scope: !6096)
!6106 = !DILocation(line: 442, column: 6, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 442, column: 6)
!6108 = !DILocation(line: 442, column: 6, scope: !6096)
!6109 = !DILocation(line: 443, column: 3, scope: !6107)
!6110 = !DILocation(line: 445, column: 14, scope: !6096)
!6111 = !DILocation(line: 445, column: 2, scope: !6096)
!6112 = !DILocation(line: 445, column: 7, scope: !6096)
!6113 = !DILocation(line: 445, column: 12, scope: !6096)
!6114 = !DILocation(line: 447, column: 19, scope: !6096)
!6115 = !DILocation(line: 447, column: 25, scope: !6096)
!6116 = !DILocation(line: 447, column: 2, scope: !6096)
!6117 = !DILocation(line: 449, column: 21, scope: !6096)
!6118 = !DILocation(line: 449, column: 27, scope: !6096)
!6119 = !DILocation(line: 449, column: 8, scope: !6096)
!6120 = !DILocation(line: 449, column: 6, scope: !6096)
!6121 = !DILocation(line: 450, column: 6, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 450, column: 6)
!6123 = !DILocation(line: 450, column: 6, scope: !6096)
!6124 = !DILocation(line: 451, column: 3, scope: !6122)
!6125 = !DILocation(line: 453, column: 8, scope: !6096)
!6126 = !DILocation(line: 453, column: 14, scope: !6096)
!6127 = !DILocation(line: 453, column: 23, scope: !6096)
!6128 = !DILocation(line: 453, column: 35, scope: !6096)
!6129 = !DILocation(line: 453, column: 41, scope: !6096)
!6130 = !DILocation(line: 453, column: 6, scope: !6096)
!6131 = !DILocation(line: 454, column: 6, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 454, column: 6)
!6133 = !DILocation(line: 454, column: 6, scope: !6096)
!6134 = !DILocation(line: 455, column: 3, scope: !6132)
!6135 = !DILocation(line: 457, column: 26, scope: !6096)
!6136 = !DILocation(line: 457, column: 32, scope: !6096)
!6137 = !DILocation(line: 457, column: 2, scope: !6096)
!6138 = !DILocation(line: 459, column: 2, scope: !6096)
!6139 = !DILabel(scope: !6096, name: "out_err", file: !3, line: 461)
!6140 = !DILocation(line: 461, column: 1, scope: !6096)
!6141 = !DILocation(line: 462, column: 6, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 462, column: 6)
!6143 = !DILocation(line: 462, column: 11, scope: !6142)
!6144 = !DILocation(line: 462, column: 6, scope: !6096)
!6145 = !DILocation(line: 463, column: 3, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 463, column: 3)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 463, column: 3)
!6148 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 462, column: 16)
!6149 = !DILocation(line: 463, column: 3, scope: !6147)
!6150 = !DILocation(line: 465, column: 2, scope: !6148)
!6151 = !DILocation(line: 466, column: 3, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 466, column: 3)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 466, column: 3)
!6154 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 465, column: 9)
!6155 = !DILocation(line: 466, column: 3, scope: !6153)
!6156 = !DILocation(line: 469, column: 9, scope: !6096)
!6157 = !DILocation(line: 469, column: 2, scope: !6096)
!6158 = !DILocation(line: 470, column: 1, scope: !6096)
!6159 = distinct !DISubprogram(name: "trace_mmc_request_start", scope: !5673, file: !5673, line: 13, type: !4948, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6160 = !DILocalVariable(name: "host", arg: 1, scope: !6159, file: !5673, line: 13, type: !183)
!6161 = !DILocation(line: 13, column: 1, scope: !6159)
!6162 = !DILocalVariable(name: "mrq", arg: 2, scope: !6159, file: !5673, line: 13, type: !4889)
!6163 = distinct !DISubprogram(name: "mmc_cqe_request_done", scope: !3, file: !3, line: 481, type: !4948, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6164 = !DILocalVariable(name: "host", arg: 1, scope: !6163, file: !3, line: 481, type: !183)
!6165 = !DILocation(line: 481, column: 44, scope: !6163)
!6166 = !DILocalVariable(name: "mrq", arg: 2, scope: !6163, file: !3, line: 481, type: !4889)
!6167 = !DILocation(line: 481, column: 70, scope: !6163)
!6168 = !DILocation(line: 483, column: 26, scope: !6163)
!6169 = !DILocation(line: 483, column: 32, scope: !6163)
!6170 = !DILocation(line: 483, column: 2, scope: !6163)
!6171 = !DILocation(line: 486, column: 7, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 486, column: 6)
!6173 = !DILocation(line: 486, column: 12, scope: !6172)
!6174 = !DILocation(line: 486, column: 16, scope: !6172)
!6175 = !DILocation(line: 486, column: 19, scope: !6172)
!6176 = !DILocation(line: 486, column: 24, scope: !6172)
!6177 = !DILocation(line: 486, column: 29, scope: !6172)
!6178 = !DILocation(line: 486, column: 35, scope: !6172)
!6179 = !DILocation(line: 486, column: 47, scope: !6172)
!6180 = !DILocation(line: 487, column: 7, scope: !6172)
!6181 = !DILocation(line: 487, column: 12, scope: !6172)
!6182 = !DILocation(line: 487, column: 17, scope: !6172)
!6183 = !DILocation(line: 487, column: 20, scope: !6172)
!6184 = !DILocation(line: 487, column: 25, scope: !6172)
!6185 = !DILocation(line: 487, column: 31, scope: !6172)
!6186 = !DILocation(line: 487, column: 37, scope: !6172)
!6187 = !DILocation(line: 486, column: 6, scope: !6163)
!6188 = !DILocation(line: 488, column: 21, scope: !6172)
!6189 = !DILocation(line: 488, column: 3, scope: !6172)
!6190 = !DILocation(line: 490, column: 25, scope: !6163)
!6191 = !DILocation(line: 490, column: 31, scope: !6163)
!6192 = !DILocation(line: 490, column: 2, scope: !6163)
!6193 = !DILocation(line: 492, column: 6, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 492, column: 6)
!6195 = !DILocation(line: 492, column: 11, scope: !6194)
!6196 = !DILocation(line: 492, column: 6, scope: !6163)
!6197 = !DILocation(line: 493, column: 3, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 493, column: 3)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 493, column: 3)
!6200 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 492, column: 16)
!6201 = !DILocation(line: 493, column: 3, scope: !6199)
!6202 = !DILocation(line: 495, column: 2, scope: !6200)
!6203 = !DILocation(line: 496, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 496, column: 3)
!6205 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 496, column: 3)
!6206 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 495, column: 9)
!6207 = !DILocation(line: 496, column: 3, scope: !6205)
!6208 = !DILocation(line: 500, column: 6, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 500, column: 6)
!6210 = !DILocation(line: 500, column: 11, scope: !6209)
!6211 = !DILocation(line: 500, column: 6, scope: !6163)
!6212 = !DILocation(line: 501, column: 3, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 501, column: 3)
!6214 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 501, column: 3)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 500, column: 17)
!6216 = !DILocation(line: 501, column: 3, scope: !6214)
!6217 = !DILocation(line: 504, column: 2, scope: !6215)
!6218 = !DILocation(line: 506, column: 2, scope: !6163)
!6219 = !DILocation(line: 506, column: 7, scope: !6163)
!6220 = !DILocation(line: 506, column: 12, scope: !6163)
!6221 = !DILocation(line: 507, column: 1, scope: !6163)
!6222 = distinct !DISubprogram(name: "mmc_cqe_post_req", scope: !3, file: !3, line: 515, type: !4948, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6223 = !DILocalVariable(name: "host", arg: 1, scope: !6222, file: !3, line: 515, type: !183)
!6224 = !DILocation(line: 515, column: 40, scope: !6222)
!6225 = !DILocalVariable(name: "mrq", arg: 2, scope: !6222, file: !3, line: 515, type: !4889)
!6226 = !DILocation(line: 515, column: 66, scope: !6222)
!6227 = !DILocation(line: 517, column: 6, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 517, column: 6)
!6229 = !DILocation(line: 517, column: 12, scope: !6228)
!6230 = !DILocation(line: 517, column: 21, scope: !6228)
!6231 = !DILocation(line: 517, column: 6, scope: !6222)
!6232 = !DILocation(line: 518, column: 3, scope: !6228)
!6233 = !DILocation(line: 518, column: 9, scope: !6228)
!6234 = !DILocation(line: 518, column: 18, scope: !6228)
!6235 = !DILocation(line: 518, column: 31, scope: !6228)
!6236 = !DILocation(line: 518, column: 37, scope: !6228)
!6237 = !DILocation(line: 519, column: 1, scope: !6222)
!6238 = distinct !DISubprogram(name: "mmc_cqe_recovery", scope: !3, file: !3, line: 534, type: !4975, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6239 = !DILocalVariable(name: "host", arg: 1, scope: !6238, file: !3, line: 534, type: !183)
!6240 = !DILocation(line: 534, column: 39, scope: !6238)
!6241 = !DILocalVariable(name: "cmd", scope: !6238, file: !3, line: 536, type: !4895)
!6242 = !DILocation(line: 536, column: 21, scope: !6238)
!6243 = !DILocalVariable(name: "err", scope: !6238, file: !3, line: 537, type: !240)
!6244 = !DILocation(line: 537, column: 6, scope: !6238)
!6245 = !DILocation(line: 539, column: 22, scope: !6238)
!6246 = !DILocation(line: 539, column: 2, scope: !6238)
!6247 = !DILocation(line: 545, column: 2, scope: !6238)
!6248 = !DILocation(line: 547, column: 2, scope: !6238)
!6249 = !DILocation(line: 547, column: 8, scope: !6238)
!6250 = !DILocation(line: 547, column: 17, scope: !6238)
!6251 = !DILocation(line: 547, column: 36, scope: !6238)
!6252 = !DILocation(line: 549, column: 2, scope: !6238)
!6253 = !DILocation(line: 550, column: 6, scope: !6238)
!6254 = !DILocation(line: 550, column: 19, scope: !6238)
!6255 = !DILocation(line: 551, column: 6, scope: !6238)
!6256 = !DILocation(line: 551, column: 19, scope: !6238)
!6257 = !DILocation(line: 552, column: 6, scope: !6238)
!6258 = !DILocation(line: 552, column: 18, scope: !6238)
!6259 = !DILocation(line: 553, column: 6, scope: !6238)
!6260 = !DILocation(line: 553, column: 19, scope: !6238)
!6261 = !DILocation(line: 554, column: 19, scope: !6238)
!6262 = !DILocation(line: 554, column: 2, scope: !6238)
!6263 = !DILocation(line: 556, column: 2, scope: !6238)
!6264 = !DILocation(line: 557, column: 6, scope: !6238)
!6265 = !DILocation(line: 557, column: 19, scope: !6238)
!6266 = !DILocation(line: 558, column: 6, scope: !6238)
!6267 = !DILocation(line: 558, column: 19, scope: !6238)
!6268 = !DILocation(line: 559, column: 6, scope: !6238)
!6269 = !DILocation(line: 559, column: 19, scope: !6238)
!6270 = !DILocation(line: 560, column: 6, scope: !6238)
!6271 = !DILocation(line: 560, column: 18, scope: !6238)
!6272 = !DILocation(line: 561, column: 6, scope: !6238)
!6273 = !DILocation(line: 561, column: 19, scope: !6238)
!6274 = !DILocation(line: 562, column: 25, scope: !6238)
!6275 = !DILocation(line: 562, column: 8, scope: !6238)
!6276 = !DILocation(line: 562, column: 6, scope: !6238)
!6277 = !DILocation(line: 564, column: 2, scope: !6238)
!6278 = !DILocation(line: 564, column: 8, scope: !6238)
!6279 = !DILocation(line: 564, column: 17, scope: !6238)
!6280 = !DILocation(line: 564, column: 37, scope: !6238)
!6281 = !DILocation(line: 566, column: 21, scope: !6238)
!6282 = !DILocation(line: 566, column: 2, scope: !6238)
!6283 = !DILocation(line: 568, column: 9, scope: !6238)
!6284 = !DILocation(line: 568, column: 2, scope: !6238)
!6285 = distinct !DISubprogram(name: "mmc_retune_hold_now", scope: !6084, file: !6084, line: 24, type: !4984, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6286 = !DILocalVariable(name: "host", arg: 1, scope: !6285, file: !6084, line: 24, type: !183)
!6287 = !DILocation(line: 24, column: 57, scope: !6285)
!6288 = !DILocation(line: 26, column: 2, scope: !6285)
!6289 = !DILocation(line: 26, column: 8, scope: !6285)
!6290 = !DILocation(line: 26, column: 19, scope: !6285)
!6291 = !DILocation(line: 27, column: 2, scope: !6285)
!6292 = !DILocation(line: 27, column: 8, scope: !6285)
!6293 = !DILocation(line: 27, column: 20, scope: !6285)
!6294 = !DILocation(line: 28, column: 1, scope: !6285)
!6295 = distinct !DISubprogram(name: "dev_name", scope: !115, file: !115, line: 609, type: !6296, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!196, !4752}
!6298 = !DILocalVariable(name: "dev", arg: 1, scope: !6295, file: !115, line: 609, type: !4752)
!6299 = !DILocation(line: 609, column: 57, scope: !6295)
!6300 = !DILocation(line: 612, column: 6, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6295, file: !115, line: 612, column: 6)
!6302 = !DILocation(line: 612, column: 11, scope: !6301)
!6303 = !DILocation(line: 612, column: 6, scope: !6295)
!6304 = !DILocation(line: 613, column: 10, scope: !6301)
!6305 = !DILocation(line: 613, column: 15, scope: !6301)
!6306 = !DILocation(line: 613, column: 3, scope: !6301)
!6307 = !DILocation(line: 615, column: 23, scope: !6295)
!6308 = !DILocation(line: 615, column: 28, scope: !6295)
!6309 = !DILocation(line: 615, column: 9, scope: !6295)
!6310 = !DILocation(line: 615, column: 2, scope: !6295)
!6311 = !DILocation(line: 616, column: 1, scope: !6295)
!6312 = distinct !DISubprogram(name: "mmc_wait_for_cmd", scope: !3, file: !3, line: 621, type: !6313, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!240, !183, !4894, !240}
!6315 = !DILocalVariable(name: "host", arg: 1, scope: !6312, file: !3, line: 621, type: !183)
!6316 = !DILocation(line: 621, column: 39, scope: !6312)
!6317 = !DILocalVariable(name: "cmd", arg: 2, scope: !6312, file: !3, line: 621, type: !4894)
!6318 = !DILocation(line: 621, column: 65, scope: !6312)
!6319 = !DILocalVariable(name: "retries", arg: 3, scope: !6312, file: !3, line: 621, type: !240)
!6320 = !DILocation(line: 621, column: 74, scope: !6312)
!6321 = !DILocalVariable(name: "mrq", scope: !6312, file: !3, line: 623, type: !4890)
!6322 = !DILocation(line: 623, column: 21, scope: !6312)
!6323 = !DILocalVariable(name: "__ret_warn_on", scope: !6324, file: !3, line: 625, type: !240)
!6324 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 625, column: 2)
!6325 = !DILocation(line: 625, column: 2, scope: !6324)
!6326 = !DILocation(line: 625, column: 2, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 625, column: 2)
!6328 = !DILocation(line: 625, column: 2, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 625, column: 2)
!6330 = !DILocation(line: 625, column: 2, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 625, column: 2)
!6332 = !DILocation(line: 625, column: 2, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 625, column: 2)
!6334 = !{i32 -2140483738, i32 -2140483709, i32 -2140483663, i32 -2140483605, i32 -2140483551, i32 -2140483497, i32 -2140483442, i32 -2140483411}
!6335 = !DILocation(line: 625, column: 2, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 625, column: 2)
!6337 = !{i32 -2140483006, i32 -2140482999, i32 -2140482947, i32 -2140482916, i32 -2140482886}
!6338 = !DILocation(line: 625, column: 2, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 625, column: 2)
!6340 = !DILocation(line: 627, column: 9, scope: !6312)
!6341 = !DILocation(line: 627, column: 14, scope: !6312)
!6342 = !DILocation(line: 627, column: 2, scope: !6312)
!6343 = !DILocation(line: 628, column: 17, scope: !6312)
!6344 = !DILocation(line: 628, column: 2, scope: !6312)
!6345 = !DILocation(line: 628, column: 7, scope: !6312)
!6346 = !DILocation(line: 628, column: 15, scope: !6312)
!6347 = !DILocation(line: 630, column: 12, scope: !6312)
!6348 = !DILocation(line: 630, column: 6, scope: !6312)
!6349 = !DILocation(line: 630, column: 10, scope: !6312)
!6350 = !DILocation(line: 631, column: 2, scope: !6312)
!6351 = !DILocation(line: 631, column: 7, scope: !6312)
!6352 = !DILocation(line: 631, column: 12, scope: !6312)
!6353 = !DILocation(line: 633, column: 19, scope: !6312)
!6354 = !DILocation(line: 633, column: 2, scope: !6312)
!6355 = !DILocation(line: 635, column: 9, scope: !6312)
!6356 = !DILocation(line: 635, column: 14, scope: !6312)
!6357 = !DILocation(line: 635, column: 2, scope: !6312)
!6358 = distinct !DISubprogram(name: "mmc_is_req_done", scope: !3, file: !3, line: 584, type: !6359, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6359 = !DISubroutineType(types: !6360)
!6360 = !{!471, !183, !4889}
!6361 = !DILocalVariable(name: "host", arg: 1, scope: !6358, file: !3, line: 584, type: !183)
!6362 = !DILocation(line: 584, column: 39, scope: !6358)
!6363 = !DILocalVariable(name: "mrq", arg: 2, scope: !6358, file: !3, line: 584, type: !4889)
!6364 = !DILocation(line: 584, column: 65, scope: !6358)
!6365 = !DILocation(line: 586, column: 26, scope: !6358)
!6366 = !DILocation(line: 586, column: 31, scope: !6358)
!6367 = !DILocation(line: 586, column: 9, scope: !6358)
!6368 = !DILocation(line: 586, column: 2, scope: !6358)
!6369 = distinct !DISubprogram(name: "mmc_wait_for_req", scope: !3, file: !3, line: 602, type: !4948, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6370 = !DILocalVariable(name: "host", arg: 1, scope: !6369, file: !3, line: 602, type: !183)
!6371 = !DILocation(line: 602, column: 40, scope: !6369)
!6372 = !DILocalVariable(name: "mrq", arg: 2, scope: !6369, file: !3, line: 602, type: !4889)
!6373 = !DILocation(line: 602, column: 66, scope: !6369)
!6374 = !DILocation(line: 604, column: 18, scope: !6369)
!6375 = !DILocation(line: 604, column: 24, scope: !6369)
!6376 = !DILocation(line: 604, column: 2, scope: !6369)
!6377 = !DILocation(line: 606, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 606, column: 6)
!6379 = !DILocation(line: 606, column: 12, scope: !6378)
!6380 = !DILocation(line: 606, column: 6, scope: !6369)
!6381 = !DILocation(line: 607, column: 25, scope: !6378)
!6382 = !DILocation(line: 607, column: 31, scope: !6378)
!6383 = !DILocation(line: 607, column: 3, scope: !6378)
!6384 = !DILocation(line: 608, column: 1, scope: !6369)
!6385 = distinct !DISubprogram(name: "__mmc_start_req", scope: !3, file: !3, line: 378, type: !4953, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6386 = !DILocalVariable(name: "host", arg: 1, scope: !6385, file: !3, line: 378, type: !183)
!6387 = !DILocation(line: 378, column: 45, scope: !6385)
!6388 = !DILocalVariable(name: "mrq", arg: 2, scope: !6385, file: !3, line: 378, type: !4889)
!6389 = !DILocation(line: 378, column: 71, scope: !6385)
!6390 = !DILocalVariable(name: "err", scope: !6385, file: !3, line: 380, type: !240)
!6391 = !DILocation(line: 380, column: 6, scope: !6385)
!6392 = !DILocation(line: 382, column: 27, scope: !6385)
!6393 = !DILocation(line: 382, column: 2, scope: !6385)
!6394 = !DILocation(line: 384, column: 2, scope: !6385)
!6395 = !DILocation(line: 385, column: 2, scope: !6385)
!6396 = !DILocation(line: 385, column: 7, scope: !6385)
!6397 = !DILocation(line: 385, column: 12, scope: !6385)
!6398 = !DILocation(line: 387, column: 26, scope: !6385)
!6399 = !DILocation(line: 387, column: 32, scope: !6385)
!6400 = !DILocation(line: 387, column: 8, scope: !6385)
!6401 = !DILocation(line: 387, column: 6, scope: !6385)
!6402 = !DILocation(line: 388, column: 6, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 388, column: 6)
!6404 = !DILocation(line: 388, column: 6, scope: !6385)
!6405 = !DILocation(line: 389, column: 21, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 388, column: 11)
!6407 = !DILocation(line: 389, column: 3, scope: !6406)
!6408 = !DILocation(line: 389, column: 8, scope: !6406)
!6409 = !DILocation(line: 389, column: 13, scope: !6406)
!6410 = !DILocation(line: 389, column: 19, scope: !6406)
!6411 = !DILocation(line: 390, column: 20, scope: !6406)
!6412 = !DILocation(line: 390, column: 3, scope: !6406)
!6413 = !DILocation(line: 391, column: 13, scope: !6406)
!6414 = !DILocation(line: 391, column: 18, scope: !6406)
!6415 = !DILocation(line: 391, column: 3, scope: !6406)
!6416 = !DILocation(line: 392, column: 2, scope: !6406)
!6417 = !DILocation(line: 394, column: 9, scope: !6385)
!6418 = !DILocation(line: 394, column: 2, scope: !6385)
!6419 = distinct !DISubprogram(name: "mmc_set_data_timeout", scope: !3, file: !3, line: 648, type: !6420, scopeLine: 649, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{null, !4906, !6422}
!6422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6423, size: 64)
!6423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4991)
!6424 = !DILocalVariable(name: "data", arg: 1, scope: !6419, file: !3, line: 648, type: !4906)
!6425 = !DILocation(line: 648, column: 44, scope: !6419)
!6426 = !DILocalVariable(name: "card", arg: 2, scope: !6419, file: !3, line: 648, type: !6422)
!6427 = !DILocation(line: 648, column: 73, scope: !6419)
!6428 = !DILocalVariable(name: "mult", scope: !6419, file: !3, line: 650, type: !7)
!6429 = !DILocation(line: 650, column: 15, scope: !6419)
!6430 = !DILocation(line: 655, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 655, column: 6)
!6432 = !DILocation(line: 655, column: 6, scope: !6419)
!6433 = !DILocation(line: 656, column: 3, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 655, column: 27)
!6435 = !DILocation(line: 656, column: 9, scope: !6434)
!6436 = !DILocation(line: 656, column: 20, scope: !6434)
!6437 = !DILocation(line: 657, column: 3, scope: !6434)
!6438 = !DILocation(line: 657, column: 9, scope: !6434)
!6439 = !DILocation(line: 657, column: 22, scope: !6434)
!6440 = !DILocation(line: 658, column: 3, scope: !6434)
!6441 = !DILocation(line: 664, column: 9, scope: !6419)
!6442 = !DILocation(line: 664, column: 7, scope: !6419)
!6443 = !DILocation(line: 670, column: 6, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 670, column: 6)
!6445 = !DILocation(line: 670, column: 12, scope: !6444)
!6446 = !DILocation(line: 670, column: 18, scope: !6444)
!6447 = !DILocation(line: 670, column: 6, scope: !6419)
!6448 = !DILocation(line: 671, column: 12, scope: !6444)
!6449 = !DILocation(line: 671, column: 18, scope: !6444)
!6450 = !DILocation(line: 671, column: 22, scope: !6444)
!6451 = !DILocation(line: 671, column: 8, scope: !6444)
!6452 = !DILocation(line: 671, column: 3, scope: !6444)
!6453 = !DILocation(line: 673, column: 21, scope: !6419)
!6454 = !DILocation(line: 673, column: 27, scope: !6419)
!6455 = !DILocation(line: 673, column: 31, scope: !6419)
!6456 = !DILocation(line: 673, column: 41, scope: !6419)
!6457 = !DILocation(line: 673, column: 39, scope: !6419)
!6458 = !DILocation(line: 673, column: 2, scope: !6419)
!6459 = !DILocation(line: 673, column: 8, scope: !6419)
!6460 = !DILocation(line: 673, column: 19, scope: !6419)
!6461 = !DILocation(line: 674, column: 23, scope: !6419)
!6462 = !DILocation(line: 674, column: 29, scope: !6419)
!6463 = !DILocation(line: 674, column: 33, scope: !6419)
!6464 = !DILocation(line: 674, column: 45, scope: !6419)
!6465 = !DILocation(line: 674, column: 43, scope: !6419)
!6466 = !DILocation(line: 674, column: 2, scope: !6419)
!6467 = !DILocation(line: 674, column: 8, scope: !6419)
!6468 = !DILocation(line: 674, column: 21, scope: !6419)
!6469 = !DILocation(line: 679, column: 6, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 679, column: 6)
!6471 = !DILocation(line: 679, column: 6, scope: !6419)
!6472 = !DILocalVariable(name: "timeout_us", scope: !6473, file: !3, line: 680, type: !7)
!6473 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 679, column: 25)
!6474 = !DILocation(line: 680, column: 16, scope: !6473)
!6475 = !DILocalVariable(name: "limit_us", scope: !6473, file: !3, line: 680, type: !7)
!6476 = !DILocation(line: 680, column: 28, scope: !6473)
!6477 = !DILocation(line: 682, column: 16, scope: !6473)
!6478 = !DILocation(line: 682, column: 22, scope: !6473)
!6479 = !DILocation(line: 682, column: 33, scope: !6473)
!6480 = !DILocation(line: 682, column: 14, scope: !6473)
!6481 = !DILocation(line: 683, column: 7, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 683, column: 7)
!6483 = !DILocation(line: 683, column: 13, scope: !6482)
!6484 = !DILocation(line: 683, column: 19, scope: !6482)
!6485 = !DILocation(line: 683, column: 23, scope: !6482)
!6486 = !DILocation(line: 683, column: 7, scope: !6473)
!6487 = !DILocation(line: 684, column: 18, scope: !6482)
!6488 = !DILocation(line: 684, column: 24, scope: !6482)
!6489 = !DILocation(line: 684, column: 37, scope: !6482)
!6490 = !DILocation(line: 685, column: 6, scope: !6482)
!6491 = !DILocation(line: 685, column: 12, scope: !6482)
!6492 = !DILocation(line: 685, column: 18, scope: !6482)
!6493 = !DILocation(line: 685, column: 22, scope: !6482)
!6494 = !DILocation(line: 685, column: 28, scope: !6482)
!6495 = !DILocation(line: 684, column: 44, scope: !6482)
!6496 = !DILocation(line: 684, column: 15, scope: !6482)
!6497 = !DILocation(line: 684, column: 4, scope: !6482)
!6498 = !DILocation(line: 687, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 687, column: 7)
!6500 = !DILocation(line: 687, column: 13, scope: !6499)
!6501 = !DILocation(line: 687, column: 19, scope: !6499)
!6502 = !DILocation(line: 687, column: 7, scope: !6473)
!6503 = !DILocation(line: 696, column: 13, scope: !6499)
!6504 = !DILocation(line: 696, column: 4, scope: !6499)
!6505 = !DILocation(line: 698, column: 13, scope: !6499)
!6506 = !DILocation(line: 703, column: 7, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 703, column: 7)
!6508 = !DILocation(line: 703, column: 20, scope: !6507)
!6509 = !DILocation(line: 703, column: 18, scope: !6507)
!6510 = !DILocation(line: 703, column: 7, scope: !6473)
!6511 = !DILocation(line: 704, column: 23, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 703, column: 30)
!6513 = !DILocation(line: 704, column: 32, scope: !6512)
!6514 = !DILocation(line: 704, column: 4, scope: !6512)
!6515 = !DILocation(line: 704, column: 10, scope: !6512)
!6516 = !DILocation(line: 704, column: 21, scope: !6512)
!6517 = !DILocation(line: 705, column: 4, scope: !6512)
!6518 = !DILocation(line: 705, column: 10, scope: !6512)
!6519 = !DILocation(line: 705, column: 23, scope: !6512)
!6520 = !DILocation(line: 706, column: 3, scope: !6512)
!6521 = !DILocation(line: 709, column: 7, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 709, column: 7)
!6523 = !DILocation(line: 709, column: 18, scope: !6522)
!6524 = !DILocation(line: 709, column: 7, scope: !6473)
!6525 = !DILocation(line: 710, column: 23, scope: !6522)
!6526 = !DILocation(line: 710, column: 32, scope: !6522)
!6527 = !DILocation(line: 710, column: 4, scope: !6522)
!6528 = !DILocation(line: 710, column: 10, scope: !6522)
!6529 = !DILocation(line: 710, column: 21, scope: !6522)
!6530 = !DILocation(line: 711, column: 2, scope: !6473)
!6531 = !DILocation(line: 719, column: 30, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 719, column: 6)
!6533 = !DILocation(line: 719, column: 6, scope: !6532)
!6534 = !DILocation(line: 719, column: 36, scope: !6532)
!6535 = !DILocation(line: 719, column: 39, scope: !6532)
!6536 = !DILocation(line: 719, column: 45, scope: !6532)
!6537 = !DILocation(line: 719, column: 51, scope: !6532)
!6538 = !DILocation(line: 719, column: 6, scope: !6419)
!6539 = !DILocation(line: 720, column: 3, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 719, column: 68)
!6541 = !DILocation(line: 720, column: 9, scope: !6540)
!6542 = !DILocation(line: 720, column: 20, scope: !6540)
!6543 = !DILocation(line: 721, column: 3, scope: !6540)
!6544 = !DILocation(line: 721, column: 9, scope: !6540)
!6545 = !DILocation(line: 721, column: 22, scope: !6540)
!6546 = !DILocation(line: 722, column: 2, scope: !6540)
!6547 = !DILocation(line: 730, column: 6, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 730, column: 6)
!6549 = !DILocation(line: 730, column: 6, scope: !6419)
!6550 = !DILocation(line: 731, column: 7, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !3, line: 731, column: 7)
!6552 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 730, column: 35)
!6553 = !DILocation(line: 731, column: 13, scope: !6551)
!6554 = !DILocation(line: 731, column: 19, scope: !6551)
!6555 = !DILocation(line: 731, column: 7, scope: !6552)
!6556 = !DILocation(line: 732, column: 8, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 732, column: 8)
!6558 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 731, column: 37)
!6559 = !DILocation(line: 732, column: 14, scope: !6557)
!6560 = !DILocation(line: 732, column: 25, scope: !6557)
!6561 = !DILocation(line: 732, column: 8, scope: !6558)
!6562 = !DILocation(line: 733, column: 5, scope: !6557)
!6563 = !DILocation(line: 733, column: 11, scope: !6557)
!6564 = !DILocation(line: 733, column: 22, scope: !6557)
!6565 = !DILocation(line: 734, column: 3, scope: !6558)
!6566 = !DILocation(line: 735, column: 8, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 735, column: 8)
!6568 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 734, column: 10)
!6569 = !DILocation(line: 735, column: 14, scope: !6567)
!6570 = !DILocation(line: 735, column: 25, scope: !6567)
!6571 = !DILocation(line: 735, column: 8, scope: !6568)
!6572 = !DILocation(line: 736, column: 5, scope: !6567)
!6573 = !DILocation(line: 736, column: 11, scope: !6567)
!6574 = !DILocation(line: 736, column: 22, scope: !6567)
!6575 = !DILocation(line: 738, column: 2, scope: !6552)
!6576 = !DILocation(line: 739, column: 1, scope: !6419)
!6577 = distinct !DISubprogram(name: "mmc_card_long_read_time", scope: !6578, file: !6578, line: 210, type: !6579, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6578 = !DIFile(filename: "drivers/mmc/core/card.h", directory: "/home/lizy2001/genbc/linux")
!6579 = !DISubroutineType(types: !6580)
!6580 = !{!240, !6422}
!6581 = !DILocalVariable(name: "c", arg: 1, scope: !6577, file: !6578, line: 210, type: !6422)
!6582 = !DILocation(line: 210, column: 66, scope: !6577)
!6583 = !DILocation(line: 212, column: 9, scope: !6577)
!6584 = !DILocation(line: 212, column: 12, scope: !6577)
!6585 = !DILocation(line: 212, column: 19, scope: !6577)
!6586 = !DILocation(line: 212, column: 2, scope: !6577)
!6587 = distinct !DISubprogram(name: "__mmc_claim_host", scope: !3, file: !3, line: 779, type: !6588, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{!240, !183, !5302, !6590}
!6590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!6591 = !DILocalVariable(name: "lock", arg: 1, scope: !6592, file: !6593, line: 407, type: !2056)
!6592 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6593, file: !6593, line: 407, type: !6594, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6593 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6594 = !DISubroutineType(types: !6595)
!6595 = !{null, !2056, !305}
!6596 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !6597)
!6597 = distinct !DILocation(line: 810, column: 2, scope: !6587)
!6598 = !DILocalVariable(name: "flags", arg: 2, scope: !6592, file: !6593, line: 407, type: !305)
!6599 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !6597)
!6600 = !DILocalVariable(name: "pscr_ret__", scope: !6601, file: !6602, line: 15, type: !2199)
!6601 = distinct !DILexicalBlock(scope: !6603, file: !6602, line: 15, column: 9)
!6602 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!6603 = distinct !DISubprogram(name: "get_current", scope: !6602, file: !6602, line: 13, type: !6604, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!2199}
!6606 = !DILocation(line: 15, column: 9, scope: !6601, inlinedAt: !6607)
!6607 = distinct !DILocation(line: 801, column: 2, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 801, column: 2)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 801, column: 2)
!6610 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 801, column: 2)
!6611 = !DILocalVariable(name: "__vpp_verify", scope: !6612, file: !6602, line: 15, type: !3228)
!6612 = distinct !DILexicalBlock(scope: !6601, file: !6602, line: 15, column: 9)
!6613 = !DILocation(line: 15, column: 9, scope: !6612, inlinedAt: !6607)
!6614 = !DILocalVariable(name: "pfo_val__", scope: !6615, file: !6602, line: 15, type: !402)
!6615 = distinct !DILexicalBlock(scope: !6601, file: !6602, line: 15, column: 9)
!6616 = !DILocation(line: 15, column: 9, scope: !6615, inlinedAt: !6607)
!6617 = !DILocalVariable(name: "lock", arg: 1, scope: !6618, file: !6593, line: 327, type: !2056)
!6618 = distinct !DISubprogram(name: "spinlock_check", scope: !6593, file: !6593, line: 327, type: !6619, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6619 = !DISubroutineType(types: !6620)
!6620 = !{!6621, !2056}
!6621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!6622 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !6623)
!6623 = distinct !DILocation(line: 799, column: 3, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 799, column: 3)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 799, column: 3)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 799, column: 3)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 799, column: 3)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 799, column: 3)
!6629 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 792, column: 12)
!6630 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !6631)
!6631 = distinct !DILocation(line: 797, column: 3, scope: !6629)
!6632 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !6631)
!6633 = !DILocalVariable(name: "v", arg: 1, scope: !6634, file: !6635, line: 23, type: !6638)
!6634 = distinct !DISubprogram(name: "arch_atomic_read", scope: !6635, file: !6635, line: 23, type: !6636, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6635 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!6636 = !DISubroutineType(types: !6637)
!6637 = !{!240, !6638}
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!6640 = !DILocation(line: 23, column: 61, scope: !6634, inlinedAt: !6641)
!6641 = distinct !DILocation(line: 28, column: 9, scope: !6642, inlinedAt: !6644)
!6642 = distinct !DISubprogram(name: "atomic_read", scope: !6643, file: !6643, line: 25, type: !6636, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6643 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6644 = distinct !DILocation(line: 794, column: 18, scope: !6629)
!6645 = !DILocalVariable(name: "v", arg: 1, scope: !6646, file: !6647, line: 69, type: !6650)
!6646 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6647, file: !6647, line: 69, type: !6648, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6647 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6648 = !DISubroutineType(types: !6649)
!6649 = !{null, !6650, !302}
!6650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6651, size: 64)
!6651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6652)
!6652 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6653 = !DILocation(line: 69, column: 73, scope: !6646, inlinedAt: !6654)
!6654 = distinct !DILocation(line: 27, column: 2, scope: !6642, inlinedAt: !6644)
!6655 = !DILocalVariable(name: "size", arg: 2, scope: !6646, file: !6647, line: 69, type: !302)
!6656 = !DILocation(line: 69, column: 83, scope: !6646, inlinedAt: !6654)
!6657 = !DILocalVariable(name: "v", arg: 1, scope: !6642, file: !6643, line: 25, type: !6638)
!6658 = !DILocation(line: 25, column: 29, scope: !6642, inlinedAt: !6644)
!6659 = !DILocation(line: 15, column: 9, scope: !6601, inlinedAt: !6660)
!6660 = distinct !DILocation(line: 793, column: 3, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 793, column: 3)
!6662 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 793, column: 3)
!6663 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 793, column: 3)
!6664 = !DILocation(line: 15, column: 9, scope: !6612, inlinedAt: !6660)
!6665 = !DILocation(line: 15, column: 9, scope: !6615, inlinedAt: !6660)
!6666 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !6667)
!6667 = distinct !DILocation(line: 791, column: 2, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 791, column: 2)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 791, column: 2)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 791, column: 2)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 791, column: 2)
!6672 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 791, column: 2)
!6673 = !DILocation(line: 15, column: 9, scope: !6601, inlinedAt: !6674)
!6674 = distinct !DILocation(line: 783, column: 2, scope: !6587)
!6675 = !DILocation(line: 15, column: 9, scope: !6612, inlinedAt: !6674)
!6676 = !DILocation(line: 15, column: 9, scope: !6615, inlinedAt: !6674)
!6677 = !DILocation(line: 15, column: 9, scope: !6601, inlinedAt: !6678)
!6678 = distinct !DILocation(line: 782, column: 42, scope: !6587)
!6679 = !DILocation(line: 15, column: 9, scope: !6612, inlinedAt: !6678)
!6680 = !DILocation(line: 15, column: 9, scope: !6615, inlinedAt: !6678)
!6681 = !DILocalVariable(name: "host", arg: 1, scope: !6587, file: !3, line: 779, type: !183)
!6682 = !DILocation(line: 779, column: 39, scope: !6587)
!6683 = !DILocalVariable(name: "ctx", arg: 2, scope: !6587, file: !3, line: 779, type: !5302)
!6684 = !DILocation(line: 779, column: 61, scope: !6587)
!6685 = !DILocalVariable(name: "abort", arg: 3, scope: !6587, file: !3, line: 780, type: !6590)
!6686 = !DILocation(line: 780, column: 18, scope: !6587)
!6687 = !DILocalVariable(name: "task", scope: !6587, file: !3, line: 782, type: !2199)
!6688 = !DILocation(line: 782, column: 22, scope: !6587)
!6689 = !DILocation(line: 782, column: 29, scope: !6587)
!6690 = !{i32 -2146170124}
!6691 = !DILocalVariable(name: "wait", scope: !6587, file: !3, line: 783, type: !923)
!6692 = !DILocation(line: 783, column: 2, scope: !6587)
!6693 = !DILocalVariable(name: "flags", scope: !6587, file: !3, line: 784, type: !305)
!6694 = !DILocation(line: 784, column: 16, scope: !6587)
!6695 = !DILocalVariable(name: "stop", scope: !6587, file: !3, line: 785, type: !240)
!6696 = !DILocation(line: 785, column: 6, scope: !6587)
!6697 = !DILocalVariable(name: "pm", scope: !6587, file: !3, line: 786, type: !471)
!6698 = !DILocation(line: 786, column: 7, scope: !6587)
!6699 = !DILocation(line: 788, column: 2, scope: !6587)
!6700 = !DILocation(line: 788, column: 2, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 788, column: 2)
!6702 = !DILocation(line: 788, column: 2, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 788, column: 2)
!6704 = !DILocation(line: 790, column: 18, scope: !6587)
!6705 = !DILocation(line: 790, column: 24, scope: !6587)
!6706 = !DILocation(line: 790, column: 2, scope: !6587)
!6707 = !DILocation(line: 791, column: 2, scope: !6587)
!6708 = !DILocation(line: 791, column: 2, scope: !6672)
!6709 = !DILocalVariable(name: "__dummy", scope: !6710, file: !3, line: 791, type: !305)
!6710 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 791, column: 2)
!6711 = !DILocation(line: 791, column: 2, scope: !6710)
!6712 = !DILocalVariable(name: "__dummy2", scope: !6710, file: !3, line: 791, type: !305)
!6713 = !DILocation(line: 791, column: 2, scope: !6671)
!6714 = !DILocation(line: 791, column: 2, scope: !6670)
!6715 = !DILocation(line: 791, column: 2, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 791, column: 2)
!6717 = !DILocalVariable(name: "__dummy", scope: !6718, file: !3, line: 791, type: !305)
!6718 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 791, column: 2)
!6719 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 791, column: 2)
!6720 = !DILocation(line: 791, column: 2, scope: !6718)
!6721 = !DILocalVariable(name: "__dummy2", scope: !6718, file: !3, line: 791, type: !305)
!6722 = !DILocation(line: 791, column: 2, scope: !6719)
!6723 = !DILocation(line: 791, column: 2, scope: !6669)
!6724 = !{i32 -2140480574}
!6725 = !DILocation(line: 791, column: 2, scope: !6668)
!6726 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !6667)
!6727 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !6667)
!6728 = !DILocation(line: 792, column: 2, scope: !6587)
!6729 = !DILocation(line: 793, column: 3, scope: !6629)
!6730 = !DILocation(line: 793, column: 3, scope: !6663)
!6731 = !DILocation(line: 793, column: 3, scope: !6662)
!6732 = !DILocation(line: 793, column: 3, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6662, file: !3, line: 793, column: 3)
!6734 = !DILocation(line: 793, column: 3, scope: !6661)
!6735 = !{i32 -2140478803}
!6736 = !DILocation(line: 794, column: 10, scope: !6629)
!6737 = !DILocation(line: 794, column: 30, scope: !6629)
!6738 = !DILocation(line: 27, column: 25, scope: !6642, inlinedAt: !6644)
!6739 = !DILocation(line: 71, column: 19, scope: !6646, inlinedAt: !6654)
!6740 = !DILocation(line: 71, column: 22, scope: !6646, inlinedAt: !6654)
!6741 = !DILocation(line: 71, column: 2, scope: !6646, inlinedAt: !6654)
!6742 = !DILocation(line: 72, column: 2, scope: !6646, inlinedAt: !6654)
!6743 = !DILocation(line: 28, column: 26, scope: !6642, inlinedAt: !6644)
!6744 = !DILocation(line: 29, column: 9, scope: !6634, inlinedAt: !6641)
!6745 = !DILocation(line: 794, column: 8, scope: !6629)
!6746 = !DILocation(line: 795, column: 7, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 795, column: 7)
!6748 = !DILocation(line: 795, column: 12, scope: !6747)
!6749 = !DILocation(line: 795, column: 16, scope: !6747)
!6750 = !DILocation(line: 795, column: 22, scope: !6747)
!6751 = !DILocation(line: 795, column: 30, scope: !6747)
!6752 = !DILocation(line: 795, column: 49, scope: !6747)
!6753 = !DILocation(line: 795, column: 55, scope: !6747)
!6754 = !DILocation(line: 795, column: 60, scope: !6747)
!6755 = !DILocation(line: 795, column: 33, scope: !6747)
!6756 = !DILocation(line: 795, column: 7, scope: !6629)
!6757 = !DILocation(line: 796, column: 4, scope: !6747)
!6758 = !DILocation(line: 797, column: 27, scope: !6629)
!6759 = !DILocation(line: 797, column: 33, scope: !6629)
!6760 = !DILocation(line: 797, column: 39, scope: !6629)
!6761 = !DILocalVariable(name: "__dummy", scope: !6762, file: !6593, line: 409, type: !305)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6593, line: 409, column: 2)
!6763 = distinct !DILexicalBlock(scope: !6592, file: !6593, line: 409, column: 2)
!6764 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !6631)
!6765 = !DILocalVariable(name: "__dummy2", scope: !6762, file: !6593, line: 409, type: !305)
!6766 = !DILocalVariable(name: "__dummy", scope: !6767, file: !6593, line: 409, type: !305)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6593, line: 409, column: 2)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6593, line: 409, column: 2)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6593, line: 409, column: 2)
!6770 = distinct !DILexicalBlock(scope: !6763, file: !6593, line: 409, column: 2)
!6771 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !6631)
!6772 = !DILocalVariable(name: "__dummy2", scope: !6767, file: !6593, line: 409, type: !305)
!6773 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !6631)
!6774 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !6631)
!6775 = distinct !DILexicalBlock(scope: !6770, file: !6593, line: 409, column: 2)
!6776 = !{i32 -2145415703}
!6777 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !6631)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !6593, line: 409, column: 2)
!6779 = !DILocation(line: 798, column: 3, scope: !6629)
!6780 = !DILocation(line: 799, column: 3, scope: !6629)
!6781 = !DILocation(line: 799, column: 3, scope: !6628)
!6782 = !DILocalVariable(name: "__dummy", scope: !6783, file: !3, line: 799, type: !305)
!6783 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 799, column: 3)
!6784 = !DILocation(line: 799, column: 3, scope: !6783)
!6785 = !DILocalVariable(name: "__dummy2", scope: !6783, file: !3, line: 799, type: !305)
!6786 = !DILocation(line: 799, column: 3, scope: !6627)
!6787 = !DILocation(line: 799, column: 3, scope: !6626)
!6788 = !DILocation(line: 799, column: 3, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 799, column: 3)
!6790 = !DILocalVariable(name: "__dummy", scope: !6791, file: !3, line: 799, type: !305)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 799, column: 3)
!6792 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 799, column: 3)
!6793 = !DILocation(line: 799, column: 3, scope: !6791)
!6794 = !DILocalVariable(name: "__dummy2", scope: !6791, file: !3, line: 799, type: !305)
!6795 = !DILocation(line: 799, column: 3, scope: !6792)
!6796 = !DILocation(line: 799, column: 3, scope: !6625)
!6797 = !{i32 -2140477888}
!6798 = !DILocation(line: 799, column: 3, scope: !6624)
!6799 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !6623)
!6800 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !6623)
!6801 = distinct !{!6801, !6728, !6802}
!6802 = !DILocation(line: 800, column: 2, scope: !6587)
!6803 = !DILocation(line: 801, column: 2, scope: !6587)
!6804 = !DILocation(line: 801, column: 2, scope: !6610)
!6805 = !DILocation(line: 801, column: 2, scope: !6609)
!6806 = !DILocation(line: 801, column: 2, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 801, column: 2)
!6808 = !DILocation(line: 801, column: 2, scope: !6608)
!6809 = !{i32 -2140476117}
!6810 = !DILocation(line: 802, column: 7, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 802, column: 6)
!6812 = !DILocation(line: 802, column: 6, scope: !6587)
!6813 = !DILocation(line: 803, column: 3, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 802, column: 13)
!6815 = !DILocation(line: 803, column: 9, scope: !6814)
!6816 = !DILocation(line: 803, column: 17, scope: !6814)
!6817 = !DILocation(line: 804, column: 23, scope: !6814)
!6818 = !DILocation(line: 804, column: 29, scope: !6814)
!6819 = !DILocation(line: 804, column: 34, scope: !6814)
!6820 = !DILocation(line: 804, column: 3, scope: !6814)
!6821 = !DILocation(line: 805, column: 3, scope: !6814)
!6822 = !DILocation(line: 805, column: 9, scope: !6814)
!6823 = !DILocation(line: 805, column: 19, scope: !6814)
!6824 = !DILocation(line: 806, column: 7, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 806, column: 7)
!6826 = !DILocation(line: 806, column: 13, scope: !6825)
!6827 = !DILocation(line: 806, column: 23, scope: !6825)
!6828 = !DILocation(line: 806, column: 7, scope: !6814)
!6829 = !DILocation(line: 807, column: 7, scope: !6825)
!6830 = !DILocation(line: 807, column: 4, scope: !6825)
!6831 = !DILocation(line: 808, column: 2, scope: !6814)
!6832 = !DILocation(line: 809, column: 3, scope: !6811)
!6833 = !DILocation(line: 810, column: 26, scope: !6587)
!6834 = !DILocation(line: 810, column: 32, scope: !6587)
!6835 = !DILocation(line: 810, column: 38, scope: !6587)
!6836 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !6597)
!6837 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !6597)
!6838 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !6597)
!6839 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !6597)
!6840 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !6597)
!6841 = !DILocation(line: 811, column: 21, scope: !6587)
!6842 = !DILocation(line: 811, column: 27, scope: !6587)
!6843 = !DILocation(line: 811, column: 2, scope: !6587)
!6844 = !DILocation(line: 813, column: 6, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 813, column: 6)
!6846 = !DILocation(line: 813, column: 6, scope: !6587)
!6847 = !DILocation(line: 814, column: 23, scope: !6845)
!6848 = !DILocation(line: 814, column: 3, scope: !6845)
!6849 = !DILocation(line: 816, column: 9, scope: !6587)
!6850 = !DILocation(line: 816, column: 2, scope: !6587)
!6851 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6852, file: !6852, line: 666, type: !6853, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6852 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!305}
!6855 = !DILocalVariable(name: "f", scope: !6851, file: !6852, line: 668, type: !305)
!6856 = !DILocation(line: 668, column: 16, scope: !6851)
!6857 = !DILocation(line: 670, column: 6, scope: !6851)
!6858 = !DILocation(line: 670, column: 4, scope: !6851)
!6859 = !DILocation(line: 671, column: 2, scope: !6851)
!6860 = !DILocation(line: 672, column: 9, scope: !6851)
!6861 = !DILocation(line: 672, column: 2, scope: !6851)
!6862 = distinct !DISubprogram(name: "mmc_ctx_matches", scope: !3, file: !3, line: 746, type: !6863, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6863 = !DISubroutineType(types: !6864)
!6864 = !{!471, !183, !5302, !2199}
!6865 = !DILocalVariable(name: "host", arg: 1, scope: !6862, file: !3, line: 746, type: !183)
!6866 = !DILocation(line: 746, column: 53, scope: !6862)
!6867 = !DILocalVariable(name: "ctx", arg: 2, scope: !6862, file: !3, line: 746, type: !5302)
!6868 = !DILocation(line: 746, column: 75, scope: !6862)
!6869 = !DILocalVariable(name: "task", arg: 3, scope: !6862, file: !3, line: 747, type: !2199)
!6870 = !DILocation(line: 747, column: 28, scope: !6862)
!6871 = !DILocation(line: 749, column: 9, scope: !6862)
!6872 = !DILocation(line: 749, column: 15, scope: !6862)
!6873 = !DILocation(line: 749, column: 26, scope: !6862)
!6874 = !DILocation(line: 749, column: 23, scope: !6862)
!6875 = !DILocation(line: 749, column: 30, scope: !6862)
!6876 = !DILocation(line: 750, column: 11, scope: !6862)
!6877 = !DILocation(line: 750, column: 15, scope: !6862)
!6878 = !DILocation(line: 750, column: 18, scope: !6862)
!6879 = !DILocation(line: 750, column: 23, scope: !6862)
!6880 = !DILocation(line: 750, column: 26, scope: !6862)
!6881 = !DILocation(line: 750, column: 32, scope: !6862)
!6882 = !DILocation(line: 750, column: 41, scope: !6862)
!6883 = !DILocation(line: 750, column: 49, scope: !6862)
!6884 = !DILocation(line: 750, column: 46, scope: !6862)
!6885 = !DILocation(line: 0, scope: !6862)
!6886 = !DILocation(line: 749, column: 2, scope: !6862)
!6887 = distinct !DISubprogram(name: "mmc_ctx_set_claimer", scope: !3, file: !3, line: 753, type: !6888, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6888 = !DISubroutineType(types: !6889)
!6889 = !{null, !183, !5302, !2199}
!6890 = !DILocalVariable(name: "host", arg: 1, scope: !6887, file: !3, line: 753, type: !183)
!6891 = !DILocation(line: 753, column: 57, scope: !6887)
!6892 = !DILocalVariable(name: "ctx", arg: 2, scope: !6887, file: !3, line: 754, type: !5302)
!6893 = !DILocation(line: 754, column: 28, scope: !6887)
!6894 = !DILocalVariable(name: "task", arg: 3, scope: !6887, file: !3, line: 755, type: !2199)
!6895 = !DILocation(line: 755, column: 32, scope: !6887)
!6896 = !DILocation(line: 757, column: 7, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 757, column: 6)
!6898 = !DILocation(line: 757, column: 13, scope: !6897)
!6899 = !DILocation(line: 757, column: 6, scope: !6887)
!6900 = !DILocation(line: 758, column: 7, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 758, column: 7)
!6902 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 757, column: 22)
!6903 = !DILocation(line: 758, column: 7, scope: !6902)
!6904 = !DILocation(line: 759, column: 20, scope: !6901)
!6905 = !DILocation(line: 759, column: 4, scope: !6901)
!6906 = !DILocation(line: 759, column: 10, scope: !6901)
!6907 = !DILocation(line: 759, column: 18, scope: !6901)
!6908 = !DILocation(line: 761, column: 21, scope: !6901)
!6909 = !DILocation(line: 761, column: 27, scope: !6901)
!6910 = !DILocation(line: 761, column: 4, scope: !6901)
!6911 = !DILocation(line: 761, column: 10, scope: !6901)
!6912 = !DILocation(line: 761, column: 18, scope: !6901)
!6913 = !DILocation(line: 762, column: 2, scope: !6902)
!6914 = !DILocation(line: 763, column: 6, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 763, column: 6)
!6916 = !DILocation(line: 763, column: 6, scope: !6887)
!6917 = !DILocation(line: 764, column: 25, scope: !6915)
!6918 = !DILocation(line: 764, column: 3, scope: !6915)
!6919 = !DILocation(line: 764, column: 9, scope: !6915)
!6920 = !DILocation(line: 764, column: 18, scope: !6915)
!6921 = !DILocation(line: 764, column: 23, scope: !6915)
!6922 = !DILocation(line: 765, column: 1, scope: !6887)
!6923 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !6924, file: !6924, line: 384, type: !4453, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6924 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!6925 = !DILocalVariable(name: "dev", arg: 1, scope: !6923, file: !6924, line: 384, type: !188)
!6926 = !DILocation(line: 384, column: 54, scope: !6923)
!6927 = !DILocation(line: 386, column: 29, scope: !6923)
!6928 = !DILocation(line: 386, column: 9, scope: !6923)
!6929 = !DILocation(line: 386, column: 2, scope: !6923)
!6930 = distinct !DISubprogram(name: "mmc_release_host", scope: !3, file: !3, line: 827, type: !4984, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6931 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !6932)
!6932 = distinct !DILocation(line: 841, column: 3, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 837, column: 9)
!6934 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 834, column: 6)
!6935 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !6932)
!6936 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !6937)
!6937 = distinct !DILocation(line: 836, column: 3, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 834, column: 25)
!6939 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !6937)
!6940 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !6941)
!6941 = distinct !DILocation(line: 833, column: 2, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 833, column: 2)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 833, column: 2)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 833, column: 2)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 833, column: 2)
!6946 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 833, column: 2)
!6947 = !DILocalVariable(name: "host", arg: 1, scope: !6930, file: !3, line: 827, type: !183)
!6948 = !DILocation(line: 827, column: 40, scope: !6930)
!6949 = !DILocalVariable(name: "flags", scope: !6930, file: !3, line: 829, type: !305)
!6950 = !DILocation(line: 829, column: 16, scope: !6930)
!6951 = !DILocalVariable(name: "__ret_warn_on", scope: !6952, file: !3, line: 831, type: !240)
!6952 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 831, column: 2)
!6953 = !DILocation(line: 831, column: 2, scope: !6952)
!6954 = !DILocation(line: 831, column: 2, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 831, column: 2)
!6956 = !DILocation(line: 831, column: 2, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 831, column: 2)
!6958 = !DILocation(line: 831, column: 2, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 831, column: 2)
!6960 = !DILocation(line: 831, column: 2, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 831, column: 2)
!6962 = !{i32 -2140475384, i32 -2140475355, i32 -2140475309, i32 -2140475251, i32 -2140475197, i32 -2140475143, i32 -2140475088, i32 -2140475057}
!6963 = !DILocation(line: 831, column: 2, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 831, column: 2)
!6965 = !{i32 -2140474652, i32 -2140474645, i32 -2140474593, i32 -2140474562, i32 -2140474532}
!6966 = !DILocation(line: 831, column: 2, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 831, column: 2)
!6968 = !DILocation(line: 833, column: 2, scope: !6930)
!6969 = !DILocation(line: 833, column: 2, scope: !6946)
!6970 = !DILocalVariable(name: "__dummy", scope: !6971, file: !3, line: 833, type: !305)
!6971 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 833, column: 2)
!6972 = !DILocation(line: 833, column: 2, scope: !6971)
!6973 = !DILocalVariable(name: "__dummy2", scope: !6971, file: !3, line: 833, type: !305)
!6974 = !DILocation(line: 833, column: 2, scope: !6945)
!6975 = !DILocation(line: 833, column: 2, scope: !6944)
!6976 = !DILocation(line: 833, column: 2, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 833, column: 2)
!6978 = !DILocalVariable(name: "__dummy", scope: !6979, file: !3, line: 833, type: !305)
!6979 = distinct !DILexicalBlock(scope: !6980, file: !3, line: 833, column: 2)
!6980 = distinct !DILexicalBlock(scope: !6977, file: !3, line: 833, column: 2)
!6981 = !DILocation(line: 833, column: 2, scope: !6979)
!6982 = !DILocalVariable(name: "__dummy2", scope: !6979, file: !3, line: 833, type: !305)
!6983 = !DILocation(line: 833, column: 2, scope: !6980)
!6984 = !DILocation(line: 833, column: 2, scope: !6943)
!6985 = !{i32 -2140473551}
!6986 = !DILocation(line: 833, column: 2, scope: !6942)
!6987 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !6941)
!6988 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !6941)
!6989 = !DILocation(line: 834, column: 8, scope: !6934)
!6990 = !DILocation(line: 834, column: 14, scope: !6934)
!6991 = !DILocation(line: 834, column: 6, scope: !6934)
!6992 = !DILocation(line: 834, column: 6, scope: !6930)
!6993 = !DILocation(line: 836, column: 27, scope: !6938)
!6994 = !DILocation(line: 836, column: 33, scope: !6938)
!6995 = !DILocation(line: 836, column: 39, scope: !6938)
!6996 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !6937)
!6997 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !6937)
!6998 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !6937)
!6999 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !6937)
!7000 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !6937)
!7001 = !DILocation(line: 837, column: 2, scope: !6938)
!7002 = !DILocation(line: 838, column: 3, scope: !6933)
!7003 = !DILocation(line: 838, column: 9, scope: !6933)
!7004 = !DILocation(line: 838, column: 17, scope: !6933)
!7005 = !DILocation(line: 839, column: 3, scope: !6933)
!7006 = !DILocation(line: 839, column: 9, scope: !6933)
!7007 = !DILocation(line: 839, column: 18, scope: !6933)
!7008 = !DILocation(line: 839, column: 23, scope: !6933)
!7009 = !DILocation(line: 840, column: 3, scope: !6933)
!7010 = !DILocation(line: 840, column: 9, scope: !6933)
!7011 = !DILocation(line: 840, column: 17, scope: !6933)
!7012 = !DILocation(line: 841, column: 27, scope: !6933)
!7013 = !DILocation(line: 841, column: 33, scope: !6933)
!7014 = !DILocation(line: 841, column: 39, scope: !6933)
!7015 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !6932)
!7016 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !6932)
!7017 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !6932)
!7018 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !6932)
!7019 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !6932)
!7020 = !DILocation(line: 842, column: 3, scope: !6933)
!7021 = !DILocation(line: 843, column: 29, scope: !6933)
!7022 = !DILocation(line: 843, column: 3, scope: !6933)
!7023 = !DILocation(line: 844, column: 7, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 844, column: 7)
!7025 = !DILocation(line: 844, column: 13, scope: !7024)
!7026 = !DILocation(line: 844, column: 18, scope: !7024)
!7027 = !DILocation(line: 844, column: 7, scope: !6933)
!7028 = !DILocation(line: 845, column: 32, scope: !7024)
!7029 = !DILocation(line: 845, column: 4, scope: !7024)
!7030 = !DILocation(line: 847, column: 31, scope: !7024)
!7031 = !DILocation(line: 847, column: 4, scope: !7024)
!7032 = !DILocation(line: 849, column: 1, scope: !6930)
!7033 = distinct !DISubprogram(name: "pm_runtime_mark_last_busy", scope: !6924, file: !6924, line: 194, type: !4444, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7034 = !DILocalVariable(name: "dev", arg: 1, scope: !7033, file: !6924, line: 194, type: !188)
!7035 = !DILocation(line: 194, column: 61, scope: !7033)
!7036 = !DILocation(line: 196, column: 2, scope: !7033)
!7037 = !DILocation(line: 196, column: 2, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !6924, line: 196, column: 2)
!7039 = !DILocation(line: 196, column: 2, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7038, file: !6924, line: 196, column: 2)
!7041 = !DILocation(line: 196, column: 2, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7038, file: !6924, line: 196, column: 2)
!7043 = !DILocation(line: 197, column: 1, scope: !7033)
!7044 = distinct !DISubprogram(name: "pm_runtime_put_sync_suspend", scope: !6924, file: !6924, line: 464, type: !4453, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7045 = !DILocalVariable(name: "dev", arg: 1, scope: !7044, file: !6924, line: 464, type: !188)
!7046 = !DILocation(line: 464, column: 62, scope: !7044)
!7047 = !DILocation(line: 466, column: 30, scope: !7044)
!7048 = !DILocation(line: 466, column: 9, scope: !7044)
!7049 = !DILocation(line: 466, column: 2, scope: !7044)
!7050 = distinct !DISubprogram(name: "pm_runtime_put_autosuspend", scope: !6924, file: !6924, line: 429, type: !4453, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7051 = !DILocalVariable(name: "dev", arg: 1, scope: !7050, file: !6924, line: 429, type: !188)
!7052 = !DILocation(line: 429, column: 61, scope: !7050)
!7053 = !DILocation(line: 431, column: 30, scope: !7050)
!7054 = !DILocation(line: 431, column: 9, scope: !7050)
!7055 = !DILocation(line: 431, column: 2, scope: !7050)
!7056 = distinct !DISubprogram(name: "mmc_get_card", scope: !3, file: !3, line: 856, type: !7057, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7057 = !DISubroutineType(types: !7058)
!7058 = !{null, !4990, !5302}
!7059 = !DILocalVariable(name: "card", arg: 1, scope: !7056, file: !3, line: 856, type: !4990)
!7060 = !DILocation(line: 856, column: 36, scope: !7056)
!7061 = !DILocalVariable(name: "ctx", arg: 2, scope: !7056, file: !3, line: 856, type: !5302)
!7062 = !DILocation(line: 856, column: 58, scope: !7056)
!7063 = !DILocation(line: 858, column: 23, scope: !7056)
!7064 = !DILocation(line: 858, column: 29, scope: !7056)
!7065 = !DILocation(line: 858, column: 2, scope: !7056)
!7066 = !DILocation(line: 859, column: 19, scope: !7056)
!7067 = !DILocation(line: 859, column: 25, scope: !7056)
!7068 = !DILocation(line: 859, column: 31, scope: !7056)
!7069 = !DILocation(line: 859, column: 2, scope: !7056)
!7070 = !DILocation(line: 860, column: 1, scope: !7056)
!7071 = distinct !DISubprogram(name: "mmc_put_card", scope: !3, file: !3, line: 867, type: !7057, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7072 = !DILocalVariable(name: "card", arg: 1, scope: !7071, file: !3, line: 867, type: !4990)
!7073 = !DILocation(line: 867, column: 36, scope: !7071)
!7074 = !DILocalVariable(name: "ctx", arg: 2, scope: !7071, file: !3, line: 867, type: !5302)
!7075 = !DILocation(line: 867, column: 58, scope: !7071)
!7076 = !DILocalVariable(name: "host", scope: !7071, file: !3, line: 869, type: !183)
!7077 = !DILocation(line: 869, column: 19, scope: !7071)
!7078 = !DILocation(line: 869, column: 26, scope: !7071)
!7079 = !DILocation(line: 869, column: 32, scope: !7071)
!7080 = !DILocalVariable(name: "__ret_warn_on", scope: !7081, file: !3, line: 871, type: !240)
!7081 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 871, column: 2)
!7082 = !DILocation(line: 871, column: 2, scope: !7081)
!7083 = !DILocation(line: 0, scope: !7081)
!7084 = !DILocation(line: 871, column: 2, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 871, column: 2)
!7086 = !DILocation(line: 871, column: 2, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 871, column: 2)
!7088 = !DILocation(line: 871, column: 2, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 871, column: 2)
!7090 = !DILocation(line: 871, column: 2, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 871, column: 2)
!7092 = !{i32 -2140472522, i32 -2140472493, i32 -2140472447, i32 -2140472389, i32 -2140472335, i32 -2140472281, i32 -2140472226, i32 -2140472195}
!7093 = !DILocation(line: 871, column: 2, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 871, column: 2)
!7095 = !{i32 -2140471790, i32 -2140471783, i32 -2140471731, i32 -2140471700, i32 -2140471670}
!7096 = !DILocation(line: 871, column: 2, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 871, column: 2)
!7098 = !DILocation(line: 873, column: 19, scope: !7071)
!7099 = !DILocation(line: 873, column: 2, scope: !7071)
!7100 = !DILocation(line: 874, column: 29, scope: !7071)
!7101 = !DILocation(line: 874, column: 35, scope: !7071)
!7102 = !DILocation(line: 874, column: 2, scope: !7071)
!7103 = !DILocation(line: 875, column: 30, scope: !7071)
!7104 = !DILocation(line: 875, column: 36, scope: !7071)
!7105 = !DILocation(line: 875, column: 2, scope: !7071)
!7106 = !DILocation(line: 876, column: 1, scope: !7071)
!7107 = distinct !DISubprogram(name: "mmc_set_chip_select", scope: !3, file: !3, line: 899, type: !4980, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7108 = !DILocalVariable(name: "host", arg: 1, scope: !7107, file: !3, line: 899, type: !183)
!7109 = !DILocation(line: 899, column: 43, scope: !7107)
!7110 = !DILocalVariable(name: "mode", arg: 2, scope: !7107, file: !3, line: 899, type: !240)
!7111 = !DILocation(line: 899, column: 53, scope: !7107)
!7112 = !DILocation(line: 901, column: 26, scope: !7107)
!7113 = !DILocation(line: 901, column: 2, scope: !7107)
!7114 = !DILocation(line: 901, column: 8, scope: !7107)
!7115 = !DILocation(line: 901, column: 12, scope: !7107)
!7116 = !DILocation(line: 901, column: 24, scope: !7107)
!7117 = !DILocation(line: 902, column: 14, scope: !7107)
!7118 = !DILocation(line: 902, column: 2, scope: !7107)
!7119 = !DILocation(line: 903, column: 1, scope: !7107)
!7120 = distinct !DISubprogram(name: "mmc_set_ios", scope: !3, file: !3, line: 883, type: !4984, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7121 = !DILocalVariable(name: "host", arg: 1, scope: !7120, file: !3, line: 883, type: !183)
!7122 = !DILocation(line: 883, column: 49, scope: !7120)
!7123 = !DILocalVariable(name: "ios", scope: !7120, file: !3, line: 885, type: !4959)
!7124 = !DILocation(line: 885, column: 18, scope: !7120)
!7125 = !DILocation(line: 885, column: 25, scope: !7120)
!7126 = !DILocation(line: 885, column: 31, scope: !7120)
!7127 = !DILocation(line: 887, column: 2, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 887, column: 2)
!7129 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 887, column: 2)
!7130 = !DILocation(line: 887, column: 2, scope: !7129)
!7131 = !DILocation(line: 893, column: 2, scope: !7120)
!7132 = !DILocation(line: 893, column: 8, scope: !7120)
!7133 = !DILocation(line: 893, column: 13, scope: !7120)
!7134 = !DILocation(line: 893, column: 21, scope: !7120)
!7135 = !DILocation(line: 893, column: 27, scope: !7120)
!7136 = !DILocation(line: 894, column: 1, scope: !7120)
!7137 = distinct !DISubprogram(name: "mmc_set_clock", scope: !3, file: !3, line: 909, type: !7138, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{null, !183, !7}
!7140 = !DILocalVariable(name: "host", arg: 1, scope: !7137, file: !3, line: 909, type: !183)
!7141 = !DILocation(line: 909, column: 37, scope: !7137)
!7142 = !DILocalVariable(name: "hz", arg: 2, scope: !7137, file: !3, line: 909, type: !7)
!7143 = !DILocation(line: 909, column: 56, scope: !7137)
!7144 = !DILocalVariable(name: "__ret_warn_on", scope: !7145, file: !3, line: 911, type: !240)
!7145 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 911, column: 2)
!7146 = !DILocation(line: 911, column: 2, scope: !7145)
!7147 = !DILocation(line: 0, scope: !7145)
!7148 = !DILocation(line: 911, column: 2, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 911, column: 2)
!7150 = !DILocation(line: 911, column: 2, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 911, column: 2)
!7152 = !DILocation(line: 911, column: 2, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 911, column: 2)
!7154 = !DILocation(line: 911, column: 2, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 911, column: 2)
!7156 = !{i32 -2140470140, i32 -2140470111, i32 -2140470065, i32 -2140470007, i32 -2140469953, i32 -2140469899, i32 -2140469844, i32 -2140469813}
!7157 = !DILocation(line: 911, column: 2, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 911, column: 2)
!7159 = !{i32 -2140469408, i32 -2140469401, i32 -2140469349, i32 -2140469318, i32 -2140469288}
!7160 = !DILocation(line: 911, column: 2, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 911, column: 2)
!7162 = !DILocation(line: 913, column: 6, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 913, column: 6)
!7164 = !DILocation(line: 913, column: 11, scope: !7163)
!7165 = !DILocation(line: 913, column: 17, scope: !7163)
!7166 = !DILocation(line: 913, column: 9, scope: !7163)
!7167 = !DILocation(line: 913, column: 6, scope: !7137)
!7168 = !DILocation(line: 914, column: 8, scope: !7163)
!7169 = !DILocation(line: 914, column: 14, scope: !7163)
!7170 = !DILocation(line: 914, column: 6, scope: !7163)
!7171 = !DILocation(line: 914, column: 3, scope: !7163)
!7172 = !DILocation(line: 916, column: 20, scope: !7137)
!7173 = !DILocation(line: 916, column: 2, scope: !7137)
!7174 = !DILocation(line: 916, column: 8, scope: !7137)
!7175 = !DILocation(line: 916, column: 12, scope: !7137)
!7176 = !DILocation(line: 916, column: 18, scope: !7137)
!7177 = !DILocation(line: 917, column: 14, scope: !7137)
!7178 = !DILocation(line: 917, column: 2, scope: !7137)
!7179 = !DILocation(line: 918, column: 1, scope: !7137)
!7180 = distinct !DISubprogram(name: "mmc_execute_tuning", scope: !3, file: !3, line: 920, type: !7181, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7181 = !DISubroutineType(types: !7182)
!7182 = !{!240, !4990}
!7183 = !DILocalVariable(name: "card", arg: 1, scope: !7180, file: !3, line: 920, type: !4990)
!7184 = !DILocation(line: 920, column: 41, scope: !7180)
!7185 = !DILocalVariable(name: "host", scope: !7180, file: !3, line: 922, type: !183)
!7186 = !DILocation(line: 922, column: 19, scope: !7180)
!7187 = !DILocation(line: 922, column: 26, scope: !7180)
!7188 = !DILocation(line: 922, column: 32, scope: !7180)
!7189 = !DILocalVariable(name: "opcode", scope: !7180, file: !3, line: 923, type: !396)
!7190 = !DILocation(line: 923, column: 6, scope: !7180)
!7191 = !DILocalVariable(name: "err", scope: !7180, file: !3, line: 924, type: !240)
!7192 = !DILocation(line: 924, column: 6, scope: !7180)
!7193 = !DILocation(line: 926, column: 7, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 926, column: 6)
!7195 = !DILocation(line: 926, column: 13, scope: !7194)
!7196 = !DILocation(line: 926, column: 18, scope: !7194)
!7197 = !DILocation(line: 926, column: 6, scope: !7180)
!7198 = !DILocation(line: 927, column: 3, scope: !7194)
!7199 = !DILocation(line: 929, column: 6, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 929, column: 6)
!7201 = !DILocation(line: 929, column: 12, scope: !7200)
!7202 = !DILocation(line: 929, column: 6, scope: !7180)
!7203 = !DILocation(line: 930, column: 3, scope: !7200)
!7204 = !DILocation(line: 930, column: 9, scope: !7200)
!7205 = !DILocation(line: 930, column: 18, scope: !7200)
!7206 = !DILocation(line: 930, column: 26, scope: !7200)
!7207 = !DILocation(line: 932, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 932, column: 6)
!7209 = !DILocation(line: 932, column: 6, scope: !7180)
!7210 = !DILocation(line: 933, column: 10, scope: !7208)
!7211 = !DILocation(line: 933, column: 3, scope: !7208)
!7212 = !DILocation(line: 935, column: 10, scope: !7208)
!7213 = !DILocation(line: 937, column: 8, scope: !7180)
!7214 = !DILocation(line: 937, column: 14, scope: !7180)
!7215 = !DILocation(line: 937, column: 19, scope: !7180)
!7216 = !DILocation(line: 937, column: 34, scope: !7180)
!7217 = !DILocation(line: 937, column: 40, scope: !7180)
!7218 = !DILocation(line: 937, column: 6, scope: !7180)
!7219 = !DILocation(line: 939, column: 6, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 939, column: 6)
!7221 = !DILocation(line: 939, column: 6, scope: !7180)
!7222 = !DILocation(line: 940, column: 3, scope: !7220)
!7223 = !DILocation(line: 943, column: 21, scope: !7220)
!7224 = !DILocation(line: 943, column: 3, scope: !7220)
!7225 = !DILocation(line: 945, column: 9, scope: !7180)
!7226 = !DILocation(line: 945, column: 2, scope: !7180)
!7227 = !DILocation(line: 946, column: 1, scope: !7180)
!7228 = distinct !DISubprogram(name: "mmc_set_bus_mode", scope: !3, file: !3, line: 951, type: !7138, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7229 = !DILocalVariable(name: "host", arg: 1, scope: !7228, file: !3, line: 951, type: !183)
!7230 = !DILocation(line: 951, column: 40, scope: !7228)
!7231 = !DILocalVariable(name: "mode", arg: 2, scope: !7228, file: !3, line: 951, type: !7)
!7232 = !DILocation(line: 951, column: 59, scope: !7228)
!7233 = !DILocation(line: 953, column: 23, scope: !7228)
!7234 = !DILocation(line: 953, column: 2, scope: !7228)
!7235 = !DILocation(line: 953, column: 8, scope: !7228)
!7236 = !DILocation(line: 953, column: 12, scope: !7228)
!7237 = !DILocation(line: 953, column: 21, scope: !7228)
!7238 = !DILocation(line: 954, column: 14, scope: !7228)
!7239 = !DILocation(line: 954, column: 2, scope: !7228)
!7240 = !DILocation(line: 955, column: 1, scope: !7228)
!7241 = distinct !DISubprogram(name: "mmc_set_bus_width", scope: !3, file: !3, line: 960, type: !7138, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7242 = !DILocalVariable(name: "host", arg: 1, scope: !7241, file: !3, line: 960, type: !183)
!7243 = !DILocation(line: 960, column: 41, scope: !7241)
!7244 = !DILocalVariable(name: "width", arg: 2, scope: !7241, file: !3, line: 960, type: !7)
!7245 = !DILocation(line: 960, column: 60, scope: !7241)
!7246 = !DILocation(line: 962, column: 24, scope: !7241)
!7247 = !DILocation(line: 962, column: 2, scope: !7241)
!7248 = !DILocation(line: 962, column: 8, scope: !7241)
!7249 = !DILocation(line: 962, column: 12, scope: !7241)
!7250 = !DILocation(line: 962, column: 22, scope: !7241)
!7251 = !DILocation(line: 963, column: 14, scope: !7241)
!7252 = !DILocation(line: 963, column: 2, scope: !7241)
!7253 = !DILocation(line: 964, column: 1, scope: !7241)
!7254 = distinct !DISubprogram(name: "mmc_set_initial_state", scope: !3, file: !3, line: 969, type: !4984, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7255 = !DILocalVariable(name: "host", arg: 1, scope: !7254, file: !3, line: 969, type: !183)
!7256 = !DILocation(line: 969, column: 45, scope: !7254)
!7257 = !DILocation(line: 971, column: 6, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 971, column: 6)
!7259 = !DILocation(line: 971, column: 12, scope: !7258)
!7260 = !DILocation(line: 971, column: 6, scope: !7254)
!7261 = !DILocation(line: 972, column: 3, scope: !7258)
!7262 = !DILocation(line: 972, column: 9, scope: !7258)
!7263 = !DILocation(line: 972, column: 18, scope: !7258)
!7264 = !DILocation(line: 972, column: 26, scope: !7258)
!7265 = !DILocation(line: 974, column: 21, scope: !7254)
!7266 = !DILocation(line: 974, column: 2, scope: !7254)
!7267 = !DILocation(line: 976, column: 6, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 976, column: 6)
!7269 = !DILocation(line: 976, column: 6, scope: !7254)
!7270 = !DILocation(line: 977, column: 3, scope: !7268)
!7271 = !DILocation(line: 977, column: 9, scope: !7268)
!7272 = !DILocation(line: 977, column: 13, scope: !7268)
!7273 = !DILocation(line: 977, column: 25, scope: !7268)
!7274 = !DILocation(line: 979, column: 3, scope: !7268)
!7275 = !DILocation(line: 979, column: 9, scope: !7268)
!7276 = !DILocation(line: 979, column: 13, scope: !7268)
!7277 = !DILocation(line: 979, column: 25, scope: !7268)
!7278 = !DILocation(line: 980, column: 2, scope: !7254)
!7279 = !DILocation(line: 980, column: 8, scope: !7254)
!7280 = !DILocation(line: 980, column: 12, scope: !7254)
!7281 = !DILocation(line: 980, column: 21, scope: !7254)
!7282 = !DILocation(line: 981, column: 2, scope: !7254)
!7283 = !DILocation(line: 981, column: 8, scope: !7254)
!7284 = !DILocation(line: 981, column: 12, scope: !7254)
!7285 = !DILocation(line: 981, column: 22, scope: !7254)
!7286 = !DILocation(line: 982, column: 2, scope: !7254)
!7287 = !DILocation(line: 982, column: 8, scope: !7254)
!7288 = !DILocation(line: 982, column: 12, scope: !7254)
!7289 = !DILocation(line: 982, column: 19, scope: !7254)
!7290 = !DILocation(line: 983, column: 2, scope: !7254)
!7291 = !DILocation(line: 983, column: 8, scope: !7254)
!7292 = !DILocation(line: 983, column: 12, scope: !7254)
!7293 = !DILocation(line: 983, column: 21, scope: !7254)
!7294 = !DILocation(line: 984, column: 2, scope: !7254)
!7295 = !DILocation(line: 984, column: 8, scope: !7254)
!7296 = !DILocation(line: 984, column: 12, scope: !7254)
!7297 = !DILocation(line: 984, column: 28, scope: !7254)
!7298 = !DILocation(line: 990, column: 7, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 990, column: 6)
!7300 = !DILocation(line: 990, column: 13, scope: !7299)
!7301 = !DILocation(line: 990, column: 19, scope: !7299)
!7302 = !DILocation(line: 990, column: 40, scope: !7299)
!7303 = !DILocation(line: 991, column: 7, scope: !7299)
!7304 = !DILocation(line: 991, column: 13, scope: !7299)
!7305 = !DILocation(line: 991, column: 18, scope: !7299)
!7306 = !DILocation(line: 990, column: 6, scope: !7254)
!7307 = !DILocation(line: 992, column: 3, scope: !7299)
!7308 = !DILocation(line: 992, column: 9, scope: !7299)
!7309 = !DILocation(line: 992, column: 14, scope: !7299)
!7310 = !DILocation(line: 992, column: 36, scope: !7299)
!7311 = !DILocation(line: 992, column: 43, scope: !7299)
!7312 = !DILocation(line: 992, column: 49, scope: !7299)
!7313 = !DILocation(line: 994, column: 14, scope: !7254)
!7314 = !DILocation(line: 994, column: 2, scope: !7254)
!7315 = !DILocation(line: 995, column: 1, scope: !7254)
!7316 = distinct !DISubprogram(name: "mmc_vddrange_to_ocrmask", scope: !3, file: !3, line: 1046, type: !7317, scopeLine: 1047, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7317 = !DISubroutineType(types: !7318)
!7318 = !{!396, !240, !240}
!7319 = !DILocalVariable(name: "vdd_min", arg: 1, scope: !7316, file: !3, line: 1046, type: !240)
!7320 = !DILocation(line: 1046, column: 33, scope: !7316)
!7321 = !DILocalVariable(name: "vdd_max", arg: 2, scope: !7316, file: !3, line: 1046, type: !240)
!7322 = !DILocation(line: 1046, column: 46, scope: !7316)
!7323 = !DILocalVariable(name: "mask", scope: !7316, file: !3, line: 1048, type: !396)
!7324 = !DILocation(line: 1048, column: 6, scope: !7316)
!7325 = !DILocation(line: 1050, column: 6, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1050, column: 6)
!7327 = !DILocation(line: 1050, column: 16, scope: !7326)
!7328 = !DILocation(line: 1050, column: 14, scope: !7326)
!7329 = !DILocation(line: 1050, column: 6, scope: !7316)
!7330 = !DILocation(line: 1051, column: 3, scope: !7326)
!7331 = !DILocation(line: 1054, column: 33, scope: !7316)
!7332 = !DILocation(line: 1054, column: 12, scope: !7316)
!7333 = !DILocation(line: 1054, column: 10, scope: !7316)
!7334 = !DILocation(line: 1055, column: 6, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1055, column: 6)
!7336 = !DILocation(line: 1055, column: 14, scope: !7335)
!7337 = !DILocation(line: 1055, column: 6, scope: !7316)
!7338 = !DILocation(line: 1056, column: 3, scope: !7335)
!7339 = !DILocation(line: 1059, column: 33, scope: !7316)
!7340 = !DILocation(line: 1059, column: 12, scope: !7316)
!7341 = !DILocation(line: 1059, column: 10, scope: !7316)
!7342 = !DILocation(line: 1060, column: 6, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1060, column: 6)
!7344 = !DILocation(line: 1060, column: 14, scope: !7343)
!7345 = !DILocation(line: 1060, column: 6, scope: !7316)
!7346 = !DILocation(line: 1061, column: 3, scope: !7343)
!7347 = !DILocation(line: 1064, column: 2, scope: !7316)
!7348 = !DILocation(line: 1064, column: 9, scope: !7316)
!7349 = !DILocation(line: 1064, column: 20, scope: !7316)
!7350 = !DILocation(line: 1064, column: 17, scope: !7316)
!7351 = !DILocation(line: 1065, column: 23, scope: !7316)
!7352 = !DILocation(line: 1065, column: 13, scope: !7316)
!7353 = !DILocation(line: 1065, column: 8, scope: !7316)
!7354 = distinct !{!7354, !7347, !7351}
!7355 = !DILocation(line: 1067, column: 9, scope: !7316)
!7356 = !DILocation(line: 1067, column: 2, scope: !7316)
!7357 = !DILocation(line: 1068, column: 1, scope: !7316)
!7358 = distinct !DISubprogram(name: "mmc_vdd_to_ocrbitnum", scope: !3, file: !3, line: 1012, type: !7359, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{!240, !240, !471}
!7361 = !DILocalVariable(name: "vdd", arg: 1, scope: !7358, file: !3, line: 1012, type: !240)
!7362 = !DILocation(line: 1012, column: 37, scope: !7358)
!7363 = !DILocalVariable(name: "low_bits", arg: 2, scope: !7358, file: !3, line: 1012, type: !471)
!7364 = !DILocation(line: 1012, column: 47, scope: !7358)
!7365 = !DILocalVariable(name: "max_bit", scope: !7358, file: !3, line: 1014, type: !7366)
!7366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!7367 = !DILocation(line: 1014, column: 12, scope: !7358)
!7368 = !DILocalVariable(name: "bit", scope: !7358, file: !3, line: 1015, type: !240)
!7369 = !DILocation(line: 1015, column: 6, scope: !7358)
!7370 = !DILocation(line: 1017, column: 6, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1017, column: 6)
!7372 = !DILocation(line: 1017, column: 10, scope: !7371)
!7373 = !DILocation(line: 1017, column: 17, scope: !7371)
!7374 = !DILocation(line: 1017, column: 20, scope: !7371)
!7375 = !DILocation(line: 1017, column: 24, scope: !7371)
!7376 = !DILocation(line: 1017, column: 6, scope: !7358)
!7377 = !DILocation(line: 1018, column: 3, scope: !7371)
!7378 = !DILocation(line: 1020, column: 6, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1020, column: 6)
!7380 = !DILocation(line: 1020, column: 10, scope: !7379)
!7381 = !DILocation(line: 1020, column: 18, scope: !7379)
!7382 = !DILocation(line: 1020, column: 21, scope: !7379)
!7383 = !DILocation(line: 1020, column: 25, scope: !7379)
!7384 = !DILocation(line: 1020, column: 6, scope: !7358)
!7385 = !DILocation(line: 1021, column: 3, scope: !7379)
!7386 = !DILocation(line: 1023, column: 6, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1023, column: 6)
!7388 = !DILocation(line: 1023, column: 6, scope: !7358)
!7389 = !DILocation(line: 1024, column: 7, scope: !7387)
!7390 = !DILocation(line: 1024, column: 3, scope: !7387)
!7391 = !DILocation(line: 1027, column: 9, scope: !7358)
!7392 = !DILocation(line: 1027, column: 13, scope: !7358)
!7393 = !DILocation(line: 1027, column: 21, scope: !7358)
!7394 = !DILocation(line: 1027, column: 27, scope: !7358)
!7395 = !DILocation(line: 1027, column: 6, scope: !7358)
!7396 = !DILocation(line: 1028, column: 6, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 1028, column: 6)
!7398 = !DILocation(line: 1028, column: 10, scope: !7397)
!7399 = !DILocation(line: 1028, column: 6, scope: !7358)
!7400 = !DILocation(line: 1029, column: 3, scope: !7397)
!7401 = !DILocation(line: 1030, column: 9, scope: !7358)
!7402 = !DILocation(line: 1030, column: 2, scope: !7358)
!7403 = !DILocation(line: 1031, column: 1, scope: !7358)
!7404 = distinct !DISubprogram(name: "mmc_of_find_child_device", scope: !3, file: !3, line: 1082, type: !7405, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!4715, !183, !7}
!7407 = !DILocalVariable(name: "host", arg: 1, scope: !7404, file: !3, line: 1082, type: !183)
!7408 = !DILocation(line: 1082, column: 63, scope: !7404)
!7409 = !DILocalVariable(name: "func_num", arg: 2, scope: !7404, file: !3, line: 1083, type: !7)
!7410 = !DILocation(line: 1083, column: 12, scope: !7404)
!7411 = !DILocalVariable(name: "node", scope: !7404, file: !3, line: 1085, type: !4715)
!7412 = !DILocation(line: 1085, column: 22, scope: !7404)
!7413 = !DILocation(line: 1087, column: 7, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 1087, column: 6)
!7415 = !DILocation(line: 1087, column: 13, scope: !7414)
!7416 = !DILocation(line: 1087, column: 20, scope: !7414)
!7417 = !DILocation(line: 1087, column: 24, scope: !7414)
!7418 = !DILocation(line: 1087, column: 30, scope: !7414)
!7419 = !DILocation(line: 1087, column: 38, scope: !7414)
!7420 = !DILocation(line: 1087, column: 6, scope: !7404)
!7421 = !DILocation(line: 1088, column: 3, scope: !7414)
!7422 = !DILocation(line: 1090, column: 2, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 1090, column: 2)
!7424 = !DILocation(line: 1090, column: 2, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 1090, column: 2)
!7426 = !DILocation(line: 1091, column: 27, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 1091, column: 7)
!7428 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1090, column: 54)
!7429 = !DILocation(line: 1091, column: 7, scope: !7427)
!7430 = !DILocation(line: 1091, column: 36, scope: !7427)
!7431 = !DILocation(line: 1091, column: 33, scope: !7427)
!7432 = !DILocation(line: 1091, column: 7, scope: !7428)
!7433 = !DILocation(line: 1092, column: 11, scope: !7427)
!7434 = !DILocation(line: 1092, column: 4, scope: !7427)
!7435 = !DILocation(line: 1093, column: 2, scope: !7428)
!7436 = distinct !{!7436, !7422, !7437}
!7437 = !DILocation(line: 1093, column: 2, scope: !7423)
!7438 = !DILocation(line: 1095, column: 2, scope: !7404)
!7439 = !DILocation(line: 1096, column: 1, scope: !7404)
!7440 = distinct !DISubprogram(name: "mmc_of_get_func_num", scope: !3, file: !3, line: 1070, type: !7441, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{!240, !4715}
!7443 = !DILocalVariable(name: "node", arg: 1, scope: !7440, file: !3, line: 1070, type: !4715)
!7444 = !DILocation(line: 1070, column: 52, scope: !7440)
!7445 = !DILocalVariable(name: "reg", scope: !7440, file: !3, line: 1072, type: !396)
!7446 = !DILocation(line: 1072, column: 6, scope: !7440)
!7447 = !DILocalVariable(name: "ret", scope: !7440, file: !3, line: 1073, type: !240)
!7448 = !DILocation(line: 1073, column: 6, scope: !7440)
!7449 = !DILocation(line: 1075, column: 29, scope: !7440)
!7450 = !DILocation(line: 1075, column: 8, scope: !7440)
!7451 = !DILocation(line: 1075, column: 6, scope: !7440)
!7452 = !DILocation(line: 1076, column: 6, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 1076, column: 6)
!7454 = !DILocation(line: 1076, column: 10, scope: !7453)
!7455 = !DILocation(line: 1076, column: 6, scope: !7440)
!7456 = !DILocation(line: 1077, column: 10, scope: !7453)
!7457 = !DILocation(line: 1077, column: 3, scope: !7453)
!7458 = !DILocation(line: 1079, column: 9, scope: !7440)
!7459 = !DILocation(line: 1079, column: 2, scope: !7440)
!7460 = !DILocation(line: 1080, column: 1, scope: !7440)
!7461 = distinct !DISubprogram(name: "mmc_select_voltage", scope: !3, file: !3, line: 1102, type: !7462, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!396, !183, !396}
!7464 = !DILocalVariable(name: "x", arg: 1, scope: !7465, file: !7466, line: 324, type: !7)
!7465 = distinct !DISubprogram(name: "fls", scope: !7466, file: !7466, line: 324, type: !7467, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7466 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!240, !7}
!7469 = !DILocation(line: 324, column: 45, scope: !7465, inlinedAt: !7470)
!7470 = distinct !DILocation(line: 1127, column: 9, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1126, column: 9)
!7472 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1122, column: 6)
!7473 = !DILocalVariable(name: "r", scope: !7465, file: !7466, line: 326, type: !240)
!7474 = !DILocation(line: 326, column: 6, scope: !7465, inlinedAt: !7470)
!7475 = !DILocalVariable(name: "x", arg: 1, scope: !7476, file: !7466, line: 283, type: !240)
!7476 = distinct !DISubprogram(name: "ffs", scope: !7466, file: !7466, line: 283, type: !4120, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7477 = !DILocation(line: 283, column: 36, scope: !7476, inlinedAt: !7478)
!7478 = distinct !DILocation(line: 1123, column: 9, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 1122, column: 45)
!7480 = !DILocalVariable(name: "r", scope: !7476, file: !7466, line: 285, type: !240)
!7481 = !DILocation(line: 285, column: 6, scope: !7476, inlinedAt: !7478)
!7482 = !DILocalVariable(name: "host", arg: 1, scope: !7461, file: !3, line: 1102, type: !183)
!7483 = !DILocation(line: 1102, column: 41, scope: !7461)
!7484 = !DILocalVariable(name: "ocr", arg: 2, scope: !7461, file: !3, line: 1102, type: !396)
!7485 = !DILocation(line: 1102, column: 51, scope: !7461)
!7486 = !DILocalVariable(name: "bit", scope: !7461, file: !3, line: 1104, type: !240)
!7487 = !DILocation(line: 1104, column: 6, scope: !7461)
!7488 = !DILocation(line: 1110, column: 6, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1110, column: 6)
!7490 = !DILocation(line: 1110, column: 10, scope: !7489)
!7491 = !DILocation(line: 1110, column: 6, scope: !7461)
!7492 = !DILocation(line: 1111, column: 3, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7489, file: !3, line: 1110, column: 18)
!7494 = !DILocation(line: 1113, column: 7, scope: !7493)
!7495 = !DILocation(line: 1114, column: 2, scope: !7493)
!7496 = !DILocation(line: 1116, column: 9, scope: !7461)
!7497 = !DILocation(line: 1116, column: 15, scope: !7461)
!7498 = !DILocation(line: 1116, column: 6, scope: !7461)
!7499 = !DILocation(line: 1117, column: 7, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1117, column: 6)
!7501 = !DILocation(line: 1117, column: 6, scope: !7461)
!7502 = !DILocation(line: 1118, column: 3, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 1117, column: 12)
!7504 = !DILocation(line: 1119, column: 3, scope: !7503)
!7505 = !DILocation(line: 1122, column: 6, scope: !7472)
!7506 = !DILocation(line: 1122, column: 12, scope: !7472)
!7507 = !DILocation(line: 1122, column: 18, scope: !7472)
!7508 = !DILocation(line: 1122, column: 6, scope: !7461)
!7509 = !DILocation(line: 1123, column: 13, scope: !7479)
!7510 = !DILocation(line: 299, column: 14, scope: !7476, inlinedAt: !7478)
!7511 = !DILocation(line: 297, column: 2, scope: !7476, inlinedAt: !7478)
!7512 = !{i32 356620}
!7513 = !DILocation(line: 310, column: 9, scope: !7476, inlinedAt: !7478)
!7514 = !DILocation(line: 310, column: 11, scope: !7476, inlinedAt: !7478)
!7515 = !DILocation(line: 1123, column: 18, scope: !7479)
!7516 = !DILocation(line: 1123, column: 7, scope: !7479)
!7517 = !DILocation(line: 1124, column: 15, scope: !7479)
!7518 = !DILocation(line: 1124, column: 12, scope: !7479)
!7519 = !DILocation(line: 1124, column: 7, scope: !7479)
!7520 = !DILocation(line: 1125, column: 19, scope: !7479)
!7521 = !DILocation(line: 1125, column: 25, scope: !7479)
!7522 = !DILocation(line: 1125, column: 3, scope: !7479)
!7523 = !DILocation(line: 1126, column: 2, scope: !7479)
!7524 = !DILocation(line: 1127, column: 13, scope: !7471)
!7525 = !DILocation(line: 340, column: 14, scope: !7465, inlinedAt: !7470)
!7526 = !DILocation(line: 338, column: 2, scope: !7465, inlinedAt: !7470)
!7527 = !{i32 357721}
!7528 = !DILocation(line: 351, column: 9, scope: !7465, inlinedAt: !7470)
!7529 = !DILocation(line: 351, column: 11, scope: !7465, inlinedAt: !7470)
!7530 = !DILocation(line: 1127, column: 18, scope: !7471)
!7531 = !DILocation(line: 1127, column: 7, scope: !7471)
!7532 = !DILocation(line: 1128, column: 15, scope: !7471)
!7533 = !DILocation(line: 1128, column: 12, scope: !7471)
!7534 = !DILocation(line: 1128, column: 7, scope: !7471)
!7535 = !DILocation(line: 1129, column: 7, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1129, column: 7)
!7537 = !DILocation(line: 1129, column: 14, scope: !7536)
!7538 = !DILocation(line: 1129, column: 20, scope: !7536)
!7539 = !DILocation(line: 1129, column: 24, scope: !7536)
!7540 = !DILocation(line: 1129, column: 11, scope: !7536)
!7541 = !DILocation(line: 1129, column: 7, scope: !7471)
!7542 = !DILocation(line: 1130, column: 4, scope: !7536)
!7543 = !DILocation(line: 1133, column: 9, scope: !7461)
!7544 = !DILocation(line: 1133, column: 2, scope: !7461)
!7545 = !DILocation(line: 1134, column: 1, scope: !7461)
!7546 = distinct !DISubprogram(name: "mmc_power_cycle", scope: !3, file: !3, line: 1369, type: !7547, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7547 = !DISubroutineType(types: !7548)
!7548 = !{null, !183, !396}
!7549 = !DILocalVariable(name: "host", arg: 1, scope: !7546, file: !3, line: 1369, type: !183)
!7550 = !DILocation(line: 1369, column: 39, scope: !7546)
!7551 = !DILocalVariable(name: "ocr", arg: 2, scope: !7546, file: !3, line: 1369, type: !396)
!7552 = !DILocation(line: 1369, column: 49, scope: !7546)
!7553 = !DILocation(line: 1371, column: 16, scope: !7546)
!7554 = !DILocation(line: 1371, column: 2, scope: !7546)
!7555 = !DILocation(line: 1373, column: 2, scope: !7546)
!7556 = !DILocation(line: 1374, column: 15, scope: !7546)
!7557 = !DILocation(line: 1374, column: 21, scope: !7546)
!7558 = !DILocation(line: 1374, column: 2, scope: !7546)
!7559 = !DILocation(line: 1375, column: 1, scope: !7546)
!7560 = distinct !DISubprogram(name: "mmc_set_signal_voltage", scope: !3, file: !3, line: 1136, type: !7561, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!240, !183, !240}
!7563 = !DILocalVariable(name: "host", arg: 1, scope: !7560, file: !3, line: 1136, type: !183)
!7564 = !DILocation(line: 1136, column: 45, scope: !7560)
!7565 = !DILocalVariable(name: "signal_voltage", arg: 2, scope: !7560, file: !3, line: 1136, type: !240)
!7566 = !DILocation(line: 1136, column: 55, scope: !7560)
!7567 = !DILocalVariable(name: "err", scope: !7560, file: !3, line: 1138, type: !240)
!7568 = !DILocation(line: 1138, column: 6, scope: !7560)
!7569 = !DILocalVariable(name: "old_signal_voltage", scope: !7560, file: !3, line: 1139, type: !240)
!7570 = !DILocation(line: 1139, column: 6, scope: !7560)
!7571 = !DILocation(line: 1139, column: 27, scope: !7560)
!7572 = !DILocation(line: 1139, column: 33, scope: !7560)
!7573 = !DILocation(line: 1139, column: 37, scope: !7560)
!7574 = !DILocation(line: 1141, column: 29, scope: !7560)
!7575 = !DILocation(line: 1141, column: 2, scope: !7560)
!7576 = !DILocation(line: 1141, column: 8, scope: !7560)
!7577 = !DILocation(line: 1141, column: 12, scope: !7560)
!7578 = !DILocation(line: 1141, column: 27, scope: !7560)
!7579 = !DILocation(line: 1142, column: 6, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 1142, column: 6)
!7581 = !DILocation(line: 1142, column: 12, scope: !7580)
!7582 = !DILocation(line: 1142, column: 17, scope: !7580)
!7583 = !DILocation(line: 1142, column: 6, scope: !7560)
!7584 = !DILocation(line: 1143, column: 9, scope: !7580)
!7585 = !DILocation(line: 1143, column: 15, scope: !7580)
!7586 = !DILocation(line: 1143, column: 20, scope: !7580)
!7587 = !DILocation(line: 1143, column: 48, scope: !7580)
!7588 = !DILocation(line: 1143, column: 55, scope: !7580)
!7589 = !DILocation(line: 1143, column: 61, scope: !7580)
!7590 = !DILocation(line: 1143, column: 7, scope: !7580)
!7591 = !DILocation(line: 1143, column: 3, scope: !7580)
!7592 = !DILocation(line: 1145, column: 6, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7560, file: !3, line: 1145, column: 6)
!7594 = !DILocation(line: 1145, column: 6, scope: !7560)
!7595 = !DILocation(line: 1146, column: 30, scope: !7593)
!7596 = !DILocation(line: 1146, column: 3, scope: !7593)
!7597 = !DILocation(line: 1146, column: 9, scope: !7593)
!7598 = !DILocation(line: 1146, column: 13, scope: !7593)
!7599 = !DILocation(line: 1146, column: 28, scope: !7593)
!7600 = !DILocation(line: 1148, column: 9, scope: !7560)
!7601 = !DILocation(line: 1148, column: 2, scope: !7560)
!7602 = distinct !DISubprogram(name: "mmc_set_initial_signal_voltage", scope: !3, file: !3, line: 1152, type: !4984, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7603 = !DILocalVariable(name: "host", arg: 1, scope: !7602, file: !3, line: 1152, type: !183)
!7604 = !DILocation(line: 1152, column: 54, scope: !7602)
!7605 = !DILocation(line: 1155, column: 30, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1155, column: 6)
!7607 = !DILocation(line: 1155, column: 7, scope: !7606)
!7608 = !DILocation(line: 1155, column: 6, scope: !7602)
!7609 = !DILocation(line: 1156, column: 3, scope: !7606)
!7610 = !DILocation(line: 1157, column: 35, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 1157, column: 11)
!7612 = !DILocation(line: 1157, column: 12, scope: !7611)
!7613 = !DILocation(line: 1157, column: 11, scope: !7606)
!7614 = !DILocation(line: 1158, column: 3, scope: !7611)
!7615 = !DILocation(line: 1159, column: 35, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 1159, column: 11)
!7617 = !DILocation(line: 1159, column: 12, scope: !7616)
!7618 = !DILocation(line: 1159, column: 11, scope: !7611)
!7619 = !DILocation(line: 1160, column: 3, scope: !7616)
!7620 = !DILocation(line: 1161, column: 1, scope: !7602)
!7621 = distinct !DISubprogram(name: "mmc_host_set_uhs_voltage", scope: !3, file: !3, line: 1163, type: !4975, scopeLine: 1164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7622 = !DILocalVariable(name: "host", arg: 1, scope: !7621, file: !3, line: 1163, type: !183)
!7623 = !DILocation(line: 1163, column: 47, scope: !7621)
!7624 = !DILocalVariable(name: "clock", scope: !7621, file: !3, line: 1165, type: !396)
!7625 = !DILocation(line: 1165, column: 6, scope: !7621)
!7626 = !DILocation(line: 1171, column: 10, scope: !7621)
!7627 = !DILocation(line: 1171, column: 16, scope: !7621)
!7628 = !DILocation(line: 1171, column: 20, scope: !7621)
!7629 = !DILocation(line: 1171, column: 8, scope: !7621)
!7630 = !DILocation(line: 1172, column: 2, scope: !7621)
!7631 = !DILocation(line: 1172, column: 8, scope: !7621)
!7632 = !DILocation(line: 1172, column: 12, scope: !7621)
!7633 = !DILocation(line: 1172, column: 18, scope: !7621)
!7634 = !DILocation(line: 1173, column: 14, scope: !7621)
!7635 = !DILocation(line: 1173, column: 2, scope: !7621)
!7636 = !DILocation(line: 1175, column: 29, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 1175, column: 6)
!7638 = !DILocation(line: 1175, column: 6, scope: !7637)
!7639 = !DILocation(line: 1175, column: 6, scope: !7621)
!7640 = !DILocation(line: 1176, column: 3, scope: !7637)
!7641 = !DILocation(line: 1179, column: 2, scope: !7621)
!7642 = !DILocation(line: 1180, column: 20, scope: !7621)
!7643 = !DILocation(line: 1180, column: 2, scope: !7621)
!7644 = !DILocation(line: 1180, column: 8, scope: !7621)
!7645 = !DILocation(line: 1180, column: 12, scope: !7621)
!7646 = !DILocation(line: 1180, column: 18, scope: !7621)
!7647 = !DILocation(line: 1181, column: 14, scope: !7621)
!7648 = !DILocation(line: 1181, column: 2, scope: !7621)
!7649 = !DILocation(line: 1183, column: 2, scope: !7621)
!7650 = !DILocation(line: 1184, column: 1, scope: !7621)
!7651 = distinct !DISubprogram(name: "mmc_delay", scope: !5320, file: !5320, line: 61, type: !7652, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7652 = !DISubroutineType(types: !7653)
!7653 = !{null, !7}
!7654 = !DILocalVariable(name: "ms", arg: 1, scope: !7651, file: !5320, line: 61, type: !7)
!7655 = !DILocation(line: 61, column: 43, scope: !7651)
!7656 = !DILocation(line: 63, column: 6, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7651, file: !5320, line: 63, column: 6)
!7658 = !DILocation(line: 63, column: 9, scope: !7657)
!7659 = !DILocation(line: 63, column: 6, scope: !7651)
!7660 = !DILocation(line: 64, column: 16, scope: !7657)
!7661 = !DILocation(line: 64, column: 19, scope: !7657)
!7662 = !DILocation(line: 64, column: 27, scope: !7657)
!7663 = !DILocation(line: 64, column: 30, scope: !7657)
!7664 = !DILocation(line: 64, column: 3, scope: !7657)
!7665 = !DILocation(line: 66, column: 10, scope: !7657)
!7666 = !DILocation(line: 66, column: 3, scope: !7657)
!7667 = !DILocation(line: 67, column: 1, scope: !7651)
!7668 = distinct !DISubprogram(name: "mmc_set_uhs_voltage", scope: !3, file: !3, line: 1186, type: !5209, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7669 = !DILocalVariable(name: "host", arg: 1, scope: !7668, file: !3, line: 1186, type: !183)
!7670 = !DILocation(line: 1186, column: 42, scope: !7668)
!7671 = !DILocalVariable(name: "ocr", arg: 2, scope: !7668, file: !3, line: 1186, type: !396)
!7672 = !DILocation(line: 1186, column: 52, scope: !7668)
!7673 = !DILocalVariable(name: "cmd", scope: !7668, file: !3, line: 1188, type: !4895)
!7674 = !DILocation(line: 1188, column: 21, scope: !7668)
!7675 = !DILocalVariable(name: "err", scope: !7668, file: !3, line: 1189, type: !240)
!7676 = !DILocation(line: 1189, column: 6, scope: !7668)
!7677 = !DILocation(line: 1195, column: 7, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1195, column: 6)
!7679 = !DILocation(line: 1195, column: 13, scope: !7678)
!7680 = !DILocation(line: 1195, column: 18, scope: !7678)
!7681 = !DILocation(line: 1195, column: 6, scope: !7668)
!7682 = !DILocation(line: 1196, column: 3, scope: !7678)
!7683 = !DILocation(line: 1197, column: 7, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1197, column: 6)
!7685 = !DILocation(line: 1197, column: 13, scope: !7684)
!7686 = !DILocation(line: 1197, column: 18, scope: !7684)
!7687 = !DILocation(line: 1197, column: 6, scope: !7668)
!7688 = !DILocation(line: 1198, column: 3, scope: !7684)
!7689 = !DILocation(line: 1201, column: 6, scope: !7668)
!7690 = !DILocation(line: 1201, column: 13, scope: !7668)
!7691 = !DILocation(line: 1202, column: 6, scope: !7668)
!7692 = !DILocation(line: 1202, column: 10, scope: !7668)
!7693 = !DILocation(line: 1203, column: 6, scope: !7668)
!7694 = !DILocation(line: 1203, column: 12, scope: !7668)
!7695 = !DILocation(line: 1205, column: 25, scope: !7668)
!7696 = !DILocation(line: 1205, column: 8, scope: !7668)
!7697 = !DILocation(line: 1205, column: 6, scope: !7668)
!7698 = !DILocation(line: 1206, column: 6, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1206, column: 6)
!7700 = !DILocation(line: 1206, column: 6, scope: !7668)
!7701 = !DILocation(line: 1207, column: 10, scope: !7699)
!7702 = !DILocation(line: 1207, column: 3, scope: !7699)
!7703 = !DILocation(line: 1209, column: 7, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1209, column: 6)
!7705 = !DILocation(line: 1209, column: 29, scope: !7704)
!7706 = !DILocation(line: 1209, column: 37, scope: !7704)
!7707 = !DILocation(line: 1209, column: 33, scope: !7704)
!7708 = !DILocation(line: 1209, column: 45, scope: !7704)
!7709 = !DILocation(line: 1209, column: 6, scope: !7668)
!7710 = !DILocation(line: 1210, column: 3, scope: !7704)
!7711 = !DILocation(line: 1216, column: 2, scope: !7668)
!7712 = !DILocation(line: 1217, column: 6, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1217, column: 6)
!7714 = !DILocation(line: 1217, column: 12, scope: !7713)
!7715 = !DILocation(line: 1217, column: 17, scope: !7713)
!7716 = !DILocation(line: 1217, column: 27, scope: !7713)
!7717 = !DILocation(line: 1217, column: 31, scope: !7713)
!7718 = !DILocation(line: 1217, column: 37, scope: !7713)
!7719 = !DILocation(line: 1217, column: 42, scope: !7713)
!7720 = !DILocation(line: 1217, column: 52, scope: !7713)
!7721 = !DILocation(line: 1217, column: 6, scope: !7668)
!7722 = !DILocation(line: 1218, column: 7, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 1217, column: 59)
!7724 = !DILocation(line: 1219, column: 3, scope: !7723)
!7725 = !DILocation(line: 1222, column: 31, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1222, column: 6)
!7727 = !DILocation(line: 1222, column: 6, scope: !7726)
!7728 = !DILocation(line: 1222, column: 6, scope: !7668)
!7729 = !DILocation(line: 1227, column: 7, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 1222, column: 38)
!7731 = !DILocation(line: 1228, column: 3, scope: !7730)
!7732 = !DILocation(line: 1232, column: 2, scope: !7668)
!7733 = !DILocation(line: 1238, column: 6, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1238, column: 6)
!7735 = !DILocation(line: 1238, column: 12, scope: !7734)
!7736 = !DILocation(line: 1238, column: 17, scope: !7734)
!7737 = !DILocation(line: 1238, column: 27, scope: !7734)
!7738 = !DILocation(line: 1238, column: 30, scope: !7734)
!7739 = !DILocation(line: 1238, column: 36, scope: !7734)
!7740 = !DILocation(line: 1238, column: 41, scope: !7734)
!7741 = !DILocation(line: 1238, column: 51, scope: !7734)
!7742 = !DILocation(line: 1238, column: 6, scope: !7668)
!7743 = !DILocation(line: 1239, column: 7, scope: !7734)
!7744 = !DILocation(line: 1239, column: 3, scope: !7734)
!7745 = !DILocation(line: 1238, column: 55, scope: !7734)
!7746 = !DILabel(scope: !7668, name: "power_cycle", file: !3, line: 1241)
!7747 = !DILocation(line: 1241, column: 1, scope: !7668)
!7748 = !DILocation(line: 1242, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1242, column: 6)
!7750 = !DILocation(line: 1242, column: 6, scope: !7668)
!7751 = !DILocation(line: 1243, column: 3, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 1243, column: 3)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !3, line: 1243, column: 3)
!7754 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 1242, column: 11)
!7755 = !DILocation(line: 1243, column: 3, scope: !7753)
!7756 = !DILocation(line: 1245, column: 19, scope: !7754)
!7757 = !DILocation(line: 1245, column: 25, scope: !7754)
!7758 = !DILocation(line: 1245, column: 3, scope: !7754)
!7759 = !DILocation(line: 1246, column: 2, scope: !7754)
!7760 = !DILocation(line: 1248, column: 9, scope: !7668)
!7761 = !DILocation(line: 1248, column: 2, scope: !7668)
!7762 = !DILocation(line: 1249, column: 1, scope: !7668)
!7763 = distinct !DISubprogram(name: "mmc_set_timing", scope: !3, file: !3, line: 1254, type: !7138, scopeLine: 1255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7764 = !DILocalVariable(name: "host", arg: 1, scope: !7763, file: !3, line: 1254, type: !183)
!7765 = !DILocation(line: 1254, column: 38, scope: !7763)
!7766 = !DILocalVariable(name: "timing", arg: 2, scope: !7763, file: !3, line: 1254, type: !7)
!7767 = !DILocation(line: 1254, column: 57, scope: !7763)
!7768 = !DILocation(line: 1256, column: 21, scope: !7763)
!7769 = !DILocation(line: 1256, column: 2, scope: !7763)
!7770 = !DILocation(line: 1256, column: 8, scope: !7763)
!7771 = !DILocation(line: 1256, column: 12, scope: !7763)
!7772 = !DILocation(line: 1256, column: 19, scope: !7763)
!7773 = !DILocation(line: 1257, column: 14, scope: !7763)
!7774 = !DILocation(line: 1257, column: 2, scope: !7763)
!7775 = !DILocation(line: 1258, column: 1, scope: !7763)
!7776 = distinct !DISubprogram(name: "mmc_set_driver_type", scope: !3, file: !3, line: 1263, type: !7138, scopeLine: 1264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7777 = !DILocalVariable(name: "host", arg: 1, scope: !7776, file: !3, line: 1263, type: !183)
!7778 = !DILocation(line: 1263, column: 43, scope: !7776)
!7779 = !DILocalVariable(name: "drv_type", arg: 2, scope: !7776, file: !3, line: 1263, type: !7)
!7780 = !DILocation(line: 1263, column: 62, scope: !7776)
!7781 = !DILocation(line: 1265, column: 23, scope: !7776)
!7782 = !DILocation(line: 1265, column: 2, scope: !7776)
!7783 = !DILocation(line: 1265, column: 8, scope: !7776)
!7784 = !DILocation(line: 1265, column: 12, scope: !7776)
!7785 = !DILocation(line: 1265, column: 21, scope: !7776)
!7786 = !DILocation(line: 1266, column: 14, scope: !7776)
!7787 = !DILocation(line: 1266, column: 2, scope: !7776)
!7788 = !DILocation(line: 1267, column: 1, scope: !7776)
!7789 = distinct !DISubprogram(name: "mmc_select_drive_strength", scope: !3, file: !3, line: 1269, type: !7790, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7790 = !DISubroutineType(types: !7791)
!7791 = !{!240, !4990, !7, !240, !703}
!7792 = !DILocalVariable(name: "card", arg: 1, scope: !7789, file: !3, line: 1269, type: !4990)
!7793 = !DILocation(line: 1269, column: 48, scope: !7789)
!7794 = !DILocalVariable(name: "max_dtr", arg: 2, scope: !7789, file: !3, line: 1269, type: !7)
!7795 = !DILocation(line: 1269, column: 67, scope: !7789)
!7796 = !DILocalVariable(name: "card_drv_type", arg: 3, scope: !7789, file: !3, line: 1270, type: !240)
!7797 = !DILocation(line: 1270, column: 14, scope: !7789)
!7798 = !DILocalVariable(name: "drv_type", arg: 4, scope: !7789, file: !3, line: 1270, type: !703)
!7799 = !DILocation(line: 1270, column: 34, scope: !7789)
!7800 = !DILocalVariable(name: "host", scope: !7789, file: !3, line: 1272, type: !183)
!7801 = !DILocation(line: 1272, column: 19, scope: !7789)
!7802 = !DILocation(line: 1272, column: 26, scope: !7789)
!7803 = !DILocation(line: 1272, column: 32, scope: !7789)
!7804 = !DILocalVariable(name: "host_drv_type", scope: !7789, file: !3, line: 1273, type: !240)
!7805 = !DILocation(line: 1273, column: 6, scope: !7789)
!7806 = !DILocation(line: 1275, column: 3, scope: !7789)
!7807 = !DILocation(line: 1275, column: 12, scope: !7789)
!7808 = !DILocation(line: 1277, column: 7, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 1277, column: 6)
!7810 = !DILocation(line: 1277, column: 13, scope: !7809)
!7811 = !DILocation(line: 1277, column: 18, scope: !7809)
!7812 = !DILocation(line: 1277, column: 6, scope: !7789)
!7813 = !DILocation(line: 1278, column: 3, scope: !7809)
!7814 = !DILocation(line: 1281, column: 6, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 1281, column: 6)
!7816 = !DILocation(line: 1281, column: 12, scope: !7815)
!7817 = !DILocation(line: 1281, column: 17, scope: !7815)
!7818 = !DILocation(line: 1281, column: 6, scope: !7789)
!7819 = !DILocation(line: 1282, column: 17, scope: !7815)
!7820 = !DILocation(line: 1282, column: 3, scope: !7815)
!7821 = !DILocation(line: 1284, column: 6, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 1284, column: 6)
!7823 = !DILocation(line: 1284, column: 12, scope: !7822)
!7824 = !DILocation(line: 1284, column: 17, scope: !7822)
!7825 = !DILocation(line: 1284, column: 6, scope: !7789)
!7826 = !DILocation(line: 1285, column: 17, scope: !7822)
!7827 = !DILocation(line: 1285, column: 3, scope: !7822)
!7828 = !DILocation(line: 1287, column: 6, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 1287, column: 6)
!7830 = !DILocation(line: 1287, column: 12, scope: !7829)
!7831 = !DILocation(line: 1287, column: 17, scope: !7829)
!7832 = !DILocation(line: 1287, column: 6, scope: !7789)
!7833 = !DILocation(line: 1288, column: 17, scope: !7829)
!7834 = !DILocation(line: 1288, column: 3, scope: !7829)
!7835 = !DILocation(line: 1296, column: 9, scope: !7789)
!7836 = !DILocation(line: 1296, column: 15, scope: !7789)
!7837 = !DILocation(line: 1296, column: 20, scope: !7789)
!7838 = !DILocation(line: 1296, column: 42, scope: !7789)
!7839 = !DILocation(line: 1296, column: 48, scope: !7789)
!7840 = !DILocation(line: 1297, column: 7, scope: !7789)
!7841 = !DILocation(line: 1298, column: 7, scope: !7789)
!7842 = !DILocation(line: 1299, column: 7, scope: !7789)
!7843 = !DILocation(line: 1296, column: 2, scope: !7789)
!7844 = !DILocation(line: 1300, column: 1, scope: !7789)
!7845 = distinct !DISubprogram(name: "mmc_power_up", scope: !3, file: !3, line: 1313, type: !7547, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7846 = !DILocation(line: 324, column: 45, scope: !7465, inlinedAt: !7847)
!7847 = distinct !DILocation(line: 1320, column: 18, scope: !7845)
!7848 = !DILocation(line: 326, column: 6, scope: !7465, inlinedAt: !7847)
!7849 = !DILocalVariable(name: "host", arg: 1, scope: !7845, file: !3, line: 1313, type: !183)
!7850 = !DILocation(line: 1313, column: 36, scope: !7845)
!7851 = !DILocalVariable(name: "ocr", arg: 2, scope: !7845, file: !3, line: 1313, type: !396)
!7852 = !DILocation(line: 1313, column: 46, scope: !7845)
!7853 = !DILocation(line: 1315, column: 6, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 1315, column: 6)
!7855 = !DILocation(line: 1315, column: 12, scope: !7854)
!7856 = !DILocation(line: 1315, column: 16, scope: !7854)
!7857 = !DILocation(line: 1315, column: 27, scope: !7854)
!7858 = !DILocation(line: 1315, column: 6, scope: !7845)
!7859 = !DILocation(line: 1316, column: 3, scope: !7854)
!7860 = !DILocation(line: 1318, column: 26, scope: !7845)
!7861 = !DILocation(line: 1318, column: 2, scope: !7845)
!7862 = !DILocation(line: 1320, column: 22, scope: !7845)
!7863 = !DILocation(line: 340, column: 14, scope: !7465, inlinedAt: !7847)
!7864 = !DILocation(line: 338, column: 2, scope: !7465, inlinedAt: !7847)
!7865 = !DILocation(line: 351, column: 9, scope: !7465, inlinedAt: !7847)
!7866 = !DILocation(line: 351, column: 11, scope: !7465, inlinedAt: !7847)
!7867 = !DILocation(line: 1320, column: 27, scope: !7845)
!7868 = !DILocation(line: 1320, column: 18, scope: !7845)
!7869 = !DILocation(line: 1320, column: 2, scope: !7845)
!7870 = !DILocation(line: 1320, column: 8, scope: !7845)
!7871 = !DILocation(line: 1320, column: 12, scope: !7845)
!7872 = !DILocation(line: 1320, column: 16, scope: !7845)
!7873 = !DILocation(line: 1321, column: 2, scope: !7845)
!7874 = !DILocation(line: 1321, column: 8, scope: !7845)
!7875 = !DILocation(line: 1321, column: 12, scope: !7845)
!7876 = !DILocation(line: 1321, column: 23, scope: !7845)
!7877 = !DILocation(line: 1323, column: 24, scope: !7845)
!7878 = !DILocation(line: 1323, column: 2, scope: !7845)
!7879 = !DILocation(line: 1325, column: 33, scope: !7845)
!7880 = !DILocation(line: 1325, column: 2, scope: !7845)
!7881 = !DILocation(line: 1331, column: 12, scope: !7845)
!7882 = !DILocation(line: 1331, column: 18, scope: !7845)
!7883 = !DILocation(line: 1331, column: 22, scope: !7845)
!7884 = !DILocation(line: 1331, column: 2, scope: !7845)
!7885 = !DILocation(line: 1333, column: 27, scope: !7845)
!7886 = !DILocation(line: 1333, column: 2, scope: !7845)
!7887 = !DILocation(line: 1335, column: 20, scope: !7845)
!7888 = !DILocation(line: 1335, column: 26, scope: !7845)
!7889 = !DILocation(line: 1335, column: 2, scope: !7845)
!7890 = !DILocation(line: 1335, column: 8, scope: !7845)
!7891 = !DILocation(line: 1335, column: 12, scope: !7845)
!7892 = !DILocation(line: 1335, column: 18, scope: !7845)
!7893 = !DILocation(line: 1337, column: 2, scope: !7845)
!7894 = !DILocation(line: 1337, column: 8, scope: !7845)
!7895 = !DILocation(line: 1337, column: 12, scope: !7845)
!7896 = !DILocation(line: 1337, column: 23, scope: !7845)
!7897 = !DILocation(line: 1338, column: 14, scope: !7845)
!7898 = !DILocation(line: 1338, column: 2, scope: !7845)
!7899 = !DILocation(line: 1344, column: 12, scope: !7845)
!7900 = !DILocation(line: 1344, column: 18, scope: !7845)
!7901 = !DILocation(line: 1344, column: 22, scope: !7845)
!7902 = !DILocation(line: 1344, column: 2, scope: !7845)
!7903 = !DILocation(line: 1345, column: 1, scope: !7845)
!7904 = distinct !DISubprogram(name: "mmc_power_off", scope: !3, file: !3, line: 1347, type: !4984, scopeLine: 1348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7905 = !DILocalVariable(name: "host", arg: 1, scope: !7904, file: !3, line: 1347, type: !183)
!7906 = !DILocation(line: 1347, column: 37, scope: !7904)
!7907 = !DILocation(line: 1349, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 1349, column: 6)
!7909 = !DILocation(line: 1349, column: 12, scope: !7908)
!7910 = !DILocation(line: 1349, column: 16, scope: !7908)
!7911 = !DILocation(line: 1349, column: 27, scope: !7908)
!7912 = !DILocation(line: 1349, column: 6, scope: !7904)
!7913 = !DILocation(line: 1350, column: 3, scope: !7908)
!7914 = !DILocation(line: 1352, column: 23, scope: !7904)
!7915 = !DILocation(line: 1352, column: 2, scope: !7904)
!7916 = !DILocation(line: 1354, column: 2, scope: !7904)
!7917 = !DILocation(line: 1354, column: 8, scope: !7904)
!7918 = !DILocation(line: 1354, column: 12, scope: !7904)
!7919 = !DILocation(line: 1354, column: 18, scope: !7904)
!7920 = !DILocation(line: 1355, column: 2, scope: !7904)
!7921 = !DILocation(line: 1355, column: 8, scope: !7904)
!7922 = !DILocation(line: 1355, column: 12, scope: !7904)
!7923 = !DILocation(line: 1355, column: 16, scope: !7904)
!7924 = !DILocation(line: 1357, column: 2, scope: !7904)
!7925 = !DILocation(line: 1357, column: 8, scope: !7904)
!7926 = !DILocation(line: 1357, column: 12, scope: !7904)
!7927 = !DILocation(line: 1357, column: 23, scope: !7904)
!7928 = !DILocation(line: 1359, column: 24, scope: !7904)
!7929 = !DILocation(line: 1359, column: 2, scope: !7904)
!7930 = !DILocation(line: 1366, column: 2, scope: !7904)
!7931 = !DILocation(line: 1367, column: 1, scope: !7904)
!7932 = distinct !DISubprogram(name: "mmc_attach_bus", scope: !3, file: !3, line: 1418, type: !7933, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{null, !183, !5317}
!7935 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !7936)
!7936 = distinct !DILocation(line: 1433, column: 2, scope: !7932)
!7937 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !7936)
!7938 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !7939)
!7939 = distinct !DILocation(line: 1424, column: 2, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1424, column: 2)
!7941 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 1424, column: 2)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 1424, column: 2)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 1424, column: 2)
!7944 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 1424, column: 2)
!7945 = !DILocalVariable(name: "host", arg: 1, scope: !7932, file: !3, line: 1418, type: !183)
!7946 = !DILocation(line: 1418, column: 38, scope: !7932)
!7947 = !DILocalVariable(name: "ops", arg: 2, scope: !7932, file: !3, line: 1418, type: !5317)
!7948 = !DILocation(line: 1418, column: 70, scope: !7932)
!7949 = !DILocalVariable(name: "flags", scope: !7932, file: !3, line: 1420, type: !305)
!7950 = !DILocation(line: 1420, column: 16, scope: !7932)
!7951 = !DILocalVariable(name: "__ret_warn_on", scope: !7952, file: !3, line: 1422, type: !240)
!7952 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 1422, column: 2)
!7953 = !DILocation(line: 1422, column: 2, scope: !7952)
!7954 = !DILocation(line: 1422, column: 2, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 1422, column: 2)
!7956 = !DILocation(line: 1422, column: 2, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 1422, column: 2)
!7958 = !DILocation(line: 1422, column: 2, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1422, column: 2)
!7960 = !DILocation(line: 1422, column: 2, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1422, column: 2)
!7962 = !{i32 -2140452592, i32 -2140452563, i32 -2140452517, i32 -2140452459, i32 -2140452405, i32 -2140452351, i32 -2140452296, i32 -2140452265}
!7963 = !DILocation(line: 1422, column: 2, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1422, column: 2)
!7965 = !{i32 -2140451859, i32 -2140451852, i32 -2140451800, i32 -2140451769, i32 -2140451739}
!7966 = !DILocation(line: 1422, column: 2, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1422, column: 2)
!7968 = !DILocation(line: 1424, column: 2, scope: !7932)
!7969 = !DILocation(line: 1424, column: 2, scope: !7944)
!7970 = !DILocalVariable(name: "__dummy", scope: !7971, file: !3, line: 1424, type: !305)
!7971 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 1424, column: 2)
!7972 = !DILocation(line: 1424, column: 2, scope: !7971)
!7973 = !DILocalVariable(name: "__dummy2", scope: !7971, file: !3, line: 1424, type: !305)
!7974 = !DILocation(line: 1424, column: 2, scope: !7943)
!7975 = !DILocation(line: 1424, column: 2, scope: !7942)
!7976 = !DILocation(line: 1424, column: 2, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 1424, column: 2)
!7978 = !DILocalVariable(name: "__dummy", scope: !7979, file: !3, line: 1424, type: !305)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 1424, column: 2)
!7980 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1424, column: 2)
!7981 = !DILocation(line: 1424, column: 2, scope: !7979)
!7982 = !DILocalVariable(name: "__dummy2", scope: !7979, file: !3, line: 1424, type: !305)
!7983 = !DILocation(line: 1424, column: 2, scope: !7980)
!7984 = !DILocation(line: 1424, column: 2, scope: !7941)
!7985 = !{i32 -2140450758}
!7986 = !DILocation(line: 1424, column: 2, scope: !7940)
!7987 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !7939)
!7988 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !7939)
!7989 = !DILocalVariable(name: "__ret_warn_on", scope: !7990, file: !3, line: 1426, type: !240)
!7990 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 1426, column: 2)
!7991 = !DILocation(line: 1426, column: 2, scope: !7990)
!7992 = !DILocation(line: 1426, column: 2, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 1426, column: 2)
!7994 = !DILocation(line: 1426, column: 2, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1426, column: 2)
!7996 = !DILocation(line: 1426, column: 2, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1426, column: 2)
!7998 = !DILocation(line: 1426, column: 2, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1426, column: 2)
!8000 = !{i32 -2140450135, i32 -2140450106, i32 -2140450060, i32 -2140450002, i32 -2140449948, i32 -2140449894, i32 -2140449839, i32 -2140449808}
!8001 = !DILocation(line: 1426, column: 2, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1426, column: 2)
!8003 = !{i32 -2140449402, i32 -2140449395, i32 -2140449343, i32 -2140449312, i32 -2140449282}
!8004 = !DILocation(line: 1426, column: 2, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7995, file: !3, line: 1426, column: 2)
!8006 = !DILocalVariable(name: "__ret_warn_on", scope: !8007, file: !3, line: 1427, type: !240)
!8007 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 1427, column: 2)
!8008 = !DILocation(line: 1427, column: 2, scope: !8007)
!8009 = !DILocation(line: 1427, column: 2, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 1427, column: 2)
!8011 = !DILocation(line: 1427, column: 2, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8010, file: !3, line: 1427, column: 2)
!8013 = !DILocation(line: 1427, column: 2, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1427, column: 2)
!8015 = !DILocation(line: 1427, column: 2, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1427, column: 2)
!8017 = !{i32 -2140448696, i32 -2140448667, i32 -2140448621, i32 -2140448563, i32 -2140448509, i32 -2140448455, i32 -2140448400, i32 -2140448369}
!8018 = !DILocation(line: 1427, column: 2, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1427, column: 2)
!8020 = !{i32 -2140447963, i32 -2140447956, i32 -2140447904, i32 -2140447873, i32 -2140447843}
!8021 = !DILocation(line: 1427, column: 2, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1427, column: 2)
!8023 = !DILocation(line: 1429, column: 18, scope: !7932)
!8024 = !DILocation(line: 1429, column: 2, scope: !7932)
!8025 = !DILocation(line: 1429, column: 8, scope: !7932)
!8026 = !DILocation(line: 1429, column: 16, scope: !7932)
!8027 = !DILocation(line: 1430, column: 2, scope: !7932)
!8028 = !DILocation(line: 1430, column: 8, scope: !7932)
!8029 = !DILocation(line: 1430, column: 17, scope: !7932)
!8030 = !DILocation(line: 1431, column: 2, scope: !7932)
!8031 = !DILocation(line: 1431, column: 8, scope: !7932)
!8032 = !DILocation(line: 1431, column: 17, scope: !7932)
!8033 = !DILocation(line: 1433, column: 26, scope: !7932)
!8034 = !DILocation(line: 1433, column: 32, scope: !7932)
!8035 = !DILocation(line: 1433, column: 38, scope: !7932)
!8036 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !7936)
!8037 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !7936)
!8038 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !7936)
!8039 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !7936)
!8040 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !7936)
!8041 = !DILocation(line: 1434, column: 1, scope: !7932)
!8042 = distinct !DISubprogram(name: "mmc_detach_bus", scope: !3, file: !3, line: 1439, type: !4984, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8043 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !8044)
!8044 = distinct !DILocation(line: 1450, column: 2, scope: !8042)
!8045 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !8044)
!8046 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !8047)
!8047 = distinct !DILocation(line: 1446, column: 2, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !3, line: 1446, column: 2)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 1446, column: 2)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 1446, column: 2)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 1446, column: 2)
!8052 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1446, column: 2)
!8053 = !DILocalVariable(name: "host", arg: 1, scope: !8042, file: !3, line: 1439, type: !183)
!8054 = !DILocation(line: 1439, column: 38, scope: !8042)
!8055 = !DILocalVariable(name: "flags", scope: !8042, file: !3, line: 1441, type: !305)
!8056 = !DILocation(line: 1441, column: 16, scope: !8042)
!8057 = !DILocalVariable(name: "__ret_warn_on", scope: !8058, file: !3, line: 1443, type: !240)
!8058 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1443, column: 2)
!8059 = !DILocation(line: 1443, column: 2, scope: !8058)
!8060 = !DILocation(line: 1443, column: 2, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 1443, column: 2)
!8062 = !DILocation(line: 1443, column: 2, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 1443, column: 2)
!8064 = !DILocation(line: 1443, column: 2, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 1443, column: 2)
!8066 = !DILocation(line: 1443, column: 2, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 1443, column: 2)
!8068 = !{i32 -2140447257, i32 -2140447228, i32 -2140447182, i32 -2140447124, i32 -2140447070, i32 -2140447016, i32 -2140446961, i32 -2140446930}
!8069 = !DILocation(line: 1443, column: 2, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 1443, column: 2)
!8071 = !{i32 -2140446524, i32 -2140446517, i32 -2140446465, i32 -2140446434, i32 -2140446404}
!8072 = !DILocation(line: 1443, column: 2, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 1443, column: 2)
!8074 = !DILocalVariable(name: "__ret_warn_on", scope: !8075, file: !3, line: 1444, type: !240)
!8075 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1444, column: 2)
!8076 = !DILocation(line: 1444, column: 2, scope: !8075)
!8077 = !DILocation(line: 1444, column: 2, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 1444, column: 2)
!8079 = !DILocation(line: 1444, column: 2, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 1444, column: 2)
!8081 = !DILocation(line: 1444, column: 2, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 1444, column: 2)
!8083 = !DILocation(line: 1444, column: 2, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 1444, column: 2)
!8085 = !{i32 -2140445818, i32 -2140445789, i32 -2140445743, i32 -2140445685, i32 -2140445631, i32 -2140445577, i32 -2140445522, i32 -2140445491}
!8086 = !DILocation(line: 1444, column: 2, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 1444, column: 2)
!8088 = !{i32 -2140445085, i32 -2140445078, i32 -2140445026, i32 -2140444995, i32 -2140444965}
!8089 = !DILocation(line: 1444, column: 2, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 1444, column: 2)
!8091 = !DILocation(line: 1446, column: 2, scope: !8042)
!8092 = !DILocation(line: 1446, column: 2, scope: !8052)
!8093 = !DILocalVariable(name: "__dummy", scope: !8094, file: !3, line: 1446, type: !305)
!8094 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 1446, column: 2)
!8095 = !DILocation(line: 1446, column: 2, scope: !8094)
!8096 = !DILocalVariable(name: "__dummy2", scope: !8094, file: !3, line: 1446, type: !305)
!8097 = !DILocation(line: 1446, column: 2, scope: !8051)
!8098 = !DILocation(line: 1446, column: 2, scope: !8050)
!8099 = !DILocation(line: 1446, column: 2, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 1446, column: 2)
!8101 = !DILocalVariable(name: "__dummy", scope: !8102, file: !3, line: 1446, type: !305)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 1446, column: 2)
!8103 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 1446, column: 2)
!8104 = !DILocation(line: 1446, column: 2, scope: !8102)
!8105 = !DILocalVariable(name: "__dummy2", scope: !8102, file: !3, line: 1446, type: !305)
!8106 = !DILocation(line: 1446, column: 2, scope: !8103)
!8107 = !DILocation(line: 1446, column: 2, scope: !8049)
!8108 = !{i32 -2140443984}
!8109 = !DILocation(line: 1446, column: 2, scope: !8048)
!8110 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !8047)
!8111 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !8047)
!8112 = !DILocation(line: 1448, column: 2, scope: !8042)
!8113 = !DILocation(line: 1448, column: 8, scope: !8042)
!8114 = !DILocation(line: 1448, column: 17, scope: !8042)
!8115 = !DILocation(line: 1450, column: 26, scope: !8042)
!8116 = !DILocation(line: 1450, column: 32, scope: !8042)
!8117 = !DILocation(line: 1450, column: 38, scope: !8042)
!8118 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !8044)
!8119 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !8044)
!8120 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !8044)
!8121 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !8044)
!8122 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !8044)
!8123 = !DILocation(line: 1452, column: 14, scope: !8042)
!8124 = !DILocation(line: 1452, column: 2, scope: !8042)
!8125 = !DILocation(line: 1453, column: 1, scope: !8042)
!8126 = distinct !DISubprogram(name: "mmc_bus_put", scope: !3, file: !3, line: 1403, type: !4984, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8127 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !8128)
!8128 = distinct !DILocation(line: 1411, column: 2, scope: !8126)
!8129 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !8128)
!8130 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !8131)
!8131 = distinct !DILocation(line: 1407, column: 2, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 1407, column: 2)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 1407, column: 2)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 1407, column: 2)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 1407, column: 2)
!8136 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 1407, column: 2)
!8137 = !DILocalVariable(name: "host", arg: 1, scope: !8126, file: !3, line: 1403, type: !183)
!8138 = !DILocation(line: 1403, column: 49, scope: !8126)
!8139 = !DILocalVariable(name: "flags", scope: !8126, file: !3, line: 1405, type: !305)
!8140 = !DILocation(line: 1405, column: 16, scope: !8126)
!8141 = !DILocation(line: 1407, column: 2, scope: !8126)
!8142 = !DILocation(line: 1407, column: 2, scope: !8136)
!8143 = !DILocalVariable(name: "__dummy", scope: !8144, file: !3, line: 1407, type: !305)
!8144 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 1407, column: 2)
!8145 = !DILocation(line: 1407, column: 2, scope: !8144)
!8146 = !DILocalVariable(name: "__dummy2", scope: !8144, file: !3, line: 1407, type: !305)
!8147 = !DILocation(line: 1407, column: 2, scope: !8135)
!8148 = !DILocation(line: 1407, column: 2, scope: !8134)
!8149 = !DILocation(line: 1407, column: 2, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 1407, column: 2)
!8151 = !DILocalVariable(name: "__dummy", scope: !8152, file: !3, line: 1407, type: !305)
!8152 = distinct !DILexicalBlock(scope: !8153, file: !3, line: 1407, column: 2)
!8153 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 1407, column: 2)
!8154 = !DILocation(line: 1407, column: 2, scope: !8152)
!8155 = !DILocalVariable(name: "__dummy2", scope: !8152, file: !3, line: 1407, type: !305)
!8156 = !DILocation(line: 1407, column: 2, scope: !8153)
!8157 = !DILocation(line: 1407, column: 2, scope: !8133)
!8158 = !{i32 -2140453216}
!8159 = !DILocation(line: 1407, column: 2, scope: !8132)
!8160 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !8131)
!8161 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !8131)
!8162 = !DILocation(line: 1408, column: 2, scope: !8126)
!8163 = !DILocation(line: 1408, column: 8, scope: !8126)
!8164 = !DILocation(line: 1408, column: 16, scope: !8126)
!8165 = !DILocation(line: 1409, column: 7, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 1409, column: 6)
!8167 = !DILocation(line: 1409, column: 13, scope: !8166)
!8168 = !DILocation(line: 1409, column: 22, scope: !8166)
!8169 = !DILocation(line: 1409, column: 28, scope: !8166)
!8170 = !DILocation(line: 1409, column: 31, scope: !8166)
!8171 = !DILocation(line: 1409, column: 37, scope: !8166)
!8172 = !DILocation(line: 1409, column: 6, scope: !8126)
!8173 = !DILocation(line: 1410, column: 21, scope: !8166)
!8174 = !DILocation(line: 1410, column: 3, scope: !8166)
!8175 = !DILocation(line: 1411, column: 26, scope: !8126)
!8176 = !DILocation(line: 1411, column: 32, scope: !8126)
!8177 = !DILocation(line: 1411, column: 38, scope: !8126)
!8178 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !8128)
!8179 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !8128)
!8180 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !8128)
!8181 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !8128)
!8182 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !8128)
!8183 = !DILocation(line: 1412, column: 1, scope: !8126)
!8184 = distinct !DISubprogram(name: "_mmc_detect_change", scope: !3, file: !3, line: 1455, type: !8185, scopeLine: 1456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8185 = !DISubroutineType(types: !8186)
!8186 = !{null, !183, !305, !471}
!8187 = !DILocalVariable(name: "host", arg: 1, scope: !8184, file: !3, line: 1455, type: !183)
!8188 = !DILocation(line: 1455, column: 42, scope: !8184)
!8189 = !DILocalVariable(name: "delay", arg: 2, scope: !8184, file: !3, line: 1455, type: !305)
!8190 = !DILocation(line: 1455, column: 62, scope: !8184)
!8191 = !DILocalVariable(name: "cd_irq", arg: 3, scope: !8184, file: !3, line: 1455, type: !471)
!8192 = !DILocation(line: 1455, column: 74, scope: !8184)
!8193 = !DILocation(line: 1462, column: 6, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8184, file: !3, line: 1462, column: 6)
!8195 = !DILocation(line: 1462, column: 13, scope: !8194)
!8196 = !DILocation(line: 1462, column: 18, scope: !8194)
!8197 = !DILocation(line: 1462, column: 24, scope: !8194)
!8198 = !DILocation(line: 1462, column: 29, scope: !8194)
!8199 = !DILocation(line: 1462, column: 6, scope: !8184)
!8200 = !DILocation(line: 1463, column: 21, scope: !8194)
!8201 = !DILocation(line: 1463, column: 27, scope: !8194)
!8202 = !DILocation(line: 1463, column: 3, scope: !8194)
!8203 = !DILocation(line: 1465, column: 2, scope: !8184)
!8204 = !DILocation(line: 1465, column: 8, scope: !8184)
!8205 = !DILocation(line: 1465, column: 22, scope: !8184)
!8206 = !DILocation(line: 1466, column: 29, scope: !8184)
!8207 = !DILocation(line: 1466, column: 35, scope: !8184)
!8208 = !DILocation(line: 1466, column: 43, scope: !8184)
!8209 = !DILocation(line: 1466, column: 2, scope: !8184)
!8210 = !DILocation(line: 1467, column: 1, scope: !8184)
!8211 = distinct !DISubprogram(name: "__pm_wakeup_event", scope: !4602, file: !4602, line: 195, type: !8212, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{null, !4600, !7}
!8214 = !DILocalVariable(name: "ws", arg: 1, scope: !8211, file: !4602, line: 195, type: !4600)
!8215 = !DILocation(line: 195, column: 60, scope: !8211)
!8216 = !DILocalVariable(name: "msec", arg: 2, scope: !8211, file: !4602, line: 195, type: !7)
!8217 = !DILocation(line: 195, column: 77, scope: !8211)
!8218 = !DILocation(line: 197, column: 28, scope: !8211)
!8219 = !DILocation(line: 197, column: 32, scope: !8211)
!8220 = !DILocation(line: 197, column: 9, scope: !8211)
!8221 = !DILocation(line: 197, column: 2, scope: !8211)
!8222 = distinct !DISubprogram(name: "mmc_schedule_delayed_work", scope: !3, file: !3, line: 63, type: !8223, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!240, !8225, !305}
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!8226 = !DILocalVariable(name: "work", arg: 1, scope: !8222, file: !3, line: 63, type: !8225)
!8227 = !DILocation(line: 63, column: 59, scope: !8222)
!8228 = !DILocalVariable(name: "delay", arg: 2, scope: !8222, file: !3, line: 64, type: !305)
!8229 = !DILocation(line: 64, column: 24, scope: !8222)
!8230 = !DILocation(line: 72, column: 28, scope: !8222)
!8231 = !DILocation(line: 72, column: 49, scope: !8222)
!8232 = !DILocation(line: 72, column: 55, scope: !8222)
!8233 = !DILocation(line: 72, column: 9, scope: !8222)
!8234 = !DILocation(line: 72, column: 2, scope: !8222)
!8235 = distinct !DISubprogram(name: "mmc_detect_change", scope: !3, file: !3, line: 1479, type: !8236, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{null, !183, !305}
!8238 = !DILocalVariable(name: "host", arg: 1, scope: !8235, file: !3, line: 1479, type: !183)
!8239 = !DILocation(line: 1479, column: 41, scope: !8235)
!8240 = !DILocalVariable(name: "delay", arg: 2, scope: !8235, file: !3, line: 1479, type: !305)
!8241 = !DILocation(line: 1479, column: 61, scope: !8235)
!8242 = !DILocation(line: 1481, column: 21, scope: !8235)
!8243 = !DILocation(line: 1481, column: 27, scope: !8235)
!8244 = !DILocation(line: 1481, column: 2, scope: !8235)
!8245 = !DILocation(line: 1482, column: 1, scope: !8235)
!8246 = distinct !DISubprogram(name: "mmc_init_erase", scope: !3, file: !3, line: 1485, type: !8247, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{null, !4990}
!8249 = !DILocation(line: 283, column: 36, scope: !7476, inlinedAt: !8250)
!8250 = distinct !DILocation(line: 1511, column: 23, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1509, column: 41)
!8252 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 1509, column: 6)
!8253 = !DILocation(line: 285, column: 6, scope: !7476, inlinedAt: !8250)
!8254 = !DILocation(line: 283, column: 36, scope: !7476, inlinedAt: !8255)
!8255 = distinct !DILocation(line: 1490, column: 23, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 1489, column: 6)
!8257 = !DILocation(line: 285, column: 6, scope: !7476, inlinedAt: !8255)
!8258 = !DILocalVariable(name: "card", arg: 1, scope: !8246, file: !3, line: 1485, type: !4990)
!8259 = !DILocation(line: 1485, column: 38, scope: !8246)
!8260 = !DILocalVariable(name: "sz", scope: !8246, file: !3, line: 1487, type: !7)
!8261 = !DILocation(line: 1487, column: 15, scope: !8246)
!8262 = !DILocation(line: 1489, column: 20, scope: !8256)
!8263 = !DILocation(line: 1489, column: 26, scope: !8256)
!8264 = !DILocation(line: 1489, column: 6, scope: !8256)
!8265 = !DILocation(line: 1489, column: 6, scope: !8246)
!8266 = !DILocation(line: 1490, column: 27, scope: !8256)
!8267 = !DILocation(line: 1490, column: 33, scope: !8256)
!8268 = !DILocation(line: 299, column: 14, scope: !7476, inlinedAt: !8255)
!8269 = !DILocation(line: 297, column: 2, scope: !7476, inlinedAt: !8255)
!8270 = !DILocation(line: 310, column: 9, scope: !7476, inlinedAt: !8255)
!8271 = !DILocation(line: 310, column: 11, scope: !7476, inlinedAt: !8255)
!8272 = !DILocation(line: 1490, column: 45, scope: !8256)
!8273 = !DILocation(line: 1490, column: 3, scope: !8256)
!8274 = !DILocation(line: 1490, column: 9, scope: !8256)
!8275 = !DILocation(line: 1490, column: 21, scope: !8256)
!8276 = !DILocation(line: 1492, column: 3, scope: !8256)
!8277 = !DILocation(line: 1492, column: 9, scope: !8256)
!8278 = !DILocation(line: 1492, column: 21, scope: !8256)
!8279 = !DILocation(line: 1509, column: 6, scope: !8252)
!8280 = !DILocation(line: 1509, column: 24, scope: !8252)
!8281 = !DILocation(line: 1509, column: 27, scope: !8252)
!8282 = !DILocation(line: 1509, column: 33, scope: !8252)
!8283 = !DILocation(line: 1509, column: 37, scope: !8252)
!8284 = !DILocation(line: 1509, column: 6, scope: !8246)
!8285 = !DILocation(line: 1510, column: 22, scope: !8251)
!8286 = !DILocation(line: 1510, column: 28, scope: !8251)
!8287 = !DILocation(line: 1510, column: 32, scope: !8251)
!8288 = !DILocation(line: 1510, column: 3, scope: !8251)
!8289 = !DILocation(line: 1510, column: 9, scope: !8251)
!8290 = !DILocation(line: 1510, column: 20, scope: !8251)
!8291 = !DILocation(line: 1511, column: 27, scope: !8251)
!8292 = !DILocation(line: 1511, column: 33, scope: !8251)
!8293 = !DILocation(line: 1511, column: 37, scope: !8251)
!8294 = !DILocation(line: 299, column: 14, scope: !7476, inlinedAt: !8250)
!8295 = !DILocation(line: 297, column: 2, scope: !7476, inlinedAt: !8250)
!8296 = !DILocation(line: 310, column: 9, scope: !7476, inlinedAt: !8250)
!8297 = !DILocation(line: 310, column: 11, scope: !7476, inlinedAt: !8250)
!8298 = !DILocation(line: 1511, column: 41, scope: !8251)
!8299 = !DILocation(line: 1511, column: 3, scope: !8251)
!8300 = !DILocation(line: 1511, column: 9, scope: !8251)
!8301 = !DILocation(line: 1511, column: 21, scope: !8251)
!8302 = !DILocation(line: 1512, column: 2, scope: !8251)
!8303 = !DILocation(line: 1512, column: 13, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1512, column: 13)
!8305 = !DILocation(line: 1512, column: 19, scope: !8304)
!8306 = !DILocation(line: 1512, column: 13, scope: !8252)
!8307 = !DILocation(line: 1513, column: 9, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 1512, column: 31)
!8309 = !DILocation(line: 1513, column: 15, scope: !8308)
!8310 = !DILocation(line: 1513, column: 19, scope: !8308)
!8311 = !DILocation(line: 1513, column: 32, scope: !8308)
!8312 = !DILocation(line: 1513, column: 38, scope: !8308)
!8313 = !DILocation(line: 1513, column: 42, scope: !8308)
!8314 = !DILocation(line: 1513, column: 55, scope: !8308)
!8315 = !DILocation(line: 1513, column: 28, scope: !8308)
!8316 = !DILocation(line: 1513, column: 61, scope: !8308)
!8317 = !DILocation(line: 1513, column: 6, scope: !8308)
!8318 = !DILocation(line: 1514, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1514, column: 7)
!8320 = !DILocation(line: 1514, column: 10, scope: !8319)
!8321 = !DILocation(line: 1514, column: 7, scope: !8308)
!8322 = !DILocation(line: 1515, column: 4, scope: !8319)
!8323 = !DILocation(line: 1515, column: 10, scope: !8319)
!8324 = !DILocation(line: 1515, column: 21, scope: !8319)
!8325 = !DILocation(line: 1516, column: 12, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 1516, column: 12)
!8327 = !DILocation(line: 1516, column: 15, scope: !8326)
!8328 = !DILocation(line: 1516, column: 12, scope: !8319)
!8329 = !DILocation(line: 1517, column: 4, scope: !8326)
!8330 = !DILocation(line: 1517, column: 10, scope: !8326)
!8331 = !DILocation(line: 1517, column: 21, scope: !8326)
!8332 = !DILocation(line: 1518, column: 12, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8326, file: !3, line: 1518, column: 12)
!8334 = !DILocation(line: 1518, column: 15, scope: !8333)
!8335 = !DILocation(line: 1518, column: 12, scope: !8326)
!8336 = !DILocation(line: 1519, column: 4, scope: !8333)
!8337 = !DILocation(line: 1519, column: 10, scope: !8333)
!8338 = !DILocation(line: 1519, column: 21, scope: !8333)
!8339 = !DILocation(line: 1521, column: 4, scope: !8333)
!8340 = !DILocation(line: 1521, column: 10, scope: !8333)
!8341 = !DILocation(line: 1521, column: 21, scope: !8333)
!8342 = !DILocation(line: 1522, column: 7, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 1522, column: 7)
!8344 = !DILocation(line: 1522, column: 13, scope: !8343)
!8345 = !DILocation(line: 1522, column: 26, scope: !8343)
!8346 = !DILocation(line: 1522, column: 32, scope: !8343)
!8347 = !DILocation(line: 1522, column: 24, scope: !8343)
!8348 = !DILocation(line: 1522, column: 7, scope: !8308)
!8349 = !DILocation(line: 1523, column: 23, scope: !8343)
!8350 = !DILocation(line: 1523, column: 29, scope: !8343)
!8351 = !DILocation(line: 1523, column: 4, scope: !8343)
!8352 = !DILocation(line: 1523, column: 10, scope: !8343)
!8353 = !DILocation(line: 1523, column: 21, scope: !8343)
!8354 = !DILocation(line: 1525, column: 9, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1524, column: 8)
!8356 = !DILocation(line: 1525, column: 15, scope: !8355)
!8357 = !DILocation(line: 1525, column: 28, scope: !8355)
!8358 = !DILocation(line: 1525, column: 34, scope: !8355)
!8359 = !DILocation(line: 1525, column: 26, scope: !8355)
!8360 = !DILocation(line: 1525, column: 7, scope: !8355)
!8361 = !DILocation(line: 1526, column: 8, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1526, column: 8)
!8363 = !DILocation(line: 1526, column: 8, scope: !8355)
!8364 = !DILocation(line: 1527, column: 25, scope: !8362)
!8365 = !DILocation(line: 1527, column: 31, scope: !8362)
!8366 = !DILocation(line: 1527, column: 44, scope: !8362)
!8367 = !DILocation(line: 1527, column: 42, scope: !8362)
!8368 = !DILocation(line: 1527, column: 5, scope: !8362)
!8369 = !DILocation(line: 1527, column: 11, scope: !8362)
!8370 = !DILocation(line: 1527, column: 22, scope: !8362)
!8371 = !DILocation(line: 1529, column: 2, scope: !8308)
!8372 = !DILocation(line: 1530, column: 3, scope: !8304)
!8373 = !DILocation(line: 1530, column: 9, scope: !8304)
!8374 = !DILocation(line: 1530, column: 20, scope: !8304)
!8375 = !DILocation(line: 1531, column: 1, scope: !8246)
!8376 = distinct !DISubprogram(name: "is_power_of_2", scope: !8377, file: !8377, line: 45, type: !8378, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8377 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8378 = !DISubroutineType(types: !8379)
!8379 = !{!471, !305}
!8380 = !DILocalVariable(name: "n", arg: 1, scope: !8376, file: !8377, line: 45, type: !305)
!8381 = !DILocation(line: 45, column: 34, scope: !8376)
!8382 = !DILocation(line: 47, column: 10, scope: !8376)
!8383 = !DILocation(line: 47, column: 12, scope: !8376)
!8384 = !DILocation(line: 47, column: 17, scope: !8376)
!8385 = !DILocation(line: 47, column: 22, scope: !8376)
!8386 = !DILocation(line: 47, column: 27, scope: !8376)
!8387 = !DILocation(line: 47, column: 29, scope: !8376)
!8388 = !DILocation(line: 47, column: 24, scope: !8376)
!8389 = !DILocation(line: 47, column: 35, scope: !8376)
!8390 = !DILocation(line: 0, scope: !8376)
!8391 = !DILocation(line: 47, column: 2, scope: !8376)
!8392 = distinct !DISubprogram(name: "mmc_erase", scope: !3, file: !3, line: 1812, type: !8393, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{!240, !4990, !7, !7, !7}
!8395 = !DILocalVariable(name: "card", arg: 1, scope: !8392, file: !3, line: 1812, type: !4990)
!8396 = !DILocation(line: 1812, column: 32, scope: !8392)
!8397 = !DILocalVariable(name: "from", arg: 2, scope: !8392, file: !3, line: 1812, type: !7)
!8398 = !DILocation(line: 1812, column: 51, scope: !8392)
!8399 = !DILocalVariable(name: "nr", arg: 3, scope: !8392, file: !3, line: 1812, type: !7)
!8400 = !DILocation(line: 1812, column: 70, scope: !8392)
!8401 = !DILocalVariable(name: "arg", arg: 4, scope: !8392, file: !3, line: 1813, type: !7)
!8402 = !DILocation(line: 1813, column: 21, scope: !8392)
!8403 = !DILocalVariable(name: "rem", scope: !8392, file: !3, line: 1815, type: !7)
!8404 = !DILocation(line: 1815, column: 15, scope: !8392)
!8405 = !DILocalVariable(name: "to", scope: !8392, file: !3, line: 1815, type: !7)
!8406 = !DILocation(line: 1815, column: 20, scope: !8392)
!8407 = !DILocation(line: 1815, column: 25, scope: !8392)
!8408 = !DILocation(line: 1815, column: 32, scope: !8392)
!8409 = !DILocation(line: 1815, column: 30, scope: !8392)
!8410 = !DILocalVariable(name: "err", scope: !8392, file: !3, line: 1816, type: !240)
!8411 = !DILocation(line: 1816, column: 6, scope: !8392)
!8412 = !DILocation(line: 1818, column: 8, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1818, column: 6)
!8414 = !DILocation(line: 1818, column: 14, scope: !8413)
!8415 = !DILocation(line: 1818, column: 18, scope: !8413)
!8416 = !DILocation(line: 1818, column: 27, scope: !8413)
!8417 = !DILocation(line: 1818, column: 6, scope: !8392)
!8418 = !DILocation(line: 1819, column: 3, scope: !8413)
!8419 = !DILocation(line: 1821, column: 7, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1821, column: 6)
!8421 = !DILocation(line: 1821, column: 13, scope: !8420)
!8422 = !DILocation(line: 1821, column: 6, scope: !8392)
!8423 = !DILocation(line: 1822, column: 3, scope: !8420)
!8424 = !DILocation(line: 1824, column: 6, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1824, column: 6)
!8426 = !DILocation(line: 1824, column: 24, scope: !8425)
!8427 = !DILocation(line: 1824, column: 27, scope: !8425)
!8428 = !DILocation(line: 1824, column: 31, scope: !8425)
!8429 = !DILocation(line: 1824, column: 47, scope: !8425)
!8430 = !DILocation(line: 1824, column: 50, scope: !8425)
!8431 = !DILocation(line: 1824, column: 54, scope: !8425)
!8432 = !DILocation(line: 1824, column: 6, scope: !8392)
!8433 = !DILocation(line: 1825, column: 3, scope: !8425)
!8434 = !DILocation(line: 1827, column: 6, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1827, column: 6)
!8436 = !DILocation(line: 1827, column: 25, scope: !8435)
!8437 = !DILocation(line: 1827, column: 29, scope: !8435)
!8438 = !DILocation(line: 1827, column: 33, scope: !8435)
!8439 = !DILocation(line: 1827, column: 52, scope: !8435)
!8440 = !DILocation(line: 1828, column: 8, scope: !8435)
!8441 = !DILocation(line: 1828, column: 14, scope: !8435)
!8442 = !DILocation(line: 1828, column: 22, scope: !8435)
!8443 = !DILocation(line: 1828, column: 42, scope: !8435)
!8444 = !DILocation(line: 1827, column: 6, scope: !8392)
!8445 = !DILocation(line: 1829, column: 3, scope: !8435)
!8446 = !DILocation(line: 1831, column: 6, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1831, column: 6)
!8448 = !DILocation(line: 1831, column: 25, scope: !8447)
!8449 = !DILocation(line: 1831, column: 29, scope: !8447)
!8450 = !DILocation(line: 1831, column: 33, scope: !8447)
!8451 = !DILocation(line: 1831, column: 50, scope: !8447)
!8452 = !DILocation(line: 1832, column: 8, scope: !8447)
!8453 = !DILocation(line: 1832, column: 14, scope: !8447)
!8454 = !DILocation(line: 1832, column: 22, scope: !8447)
!8455 = !DILocation(line: 1832, column: 42, scope: !8447)
!8456 = !DILocation(line: 1831, column: 6, scope: !8392)
!8457 = !DILocation(line: 1833, column: 3, scope: !8447)
!8458 = !DILocation(line: 1835, column: 6, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1835, column: 6)
!8460 = !DILocation(line: 1835, column: 10, scope: !8459)
!8461 = !DILocation(line: 1835, column: 6, scope: !8392)
!8462 = !DILocation(line: 1836, column: 7, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8464, file: !3, line: 1836, column: 7)
!8464 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 1835, column: 35)
!8465 = !DILocation(line: 1836, column: 14, scope: !8463)
!8466 = !DILocation(line: 1836, column: 20, scope: !8463)
!8467 = !DILocation(line: 1836, column: 12, scope: !8463)
!8468 = !DILocation(line: 1836, column: 31, scope: !8463)
!8469 = !DILocation(line: 1836, column: 34, scope: !8463)
!8470 = !DILocation(line: 1836, column: 39, scope: !8463)
!8471 = !DILocation(line: 1836, column: 45, scope: !8463)
!8472 = !DILocation(line: 1836, column: 37, scope: !8463)
!8473 = !DILocation(line: 1836, column: 7, scope: !8464)
!8474 = !DILocation(line: 1837, column: 4, scope: !8463)
!8475 = !DILocation(line: 1838, column: 2, scope: !8464)
!8476 = !DILocation(line: 1840, column: 6, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1840, column: 6)
!8478 = !DILocation(line: 1840, column: 10, scope: !8477)
!8479 = !DILocation(line: 1840, column: 6, scope: !8392)
!8480 = !DILocation(line: 1841, column: 29, scope: !8477)
!8481 = !DILocation(line: 1841, column: 47, scope: !8477)
!8482 = !DILocation(line: 1841, column: 8, scope: !8477)
!8483 = !DILocation(line: 1841, column: 6, scope: !8477)
!8484 = !DILocation(line: 1841, column: 3, scope: !8477)
!8485 = !DILocation(line: 1843, column: 6, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1843, column: 6)
!8487 = !DILocation(line: 1843, column: 9, scope: !8486)
!8488 = !DILocation(line: 1843, column: 6, scope: !8392)
!8489 = !DILocation(line: 1844, column: 3, scope: !8486)
!8490 = !DILocation(line: 1846, column: 6, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1846, column: 6)
!8492 = !DILocation(line: 1846, column: 12, scope: !8491)
!8493 = !DILocation(line: 1846, column: 9, scope: !8491)
!8494 = !DILocation(line: 1846, column: 6, scope: !8392)
!8495 = !DILocation(line: 1847, column: 3, scope: !8491)
!8496 = !DILocation(line: 1850, column: 5, scope: !8392)
!8497 = !DILocation(line: 1860, column: 8, scope: !8392)
!8498 = !DILocation(line: 1860, column: 14, scope: !8392)
!8499 = !DILocation(line: 1860, column: 28, scope: !8392)
!8500 = !DILocation(line: 1860, column: 35, scope: !8392)
!8501 = !DILocation(line: 1860, column: 41, scope: !8392)
!8502 = !DILocation(line: 1860, column: 33, scope: !8392)
!8503 = !DILocation(line: 1860, column: 25, scope: !8392)
!8504 = !DILocation(line: 1860, column: 6, scope: !8392)
!8505 = !DILocation(line: 1861, column: 7, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1861, column: 6)
!8507 = !DILocation(line: 1861, column: 11, scope: !8506)
!8508 = !DILocation(line: 1861, column: 28, scope: !8506)
!8509 = !DILocation(line: 1861, column: 32, scope: !8506)
!8510 = !DILocation(line: 1861, column: 38, scope: !8506)
!8511 = !DILocation(line: 1861, column: 31, scope: !8506)
!8512 = !DILocation(line: 1861, column: 51, scope: !8506)
!8513 = !DILocation(line: 1861, column: 55, scope: !8506)
!8514 = !DILocation(line: 1861, column: 60, scope: !8506)
!8515 = !DILocation(line: 1861, column: 58, scope: !8506)
!8516 = !DILocation(line: 1861, column: 6, scope: !8392)
!8517 = !DILocation(line: 1862, column: 22, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 1861, column: 66)
!8519 = !DILocation(line: 1862, column: 28, scope: !8518)
!8520 = !DILocation(line: 1862, column: 34, scope: !8518)
!8521 = !DILocation(line: 1862, column: 41, scope: !8518)
!8522 = !DILocation(line: 1862, column: 39, scope: !8518)
!8523 = !DILocation(line: 1862, column: 45, scope: !8518)
!8524 = !DILocation(line: 1862, column: 50, scope: !8518)
!8525 = !DILocation(line: 1862, column: 9, scope: !8518)
!8526 = !DILocation(line: 1862, column: 7, scope: !8518)
!8527 = !DILocation(line: 1863, column: 11, scope: !8518)
!8528 = !DILocation(line: 1863, column: 8, scope: !8518)
!8529 = !DILocation(line: 1864, column: 8, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 1864, column: 7)
!8531 = !DILocation(line: 1864, column: 7, scope: !8530)
!8532 = !DILocation(line: 1864, column: 13, scope: !8530)
!8533 = !DILocation(line: 1864, column: 17, scope: !8530)
!8534 = !DILocation(line: 1864, column: 23, scope: !8530)
!8535 = !DILocation(line: 1864, column: 20, scope: !8530)
!8536 = !DILocation(line: 1864, column: 7, scope: !8518)
!8537 = !DILocation(line: 1865, column: 11, scope: !8530)
!8538 = !DILocation(line: 1865, column: 4, scope: !8530)
!8539 = !DILocation(line: 1866, column: 2, scope: !8518)
!8540 = !DILocation(line: 1868, column: 22, scope: !8392)
!8541 = !DILocation(line: 1868, column: 28, scope: !8392)
!8542 = !DILocation(line: 1868, column: 34, scope: !8392)
!8543 = !DILocation(line: 1868, column: 38, scope: !8392)
!8544 = !DILocation(line: 1868, column: 9, scope: !8392)
!8545 = !DILocation(line: 1868, column: 2, scope: !8392)
!8546 = !DILocation(line: 1869, column: 1, scope: !8392)
!8547 = distinct !DISubprogram(name: "mmc_align_erase_size", scope: !3, file: !3, line: 1755, type: !8548, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8548 = !DISubroutineType(types: !8549)
!8549 = !{!7, !4990, !1003, !1003, !7}
!8550 = !DILocalVariable(name: "card", arg: 1, scope: !8547, file: !3, line: 1755, type: !4990)
!8551 = !DILocation(line: 1755, column: 59, scope: !8547)
!8552 = !DILocalVariable(name: "from", arg: 2, scope: !8547, file: !3, line: 1756, type: !1003)
!8553 = !DILocation(line: 1756, column: 21, scope: !8547)
!8554 = !DILocalVariable(name: "to", arg: 3, scope: !8547, file: !3, line: 1757, type: !1003)
!8555 = !DILocation(line: 1757, column: 21, scope: !8547)
!8556 = !DILocalVariable(name: "nr", arg: 4, scope: !8547, file: !3, line: 1758, type: !7)
!8557 = !DILocation(line: 1758, column: 20, scope: !8547)
!8558 = !DILocalVariable(name: "from_new", scope: !8547, file: !3, line: 1760, type: !7)
!8559 = !DILocation(line: 1760, column: 15, scope: !8547)
!8560 = !DILocation(line: 1760, column: 27, scope: !8547)
!8561 = !DILocation(line: 1760, column: 26, scope: !8547)
!8562 = !DILocalVariable(name: "nr_new", scope: !8547, file: !3, line: 1760, type: !7)
!8563 = !DILocation(line: 1760, column: 33, scope: !8547)
!8564 = !DILocation(line: 1760, column: 42, scope: !8547)
!8565 = !DILocalVariable(name: "rem", scope: !8547, file: !3, line: 1760, type: !7)
!8566 = !DILocation(line: 1760, column: 46, scope: !8547)
!8567 = !DILocation(line: 1766, column: 20, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 1766, column: 6)
!8569 = !DILocation(line: 1766, column: 26, scope: !8568)
!8570 = !DILocation(line: 1766, column: 6, scope: !8568)
!8571 = !DILocation(line: 1766, column: 6, scope: !8547)
!8572 = !DILocalVariable(name: "temp", scope: !8573, file: !3, line: 1767, type: !7)
!8573 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 1766, column: 39)
!8574 = !DILocation(line: 1767, column: 16, scope: !8573)
!8575 = !DILocation(line: 1767, column: 23, scope: !8573)
!8576 = !DILocation(line: 1769, column: 14, scope: !8573)
!8577 = !DILocation(line: 1769, column: 12, scope: !8573)
!8578 = !DILocation(line: 1770, column: 9, scope: !8573)
!8579 = !DILocation(line: 1770, column: 20, scope: !8573)
!8580 = !DILocation(line: 1770, column: 18, scope: !8573)
!8581 = !DILocation(line: 1770, column: 7, scope: !8573)
!8582 = !DILocation(line: 1772, column: 7, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 1772, column: 7)
!8584 = !DILocation(line: 1772, column: 16, scope: !8583)
!8585 = !DILocation(line: 1772, column: 14, scope: !8583)
!8586 = !DILocation(line: 1772, column: 7, scope: !8573)
!8587 = !DILocation(line: 1773, column: 14, scope: !8583)
!8588 = !DILocation(line: 1773, column: 11, scope: !8583)
!8589 = !DILocation(line: 1773, column: 4, scope: !8583)
!8590 = !DILocation(line: 1775, column: 4, scope: !8583)
!8591 = !DILocation(line: 1777, column: 12, scope: !8573)
!8592 = !DILocation(line: 1777, column: 10, scope: !8573)
!8593 = !DILocation(line: 1778, column: 2, scope: !8573)
!8594 = !DILocation(line: 1779, column: 9, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 1778, column: 9)
!8596 = !DILocation(line: 1779, column: 20, scope: !8595)
!8597 = !DILocation(line: 1779, column: 26, scope: !8595)
!8598 = !DILocation(line: 1779, column: 18, scope: !8595)
!8599 = !DILocation(line: 1779, column: 7, scope: !8595)
!8600 = !DILocation(line: 1780, column: 7, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1780, column: 7)
!8602 = !DILocation(line: 1780, column: 7, scope: !8595)
!8603 = !DILocation(line: 1781, column: 10, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 1780, column: 12)
!8605 = !DILocation(line: 1781, column: 16, scope: !8604)
!8606 = !DILocation(line: 1781, column: 29, scope: !8604)
!8607 = !DILocation(line: 1781, column: 27, scope: !8604)
!8608 = !DILocation(line: 1781, column: 8, scope: !8604)
!8609 = !DILocation(line: 1782, column: 16, scope: !8604)
!8610 = !DILocation(line: 1782, column: 13, scope: !8604)
!8611 = !DILocation(line: 1783, column: 8, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 1783, column: 8)
!8613 = !DILocation(line: 1783, column: 17, scope: !8612)
!8614 = !DILocation(line: 1783, column: 15, scope: !8612)
!8615 = !DILocation(line: 1783, column: 8, scope: !8604)
!8616 = !DILocation(line: 1784, column: 15, scope: !8612)
!8617 = !DILocation(line: 1784, column: 12, scope: !8612)
!8618 = !DILocation(line: 1784, column: 5, scope: !8612)
!8619 = !DILocation(line: 1786, column: 5, scope: !8612)
!8620 = !DILocation(line: 1787, column: 3, scope: !8604)
!8621 = !DILocation(line: 1789, column: 9, scope: !8595)
!8622 = !DILocation(line: 1789, column: 18, scope: !8595)
!8623 = !DILocation(line: 1789, column: 24, scope: !8595)
!8624 = !DILocation(line: 1789, column: 16, scope: !8595)
!8625 = !DILocation(line: 1789, column: 7, scope: !8595)
!8626 = !DILocation(line: 1790, column: 7, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1790, column: 7)
!8628 = !DILocation(line: 1790, column: 7, scope: !8595)
!8629 = !DILocation(line: 1791, column: 14, scope: !8627)
!8630 = !DILocation(line: 1791, column: 11, scope: !8627)
!8631 = !DILocation(line: 1791, column: 4, scope: !8627)
!8632 = !DILocation(line: 1794, column: 6, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8547, file: !3, line: 1794, column: 6)
!8634 = !DILocation(line: 1794, column: 13, scope: !8633)
!8635 = !DILocation(line: 1794, column: 6, scope: !8547)
!8636 = !DILocation(line: 1795, column: 3, scope: !8633)
!8637 = !DILocation(line: 1797, column: 8, scope: !8547)
!8638 = !DILocation(line: 1797, column: 19, scope: !8547)
!8639 = !DILocation(line: 1797, column: 17, scope: !8547)
!8640 = !DILocation(line: 1797, column: 3, scope: !8547)
!8641 = !DILocation(line: 1797, column: 6, scope: !8547)
!8642 = !DILocation(line: 1798, column: 10, scope: !8547)
!8643 = !DILocation(line: 1798, column: 3, scope: !8547)
!8644 = !DILocation(line: 1798, column: 8, scope: !8547)
!8645 = !DILocation(line: 1800, column: 9, scope: !8547)
!8646 = !DILocation(line: 1800, column: 2, scope: !8547)
!8647 = !DILocation(line: 1801, column: 1, scope: !8547)
!8648 = distinct !DISubprogram(name: "mmc_do_erase", scope: !3, file: !3, line: 1638, type: !8393, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8649 = !DILocalVariable(name: "card", arg: 1, scope: !8648, file: !3, line: 1638, type: !4990)
!8650 = !DILocation(line: 1638, column: 42, scope: !8648)
!8651 = !DILocalVariable(name: "from", arg: 2, scope: !8648, file: !3, line: 1638, type: !7)
!8652 = !DILocation(line: 1638, column: 61, scope: !8648)
!8653 = !DILocalVariable(name: "to", arg: 3, scope: !8648, file: !3, line: 1639, type: !7)
!8654 = !DILocation(line: 1639, column: 17, scope: !8648)
!8655 = !DILocalVariable(name: "arg", arg: 4, scope: !8648, file: !3, line: 1639, type: !7)
!8656 = !DILocation(line: 1639, column: 34, scope: !8648)
!8657 = !DILocalVariable(name: "cmd", scope: !8648, file: !3, line: 1641, type: !4895)
!8658 = !DILocation(line: 1641, column: 21, scope: !8648)
!8659 = !DILocalVariable(name: "qty", scope: !8648, file: !3, line: 1642, type: !7)
!8660 = !DILocation(line: 1642, column: 15, scope: !8648)
!8661 = !DILocalVariable(name: "busy_timeout", scope: !8648, file: !3, line: 1642, type: !7)
!8662 = !DILocation(line: 1642, column: 24, scope: !8648)
!8663 = !DILocalVariable(name: "use_r1b_resp", scope: !8648, file: !3, line: 1643, type: !471)
!8664 = !DILocation(line: 1643, column: 7, scope: !8648)
!8665 = !DILocalVariable(name: "err", scope: !8648, file: !3, line: 1644, type: !240)
!8666 = !DILocation(line: 1644, column: 6, scope: !8648)
!8667 = !DILocation(line: 1646, column: 18, scope: !8648)
!8668 = !DILocation(line: 1646, column: 24, scope: !8648)
!8669 = !DILocation(line: 1646, column: 2, scope: !8648)
!8670 = !DILocation(line: 1664, column: 6, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1664, column: 6)
!8672 = !DILocation(line: 1664, column: 12, scope: !8671)
!8673 = !DILocation(line: 1664, column: 6, scope: !8648)
!8674 = !DILocation(line: 1665, column: 12, scope: !8671)
!8675 = !DILocation(line: 1665, column: 18, scope: !8671)
!8676 = !DILocation(line: 1665, column: 24, scope: !8671)
!8677 = !DILocation(line: 1665, column: 15, scope: !8671)
!8678 = !DILocation(line: 1666, column: 5, scope: !8671)
!8679 = !DILocation(line: 1666, column: 13, scope: !8671)
!8680 = !DILocation(line: 1666, column: 19, scope: !8671)
!8681 = !DILocation(line: 1666, column: 10, scope: !8671)
!8682 = !DILocation(line: 1665, column: 37, scope: !8671)
!8683 = !DILocation(line: 1666, column: 33, scope: !8671)
!8684 = !DILocation(line: 1665, column: 7, scope: !8671)
!8685 = !DILocation(line: 1665, column: 3, scope: !8671)
!8686 = !DILocation(line: 1667, column: 11, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 1667, column: 11)
!8688 = !DILocation(line: 1667, column: 11, scope: !8671)
!8689 = !DILocation(line: 1668, column: 10, scope: !8687)
!8690 = !DILocation(line: 1668, column: 15, scope: !8687)
!8691 = !DILocation(line: 1668, column: 13, scope: !8687)
!8692 = !DILocation(line: 1668, column: 20, scope: !8687)
!8693 = !DILocation(line: 1668, column: 7, scope: !8687)
!8694 = !DILocation(line: 1668, column: 3, scope: !8687)
!8695 = !DILocation(line: 1670, column: 12, scope: !8687)
!8696 = !DILocation(line: 1670, column: 17, scope: !8687)
!8697 = !DILocation(line: 1670, column: 23, scope: !8687)
!8698 = !DILocation(line: 1670, column: 15, scope: !8687)
!8699 = !DILocation(line: 1671, column: 5, scope: !8687)
!8700 = !DILocation(line: 1671, column: 12, scope: !8687)
!8701 = !DILocation(line: 1671, column: 18, scope: !8687)
!8702 = !DILocation(line: 1671, column: 10, scope: !8687)
!8703 = !DILocation(line: 1670, column: 35, scope: !8687)
!8704 = !DILocation(line: 1671, column: 31, scope: !8687)
!8705 = !DILocation(line: 1670, column: 7, scope: !8687)
!8706 = !DILocation(line: 1673, column: 7, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1673, column: 6)
!8708 = !DILocation(line: 1673, column: 6, scope: !8648)
!8709 = !DILocation(line: 1674, column: 8, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 1673, column: 33)
!8711 = !DILocation(line: 1675, column: 6, scope: !8710)
!8712 = !DILocation(line: 1676, column: 2, scope: !8710)
!8713 = !DILocation(line: 1678, column: 6, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1678, column: 6)
!8715 = !DILocation(line: 1678, column: 6, scope: !8648)
!8716 = !DILocation(line: 1679, column: 7, scope: !8714)
!8717 = !DILocation(line: 1679, column: 14, scope: !8714)
!8718 = !DILocation(line: 1679, column: 3, scope: !8714)
!8719 = !DILocation(line: 1681, column: 7, scope: !8714)
!8720 = !DILocation(line: 1681, column: 14, scope: !8714)
!8721 = !DILocation(line: 1682, column: 12, scope: !8648)
!8722 = !DILocation(line: 1682, column: 6, scope: !8648)
!8723 = !DILocation(line: 1682, column: 10, scope: !8648)
!8724 = !DILocation(line: 1683, column: 6, scope: !8648)
!8725 = !DILocation(line: 1683, column: 12, scope: !8648)
!8726 = !DILocation(line: 1684, column: 25, scope: !8648)
!8727 = !DILocation(line: 1684, column: 31, scope: !8648)
!8728 = !DILocation(line: 1684, column: 8, scope: !8648)
!8729 = !DILocation(line: 1684, column: 6, scope: !8648)
!8730 = !DILocation(line: 1685, column: 6, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1685, column: 6)
!8732 = !DILocation(line: 1685, column: 6, scope: !8648)
!8733 = !DILocation(line: 1686, column: 3, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 1685, column: 11)
!8735 = !DILocation(line: 1688, column: 7, scope: !8734)
!8736 = !DILocation(line: 1689, column: 3, scope: !8734)
!8737 = !DILocation(line: 1692, column: 2, scope: !8648)
!8738 = !DILocation(line: 1693, column: 6, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1693, column: 6)
!8740 = !DILocation(line: 1693, column: 6, scope: !8648)
!8741 = !DILocation(line: 1694, column: 7, scope: !8739)
!8742 = !DILocation(line: 1694, column: 14, scope: !8739)
!8743 = !DILocation(line: 1694, column: 3, scope: !8739)
!8744 = !DILocation(line: 1696, column: 7, scope: !8739)
!8745 = !DILocation(line: 1696, column: 14, scope: !8739)
!8746 = !DILocation(line: 1697, column: 12, scope: !8648)
!8747 = !DILocation(line: 1697, column: 6, scope: !8648)
!8748 = !DILocation(line: 1697, column: 10, scope: !8648)
!8749 = !DILocation(line: 1698, column: 6, scope: !8648)
!8750 = !DILocation(line: 1698, column: 12, scope: !8648)
!8751 = !DILocation(line: 1699, column: 25, scope: !8648)
!8752 = !DILocation(line: 1699, column: 31, scope: !8648)
!8753 = !DILocation(line: 1699, column: 8, scope: !8648)
!8754 = !DILocation(line: 1699, column: 6, scope: !8648)
!8755 = !DILocation(line: 1700, column: 6, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1700, column: 6)
!8757 = !DILocation(line: 1700, column: 6, scope: !8648)
!8758 = !DILocation(line: 1701, column: 3, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 1700, column: 11)
!8760 = !DILocation(line: 1703, column: 7, scope: !8759)
!8761 = !DILocation(line: 1704, column: 3, scope: !8759)
!8762 = !DILocation(line: 1707, column: 2, scope: !8648)
!8763 = !DILocation(line: 1708, column: 6, scope: !8648)
!8764 = !DILocation(line: 1708, column: 13, scope: !8648)
!8765 = !DILocation(line: 1709, column: 12, scope: !8648)
!8766 = !DILocation(line: 1709, column: 6, scope: !8648)
!8767 = !DILocation(line: 1709, column: 10, scope: !8648)
!8768 = !DILocation(line: 1710, column: 35, scope: !8648)
!8769 = !DILocation(line: 1710, column: 41, scope: !8648)
!8770 = !DILocation(line: 1710, column: 46, scope: !8648)
!8771 = !DILocation(line: 1710, column: 17, scope: !8648)
!8772 = !DILocation(line: 1710, column: 15, scope: !8648)
!8773 = !DILocation(line: 1719, column: 8, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1719, column: 6)
!8775 = !DILocation(line: 1719, column: 14, scope: !8774)
!8776 = !DILocation(line: 1719, column: 20, scope: !8774)
!8777 = !DILocation(line: 1719, column: 25, scope: !8774)
!8778 = !DILocation(line: 1719, column: 50, scope: !8774)
!8779 = !DILocation(line: 1720, column: 6, scope: !8774)
!8780 = !DILocation(line: 1720, column: 12, scope: !8774)
!8781 = !DILocation(line: 1720, column: 18, scope: !8774)
!8782 = !DILocation(line: 1720, column: 35, scope: !8774)
!8783 = !DILocation(line: 1721, column: 6, scope: !8774)
!8784 = !DILocation(line: 1721, column: 21, scope: !8774)
!8785 = !DILocation(line: 1721, column: 27, scope: !8774)
!8786 = !DILocation(line: 1721, column: 33, scope: !8774)
!8787 = !DILocation(line: 1721, column: 19, scope: !8774)
!8788 = !DILocation(line: 1719, column: 6, scope: !8648)
!8789 = !DILocation(line: 1722, column: 7, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 1721, column: 51)
!8791 = !DILocation(line: 1722, column: 13, scope: !8790)
!8792 = !DILocation(line: 1723, column: 2, scope: !8790)
!8793 = !DILocation(line: 1724, column: 7, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 1723, column: 9)
!8795 = !DILocation(line: 1724, column: 13, scope: !8794)
!8796 = !DILocation(line: 1725, column: 22, scope: !8794)
!8797 = !DILocation(line: 1725, column: 7, scope: !8794)
!8798 = !DILocation(line: 1725, column: 20, scope: !8794)
!8799 = !DILocation(line: 1726, column: 16, scope: !8794)
!8800 = !DILocation(line: 1729, column: 25, scope: !8648)
!8801 = !DILocation(line: 1729, column: 31, scope: !8648)
!8802 = !DILocation(line: 1729, column: 8, scope: !8648)
!8803 = !DILocation(line: 1729, column: 6, scope: !8648)
!8804 = !DILocation(line: 1730, column: 6, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1730, column: 6)
!8806 = !DILocation(line: 1730, column: 6, scope: !8648)
!8807 = !DILocation(line: 1731, column: 3, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 1730, column: 11)
!8809 = !DILocation(line: 1733, column: 7, scope: !8808)
!8810 = !DILocation(line: 1734, column: 3, scope: !8808)
!8811 = !DILocation(line: 1737, column: 6, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1737, column: 6)
!8813 = !DILocation(line: 1737, column: 6, scope: !8648)
!8814 = !DILocation(line: 1738, column: 3, scope: !8812)
!8815 = !DILocation(line: 1744, column: 7, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 1744, column: 6)
!8817 = !DILocation(line: 1744, column: 13, scope: !8816)
!8818 = !DILocation(line: 1744, column: 19, scope: !8816)
!8819 = !DILocation(line: 1744, column: 24, scope: !8816)
!8820 = !DILocation(line: 1744, column: 51, scope: !8816)
!8821 = !DILocation(line: 1744, column: 54, scope: !8816)
!8822 = !DILocation(line: 1744, column: 6, scope: !8648)
!8823 = !DILocation(line: 1745, column: 3, scope: !8816)
!8824 = !DILocation(line: 1748, column: 26, scope: !8648)
!8825 = !DILocation(line: 1748, column: 32, scope: !8648)
!8826 = !DILocation(line: 1748, column: 8, scope: !8648)
!8827 = !DILocation(line: 1748, column: 6, scope: !8648)
!8828 = !DILocation(line: 1748, column: 2, scope: !8648)
!8829 = !DILabel(scope: !8648, name: "out", file: !3, line: 1750)
!8830 = !DILocation(line: 1750, column: 1, scope: !8648)
!8831 = !DILocation(line: 1751, column: 21, scope: !8648)
!8832 = !DILocation(line: 1751, column: 27, scope: !8648)
!8833 = !DILocation(line: 1751, column: 2, scope: !8648)
!8834 = !DILocation(line: 1752, column: 9, scope: !8648)
!8835 = !DILocation(line: 1752, column: 2, scope: !8648)
!8836 = distinct !DISubprogram(name: "mmc_can_erase", scope: !3, file: !3, line: 1872, type: !7181, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8837 = !DILocalVariable(name: "card", arg: 1, scope: !8836, file: !3, line: 1872, type: !4990)
!8838 = !DILocation(line: 1872, column: 36, scope: !8836)
!8839 = !DILocation(line: 1874, column: 6, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1874, column: 6)
!8841 = !DILocation(line: 1874, column: 12, scope: !8840)
!8842 = !DILocation(line: 1874, column: 16, scope: !8840)
!8843 = !DILocation(line: 1874, column: 25, scope: !8840)
!8844 = !DILocation(line: 1874, column: 37, scope: !8840)
!8845 = !DILocation(line: 1874, column: 40, scope: !8840)
!8846 = !DILocation(line: 1874, column: 46, scope: !8840)
!8847 = !DILocation(line: 1874, column: 6, scope: !8836)
!8848 = !DILocation(line: 1875, column: 3, scope: !8840)
!8849 = !DILocation(line: 1876, column: 2, scope: !8836)
!8850 = !DILocation(line: 1877, column: 1, scope: !8836)
!8851 = distinct !DISubprogram(name: "mmc_can_trim", scope: !3, file: !3, line: 1880, type: !7181, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8852 = !DILocalVariable(name: "card", arg: 1, scope: !8851, file: !3, line: 1880, type: !4990)
!8853 = !DILocation(line: 1880, column: 35, scope: !8851)
!8854 = !DILocation(line: 1882, column: 7, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 1882, column: 6)
!8856 = !DILocation(line: 1882, column: 13, scope: !8855)
!8857 = !DILocation(line: 1882, column: 21, scope: !8855)
!8858 = !DILocation(line: 1882, column: 41, scope: !8855)
!8859 = !DILocation(line: 1882, column: 65, scope: !8855)
!8860 = !DILocation(line: 1883, column: 9, scope: !8855)
!8861 = !DILocation(line: 1883, column: 15, scope: !8855)
!8862 = !DILocation(line: 1883, column: 22, scope: !8855)
!8863 = !DILocation(line: 1882, column: 6, scope: !8851)
!8864 = !DILocation(line: 1884, column: 3, scope: !8855)
!8865 = !DILocation(line: 1885, column: 2, scope: !8851)
!8866 = !DILocation(line: 1886, column: 1, scope: !8851)
!8867 = distinct !DISubprogram(name: "mmc_can_discard", scope: !3, file: !3, line: 1889, type: !7181, scopeLine: 1890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8868 = !DILocalVariable(name: "card", arg: 1, scope: !8867, file: !3, line: 1889, type: !4990)
!8869 = !DILocation(line: 1889, column: 38, scope: !8867)
!8870 = !DILocation(line: 1895, column: 6, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 1895, column: 6)
!8872 = !DILocation(line: 1895, column: 12, scope: !8871)
!8873 = !DILocation(line: 1895, column: 20, scope: !8871)
!8874 = !DILocation(line: 1895, column: 36, scope: !8871)
!8875 = !DILocation(line: 1895, column: 6, scope: !8867)
!8876 = !DILocation(line: 1896, column: 3, scope: !8871)
!8877 = !DILocation(line: 1897, column: 2, scope: !8867)
!8878 = !DILocation(line: 1898, column: 1, scope: !8867)
!8879 = distinct !DISubprogram(name: "mmc_can_sanitize", scope: !3, file: !3, line: 1901, type: !7181, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8880 = !DILocalVariable(name: "card", arg: 1, scope: !8879, file: !3, line: 1901, type: !4990)
!8881 = !DILocation(line: 1901, column: 39, scope: !8879)
!8882 = !DILocation(line: 1903, column: 20, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1903, column: 6)
!8884 = !DILocation(line: 1903, column: 7, scope: !8883)
!8885 = !DILocation(line: 1903, column: 26, scope: !8883)
!8886 = !DILocation(line: 1903, column: 44, scope: !8883)
!8887 = !DILocation(line: 1903, column: 30, scope: !8883)
!8888 = !DILocation(line: 1903, column: 6, scope: !8879)
!8889 = !DILocation(line: 1904, column: 3, scope: !8883)
!8890 = !DILocation(line: 1905, column: 6, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1905, column: 6)
!8892 = !DILocation(line: 1905, column: 12, scope: !8891)
!8893 = !DILocation(line: 1905, column: 20, scope: !8891)
!8894 = !DILocation(line: 1905, column: 40, scope: !8891)
!8895 = !DILocation(line: 1905, column: 6, scope: !8879)
!8896 = !DILocation(line: 1906, column: 3, scope: !8891)
!8897 = !DILocation(line: 1907, column: 2, scope: !8879)
!8898 = !DILocation(line: 1908, column: 1, scope: !8879)
!8899 = distinct !DISubprogram(name: "mmc_can_secure_erase_trim", scope: !3, file: !3, line: 1910, type: !7181, scopeLine: 1911, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8900 = !DILocalVariable(name: "card", arg: 1, scope: !8899, file: !3, line: 1910, type: !4990)
!8901 = !DILocation(line: 1910, column: 48, scope: !8899)
!8902 = !DILocation(line: 1912, column: 7, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 1912, column: 6)
!8904 = !DILocation(line: 1912, column: 13, scope: !8903)
!8905 = !DILocation(line: 1912, column: 21, scope: !8903)
!8906 = !DILocation(line: 1912, column: 41, scope: !8903)
!8907 = !DILocation(line: 1912, column: 62, scope: !8903)
!8908 = !DILocation(line: 1913, column: 8, scope: !8903)
!8909 = !DILocation(line: 1913, column: 14, scope: !8903)
!8910 = !DILocation(line: 1913, column: 21, scope: !8903)
!8911 = !DILocation(line: 1912, column: 6, scope: !8899)
!8912 = !DILocation(line: 1914, column: 3, scope: !8903)
!8913 = !DILocation(line: 1915, column: 2, scope: !8899)
!8914 = !DILocation(line: 1916, column: 1, scope: !8899)
!8915 = distinct !DISubprogram(name: "mmc_erase_group_aligned", scope: !3, file: !3, line: 1919, type: !8916, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{!240, !4990, !7, !7}
!8918 = !DILocalVariable(name: "card", arg: 1, scope: !8915, file: !3, line: 1919, type: !4990)
!8919 = !DILocation(line: 1919, column: 46, scope: !8915)
!8920 = !DILocalVariable(name: "from", arg: 2, scope: !8915, file: !3, line: 1919, type: !7)
!8921 = !DILocation(line: 1919, column: 65, scope: !8915)
!8922 = !DILocalVariable(name: "nr", arg: 3, scope: !8915, file: !3, line: 1920, type: !7)
!8923 = !DILocation(line: 1920, column: 21, scope: !8915)
!8924 = !DILocation(line: 1922, column: 7, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 1922, column: 6)
!8926 = !DILocation(line: 1922, column: 13, scope: !8925)
!8927 = !DILocation(line: 1922, column: 6, scope: !8915)
!8928 = !DILocation(line: 1923, column: 3, scope: !8925)
!8929 = !DILocation(line: 1924, column: 6, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 1924, column: 6)
!8931 = !DILocation(line: 1924, column: 13, scope: !8930)
!8932 = !DILocation(line: 1924, column: 19, scope: !8930)
!8933 = !DILocation(line: 1924, column: 11, scope: !8930)
!8934 = !DILocation(line: 1924, column: 30, scope: !8930)
!8935 = !DILocation(line: 1924, column: 33, scope: !8930)
!8936 = !DILocation(line: 1924, column: 38, scope: !8930)
!8937 = !DILocation(line: 1924, column: 44, scope: !8930)
!8938 = !DILocation(line: 1924, column: 36, scope: !8930)
!8939 = !DILocation(line: 1924, column: 6, scope: !8915)
!8940 = !DILocation(line: 1925, column: 3, scope: !8930)
!8941 = !DILocation(line: 1926, column: 2, scope: !8915)
!8942 = !DILocation(line: 1927, column: 1, scope: !8915)
!8943 = distinct !DISubprogram(name: "mmc_calc_max_discard", scope: !3, file: !3, line: 2008, type: !8944, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8944 = !DISubroutineType(types: !8945)
!8945 = !{!7, !4990}
!8946 = !DILocalVariable(name: "card", arg: 1, scope: !8943, file: !3, line: 2008, type: !4990)
!8947 = !DILocation(line: 2008, column: 52, scope: !8943)
!8948 = !DILocalVariable(name: "host", scope: !8943, file: !3, line: 2010, type: !183)
!8949 = !DILocation(line: 2010, column: 19, scope: !8943)
!8950 = !DILocation(line: 2010, column: 26, scope: !8943)
!8951 = !DILocation(line: 2010, column: 32, scope: !8943)
!8952 = !DILocalVariable(name: "max_discard", scope: !8943, file: !3, line: 2011, type: !7)
!8953 = !DILocation(line: 2011, column: 15, scope: !8943)
!8954 = !DILocalVariable(name: "max_trim", scope: !8943, file: !3, line: 2011, type: !7)
!8955 = !DILocation(line: 2011, column: 28, scope: !8943)
!8956 = !DILocation(line: 2018, column: 6, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 2018, column: 6)
!8958 = !DILocation(line: 2018, column: 25, scope: !8957)
!8959 = !DILocation(line: 2018, column: 30, scope: !8957)
!8960 = !DILocation(line: 2018, column: 36, scope: !8957)
!8961 = !DILocation(line: 2018, column: 44, scope: !8957)
!8962 = !DILocation(line: 2018, column: 60, scope: !8957)
!8963 = !DILocation(line: 2018, column: 6, scope: !8943)
!8964 = !DILocation(line: 2019, column: 10, scope: !8957)
!8965 = !DILocation(line: 2019, column: 16, scope: !8957)
!8966 = !DILocation(line: 2019, column: 3, scope: !8957)
!8967 = !DILocation(line: 2021, column: 40, scope: !8943)
!8968 = !DILocation(line: 2021, column: 16, scope: !8943)
!8969 = !DILocation(line: 2021, column: 14, scope: !8943)
!8970 = !DILocation(line: 2022, column: 19, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 2022, column: 6)
!8972 = !DILocation(line: 2022, column: 6, scope: !8971)
!8973 = !DILocation(line: 2022, column: 6, scope: !8943)
!8974 = !DILocation(line: 2023, column: 38, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 2022, column: 26)
!8976 = !DILocation(line: 2023, column: 14, scope: !8975)
!8977 = !DILocation(line: 2023, column: 12, scope: !8975)
!8978 = !DILocation(line: 2024, column: 7, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 2024, column: 7)
!8980 = !DILocation(line: 2024, column: 18, scope: !8979)
!8981 = !DILocation(line: 2024, column: 16, scope: !8979)
!8982 = !DILocation(line: 2024, column: 30, scope: !8979)
!8983 = !DILocation(line: 2024, column: 33, scope: !8979)
!8984 = !DILocation(line: 2024, column: 45, scope: !8979)
!8985 = !DILocation(line: 2024, column: 7, scope: !8975)
!8986 = !DILocation(line: 2025, column: 18, scope: !8979)
!8987 = !DILocation(line: 2025, column: 16, scope: !8979)
!8988 = !DILocation(line: 2025, column: 4, scope: !8979)
!8989 = !DILocation(line: 2026, column: 2, scope: !8975)
!8990 = !DILocation(line: 2026, column: 13, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 2026, column: 13)
!8992 = !DILocation(line: 2026, column: 27, scope: !8991)
!8993 = !DILocation(line: 2026, column: 33, scope: !8991)
!8994 = !DILocation(line: 2026, column: 25, scope: !8991)
!8995 = !DILocation(line: 2026, column: 13, scope: !8971)
!8996 = !DILocation(line: 2027, column: 15, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 2026, column: 45)
!8998 = !DILocation(line: 2028, column: 2, scope: !8997)
!8999 = !DILocation(line: 2029, column: 2, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 2029, column: 2)
!9001 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 2029, column: 2)
!9002 = !DILocation(line: 2029, column: 2, scope: !9001)
!9003 = !DILocation(line: 2032, column: 9, scope: !8943)
!9004 = !DILocation(line: 2032, column: 2, scope: !8943)
!9005 = !DILocation(line: 2033, column: 1, scope: !8943)
!9006 = distinct !DISubprogram(name: "mmc_do_calc_max_discard", scope: !3, file: !3, line: 1930, type: !9007, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9007 = !DISubroutineType(types: !9008)
!9008 = !{!7, !4990, !7}
!9009 = !DILocalVariable(name: "card", arg: 1, scope: !9006, file: !3, line: 1930, type: !4990)
!9010 = !DILocation(line: 1930, column: 62, scope: !9006)
!9011 = !DILocalVariable(name: "arg", arg: 2, scope: !9006, file: !3, line: 1931, type: !7)
!9012 = !DILocation(line: 1931, column: 23, scope: !9006)
!9013 = !DILocalVariable(name: "host", scope: !9006, file: !3, line: 1933, type: !183)
!9014 = !DILocation(line: 1933, column: 19, scope: !9006)
!9015 = !DILocation(line: 1933, column: 26, scope: !9006)
!9016 = !DILocation(line: 1933, column: 32, scope: !9006)
!9017 = !DILocalVariable(name: "max_discard", scope: !9006, file: !3, line: 1934, type: !7)
!9018 = !DILocation(line: 1934, column: 15, scope: !9006)
!9019 = !DILocalVariable(name: "x", scope: !9006, file: !3, line: 1934, type: !7)
!9020 = !DILocation(line: 1934, column: 28, scope: !9006)
!9021 = !DILocalVariable(name: "y", scope: !9006, file: !3, line: 1934, type: !7)
!9022 = !DILocation(line: 1934, column: 31, scope: !9006)
!9023 = !DILocalVariable(name: "qty", scope: !9006, file: !3, line: 1934, type: !7)
!9024 = !DILocation(line: 1934, column: 34, scope: !9006)
!9025 = !DILocalVariable(name: "max_qty", scope: !9006, file: !3, line: 1934, type: !7)
!9026 = !DILocation(line: 1934, column: 43, scope: !9006)
!9027 = !DILocalVariable(name: "min_qty", scope: !9006, file: !3, line: 1934, type: !7)
!9028 = !DILocation(line: 1934, column: 52, scope: !9006)
!9029 = !DILocalVariable(name: "timeout", scope: !9006, file: !3, line: 1934, type: !7)
!9030 = !DILocation(line: 1934, column: 61, scope: !9006)
!9031 = !DILocalVariable(name: "last_timeout", scope: !9006, file: !3, line: 1935, type: !7)
!9032 = !DILocation(line: 1935, column: 15, scope: !9006)
!9033 = !DILocalVariable(name: "max_busy_timeout", scope: !9006, file: !3, line: 1936, type: !7)
!9034 = !DILocation(line: 1936, column: 15, scope: !9006)
!9035 = !DILocation(line: 1936, column: 34, scope: !9006)
!9036 = !DILocation(line: 1936, column: 40, scope: !9006)
!9037 = !DILocation(line: 1937, column: 4, scope: !9006)
!9038 = !DILocation(line: 1937, column: 10, scope: !9006)
!9039 = !DILocation(line: 1939, column: 6, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1939, column: 6)
!9041 = !DILocation(line: 1939, column: 12, scope: !9040)
!9042 = !DILocation(line: 1939, column: 6, scope: !9006)
!9043 = !DILocation(line: 1940, column: 25, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1939, column: 25)
!9045 = !DILocation(line: 1940, column: 31, scope: !9044)
!9046 = !DILocation(line: 1940, column: 22, scope: !9044)
!9047 = !DILocation(line: 1940, column: 11, scope: !9044)
!9048 = !DILocation(line: 1941, column: 13, scope: !9044)
!9049 = !DILocation(line: 1941, column: 19, scope: !9044)
!9050 = !DILocation(line: 1941, column: 33, scope: !9044)
!9051 = !DILocation(line: 1941, column: 39, scope: !9044)
!9052 = !DILocation(line: 1941, column: 30, scope: !9044)
!9053 = !DILocation(line: 1941, column: 11, scope: !9044)
!9054 = !DILocation(line: 1942, column: 2, scope: !9044)
!9055 = !DILocation(line: 1942, column: 13, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 1942, column: 13)
!9057 = !DILocation(line: 1942, column: 13, scope: !9040)
!9058 = !DILocation(line: 1943, column: 11, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1942, column: 32)
!9060 = !DILocation(line: 1944, column: 13, scope: !9059)
!9061 = !DILocation(line: 1944, column: 19, scope: !9059)
!9062 = !DILocation(line: 1944, column: 11, scope: !9059)
!9063 = !DILocation(line: 1945, column: 2, scope: !9059)
!9064 = !DILocation(line: 1946, column: 24, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1945, column: 9)
!9066 = !DILocation(line: 1946, column: 30, scope: !9065)
!9067 = !DILocation(line: 1946, column: 22, scope: !9065)
!9068 = !DILocation(line: 1946, column: 11, scope: !9065)
!9069 = !DILocation(line: 1947, column: 13, scope: !9065)
!9070 = !DILocation(line: 1947, column: 19, scope: !9065)
!9071 = !DILocation(line: 1947, column: 32, scope: !9065)
!9072 = !DILocation(line: 1947, column: 38, scope: !9065)
!9073 = !DILocation(line: 1947, column: 30, scope: !9065)
!9074 = !DILocation(line: 1947, column: 11, scope: !9065)
!9075 = !DILocation(line: 1963, column: 2, scope: !9006)
!9076 = !DILocation(line: 1964, column: 5, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1963, column: 5)
!9078 = !DILocation(line: 1965, column: 10, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1965, column: 3)
!9080 = !DILocation(line: 1965, column: 8, scope: !9079)
!9081 = !DILocation(line: 1965, column: 15, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1965, column: 3)
!9083 = !DILocation(line: 1965, column: 17, scope: !9082)
!9084 = !DILocation(line: 1965, column: 20, scope: !9082)
!9085 = !DILocation(line: 1965, column: 25, scope: !9082)
!9086 = !DILocation(line: 1965, column: 22, scope: !9082)
!9087 = !DILocation(line: 1965, column: 33, scope: !9082)
!9088 = !DILocation(line: 1965, column: 36, scope: !9082)
!9089 = !DILocation(line: 1965, column: 46, scope: !9082)
!9090 = !DILocation(line: 1965, column: 44, scope: !9082)
!9091 = !DILocation(line: 1965, column: 51, scope: !9082)
!9092 = !DILocation(line: 1965, column: 48, scope: !9082)
!9093 = !DILocation(line: 0, scope: !9082)
!9094 = !DILocation(line: 1965, column: 3, scope: !9079)
!9095 = !DILocation(line: 1966, column: 32, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 1965, column: 65)
!9097 = !DILocation(line: 1966, column: 38, scope: !9096)
!9098 = !DILocation(line: 1966, column: 43, scope: !9096)
!9099 = !DILocation(line: 1966, column: 49, scope: !9096)
!9100 = !DILocation(line: 1966, column: 47, scope: !9096)
!9101 = !DILocation(line: 1966, column: 14, scope: !9096)
!9102 = !DILocation(line: 1966, column: 12, scope: !9096)
!9103 = !DILocation(line: 1968, column: 8, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 1968, column: 8)
!9105 = !DILocation(line: 1968, column: 14, scope: !9104)
!9106 = !DILocation(line: 1968, column: 12, scope: !9104)
!9107 = !DILocation(line: 1968, column: 18, scope: !9104)
!9108 = !DILocation(line: 1968, column: 16, scope: !9104)
!9109 = !DILocation(line: 1968, column: 26, scope: !9104)
!9110 = !DILocation(line: 1968, column: 29, scope: !9104)
!9111 = !DILocation(line: 1968, column: 39, scope: !9104)
!9112 = !DILocation(line: 1968, column: 37, scope: !9104)
!9113 = !DILocation(line: 1968, column: 8, scope: !9096)
!9114 = !DILocation(line: 1969, column: 5, scope: !9104)
!9115 = !DILocation(line: 1971, column: 8, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 1971, column: 8)
!9117 = !DILocation(line: 1971, column: 18, scope: !9116)
!9118 = !DILocation(line: 1971, column: 16, scope: !9116)
!9119 = !DILocation(line: 1971, column: 8, scope: !9096)
!9120 = !DILocation(line: 1972, column: 5, scope: !9116)
!9121 = !DILocation(line: 1973, column: 19, scope: !9096)
!9122 = !DILocation(line: 1973, column: 17, scope: !9096)
!9123 = !DILocation(line: 1974, column: 8, scope: !9096)
!9124 = !DILocation(line: 1974, column: 6, scope: !9096)
!9125 = !DILocation(line: 1975, column: 3, scope: !9096)
!9126 = !DILocation(line: 1965, column: 58, scope: !9082)
!9127 = !DILocation(line: 1965, column: 3, scope: !9082)
!9128 = distinct !{!9128, !9094, !9129}
!9129 = !DILocation(line: 1975, column: 3, scope: !9079)
!9130 = !DILocation(line: 1976, column: 10, scope: !9077)
!9131 = !DILocation(line: 1976, column: 7, scope: !9077)
!9132 = !DILocation(line: 1977, column: 2, scope: !9077)
!9133 = !DILocation(line: 1977, column: 11, scope: !9006)
!9134 = distinct !{!9134, !9075, !9135}
!9135 = !DILocation(line: 1977, column: 12, scope: !9006)
!9136 = !DILocation(line: 1979, column: 7, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1979, column: 6)
!9138 = !DILocation(line: 1979, column: 6, scope: !9006)
!9139 = !DILocation(line: 1980, column: 3, scope: !9137)
!9140 = !DILocation(line: 1992, column: 6, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1992, column: 6)
!9142 = !DILocation(line: 1992, column: 10, scope: !9141)
!9143 = !DILocation(line: 1992, column: 6, scope: !9006)
!9144 = !DILocation(line: 1993, column: 3, scope: !9141)
!9145 = !DILocation(line: 1993, column: 9, scope: !9141)
!9146 = !DILocation(line: 1993, column: 21, scope: !9141)
!9147 = !DILocation(line: 1995, column: 6, scope: !9141)
!9148 = !DILocation(line: 1998, column: 6, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1998, column: 6)
!9150 = !DILocation(line: 1998, column: 12, scope: !9149)
!9151 = !DILocation(line: 1998, column: 6, scope: !9006)
!9152 = !DILocation(line: 1999, column: 17, scope: !9149)
!9153 = !DILocation(line: 1999, column: 24, scope: !9149)
!9154 = !DILocation(line: 1999, column: 30, scope: !9149)
!9155 = !DILocation(line: 1999, column: 21, scope: !9149)
!9156 = !DILocation(line: 1999, column: 15, scope: !9149)
!9157 = !DILocation(line: 1999, column: 3, scope: !9149)
!9158 = !DILocation(line: 2000, column: 11, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 2000, column: 11)
!9160 = !DILocation(line: 2000, column: 11, scope: !9149)
!9161 = !DILocation(line: 2001, column: 17, scope: !9159)
!9162 = !DILocation(line: 2001, column: 21, scope: !9159)
!9163 = !DILocation(line: 2001, column: 15, scope: !9159)
!9164 = !DILocation(line: 2001, column: 3, scope: !9159)
!9165 = !DILocation(line: 2003, column: 17, scope: !9159)
!9166 = !DILocation(line: 2003, column: 23, scope: !9159)
!9167 = !DILocation(line: 2003, column: 29, scope: !9159)
!9168 = !DILocation(line: 2003, column: 21, scope: !9159)
!9169 = !DILocation(line: 2003, column: 15, scope: !9159)
!9170 = !DILocation(line: 2005, column: 9, scope: !9006)
!9171 = !DILocation(line: 2005, column: 2, scope: !9006)
!9172 = !DILocation(line: 2006, column: 1, scope: !9006)
!9173 = distinct !DISubprogram(name: "mmc_card_is_blockaddr", scope: !3, file: !3, line: 2036, type: !9174, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9174 = !DISubroutineType(types: !9175)
!9175 = !{!471, !4990}
!9176 = !DILocalVariable(name: "card", arg: 1, scope: !9173, file: !3, line: 2036, type: !4990)
!9177 = !DILocation(line: 2036, column: 45, scope: !9173)
!9178 = !DILocation(line: 2038, column: 9, scope: !9173)
!9179 = !DILocation(line: 2038, column: 16, scope: !9173)
!9180 = !DILocation(line: 2038, column: 2, scope: !9173)
!9181 = distinct !DISubprogram(name: "mmc_set_blocklen", scope: !3, file: !3, line: 2042, type: !9182, scopeLine: 2043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{!240, !4990, !7}
!9184 = !DILocalVariable(name: "card", arg: 1, scope: !9181, file: !3, line: 2042, type: !4990)
!9185 = !DILocation(line: 2042, column: 39, scope: !9181)
!9186 = !DILocalVariable(name: "blocklen", arg: 2, scope: !9181, file: !3, line: 2042, type: !7)
!9187 = !DILocation(line: 2042, column: 58, scope: !9181)
!9188 = !DILocalVariable(name: "cmd", scope: !9181, file: !3, line: 2044, type: !4895)
!9189 = !DILocation(line: 2044, column: 21, scope: !9181)
!9190 = !DILocation(line: 2046, column: 6, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2046, column: 6)
!9192 = !DILocation(line: 2046, column: 31, scope: !9191)
!9193 = !DILocation(line: 2046, column: 49, scope: !9191)
!9194 = !DILocation(line: 2046, column: 34, scope: !9191)
!9195 = !DILocation(line: 2046, column: 55, scope: !9191)
!9196 = !DILocation(line: 2047, column: 21, scope: !9191)
!9197 = !DILocation(line: 2047, column: 6, scope: !9191)
!9198 = !DILocation(line: 2047, column: 27, scope: !9191)
!9199 = !DILocation(line: 2047, column: 47, scope: !9191)
!9200 = !DILocation(line: 2047, column: 30, scope: !9191)
!9201 = !DILocation(line: 2046, column: 6, scope: !9181)
!9202 = !DILocation(line: 2048, column: 3, scope: !9191)
!9203 = !DILocation(line: 2050, column: 6, scope: !9181)
!9204 = !DILocation(line: 2050, column: 13, scope: !9181)
!9205 = !DILocation(line: 2051, column: 12, scope: !9181)
!9206 = !DILocation(line: 2051, column: 6, scope: !9181)
!9207 = !DILocation(line: 2051, column: 10, scope: !9181)
!9208 = !DILocation(line: 2052, column: 6, scope: !9181)
!9209 = !DILocation(line: 2052, column: 12, scope: !9181)
!9210 = !DILocation(line: 2053, column: 26, scope: !9181)
!9211 = !DILocation(line: 2053, column: 32, scope: !9181)
!9212 = !DILocation(line: 2053, column: 9, scope: !9181)
!9213 = !DILocation(line: 2053, column: 2, scope: !9181)
!9214 = !DILocation(line: 2054, column: 1, scope: !9181)
!9215 = distinct !DISubprogram(name: "mmc_card_ddr52", scope: !6084, file: !6084, line: 65, type: !9174, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9216 = !DILocalVariable(name: "card", arg: 1, scope: !9215, file: !6084, line: 65, type: !4990)
!9217 = !DILocation(line: 65, column: 52, scope: !9215)
!9218 = !DILocation(line: 67, column: 9, scope: !9215)
!9219 = !DILocation(line: 67, column: 15, scope: !9215)
!9220 = !DILocation(line: 67, column: 21, scope: !9215)
!9221 = !DILocation(line: 67, column: 25, scope: !9215)
!9222 = !DILocation(line: 67, column: 32, scope: !9215)
!9223 = !DILocation(line: 67, column: 2, scope: !9215)
!9224 = distinct !DISubprogram(name: "mmc_card_hs400", scope: !6084, file: !6084, line: 70, type: !9174, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9225 = !DILocalVariable(name: "card", arg: 1, scope: !9224, file: !6084, line: 70, type: !4990)
!9226 = !DILocation(line: 70, column: 52, scope: !9224)
!9227 = !DILocation(line: 72, column: 9, scope: !9224)
!9228 = !DILocation(line: 72, column: 15, scope: !9224)
!9229 = !DILocation(line: 72, column: 21, scope: !9224)
!9230 = !DILocation(line: 72, column: 25, scope: !9224)
!9231 = !DILocation(line: 72, column: 32, scope: !9224)
!9232 = !DILocation(line: 72, column: 2, scope: !9224)
!9233 = distinct !DISubprogram(name: "mmc_card_hs400es", scope: !6084, file: !6084, line: 75, type: !9174, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9234 = !DILocalVariable(name: "card", arg: 1, scope: !9233, file: !6084, line: 75, type: !4990)
!9235 = !DILocation(line: 75, column: 54, scope: !9233)
!9236 = !DILocation(line: 77, column: 9, scope: !9233)
!9237 = !DILocation(line: 77, column: 15, scope: !9233)
!9238 = !DILocation(line: 77, column: 21, scope: !9233)
!9239 = !DILocation(line: 77, column: 25, scope: !9233)
!9240 = !DILocation(line: 77, column: 2, scope: !9233)
!9241 = distinct !DISubprogram(name: "mmc_hw_reset", scope: !3, file: !3, line: 2076, type: !4975, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9242 = !DILocalVariable(name: "host", arg: 1, scope: !9241, file: !3, line: 2076, type: !183)
!9243 = !DILocation(line: 2076, column: 35, scope: !9241)
!9244 = !DILocalVariable(name: "ret", scope: !9241, file: !3, line: 2078, type: !240)
!9245 = !DILocation(line: 2078, column: 6, scope: !9241)
!9246 = !DILocation(line: 2080, column: 7, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 2080, column: 6)
!9248 = !DILocation(line: 2080, column: 13, scope: !9247)
!9249 = !DILocation(line: 2080, column: 6, scope: !9241)
!9250 = !DILocation(line: 2081, column: 3, scope: !9247)
!9251 = !DILocation(line: 2083, column: 14, scope: !9241)
!9252 = !DILocation(line: 2083, column: 2, scope: !9241)
!9253 = !DILocation(line: 2084, column: 7, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 2084, column: 6)
!9255 = !DILocation(line: 2084, column: 13, scope: !9254)
!9256 = !DILocation(line: 2084, column: 21, scope: !9254)
!9257 = !DILocation(line: 2084, column: 24, scope: !9254)
!9258 = !DILocation(line: 2084, column: 30, scope: !9254)
!9259 = !DILocation(line: 2084, column: 39, scope: !9254)
!9260 = !DILocation(line: 2084, column: 43, scope: !9254)
!9261 = !DILocation(line: 2084, column: 49, scope: !9254)
!9262 = !DILocation(line: 2084, column: 58, scope: !9254)
!9263 = !DILocation(line: 2084, column: 6, scope: !9241)
!9264 = !DILocation(line: 2085, column: 15, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 2084, column: 68)
!9266 = !DILocation(line: 2085, column: 3, scope: !9265)
!9267 = !DILocation(line: 2086, column: 3, scope: !9265)
!9268 = !DILocation(line: 2089, column: 8, scope: !9241)
!9269 = !DILocation(line: 2089, column: 14, scope: !9241)
!9270 = !DILocation(line: 2089, column: 23, scope: !9241)
!9271 = !DILocation(line: 2089, column: 32, scope: !9241)
!9272 = !DILocation(line: 2089, column: 6, scope: !9241)
!9273 = !DILocation(line: 2090, column: 14, scope: !9241)
!9274 = !DILocation(line: 2090, column: 2, scope: !9241)
!9275 = !DILocation(line: 2092, column: 6, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 2092, column: 6)
!9277 = !DILocation(line: 2092, column: 10, scope: !9276)
!9278 = !DILocation(line: 2092, column: 6, scope: !9241)
!9279 = !DILocation(line: 2093, column: 3, scope: !9276)
!9280 = !DILocation(line: 2096, column: 9, scope: !9241)
!9281 = !DILocation(line: 2096, column: 2, scope: !9241)
!9282 = !DILocation(line: 2097, column: 1, scope: !9241)
!9283 = distinct !DISubprogram(name: "mmc_bus_get", scope: !3, file: !3, line: 1390, type: !4984, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9284 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !9285)
!9285 = distinct !DILocation(line: 1396, column: 2, scope: !9283)
!9286 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !9285)
!9287 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !9288)
!9288 = distinct !DILocation(line: 1394, column: 2, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 1394, column: 2)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1394, column: 2)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 1394, column: 2)
!9292 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 1394, column: 2)
!9293 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1394, column: 2)
!9294 = !DILocalVariable(name: "host", arg: 1, scope: !9283, file: !3, line: 1390, type: !183)
!9295 = !DILocation(line: 1390, column: 49, scope: !9283)
!9296 = !DILocalVariable(name: "flags", scope: !9283, file: !3, line: 1392, type: !305)
!9297 = !DILocation(line: 1392, column: 16, scope: !9283)
!9298 = !DILocation(line: 1394, column: 2, scope: !9283)
!9299 = !DILocation(line: 1394, column: 2, scope: !9293)
!9300 = !DILocalVariable(name: "__dummy", scope: !9301, file: !3, line: 1394, type: !305)
!9301 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 1394, column: 2)
!9302 = !DILocation(line: 1394, column: 2, scope: !9301)
!9303 = !DILocalVariable(name: "__dummy2", scope: !9301, file: !3, line: 1394, type: !305)
!9304 = !DILocation(line: 1394, column: 2, scope: !9292)
!9305 = !DILocation(line: 1394, column: 2, scope: !9291)
!9306 = !DILocation(line: 1394, column: 2, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1394, column: 2)
!9308 = !DILocalVariable(name: "__dummy", scope: !9309, file: !3, line: 1394, type: !305)
!9309 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 1394, column: 2)
!9310 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 1394, column: 2)
!9311 = !DILocation(line: 1394, column: 2, scope: !9309)
!9312 = !DILocalVariable(name: "__dummy2", scope: !9309, file: !3, line: 1394, type: !305)
!9313 = !DILocation(line: 1394, column: 2, scope: !9310)
!9314 = !DILocation(line: 1394, column: 2, scope: !9290)
!9315 = !{i32 -2140454400}
!9316 = !DILocation(line: 1394, column: 2, scope: !9289)
!9317 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !9288)
!9318 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !9288)
!9319 = !DILocation(line: 1395, column: 2, scope: !9283)
!9320 = !DILocation(line: 1395, column: 8, scope: !9283)
!9321 = !DILocation(line: 1395, column: 16, scope: !9283)
!9322 = !DILocation(line: 1396, column: 26, scope: !9283)
!9323 = !DILocation(line: 1396, column: 32, scope: !9283)
!9324 = !DILocation(line: 1396, column: 38, scope: !9283)
!9325 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !9285)
!9326 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !9285)
!9327 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !9285)
!9328 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !9285)
!9329 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !9285)
!9330 = !DILocation(line: 1397, column: 1, scope: !9283)
!9331 = distinct !DISubprogram(name: "mmc_sw_reset", scope: !3, file: !3, line: 2100, type: !4975, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9332 = !DILocalVariable(name: "host", arg: 1, scope: !9331, file: !3, line: 2100, type: !183)
!9333 = !DILocation(line: 2100, column: 35, scope: !9331)
!9334 = !DILocalVariable(name: "ret", scope: !9331, file: !3, line: 2102, type: !240)
!9335 = !DILocation(line: 2102, column: 6, scope: !9331)
!9336 = !DILocation(line: 2104, column: 7, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 2104, column: 6)
!9338 = !DILocation(line: 2104, column: 13, scope: !9337)
!9339 = !DILocation(line: 2104, column: 6, scope: !9331)
!9340 = !DILocation(line: 2105, column: 3, scope: !9337)
!9341 = !DILocation(line: 2107, column: 14, scope: !9331)
!9342 = !DILocation(line: 2107, column: 2, scope: !9331)
!9343 = !DILocation(line: 2108, column: 7, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 2108, column: 6)
!9345 = !DILocation(line: 2108, column: 13, scope: !9344)
!9346 = !DILocation(line: 2108, column: 21, scope: !9344)
!9347 = !DILocation(line: 2108, column: 24, scope: !9344)
!9348 = !DILocation(line: 2108, column: 30, scope: !9344)
!9349 = !DILocation(line: 2108, column: 39, scope: !9344)
!9350 = !DILocation(line: 2108, column: 43, scope: !9344)
!9351 = !DILocation(line: 2108, column: 49, scope: !9344)
!9352 = !DILocation(line: 2108, column: 58, scope: !9344)
!9353 = !DILocation(line: 2108, column: 6, scope: !9331)
!9354 = !DILocation(line: 2109, column: 15, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 2108, column: 68)
!9356 = !DILocation(line: 2109, column: 3, scope: !9355)
!9357 = !DILocation(line: 2110, column: 3, scope: !9355)
!9358 = !DILocation(line: 2113, column: 8, scope: !9331)
!9359 = !DILocation(line: 2113, column: 14, scope: !9331)
!9360 = !DILocation(line: 2113, column: 23, scope: !9331)
!9361 = !DILocation(line: 2113, column: 32, scope: !9331)
!9362 = !DILocation(line: 2113, column: 6, scope: !9331)
!9363 = !DILocation(line: 2114, column: 14, scope: !9331)
!9364 = !DILocation(line: 2114, column: 2, scope: !9331)
!9365 = !DILocation(line: 2116, column: 6, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 2116, column: 6)
!9367 = !DILocation(line: 2116, column: 6, scope: !9331)
!9368 = !DILocation(line: 2117, column: 3, scope: !9366)
!9369 = !DILocation(line: 2120, column: 9, scope: !9331)
!9370 = !DILocation(line: 2120, column: 2, scope: !9331)
!9371 = !DILocation(line: 2121, column: 1, scope: !9331)
!9372 = distinct !DISubprogram(name: "_mmc_detect_card_removed", scope: !3, file: !3, line: 2170, type: !4975, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9373 = !DILocalVariable(name: "m", arg: 1, scope: !9374, file: !9375, line: 363, type: !1560)
!9374 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !9375, file: !9375, line: 363, type: !9376, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9375 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!9376 = !DISubroutineType(types: !9377)
!9377 = !{!305, !1560}
!9378 = !DILocation(line: 363, column: 74, scope: !9374, inlinedAt: !9379)
!9379 = distinct !DILocation(line: 2187, column: 27, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 2186, column: 61)
!9381 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 2186, column: 6)
!9382 = !DILocalVariable(name: "host", arg: 1, scope: !9372, file: !3, line: 2170, type: !183)
!9383 = !DILocation(line: 2170, column: 47, scope: !9372)
!9384 = !DILocalVariable(name: "ret", scope: !9372, file: !3, line: 2172, type: !240)
!9385 = !DILocation(line: 2172, column: 6, scope: !9372)
!9386 = !DILocation(line: 2174, column: 7, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 2174, column: 6)
!9388 = !DILocation(line: 2174, column: 13, scope: !9387)
!9389 = !DILocation(line: 2174, column: 18, scope: !9387)
!9390 = !DILocation(line: 2174, column: 21, scope: !9387)
!9391 = !DILocation(line: 2174, column: 6, scope: !9372)
!9392 = !DILocation(line: 2175, column: 3, scope: !9387)
!9393 = !DILocation(line: 2177, column: 8, scope: !9372)
!9394 = !DILocation(line: 2177, column: 14, scope: !9372)
!9395 = !DILocation(line: 2177, column: 23, scope: !9372)
!9396 = !DILocation(line: 2177, column: 29, scope: !9372)
!9397 = !DILocation(line: 2177, column: 6, scope: !9372)
!9398 = !DILocation(line: 2186, column: 7, scope: !9381)
!9399 = !DILocation(line: 2186, column: 11, scope: !9381)
!9400 = !DILocation(line: 2186, column: 14, scope: !9381)
!9401 = !DILocation(line: 2186, column: 20, scope: !9381)
!9402 = !DILocation(line: 2186, column: 25, scope: !9381)
!9403 = !DILocation(line: 2186, column: 32, scope: !9381)
!9404 = !DILocation(line: 2186, column: 36, scope: !9381)
!9405 = !DILocation(line: 2186, column: 42, scope: !9381)
!9406 = !DILocation(line: 2186, column: 47, scope: !9381)
!9407 = !DILocation(line: 2186, column: 54, scope: !9381)
!9408 = !DILocation(line: 2186, column: 6, scope: !9372)
!9409 = !DILocation(line: 2187, column: 21, scope: !9380)
!9410 = !DILocation(line: 365, column: 27, scope: !9411, inlinedAt: !9379)
!9411 = distinct !DILexicalBlock(scope: !9374, file: !9375, line: 365, column: 6)
!9412 = !DILocation(line: 365, column: 6, scope: !9411, inlinedAt: !9379)
!9413 = !DILocation(line: 365, column: 6, scope: !9374, inlinedAt: !9379)
!9414 = !DILocation(line: 366, column: 12, scope: !9415, inlinedAt: !9379)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !9375, line: 366, column: 7)
!9416 = distinct !DILexicalBlock(scope: !9411, file: !9375, line: 365, column: 31)
!9417 = !DILocation(line: 366, column: 14, scope: !9415, inlinedAt: !9379)
!9418 = !DILocation(line: 366, column: 7, scope: !9416, inlinedAt: !9379)
!9419 = !DILocation(line: 367, column: 4, scope: !9415, inlinedAt: !9379)
!9420 = !DILocation(line: 368, column: 28, scope: !9416, inlinedAt: !9379)
!9421 = !DILocation(line: 368, column: 10, scope: !9416, inlinedAt: !9379)
!9422 = !DILocation(line: 368, column: 3, scope: !9416, inlinedAt: !9379)
!9423 = !DILocation(line: 370, column: 29, scope: !9424, inlinedAt: !9379)
!9424 = distinct !DILexicalBlock(scope: !9411, file: !9375, line: 369, column: 9)
!9425 = !DILocation(line: 370, column: 10, scope: !9424, inlinedAt: !9379)
!9426 = !DILocation(line: 370, column: 3, scope: !9424, inlinedAt: !9379)
!9427 = !DILocation(line: 372, column: 1, scope: !9374, inlinedAt: !9379)
!9428 = !DILocation(line: 2187, column: 3, scope: !9380)
!9429 = !DILocation(line: 2188, column: 3, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !3, line: 2188, column: 3)
!9431 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 2188, column: 3)
!9432 = !DILocation(line: 2188, column: 3, scope: !9431)
!9433 = !DILocation(line: 2189, column: 2, scope: !9380)
!9434 = !DILocation(line: 2191, column: 6, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9372, file: !3, line: 2191, column: 6)
!9436 = !DILocation(line: 2191, column: 6, scope: !9372)
!9437 = !DILocation(line: 2192, column: 3, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2191, column: 11)
!9439 = !DILocation(line: 2193, column: 3, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 2193, column: 3)
!9441 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 2193, column: 3)
!9442 = !DILocation(line: 2193, column: 3, scope: !9441)
!9443 = !DILocation(line: 2194, column: 2, scope: !9438)
!9444 = !DILocation(line: 2196, column: 9, scope: !9372)
!9445 = !DILocation(line: 2196, column: 2, scope: !9372)
!9446 = !DILocation(line: 2197, column: 1, scope: !9372)
!9447 = distinct !DISubprogram(name: "mmc_detect_card_removed", scope: !3, file: !3, line: 2199, type: !4975, scopeLine: 2200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9448 = !DILocalVariable(name: "host", arg: 1, scope: !9447, file: !3, line: 2199, type: !183)
!9449 = !DILocation(line: 2199, column: 46, scope: !9447)
!9450 = !DILocalVariable(name: "card", scope: !9447, file: !3, line: 2201, type: !4990)
!9451 = !DILocation(line: 2201, column: 19, scope: !9447)
!9452 = !DILocation(line: 2201, column: 26, scope: !9447)
!9453 = !DILocation(line: 2201, column: 32, scope: !9447)
!9454 = !DILocalVariable(name: "ret", scope: !9447, file: !3, line: 2202, type: !240)
!9455 = !DILocation(line: 2202, column: 6, scope: !9447)
!9456 = !DILocalVariable(name: "__ret_warn_on", scope: !9457, file: !3, line: 2204, type: !240)
!9457 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2204, column: 2)
!9458 = !DILocation(line: 2204, column: 2, scope: !9457)
!9459 = !DILocation(line: 2204, column: 2, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 2204, column: 2)
!9461 = !DILocation(line: 2204, column: 2, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 2204, column: 2)
!9463 = !DILocation(line: 2204, column: 2, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2204, column: 2)
!9465 = !DILocation(line: 2204, column: 2, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2204, column: 2)
!9467 = !{i32 -2140437222, i32 -2140437193, i32 -2140437147, i32 -2140437089, i32 -2140437035, i32 -2140436981, i32 -2140436926, i32 -2140436895}
!9468 = !DILocation(line: 2204, column: 2, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2204, column: 2)
!9470 = !{i32 -2140436489, i32 -2140436482, i32 -2140436430, i32 -2140436399, i32 -2140436369}
!9471 = !DILocation(line: 2204, column: 2, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2204, column: 2)
!9473 = !DILocation(line: 2206, column: 7, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2206, column: 6)
!9475 = !DILocation(line: 2206, column: 6, scope: !9447)
!9476 = !DILocation(line: 2207, column: 3, scope: !9474)
!9477 = !DILocation(line: 2209, column: 29, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2209, column: 6)
!9479 = !DILocation(line: 2209, column: 7, scope: !9478)
!9480 = !DILocation(line: 2209, column: 6, scope: !9447)
!9481 = !DILocation(line: 2210, column: 3, scope: !9478)
!9482 = !DILocation(line: 2212, column: 8, scope: !9447)
!9483 = !DILocation(line: 0, scope: !9447)
!9484 = !DILocation(line: 2212, column: 6, scope: !9447)
!9485 = !DILocation(line: 2217, column: 7, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2217, column: 6)
!9487 = !DILocation(line: 2217, column: 13, scope: !9486)
!9488 = !DILocation(line: 2217, column: 27, scope: !9486)
!9489 = !DILocation(line: 2217, column: 32, scope: !9486)
!9490 = !DILocation(line: 2217, column: 38, scope: !9486)
!9491 = !DILocation(line: 2217, column: 43, scope: !9486)
!9492 = !DILocation(line: 2217, column: 6, scope: !9447)
!9493 = !DILocation(line: 2218, column: 10, scope: !9486)
!9494 = !DILocation(line: 2218, column: 3, scope: !9486)
!9495 = !DILocation(line: 2220, column: 2, scope: !9447)
!9496 = !DILocation(line: 2220, column: 8, scope: !9447)
!9497 = !DILocation(line: 2220, column: 22, scope: !9447)
!9498 = !DILocation(line: 2221, column: 7, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 2221, column: 6)
!9500 = !DILocation(line: 2221, column: 6, scope: !9447)
!9501 = !DILocation(line: 2222, column: 34, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 2221, column: 12)
!9503 = !DILocation(line: 2222, column: 9, scope: !9502)
!9504 = !DILocation(line: 2222, column: 7, scope: !9502)
!9505 = !DILocation(line: 2223, column: 7, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 2223, column: 7)
!9507 = !DILocation(line: 2223, column: 11, scope: !9506)
!9508 = !DILocation(line: 2223, column: 15, scope: !9506)
!9509 = !DILocation(line: 2223, column: 21, scope: !9506)
!9510 = !DILocation(line: 2223, column: 26, scope: !9506)
!9511 = !DILocation(line: 2223, column: 7, scope: !9502)
!9512 = !DILocation(line: 2228, column: 25, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 2223, column: 49)
!9514 = !DILocation(line: 2228, column: 31, scope: !9513)
!9515 = !DILocation(line: 2228, column: 4, scope: !9513)
!9516 = !DILocation(line: 2229, column: 23, scope: !9513)
!9517 = !DILocation(line: 2229, column: 4, scope: !9513)
!9518 = !DILocation(line: 2230, column: 3, scope: !9513)
!9519 = !DILocation(line: 2231, column: 2, scope: !9502)
!9520 = !DILocation(line: 2233, column: 9, scope: !9447)
!9521 = !DILocation(line: 2233, column: 2, scope: !9447)
!9522 = !DILocation(line: 2234, column: 1, scope: !9447)
!9523 = distinct !DISubprogram(name: "mmc_card_is_removable", scope: !185, file: !185, line: 552, type: !4975, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9524 = !DILocalVariable(name: "host", arg: 1, scope: !9523, file: !185, line: 552, type: !183)
!9525 = !DILocation(line: 552, column: 58, scope: !9523)
!9526 = !DILocation(line: 554, column: 11, scope: !9523)
!9527 = !DILocation(line: 554, column: 17, scope: !9523)
!9528 = !DILocation(line: 554, column: 22, scope: !9523)
!9529 = !DILocation(line: 554, column: 9, scope: !9523)
!9530 = !DILocation(line: 554, column: 2, scope: !9523)
!9531 = distinct !DISubprogram(name: "mmc_rescan", scope: !3, file: !3, line: 2237, type: !1087, scopeLine: 2238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9532 = !DILocalVariable(name: "work", arg: 1, scope: !9531, file: !3, line: 2237, type: !1089)
!9533 = !DILocation(line: 2237, column: 37, scope: !9531)
!9534 = !DILocalVariable(name: "host", scope: !9531, file: !3, line: 2239, type: !183)
!9535 = !DILocation(line: 2239, column: 19, scope: !9531)
!9536 = !DILocalVariable(name: "__mptr", scope: !9537, file: !3, line: 2240, type: !182)
!9537 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2240, column: 3)
!9538 = !DILocation(line: 2240, column: 3, scope: !9537)
!9539 = !DILocation(line: 2240, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9537, file: !3, line: 2240, column: 3)
!9541 = !DILocalVariable(name: "i", scope: !9531, file: !3, line: 2241, type: !240)
!9542 = !DILocation(line: 2241, column: 6, scope: !9531)
!9543 = !DILocation(line: 2243, column: 6, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2243, column: 6)
!9545 = !DILocation(line: 2243, column: 12, scope: !9544)
!9546 = !DILocation(line: 2243, column: 6, scope: !9531)
!9547 = !DILocation(line: 2244, column: 3, scope: !9544)
!9548 = !DILocation(line: 2247, column: 29, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2247, column: 6)
!9550 = !DILocation(line: 2247, column: 7, scope: !9549)
!9551 = !DILocation(line: 2247, column: 35, scope: !9549)
!9552 = !DILocation(line: 2247, column: 38, scope: !9549)
!9553 = !DILocation(line: 2247, column: 44, scope: !9549)
!9554 = !DILocation(line: 2247, column: 6, scope: !9531)
!9555 = !DILocation(line: 2248, column: 3, scope: !9549)
!9556 = !DILocation(line: 2249, column: 2, scope: !9531)
!9557 = !DILocation(line: 2249, column: 8, scope: !9531)
!9558 = !DILocation(line: 2249, column: 23, scope: !9531)
!9559 = !DILocation(line: 2251, column: 6, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2251, column: 6)
!9561 = !DILocation(line: 2251, column: 12, scope: !9560)
!9562 = !DILocation(line: 2251, column: 31, scope: !9560)
!9563 = !DILocation(line: 2251, column: 34, scope: !9560)
!9564 = !DILocation(line: 2251, column: 40, scope: !9560)
!9565 = !DILocation(line: 2251, column: 45, scope: !9560)
!9566 = !DILocation(line: 2251, column: 6, scope: !9531)
!9567 = !DILocation(line: 2252, column: 18, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 2251, column: 57)
!9569 = !DILocation(line: 2252, column: 3, scope: !9568)
!9570 = !DILocation(line: 2253, column: 3, scope: !9568)
!9571 = !DILocation(line: 2253, column: 9, scope: !9568)
!9572 = !DILocation(line: 2253, column: 14, scope: !9568)
!9573 = !DILocation(line: 2253, column: 25, scope: !9568)
!9574 = !DILocation(line: 2254, column: 20, scope: !9568)
!9575 = !DILocation(line: 2254, column: 3, scope: !9568)
!9576 = !DILocation(line: 2255, column: 3, scope: !9568)
!9577 = !DILocation(line: 2255, column: 9, scope: !9568)
!9578 = !DILocation(line: 2255, column: 28, scope: !9568)
!9579 = !DILocation(line: 2256, column: 2, scope: !9568)
!9580 = !DILocation(line: 2258, column: 14, scope: !9531)
!9581 = !DILocation(line: 2258, column: 2, scope: !9531)
!9582 = !DILocation(line: 2261, column: 6, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2261, column: 6)
!9584 = !DILocation(line: 2261, column: 12, scope: !9583)
!9585 = !DILocation(line: 2261, column: 20, scope: !9583)
!9586 = !DILocation(line: 2261, column: 24, scope: !9583)
!9587 = !DILocation(line: 2261, column: 30, scope: !9583)
!9588 = !DILocation(line: 2261, column: 6, scope: !9531)
!9589 = !DILocation(line: 2262, column: 3, scope: !9583)
!9590 = !DILocation(line: 2262, column: 9, scope: !9583)
!9591 = !DILocation(line: 2262, column: 18, scope: !9583)
!9592 = !DILocation(line: 2262, column: 25, scope: !9583)
!9593 = !DILocation(line: 2264, column: 2, scope: !9531)
!9594 = !DILocation(line: 2264, column: 8, scope: !9531)
!9595 = !DILocation(line: 2264, column: 22, scope: !9531)
!9596 = !DILocation(line: 2270, column: 14, scope: !9531)
!9597 = !DILocation(line: 2270, column: 2, scope: !9531)
!9598 = !DILocation(line: 2271, column: 14, scope: !9531)
!9599 = !DILocation(line: 2271, column: 2, scope: !9531)
!9600 = !DILocation(line: 2274, column: 6, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2274, column: 6)
!9602 = !DILocation(line: 2274, column: 12, scope: !9601)
!9603 = !DILocation(line: 2274, column: 20, scope: !9601)
!9604 = !DILocation(line: 2274, column: 6, scope: !9531)
!9605 = !DILocation(line: 2275, column: 15, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 2274, column: 29)
!9607 = !DILocation(line: 2275, column: 3, scope: !9606)
!9608 = !DILocation(line: 2276, column: 3, scope: !9606)
!9609 = !DILocation(line: 2283, column: 14, scope: !9531)
!9610 = !DILocation(line: 2283, column: 2, scope: !9531)
!9611 = !DILocation(line: 2285, column: 17, scope: !9531)
!9612 = !DILocation(line: 2285, column: 2, scope: !9531)
!9613 = !DILocation(line: 2286, column: 28, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2286, column: 6)
!9615 = !DILocation(line: 2286, column: 6, scope: !9614)
!9616 = !DILocation(line: 2286, column: 34, scope: !9614)
!9617 = !DILocation(line: 2286, column: 37, scope: !9614)
!9618 = !DILocation(line: 2286, column: 43, scope: !9614)
!9619 = !DILocation(line: 2286, column: 48, scope: !9614)
!9620 = !DILocation(line: 2286, column: 55, scope: !9614)
!9621 = !DILocation(line: 2287, column: 4, scope: !9614)
!9622 = !DILocation(line: 2287, column: 10, scope: !9614)
!9623 = !DILocation(line: 2287, column: 15, scope: !9614)
!9624 = !DILocation(line: 2287, column: 22, scope: !9614)
!9625 = !DILocation(line: 2287, column: 28, scope: !9614)
!9626 = !DILocation(line: 2286, column: 6, scope: !9531)
!9627 = !DILocation(line: 2288, column: 17, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2287, column: 34)
!9629 = !DILocation(line: 2288, column: 3, scope: !9628)
!9630 = !DILocation(line: 2289, column: 20, scope: !9628)
!9631 = !DILocation(line: 2289, column: 3, scope: !9628)
!9632 = !DILocation(line: 2290, column: 3, scope: !9628)
!9633 = !DILocation(line: 2293, column: 9, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2293, column: 2)
!9635 = !DILocation(line: 2293, column: 7, scope: !9634)
!9636 = !DILocation(line: 2293, column: 14, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 2293, column: 2)
!9638 = !DILocation(line: 2293, column: 16, scope: !9637)
!9639 = !DILocation(line: 2293, column: 2, scope: !9634)
!9640 = !DILocalVariable(name: "freq", scope: !9641, file: !3, line: 2294, type: !7)
!9641 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 2293, column: 42)
!9642 = !DILocation(line: 2294, column: 16, scope: !9641)
!9643 = !DILocation(line: 2294, column: 29, scope: !9641)
!9644 = !DILocation(line: 2294, column: 23, scope: !9641)
!9645 = !DILocation(line: 2295, column: 7, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 2295, column: 7)
!9647 = !DILocation(line: 2295, column: 14, scope: !9646)
!9648 = !DILocation(line: 2295, column: 20, scope: !9646)
!9649 = !DILocation(line: 2295, column: 12, scope: !9646)
!9650 = !DILocation(line: 2295, column: 7, scope: !9641)
!9651 = !DILocation(line: 2296, column: 8, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 2296, column: 8)
!9653 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 2295, column: 27)
!9654 = !DILocation(line: 2296, column: 10, scope: !9652)
!9655 = !DILocation(line: 2296, column: 14, scope: !9652)
!9656 = !DILocation(line: 2296, column: 8, scope: !9653)
!9657 = !DILocation(line: 2297, column: 5, scope: !9652)
!9658 = !DILocation(line: 2298, column: 11, scope: !9653)
!9659 = !DILocation(line: 2298, column: 17, scope: !9653)
!9660 = !DILocation(line: 2298, column: 9, scope: !9653)
!9661 = !DILocation(line: 2299, column: 3, scope: !9653)
!9662 = !DILocation(line: 2300, column: 28, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 2300, column: 7)
!9664 = !DILocalVariable(name: "__UNIQUE_ID___x309", scope: !9665, file: !3, line: 2300, type: !7)
!9665 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 2300, column: 34)
!9666 = !DILocation(line: 2300, column: 34, scope: !9665)
!9667 = !DILocalVariable(name: "__UNIQUE_ID___y310", scope: !9665, file: !3, line: 2300, type: !7)
!9668 = !DILocation(line: 2300, column: 8, scope: !9663)
!9669 = !DILocation(line: 2300, column: 7, scope: !9641)
!9670 = !DILocation(line: 2301, column: 4, scope: !9663)
!9671 = !DILocation(line: 2302, column: 13, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 2302, column: 7)
!9673 = !DILocation(line: 2302, column: 7, scope: !9672)
!9674 = !DILocation(line: 2302, column: 19, scope: !9672)
!9675 = !DILocation(line: 2302, column: 25, scope: !9672)
!9676 = !DILocation(line: 2302, column: 16, scope: !9672)
!9677 = !DILocation(line: 2302, column: 7, scope: !9641)
!9678 = !DILocation(line: 2303, column: 4, scope: !9672)
!9679 = !DILocation(line: 2304, column: 2, scope: !9641)
!9680 = !DILocation(line: 2293, column: 38, scope: !9637)
!9681 = !DILocation(line: 2293, column: 2, scope: !9637)
!9682 = distinct !{!9682, !9639, !9683}
!9683 = !DILocation(line: 2304, column: 2, scope: !9634)
!9684 = !DILocation(line: 2305, column: 19, scope: !9531)
!9685 = !DILocation(line: 2305, column: 2, scope: !9531)
!9686 = !DILabel(scope: !9531, name: "out", file: !3, line: 2307)
!9687 = !DILocation(line: 2307, column: 2, scope: !9531)
!9688 = !DILocation(line: 2308, column: 6, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9531, file: !3, line: 2308, column: 6)
!9690 = !DILocation(line: 2308, column: 12, scope: !9689)
!9691 = !DILocation(line: 2308, column: 17, scope: !9689)
!9692 = !DILocation(line: 2308, column: 6, scope: !9531)
!9693 = !DILocation(line: 2309, column: 30, scope: !9689)
!9694 = !DILocation(line: 2309, column: 36, scope: !9689)
!9695 = !DILocation(line: 2309, column: 3, scope: !9689)
!9696 = !DILocation(line: 2310, column: 1, scope: !9531)
!9697 = distinct !DISubprogram(name: "mmc_claim_host", scope: !5320, file: !5320, line: 134, type: !4984, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9698 = !DILocalVariable(name: "host", arg: 1, scope: !9697, file: !5320, line: 134, type: !183)
!9699 = !DILocation(line: 134, column: 52, scope: !9697)
!9700 = !DILocation(line: 136, column: 19, scope: !9697)
!9701 = !DILocation(line: 136, column: 2, scope: !9697)
!9702 = !DILocation(line: 137, column: 1, scope: !9697)
!9703 = distinct !DISubprogram(name: "mmc_rescan_try_freq", scope: !3, file: !3, line: 2124, type: !9704, scopeLine: 2125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!240, !183, !7}
!9706 = !DILocalVariable(name: "host", arg: 1, scope: !9703, file: !3, line: 2124, type: !183)
!9707 = !DILocation(line: 2124, column: 49, scope: !9703)
!9708 = !DILocalVariable(name: "freq", arg: 2, scope: !9703, file: !3, line: 2124, type: !7)
!9709 = !DILocation(line: 2124, column: 64, scope: !9703)
!9710 = !DILocation(line: 2126, column: 17, scope: !9703)
!9711 = !DILocation(line: 2126, column: 2, scope: !9703)
!9712 = !DILocation(line: 2126, column: 8, scope: !9703)
!9713 = !DILocation(line: 2126, column: 15, scope: !9703)
!9714 = !DILocation(line: 2128, column: 2, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 2128, column: 2)
!9716 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2128, column: 2)
!9717 = !DILocation(line: 2128, column: 2, scope: !9716)
!9718 = !DILocation(line: 2131, column: 15, scope: !9703)
!9719 = !DILocation(line: 2131, column: 21, scope: !9703)
!9720 = !DILocation(line: 2131, column: 27, scope: !9703)
!9721 = !DILocation(line: 2131, column: 2, scope: !9703)
!9722 = !DILocation(line: 2137, column: 24, scope: !9703)
!9723 = !DILocation(line: 2137, column: 2, scope: !9703)
!9724 = !DILocation(line: 2145, column: 8, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2145, column: 6)
!9726 = !DILocation(line: 2145, column: 14, scope: !9725)
!9727 = !DILocation(line: 2145, column: 20, scope: !9725)
!9728 = !DILocation(line: 2145, column: 6, scope: !9703)
!9729 = !DILocation(line: 2146, column: 14, scope: !9725)
!9730 = !DILocation(line: 2146, column: 3, scope: !9725)
!9731 = !DILocation(line: 2148, column: 14, scope: !9703)
!9732 = !DILocation(line: 2148, column: 2, scope: !9703)
!9733 = !DILocation(line: 2150, column: 8, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2150, column: 6)
!9735 = !DILocation(line: 2150, column: 14, scope: !9734)
!9736 = !DILocation(line: 2150, column: 20, scope: !9734)
!9737 = !DILocation(line: 2150, column: 6, scope: !9703)
!9738 = !DILocation(line: 2151, column: 20, scope: !9734)
!9739 = !DILocation(line: 2151, column: 26, scope: !9734)
!9740 = !DILocation(line: 2151, column: 32, scope: !9734)
!9741 = !DILocation(line: 2151, column: 3, scope: !9734)
!9742 = !DILocation(line: 2154, column: 8, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2154, column: 6)
!9744 = !DILocation(line: 2154, column: 14, scope: !9743)
!9745 = !DILocation(line: 2154, column: 20, scope: !9743)
!9746 = !DILocation(line: 2154, column: 6, scope: !9703)
!9747 = !DILocation(line: 2155, column: 24, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 2155, column: 7)
!9749 = !DILocation(line: 2155, column: 8, scope: !9748)
!9750 = !DILocation(line: 2155, column: 7, scope: !9743)
!9751 = !DILocation(line: 2156, column: 4, scope: !9748)
!9752 = !DILocation(line: 2155, column: 28, scope: !9748)
!9753 = !DILocation(line: 2158, column: 8, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2158, column: 6)
!9755 = !DILocation(line: 2158, column: 14, scope: !9754)
!9756 = !DILocation(line: 2158, column: 20, scope: !9754)
!9757 = !DILocation(line: 2158, column: 6, scope: !9703)
!9758 = !DILocation(line: 2159, column: 22, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9754, file: !3, line: 2159, column: 7)
!9760 = !DILocation(line: 2159, column: 8, scope: !9759)
!9761 = !DILocation(line: 2159, column: 7, scope: !9754)
!9762 = !DILocation(line: 2160, column: 4, scope: !9759)
!9763 = !DILocation(line: 2159, column: 26, scope: !9759)
!9764 = !DILocation(line: 2162, column: 8, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2162, column: 6)
!9766 = !DILocation(line: 2162, column: 14, scope: !9765)
!9767 = !DILocation(line: 2162, column: 20, scope: !9765)
!9768 = !DILocation(line: 2162, column: 6, scope: !9703)
!9769 = !DILocation(line: 2163, column: 23, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 2163, column: 7)
!9771 = !DILocation(line: 2163, column: 8, scope: !9770)
!9772 = !DILocation(line: 2163, column: 7, scope: !9765)
!9773 = !DILocation(line: 2164, column: 4, scope: !9770)
!9774 = !DILocation(line: 2163, column: 27, scope: !9770)
!9775 = !DILocation(line: 2166, column: 16, scope: !9703)
!9776 = !DILocation(line: 2166, column: 2, scope: !9703)
!9777 = !DILocation(line: 2167, column: 2, scope: !9703)
!9778 = !DILocation(line: 2168, column: 1, scope: !9703)
!9779 = distinct !DISubprogram(name: "mmc_start_host", scope: !3, file: !3, line: 2312, type: !4984, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9780 = !DILocalVariable(name: "host", arg: 1, scope: !9779, file: !3, line: 2312, type: !183)
!9781 = !DILocation(line: 2312, column: 38, scope: !9779)
!9782 = !DILocalVariable(name: "__UNIQUE_ID___x313", scope: !9783, file: !3, line: 2314, type: !7)
!9783 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 2314, column: 17)
!9784 = !DILocation(line: 2314, column: 17, scope: !9783)
!9785 = !DILocalVariable(name: "__UNIQUE_ID___x311", scope: !9786, file: !3, line: 2314, type: !1560)
!9786 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 2314, column: 17)
!9787 = !DILocation(line: 2314, column: 17, scope: !9786)
!9788 = !DILocalVariable(name: "__UNIQUE_ID___y312", scope: !9786, file: !3, line: 2314, type: !7)
!9789 = !DILocalVariable(name: "__UNIQUE_ID___y314", scope: !9783, file: !3, line: 2314, type: !7)
!9790 = !DILocation(line: 2314, column: 2, scope: !9779)
!9791 = !DILocation(line: 2314, column: 8, scope: !9779)
!9792 = !DILocation(line: 2314, column: 15, scope: !9779)
!9793 = !DILocation(line: 2315, column: 2, scope: !9779)
!9794 = !DILocation(line: 2315, column: 8, scope: !9779)
!9795 = !DILocation(line: 2315, column: 23, scope: !9779)
!9796 = !DILocation(line: 2317, column: 8, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 2317, column: 6)
!9798 = !DILocation(line: 2317, column: 14, scope: !9797)
!9799 = !DILocation(line: 2317, column: 20, scope: !9797)
!9800 = !DILocation(line: 2317, column: 6, scope: !9779)
!9801 = !DILocation(line: 2318, column: 18, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 2317, column: 52)
!9803 = !DILocation(line: 2318, column: 3, scope: !9802)
!9804 = !DILocation(line: 2319, column: 16, scope: !9802)
!9805 = !DILocation(line: 2319, column: 22, scope: !9802)
!9806 = !DILocation(line: 2319, column: 28, scope: !9802)
!9807 = !DILocation(line: 2319, column: 3, scope: !9802)
!9808 = !DILocation(line: 2320, column: 20, scope: !9802)
!9809 = !DILocation(line: 2320, column: 3, scope: !9802)
!9810 = !DILocation(line: 2321, column: 2, scope: !9802)
!9811 = !DILocation(line: 2323, column: 27, scope: !9779)
!9812 = !DILocation(line: 2323, column: 2, scope: !9779)
!9813 = !DILocation(line: 2324, column: 21, scope: !9779)
!9814 = !DILocation(line: 2324, column: 2, scope: !9779)
!9815 = !DILocation(line: 2325, column: 1, scope: !9779)
!9816 = distinct !DISubprogram(name: "mmc_stop_host", scope: !3, file: !3, line: 2327, type: !4984, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9817 = !DILocalVariable(name: "host", arg: 1, scope: !9816, file: !3, line: 2327, type: !183)
!9818 = !DILocation(line: 2327, column: 37, scope: !9816)
!9819 = !DILocation(line: 2329, column: 6, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 2329, column: 6)
!9821 = !DILocation(line: 2329, column: 12, scope: !9820)
!9822 = !DILocation(line: 2329, column: 17, scope: !9820)
!9823 = !DILocation(line: 2329, column: 24, scope: !9820)
!9824 = !DILocation(line: 2329, column: 6, scope: !9816)
!9825 = !DILocation(line: 2330, column: 24, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9820, file: !3, line: 2329, column: 30)
!9827 = !DILocation(line: 2330, column: 3, scope: !9826)
!9828 = !DILocation(line: 2331, column: 15, scope: !9826)
!9829 = !DILocation(line: 2331, column: 21, scope: !9826)
!9830 = !DILocation(line: 2331, column: 26, scope: !9826)
!9831 = !DILocation(line: 2331, column: 3, scope: !9826)
!9832 = !DILocation(line: 2332, column: 2, scope: !9826)
!9833 = !DILocation(line: 2334, column: 2, scope: !9816)
!9834 = !DILocation(line: 2334, column: 8, scope: !9816)
!9835 = !DILocation(line: 2334, column: 23, scope: !9816)
!9836 = !DILocation(line: 2335, column: 28, scope: !9816)
!9837 = !DILocation(line: 2335, column: 34, scope: !9816)
!9838 = !DILocation(line: 2335, column: 2, scope: !9816)
!9839 = !DILocation(line: 2338, column: 2, scope: !9816)
!9840 = !DILocation(line: 2338, column: 8, scope: !9816)
!9841 = !DILocation(line: 2338, column: 17, scope: !9816)
!9842 = !DILocation(line: 2340, column: 14, scope: !9816)
!9843 = !DILocation(line: 2340, column: 2, scope: !9816)
!9844 = !DILocation(line: 2341, column: 6, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 2341, column: 6)
!9846 = !DILocation(line: 2341, column: 12, scope: !9845)
!9847 = !DILocation(line: 2341, column: 20, scope: !9845)
!9848 = !DILocation(line: 2341, column: 24, scope: !9845)
!9849 = !DILocation(line: 2341, column: 30, scope: !9845)
!9850 = !DILocation(line: 2341, column: 6, scope: !9816)
!9851 = !DILocation(line: 2343, column: 3, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 2341, column: 40)
!9853 = !DILocation(line: 2343, column: 9, scope: !9852)
!9854 = !DILocation(line: 2343, column: 18, scope: !9852)
!9855 = !DILocation(line: 2343, column: 25, scope: !9852)
!9856 = !DILocation(line: 2344, column: 18, scope: !9852)
!9857 = !DILocation(line: 2344, column: 3, scope: !9852)
!9858 = !DILocation(line: 2345, column: 18, scope: !9852)
!9859 = !DILocation(line: 2345, column: 3, scope: !9852)
!9860 = !DILocation(line: 2346, column: 17, scope: !9852)
!9861 = !DILocation(line: 2346, column: 3, scope: !9852)
!9862 = !DILocation(line: 2347, column: 20, scope: !9852)
!9863 = !DILocation(line: 2347, column: 3, scope: !9852)
!9864 = !DILocation(line: 2348, column: 15, scope: !9852)
!9865 = !DILocation(line: 2348, column: 3, scope: !9852)
!9866 = !DILocation(line: 2349, column: 3, scope: !9852)
!9867 = !DILocation(line: 2351, column: 14, scope: !9816)
!9868 = !DILocation(line: 2351, column: 2, scope: !9816)
!9869 = !DILocation(line: 2353, column: 17, scope: !9816)
!9870 = !DILocation(line: 2353, column: 2, scope: !9816)
!9871 = !DILocation(line: 2354, column: 16, scope: !9816)
!9872 = !DILocation(line: 2354, column: 2, scope: !9816)
!9873 = !DILocation(line: 2355, column: 19, scope: !9816)
!9874 = !DILocation(line: 2355, column: 2, scope: !9816)
!9875 = !DILocation(line: 2356, column: 1, scope: !9816)
!9876 = distinct !DISubprogram(name: "mmc_register_pm_notifier", scope: !3, file: !3, line: 2420, type: !4984, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9877 = !DILocalVariable(name: "host", arg: 1, scope: !9876, file: !3, line: 2420, type: !183)
!9878 = !DILocation(line: 2420, column: 48, scope: !9876)
!9879 = !DILocation(line: 2422, column: 2, scope: !9876)
!9880 = !DILocation(line: 2422, column: 8, scope: !9876)
!9881 = !DILocation(line: 2422, column: 18, scope: !9876)
!9882 = !DILocation(line: 2422, column: 32, scope: !9876)
!9883 = !DILocation(line: 2423, column: 24, scope: !9876)
!9884 = !DILocation(line: 2423, column: 30, scope: !9876)
!9885 = !DILocation(line: 2423, column: 2, scope: !9876)
!9886 = !DILocation(line: 2424, column: 1, scope: !9876)
!9887 = distinct !DISubprogram(name: "mmc_pm_notify", scope: !3, file: !3, line: 2363, type: !5257, scopeLine: 2365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9888 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !9889)
!9889 = distinct !DILocation(line: 2412, column: 3, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 2371, column: 16)
!9891 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !9889)
!9892 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !9893)
!9893 = distinct !DILocation(line: 2410, column: 3, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 2410, column: 3)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 2410, column: 3)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2410, column: 3)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 2410, column: 3)
!9898 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2410, column: 3)
!9899 = !DILocation(line: 407, column: 64, scope: !6592, inlinedAt: !9900)
!9900 = distinct !DILocation(line: 2377, column: 3, scope: !9890)
!9901 = !DILocation(line: 407, column: 84, scope: !6592, inlinedAt: !9900)
!9902 = !DILocation(line: 327, column: 67, scope: !6618, inlinedAt: !9903)
!9903 = distinct !DILocation(line: 2375, column: 3, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 2375, column: 3)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2375, column: 3)
!9906 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 2375, column: 3)
!9907 = distinct !DILexicalBlock(scope: !9908, file: !3, line: 2375, column: 3)
!9908 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2375, column: 3)
!9909 = !DILocalVariable(name: "notify_block", arg: 1, scope: !9887, file: !3, line: 2363, type: !5259)
!9910 = !DILocation(line: 2363, column: 49, scope: !9887)
!9911 = !DILocalVariable(name: "mode", arg: 2, scope: !9887, file: !3, line: 2364, type: !305)
!9912 = !DILocation(line: 2364, column: 18, scope: !9887)
!9913 = !DILocalVariable(name: "unused", arg: 3, scope: !9887, file: !3, line: 2364, type: !182)
!9914 = !DILocation(line: 2364, column: 30, scope: !9887)
!9915 = !DILocalVariable(name: "host", scope: !9887, file: !3, line: 2366, type: !183)
!9916 = !DILocation(line: 2366, column: 19, scope: !9887)
!9917 = !DILocalVariable(name: "__mptr", scope: !9918, file: !3, line: 2366, type: !182)
!9918 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 2366, column: 26)
!9919 = !DILocation(line: 2366, column: 26, scope: !9918)
!9920 = !DILocation(line: 2366, column: 26, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 2366, column: 26)
!9922 = !DILocalVariable(name: "flags", scope: !9887, file: !3, line: 2368, type: !305)
!9923 = !DILocation(line: 2368, column: 16, scope: !9887)
!9924 = !DILocalVariable(name: "err", scope: !9887, file: !3, line: 2369, type: !240)
!9925 = !DILocation(line: 2369, column: 6, scope: !9887)
!9926 = !DILocation(line: 2371, column: 10, scope: !9887)
!9927 = !DILocation(line: 2371, column: 2, scope: !9887)
!9928 = !DILocation(line: 2375, column: 3, scope: !9890)
!9929 = !DILocation(line: 2375, column: 3, scope: !9908)
!9930 = !DILocalVariable(name: "__dummy", scope: !9931, file: !3, line: 2375, type: !305)
!9931 = distinct !DILexicalBlock(scope: !9907, file: !3, line: 2375, column: 3)
!9932 = !DILocation(line: 2375, column: 3, scope: !9931)
!9933 = !DILocalVariable(name: "__dummy2", scope: !9931, file: !3, line: 2375, type: !305)
!9934 = !DILocation(line: 2375, column: 3, scope: !9907)
!9935 = !DILocation(line: 2375, column: 3, scope: !9906)
!9936 = !DILocation(line: 2375, column: 3, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 2375, column: 3)
!9938 = !DILocalVariable(name: "__dummy", scope: !9939, file: !3, line: 2375, type: !305)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 2375, column: 3)
!9940 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 2375, column: 3)
!9941 = !DILocation(line: 2375, column: 3, scope: !9939)
!9942 = !DILocalVariable(name: "__dummy2", scope: !9939, file: !3, line: 2375, type: !305)
!9943 = !DILocation(line: 2375, column: 3, scope: !9940)
!9944 = !DILocation(line: 2375, column: 3, scope: !9905)
!9945 = !{i32 -2140419952}
!9946 = !DILocation(line: 2375, column: 3, scope: !9904)
!9947 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !9903)
!9948 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !9903)
!9949 = !DILocation(line: 2376, column: 3, scope: !9890)
!9950 = !DILocation(line: 2376, column: 9, scope: !9890)
!9951 = !DILocation(line: 2376, column: 24, scope: !9890)
!9952 = !DILocation(line: 2377, column: 27, scope: !9890)
!9953 = !DILocation(line: 2377, column: 33, scope: !9890)
!9954 = !DILocation(line: 2377, column: 39, scope: !9890)
!9955 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !9900)
!9956 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !9900)
!9957 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !9900)
!9958 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !9900)
!9959 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !9900)
!9960 = !DILocation(line: 2378, column: 29, scope: !9890)
!9961 = !DILocation(line: 2378, column: 35, scope: !9890)
!9962 = !DILocation(line: 2378, column: 3, scope: !9890)
!9963 = !DILocation(line: 2380, column: 8, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2380, column: 7)
!9965 = !DILocation(line: 2380, column: 14, scope: !9964)
!9966 = !DILocation(line: 2380, column: 7, scope: !9890)
!9967 = !DILocation(line: 2381, column: 4, scope: !9964)
!9968 = !DILocation(line: 2384, column: 7, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2384, column: 7)
!9970 = !DILocation(line: 2384, column: 13, scope: !9969)
!9971 = !DILocation(line: 2384, column: 22, scope: !9969)
!9972 = !DILocation(line: 2384, column: 7, scope: !9890)
!9973 = !DILocation(line: 2385, column: 10, scope: !9969)
!9974 = !DILocation(line: 2385, column: 16, scope: !9969)
!9975 = !DILocation(line: 2385, column: 25, scope: !9969)
!9976 = !DILocation(line: 2385, column: 37, scope: !9969)
!9977 = !DILocation(line: 2385, column: 8, scope: !9969)
!9978 = !DILocation(line: 2385, column: 4, scope: !9969)
!9979 = !DILocation(line: 2386, column: 8, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2386, column: 7)
!9981 = !DILocation(line: 2386, column: 7, scope: !9890)
!9982 = !DILocation(line: 2387, column: 4, scope: !9980)
!9983 = !DILocation(line: 2389, column: 30, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 2389, column: 7)
!9985 = !DILocation(line: 2389, column: 8, scope: !9984)
!9986 = !DILocation(line: 2389, column: 7, scope: !9890)
!9987 = !DILocation(line: 2390, column: 4, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 2389, column: 37)
!9989 = !DILocation(line: 2394, column: 4, scope: !9988)
!9990 = !DILocation(line: 2398, column: 3, scope: !9890)
!9991 = !DILocation(line: 2398, column: 9, scope: !9890)
!9992 = !DILocation(line: 2398, column: 18, scope: !9890)
!9993 = !DILocation(line: 2398, column: 25, scope: !9890)
!9994 = !DILocation(line: 2399, column: 18, scope: !9890)
!9995 = !DILocation(line: 2399, column: 3, scope: !9890)
!9996 = !DILocation(line: 2400, column: 18, scope: !9890)
!9997 = !DILocation(line: 2400, column: 3, scope: !9890)
!9998 = !DILocation(line: 2401, column: 17, scope: !9890)
!9999 = !DILocation(line: 2401, column: 3, scope: !9890)
!10000 = !DILocation(line: 2402, column: 20, scope: !9890)
!10001 = !DILocation(line: 2402, column: 3, scope: !9890)
!10002 = !DILocation(line: 2403, column: 3, scope: !9890)
!10003 = !DILocation(line: 2403, column: 9, scope: !9890)
!10004 = !DILocation(line: 2403, column: 18, scope: !9890)
!10005 = !DILocation(line: 2404, column: 3, scope: !9890)
!10006 = !DILocation(line: 2410, column: 3, scope: !9890)
!10007 = !DILocation(line: 2410, column: 3, scope: !9898)
!10008 = !DILocalVariable(name: "__dummy", scope: !10009, file: !3, line: 2410, type: !305)
!10009 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2410, column: 3)
!10010 = !DILocation(line: 2410, column: 3, scope: !10009)
!10011 = !DILocalVariable(name: "__dummy2", scope: !10009, file: !3, line: 2410, type: !305)
!10012 = !DILocation(line: 2410, column: 3, scope: !9897)
!10013 = !DILocation(line: 2410, column: 3, scope: !9896)
!10014 = !DILocation(line: 2410, column: 3, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 2410, column: 3)
!10016 = !DILocalVariable(name: "__dummy", scope: !10017, file: !3, line: 2410, type: !305)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2410, column: 3)
!10018 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 2410, column: 3)
!10019 = !DILocation(line: 2410, column: 3, scope: !10017)
!10020 = !DILocalVariable(name: "__dummy2", scope: !10017, file: !3, line: 2410, type: !305)
!10021 = !DILocation(line: 2410, column: 3, scope: !10018)
!10022 = !DILocation(line: 2410, column: 3, scope: !9895)
!10023 = !{i32 -2140418716}
!10024 = !DILocation(line: 2410, column: 3, scope: !9894)
!10025 = !DILocation(line: 329, column: 10, scope: !6618, inlinedAt: !9893)
!10026 = !DILocation(line: 329, column: 16, scope: !6618, inlinedAt: !9893)
!10027 = !DILocation(line: 2411, column: 3, scope: !9890)
!10028 = !DILocation(line: 2411, column: 9, scope: !9890)
!10029 = !DILocation(line: 2411, column: 24, scope: !9890)
!10030 = !DILocation(line: 2412, column: 27, scope: !9890)
!10031 = !DILocation(line: 2412, column: 33, scope: !9890)
!10032 = !DILocation(line: 2412, column: 39, scope: !9890)
!10033 = !DILocation(line: 409, column: 2, scope: !6762, inlinedAt: !9889)
!10034 = !DILocation(line: 409, column: 2, scope: !6767, inlinedAt: !9889)
!10035 = !DILocation(line: 409, column: 2, scope: !6768, inlinedAt: !9889)
!10036 = !DILocation(line: 409, column: 2, scope: !6775, inlinedAt: !9889)
!10037 = !DILocation(line: 409, column: 2, scope: !6778, inlinedAt: !9889)
!10038 = !DILocation(line: 2413, column: 22, scope: !9890)
!10039 = !DILocation(line: 2413, column: 3, scope: !9890)
!10040 = !DILocation(line: 2415, column: 2, scope: !9890)
!10041 = !DILocation(line: 2417, column: 2, scope: !9887)
!10042 = distinct !DISubprogram(name: "mmc_unregister_pm_notifier", scope: !3, file: !3, line: 2426, type: !4984, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10043 = !DILocalVariable(name: "host", arg: 1, scope: !10042, file: !3, line: 2426, type: !183)
!10044 = !DILocation(line: 2426, column: 50, scope: !10042)
!10045 = !DILocation(line: 2428, column: 26, scope: !10042)
!10046 = !DILocation(line: 2428, column: 32, scope: !10042)
!10047 = !DILocation(line: 2428, column: 2, scope: !10042)
!10048 = !DILocation(line: 2429, column: 1, scope: !10042)
!10049 = distinct !DISubprogram(name: "mmc_exit", scope: !3, file: !3, line: 2457, type: !3016, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10050 = !DILocation(line: 2459, column: 2, scope: !10049)
!10051 = !DILocation(line: 2460, column: 2, scope: !10049)
!10052 = !DILocation(line: 2461, column: 2, scope: !10049)
!10053 = !DILocation(line: 2462, column: 1, scope: !10049)
!10054 = distinct !DISubprogram(name: "mmc_init", scope: !3, file: !3, line: 2432, type: !10055, scopeLine: 2433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10055 = !DISubroutineType(types: !10056)
!10056 = !{!240}
!10057 = !DILocalVariable(name: "ret", scope: !10054, file: !3, line: 2434, type: !240)
!10058 = !DILocation(line: 2434, column: 6, scope: !10054)
!10059 = !DILocation(line: 2436, column: 8, scope: !10054)
!10060 = !DILocation(line: 2436, column: 6, scope: !10054)
!10061 = !DILocation(line: 2437, column: 6, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 2437, column: 6)
!10063 = !DILocation(line: 2437, column: 6, scope: !10054)
!10064 = !DILocation(line: 2438, column: 10, scope: !10062)
!10065 = !DILocation(line: 2438, column: 3, scope: !10062)
!10066 = !DILocation(line: 2440, column: 8, scope: !10054)
!10067 = !DILocation(line: 2440, column: 6, scope: !10054)
!10068 = !DILocation(line: 2441, column: 6, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 2441, column: 6)
!10070 = !DILocation(line: 2441, column: 6, scope: !10054)
!10071 = !DILocation(line: 2442, column: 3, scope: !10069)
!10072 = !DILocation(line: 2444, column: 8, scope: !10054)
!10073 = !DILocation(line: 2444, column: 6, scope: !10054)
!10074 = !DILocation(line: 2445, column: 6, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10054, file: !3, line: 2445, column: 6)
!10076 = !DILocation(line: 2445, column: 6, scope: !10054)
!10077 = !DILocation(line: 2446, column: 3, scope: !10075)
!10078 = !DILocation(line: 2448, column: 2, scope: !10054)
!10079 = !DILabel(scope: !10054, name: "unregister_host_class", file: !3, line: 2450)
!10080 = !DILocation(line: 2450, column: 1, scope: !10054)
!10081 = !DILocation(line: 2451, column: 2, scope: !10054)
!10082 = !DILabel(scope: !10054, name: "unregister_bus", file: !3, line: 2452)
!10083 = !DILocation(line: 2452, column: 1, scope: !10054)
!10084 = !DILocation(line: 2453, column: 2, scope: !10054)
!10085 = !DILocation(line: 2454, column: 9, scope: !10054)
!10086 = !DILocation(line: 2454, column: 2, scope: !10054)
!10087 = !DILocation(line: 2455, column: 1, scope: !10054)
!10088 = distinct !DISubprogram(name: "sdio_is_io_busy", scope: !10089, file: !10089, line: 26, type: !10090, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10089 = !DIFile(filename: "drivers/mmc/core/sdio_ops.h", directory: "/home/lizy2001/genbc/linux")
!10090 = !DISubroutineType(types: !10091)
!10091 = !{!471, !396, !396}
!10092 = !DILocalVariable(name: "opcode", arg: 1, scope: !10088, file: !10089, line: 26, type: !396)
!10093 = !DILocation(line: 26, column: 40, scope: !10088)
!10094 = !DILocalVariable(name: "arg", arg: 2, scope: !10088, file: !10089, line: 26, type: !396)
!10095 = !DILocation(line: 26, column: 52, scope: !10088)
!10096 = !DILocalVariable(name: "addr", scope: !10088, file: !10089, line: 28, type: !396)
!10097 = !DILocation(line: 28, column: 6, scope: !10088)
!10098 = !DILocation(line: 30, column: 10, scope: !10088)
!10099 = !DILocation(line: 30, column: 14, scope: !10088)
!10100 = !DILocation(line: 30, column: 20, scope: !10088)
!10101 = !DILocation(line: 30, column: 7, scope: !10088)
!10102 = !DILocation(line: 32, column: 10, scope: !10088)
!10103 = !DILocation(line: 32, column: 17, scope: !10088)
!10104 = !DILocation(line: 32, column: 38, scope: !10088)
!10105 = !DILocation(line: 33, column: 4, scope: !10088)
!10106 = !DILocation(line: 33, column: 11, scope: !10088)
!10107 = !DILocation(line: 33, column: 30, scope: !10088)
!10108 = !DILocation(line: 34, column: 5, scope: !10088)
!10109 = !DILocation(line: 34, column: 10, scope: !10088)
!10110 = !DILocation(line: 34, column: 29, scope: !10088)
!10111 = !DILocation(line: 34, column: 32, scope: !10088)
!10112 = !DILocation(line: 34, column: 37, scope: !10088)
!10113 = !DILocation(line: 34, column: 3, scope: !10088)
!10114 = !DILocation(line: 0, scope: !10088)
!10115 = !DILocation(line: 32, column: 2, scope: !10088)
!10116 = distinct !DISubprogram(name: "reinit_completion", scope: !2471, file: !2471, line: 98, type: !5470, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10117 = !DILocalVariable(name: "x", arg: 1, scope: !10116, file: !2471, line: 98, type: !2469)
!10118 = !DILocation(line: 98, column: 57, scope: !10116)
!10119 = !DILocation(line: 100, column: 2, scope: !10116)
!10120 = !DILocation(line: 100, column: 5, scope: !10116)
!10121 = !DILocation(line: 100, column: 10, scope: !10116)
!10122 = !DILocation(line: 101, column: 1, scope: !10116)
!10123 = distinct !DISubprogram(name: "kobject_name", scope: !193, file: !193, line: 88, type: !10124, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10124 = !DISubroutineType(types: !10125)
!10125 = !{!196, !10126}
!10126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10127, size: 64)
!10127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!10128 = !DILocalVariable(name: "kobj", arg: 1, scope: !10123, file: !193, line: 88, type: !10126)
!10129 = !DILocation(line: 88, column: 62, scope: !10123)
!10130 = !DILocation(line: 90, column: 9, scope: !10123)
!10131 = !DILocation(line: 90, column: 15, scope: !10123)
!10132 = !DILocation(line: 90, column: 2, scope: !10123)
!10133 = distinct !DISubprogram(name: "mmc_wait_ongoing_tfr_cmd", scope: !3, file: !3, line: 366, type: !4984, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10134 = !DILocalVariable(name: "host", arg: 1, scope: !10133, file: !3, line: 366, type: !183)
!10135 = !DILocation(line: 366, column: 62, scope: !10133)
!10136 = !DILocalVariable(name: "ongoing_mrq", scope: !10133, file: !3, line: 368, type: !4889)
!10137 = !DILocation(line: 368, column: 22, scope: !10133)
!10138 = !DILocation(line: 368, column: 36, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 368, column: 36)
!10140 = !DILocation(line: 368, column: 36, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 368, column: 36)
!10142 = !DILocation(line: 374, column: 6, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 374, column: 6)
!10144 = !DILocation(line: 374, column: 18, scope: !10143)
!10145 = !DILocation(line: 374, column: 39, scope: !10143)
!10146 = !DILocation(line: 374, column: 52, scope: !10143)
!10147 = !DILocation(line: 374, column: 22, scope: !10143)
!10148 = !DILocation(line: 374, column: 6, scope: !10133)
!10149 = !DILocation(line: 375, column: 24, scope: !10143)
!10150 = !DILocation(line: 375, column: 37, scope: !10143)
!10151 = !DILocation(line: 375, column: 3, scope: !10143)
!10152 = !DILocation(line: 376, column: 1, scope: !10133)
!10153 = distinct !DISubprogram(name: "mmc_wait_done", scope: !3, file: !3, line: 361, type: !4940, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10154 = !DILocalVariable(name: "mrq", arg: 1, scope: !10153, file: !3, line: 361, type: !4889)
!10155 = !DILocation(line: 361, column: 47, scope: !10153)
!10156 = !DILocation(line: 363, column: 12, scope: !10153)
!10157 = !DILocation(line: 363, column: 17, scope: !10153)
!10158 = !DILocation(line: 363, column: 2, scope: !10153)
!10159 = !DILocation(line: 364, column: 1, scope: !10153)
!10160 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6852, file: !6852, line: 646, type: !6853, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10161 = !DILocalVariable(name: "__ret", scope: !10162, file: !6852, line: 648, type: !305)
!10162 = distinct !DILexicalBlock(scope: !10160, file: !6852, line: 648, column: 9)
!10163 = !DILocation(line: 648, column: 9, scope: !10162)
!10164 = !DILocalVariable(name: "__edi", scope: !10162, file: !6852, line: 648, type: !305)
!10165 = !DILocalVariable(name: "__esi", scope: !10162, file: !6852, line: 648, type: !305)
!10166 = !DILocalVariable(name: "__edx", scope: !10162, file: !6852, line: 648, type: !305)
!10167 = !DILocalVariable(name: "__ecx", scope: !10162, file: !6852, line: 648, type: !305)
!10168 = !DILocalVariable(name: "__eax", scope: !10162, file: !6852, line: 648, type: !305)
!10169 = !DILocation(line: 648, column: 9, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !6852, line: 648, column: 9)
!10171 = distinct !DILexicalBlock(scope: !10162, file: !6852, line: 648, column: 9)
!10172 = !{i32 -2145729272, i32 -2145726957, i32 -2145726723, i32 -2145726672, i32 -2145726644, i32 -2145726619, i32 -2145726935, i32 -2145726922, i32 -2145726484, i32 -2145726365, i32 -2145726830, i32 -2145726803, i32 -2145726775, i32 -2145726745}
!10173 = !DILocalVariable(name: "__mask", scope: !10174, file: !6852, line: 648, type: !305)
!10174 = distinct !DILexicalBlock(scope: !10170, file: !6852, line: 648, column: 9)
!10175 = !DILocation(line: 648, column: 9, scope: !10174)
!10176 = !DILocation(line: 648, column: 9, scope: !10171)
!10177 = !DILocation(line: 648, column: 2, scope: !10160)
!10178 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6852, file: !6852, line: 656, type: !3016, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10179 = !DILocalVariable(name: "__edi", scope: !10180, file: !6852, line: 658, type: !305)
!10180 = distinct !DILexicalBlock(scope: !10178, file: !6852, line: 658, column: 2)
!10181 = !DILocation(line: 658, column: 2, scope: !10180)
!10182 = !DILocalVariable(name: "__esi", scope: !10180, file: !6852, line: 658, type: !305)
!10183 = !DILocalVariable(name: "__edx", scope: !10180, file: !6852, line: 658, type: !305)
!10184 = !DILocalVariable(name: "__ecx", scope: !10180, file: !6852, line: 658, type: !305)
!10185 = !DILocalVariable(name: "__eax", scope: !10180, file: !6852, line: 658, type: !305)
!10186 = !{i32 -2145722178, i32 -2145721446, i32 -2145721212, i32 -2145721161, i32 -2145721133, i32 -2145721108, i32 -2145721424, i32 -2145721411, i32 -2145720973, i32 -2145720854, i32 -2145721319, i32 -2145721292, i32 -2145721264, i32 -2145721234}
!10187 = !DILocation(line: 659, column: 1, scope: !10178)
!10188 = distinct !DISubprogram(name: "kasan_check_read", scope: !10189, file: !10189, line: 34, type: !10190, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10189 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10190 = !DISubroutineType(types: !10191)
!10191 = !{!471, !6650, !7}
!10192 = !DILocalVariable(name: "p", arg: 1, scope: !10188, file: !10189, line: 34, type: !6650)
!10193 = !DILocation(line: 34, column: 58, scope: !10188)
!10194 = !DILocalVariable(name: "size", arg: 2, scope: !10188, file: !10189, line: 34, type: !7)
!10195 = !DILocation(line: 34, column: 74, scope: !10188)
!10196 = !DILocation(line: 36, column: 2, scope: !10188)
!10197 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10198, file: !10198, line: 178, type: !10199, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10198 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10199 = !DISubroutineType(types: !10200)
!10200 = !{null, !6650, !302, !240}
!10201 = !DILocalVariable(name: "ptr", arg: 1, scope: !10197, file: !10198, line: 178, type: !6650)
!10202 = !DILocation(line: 178, column: 60, scope: !10197)
!10203 = !DILocalVariable(name: "size", arg: 2, scope: !10197, file: !10198, line: 178, type: !302)
!10204 = !DILocation(line: 178, column: 72, scope: !10197)
!10205 = !DILocalVariable(name: "type", arg: 3, scope: !10197, file: !10198, line: 179, type: !240)
!10206 = !DILocation(line: 179, column: 15, scope: !10197)
!10207 = !DILocation(line: 179, column: 23, scope: !10197)
!10208 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6852, file: !6852, line: 651, type: !10209, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10209 = !DISubroutineType(types: !10210)
!10210 = !{null, !305}
!10211 = !DILocalVariable(name: "f", arg: 1, scope: !10208, file: !6852, line: 651, type: !305)
!10212 = !DILocation(line: 651, column: 65, scope: !10208)
!10213 = !DILocalVariable(name: "__edi", scope: !10214, file: !6852, line: 653, type: !305)
!10214 = distinct !DILexicalBlock(scope: !10208, file: !6852, line: 653, column: 2)
!10215 = !DILocation(line: 653, column: 2, scope: !10214)
!10216 = !DILocalVariable(name: "__esi", scope: !10214, file: !6852, line: 653, type: !305)
!10217 = !DILocalVariable(name: "__edx", scope: !10214, file: !6852, line: 653, type: !305)
!10218 = !DILocalVariable(name: "__ecx", scope: !10214, file: !6852, line: 653, type: !305)
!10219 = !DILocalVariable(name: "__eax", scope: !10214, file: !6852, line: 653, type: !305)
!10220 = !{i32 -2145724805, i32 -2145724055, i32 -2145723821, i32 -2145723770, i32 -2145723742, i32 -2145723717, i32 -2145724033, i32 -2145724020, i32 -2145723582, i32 -2145723463, i32 -2145723928, i32 -2145723901, i32 -2145723873, i32 -2145723843}
!10221 = !DILocation(line: 654, column: 1, scope: !10208)
!10222 = distinct !DISubprogram(name: "of_property_read_u32", scope: !4717, file: !4717, line: 1214, type: !10223, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10223 = !DISubroutineType(types: !10224)
!10224 = !{!240, !10225, !196, !2390}
!10225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10226, size: 64)
!10226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4716)
!10227 = !DILocalVariable(name: "np", arg: 1, scope: !10222, file: !4717, line: 1214, type: !10225)
!10228 = !DILocation(line: 1214, column: 66, scope: !10222)
!10229 = !DILocalVariable(name: "propname", arg: 2, scope: !10222, file: !4717, line: 1215, type: !196)
!10230 = !DILocation(line: 1215, column: 24, scope: !10222)
!10231 = !DILocalVariable(name: "out_value", arg: 3, scope: !10222, file: !4717, line: 1216, type: !2390)
!10232 = !DILocation(line: 1216, column: 17, scope: !10222)
!10233 = !DILocation(line: 1218, column: 36, scope: !10222)
!10234 = !DILocation(line: 1218, column: 40, scope: !10222)
!10235 = !DILocation(line: 1218, column: 50, scope: !10222)
!10236 = !DILocation(line: 1218, column: 9, scope: !10222)
!10237 = !DILocation(line: 1218, column: 2, scope: !10222)
!10238 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !4717, file: !4717, line: 494, type: !10239, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10239 = !DISubroutineType(types: !10240)
!10240 = !{!240, !10225, !196, !2390, !302}
!10241 = !DILocalVariable(name: "np", arg: 1, scope: !10238, file: !4717, line: 494, type: !10225)
!10242 = !DILocation(line: 494, column: 72, scope: !10238)
!10243 = !DILocalVariable(name: "propname", arg: 2, scope: !10238, file: !4717, line: 495, type: !196)
!10244 = !DILocation(line: 495, column: 23, scope: !10238)
!10245 = !DILocalVariable(name: "out_values", arg: 3, scope: !10238, file: !4717, line: 496, type: !2390)
!10246 = !DILocation(line: 496, column: 16, scope: !10238)
!10247 = !DILocalVariable(name: "sz", arg: 4, scope: !10238, file: !4717, line: 496, type: !302)
!10248 = !DILocation(line: 496, column: 35, scope: !10238)
!10249 = !DILocalVariable(name: "ret", scope: !10238, file: !4717, line: 498, type: !240)
!10250 = !DILocation(line: 498, column: 6, scope: !10238)
!10251 = !DILocation(line: 498, column: 48, scope: !10238)
!10252 = !DILocation(line: 498, column: 52, scope: !10238)
!10253 = !DILocation(line: 498, column: 62, scope: !10238)
!10254 = !DILocation(line: 499, column: 13, scope: !10238)
!10255 = !DILocation(line: 498, column: 12, scope: !10238)
!10256 = !DILocation(line: 500, column: 6, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10238, file: !4717, line: 500, column: 6)
!10258 = !DILocation(line: 500, column: 10, scope: !10257)
!10259 = !DILocation(line: 500, column: 6, scope: !10238)
!10260 = !DILocation(line: 501, column: 3, scope: !10257)
!10261 = !DILocation(line: 503, column: 10, scope: !10257)
!10262 = !DILocation(line: 503, column: 3, scope: !10257)
!10263 = !DILocation(line: 504, column: 1, scope: !10238)
!10264 = distinct !DISubprogram(name: "__mmc_release_bus", scope: !3, file: !3, line: 1380, type: !4984, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10265 = !DILocalVariable(name: "host", arg: 1, scope: !10264, file: !3, line: 1380, type: !183)
!10266 = !DILocation(line: 1380, column: 48, scope: !10264)
!10267 = !DILocalVariable(name: "__ret_warn_on", scope: !10268, file: !3, line: 1382, type: !240)
!10268 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 1382, column: 2)
!10269 = !DILocation(line: 1382, column: 2, scope: !10268)
!10270 = !DILocation(line: 1382, column: 2, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 1382, column: 2)
!10272 = !DILocation(line: 1382, column: 2, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1382, column: 2)
!10274 = !DILocation(line: 1382, column: 2, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 1382, column: 2)
!10276 = !DILocation(line: 1382, column: 2, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 1382, column: 2)
!10278 = !{i32 -2140456411, i32 -2140456382, i32 -2140456336, i32 -2140456278, i32 -2140456224, i32 -2140456170, i32 -2140456115, i32 -2140456084}
!10279 = !DILocation(line: 1382, column: 2, scope: !10280)
!10280 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 1382, column: 2)
!10281 = !{i32 -2140455678, i32 -2140455671, i32 -2140455619, i32 -2140455588, i32 -2140455558}
!10282 = !DILocation(line: 1382, column: 2, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 1382, column: 2)
!10284 = !DILocation(line: 1384, column: 2, scope: !10264)
!10285 = !DILocation(line: 1384, column: 8, scope: !10264)
!10286 = !DILocation(line: 1384, column: 16, scope: !10264)
!10287 = !DILocation(line: 1385, column: 1, scope: !10264)
!10288 = distinct !DISubprogram(name: "queue_delayed_work", scope: !141, file: !141, line: 518, type: !10289, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10289 = !DISubroutineType(types: !10290)
!10290 = !{!471, !1092, !8225, !305}
!10291 = !DILocalVariable(name: "wq", arg: 1, scope: !10288, file: !141, line: 518, type: !1092)
!10292 = !DILocation(line: 518, column: 64, scope: !10288)
!10293 = !DILocalVariable(name: "dwork", arg: 2, scope: !10288, file: !141, line: 519, type: !8225)
!10294 = !DILocation(line: 519, column: 32, scope: !10288)
!10295 = !DILocalVariable(name: "delay", arg: 3, scope: !10288, file: !141, line: 520, type: !305)
!10296 = !DILocation(line: 520, column: 25, scope: !10288)
!10297 = !DILocation(line: 522, column: 49, scope: !10288)
!10298 = !DILocation(line: 522, column: 53, scope: !10288)
!10299 = !DILocation(line: 522, column: 60, scope: !10288)
!10300 = !DILocation(line: 522, column: 9, scope: !10288)
!10301 = !DILocation(line: 522, column: 2, scope: !10288)
!10302 = distinct !DISubprogram(name: "mmc_erase_timeout", scope: !3, file: !3, line: 1628, type: !10303, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10303 = !DISubroutineType(types: !10304)
!10304 = !{!7, !4990, !7, !7}
!10305 = !DILocalVariable(name: "card", arg: 1, scope: !10302, file: !3, line: 1628, type: !4990)
!10306 = !DILocation(line: 1628, column: 56, scope: !10302)
!10307 = !DILocalVariable(name: "arg", arg: 2, scope: !10302, file: !3, line: 1629, type: !7)
!10308 = !DILocation(line: 1629, column: 24, scope: !10302)
!10309 = !DILocalVariable(name: "qty", arg: 3, scope: !10302, file: !3, line: 1630, type: !7)
!10310 = !DILocation(line: 1630, column: 24, scope: !10302)
!10311 = !DILocation(line: 1632, column: 6, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 1632, column: 6)
!10313 = !DILocation(line: 1632, column: 6, scope: !10302)
!10314 = !DILocation(line: 1633, column: 31, scope: !10312)
!10315 = !DILocation(line: 1633, column: 37, scope: !10312)
!10316 = !DILocation(line: 1633, column: 42, scope: !10312)
!10317 = !DILocation(line: 1633, column: 10, scope: !10312)
!10318 = !DILocation(line: 1633, column: 3, scope: !10312)
!10319 = !DILocation(line: 1635, column: 32, scope: !10312)
!10320 = !DILocation(line: 1635, column: 38, scope: !10312)
!10321 = !DILocation(line: 1635, column: 43, scope: !10312)
!10322 = !DILocation(line: 1635, column: 10, scope: !10312)
!10323 = !DILocation(line: 1635, column: 3, scope: !10312)
!10324 = !DILocation(line: 1636, column: 1, scope: !10302)
!10325 = distinct !DISubprogram(name: "mmc_sd_erase_timeout", scope: !3, file: !3, line: 1597, type: !10303, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10326 = !DILocalVariable(name: "card", arg: 1, scope: !10325, file: !3, line: 1597, type: !4990)
!10327 = !DILocation(line: 1597, column: 59, scope: !10325)
!10328 = !DILocalVariable(name: "arg", arg: 2, scope: !10325, file: !3, line: 1598, type: !7)
!10329 = !DILocation(line: 1598, column: 20, scope: !10325)
!10330 = !DILocalVariable(name: "qty", arg: 3, scope: !10325, file: !3, line: 1599, type: !7)
!10331 = !DILocation(line: 1599, column: 20, scope: !10325)
!10332 = !DILocalVariable(name: "erase_timeout", scope: !10325, file: !3, line: 1601, type: !7)
!10333 = !DILocation(line: 1601, column: 15, scope: !10325)
!10334 = !DILocation(line: 1606, column: 6, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 1606, column: 6)
!10336 = !DILocation(line: 1606, column: 10, scope: !10335)
!10337 = !DILocation(line: 1606, column: 6, scope: !10325)
!10338 = !DILocation(line: 1607, column: 3, scope: !10335)
!10339 = !DILocation(line: 1609, column: 6, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 1609, column: 6)
!10341 = !DILocation(line: 1609, column: 12, scope: !10340)
!10342 = !DILocation(line: 1609, column: 16, scope: !10340)
!10343 = !DILocation(line: 1609, column: 6, scope: !10325)
!10344 = !DILocation(line: 1611, column: 19, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 1609, column: 31)
!10346 = !DILocation(line: 1611, column: 25, scope: !10345)
!10347 = !DILocation(line: 1611, column: 29, scope: !10345)
!10348 = !DILocation(line: 1611, column: 45, scope: !10345)
!10349 = !DILocation(line: 1611, column: 43, scope: !10345)
!10350 = !DILocation(line: 1612, column: 5, scope: !10345)
!10351 = !DILocation(line: 1612, column: 11, scope: !10345)
!10352 = !DILocation(line: 1612, column: 15, scope: !10345)
!10353 = !DILocation(line: 1611, column: 49, scope: !10345)
!10354 = !DILocation(line: 1611, column: 17, scope: !10345)
!10355 = !DILocation(line: 1613, column: 2, scope: !10345)
!10356 = !DILocation(line: 1618, column: 25, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10340, file: !3, line: 1613, column: 9)
!10358 = !DILocation(line: 1618, column: 23, scope: !10357)
!10359 = !DILocation(line: 1618, column: 17, scope: !10357)
!10360 = !DILocation(line: 1622, column: 6, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 1622, column: 6)
!10362 = !DILocation(line: 1622, column: 20, scope: !10361)
!10363 = !DILocation(line: 1622, column: 6, scope: !10325)
!10364 = !DILocation(line: 1623, column: 17, scope: !10361)
!10365 = !DILocation(line: 1623, column: 3, scope: !10361)
!10366 = !DILocation(line: 1625, column: 9, scope: !10325)
!10367 = !DILocation(line: 1625, column: 2, scope: !10325)
!10368 = !DILocation(line: 1626, column: 1, scope: !10325)
!10369 = distinct !DISubprogram(name: "mmc_mmc_erase_timeout", scope: !3, file: !3, line: 1533, type: !10303, scopeLine: 1535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10370 = !DILocalVariable(name: "card", arg: 1, scope: !10369, file: !3, line: 1533, type: !4990)
!10371 = !DILocation(line: 1533, column: 60, scope: !10369)
!10372 = !DILocalVariable(name: "arg", arg: 2, scope: !10369, file: !3, line: 1534, type: !7)
!10373 = !DILocation(line: 1534, column: 28, scope: !10369)
!10374 = !DILocalVariable(name: "qty", arg: 3, scope: !10369, file: !3, line: 1534, type: !7)
!10375 = !DILocation(line: 1534, column: 46, scope: !10369)
!10376 = !DILocalVariable(name: "erase_timeout", scope: !10369, file: !3, line: 1536, type: !7)
!10377 = !DILocation(line: 1536, column: 15, scope: !10369)
!10378 = !DILocation(line: 1538, column: 6, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 1538, column: 6)
!10380 = !DILocation(line: 1538, column: 10, scope: !10379)
!10381 = !DILocation(line: 1538, column: 29, scope: !10379)
!10382 = !DILocation(line: 1539, column: 7, scope: !10379)
!10383 = !DILocation(line: 1539, column: 11, scope: !10379)
!10384 = !DILocation(line: 1539, column: 27, scope: !10379)
!10385 = !DILocation(line: 1539, column: 30, scope: !10379)
!10386 = !DILocation(line: 1539, column: 36, scope: !10379)
!10387 = !DILocation(line: 1539, column: 44, scope: !10379)
!10388 = !DILocation(line: 1539, column: 48, scope: !10379)
!10389 = !DILocation(line: 1538, column: 6, scope: !10369)
!10390 = !DILocation(line: 1540, column: 19, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1539, column: 55)
!10392 = !DILocation(line: 1540, column: 25, scope: !10391)
!10393 = !DILocation(line: 1540, column: 33, scope: !10391)
!10394 = !DILocation(line: 1540, column: 17, scope: !10391)
!10395 = !DILocation(line: 1541, column: 2, scope: !10391)
!10396 = !DILocation(line: 1541, column: 13, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1541, column: 13)
!10398 = !DILocation(line: 1541, column: 19, scope: !10397)
!10399 = !DILocation(line: 1541, column: 27, scope: !10397)
!10400 = !DILocation(line: 1541, column: 43, scope: !10397)
!10401 = !DILocation(line: 1541, column: 13, scope: !10379)
!10402 = !DILocation(line: 1543, column: 7, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1543, column: 7)
!10404 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 1541, column: 48)
!10405 = !DILocation(line: 1543, column: 11, scope: !10403)
!10406 = !DILocation(line: 1543, column: 7, scope: !10404)
!10407 = !DILocation(line: 1544, column: 20, scope: !10403)
!10408 = !DILocation(line: 1544, column: 26, scope: !10403)
!10409 = !DILocation(line: 1544, column: 34, scope: !10403)
!10410 = !DILocation(line: 1544, column: 18, scope: !10403)
!10411 = !DILocation(line: 1544, column: 4, scope: !10403)
!10412 = !DILocation(line: 1546, column: 20, scope: !10403)
!10413 = !DILocation(line: 1546, column: 26, scope: !10403)
!10414 = !DILocation(line: 1546, column: 34, scope: !10403)
!10415 = !DILocation(line: 1546, column: 18, scope: !10403)
!10416 = !DILocation(line: 1547, column: 2, scope: !10404)
!10417 = !DILocalVariable(name: "mult", scope: !10418, file: !3, line: 1549, type: !7)
!10418 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 1547, column: 9)
!10419 = !DILocation(line: 1549, column: 16, scope: !10418)
!10420 = !DILocation(line: 1549, column: 30, scope: !10418)
!10421 = !DILocation(line: 1549, column: 36, scope: !10418)
!10422 = !DILocation(line: 1549, column: 40, scope: !10418)
!10423 = !DILocation(line: 1549, column: 27, scope: !10418)
!10424 = !DILocalVariable(name: "timeout_clks", scope: !10418, file: !3, line: 1550, type: !7)
!10425 = !DILocation(line: 1550, column: 16, scope: !10418)
!10426 = !DILocation(line: 1550, column: 31, scope: !10418)
!10427 = !DILocation(line: 1550, column: 37, scope: !10418)
!10428 = !DILocation(line: 1550, column: 41, scope: !10418)
!10429 = !DILocation(line: 1550, column: 53, scope: !10418)
!10430 = !DILocation(line: 1550, column: 51, scope: !10418)
!10431 = !DILocalVariable(name: "timeout_us", scope: !10418, file: !3, line: 1551, type: !7)
!10432 = !DILocation(line: 1551, column: 16, scope: !10418)
!10433 = !DILocation(line: 1554, column: 7, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 1554, column: 7)
!10435 = !DILocation(line: 1554, column: 13, scope: !10434)
!10436 = !DILocation(line: 1554, column: 17, scope: !10434)
!10437 = !DILocation(line: 1554, column: 25, scope: !10434)
!10438 = !DILocation(line: 1554, column: 7, scope: !10418)
!10439 = !DILocation(line: 1555, column: 18, scope: !10434)
!10440 = !DILocation(line: 1555, column: 24, scope: !10434)
!10441 = !DILocation(line: 1555, column: 28, scope: !10434)
!10442 = !DILocation(line: 1555, column: 38, scope: !10434)
!10443 = !DILocation(line: 1555, column: 36, scope: !10434)
!10444 = !DILocation(line: 1555, column: 44, scope: !10434)
!10445 = !DILocation(line: 1555, column: 15, scope: !10434)
!10446 = !DILocation(line: 1555, column: 4, scope: !10434)
!10447 = !DILocation(line: 1557, column: 18, scope: !10434)
!10448 = !DILocation(line: 1557, column: 24, scope: !10434)
!10449 = !DILocation(line: 1557, column: 28, scope: !10434)
!10450 = !DILocation(line: 1557, column: 36, scope: !10434)
!10451 = !DILocation(line: 1557, column: 46, scope: !10434)
!10452 = !DILocation(line: 1557, column: 44, scope: !10434)
!10453 = !DILocation(line: 1557, column: 15, scope: !10434)
!10454 = !DILocation(line: 1563, column: 16, scope: !10418)
!10455 = !DILocation(line: 1564, column: 18, scope: !10418)
!10456 = !DILocation(line: 1564, column: 31, scope: !10418)
!10457 = !DILocation(line: 1565, column: 11, scope: !10418)
!10458 = !DILocation(line: 1565, column: 17, scope: !10418)
!10459 = !DILocation(line: 1565, column: 23, scope: !10418)
!10460 = !DILocation(line: 1565, column: 27, scope: !10418)
!10461 = !DILocation(line: 1565, column: 33, scope: !10418)
!10462 = !DILocation(line: 1564, column: 39, scope: !10418)
!10463 = !DILocation(line: 1564, column: 14, scope: !10418)
!10464 = !DILocation(line: 1567, column: 19, scope: !10418)
!10465 = !DILocation(line: 1567, column: 30, scope: !10418)
!10466 = !DILocation(line: 1567, column: 17, scope: !10418)
!10467 = !DILocation(line: 1573, column: 8, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 1573, column: 7)
!10469 = !DILocation(line: 1573, column: 7, scope: !10418)
!10470 = !DILocation(line: 1574, column: 18, scope: !10468)
!10471 = !DILocation(line: 1574, column: 4, scope: !10468)
!10472 = !DILocation(line: 1578, column: 6, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 1578, column: 6)
!10474 = !DILocation(line: 1578, column: 10, scope: !10473)
!10475 = !DILocation(line: 1578, column: 6, scope: !10369)
!10476 = !DILocation(line: 1579, column: 7, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10478, file: !3, line: 1579, column: 7)
!10478 = distinct !DILexicalBlock(scope: !10473, file: !3, line: 1578, column: 29)
!10479 = !DILocation(line: 1579, column: 11, scope: !10477)
!10480 = !DILocation(line: 1579, column: 7, scope: !10478)
!10481 = !DILocation(line: 1580, column: 21, scope: !10477)
!10482 = !DILocation(line: 1580, column: 27, scope: !10477)
!10483 = !DILocation(line: 1580, column: 35, scope: !10477)
!10484 = !DILocation(line: 1580, column: 18, scope: !10477)
!10485 = !DILocation(line: 1580, column: 4, scope: !10477)
!10486 = !DILocation(line: 1582, column: 21, scope: !10477)
!10487 = !DILocation(line: 1582, column: 27, scope: !10477)
!10488 = !DILocation(line: 1582, column: 35, scope: !10477)
!10489 = !DILocation(line: 1582, column: 18, scope: !10477)
!10490 = !DILocation(line: 1583, column: 2, scope: !10478)
!10491 = !DILocation(line: 1585, column: 19, scope: !10369)
!10492 = !DILocation(line: 1585, column: 16, scope: !10369)
!10493 = !DILocation(line: 1591, column: 6, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 1591, column: 6)
!10495 = !DILocation(line: 1591, column: 34, scope: !10494)
!10496 = !DILocation(line: 1591, column: 37, scope: !10494)
!10497 = !DILocation(line: 1591, column: 51, scope: !10494)
!10498 = !DILocation(line: 1591, column: 6, scope: !10369)
!10499 = !DILocation(line: 1592, column: 17, scope: !10494)
!10500 = !DILocation(line: 1592, column: 3, scope: !10494)
!10501 = !DILocation(line: 1594, column: 9, scope: !10369)
!10502 = !DILocation(line: 1594, column: 2, scope: !10369)
!10503 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !9375, file: !9375, line: 308, type: !9376, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10504 = !DILocalVariable(name: "m", arg: 1, scope: !10503, file: !9375, line: 308, type: !1560)
!10505 = !DILocation(line: 308, column: 66, scope: !10503)
!10506 = !DILocation(line: 310, column: 10, scope: !10503)
!10507 = !DILocation(line: 310, column: 12, scope: !10503)
!10508 = !DILocation(line: 310, column: 34, scope: !10503)
!10509 = !DILocation(line: 310, column: 39, scope: !10503)
!10510 = !DILocation(line: 310, column: 2, scope: !10503)
!10511 = distinct !DISubprogram(name: "mmc_hw_reset_for_init", scope: !3, file: !3, line: 2057, type: !4984, scopeLine: 2058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10512 = !DILocalVariable(name: "host", arg: 1, scope: !10511, file: !3, line: 2057, type: !183)
!10513 = !DILocation(line: 2057, column: 52, scope: !10511)
!10514 = !DILocation(line: 2059, column: 19, scope: !10511)
!10515 = !DILocation(line: 2059, column: 2, scope: !10511)
!10516 = !DILocation(line: 2061, column: 8, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 2061, column: 6)
!10518 = !DILocation(line: 2061, column: 14, scope: !10517)
!10519 = !DILocation(line: 2061, column: 19, scope: !10517)
!10520 = !DILocation(line: 2061, column: 39, scope: !10517)
!10521 = !DILocation(line: 2061, column: 43, scope: !10517)
!10522 = !DILocation(line: 2061, column: 49, scope: !10517)
!10523 = !DILocation(line: 2061, column: 54, scope: !10517)
!10524 = !DILocation(line: 2061, column: 6, scope: !10511)
!10525 = !DILocation(line: 2062, column: 3, scope: !10517)
!10526 = !DILocation(line: 2063, column: 2, scope: !10511)
!10527 = !DILocation(line: 2063, column: 8, scope: !10511)
!10528 = !DILocation(line: 2063, column: 13, scope: !10511)
!10529 = !DILocation(line: 2063, column: 22, scope: !10511)
!10530 = !DILocation(line: 2064, column: 1, scope: !10511)
